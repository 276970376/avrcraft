GAS LISTING  			page 1


   1               	 .file "RNDISEthernet.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.18a998172e3fae79,"",@progbits
  10 0000 789C 758F 	 .ascii "x\234u\2179\n\002A\020E_U\217\240 8*\"\203\343\276 \236B\317"
  10      390A 0241 
  10      1045 5F55 
  10      8FA0 2038 
  10      2A22 83E3 
  11 0019 E115 2630 	 .ascii "\341\025&021i3\257\345\265L\264\227\351\001A;\250\277\364\247"
  11      3231 6933 
  11      AFE5 B54C 
  11      B497 E901 
  11      413B A8BF 
  12 002f 1645 F9F5 	 .ascii "\026E\371\365N\022\261D\f8\221\211+\236s\205\266w:F\314Y*\341"
  12      4E12 B144 
  12      0C38 9189 
  12      2B9E 7385 
  12      B677 3A46 
  13 0047 EDC4 11BA 	 .ascii "\355\304\021\272\250\336x\331\207\315+\221\213\244V=\310\205"
  13      A8DE 78D9 
  13      87CD 2B91 
  13      8BA4 563D 
  13      C885 
  14 0059 BE7C A707 	 .ascii "\276|\247\007IG9\224\021c?\242`B)i\320\024f\215H8\207\005K\243"
  14      4947 3994 
  14      1163 3FA2 
  14      6042 2969 
  14      D014 668D 
  15 0073 B5F4 FB39 	 .ascii "\265\364\3739X!\352\033\206{\326l\330b\202\341\003\201\230\247"
  15      5821 EA1B 
  15      867B D66C 
  15      D862 82E1 
  15      0381 98A7 
  16 0087 24E6 42F5 	 .ascii "$\346B\365\247&\313\206\205k\267\t\336\203\273\373s\332\036\016"
  16      A726 CB86 
  16      856B B709 
  16      DE83 BBFB 
  16      73DA 1E0E 
  17 009b 1EE3 E4CC 	 .ascii "\036\343\344\314\026\321\216\262\025\370\007\366M\035h"
  17      16D1 8EB2 
  17      15F8 07F6 
  17      4D1D 68
  18               	 .text
  19               	 .section .gnu.lto_.inline.18a998172e3fae79,"",@progbits
  20 0000 789C 7552 	 .string "x\234uR-O\003A\020}\263\267\334G{\364\016(P\322\203\343\243%\004A\320\b\376"
  20      2D4F 0341 
  20      107D B3B7 
  20      DC47 7BF4 
  20      0E28 50D2 
  21 001e C9FD 0182 	 .string "\311\375\001\202\301\024\002h\004\006\003\222\034\036Q\215B\241\020\200\251\255&!\251D\"Hj\231\275\217r{-'v\367\346\275\231y\373v\004\004&}\227F\272\007\200c\021\204\373r"
  21      C114 0268 
GAS LISTING  			page 2


  21      0406 0392 
  21      1C1E 518D 
  21      42A1 1080 
  22 0059 B31B 2664 	 .ascii "\263\033&d\003\225:\207\314\307\366($\252\331Bq$\3415\030\366"
  22      0395 3A87 
  22      CCC7 F628 
  22      24AA D942 
  22      7124 E135 
  23 006f 7F4E 3598 	 .ascii "\177N5\230\221l\263a\326\230 \372^\231\340\300\366\211@\252\211"
  23      916C B361 
  23      D698 20FA 
  23      5E99 E0C0 
  23      F689 40AA 
  24 0084 EC86 29CC 	 .ascii "\354\206)\314<Y\340\270\250\205\234]{\272\370\023\3442\2128\242"
  24      3C59 E0B8 
  24      A885 9C5D 
  24      7BBA F813 
  24      E432 8A38 
  25 0099 0AFF 7890 	 .ascii "\n\377x\220.%\267\312\341$\354\3032\311@\347\220\316\311\374"
  25      2E25 B7CA 
  25      E124 ECC3 
  25      32C9 40E7 
  25      90CE C9FC 
  26 00ad ECA9 1627 	 .ascii "\354\251\026'\205s\3222\317\341\326~\326\221;\317(\271\2443J"
  26      8573 D232 
  26      CFE1 D67E 
  26      D691 3BCF 
  26      28B9 A433 
  27 00c2 9A66 6179 	 .ascii "\232fay\377Q\2248\246\314\251\376\031\305\374\336\3219\363\220"
  27      FF51 9438 
  27      A6CC A9FE 
  27      19C5 FCDE 
  27      D139 F390 
  28 00d6 46C9 9145 	 .ascii "F\311\221E,\334Q\232`@\006\367\317\026*\303\036\t\320\227%\323"
  28      2CDC 519A 
  28      6040 06F7 
  28      CF16 2AC3 
  28      1E09 D097 
  29 00ec 3515 40AA 	 .ascii "5\025@\252\372\322x\201\346x(\200\247\214\257\277\037\227\215"
  29      FAD2 7881 
  29      E678 2880 
  29      A78C AFBF 
  29      1F97 8D
  30 00ff 5F86 E5A8 	 .ascii "_\206\345\250'\315\205\345\256\255\300j\350f\352O\031\242\252"
  30      27CD 85E5 
  30      AEAD C06A 
  30      E866 EA4F 
  30      19A2 AA
  31 0112 CC76 0747 	 .ascii "\314v\007G\372(\254\302\234*\325[\203\355\360\003$\246'\303\325"
  31      FA28 ACC2 
  31      9C2A D55B 
  31      83ED F003 
  31      24A6 27C3 
  32 0127 199D 269A 	 .ascii "\031\235&\232\317\276I\2108\212\243u\324\333\\,\030|\220.#\325"
  32      CFBE 4988 
  32      388A A375 
  32      D4DB 5C2C 
GAS LISTING  			page 3


  32      187C 902E 
  33 013d B801 43E8 	 .ascii "\270\001C\350\032[c\2216\232o\314\027\215\353\241\030\005\345"
  33      1A5B 6391 
  33      369A 6FCC 
  33      178D EBA1 
  33      1805 E5
  34 0150 74DA 36DB 	 .ascii "t\3326\333yr\363\303&Z\354\253\330\353\237\301|\2300c[\260m\306"
  34      7972 F3C3 
  34      265A ECAB 
  34      D8EB 9FC1 
  34      7C98 3063 
  35 0168 EDD7 7DDD 	 .ascii "\355\327}\335\256m\2047\273\f\264\256o\257\224\372\024 mI\336"
  35      AE6D 8437 
  35      BB0C B4AE 
  35      6FAF 94FA 
  35      1420 6D49 
  36 017d B418 CC93 	 .ascii "\264\030\314\223\013W\302/\267\004U\262"
  36      0B57 C22F 
  36      B704 55B2 
  37               	 .text
  38               	 .section .gnu.lto_.pureconst.18a998172e3fae79,"",@progbits
  39 0000 789C 25C1 	 .ascii "x\234%\301I\016@@\020@\321J\253\005\211\304\024\361\273\264y"
  39      490E 4040 
  39      1040 D14A 
  39      AB05 89C4 
  39      14F1 BBB4 
  40 0015 8838 80E0 	 .ascii "\2108\200\340\376\007\263\360\236\023'\217\374\202\020\241\304"
  40      FE07 B3F0 
  40      9E13 278F 
  40      FC82 10A1 
  40      C4
  41 0026 24A4 9691 	 .ascii "$\244\226\221SPRQkc\236\226@G\317\300\250\023\363\273\310*\333"
  41      5350 5251 
  41      6B63 9E96 
  41      4047 CFC0 
  41      A813 F3BB 
  42 003d BDDB 61E7 	 .ascii "\275\333a\347\365\001\223\204\005\240"
  42      F501 9384 
  42      05A0 
  43               	 .text
  44               	 .section .gnu.lto_et_push8.18a998172e3fae79,"",@progbits
  45 0000 789C 8D50 	 .string "x\234\215P\317KBA\020\236\331\335\367\220H\360/\260\020:E\nAt\354\324\241{`P\020\242F\310\313\036\350\255\203\363\324@\350\"\235\"O\"B\207 O\235\242<E\021\005\2017/\236\372#\272l\263\357\207\225th`\367\333\335\231\357\373fV\200\200\331X\3455F\200eF\264"
  45      CF4B 4241 
  45      109E D9DD 
  45      F790 48F0 
  45      2FB0 103A 
  46 005d 45FB      	 .ascii "E\373"
  47 005f 0DC0 8B09 	 .string "\r\300\213\t!G\031\2409u\227\004\232\227\250\202g\205h\016\200P\023Ram\017\215\206HA\227\350|\322\357\334[\247\003j\221\3265\007\331,\201p\200\260\213\016b\302\0071\323@@\244\361c}\351\202\232C\2557|^\362O\236\213\337\304\0331\234h}uf\307$\024\260\213)P\214=F\033]4\205\0264\211\332\213`\2248\262\274\233\326wP\030\224\257P\177n/\024\260\317C\227Pv\340\322#J\260\373\t|\362\004|\222\201\237\261\227\241\353\0234?\274\007\234\262L\016\364\217\266X^\302(\303\352\215V\3436\036\025\252\250\326\224\262\363V\220\370\217)\223}\312\313\240\022\220V\340\2328\306\266\203j*`M\005l\027E(`\207\002Q\367\245\360\205\233T\376\037\274\2037\f\207\211\"\313\177\307)#\021/\027\253\373\371\343#7WM\037B|s\273R,\027\\'\227/\246\327~\335\326\277"
  47      2147 19A0 
  47      3975 9704 
  47      9A97 A882 
  47      6785 680E 
  48 0160 44BA 7E71 	 .ascii "D\272~q"
  49               	 .text
  50               	 .section .gnu.lto_TCPReceiveSyn.part.0.18a998172e3fae79,"",@progbits
  51 0000 789C 5D51 	 .string "x\234]Q\277KcA\020\376\276\335}\271\247X\204\263\023\025\361\017\320\336\372,l,\2640\240\235I\220\360\210!\244\263\310j<\260P\bv\226\"\212\202\240\215\b^\343/D\013\025\021\005\273tv6\026\202\205\317\331\267\227x\347\360\336\316\316\3147\337\354\267\253\240\360\335\206\344\177#\320#\236)0\250\337\310&\240J\274R\346q\020\266]\037\365\302vh\032\227\235\017\r\3516 \252\201\322\206\325):.\325\217ukW\033\233\317\227\374m\033\266n?\342*#\312\330N\"OLJ\300t\342\324\267\243\370\326\343\373\213\025c\367\355\222\215\343jD\255\320\365\325\030\372F\376\337\270\247l#\216\327^\3036\"\242Q\310r\203\375\320\022\004F\026-\230"
  51      BF4B 6341 
GAS LISTING  			page 4


  51      10FE BEDD 
  51      7DB9 A758 
  51      84B3 1315 
  52 00d0 8BD6 D6FB 	 .string "\213\326\326\373\262\\\227\n\034\241\330\204\254NE\206\201\363\372\n\247!P\242|R\271\302\202D\276\243\324\034\231\241J\240\267\2505v\316~\266h7\022\332,7\205J\254@\316\341]D\244#\246\362\364\335\021\177"
  52      B25C 970A 
  52      1CA1 D884 
  52      AC4E 4586 
  52      81F3 FA0A 
  53 0114 D758 78A9 	 .ascii "\327Xx\251\025\263\334\022`\201\252\340')\237\360<\222\006.q"
  53      15B3 DC12 
  53      6081 AAE0 
  53      2729 9FF0 
  53      3C92 062E 
  54 0129 FE7C F270 	 .ascii "\376|\362p\241ZH\247<\370WvF\204\035\365\352k\324\226j\177V\272"
  54      A15A 48A7 
  54      3CF8 5776 
  54      4684 1DF5 
  54      EA6B D496 
  55 0141 9B40 FD17 	 .ascii "\233@\375\027\253c7\365\026\306\027\200\326\201\302<\375\325"
  55      AB63 37F5 
  55      16C6 1780 
  55      D681 C23C 
  55      FDD5 
  56 0153 0B38 625B 	 .ascii "\0138b[\223\315$\302\356\344q]\305\270\344\023LB%\017\273{\260"
  56      93CD 24C2 
  56      EEE4 715D 
  56      C5B8 E413 
  56      4C42 250F 
  57 016a 4D61 D6CB 	 .ascii "Ma\326\313\207\035\356\342\350\300\216%=6\372kd|\2702\223+\027"
  57      871D EEE2 
  57      E8C0 8E25 
  57      3D36 FA6B 
  57      647C B832 
  58 0181 7395 8169 	 .ascii "s\225\201i\244J\263\345JqV\227s\225O8\243}\211"
  58      A44A B3E5 
  58      4A71 5697 
  58      7395 4F38 
  58      A37D 89
  59               	 .text
  60               	 .section .gnu.lto_extSbyte.part.1.18a998172e3fae79,"",@progbits
  61 0000 789C 8D92 	 .string "x\234\215\222Mh\023A\024\307\337\233\235\335$mS[\275x*R(\"b4~\240\236\274\324C/\"zh@\245\264\311\206&,iL\267\007Q\310\244M!X\260\241V,\352E<\210_\250\267RA#x\260\206Z\275\b\342\241\201\036<\b\202\210\020\005]\337\354n\2661)\230\201\3357\363f~\377\367\237\267\313\200A\343\350\247\347\034\007\230\243\210>@\255\370\226&\0322;2\246,\365\200h\343\037\366\202\350P\220\313l\316\317Qu&*\242\234"
  61      4D68 1341 
  61      14C7 DF9B 
  61      9DDD 246D 
  61      535B BD78 
  62 0092 4256 630A 	 .ascii "BVc\nW1{\026\245\252\277\027n\0131W\231^_f\3717\025Q\024\177"
  62      5731 7B16 
  62      A5AA BF17 
  62      6E0B 3157 
  62      995E 5F66 
  63 00ac AC2C 1A48 	 .ascii "\254,\032H\006\266!\304\021\316\320\002\375v`\222H\343\206%\207"
  63      06B6 21C4 
  63      11CE D002 
  63      FD76 6092 
  63      48E3 8625 
  64 00c1 1585 F912 	 .ascii "\025\205\371\022J\316r\270\276M9h\304JW\257\314\362\351'\242"
  64      4ACE 72B8 
GAS LISTING  			page 5


  64      BE4D 3968 
  64      C44A 57AF 
  64      CCF2 E927 
  65 00d6 202C 2B6B 	 .ascii " ,+k\203\207[\004\253\345\311\276\005\221/Y\3261\003\025\006"
  65      8387 5B04 
  65      ABE5 C9BE 
  65      0591 2F59 
  65      D631 0315 
  66 00eb 031B 5C97 	 .ascii "\003\033\\\227\3031\333(6\202?\312\363\377V\214\264T\261X\372"
  66      C331 DB28 
  66      3682 3FCA 
  66      F3FF 568C 
  66      B454 B158 
  67 0100 3E73 AB0E 	 .ascii ">s\253\016\344\f\222-Z]+_S7@\362ziS\257\315\340\247\231;'\305"
  67      E40C 922D 
  67      5A5D 2B5F 
  67      5337 40F2 
  67      7A69 53AF 
  68 011b 5449 542D 	 .ascii "TIT-\313g[\275\214\377+\371\230\211\212e\375\\\017t\"\304\360"
  68      CB67 5BBD 
  68      8CFF 2BF9 
  68      9889 8A65 
  68      FD5C 0F74 
  69 0132 11F6 1215 	 .ascii "\021\366\022\025\303\007\024\0250P\345\264\270G\013\325\335\324"
  69      C307 1415 
  69      3050 E5B4 
  69      B847 0BD5 
  69      DDD4 
  70 0144 28DE A5E8 	 .ascii "(\336\245\350\3034J\017*\344\351\252;@V\2411Ho\371\307\f\242"
  70      C334 4A0F 
  70      2AE4 E9AA 
  70      3B40 56A1 
  70      3148 6FF9 
  71 015b 26A3 12A1 	 .ascii "&\243\022\241C2\256\300\344r\365\331G\026\303\247\250R\037\360"
  71      4332 AEC0 
  71      E472 F5D9 
  71      4716 C3A7 
  71      A852 1FF0 
  72 016f 26DC C809 	 .ascii "&\334\310\t\321e\240v\021~\321Mi\346sz/M\372\\s\257\341\325\347"
  72      D165 A076 
  72      117E D14D 
  72      69E6 737A 
  72      2F4D FA5C 
  73 0188 5CBB 07C9 	 .string "\\\273\007\311-\255\336|\004\025X\352\261\325\027\237\277Tj\007\231\247\356\367\324\003i:\353\250\007\\\232\260\257\036\243$\345}(\265\370n\253\223\333\r\367\005\215\363\006\266\355\201\207r\0326\260\335\223\356\360\244\203i\344\256t\320\026N\332\245\344\320\335n\313\275\266\355n\315\251/\327w\325\312r\273\354*p'\001\340\251v\306\335_\221\016\031\270\245va\356\365s\341\3057\254\311\250\255\365s\005\246\n\336\2155\302\354\216\242\343k\300\331hE))?\303*\344+\277\365\315|3\367\220\257\316\267j\373~\017\271\312\354\316\032\343\214A\022\247=\tu\235:\321?p\372\2709\252gR\272\031\212Bw4\221\211\016\215L\304\343zfh\330\f\205\0175e\0166e\016t\216\\0\365\361\364\304\370\250\036\013\205\367w\033\303\343ft,\225\322\243fb,\025\n\207\2332\373\202\365\310Q\177\"%ECG\376\002"
  73      2DAD DE7C 
  73      0415 58EA 
  73      B1D5 179F 
  73      BF54 6A07 
  74 0289 EE38 E9   	 .ascii "\3568\351"
  75               	 .text
  76               	 .section .gnu.lto_EndSend.part.2.18a998172e3fae79,"",@progbits
  77 0000 789C 8D90 	 .string "x\234\215\220\261K\303@\024\306\337w\227\324\272H\305\177@\n\342 \024\272X\377"
  77      B14B C340 
  77      14C6 DF77 
  77      97D4 BA48 
  77      C57F 400A 
  78 001b 3BB8 38E8 	 .ascii ";\2708\350\320\202.\332\244T\ti\261q\020\207\\\245\205\342\240"
GAS LISTING  			page 6


  78      D082 2EDA 
  78      A454 0969 
  78      B171 1087 
  78      5CA5 85E2 
  79 0030 A528 884E 	 .ascii "\245(\210N\305Ap\321\315\265\253\203\212\243[\346\016\202\253"
  79      C541 70D1 
  79      CDB5 AB83 
  79      8AA3 5BE6 
  79      0E82 AB
  80 0043 83F1 5D62 	 .ascii "\203\361]b\025\353\342\203\313\367\356\356\375\356\275/\202\004"
  80      15EB E283 
  80      CBF7 EEEE 
  80      FDEE BD2F 
  80      8204 
  81 0055 8DC6 1CAF 	 .ascii "\215\306\034\257c\020\345Ya\022\214\316#'\006D\244\002Rk#)\001"
  81      6310 E559 
  81      6112 8CCE 
  81      2327 0644 
  81      A402 526B 
  82 006c 9D10 C837 	 .ascii "\235\020\3107\204\204\277\016\r\3134\365\224\352\006\255\301"
  82      8484 BF0E 
  82      0DCB 34F5 
  82      94EA 06AD 
  82      C1
  83 007d 1B9A 8781 	 .ascii "\033\232\207\201\352\250\217\320\207\003\3563\005*\203\326x\203"
  83      EAA8 8FD0 
  83      8703 EE33 
  83      052A 83D6 
  83      7883 
  84 008f 6424 02BF 	 .ascii "d$\002\277\033GhG\265O\372\320X\310%R\320\314\277\260n\377\356"
  84      1B47 6847 
  84      B54F FAD0 
  84      58C8 2552 
  84      D0CC BFB0 
  85 00a6 E8D4 6CDD 	 .ascii "\350\324l\335\252\266\nC\337\201!(\367\003\246bp\304\353\215"
  85      AAB6 0A43 
  85      DF81 2128 
  85      F703 A662 
  85      70C4 EB8D 
  86 00ba 5041 18BE 	 .ascii "PA\030\276\f\306M\220\205K\244yH\013=V\016\223\232<\3144\351"
  86      0CC6 4D90 
  86      854B A479 
  86      480B 3D56 
  86      0E93 9A3C 
  87 00d1 3738 0AFC 	 .ascii "78\n\374\325v\0130\264\312\"D\244\017tp\177\306^-\\\361\277\332"
  87      D576 0B30 
  87      B4CA 2244 
  87      A40F 7470 
  87      7FC6 5E2D 
  88 00e9 062E E8BC 	 .ascii "\006.\350\274\241T\312\201\271O\357<\rg\211Z\364\204\036!\361"
  88      A154 CA81 
  88      B94F EF3C 
  88      0D67 895A 
  88      F484 1E21 
  89 00fe D59A B157 	 .ascii "\325\232\261W9d\004cDOd\304\007D\337\344X\031\261Y.r\330~\024"
  89      3964 0463 
  89      444F 64C4 
GAS LISTING  			page 7


  89      0744 DFE4 
  89      5819 B159 
  90 0117 45C8 A8F5 	 .ascii "E\310\250\36535\202\353\331!\023G\201\353\371N\033M\255,/.\255"
  90      3335 82EB 
  90      D921 1347 
  90      81EB F94E 
  90      1B4D AD2C 
  91 012e E6BD 8ABD 	 .ascii "\346\275\212\275\343\332^\246D\223\316F\335+U]\327.y[U7\223]"
  91      E3DA 5EA6 
  91      4493 CE46 
  91      DD2B 555D 
  91      D72E 795B 
  92 0146 F873 929B 	 .ascii "\370s\222\233\330\334\363\354zm\267^\261\255Lv\376\023\246\202"
  92      D8DC F3EC 
  92      7A6D B75E 
  92      B1AD 4C76 
  92      FE13 A682 
  93 015a 7720      	 .ascii "w "
  94               	 .text
  95               	 .section .gnu.lto_TCPReceiveData.part.3.18a998172e3fae79,"",@progbits
  96 0000 789C 7D50 	 .string "x\234}P\261NBA\020\234\331;\022JbiEAg\302WHac\001\305#\301\016!\346\345\305\020Bg\301!\024\224\324R\020\342\007\330\332Z\0334v6&\266&\366\030\233\347\356\275D\203\005\233\334\315\334\315\316\336\336\n\004\377\343HW\215\300\201\"K\240_<)\361\224\210Bg8);\322\b\210\261\027\307\361\031\243\373N\302{\236\277}\256X&\007\204\350F\207,\252%\314BXT\201~<&\272[\215\204\336\320\265)\0217\270~|\335>\3109\327\332\300\0227\223\020*\031y\205\35707&\003Z\337\035f,\372O\251\245\324v\377\265\375\340>\233\333\261\031\213\235l0\235OoW\207\2055\245K)&\272\334\344g\370B"
  96      B14E 4241 
  96      109C D93B 
  96      124A 6269 
  96      4541 67C2 
  97 00cd 7E6B F97E 	 .string "~k\371~\341\264\344,J\032m\255o\037x\321\371\374\r4\321L\275\265'+\315\323\343\223Vct\321\033^\366F\365.~"
  97      E1B4 E42C 
  97      4A1A 6DAD 
  97      6F1F 78D1 
  97      F9FC 0D34 
  98 00f7 7386 4C8A 	 .ascii "s\206L\212"
  99               	 .text
 100               	 .section .gnu.lto_EVENT_USB_Device_ControlRequest.part.4.18a998172e3fae79,"",@progbits
 101 0000 789C 8D52 	 .ascii "x\234\215R=h\024A\024~\337\314n~<\225\003+;\2614\270\013\202"
 101      3D68 1441 
 101      147E DFCC 
 101      6E7E 3C95 
 101      032B 3BB1 
 102 0018 106D 249A 	 .ascii "\020m$\232\210\201h\221\020/\242 \301\335Kr,\227c\357\260\261"
 102      8881 6891 
 102      102F A220 
 102      C1DD 4B72 
 102      2C97 63EF 
 103 002e B839 6340 	 .ascii "\2709c@\254\016\261\020SEEl\302\025V*\202\\H\025\242\244\260"
 103      AC0E B110 
 103      5345 456C 
 103      C215 562A 
 103      825C 4815 
 104 0045 118B C5CA 	 .ascii "\021\213\305\312N;\177 \236\357\315\344\007\022P\037\354\274"
 104      4E3B 7F20 
 104      9EEF CDE4 
 104      0712 501F 
 104      ECBC 
 105 0057 3733 EF7B 	 .ascii "73\357{\357{\337\254\"E\273\255\217\277E>\276\302\036>\301k\276"
 105      EF7B DFAC 
 105      2245 BBAD 
 105      8FBF 453E 
GAS LISTING  			page 8


 105      BEC2 1E3E 
 106 006e E3C0 83B2 	 .ascii "\343\300\203\262^A\213o\364h@\002\002\325=\245Q\277\006\001\343"
 106      5E41 8B6F 
 106      F468 4002 
 106      02D5 3DA5 
 106      51BF 0601 
 107 0083 282D 1A73 	 .ascii "(-\032s?[y\266\254\347\357e\246i~w\352H\300}\016\201\212\240"
 107      3F5B 79B6 
 107      ACE7 EF65 
 107      A669 7E77 
 107      EA48 C07D 
 108 009b ABBC 41DE 	 .ascii "\253\274A\336:\265\253wK\231\254\323y\331\312\345@\t\264\222"
 108      3AB5 AB77 
 108      4B99 ACD3 
 108      79D9 CAE5 
 108      4009 B492 
 109 00af 45F3 E279 	 .ascii "E\363\342y\022\371\262p\226Ow\214i\036!)\306V\340Ux\024\340\211"
 109      12F9 B270 
 109      964F 778C 
 109      691E 2129 
 109      C656 E055 
 110 00c7 D713 50D6 	 .ascii "\327\023P\326\257Q\373\325\312\213\317_\373\267\363]\360vuc\276"
 110      AF51 FBD5 
 110      CA8B CF5F 
 110      FBB7 F35D 
 110      F076 7563 
 111 00dc 9B28 C213 	 .ascii "\233(\302\023\236\255\b[\243\004,\320\243\306\203F>\201/\314"
 111      9EAD 085B 
 111      A304 2CD0 
 111      A3C6 8346 
 111      3E81 2FCC 
 112 00f0 BABE 38A2 	 .ascii "\272\2768\242]\233\314\326h\356\365\262\024\213\360\224a%(\206"
 112      5D9B CCD6 
 112      68EE F5B2 
 112      148B F094 
 112      6125 2886 
 113 0104 4882 FF1D 	 .ascii "H\202\377\035\366\272=\354n\376V\206Q\222z\373\343\247\037\255"
 113      F6BA 3DEC 
 113      6EFE 5686 
 113      5192 7AFB 
 113      E3A7 1FAD 
 114 0118 11D7 BF04 	 .ascii "\021\327\277\004\335G\307\022t\013\316\030\306\365\334\242_\346"
 114      DD47 C712 
 114      740B CE18 
 114      C6F5 DCA2 
 114      5FE6 
 115 012a AE44 BD15 	 .ascii "\256D\275\025\313M\360\275\026\037cK\250\367\344;<\321v\372\276"
 115      CB4D F0BD 
 115      161F 634B 
 115      A8F7 E43B 
 115      3CD1 76FA 
 116 013f 229C 9CEE 	 .ascii "\"\234\234\356\304,0.W\0016\023\271S\202\375\226*\313\322\376"
 116      C42C 302E 
 116      5701 3613 
 116      B953 82FD 
 116      962A CBD2 
 117 0154 797A 8F2C 	 .ascii "yz\217,\235\017\376\216,\332\021\366\376G\026.\026a\311N\343"
GAS LISTING  			page 9


 117      9D0F FE8E 
 117      2CDA 11F6 
 117      FE47 162E 
 117      1661 C94E 
 118 0169 33E4 303D 	 .ascii "3\3440=4\317Mv&\261\374\2344K\377\224\306\227\251\346\276=^\337"
 118      34CF 4D76 
 118      26B1 FC9C 
 118      344B FF94 
 118      C697 A9E6 
 119 0181 C09E D10E 	 .ascii "\300\236\321\016\024\371m\305\022\034t\215'\230\240<\362*\377"
 119      14F9 6DC5 
 119      121C 748D 
 119      2798 A03C 
 119      F22A FF
 120 0194 872E 7D4A 	 .ascii "\207.}J\246_\247F\366\346\370\026\336Y\201\237\230SE\233\374"
 120      A65F A746 
 120      F6E6 F816 
 120      DE59 819F 
 120      9853 459B 
 121 01a9 E8A5 C1E1 	 .ascii "\350\245\301\341\261\241\332t\234\226\343Zp\203\362\027\343j"
 121      B1A1 DA74 
 121      9C96 E35A 
 121      7083 F217 
 121      E36A 
 122 01bb 7572 2ABE 	 .ascii "ur*\276\020OFq\032\2348u2\bG\306\317\017\204\203\351\314\315"
 122      104F 4671 
 122      1A9C 3875 
 122      3208 47C6 
 122      CF0F 8483 
 123 01d2 38AD 86E3 	 .ascii "8\255\206\343cg\303s\263i\034\016\\\036\355\017\203\300\371\241"
 123      6367 C373 
 123      B369 1C0E 
 123      5C1E ED0F 
 123      83C0 F9A1 
 124 01e6 7254 999D 	 .ascii "rT\231\235)\327\256\313.\230\246?\326\377\303\240"
 124      29D7 AECB 
 124      2E98 A63F 
 124      D6FF C3A0 
 125               	 .text
 126               	 .section .gnu.lto_HandleUDP.18a998172e3fae79,"",@progbits
 127 0000 789C 6362 	 .string "x\234cb`b@\007\222 \314\b\241\031\231\031\030\231&\234c`h\344`bd\0041\030\030\031\352\231\030\353c\030\301j\3273\035x\360\377\377\272\177\255\247$Y\230\031\013\300\202\254\f-\r\r\023\024\224\030\026644\035\230\330\326\313\322\260\241\241\243\341\377\377\372\034F\240u\302\214\fi\214\f\321\2149\214\214\034`\212\211\021\325~\250\306ImL3\032Z\016\374\377o\017\326&AH\033\003H\036\b\302\201$\310\241\021\214L \232\371<C\363\203\256\303\374)\214\013\031Y\201\322\325\f\277\200\216\021\310adNc\204\230\220\303\310\302\300p\222\241\351A\367aF\210*\240?\034\031\034r\030Y\263\030\231AV\261\376\370\317\314"
 127      6062 4007 
 127      9220 CC08 
 127      A119 9919 
 127      1899 269C 
 128 00c9 3380 E122 	 .string "3\200\341\"C\343\203\231\312p.\003\304RF\220e\240\300\024\b\362s\361\fv-\311H-\312K-\321Kf`\311M,\316f,\003"
 128      43E3 8399 
 128      CA70 2E03 
 128      C452 4690 
 128      65A0 C014 
 129 00f6 1F73 4AF3 	 .ascii "\037sJ\363"
 130               	 .text
 131               	 .section .gnu.lto_TCPReceiveSyn.18a998172e3fae79,"",@progbits
 132 0000 789C 5D50 	 .string "x\234]P\273JCA\020=gf\203\227 $\370\005~\201\340\017\2442\205\215\205\026\006\264\323\204 \227\020$\235E\326\007b\231O\320\037\320Z\b\250 \327\007\242XZ\210v\376\203M\234\331\213\020\262pfvw\316\2349\273\002\301\354Z6|\031\026\f\254\2002z\005\0163\021-j\210\325\360\334@\234W\006\277f =\203\030\212\006\016\267\2314\256\344\366{2\271\034\027\347/\344\034\221\323\006YP\366\023\241\202\223\030G\213@'\0357-\272L\213\342Y\037q\377sws*\273\2740\007{\324-\346\344\347\003\247l\266\250(j\372\204\243\254\244\365Ic\002o8\316\376\033\345"
 132      BB4A 4341 
 132      103D 6766 
 132      8397 2024 
GAS LISTING  			page 10


 132      F805 7E81 
 133 00bb BFF1 2CD6 	 .string "\277\361,\326sJ\207ew\356\234R \244a\357\3668\0307\225?@\237e;\031_g&\240t{t\246\177U}}meu\2439\350\266\367{\355\301\322\016\376"
 133      734A 8765 
 133      77EE 9C52 
 133      20A4 61EF 
 133      F638 1837 
 134 00f1 6ED9 3BCC 	 .ascii "n\331;\314"
 135               	 .text
 136               	 .section .gnu.lto_TCPConnectionClosing.18a998172e3fae79,"",@progbits
 137 0000 789C 6362 	 .string "x\234cb`b@\007\222@\274\b\210\205\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\233w|\301\033FFVF\306\002F\240\2019`9V\206\226\206\206\t\n\f\fi`n8\220\004\351\217`d\002\321\314g\031\232;\232\337\367\311\2470.dde\310bd\312bd\214f\314ad\374\017R~\236\201\005\"\301\300P\315\360\253\241\243A \207\221)\215\021b)Pq\016\320a\f\027\031\032\037\274Q\206\251\203\200p\240\032\240\361 _\t\004\371\271x\006\273\226d\244\026\345\245\226\350%3"
 137      6062 4007 
 137      9240 BC08 
 137      8885 8098 
 137      9199 8191 
 138 00b4 00        	 .string ""
 139 00b5 1DCA 2E16 	 .ascii "\035\312.\026"
 140               	 .text
 141               	 .section .gnu.lto_CanSend.18a998172e3fae79,"",@progbits
 142 0000 789C 6362 	 .string "x\234cb`b@\007\222@\274\034\210\205\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\373q|\301?FF6F\306\002F\240\2019\214\f\254@\002\244\202\225\241\245\241a\202\002\003C\032X}8\220\004\031\022\301\310\004\242\231\31724w4\177\357\327Na\\\310\310\312\220\305\310\224\305\310\030\315\b\324\nR}\236\241\345"
 142      6062 4007 
 142      9240 BC1C 
 142      8885 8098 
 142      9199 8191 
 143 007d 134C 86B5 	 .string "\023L\206\265\232\341WCG\203@\016#S\032#\304n\240\362\034\240\373\030.20\302UA|\020\016T\0014\036\3445\201 ?\027\317`\327\222\214\324\242\274\324\022\275d\006"
 143      9AE1 5743 
 143      4783 400E 
 143      2353 1A23 
 143      C46E A0F2 
 144 00b6 C898 2DC4 	 .ascii "\310\230-\304"
 145               	 .text
 146               	 .section .gnu.lto_SendStart.18a998172e3fae79,"",@progbits
 147 0000 789C 5D50 	 .ascii "x\234]P\277K\303@\024~\337]\316\246[\301\311M\024A\227\202\377"
 147      BF4B C340 
 147      147E DF5D 
 147      CEA6 5BC1 
 147      C94D 1441 
 148 0017 830E 5D1C 	 .ascii "\203\016]\034t\250\240\213\244\021\r!\r\232I\207^\177\f]\204"
 148      74A8 A08B 
 148      A411 0D21 
 148      0D9A 4987 
 148      5E7F 0C5D 
 149 002c 0C0E A22E 	 .ascii "\f\016\242.m\377\200\256\216\256\n\025\2729"
 149      6DFF 80AE 
 149      8EAE 0A15 
 149      BA39 
 150 003a 6671 7110 	 .string "fqq\020\\\035\214\367\022\032!\017\356\336w\367\356{\337\367N\220\240r\254\230u\005\242u\223!\t\"~#\352\332\002`@\240\216@\347\030\374\024k4\322:N>\306/b\360\232\350X\377\246\035\3700]\227A\247\240#s\200\235%\301\214\020\377:S\361\234\244\351\343|\360\271iK\204\200E>\244\242\026F\246\257\tE\003\323|\225\270\221\211\246\331\331\301!\004g9\243\336\323\373\370\033-L\240\350\201\356\273Z\327|X\327\364\243\207\214T\b\236\216\305U\246\310\310b0\243\376\260?\275\335\312\251\036,\017\222\213\022Y\261\367%\027\025\3451\303\\5J2K\205L%\037\212\371\225L\306c9vw7\231\227\335\331\005\255\032\232\317\315i\325\302\235\315`N\335\344f#'.\242\t\360\320<Om\177o\247q\260\033\235\271\027\201\033\325\035\252\371'\227\221\323\016\002\327\211\316\333A}\373\017\3043g"
 150      5C1D 8CF7 
 150      121A 210F 
 150      EEDE 77F7 
 150      EE7B DFF7 
 151               	 .text
 152               	 .section .gnu.lto_GetCurrentCircHead.18a998172e3fae79,"",@progbits
 153 0000 789C 6362 	 .string "x\234cb`b@\007\222@\374"
 153      6062 4007 
 153      9240 FC00 
 154 000c 8895 8198 	 .string "\210\225\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\244\224Q\211aaC\303\244\007K\227Odi\335\320\320\321\360\377\177}\016#\320LaF\2064F\206h\306\034FF\0160\305\304\210j\311z\246\003\017\376\377?s\271\345\223&\013\023C\n\343B\240Q\314\f9@\373\030\030X\031Z\032\032&(0\200\214"
 154      9199 8191 
GAS LISTING  			page 11


 154      69C2 3906 
 154      8646 0E26 
 154      4646 1083 
 155 007c 8270 2009 	 .string "\202p \t\2629\202\221\tD3\237eh:\271c\271`\n\343bFV\206,F\246\331\f\263\032\033\032\004r\030Y\252\031~\001\335"
 155      B239 8291 
 155      0944 339F 
 155      6568 3AB9 
 155      63B9 600A 
 156 00a8 64B1 1680 	 .string "d\261\026\200u\202,f\205Z\b\324\365\216\031\246\207\031\250\215\201\341\"\003#\\"
 156      7582 2C66 
 156      855A 08D4 
 156      F58E 19A6 
 156      8719 A88D 
 157 00c3 A228 9C91 	 .string "\242(\234\221\021d\005(L\004\202\374\\<\203]K2R\213\362RK\364\222\031\004\2223\213\222\343\223J\323\322R\213\342\023K\364\214"
 157      1164 0528 
 157      4C04 82FC 
 157      5C3C 835D 
 157      4B32 528B 
 158 00ef 4BEB 4290 	 .ascii "K\353B\220"
 159               	 .text
 160               	 .section .gnu.lto_UnloadCircularBufferOnThisClient.18a998172e3fae79,"",@progbits
 161 0000 789C 8D54 	 .ascii "x\234\215TMHTQ\024>\347\276\337\371sF\203Z\004\021\026\265)E"
 161      4D48 5451 
 161      143E E7BE 
 161      DFF9 7346 
 161      835A 0411 
 162 0018 DA06 52D4 	 .ascii "\332\006R\324\302M\213Z(\024\210\2153\3250\251\f\023\006-\346"
 162      C24D 8B5A 
 162      2814 888D 
 162      33D5 30A9 
 162      0C13 062D 
 163 002d EABC 601A 	 .ascii "\352\274`\032\n$\260\"\333H\210\205JB\033\351\007F\214J\243\""
 163      0A24 B022 
 163      DB48 8885 
 163      4A42 1BE9 
 163      0746 8C4A 
 164 0043 4842 119A 	 .ascii "HB\021\232Um\"\2126\341\242\327\271\367\276\367\314\321\250\007"
 164      556D 228A 
 164      36E1 A2D7 
 164      B9F7 BEF7 
 164      CCD1 A807 
 165 0057 73CF DC73 	 .ascii "s\317\334s\316\367\335s\276s\337c\300\240\366I\322\357\245\016"
 165      CEF7 DD73 
 165      BE73 DF63 
 165      C0A0 F649 
 165      D2EF A50E 
 166 006b D042 1643 	 .ascii "\320B\026C\200l\350\r\300\200\315\230\375d\007\360\260\366\276"
 166      806C E80D 
 166      C080 CD98 
 166      FD64 07F0 
 166      B0F6 BE
 167 007e 1978 5443 	 .ascii "\031xTCK\270QgFi/yM\261F\r4U\262\251\302\207,\246_}\001\024\267"
 167      4BB8 5167 
 167      4669 2F79 
 167      4DB1 460D 
 167      3455 B2A9 
 168 009b 1D8B E236 	 .ascii "\035\213\3426\242p\003B\201i\272aZ6\026N\2418To\204Q\316\257"
GAS LISTING  			page 12


 168      A270 0342 
 168      8169 BA61 
 168      5A36 164E 
 168      A138 546F 
 169 00b3 57C7 26BE 	 .ascii "W\307&\276\353N\271\312\207\370/\267\200Y\244\372\266 \244\021"
 169      EB4E B9CA 
 169      87F8 2FB7 
 169      8059 A4FA 
 169      B620 A411 
 170 00c7 4ED2 066D 	 .ascii "N\322\006mi\030\256/XA+K\013\327\f>\315K\334u\013Y\324\030\354"
 170      6918 AE2F 
 170      5841 2B4B 
 170      0BD7 0C3E 
 170      CD4B DC75 
 171 00e0 5E03 2614 	 .ascii "^\003&\024\220m\n\\^`\267\270Sq\335V\t\333\363\237\260\237\345"
 171      906D 0A5C 
 171      5E60 B7B8 
 171      5371 DD56 
 171      09DB F39F 
 172 00f7 3598 CEA0 	 .ascii "5\230\316\240\371_e>`\225\252\353\336YtV\367mE\350\3061"
 172      F95F 653E 
 172      6095 AAEB 
 172      DE59 7456 
 172      F76D 45E8 
 173 010d 6CA4 EE94 	 .string "l\244\356\2245\261\017\301\242\315]\332\330dG\311\206 \213FX,\021/-\352\331\230g\353D0N\233q\332\324\213M\203X\3500\003\034\316\207v*B\225\f\242>z\332i\235\213@\00722\332k\030|t\371\341\360\366n\274O\300\fZ#p{\200s.\264\310\240)\0321\275\006\346a\260\342\345)^\312\006 \202\371\031\232\232O`+\202\004\211r\tVi\034\364\317\352Cq\264 \263<2\202}\325|L\210`\302U\274\022\270\302\322+\371\213\217\213=\276;B\021A\243\265\312\202\230_\316\230,'B7\027\236}\236\375Xf\001@f\3779\207\016\332:\026\325\263\004\214\342le1+\234:\320MUr\374\030>\030\3507.\225Sl\364d\260\216\372\303\215\342\020p\345\233\331\215S\362\324\370~\230$\021y?\251\020\350a\007z\204\372\220yz\204\300\243\r\352\363d\236\222}\215\313\276\342"
 173      35B1 0FC1 
 173      A2CD 5DDA 
 173      D864 47C9 
 173      8620 8B46 
 174 020e 6FC1 A93E 	 .string "o\301\251>M)7@\300\024N#z\f\361\254\350_60qC\367+\251\377[\271\305R1\347'5P\236\324\tU'm*\340]\205P-\234"
 174      4D29 3740 
 174      C014 4E23 
 174      7A0C F1AC 
 174      E85F 3630 
 175 023f 52E8 4FB3 	 .ascii "R\350O\2637_\261\200#\030\313\232\320\006<\337%$\235\231\336"
 175      375F B180 
 175      2318 CB9A 
 175      D006 3CDF 
 175      2524 9D99 
 176 0254 B68E 7164 	 .ascii "\266\216qdCE\353\246\324AN1\f1\242h\006c\306\344\207{HV\2271"
 176      4345 EBA6 
 176      D441 4E31 
 176      0C31 A268 
 176      0663 C6E4 
 177 026e 0BE8 1B82 	 .ascii "\013\350\033\202\244\222\r\301\340Qu\024\334\236\030\271$\245"
 177      A492 0DC1 
 177      E051 7514 
 177      DC9E 18B9 
 177      24A5 
 178 0280 EB6A 9B5D 	 .ascii "\353j\233]\224\230\250\337\3712\320\342\003\260\346\232,\001"
 178      9498 A8DF 
 178      F932 D0E2 
 178      03B0 E69A 
 178      2C01 
 179 0292 1DC8 345A 	 .ascii "\035\3104Z\242&\212Sm\361\262\274\243O\233\252U\367\023\333\351"
 179      A226 8A53 
 179      6DF1 B2BC 
GAS LISTING  			page 13


 179      A34F 9BAA 
 179      55F7 13DB 
 180 02a7 ECB9 8898 	 .ascii "\354\271\210\230f\342\370\261#m'\216\346\317\246r=\251|S\022"
 180      66E2 F8B1 
 180      236D 278E 
 180      E6CF A672 
 180      3DA9 7C53 
 181 02bc 12C9 73B9 	 .ascii "\022\311s\271d\347\351\013\351t*\327\331\225o:\200\375v\276\367"
 181      64E7 E90B 
 181      E974 2AD7 
 181      D995 6F3A 
 181      80FD 76BE 
 182 02d1 4CEF F9AE 	 .ascii "L\357\371\256\213\207Y2\371\033\3663\"\356"
 182      8B87 5932 
 182      F91B F633 
 182      22EE 
 183               	 .text
 184               	 .section .gnu.lto_StartupBroadcast.18a998172e3fae79,"",@progbits
 185 0000 789C 6362 	 .string "x\234cb`b@\007\222@<\001\210\205\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\333rz\301\035F&f\240"
 185      6062 4007 
 185      9240 3C01 
 185      8885 8098 
 185      9199 8191 
 186 003c 2B43 4B43 	 .string "+CKC\303\004\005\006\2064\260\202p \t\322\025\301\310\004\242\231\31724\355\370\261\355$c\n\343BFV\206\331\f\263\032\033\032\004r\030\031\252\031~5t\200X\214\005`}\321\214@&\003\214\305"
 186      C304 0506 
 186      8634 B082 
 186      7020 09D2 
 186      15C1 C804 
 187 007e 625E 6468 	 .string "b^dh|pG\025\242\021\006\302\201\212\200\306\202\374 \020\344\347\342\031\354Z\222\221Z\224\227Z\242\227\314"
 187      7C70 4715 
 187      A211 06C2 
 187      818A 80C6 
 187      82FC 2010 
 188 00a2 00        	 .string ""
 189 00a3 58FF 2D15 	 .ascii "X\377-\025"
 190               	 .text
 191               	 .section .gnu.lto_DoneBroadcast.18a998172e3fae79,"",@progbits
 192 0000 789C 6362 	 .string "x\234cb`b@\007\222@<\001\210\205\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\333wz\301KF&f\240"
 192      6062 4007 
 192      9240 3C01 
 192      8885 8098 
 192      9199 8191 
 193 003c 2B43 4B43 	 .string "+CKC\303\004\005\006\2064\260\202p \t\322\025\301\310\004\242\231\31724\355\230\261\353$c\n\343BFV\206\331\f\263\032\033\032\004r\030\031\252\031~5t\200X\214\005`}\321\214@&\003\214\005f\\dh|\360R\025\242\021\006\302\201\212\200\306\202\374 \020\344\347\342\031\354Z\222\221Z\224\227Z\242\227\314"
 193      C304 0506 
 193      8634 B082 
 193      7020 09D2 
 193      15C1 C804 
 194 00a1 00        	 .string ""
 195 00a2 4324 2CDC 	 .ascii "C$,\334"
 196               	 .text
 197               	 .section .gnu.lto_extSbyte.18a998172e3fae79,"",@progbits
 198 0000 789C 8D92 	 .string "x\234\215\2221H\033Q\030\307\277\357\275{\227;\021\2528\270\210H\226\320\241)R\nY\304\245\016v\350\240\203\202\202hL\320p\204#\244S\207\274\323\0242\251\264]\252.\"\241K\301\210\213\240\203\205\016\0265\245\320U\b\016\026:\224v\315\222~\337]r5\251C>\270\373\336\373\336\373\377\336\377\336w\002\004t\306szP\002\214s\216"
 198      3148 1B51 
 198      18C7 BFEF 
 198      BD7B 973B 
 198      11AA 38B8 
 199 006e 8AAD 2A80 	 .string "\212\255*\200g\t!K1\320=\006\277{%\232\\FC\250\357\217\251j\236\016SU\005U\3172\021y"
GAS LISTING  			page 14


 199      6709 214B 
 199      31D0 3D06 
 199      BF7B 259A 
 199      5C46 43A8 
 200 0091 0805 210D 	 .ascii "\b\005!\reba\036\231-\243\260\247\365\233Z\371\344\320x]\321"
 200      6562 611E 
 200      992D A3B0 
 200      A7F5 9B5A 
 200      F9E4 D078 
 201 00a7 25DD 6814 	 .ascii "%\335h\024\034$\023\003\bi\2049t\020-?\tlw\025\b\317\336nl\266"
 201      1C24 1303 
 201      0869 8439 
 201      7410 2D3F 
 201      096C 7715 
 202 00c1 0B87 BA14 	 .ascii "\013\207\272\024\276\257\2763\312w\205\361{\205\356\035\365\201"
 202      BEAF BE33 
 202      CA77 85F1 
 202      7B85 EE1D 
 202      F581 
 203 00d3 38AB 351A 	 .ascii "8\2535\032\227\327\305z\242W\3002\356a\024\024\272\210&M\366"
 203      97D7 C57A 
 203      A257 C032 
 203      EE61 1414 
 203      BA88 264D 
 204 00e8 6912 0107 	 .ascii "i\022\001\007\245M\2232M(\024\024\265\336\032\001\006S\314\320"
 204      A54D 9332 
 204      4D28 1414 
 204      B5DE 1A01 
 204      0653 CCD0 
 205 00fc 9B6F 6116 	 .ascii "\233oa\026\005gy\005k_\216OF\227\361\003*\310\240\330\201mO\353"
 205      0567 7905 
 205      6B5F 8E4F 
 205      4697 F103 
 205      2AC8 A0D8 
 206 0114 3E07 8D57 	 .ascii ">\007\215WP'g4R.rC\330\216j\2728\207\317?<;\024\361R\333\367"
 206      5027 6734 
 206      522E 7243 
 206      D88E 6ABA 
 206      3887 CF3F 
 207 012f CD52 AF4A 	 .ascii "\315R\257J1\371\025\212V\260\t \304\231i\f6gP9\324\313\246\300"
 207      31F9 158A 
 207      56B0 0920 
 207      C499 690C 
 207      3667 5039 
 208 0147 6081 EFE6 	 .ascii "`\201\357\346\346\017\266\310\346\375v\240\303\016\311~\311\226"
 208      E60F B6C8 
 208      E6FD 76A0 
 208      C30E C97E 
 208      C996 
 209 0159 2642 32BF 	 .ascii "&B2\277t\361\373AP{\004\0375\305\030QB\236\025\362l\227\177,"
 209      74F1 FB41 
 209      507B 041F 
 209      35C5 1851 
 209      429E 15F2 
 210 0171 9F67 377D 	 .ascii "\237g7}5M\261C&\255\227\326\217v\037\266\3706\361y\263\201\301"
 210      354D B143 
 210      26AD 97D6 
GAS LISTING  			page 15


 210      8F76 1FB6 
 210      F836 F179 
 211 0188 C993 C142 	 .ascii "\311\223\301B7N3|\002\335\335\355\247\235\252\by>l\274\355\366"
 211      374E 337C 
 211      02DD DDED 
 211      A79D AA08 
 211      793E 6CBC 
 212 019e 14FC 1CE4 	 .ascii "\024\374\034\344\3138\256\fwO\3679\377\030\246\337\337o\340\325"
 212      CB38 AE0C 
 212      774F F739 
 212      FF18 A6DF 
 212      DF6F E0D5 
 213 01b2 3663 AD26 	 .ascii "6c\255&\0041C\r\2405nj\337\324\213g\223\323\023\371\225T.\233"
 213      0431 430D 
 213      A035 6E6A 
 213      DFD4 8B67 
 213      93D3 13F9 
 214 01ca CAC7 9360 	 .ascii "\312\307\223`\255f\223\253\271d<\321\317ia\351e:\235\312-,\346"
 214      AD66 93AB 
 214      B964 3CD1 
 214      CF69 61E9 
 214      653A 9DCA 
 215 01e1 E3A3 4FFE 	 .ascii "\343\243O\376\253<\375\013n\177\311\245"
 215      AB3C FD0B 
 215      6E7F C9A5 
 216               	 .text
 217               	 .section .gnu.lto_EndSend.18a998172e3fae79,"",@progbits
 218 0000 789C 6362 	 .string "x\234cb`b@\007\206@\254\314\310\300\240\b\244\031Y\031\030\231&\234c`h\344`bb\271\246\317\320\300\305\274K\216\241\201\207\231\221\005$\314\310\302\310\b\242\031\030\031\352\231\230Y\030\353c\030AF0*1,lh\230\364\340\351\263\213L\255]\017\032&4\374\373_\317\230\303\b\264M\230\221!\215\221!\032\310a\024"
 218      6062 4007 
 218      8640 ACCC 
 218      C8C0 A008 
 218      A419 5919 
 219 0069 534C 682E 	 .string "SLh.X\317t\340\301\377\377k>\267\\\262bebHa\\\b4\f\bX\031Z\032\032&(0\200t\003A8\220\004Y\034\301\310\004\242\231\31724\235\374\001\264-\205q1\320\315Y\214L\263\031f564\b\34402W3\374j\350"
 219      58CF 74E0 
 219      C1FF FF6B 
 219      3EB7 5CB2 
 219      6265 6248 
 220 00b9 B158 0AC0 	 .string "\261X\n\300ZA\226\262@-;\301p\344y#'\\\023H\212\031\3311\021@\356.9\346\363\f\315\034\020E\f\fp\343X\323\030\301\3461\3440\262\301T\263\200\035s\221\241\361\301*u\230\006\b\b\007*\006\312\201<+\020\344\347\342\031\354Z\222\221Z\224\227Z\242\227\314\300\227TY\222Z\\PZ\234\221\232\242gh\006"
 220      5A41 96B2 
 220      402D 3BC1 
 220      70E4 7923 
 220      275C 1348 
 221 0122 9F2E 5469 	 .ascii "\237.Ti"
 222               	 .text
 223               	 .section .gnu.lto_ForcePlayerClose.18a998172e3fae79,"",@progbits
 224 0000 789C 6362 	 .string "x\234cb`b@\007\222@\274\006\210\205\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\273un\301NFfV&\306\002\2600+CKC\303\004\005\006\206407\034H\202\264F02\201h\346\363\f-\017\326\267s\2450.dd\005JW3\374j\350h\020\310a\004*\207\230\232\305\310\224\003b\202\024\3568\316\216M!\023\212\302\213\f\215\017v\252\303\324A@8P\002h\033H\241@\220\237\213g\260kIFjQ^j\211^2\003"
 224      6062 4007 
 224      9240 BC06 
 224      8885 8098 
 224      9199 8191 
 225 00a4 E015 320E 	 .ascii "\340\0252\016"
 226               	 .text
 227               	 .section .gnu.lto_Rbyte.18a998172e3fae79,"",@progbits
 228 0000 789C 8D52 	 .string "x\234\215R\277K\202A\030~\337\273\373\362\007BB\273H{\206nACC\021-\r5$\324\"\251\204|h\230[\203\247\026H4H8UC\022RC\320\032N\005\r\025\330\217\241\240&\247\376\2006#\372z\337\357\313\n\023\352\340\273\347\356\336{\236{\356\271O\200\200\356\026\241o\214\226G\t\321"
 228      BF4B 8241 
 228      187E DFBB 
 228      FBF2 0742 
GAS LISTING  			page 16


 228      42BB 487B 
 229 0061 1495 6B80 	 .string "\024\225k\200\202[\b\3650\f\332+\033\001\320>\211\312YV\210<"
 229      825B 08F5 
 229      300C DA2B 
 229      1B01 D03E 
 229      89CA 5956 
 230 0078 84BC 900A 	 .ascii "\204\274\220\n\363\013\310\032r\020jZo\265\352/m\\\337h\351\212"
 230      F30B C81A 
 230      7210 6A5A 
 230      6FB5 EA2F 
 230      6D5C DF68 
 231 008e 7EB7 F268 	 .ascii "~\267\362h\"\0357\200\220D\230\247\t\372m\020]\026\034\252\336"
 231      221D 3780 
 231      9044 98A7 
 231      09FA 6D10 
 231      5D16 1CAA 
 232 00a3 A89E 21D3 	 .ascii "\250\236!\323,\207\026\354I[\306_\274\373\352\241\306\302\236"
 232      2C87 16EC 
 232      495B C65F 
 232      BCFB EAA1 
 232      C6C2 9E
 233 00b6 7EB3 2C69 	 .ascii "~\263,i3\207\376:\360X\234\266,k\263\275\3664\352E0Q*\210c\r"
 233      3387 FE3A 
 233      F058 9CB6 
 233      2C6B B3BD 
 233      F634 EA45 
 234 00d0 07C1 20DC 	 .ascii "\007\301 \334't\021\326\t=\\$\202\001kZW\202\300\272\324\346"
 234      2774 11D6 
 234      093D 5C24 
 234      8201 6B5A 
 234      5782 C0BA 
 235 00e6 A8E7 0CA2 	 .ascii "\250\347\f\242(\030e\023\212\227't\3618\036P~)T;\260]\320\332"
 235      2818 6513 
 235      8A97 2774 
 235      F138 1E50 
 235      7E29 543B 
 236 00fe 6FA2 5A85 	 .ascii "o\242Z\205W]\346\221\3418g;\306\247\215&\224\312\262\3031\210"
 236      575D E691 
 236      E138 673B 
 236      C6A7 8D26 
 236      94CA B2C3 
 237 0114 C645 8576 	 .ascii "\306E\205v\2458\345\024\376\243\224bd\017\267\336\216\232\253"
 237      A538 E514 
 237      FEA3 9462 
 237      640F B7DE 
 237      8E9A AB
 238 0127 370F BB1C 	 .ascii "7\017\273\034\\\300\371s\301\363e\233x\337!E\351\346\215\200"
 238      5CC0 F973 
 238      C1F3 659B 
 238      78DF 2145 
 238      E9E6 8D80 
 239 013b BC81 52EB 	 .ascii "\274\201R\353j\262\263\305\363\245\326\227D\347)\314\016)\212"
 239      6AB2 B3C5 
 239      F3A5 D697 
 239      44E7 29CC 
 239      0E29 8A
 240 014e CA4E E38E 	 .ascii "\312N\343\216~\0226e\227\037\001\371@\nQ\354\266\217\004)\310"
GAS LISTING  			page 17


 240      7E12 3665 
 240      971F 01F9 
 240      400A 51EC 
 240      B68F 0429 
 241 0163 A3B6 9B23 	 .ascii "\243\266\233#D\336\314\017\343\237\231\036\237\232\235\310-%"
 241      44DE CC0F 
 241      E39F 991E 
 241      9F9A 9DC8 
 241      2D25 
 242 0175 B2E9 442E 	 .ascii "\262\351D.\264\b\276l\"\026_\311$c\331Px\344\307$\022\356\317"
 242      B408 BE6C 
 242      2216 5FC9 
 242      2463 D950 
 242      78E4 C724 
 243 018c 6572 3133 	 .ascii "er13\036\243.\221\016E\"\037\366F\233\303"
 243      1EA3 2E91 
 243      0E45 221F 
 243      F646 9BC3 
 244               	 .text
 245               	 .section .gnu.lto_CanRead.18a998172e3fae79,"",@progbits
 246 0000 789C 6362 	 .ascii "x\234cb`b@\007\222@\\\310\310\300\240\017\244\031\231\031\030"
 246      6062 4007 
 246      9240 5CC8 
 246      C8C0 A00F 
 246      A419 9919 
 247 0015 9926 9C63 	 .ascii "\231&\234c`h\344`bd\0041\030\030\031\352\231\030\353c\030"
 247      6068 E460 
 247      6264 0431 
 247      1818 19EA 
 247      9918 EB63 
 248 002a 414A 9994 	 .string "AJ\231\224\030\02664Lz\360\364\363M\246\326\256\007\r\023\032\376\375\257g\314a\004\232*\314\310\220\306\310\020\r\3440\n\200)&4\233 Z\033\272\246\034`\004i\373\017\321\246@H\333z\246\003\017\376\377\177\363\263\345\220-\033\023C\n\343BF%\006f \275\030H\2630\34402\263\002\t\026\240BV\206\226\206\206\t\n\f \363\200 \034H\202\334\037\301\310\004\242\231\31724\235\374\001tv\n\343RFV\206,F\246\331\f\263\032\033\032\004r\030Y\253\031~5t\200Xl\005`\255 g\260A\255\007j\363\204ia\306\256\205\021CK\363if\230\036\026\240M@\235`\203\3365s\301\204Y\263@n\276\310\300\b\027\200\350\r\007\232\006t-(\f\004\202\374\\<\203]K2R\213\362RK\364\222\031x\212R\023S\212\363\323\022\213\364\214\214\371K\362K\022sR\022\201Dj\236\236\221\t"
 248      1816 3634 
 248      4C7A F0F4 
 248      F34D A6D6 
 248      AE07 0D13 
 249 012b 30A4 664A 	 .ascii "0\244fJ"
 250               	 .text
 251               	 .section .gnu.lto_TCPReceiveData.18a998172e3fae79,"",@progbits
 252 0000 789C 6362 	 .string "x\234cb`b@\007\206@\274\007\210\205\200\230\221\225\201\221i\3029\006\206F\016&&\346]r\f\r\\,\327\364\031\032x\230\031Y@\302\214,\214\214 \232\201\221\241\236\211\231\205\261>\206\021l\306z\246\003\017\376\377_\267\355\374\202\337\214\314l\214\214\005\214\f\314@\002$\311\312\320\322\3200A\201\201!\r\2544\034H\202L\210`d\002\321\314'\030Z\336\034\334\331\317\224\302\270\020hy\026#c4c\016#\212\373\"\030\231\031v\3111\237gh\345\200(b`\250f\370\325\320\321 \220\303\310\230\306\bQ\f\324\230\305\310\234\303\310\004\323\303\0026\375\"\320#\f\f #\231a\306\205\003u"
 252      6062 4007 
 252      8640 BC07 
 252      8885 8098 
 252      9195 8191 
 253 00c0 A540 0A05 	 .string "\245@\n\005\202\374\\<\203]K2R\213\362RK\364\222\031"
 253      82FC 5C3C 
 253      835D 4B32 
 253      528B F252 
 253      4BF4 9219 
 254 00d5 4D0E 3391 	 .ascii "M\0163\221"
 255               	 .text
 256               	 .section .gnu.lto_SetupHardware.18a998172e3fae79,"",@progbits
 257 0000 789C 8552 	 .string "x\234\205RAk\023A\030}\337\254\333fS\225\200\227zPb\241\247\206&\365\027x\260H\021EZ\241\202\205\261&\033\273\262&a\223T\251\207nL\004\361\024\352\241\322 \264\027=X\332\2037\275\204\212\202H#\342\037\210x\354\245z\251\nf\235\331I\333tcq`g\276\375\276\367\336|\363f\030\030\202\343\244\370~\210\364/\261\222\006b\325\006P\n1\"\031\2000\317h~\212|\354:\2537=o\255\365e\271Fz\210\301&hr\022CG\305u\253Q \355\377N\212Y\362\257\021\223\253\266\211\215\327\017_\254\366\247h\205t\334&V\303R\251B6\321u1\261\253\360\227vK\233(\277\321v\221\232"
 257      416B 1341 
 257      187D DFAC 
 257      DB66 5395 
 257      8097 7A50 
 258 00c4 CB22 ED90 	 .string "\313\"\355\220_\332\030S\225\303\005\004\007h\240\374\365\361E\005e\342\024'4yvM\031p\032\271g\356\323s\266\004\302g\036\271!\243\203\230|"
GAS LISTING  			page 18


 258      5FDA 1853 
 258      95C3 0504 
 258      0768 A0FC 
 258      F5F1 4505 
 259 00f4 83FE 3D8C 	 .string "\203\376=\214,\317\252\262\256z\376"
 259      2CCF AAB2 
 259      AE7A FE00 
 260 0100 A636 1BC0 	 .ascii "\2466\033\300\212\353.\324\377<\031r\313u\367\247\347\365\332"
 260      8AEB 2ED4 
 260      FF3C 1972 
 260      CB75 F7A7 
 260      E7F5 DA
 261 0113 D4C3 3047 	 .ascii "\324\3030G\322\031)\323\033\361\227P\340*d\256G)=\330n\275\335"
 261      D219 29D3 
 261      1BF1 9750 
 261      E02A 64AE 
 261      4729 3DD8 
 262 012a 5A3C D5B6 	 .ascii "Z<\325\266T\t\272\217\334:U\335\226\347\t\234\301\260L\373\202"
 262      5409 BA8F 
 262      DC3A 55DD 
 262      96E7 099C 
 262      C1B0 4CFB 
 263 013f 2125 48C1 	 .ascii "!%H\301\253U\002\365\217\357\337\351)Z\245\001\221R=\246\311"
 263      AB55 02F5 
 263      8FEF DFE9 
 263      295A A501 
 263      9152 3DA6 
 264 0154 C7A6 685D 	 .ascii "\307\246h]$%\327pe\242\201\312\367\326\267\255E\201^\023(\361"
 264      2425 D770 
 264      65A2 81CA 
 264      F7D6 B7AD 
 264      4581 5E13 
 265 016a 18F0 9C0E 	 .ascii "\030\360\234\016z\262C\001S\024\023\377qw\272\033\323\245\344"
 265      7AB2 4301 
 265      5314 13FF 
 265      7177 BA1B 
 265      D3A5 E4
 266 017d 1FFE 307B 	 .ascii "\037\3760{?\241\274\275\360\312R\355\003\367\361[\030\022\261"
 266      3FA1 BCBD 
 266      F0CA 52ED 
 266      03F7 F15B 
 266      1812 B1
 267 0190 299C 6E5F 	 .ascii ")\234n_\272M}\022Ui.\275\354\353B\035M\253m\374}\216I\360q\340"
 267      BA4D 7D12 
 267      5569 2EBD 
 267      ECEB 421D 
 267      4DAB 6DFC 
 268 01aa 334A CDDA 	 .ascii "3J\315\332\320.V\215Ia\214x\256R22~\371\374\330\304ha\306t2f"
 268      D02E 568D 
 268      4961 8C78 
 268      AE52 3232 
 268      7EF9 FCD8 
 269 01c5 6138 8929 	 .ascii "a8\211)+\023\345\274p'\307\035\363\026\3471\36131>z\201\363\260"
 269      2B13 E5BC 
 269      7027 C71D 
 269      F316 E731 
 269      F133 313E 
GAS LISTING  			page 19


 270 01dd 91B4 ADB0 	 .ascii "\221\264\255\260\221/\344\243\203\211Xtpd?\346|\316t\262\212"
 270      912F E4A3 
 270      8389 5874 
 270      7064 3FE6 
 270      7CCE 74B2 
 271 01f2 1036 B2C5 	 .ascii "\0206\262\305\302\036)\326!\0256\300.\2019\320\234\0044\316\357"
 271      C21E 29D6 
 271      2115 36C0 
 271      2E81 39D0 
 271      9C04 34CE 
 272 0207 9D89 17F3 	 .ascii "\235\211\027\363N\334\266n\306\247g\235\270\225I\332\305\224"
 272      4EDC B66E 
 272      C6A7 679D 
 272      B895 49DA 
 272      C594 
 273 0219 E9C7 B9EC 	 .ascii "\351\307\271\354]\323\031\236\201\356\323\257\004Z\372WG#\242"
 273      5DD3 199E 
 273      81EE D3AF 
 273      045A FA57 
 273      4723 A2
 274 022c A344 477C 	 .ascii "\243DG|6\320G\247\200x\303\370\013_Z\346\025"
 274      36D0 47A7 
 274      8078 C3F8 
 274      0B5F 5AE6 
 274      15
 275               	 .text
 276               	 .section .gnu.lto_EVENT_USB_Device_Connect.18a998172e3fae79,"",@progbits
 277 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\004\304B@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327]\272\266`\r#+\310(V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\202\221\tD3_d`La\\\310\310\n\267,\234\221\021$\001\322*\020\344\347\342\031\354Z\222\221Z\224\227Z\242\227\314"
 277      6062 4007 
 277      9240 1C04 
 277      C442 40CC 
 277      C8CC C0C8 
 278 0074 00        	 .string ""
 279 0075 24AF 1C33 	 .ascii "$\257\0343"
 280               	 .text
 281               	 .section .gnu.lto_EVENT_USB_Device_Disconnect.18a998172e3fae79,"",@progbits
 282 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\004\304B@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327}\271\266`/#+\310(V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\202\221\tD3_d`La\\\310\310\n\267,\234\221\021$\001\322*\020\344\347\342\031\354Z\222\221Z\224\227Z\242\227\314"
 282      6062 4007 
 282      9240 1C04 
 282      C442 40CC 
 282      C8CC C0C8 
 283 0074 00        	 .string ""
 284 0075 359E 1C66 	 .ascii "5\236\034f"
 285               	 .text
 286               	 .section .gnu.lto_EVENT_USB_Device_ConfigurationChanged.18a998172e3fae79,"",@progbits
 287 0000 789C C596 	 .ascii "x\234\305\226_L[U\034\307\177\277s{\377\320R\3506\036\f\211q"
 287      5F4C 5B55 
 287      1CC7 7FBF 
 287      737B FFD0 
 287      52E8 361E 
 288 0017 994F 6609 	 .ascii "\231Of\t}\231\311\336"
 288      7D99 C9DE 
 289 001f 14D8 4C4C 	 .string "\024\330LLt\017\303\375\211\303,\310-B\251\320\264\235:5\341BA\247\030B\210F\027]\0022\230\331\330\246\342\237\221\351(\343\201\201N\324\027\341aI\023\223\275htq\211\231\306X\317\337\366^\350\326\356Ob\023\316i\317\357\376\376\235s\276\037.\001\002k?\007\351\337\271 \300\020\235\261\002\220\f\177\007\320k\021\364\211/\232\3702g\371\2106\270\r\034\277>P\013N\245\216\246\260\033\342\313\234e\022\203\333-n\267\020\3312 \364\020\315\247\033\246\205=\315\310\022\372\266\300\230\343\214d'\376\270\206\375N\326\031v\376\315\365`\fim\333\021\332\020\016\320\037h\361\211\240\267X\341\232y{\201\274\347\364gr\271Gb\250\021x\264\340\026\022n\244\250\333\310\353\0057\260\361C$w\220\316\306\343.\277\342\371\316\222L6\227\2730=u\246\376J\340>\235\346\032\303-`\310\331\244\3638\235-9W"
 289      740F C3FD 
 289      89C3 2CC8 
 289      2D42 A9D0 
 289      B49D 3A35 
GAS LISTING  			page 20


 290 0120 2DC7 4F07 	 .string "-\307O\007_\200\r\225t\320\203\3246AmUr\256\246\363$\235Cr\336\300|6\262\3077\261\241\206\371\320\304:\364;\316\360fY\367\321\237\036t\322\031\347F.g\306\320 \320\\j{\201\331\351g\037\035\351)\356\247\215\016\324j\213@l<\201\254\215\217hj\346h\260\307\026\241/\273<\350\0276\226rx$\363\316\273\256\224&\201h\251\224l\315\354-7\\\242\254p\344\246\321\266\026\242Y\004^,uo\330\232\265\271\314\332^-\2536\331\351\265\037\257\247<\207\345\034q2\310\244\220\023R\350\303\322\207%\002d~\177k9\360\214\215\037\323\263\261\361\f\037\247\370x\222\216"
 290      5F80 0D95 
 290      74D0 83D4 
 290      3641 6D55 
 290      72AE A6F3 
 291 01db A2E8 36E4 	 .ascii "\242\3506\344\3566N\313#\004Y\211\005\262\241\354\300\325\277"
 291      EE36 4ECB 
 291      2304 5989 
 291      05B2 A1EC 
 291      C0D5 BF
 292 01ee C880 4B90 	 .ascii "\310\200K\220t\207\336\300\333\332\242\305yS6%n\272\270\337\252"
 292      7487 DEC0 
 292      DBDA A2C5 
 292      7953 3625 
 292      6EBA B8DF 
 293 0203 5067 FAD8 	 .ascii "Pg\372\330\r*\237/dU\237\362\252\210\250jLU\0052\324\322\274"
 293      0D2A 9F2F 
 293      6455 9FF2 
 293      AA88 A86A 
 293      4C55 0532 
 294 021a 69E3 397E 	 .ascii "i\3439~\351\306\245M\263d\316\375\250\301\3406\3552\244\217\244"
 294      E9C6 A54D 
 294      B364 CEFD 
 294      A8C1 E036 
 294      ED32 A48F 
 295 022f CF0F DD2F 	 .ascii "\317\017\335/\236\213\242\021E\335\325\031Q\376,6\265\002P\207"
 295      9E8B A211 
 295      45DD D519 
 295      51FE 2C36 
 295      B502 5087 
 296 0243 D3E9 D9A1 	 .ascii "\323\351\331\241\207\224\203\025E\2239T\254q\030\347\016\226"
 296      8794 8315 
 296      4593 3954 
 296      AC71 18E7 
 296      0E96 
 297 0255 4AE6 034A 	 .ascii "J\346\003J2Ml\2252\232j\357Tx\252\276K\320\177u\356\350BP\205"
 297      324D 6C95 
 297      329A 6AEF 
 297      5478 AABE 
 297      4BD0 7F75 
 298 026e E7B1 B507 	 .ascii "\347\261\265\007\362[\265\n\272l\221|0\363\022\255H\373u&\265"
 298      F25B B50A 
 298      BA6C 917C 
 298      30F3 12AD 
 298      48FB 7526 
 299 0283 0AA6 EC8D 	 .ascii "\n\246\354\215L\261EK\373g\3468\262\264:\323\036/\371\227!]\305"
 299      4CB1 454B 
 299      FB67 E638 
 299      B2B4 3AD3 
 299      1E2F F997 
 300 029a AC50 3DFA 	 .ascii "\254P=\372\200\365\323\367[\372\324\261\247\305^F\321O\355\274"
 300      80F5 D3F7 
 300      5BFA D4B1 
 300      A7C5 5E46 
 300      D14F EDBC 
 301 02ae CB19 4D2D 	 .ascii "\313\031M-\005\350*{\336G\344\363yK%5\002,\303k\031],\001\274"
 301      05E8 2A7B 
GAS LISTING  			page 21


 301      DE47 E4F3 
 301      794B 2535 
 301      022C C36B 
 302 02c7 027F D36B 	 .ascii "\002\177\323k\030\212\241\277\215q\356s\276\250.\013\233t*T\352"
 302      188A A1BF 
 302      8D71 EE73 
 302      BEA8 2E0B 
 302      9B74 2A54 
 303 02dc 1963 9EEC 	 .ascii "\031c\236\354\022\277\377\363\365\213\0366\310\323\033]\t\334"
 303      12BF FFF3 
 303      F58B 1E36 
 303      C8D3 1B5D 
 303      09DC 
 304 02ee 422A 369E 	 .ascii "B*6\236*I^\217\216Wn\251<\033O\337m87\026l<[\222\357\236K_\252"
 304      2A49 5E8F 
 304      8E57 6EA9 
 304      3C1B 4FDF 
 304      6D38 3716 
 305 030b BA4F CAAB 	 .ascii "\272O\312\253\256<0\330\370Y\311p.0\25400\\\340J\374\232\217"
 305      AE3C 30D8 
 305      F859 C970 
 305      2E30 AC30 
 305      305C E04A 
 306 0322 5FF1 F17C 	 .ascii "_\361\361|10d\224\004II0\330\370\345\355\355\221\033\f\023\274"
 306      3130 6494 
 306      0449 4930 
 306      D8F8 E5ED 
 306      ED91 1B0C 
 307 0338 84C9 F560 	 .ascii "\204\311\365`\270(\253\232u\203a\242(\030\346\371\215\233\\\017"
 307      B828 AB9A 
 307      7583 61A2 
 307      2818 E6F9 
 307      8D9B 5C0F 
 308 034c 06C3 0B86 	 .ascii "\006\303\013\206y~\325\253\242\030\364\202A\370Op\345V\271\301"
 308      797E D5AB 
 308      A218 F482 
 308      41F8 4F70 
 308      E556 B9C1 
 309 0360 201C 4251 	 .ascii " \034BQ\254\366\202\241\220\220ZU2\323\003\006a\254.\200A\204"
 309      ACF6 82A1 
 309      9090 5A55 
 309      32D3 0306 
 309      61AC 2E80 
 310 0376 0FBA C120 	 .ascii "\017\272\301 \302W\257\003CP\266\250s0T\031\034\f\325\2627\235"
 310      C257 AF03 
 310      4350 B6A8 
 310      7330 5419 
 310      1C0C D5B2 
 311 038c 8321 6428 	 .ascii "\203!d(0X^0\210\230\033T\217^0\314r\343Fj\317\203A,m\242\253"
 311      3058 5E30 
 311      8898 1B54 
 311      8F5E 30CC 
 311      72E3 466A 
 312 03a7 6BC1 202C 	 .ascii "k\301 ,5\324\230\007\303l10\314\271\300@\004\030\034\006\206"
 312      35D4 9807 
 312      C36C 3130 
 312      CCB9 C040 
GAS LISTING  			page 22


 312      0418 1C06 
 313 03bc 9A02 18D2 	 .ascii "\232\002\030\322\177*0\304\325\321y@\021\227\327}t5\240\036\303"
 313      7F2A 30C4 
 313      D5D1 7940 
 313      1197 D77D 
 313      7435 A01E 
 314 03d1 1424 E996 	 .ascii "\024$\351\226\307Q^L\267\323\335q$\255^/V\357\rH\264\233\206"
 314      C751 5E4C 
 314      B7D3 DD71 
 314      24AD 5E2F 
 314      56EF 0D48 
 315 03e8 BB23 9058 	 .ascii "\273#\220XeV\367\177\202d\225\201d\211+w\221\217\227\370\270"
 315      6556 F77F 
 315      8264 9581 
 315      6489 2B77 
 315      918F 97F8 
 316 03fd 500C 24DF 	 .ascii "P\f$\337*\311j\367\016$j\217(H\324k\371\332~J\277\316\27392\272"
 316      2AC9 6AF7 
 316      0E24 6A8F 
 316      2848 D46B 
 316      F9DA 7E4A 
 317 0417 A4E5 03BD 	 .ascii "\244\345\003\275\351\nT\326\373}\036:J\352\337\273I\244\026\227"
 317      E90A 54D6 
 317      FB7D 1E3A 
 317      4AEA DFBB 
 317      49A4 1697 
 318 042b DDE8 A27A 	 .ascii "\335\350\242z\312\236<\2016~SLQ\227]\212\322\204\242\346\344"
 318      CA9E 3C81 
 318      367E 534C 
 318      5197 5D8A 
 318      D284 A2E6 
 319 0440 BF5C 0205 	 .ascii "\277\\\002\005U\215\273TE<\002\211\243\326\f\007\270|\220\332"
 319      558D BB54 
 319      453C 0289 
 319      A3D6 0C07 
 319      B87C 90DA 
 320 0454 D62B 48C8 	 .ascii "\326+H\310\256\003\332\351\313;}\230\323\r\nJ\373\001z\263W\266"
 320      AE03 DAE9 
 320      CB3B 7D98 
 320      D30D 0A4A 
 320      FB01 7AB3 
 321 046a E67F F2CF 	 .ascii "\346\177\362\317>z\240\003\265,\317\303u\341'\366<V\037\336\221"
 321      3E7A A003 
 321      B52C CFC3 
 321      75E1 27F6 
 321      3C56 1FDE 
 322 047f E878 2192 	 .ascii "\350x!\222H\206\36745\204\033\273\023\221p\375\336\335\333\303"
 322      4886 F734 
 322      3584 1BBB 
 322      1391 70FD 
 322      DEDD DBC3 
 323 0493 7575 62DE 	 .ascii "uub\336\331e\307\273;\272R\007\331\257\272v0\237lIv\356m\211"
 323      D965 C7BB 
 323      3BBA 5207 
 323      D9AF BA76 
 323      309F 6C49 
 324 04ab F91B DB23 	 .ascii "\371\033\333#\255\235\r\207S\221dh\367\256\035\2177\355L\265"
GAS LISTING  			page 23


 324      AD9D 0D87 
 324      5391 6468 
 324      F7AE 1D8F 
 324      37ED 4CB5 
 325 04bf 4712 5D91 	 .ascii "G\022]\221T]+\004\033\273\273\332:\236k:\324\332\032I&\315z\333"
 325      545D 2B04 
 325      1BBB BBDA 
 325      3A9E 6B3A 
 325      D4DA 1A49 
 326 04d7 4ED0 D9F7 	 .ascii "N\320\331\367\324\341x\304\327\324\361rDoh\351\352L\032\273\016"
 326      D4E1 78C4 
 326      D7D4 F172 
 326      446F 68E9 
 326      EA4C 1ABB 
 327 04ec 3DFF 6C24 	 .ascii "=\377l$\241\363\030\377\001o8Rn"
 327      A1F3 18FF 
 327      016F 3852 
 327      6E
 328               	 .text
 329               	 .section .gnu.lto_EVENT_USB_Device_ControlRequest.18a998172e3fae79,"",@progbits
 330 0000 789C A554 	 .string "x\234\245T]H\024Q\024>g~vf\314\325m\355O)\250^\002\243\335\n\002\353%*\213\202\352A1\373\203\220vLmQ[%\210\036\234M\215\210B\211\036\242\237\007\t2\"H\bc1\004\361'\262,\373\243\244zX\f*\212\210^*\f\264s\346\316\214\253\375hta\317\235s\3179\337\375\316w\357]\t$\230<\216\320\257\320\007\260\213fL\003\224\232\037\002\304uI6\032s\300\322e\333\252\342[R^\245\201\225f\264\367"
 330      5D48 1451 
 330      143E 677E 
 330      7666 CCD5 
 330      6DED 4F29 
 331 008d 58E9 0A1A 	 .string "X\351\n\032\234\213\252\344\273\263\200\227\357-\247U\237\244\235XB\236\3166]C]\340\351\"9\256\033\210\374\001\bu\222\254\250>\215V\352\366\"S\301\305\320bYg\222}Wz\344\306\223I\253\331\032\035\253\303(\022\353,\204R\204=\344`\300\236\244I\235\334\220\272\222cc\003\235\215\037\016\316\227!\212\262\302Fc\243C\004[\b\333 G\361;N\006;\231d\324\240\2632\207s\347\262\231\307&\233\r\001\253\320`Y\315\013\201\367\247QL\226\371\357D\211g\371\001\034{9\364cX\216\340eT\241\002\345\245\220\033E\337\0058\037\267\254@\024\265\2430b\235\340/\275\332\006`\362\272M\331D\227\374"
 331      9C8B AAE4 
 331      BBB3 8097 
 331      EF2D A755 
 331      9FA4 9D58 
 332 014f 3474 491E 	 .string "4tI\036\302i8\025o\340\n\203c\007P\244\211\325\256//\250\336`\020YD\245\324\350\305\0347\210vPNQh'y\2159\362}:\003\261\225]\313\374\023\243O<\376\312\277\360w\033\270\013\275\357\342\231\036\204M`\321\204\255\025\350\227\345A\250w\266\006\360`\323J\035\230(\316p\263\325\311DeA\364\373\345\247\036Q\355\377\211j6\321\026\234\300\324\007\237\f>\325\376!\272\205n\246\356m3N<\275\232\272\022\333\244;\325T\266\333-1l~~*\244\204\f\202\340Dp\370H\251|Vx%\234\342\207\tt4\370\2520\235D\242\365\215Cg\031\\\267h\034J\355>\323\243\025\250\266\365e\250"
 332      C269 3815 
 332      6FE0 0A83 
 332      6307 50A4 
 332      89D5 AE2F 
 333 0212 B83A CCF4 	 .ascii "\270:\314\364\020\331\3639\\\023C\255\257\024\201\271\024\256"
 333      10D9 F339 
 333      5C13 43AD 
 333      AF14 81B9 
 333      14AE 
 334 0224 3166 F114 	 .ascii "1f\361\024\214m\202\350\221\323\205V\335\035}7\207?\347y/E|t"
 334      8C6D 82E8 
 334      91D3 8556 
 334      DD1D 7D37 
 334      873F E779 
 335 023c DD7F 765C 	 .ascii "\335\177v\\\003\020\370\245\002\240\002\3470\345\263q\"\032d"
 335      0310 F8A5 
 335      02A0 02E7 
 335      30E5 B371 
 335      221A 64
 336 024f B0AC F7E2 	 .ascii "\260\254\367\342Ugy\n\326\337\356a\260\bv\330\232\314\245\022"
 336      5567 790A 
 336      D6DF EE61 
 336      B008 76D8 
 336      9ACC A512 
 337 0263 4E08 7E43 	 .ascii "N\b~C;\334\275ED\376\006CUv\177\375\257\333\332\233\2743\364"
 337      3BDC BD45 
GAS LISTING  			page 24


 337      44FE 0643 
 337      5576 7FFD 
 337      AFDB DA9B 
 338 027a FFFB 1966 	 .ascii "\377\373\031fL:C\377\357\316\220\n>\326\337\362\236o&\225\001"
 338      4C3A 43FF 
 338      EFCE 900A 
 338      3ED6 DFF2 
 338      9E6F 2695 
 339 028f 0C82 FACB 	 .ascii "\f\202\372\313M\237U\352\274G\261b]BqZN\"\225Fq\266\335#\351"
 339      4D9F 55EA 
 339      BC47 B162 
 339      5D42 715A 
 339      4E22 9546 
 340 02a8 3932 B2E6 	 .ascii "92\262\346\027=\237\277U\307\365TD\247\363\246\243'\201E\260"
 340      173D 9FBF 
 340      55C7 F554 
 340      44A7 F3A6 
 340      A327 8145 
 341 02bd D7A6 974D 	 .ascii "\327\246\227M%\331p\316\272j\265\255\245\032O\323\336)5\315v"
 341      25D9 70CE 
 341      BA6A B5AD 
 341      A51A 4FD3 
 341      DE29 35CD 
 342 02d2 344D B6E7 	 .ascii "4M\266\347\272\275\006\247-i\342Qp\302E+J\2255\370\207\2136\376"
 342      BABD 06A7 
 342      2D69 E251 
 342      70C2 452B 
 342      4A95 35F8 
 343 02ea 0A0C 68A2 	 .ascii "\n\fh\242\377\332\324\177\004\312\177\f\361d\3472Wf1\212)@\251"
 343      FFDA D47F 
 343      04CA 7F0C 
 343      F164 E732 
 343      5766 318A 
 344 0301 0C12 28D8 	 .ascii "\f\022(\330\236\277\245pcm\231\031\2534kC\373!\260\315\254\251"
 344      9EBF A570 
 344      636D 9919 
 344      AB34 6B43 
 344      FB21 B0CD 
 345 0317 2939 606E 	 .ascii ")9`n6K\"f,\264r\365\252Pxk\321\246u\341\374X\371a3V\023.*\\\037"
 345      364B 2266 
 345      2CB4 72F5 
 345      AA50 786B 
 345      D1A6 75E1 
 346 0336 DE50 1533 	 .ascii "\336P\0253\303\353v\024\344\205C!1o\254\214TW\225W\326\356c/"
 346      C3EB 7614 
 346      E485 4321 
 346      316F AC8C 
 346      5457 9557 
 347 034e 5406 3F01 	 .ascii "T\006?\001\032-\222\377"
 347      1A2D 92FF 
 348               	 .text
 349               	 .section .gnu.lto_RNDIS_Task.18a998172e3fae79,"",@progbits
 350 0000 789C 8551 	 .ascii "x\234\205QAK\033A\024\376\336\314\254\033\332\202b\377\200(\364"
 350      414B 1B41 
 350      14FE DECC 
 350      AC1B DA82 
 350      62FF 8028 
GAS LISTING  			page 25


 351 0015 B85B 2C05 	 .ascii "\270[,\005OB4)\024\212\007\203UhAJv\203\221\030e\263x\361\220"
 351      4F42 3429 
 351      148A 0783 
 351      5568 414A 
 351      7683 9118 
 352 002e D926 8254 	 .ascii "\331&\202T\204 \245j=I{\357\255\347PJ\250\205*=J=,^\244\240'"
 352      8420 A56A 
 352      3D49 7BEF 
 352      ADE7 504A 
 352      A885 2A3D 
 353 0049 2FE2 C175 	 .ascii "/\342\301uf\327\004\365\342\203\231\367\346\315\373\276\357\315"
 353      66D7 04F5 
 353      E283 99F7 
 353      E6CD FBBE 
 353      EFCD 
 354 005b 1B06 86BB 	 .ascii "\033\006\206\2736\250V\213\200\274\362d\200Xc\017\bR\214\211"
 354      36A8 568B 
 354      80BC F264 
 354      8058 630F 
 354      0852 8C89 
 355 006f DFC3 900F 	 .ascii "\337\303\220\017x\253\033\362\021'\221\244\005\221\016@\2502"
 355      78AB 1BF2 
 355      1127 91A4 
 355      0591 0E40 
 355      A832 
 356 0081 2EA8 FA96 	 .ascii ".\250\372\2264\007\365cG\312\365p\371\373\031\253\177\beC^FU"
 356      3407 F563 
 356      47CA F570 
 356      F9FB 19AB 
 356      7F08 6543 
 357 0098 2A91 927B 	 .ascii "*\221\222{L(\020\336\250\003\245b\307\350\266\3767\326\f\243"
 357      4C28 10DE 
 357      A803 A562 
 357      C7E8 B6FE 
 357      37D6 0CA3 
 358 00ac E8F0 60F9 	 .ascii "\350\360`\371"
 359 00b0 68CE 1470 	 .string "h\316\024phG\221)3P\227\262\321\007\215V6\251v-<EL{\276\213\367)@\3136\326\233[\333\003\262\326\224\347Qd\226\2103<\271OS\347xM'\377\340\307\356\341\306\376O\336\321K\202\346\352\361'\323\241\257q3\016}Q\223)P\314\262\215\317\301\307\240\247DB\263\030\377\023!\243\303\013~M\273\251\206\221 gIh\224\214QK\270\220+RE\306\002\2651\306u_\277P?\t\036v@1\235\270\321\367\024q\264\272\371>j\341\277\323\256\244\016\3500v\025(\371\337\022\231m\200\210\307\365\027Ax\260FmDb\223\352A\352RCz\306\3072/sY\177\306\365\312\256o\345\321;\221\033\231\316\270\213\305\274\233\363\337\371\256\365\354\251\231v\034\317\255T\236[\366\253\211\027i;\343\025\027]\257b\253J{t\336s\355\364\353\361!\333\262\022\237-;\013\363\305\262?\255O\326\f\256"
 359      6847 9129 
 359      3350 97B2 
 359      D107 8D56 
 359      36A9 762D 
 360 01b1 0139 915B 	 .ascii "\0019\221["
 361               	 .text
 362               	 .section .gnu.lto_main.18a998172e3fae79,"",@progbits
 363 0000 789C 8D55 	 .string "x\234\215U\355oSe\024?\347\276\364\266\353d\005\334\2625d#$\206 \241\367\037\360\003\0230!\0325\022\302\022M*\366%t\336n\263\335\b\2131}\272\016\235\006b!A\324\305\227\205\fuQ\341\033\2121+\013#L\003K\370B\266h\322\310\007\344\2038\214A\203\211\345</w\267\335:\353\223\366y\356\275\347w\336\356\371\235s5\320`\345z\202\376\037["
 363      ED6F 5365 
 363      143F E7BE 
 363      F4B6 EB64 
 363      05DC B235 
 364 0077 27E9 441F 	 .string "'\351D\037\240V\274\016\220\367kh\312\013]^t\233\2321\266\025X\223\316\367f\003u)F\310i\272i`\356%\344\326p\013L0v\262<9u\003GY\231\025\331\277\225\034:H\2167\"$\021^\244\033\364\213C\303\332H\316i\245r\245r\354\324\321\305\347\036C\210\343\004\0313\301A\335\3077?\337\002|\013\241\224\265*L\233:\333I\b\035\034\021\346['\337\272\370F\266M\030e\254\270Y\002\201\007B\353"
 364      A056 BC0E 
 364      90F7 6B68 
 364      CA0B 5D5E 
 364      749B 9A31 
 365 00fe ED08 3DA8 	 .ascii "\355\b=\250\001\352\363P(O\335\261\342x\006M\022\275\016\017"
 365      01EA F350 
 365      284F DDB1 
GAS LISTING  			page 26


 365      E278 064D 
 365      12BD 0E0F 
 366 0112 D818 0B39 	 .ascii "\330\030\0139h$Q\206\351\360\347\327`\346\342\321\351I\005\353"
 366      6824 5186 
 366      E9F0 E7D7 
 366      60E6 E2D1 
 366      E949 05EB 
 367 0126 4573 1C3E 	 .ascii "Es\034>\314\217R.>\236\220\365\270\310\313R\371\\\203\302\267"
 367      CC8F 522E 
 367      3E9E 90F5 
 367      B8C8 CB52 
 367      F95C 83C2 
 368 013b BA8B F411 	 .ascii "\272\213\364\021\230\013\365\235B2\263W\n\326\326'\025\345\357"
 368      980B F59D 
 368      4232 B357 
 368      0AD6 D627 
 368      15E5 EF
 369 014e D664 BB6B 	 .ascii "\326d\273k\305_\213\337\276\322\337w\313\376\002\004\346B\337"
 369      C55F 8BDF 
 369      BED2 DF77 
 369      CBFE 0204 
 369      E642 DF
 370 0161 34FE 87C3 	 .ascii "4\376\207\303\3555\016\003\002\370\315\347_kU\330<3\353\241\205"
 370      ED35 0E03 
 370      02F8 CDE7 
 370      5F6B 55D8 
 370      3C33 EBA1 
 371 0176 6D7E 711D 	 .ascii "m~q\035\362\367\316\025oj\352\r\273\257\272\364\343\317\177\322"
 371      F2F7 CE15 
 371      6F6A EA0D 
 371      BBAF BAF4 
 371      E3CF 7FD2 
 372 018a 0B93 8692 	 .ascii "\013\223\206\222\250x\207\320\255K\016v\302\256\217\330\373;"
 372      A878 87D0 
 372      AD4B 0E76 
 372      C2AE 8FD8 
 372      FB3B 
 373 019c 1DE2 022C 	 .ascii "\035\342\002,\233y\357&y\236\022\005@xzm\344\304b\320\303\255"
 373      9B79 EF26 
 373      799E 1205 
 373      4078 7A6D 
 373      E4C4 62D0 
 374 01b2 6571 1E46 	 .ascii "eq\036F\227\3768\235XU\321@R0B\246\320\304\013\033\344\340\302"
 374      97FE 389D 
 374      5855 D140 
 374      5230 42A6 
 374      D0C4 0B1B 
 375 01c9 A773 8155 	 .ascii "\247s\201U\330\346$\032\252\372\217\bP\371\207:\034!\224\351"
 375      D8E6 241A 
 375      AAFA 8F08 
 375      50F9 873A 
 375      1C21 94E9 
 376 01dd A1F8 EA21 	 .ascii "\241\370\352!\027\324\037\344g\001Z{\261\315\374i"
 376      17D4 1FE4 
 376      6701 5A7B 
 376      B1CD FC69 
 377 01ed BC83 0E43 	 .string "\274\203\016C\210L.\3029\030\361\203bn/\347\030\267\276\360E]\006\372<\006r\324\342\\]\224\345\241\346@\225P\264c\2614}\343\027d\205\022\373\273R\261\034\\\247\301\363^3n\226\315h\3246c\030> \303Eb+S\353*\241\326\001\267=\262\364\325\231\373\227PU\\v|\351\324\273\307\rv\236t*\225\234\350\367#\215\372]\305vz\376\330&O\221bc\330(8\345\362\223\371\343\226\247\331\242\301\233\r5=z\376v\231z\345\202\230\006.I\005q\342\370==T\351\277\274F\372\267\036\334\243!t\221\264\3428Mp\356\252\205uH\326\225\357\276\325\"\205U\365\t%\221\350uI\022\305\205;\270^Ttif\374\215z\254j\362XE\315=V\370\353\254\317\355\3576\342\f7\003\bU\345v\351\324&\247A\341\237\263\233\\\205vz*\024r\244p\025.\337\316\007\227E\342\271\267\026"
GAS LISTING  			page 27


 377      884C 2EC2 
 377      3918 F183 
 377      626E 2FE7 
 377      18B7 BEF0 
 378 02ee 7BB1 55A7 	 .ascii "{\261U\247-\304k\326C=0\266U\247\304\313\277\276\035\254\256"
 378      2DC4 6BD6 
 378      433D 30B6 
 378      55A7 C4CB 
 378      BFBE 1DAC 
 379 0303 FA08 7B87 	 .ascii "\372\b{\207\225\220\317\370\nY\330\240\301\211\252\002\204d\001"
 379      9590 CFF8 
 379      0A59 D8A0 
 379      C189 AA02 
 379      8464 01
 380 0316 567D 71DC 	 .ascii "V}q\334D\351\342\n\005+\363e\257\221\376\016\370\222\277\351"
 380      44E9 E20A 
 380      052B F365 
 380      AF91 FE0E 
 380      F892 BFE9 
 381 032a 13A4 B671 	 .ascii "\023\244\266q@Zy\264VW\314\303\013\237\205\3438+\"\357h0\017"
 381      405A 79B4 
 381      5657 CCC3 
 381      0B9F 85E3 
 381      382B 22EF 
 382 0341 F9FC 95C8 	 .ascii "\371\374\225\3100\201W\314\337\331\006\3430,\273\355.\357\266"
 382      3081 57CC 
 382      DFD9 06E3 
 382      302C BBED 
 382      2EEF B6
 383 0354 D955 B509 	 .ascii "\331U\265\tz\265\341\250\337\357\370\352\241\232\253+\310g\271"
 383      7AB5 E1A8 
 383      DFEF F8EA 
 383      A19A AB2B 
 383      C867 B9
 384 0367 177B E7FF 	 .ascii "\027{\347\377\230\345\022\331E\340\225\263\274Q\360]\322\316"
 384      98E5 12D9 
 384      45E0 95B3 
 384      BC51 F05D 
 384      D2CE 
 385 0379 01F5 F582 	 .ascii "\001\365\365\202\320\013\317\356\336\273o\317\340\241D\246/1"
 385      D00B CFEE 
 385      DEBB 6FCF 
 385      E0A1 44A6 
 385      2F31 
 386 038b 1889 811E 	 .ascii "\030\211\201\036\033\216m\213\330\317\354\177\252\333\336\235"
 386      1B8E 6D8B 
 386      D8CF EC7F 
 386      AADB DE9D 
 387 039b 491D 4E64 	 .ascii "I\035Nd\262\366\376}O\332\221\b\377\355\352O\247\373\373\324"
 387      B2F6 FE7D 
 387      4FDA 9108 
 387      FFED EA4F 
 387      A7FB FBD4 
 388 03af 1139 442C 	 .ascii "\0219D,\263\322\211t\177f\030\214l\"\005F4:\224\335b\017e3\266"
 388      B3D2 8974 
 388      7F66 188C 
 388      6C22 0546 
GAS LISTING  			page 28


 388      343A 94DD 
 389 03c8 937A C53E 	 .ascii "\223z\305>x8c\247\372b\316P<a\017\r\246\034;\236p\016\016\223"
 389      7838 63A7 
 389      FA62 CE50 
 389      3C61 0F0D 
 389      A61C 3B9E 
 390 03e0 9A15 8D0E 	 .ascii "\232\025\215\016\246b\257fM:\323\003M\352.\032\217\341\300Ca"
 390      A662 AF66 
 390      4D3A D303 
 390      4DEA 2E1A 
 390      8FE1 C043 
 391 03f5 61EE 11   	 .ascii "a\356\021"
 392               	 .text
 393               	 .section .gnu.lto_.symbol_nodes.18a998172e3fae79,"",@progbits
 394 0000 789C 4DD3 	 .string "x\234M\323\327RSQ\024\006\340\365\237\235\003\t\204j\301B\221(\210\261\320b/<\213\217\340\023\374H\024\020T\260\f\026\004\225\250\243cC\005QF\035M\024\271\362\t\274P\342\205\027^\251\330\005\367\316A\366\316\315Z\337\277v9s\316\304\023O&B\022\374\274\217B\221\3767\"\344P\367~\377<\240\003\177\020\236.\336\004\210\305!\274G\240g\351\177\021\345\353\265\237%d\312\005\370f\313cP9[&\301\220\263\245\033yf\355\021\344\353\342=\003}gx\027as\367=\2109\350\2070oa8\254\017\372)\314w\370K\030v\370G\030q\370WX`\351\377\226\210\271\356 X\350\244\363R`\322\0160\352\244\355(4i\022,r\3229\211\232\364\020X\354\\s\030,q\330\t\226:\354\002\313\034\366\200\345\016{\301%\016\217\202K\035\036\007\2279\354\003\227;\354\007+\034\236"
 394      D752 5351 
 394      1406 E0F5 
 394      9F9D 0309 
 394      846A C142 
 395 00fb 5738 3C09 	 .string "W8<\t\256t\036\375\001\212\314\353<\005\256r\322q\024\233\364\030\270\372\177:\355\371\337\245\304|\236oRj\312\254\224\231\362U\312u\301"
 395      AE74 1EFD 
 395      018A CCEB 
 395      3C05 AE72 
 395      D271 149B 
 396 0129 5819 2C6D 	 .string "X\031,mo\007\316\200UVC`\265\3250Xcu\031\\c5\n\326Z\335\007cV\247\301\265Vg\301uV\347\300:\253\213`\275\325%p\275\325m\260\301\352\026\270\301\352\016\030\267\032\0037Z=\0047Y\335"
 396      6F07 CE80 
 396      5556 4360 
 396      B5D5 3058 
 396      6375 195C 
 397 016f 375B 5D07 	 .ascii "7[]\007\267X]\003\033\255n\202MVW\301f\253+`\213U\nl\265\032"
 397      B758 5D03 
 397      1BAD 6E82 
 397      4D56 57C1 
 397      66AB 2B60 
 398 0189 0113 8B52 	 .ascii "\001\023\213R\252I\262\343\t\245\032%\363n\016J\377=\323\235"
 398      AA49 B2E3 
 398      09A5 1A25 
 398      F36E 0E4A 
 398      FF3D D39D 
 399 019d 9F6A 54A8 	 .ascii "\237jT\250Y2:\016\267\004q\244U\262\246F\267J\322\214\243\tI"
 399      5932 3A0E 
 399      B704 71A4 
 399      55B2 A646 
 399      B74A D28C 
 400 01b4 BED7 2ED9 	 .ascii "\276\327.\331&I\223\227*I?\251Te\333%eX\276#\250\025\"3So\247"
 400      2649 9397 
 400      2A49 3FA9 
 400      5465 DB25 
 400      6558 BE23 
 401 01cf 95AA 0C49 	 .ascii "\225\252\fIz\264MU\205%=\226P\325;\203]\325\013\313kvIJ_V\033"
 401      7AB4 4D55 
 401      8525 3D96 
 401      50D5 3B83 
 401      5DD5 0BCB 
 402 01ea 9111 3D8D 	 .ascii "\221\021=\215\355\221\2549;\266;\270\253n\257${\203\232\032\b"
 402      ED91 AC39 
 402      3BB6 3BB8 
GAS LISTING  			page 29


 402      AB6E AF24 
 402      7B83 9A1A 
 403 01ff 6A76 50D7 	 .ascii "jvP\327\372\250\214\314z\252~\237\036\317C5\264I\362i\245\212"
 403      FAA8 8CCC 
 403      7AAA 7E9F 
 403      1ECF 4335 
 403      B449 F269 
 404 0215 C7A4 C39C 	 .ascii "\307\244\303\234\031\177-\2225\333\343S\"\311.\323\274\022I\345"
 404      197F 2D92 
 404      35DB E353 
 404      22C9 2ED3 
 404      BC12 49E5 
 405 0229 9A06 99E9 	 .ascii "\232\006\231\351\3720y@\305_\352QO\256\313\350\2567\327\245\365"
 405      FA30 7940 
 405      C55F EA51 
 405      4FAE CBE8 
 405      AE37 D7A5 
 406 023e AAA0 7B21 	 .ascii "\252\240{!\222\351\313u\317\365Y\246\223\177v\323n\330"
 406      92E9 CB75 
 406      CFF5 59A6 
 406      937F 76D3 
 406      6ED8 
 407               	 .text
 408               	 .section .gnu.lto_.refs.18a998172e3fae79,"",@progbits
 409 0000 789C 2588 	 .string "x\234%\210A\016\3020\020\304<\0336\224\206\366R\232\226"
 409      410E C230 
 409      10C4 3C1B 
 409      3694 86F6 
 409      529A 9600 
 410 0014 8213 85F7 	 .ascii "\202\023\205\367\361\177\211\025\330\032\037\3060>\374I\240\300"
 410      F17F 8915 
 410      D81A 1FC6 
 410      303E FC49 
 410      A0C0 
 411 0026 7C87 93B5 	 .ascii "|\207\223\265\307\345\352\310vP\257bG\006\033\323\024_\326I3"
 411      C7E5 EAC8 
 411      7650 AF62 
 411      4706 1BD3 
 411      145F D649 
 412 003b D516 2AAB 	 .ascii "\325\026*\253\316j\272\250\371\225F\325\252\032\336\360t\247"
 412      CE6A BAA8 
 412      F995 46D5 
 412      AA1A DEF0 
 412      74A7 
 413 004d A8D0 DB83 	 .ascii "\250\320\333\203h\367d\370\271id\263\230^\274\371\002\357\355"
 413      68F7 64F8 
 413      B969 64B3 
 413      985E BCF9 
 413      02EF ED
 414 0060 048B      	 .ascii "\004\213"
 415               	 .text
 416               	 .section .gnu.lto_.decls.18a998172e3fae79,"",@progbits
 417 0000 789C AD5C 	 .string "x\234\255\\\tx\024E\276\357\356\231\311$!\201$\b\262^\304k\017]\t\342\305\356\272r\004T\336\347\301G\300}\373\334\367f\207tCF\206\2318\007\210\373}\317N8\345\fG8\\N\221C\\\025\301\033\305\301#.\362@P\021\020\224"
 417      0978 1445 
 417      BEEF EE99 
 417      C924 2181 
 417      2408 B25E 
GAS LISTING  			page 30


 418 004f 2AE2 2A86 	 .string "*\342*\206[\b\220\367\257\256\352\351\256\352\252\231N\336\353\357\373g\252k\352\377\253\377U\377\252\256\256\211\")R]\276$\265\300u\377\237%\351t;I\272R\222\244\273\200\374@\313\200V"
 418      5B08 90F7 
 418      AFAE EAE9 
 418      AEEA AA99 
 418      4EDE EBEF 
 419 008d AD02 9281 	 .string "\255\002\222\201\032\2006\003m\225\360u\033\320v\240]@{\201\016\002}\013\324\004t\022\350\034\342\003\306\034\240B\240b\240N@W\002\225\002]\013\364+\240\033\200n\001\272\003\350\367@}\201\356\006\032"
 419      1A80 3603 
 419      6D95 F075 
 419      1BD0 76A0 
 419      5D40 7B81 
 420 00ce 741F D083 	 .string "t\037\320\203@\203\200\206"
 420      4083 8086 
 420      00
 421 00d7 FD3B D07F 	 .string "\375;\320\177\001\375\025h(\220\n4\f(\002T\r\024\003J"
 421      01FD 1568 
 421      2890 0A34 
 421      0C28 0254 
 421      0D14 034A 
 422 00ec 8D02 7A0C 	 .string "\215\002z\f\350q\240\377\006\322\201\236\004\252\003\232\0054\007h.\320|\240\205@\213\201\226\002=\r\324\021\344^\t\237\253\201\326"
 422      E871 A0FF 
 422      06D2 819E 
 422      04AA 039A 
 422      0534 0768 
 423 0116 BD00      	 .string "\275"
 424 0118 B416 681D 	 .string "\264\026h\035\320A\240\257\201\276\005:\013\324\ft\001HV$\311\003T\004\324\021\250\013\320\345@]\025\211\272\266\023\333z\200\332\003\025"
 424      D041 A0AF 
 424      81BE 053A 
 424      0BD4 0C74 
 424      0148 5624 
 425 0144 5DA7 60FB 	 .string "]\247`\373>\007\177\256'\355e\322\026\265Cr|&aY\354\027\262{>\361\207\211\265L\262\370\177\tX\177F6\206\317\035\244\336C\370L;\242\356~\r\177.\322\320\206?\213\b\216\211\355#\337yI\237]\340\313\377"
 425      3E07 7FAE 
 425      27ED 65D2 
 425      16B5 4372 
 425      7C26 6159 
 426 018c FA8D 82FB 	 .ascii "\372\215\202\373}\031\312\353\221?\025\253O\304\277O\306\375"
 426      7D19 CAEB 
 426      913F 15AB 
 426      4FC4 BF4F 
 426      C6FD 
 427 019e 224C E4B7 	 .ascii "\"L\344\267\355\004\253\231\330v\277d\331\327~\241x\312cd\220"
 427      ED04 AB99 
 427      D876 BF64 
 427      D9D7 7EA1 
 427      78CA 6364 
 428 01b3 08AF D9AF 	 .ascii "\b\257\331\257]7\205\360\240\270\220\t\246\375B\261\231C\360"
 428      5D37 85F0 
 428      A0B8 9009 
 428      A6FD 42B1 
 428      9943 F0
 429 01c6 4CF9 91DC 	 .ascii "L\371\221\334,\006j\207\342\n\351\371#\320\277$\313\357\366\013"
 429      2C06 6A87 
 429      E20A E9F9 
 429      23D0 BF24 
 429      CBEF F60B 
 430 01da C579 0764 	 .ascii "\305y\007d\017\305\222O&\362\025C\335\215\n\356\3470T\376\026"
 430      0FC5 924F 
 430      26F2 1543 
GAS LISTING  			page 31


 430      DD8D 0AEE 
 430      E730 54FE 
 431 01ef CA37 2978 	 .ascii "\3127)x<\r\207\373nP.'r\236\2261\017\302+Sp<\337\252\340\230"
 431      3C0D 87FB 
 431      6E50 2E27 
 431      729E 9631 
 431      0FC2 2B53 
 432 0209 4676 43B1 	 .ascii "FvC\261\206\342\261'\023K'\211>\313l\366\371\035\264)\221\255"
 432      86E2 B127 
 432      134B 2789 
 432      3ECB 6CF6 
 432      F91D B429 
 433 021f 31AA 9076 	 .ascii "1\252\220v\325\244\257\237i\bc\214z\t\006\342\371=0\354\266\361"
 433      D5A4 AF9F 
 433      6908 638C 
 433      7A09 06E2 
 433      F93D 30EC 
 434 0235 A2EF 7791 	 .ascii "\242\357w\2212\212\221?02\310\304N\262\304\267\245L\306$\372"
 434      328A 913F 
 434      3032 C8C4 
 434      4EB2 C4B7 
 434      A54C C624 
 435 024a DEC3 D82F 	 .ascii "\336\303\330/\207\341\275\023\030\374\262\305\233C\3062\252\312"
 435      87E1 BD13 
 435      18FC B2C5 
 435      9B43 C632 
 435      AACA 
 436 025c 6778 513E 	 .ascii "gxQ>\311'eS\367?*\374\270\274\3136\246\nI\237(6:\220\370;\313"
 436      C927 6553 
 436      F73F 2AFC 
 436      B8BC CB36 
 436      A60A 499F 
 437 0277 60A3 3C65 	 .ascii "`\243<e\306\211\211\275Urb\025\023\331\232\031~\224\343\n\004"
 437      C689 89BD 
 437      5572 6215 
 437      13D9 9A19 
 437      7E94 E30A 
 438 028c FC3E 221F 	 .ascii "\374>\"\037\302\271\b\237\27581\334I\266\306\376e\266\034c\277"
 438      C2B9 089F 
 438      BD38 31DC 
 438      49B6 C6FE 
 438      65B6 1C63 
 439 02a1 AE24 6397 	 .ascii "\256$c\227\225\351J\"\223\314\370\251T\320\276T\320\376Zb_\273"
 439      95E9 4A22 
 439      93CC F8A9 
 439      54D0 BE54 
 439      D0FE 5A62 
 440 02b7 0E5E 1B7F 	 .ascii "\016^\033\177o\240}\222\245\203);\342\333K\332\"\271\257'\271"
 440      6FA0 7D92 
 440      A583 293B 
 440      E2DB 4BDA 
 440      22B9 AF27 
 441 02cc 9195 1FE5 	 .ascii "\221\225\037\345}?\261\207\335F\3106}\240\375!\233=P\333\203"
 441      7D3F B187 
 441      DD46 C836 
 441      7DA0 FD21 
 441      9B3D 50DB 
GAS LISTING  			page 32


 442 02e1 4496 1718 	 .ascii "D\226\027\030\234\033\210^l\216C\365\243l\261W\306\360\241\371"
 442      9C1B 885E 
 442      6C8E 43F5 
 442      A36C B157 
 442      C6F0 A1F9 
 443 02f5 2697 E9DF 	 .ascii "&\227\351\337\034\003H\206\276\200w\253-\026Q\373\307H_(\017"
 443      1C03 4886 
 443      BE80 77AB 
 443      2D16 51FB 
 443      C748 5F28 
 444 030a 1C64 F0EE 	 .ascii "\034d\360\356\340\350S+\323\230\246\315\357\310\200\363{\333"
 444      E0E8 532B 
 444      D398 A6CD 
 444      EFC8 80F3 
 444      7BDB 
 445 031c 9828 8746 	 .ascii "\230(\207F\207%+\247+\344\373oI\271\027\224{3\374h\356\354@\370"
 445      8725 2BA7 
 445      2BE4 FB6F 
 445      49B9 1794 
 445      7B33 FC68 
 446 0334 CD1C D44F 	 .ascii "\315\034\324O\301r\225\302g\177\205\326\327\314C\177Q\360<\377"
 446      C172 95C2 
 446      677F 85D6 
 446      D7CC 437F 
 446      51F0 3CFF 
 447 0348 3782 E725 	 .ascii "7\202\347%X\377\251\340\371\363q\246\037t\335m\253\223\231{\363"
 447      58FF A9E0 
 447      F9F3 71A6 
 447      1F74 DD6D 
 447      AB93 997B 
 448 035d 1AC0 B419 	 .ascii "\032\300\264\031\300is\237l\311c\217\205ad^Dv\034\016\345*\005"
 448      C069 739F 
 448      6CC9 638F 
 448      8561 645E 
 448      4476 1C0E 
 449 0374 CB15 82CF 	 .ascii "\313\025\202\317\032\233\234\210\377\021\250\373\233\202\347"
 449      1A9B 9C88 
 449      FF11 A8FB 
 449      9B82 E7
 450 0383 7954 3711 	 .ascii "yT7\021\312\223\200\236\004\232\314\3046ZOt\226\234y\333\364"
 450      CA93 809E 
 450      049A CCC4 
 450      365A 4F74 
 450      969C 79DB 
 451 0398 1F92 C3CC 	 .ascii "\037\222\303\314\331h-4\005>\217\301\347T\005\257\201|\360\271"
 451      D968 2D34 
 451      053E 8FC1 
 451      E754 05AF 
 451      817C F0B9 
 452 03ac 52C2 B9DC 	 .ascii "R\302\271\334k\263\3634\324\027\311\331M\360y\024\250\220\330"
 452      6BB3 F334 
 452      D417 C9D9 
 452      4DF0 7914 
 452      A890 D8
 453 03bf 1EF5 69E6 	 .ascii "\036\365i\346w\264\016\231\256\340\034\203r\373,(\317\006\232"
 453      77B4 0E99 
 453      AEE0 1C83 
GAS LISTING  			page 33


 453      72FB 2C28 
 453      CF06 9A
 454 03d2 43D6 102B 	 .ascii "C\326\020+\031\033\r\"\261j\037\213\310\036f\277\366\361\342"
 454      191B 0D22 
 454      B16A 1F8B 
 454      C81E 66BF 
 454      F6F1 E2
 455 03e5 21ED EB15 	 .ascii "!\355\353\025\274\326A<E\214\376h\035\325\211\2617jg\306\202"
 455      BCD6 413C 
 455      458C FE68 
 455      1DD5 89B1 
 455      376A 67C6 
 456 03fa 89BB 1068 	 .ascii "\211\273\020h\261\202\327|\313m\343\262\273\204\355\260\004\356"
 456      B182 D77C 
 456      CB6D E3B2 
 456      BB84 EDB0 
 456      04EE 
 457 040c 1740 FD52 	 .ascii "\027@\375R\224g\211o\320UH\372@\361sV\301k*\264\266Bk,$\033Z"
 457      9467 896F 
 457      D055 48FA 
 457      40F1 7356 
 457      C16B 2AB4 
 458 0427 6F5D 50F0 	 .ascii "o]P\360\332\013\255\301\320Zl\026\221\325\347\241e\315\223&\351"
 458      DA0B ADC1 
 458      D05A 6C16 
 458      91D5 E7A1 
 458      65CD 9326 
 459 043c 7AAD AECF 	 .ascii "z\255\256\317\324\013\346\203\254\017\313\252\334>\017\254\201"
 459      D40B E683 
 459      AC0F CBAA 
 459      DC3E 0FAC 
 459      81
 460 044d 0A05 7906 	 .ascii "\n\005y\006\313\365\3223\272^\327\370\301\305&E\327\275\252\274"
 460      CBF5 D233 
 460      BA5E D7F8 
 460      C1C5 2645 
 460      D7BD AABC 
 461 0461 4CCE 83E1 	 .ascii "L\316\203\341q\265,\335 =\253\3037\300\334\316\031t0\303\313"
 461      71B5 2CDD 
 461      203D ABC3 
 461      37C0 DCCE 
 461      1974 30C3 
 462 0476 798E 7B55 	 .ascii "y\216{U~F\276A\302\375\030_\223B\013t\324N\232\214DYZ\243_2\277"
 462      7E46 BE41 
 462      C2FD 185F 
 462      9342 0B74 
 462      D44E 9A8C 
 463 0491 7DB1 04B8 	 .ascii "}\261\004\270\272\276\024H~\024\367i\001\255\224\213\355\310"
 463      BABE 1448 
 463      7E14 F769 
 463      01AD 948B 
 463      EDC8 
 464 04a3 44E8 2253 	 .ascii "D\350\"Sh\2054[!\247\345\242\260K\244\231\026v\232\275\332dG"
 464      6885 345B 
 464      21A7 E5A2 
 464      B04B A499 
 464      1676 9ABD 
GAS LISTING  			page 34


 465 04ba 2E53 A4EE 	 .ascii ".S\244\3562 \254\226K\210\310\206\021\364\306\375\317.\351b\030"
 465      3220 AC96 
 465      4B88 C886 
 465      11F4 C6FD 
 465      CF2E E962 
 466 04cf 017D 23A5 	 .ascii "\001}#\245\325q\\WK\200^\233\372\374ce~\027\252o\303\336\272"
 466      D571 5C57 
 466      4B80 5E9B 
 466      FAFC 6365 
 466      7E17 AA6F 
 467 04e6 61EF 2E19 	 .ascii "a\357.\031\314\215\254\nU\317\033\246\036\302\031\323X\303\347"
 467      CC8D AC0A 
 467      55CF 1BA6 
 467      1EC2 19D3 
 467      58C3 E7
 468 04f9 8959 1E26 	 .ascii "\211Y\036&m\365\026r\311O\230UO\210\355\363\017\313>\n\232\320"
 468      6DF5 1672 
 468      C94F 9855 
 468      4F88 EDF3 
 468      0FCB 3E0A 
 469 050f B156 BCD6 	 .ascii "\261V\274\326\244H\231\233\326t\317\2149^}mw\303\231\nZ\371R"
 469      A448 999B 
 469      D674 CF8C 
 469      395E 7D6D 
 469      77C3 990A 
 470 0526 6094 8294 	 .ascii "`\224\202\224\024\\\260\2753\246a0\034j\252\0134\217\bMO\375"
 470      145C B0BD 
 470      33A6 6130 
 470      1C6A AA0B 
 470      348F 084D 
 471 053c 7DD6 8DFA 	 .ascii "}\326\215\372X\217*{\021\326#.\324\364\212\261\026~\002\016%"
 471      588F 2A7B 
 471      11D6 232E 
 471      D4F4 8AB1 
 471      167E 020E 
 472 0551 5051 1750 	 .ascii "PQ\027P9b%\227\314\232\352\003%\251\350\350,\325\033\321Q\243"
 472      3962 2597 
 472      CC9A EA03 
 472      25A9 E8E8 
 472      2CD5 1BD1 
 473 0567 F77E D4E8 	 .ascii "\367~\324\350\205\2471r\335\006\271\263Q\362`3bW\247oVa\307\252"
 473      85A7 3172 
 473      DD06 B9B3 
 473      51F2 6033 
 473      6257 A76F 
 474 057f F210 6BB4 	 .ascii "\362\020k\264\213\202\340M{\020\304]\250\224+Vi\355'l\270\273"
 474      8B82 E04D 
 474      7B10 C45D 
 474      A894 2B56 
 474      69ED 276C 
 475 0595 5668 13AB 	 .ascii "Vh\023\253\020\322\301\225\002)\273\002\243](\220/V`\035vo\257"
 475      10D2 C195 
 475      0229 BB02 
 475      A35D 2890 
 475      2F56 601D 
 476 05ac 76D0 FE6F 	 .ascii "v\320\376o.\240\n8PY\005^e\tL\262oc\215~\235-\373\226\332\003"
 476      2EA0 0A38 
GAS LISTING  			page 35


 476      5059 055E 
 476      6509 4CB2 
 476      6F63 8D7E 
 477 05c6 D1CC BE2D 	 .ascii "\321\314\276-$\3736\030C\242F\226\251\344\243\312~&\331\372\351"
 477      24FB 3618 
 477      43A2 4696 
 477      A9E4 A3CA 
 477      7E26 D9FA 
 478 05db 64EB CFB3 	 .ascii "d\353\317\263\n(At`rbz\036X\232y\036 \211\311\020b\262,LLYR\275"
 478      0A28 4174 
 478      6072 627A 
 478      1E58 9A79 
 478      1E20 89C9 
 479 05f8 C834 9B1D 	 .ascii "\3104\233\035\246\301\322\3619\260iR?\373\241j\253!\321|\207"
 479      A6C1 D2F1 
 479      39B0 6952 
 479      3FFB A16A 
 479      AB21 D17C 
 480 060d 597C 8C59 	 .ascii "Y|\214Y|\264`\276<\253\320\322\002\301\326UZ\254\247\232\032"
 480      7CB4 60BE 
 480      3CAB D0D2 
 480      02C1 D655 
 480      5AAC A79A 
 481 0622 676F 79F5 	 .ascii "goy\365\267\343\365F=\325\322\322\253\210\016\342\273:\t\203"
 481      B7E3 F546 
 481      3DD5 D2D2 
 481      AB88 0EE2 
 481      BB3A 0983 
 482 0636 7807 1BC4 	 .ascii "x\007\033\304\313\f;\330\202X\221^dD\274NZ\256\353\263\364E0"
 482      CB0C 3BD8 
 482      8258 915E 
 482      6444 BC4E 
 482      5AAE EBB3 
 483 064d 25C9 B299 	 .ascii "%\311\262\231\361^7\032m\227\273r\273JO\207\277\224V \271\366"
 483      F15E 371A 
 483      6D97 BB72 
 483      BB4A 4F87 
 483      BF94 5620 
 484 0663 E8        	 .ascii "\350"
 485 0664 AB0D DEBB 	 .string "\253\r\336\273:\031_\"6J\347O\351\207\017C\305\306\306S[\266\315\224w\3505S\365\237[Z\374\022\255$\352@\244\345n\242\245\245\230\"ma\264\"\262\315\322'\315I\311\246\274\252\274K\240\021\301\333\303\0234\265k\312s\275\365\261\372E\230\325\\{b\237\013O4\362=q\254\316\356\211&\243\321^W\236\250\323\247\245j\273HiG\354e\035\361\025W\277u\333j\275\363\365&\030\223\256\325;D\324K\353r\212o\177P\305\260?\021\350 +\320\327\\\201^\371x\252o\334Z\275\261\245\245k+\302\3420\317\344\351\233\255\330N\214\013\306)\\\027\314\246\006\303SF\243o3\273\200p~Y\2179q:X\301rR\351#-\024\t\325\365u\253\323\275J\031z$\372~\317\017\326y\255\017\326c\234\001\365\202\342\306\241M\254C\217;\205Z\332\230:\217\254R\003\213\303'\\\313t\212\365\346V\347"
 485      3A19 5F22 
 485      364A E74F 
 485      E987 0F43 
 485      C5C6 C653 
 486 0765 DAC9 F7DE 	 .ascii "\332\311\367\336\2519\226\017T\371u\031-\340N\272\362\201\316"
 486      A939 960F 
 486      54F9 7519 
 486      2DE0 4EBA 
 486      F281 CE
 487 0778 0CA0 93AC 	 .ascii "\f\240\223\254zg\270\352mh@+)\024\257Kz\267\"`\233]\250\270_"
 487      7A67 B8EA 
 487      6D68 402B 
 487      2914 AF4B 
 487      7AB7 2260 
 488 0791 10A0 5498 	 .ascii "\020\240T\230\375h4:\347J\305ZG\230\235\313\034f\027\270*/\232"
 488      FD68 343A 
 488      E74A C55A 
GAS LISTING  			page 36


 488      4798 9DCB 
 488      1C66 17B8 
 489 07a8 7823 8932 	 .ascii "x#\2112<\353(\322I\276\244\013\250\241\364\244\0075\252Q\334"
 489      3CEB 28D2 
 489      49BE A40B 
 489      A8A1 F4A4 
 489      0735 AA51 
 490 07bd CD2B B433 	 .ascii "\315+\2643\020\027\345\214Z\205'\331\231\017Mg\264&y"
 490      1017 E58C 
 490      5A85 27D9 
 490      990F 4D67 
 490      B426 79
 491 07d0 4C54 B2E7 	 .string "LT\262\347\353\351\036~\270Q\371z\256\321h\202+\r\235\276\020\361\021)\237\344j<s2\353\213%|IO\330$U\345)\n\032\030\323\332\344\213i\254/\246s%{m\3624\323\027^\332\027[3\370b\226\302L.\317z\270\271\250V\237l\344\242\255\304x3\025\376"
 491      EBE9 1E7E 
 491      B851 F97A 
 491      AED1 6882 
 491      2B0D 9DBE 
 492 0828 20B0 B3B9 	 .string " \260\263\271\"\356\370\250-\3412\227\016\027j%K)\347Xa\316W\332Y\"Q\341\365\026\337i\346\214\202\030\025\351K\243Q\275@\3234\274 \274\3523\207\327\002\256\205\326O\261\302\353\220\021^_\363\375\241\323s\303\"6F\026s\341\337\332\242\340\305\207\211~\312\025\372R\026}\031\027\375s\202>\243\324\034\033c\275YW]\252\334hL\032\313\33346\226\263\222=\303\225l\3356K2\254\370T\257\033\305W\261\360\253\271\360\273\t\274\3735\335s\274\024H\335H\216\230\235\3037\346\314\231\316D\263&\2631\r\316Z}'5]\2540\340\263p\n\334\260\206\265\323\013\\;\265lk\313\370\177\231MQ\377\340\373\256\226y\376X\237y"
 492      22EE F8A8 
 492      2DE1 3297 
 492      0E17 6A25 
 492      4B29 E758 
 493 08f4 BEC2 15F1 	 .ascii "\276\302\025\361\251\217I\244\030\317\337\250kEZ\347\256\277"
 493      A98F 49A4 
 493      18CF DFA8 
 493      6B45 5AE7 
 493      AEBF 
 494 0906 D732 F7F7 	 .ascii "\3272\367\367:\267\277\227\315\376J\335\033dC\306\340\341/\276"
 494      3AB7 BF97 
 494      CDFE 4ADD 
 494      1B64 43C6 
 494      E0E1 2FBE 
 495 091a DFE4 07CF 	 .ascii "\337\344\007\317l*x~0F\342\233.\202\207^|\253\362Q\226\263U\253"
 495      6C2A 787E 
 495      3046 E29B 
 495      2E82 875E 
 495      7CAB F251 
 496 0932 2251 8F44 	 .ascii "\"Q\217D\337\215N\31356\245.\314\276\261\265k\357\367\024\347"
 496      DF8D 4ECB 
 496      3536 A52E 
 496      CCBE B1B5 
 496      6BEF F714 
 497 0947 DA7B B3AB 	 .ascii "\332{\263\253D\360.\033\340\357;eZ\333\230\332\376y:\277\276"
 497      44F0 2E1B 
 497      E0EF 3B65 
 497      5ADB 98DA 
 497      FE79 3ABF 
 498 095c 6784 CE2E 	 .ascii "g\204\316.W\350\r,\372\207\\\364\343,z\223+\364\315,\372G\334"
 498      57E8 0D2C 
 498      FA87 5CF4 
 498      E32C 7A93 
 498      2BF4 CD2C 
 499 0973 489C B38B 	 .ascii "H\234\263\213A\237"
 499      419F 
 500 0979 EA73 83FE 	 .string "\352s\203\376?,\372V\376\334\260\313\312\300\030~\235+\370\217Y\370\355\334`\230\277\227\021\376\023W\350\237\260\350\237r\204?\220z\347\223\033\270\241\226a\213\363sG\250\251\362C\n_$\274\262\362\342\261\2603\363\302\352!\247\366u\215\315GS\023\345\035z\035gw\307\366\n\"\313+\237\025\027\033\361\246\343\027\n\352\361{\306\200\252,1\273k\022\275\273&9\336HH\366\027\022\016\013\355a\323\3721\207\313p\303/9\036\257k\234w|{\345x\375\200\261i'\231\353\215E9|\210\375\\\210sG\267wq@\254\022@\034\340A\244\3467\324\3666\003\017\363\277\"\340?\304\025a\356\361F\217C\204M\002\210o\270\020\353O\357~d\341d\375]\364\310\337Kv3\213\030S\205\"\215\367\313\346\254\3610\216?\331\326\331av\222\351\325.\333\0343\315\317\227\373G\256\334\033\232\377i\017Zs\340\276."
 500      3F2C FA56 
 500      FEDC B0CB 
GAS LISTING  			page 37


 500      CAC0 187E 
 500      9D2B F88F 
 501 0a7a F989 0B32 	 .string "\371\211\0132{\313\013\227\331\3547\313\200\370T"
 501      7BCB 0B97 
 501      D9EC 37CB 
 501      80F8 5400 
 502 0a8a 714C 1048 	 .string "qL\020H\273\235\201\264O"
 502      BB9D 81B4 
 502      4F00 
 503 0a94 7182 0BD1 	 .string "q\202\013\321|t\367<J\225\211\206\034G\004 \247\270\241tb\017\033J'\005\374g\370\246\230\362\342/lz\340\245\313\330\\>\304Y.\304\253O\357\2711\r\341zVmf#\305\3616G\221\336\020\310q\201+\307\233+\017\364\262\251\202\003C\317\343C\264p!\326\2559{%W\225\\i\242\361\356\243&\325\373\321\354\257>j=\271\320\365;y\302w\037\250\001\272\036\226\315\262Y\222\305\251\257\306\343b\365\237\345i\340\003\2019&y\370I\342\273\277\264!I\250\362\021\260\2568ILf\025\351\2235I|-\220{\006W\356\331Sf\344\330\"\001?\273\215\317\347C\314\344B\234;\232rB\314\020@\314\346B\314=\376O\217\003b\236"
 503      7C74 F73C 
 503      4A95 8986 
 503      1C47 0420 
 503      A7B8 A174 
 504 0b61 A29E 0791 	 .string "\242\236\007\221j\232\243\217\303\273\262&\377\323\002\376y\\\021\336Y\277\351\217\213M\007.\323\365\022\327\303s\001\353#\277c\263\355\023\256(\324e&\355\327\216\334\264 \035G\346\320\254k\307We\021W\225y\307\177\036\352\260\346B\001\304\022\201Ow;}\272F"
 504      6A9A A38F 
 504      C3BB B226 
 504      FFD3 02FE 
 504      795C 11DE 
 505 0bb5 B18C 1F59 	 .string "\261\214\037Y[\026u\021\344:\264"
 505      5B16 7511 
 505      E43A B400 
 506 0bc1 1259 7339 	 .string "\022Ys9k\315\315\316d\267N \310\nZ\220k\244ex\036\334\275R\236\003\223\307Rx0~\242+>\360\002\017l\016\020H\254\026"
 506      6BCD CDCE 
 506      64B7 4E20 
 506      C80A 5A90 
 506      6BA4 6578 
 507 0bee 625E 3A0B 	 .string "b^:\013\264\230[\206\264\250\205\325\351\023 \251\007-\335\266\246YE\033c\317\322@\020\237{^\317\0337v\2221\177\331O\343\310\306[\\\002\243\247qt\023\3509\017>\234C\226\231\346\246\\\201xO\356\037\036\353\024KA\236Uh1\363\212\"\355a\345\347t\374<c\212O\032OMy\3552\364\026\3274\005\336\256?\230\325\026/2H\333S{\017\224\302r\337\260\205\271\032>\312\3028\002\343%\217u\306\005\361\264Xka\323\323\315G\233\256x\273\026\006\3178\375\374\023-\036\352\324\023\377\230R\223lvs\225a\231\013\206\030/{\350\203J\251\035\023\nt\005\327K\342\201L\216=\354l\250\367\246\336\365\230g"
 507      B498 5B86 
 507      B4A8 85D5 
 507      E913 20A9 
 507      072D DDB6 
 508 0cb5 6A52 7D04 	 .ascii "jR}\004\363\240\261ia\363\026.\233%?\222gJ\201)\017\001\360\330"
 508      F3A0 B169 
 508      61F3 162E 
 508      9B25 3F92 
 508      674A 8129 
 509 0ccd 01D2 2EF6 	 .ascii "\001\322.\366K\023\\\276\336\337\320 \027\251\362\233\036?T\316"
 509      4B13 5CBE 
 509      DEDF D020 
 509      17A9 F29B 
 509      1E3F 54CE 
 510 0ce1 2CA0 4780 	 .ascii ",\240G\200\013\024$\362\333\036?m\235\227&t@\326A\365\031\254"
 510      0B14 24F2 
 510      DB1E 3F6D 
 510      9D97 2674 
 510      40D6 41F5 
 511 0cf7 4316 C54F 	 .ascii "C\026\305O\027\310\346D\227\256{\326\252\223mM_\261\252\025["
 511      17C8 E644 
 511      97AE 7BD6 
 511      AA93 6D4D 
 511      5FB1 AA15 
 512 0d0c F5BB 56B5 	 .ascii "\365\273V\265\231\024\320\255\343\360\201\355\262\013\255\312"
 512      9914 D0AD 
 512      E3F0 81ED 
 512      B20B ADCA 
 513 0d1c 1B3D D7C3 	 .ascii "\033=\327\303\337w<\036>\0379\2344\357\303\322\272.\344\260\005"
GAS LISTING  			page 38


 513      DF77 3C1E 
 513      3E1F 399C 
 513      34EF C3D2 
 513      BA2E E4B0 
 514 0d31 E502 DE81 	 .ascii "\345\002\336\201)K\f\353\350\n}g\236\354j@/\021\272\233\243g"
 514      294B 0CEB 
 514      E80A 7D67 
 514      9EEC 6A40 
 514      2F11 BA9B 
 515 0d47 3BEB 5FDE 	 .ascii ";\353_\336\271\030Y\f\367E\203q\304\006\203}\341\006Lx\264\253"
 515      B918 590C 
 515      F745 8371 
 515      C406 837D 
 515      E106 4C78 
 516 0d5d 36B5 AFC1 	 .ascii "6\265\257\301\203\300\360\231\230\257Y0\352\034\r)\372\304`_"
 516      83C0 F099 
 516      98AF 5930 
 516      EA1C 0D29 
 516      FAC4 605F 
 517 0d71 D9C1 8EBA 	 .ascii "\331\301\216\272\001\313\023\2035\331\301N\273\001+\024\201\351"
 517      01CB 1383 
 517      35D9 C14E 
 517      BB01 2B14 
 517      81E9 
 518 0d83 A9E3 77CF 	 .ascii "\251\343w\317\357\3029\020I\332v7\021rH\344|\332\352\f\374\231"
 518      EFC2 3910 
 518      49DA 7637 
 518      1172 48E4 
 518      7CDA EA0C 
 519 0d99 2003 9BBF 	 .ascii " \003\233\277HQ\244\213\254\nT\257\244X,\266\307\331\t\324\221"
 519      4851 A48B 
 519      AC0A 54AF 
 519      A458 2CB6 
 519      C7D9 09D4 
 520 0dae BE27 0BE5 	 .ascii "\276'\013\345\354!z\251\030\256\231\016\312\005,\034/\216\272"
 520      EC21 7AA9 
 520      18AE 990E 
 520      CA05 2C1C 
 520      2F8E BA
 521 0dc1 88E1 2ED0 	 .ascii "\210\341.\320\322=\355F\272\313\304p\027'\0301\216\301\326\270"
 521      D23D ED46 
 521      BACB C470 
 521      1727 1831 
 521      8EC1 D6B8 
 522 0dd5 01BB 5C0C 	 .ascii "\001\273\\\fV\377!\245\352z7\252^\301\201K_\244\2721\235\230"
 522      56FF 21A5 
 522      EA7A 37AA 
 522      5EC1 814B 
 522      5FA4 BA31 
 523 0deb EF24 51B0 	 .ascii "\357$Q\260\276\325q\323(\210\033k\342\336X\310\314\222\316n\017"
 523      BED5 71D3 
 523      2888 1B6B 
 523      E2DE 58C8 
 523      CC92 CE6E 
 524 0e00 70E6 EDAF 	 .ascii "p\346\355\257\226\303\303\263\236^\377`\325\337c\261\034\362"
 524      96C3 C3B3 
 524      9E5E FF60 
GAS LISTING  			page 39


 524      D5DF 63B1 
 524      1CF2 
 525 0e12 1C62 A152 	 .ascii "\034b\241R\347\266)\363S\306\212.\235\300\262\242|\303\240\240"
 525      E7B6 29F3 
 525      53C6 8A2E 
 525      9DC0 B2A2 
 525      7CC3 A0A0 
 526 0e26 35EE 9ECB 	 .ascii "5\356\236\3137[\323tzf\256\265\317\314\275M\234\\3\357\177QH"
 526      375B D374 
 526      7A66 AEB5 
 526      CFCC BD4D 
 526      9C5C 33EF 
 527 0e3d 0C41 F6D3 	 .ascii "\fA\366\323f\377\264\343\2465\272\236\253\312\207\001C\221f\267"
 527      66FF B4E3 
 527      A635 BA9E 
 527      ABCA 8701 
 527      4391 66B7 
 528 0e51 A7A7 B3AC 	 .ascii "\247\247\263\254\270\252\374\235\307c\310\370\003;\341\317\233"
 528      B8AA FC9D 
 528      C763 C8F8 
 528      033B E1CF 
 528      9B
 529 0e62 D21E 4D69 	 .ascii "\322\036Mi?\270\232\360\377>e\206=\336W\033r\374\320\372\t\203"
 529      3FB8 9AF0 
 529      FF3E 6586 
 529      3DDE 571B 
 529      72FC D0FA 
 530 0e78 C02D 9C62 	 .ascii "\300-\234b\213\367W\335\200e\230 \026o\261M\020\357\260`\274"
 530      8BF7 57DD 
 530      8065 9820 
 530      166F B14D 
 530      10EF B060 
 531 0e8d 6857 C460 	 .ascii "hW\304`k\355`\rn\300\204\207\177kS\353\354`[\335\200\361\216"
 531      6BED 600D 
 531      6EC0 8487 
 531      7F6B 53EB 
 531      EC60 5BDD 
 532 0ea4 FFF2 2EBB 	 .ascii "\377\362.\273?U\371Gc\266?\352\271\032\3766\031\177\217\033\177"
 532      3F55 F947 
 532      63B6 3FEA 
 532      B91A FE36 
 532      197F 8F1B 
 533 0eb9 4F1A 7F4F 	 .ascii "O\032\177O\303\337\364\245H;\3333\341l\013\027\f\375\263s|m9"
 533      C3DF F4A5 
 533      483B DB33 
 533      E16C 0B17 
 533      0CFD B373 
 534 0ed0 3F53 DE64 	 .ascii "?S\336d\033_\330s\337\261P\216\265\3379\307\370Z;Y\231\257\223"
 534      1B5F D873 
 534      DFB1 508E 
 534      B5DF 39C7 
 534      F85A 3B59 
 535 0ee7 F145 4ECC 	 .ascii "\361EN\314eE9o[\027\223\235\fc9\274=\265\356\337\310`\025\317"
 535      6545 396F 
 535      5B17 939D 
 535      0C63 39BC 
 535      3DB5 EEDF 
GAS LISTING  			page 40


 536 0eff 76BA D784 	 .ascii "v\272\327\204\353M\340.\266:m\265\b\322V\257\264U[X%\234\335"
 536      EB4D E02E 
 536      B63A 6DB5 
 536      08D2 56AF 
 536      B455 5B58 
 537 0f16 EA5E D616 	 .ascii "\352^\326\026\213\035\266\230\322!\233-j\275\\[\300s\334\206"
 537      8B1D B698 
 537      D221 9B2D 
 537      6ABD 5C5B 
 537      C073 DC86 
 538 0f2a E6C6 95F2 	 .ascii "\346\306\225\362g\351\207@\376/\0302& U>b\372\213$\240\235\347"
 538      67E9 8740 
 538      FE2F 1832 
 538      2620 553E 
 538      62FA 8B24 
 539 0f41 8EDD F9AC 	 .ascii "\216\335\371\254\221\200\306{Q\002\332\336\241\325\th\202\027"
 539      9180 C67B 
 539      5102 DADE 
 539      A1D5 0968 
 539      8217 
 540 0f53 27A0 27BD 	 .ascii "'\240'\275L\002\252\377\270\020% T\237=\001-\370x\272\337H@x"
 540      4C02 AAFF 
 540      B810 2520 
 540      549F 3D01 
 540      2DF8 78BA 
 541 0f6b 8174 D890 	 .ascii "\201t\330\220\003\261fX IiC9F\346S\037\333V['\334\200\361\206"
 541      03B1 6658 
 541      2049 6943 
 541      3946 E653 
 541      1FDB 565B 
 542 0f84 39EF B22B 	 .ascii "9\357\262+\252\312\223\275hdN\361\242q8\315k\033\207\242H\033"
 542      AACA 93BD 
 542      6864 4EF1 
 542      A271 38CD 
 542      6B1B 87A2 
 543 0f9a E7B5 1D4E 	 .ascii "\347\265\035N\257)"
 543      AF29 
 544 0fa0 CA36 F3CC 	 .ascii "\3126\363\314\240c\352\231\3310\363l\272a\343\244\364\314c\304"
 544      A063 EA99 
 544      D930 F36C 
 544      BA61 E3A4 
 544      F4CC 63C4 
 545 0fb4 F8D8 8CEF 	 .ascii "\370\330\214\357nT\371i\031I\231\345\b\266\"\315`\305q\236\004"
 545      6E54 F969 
 545      1949 99E5 
 545      08B6 22CD 
 545      60C5 719E 
 546 0fc9 6242 3C05 	 .ascii "bB<\0053\363\306\2565\360D\255\033O\324d\2246\326\340Qj\r\322"
 546      33F3 C6AE 
 546      35F0 44AD 
 546      1B4F D464 
 546      9436 D6E0 
 547 0fe1 52DA CCAA 	 .ascii "R\332\314\252<\307\333\3321Z\357\345\217Q\3631I\221\226\260\362"
 547      3CC7 DBDA 
 547      315A EFE5 
 547      8F51 F331 
 547      4991 96B0 
GAS LISTING  			page 41


 548 0ff6 3B7A 9D4B 	 .ascii ";z\235K\344\277UZ\257O"
 548      E4BF 555A 
 548      AF4F 
 549 1000 4AF5 C662 	 .ascii "J\365\306b\244}n\031\203T\311\316*\305Y\345\261\314i\232%uz\274"
 549      A47D 6E19 
 549      8354 C9CE 
 549      2AC5 59E5 
 549      B1CC 699A 
 550 1018 71C0 523F 	 .ascii "q\300R?\017\217c\270\027EZ\231U\274\005n\304K9\305[\355\024\357"
 550      0F8F 63B8 
 550      1745 5A99 
 550      55BC 056E 
 550      C44B 39C5 
 551 1030 0E87 7427 	 .ascii "\016\207t'dK\274\2236\361\204[9\216\307\210\205\304g\326\343"
 551      644B BC93 
 551      36F1 845B 
 551      398E C788 
 551      85C4 67D6 
 552 1045 01F4 F71C 	 .ascii "\001\364\367\034\253\225\203m\021\245\325_1\016\253\225\342P"
 552      AB95 836D 
 552      11A5 D55F 
 552      310E AB95 
 552      E250 
 553 1057 4A72 E8A4 	 .ascii "Jr\350\244p,Nj\274\2166>\216W\366\377\231\244c\242s\212\304\351"
 553      702C 4E6A 
 553      BC8E 363E 
 553      8E57 F6FF 
 553      99A4 63A2 
 554 106f F396 D25D 	 .ascii "\363\226\322]\350\260R\345\245\255\016\324e\202@5\207\216\"\275"
 554      E8B0 52E5 
 554      A5AD 0ED4 
 554      6582 4035 
 554      878E 22BD 
 555 1083 C4DA CCD1 	 .ascii "\304\332\314\321\353\323\224\315\272c1(\233!\231\253h\243\241"
 555      EBD3 94CD 
 555      BA63 3128 
 555      9B21 99AB 
 555      68A3 A1
 556 1096 AA10 6D35 	 .ascii "\252\020m5\363\367`\314\2018\217X\372g\274\374\337\310\341}<"
 556      F3F7 60CC 
 556      8138 8F58 
 556      FA67 BCFC 
 556      DFC8 E17D 
 557 10ab 11D7 0A21 	 .ascii "\021\327\n!\027z\205+\342Z)\344B/\267D\\\253,\256_I+\221\033"
 557      177A 852B 
 557      E25A 29E4 
 557      422F B744 
 557      5CAB 2CAE 
 558 10c4 DFD8 BBBA 	 .ascii "\337\330\273\272wQ\372e\202u1\240\266=[\347n\247P\224\365\031"
 558      7751 FA65 
 558      8275 31A0 
 558      B63D 5BE7 
 558      6EA7 5094 
 559 10da D45E 23E4 	 .ascii "\324^#\344\232\351\025\367\365\234\220\353\260`\365hl\212\212"
 559      9AE9 15F7 
 559      F59C 90EB 
 559      B060 F568 
GAS LISTING  			page 42


 559      6C8A 8A
 560 10ed B932 98F8 	 .ascii "\2712\230\370y!\327{\031\270^\260\270\310\357_\326\257\331\021"
 560      7921 D77B 
 560      19B8 5EB0 
 560      B8C8 EF5F 
 560      D6AF D911 
 561 1101 7D71 321A 	 .ascii "}q2\03210|j\306]mn\353\247\212\354\013\006\362\230\363YQ\372"
 561      3130 7C6A 
 561      C65D 6D6E 
 561      EBA7 8AEC 
 561      0B06 F298 
 562 1119 0510 EF44 	 .ascii "\005\020\357D\305\213^\346D\305ZkZ\261\272L=\365\0259\016\262"
 562      C58B 5EE6 
 562      44C5 5A6B 
 562      5AB1 BA4C 
 562      3DF5 1539 
 563 112f 7492 6276 	 .ascii "t\222bvw\320\331\235*\257\263\330y\335\275\314v\367\n\335]\251"
 563      77D0 D99D 
 563      2AAF B3D8 
 563      79DD BDCC 
 563      76F7 0ADD 
 564 1145 B404 9642 	 .ascii "\264\004\226Bu\251Z\231\177\214\236\261\333\254\fv{Ch\355\335"
 564      75A9 5A99 
 564      7F8C 9EB1 
 564      DBAC 0C76 
 564      7B43 68ED 
 565 115a 1902 FA4D 	 .ascii "\031\002\372M6\240aV=\332y\374$o\366\220\236\230A\230\267\274"
 565      36A0 6156 
 565      3DDA 79FC 
 565      246F F690 
 565      9E98 4198 
 566 1170 EC6F A7F4 	 .ascii "\354o\247\364\032\361*\301\330a\264e.\\6K\216\237\343RKpG\327"
 566      1AF1 2AC1 
 566      D861 B465 
 566      2E5C 364B 
 566      8E9F E352 
 567 1188 1B85 76B8 	 .ascii "\033\205v\270\230a4\275#\344\332\227\301z)!\327\241\f\\\233\204"
 567      9861 34BD 
 567      23E4 DA97 
 567      C17A 2921 
 567      D7A1 0C5C 
 568 119e 5C2F 6730 	 .ascii "\\/g0\351\273\3421\230\241\257\367,.s\262uN<\016\256\367\323"
 568      E9BB E231 
 568      98A1 AFF7 
 568      2C2E 73B2 
 568      754E 3C0E 
 569 11b5 B3AD B9A9 	 .ascii "\263\255\271\251\342~\217\274q\327\252\343?\313\353\214\205\375"
 569      E27E 8FBC 
 569      71D7 AAE3 
 569      3FCB EB8C 
 569      85FD 
 570 11c7 075E B451 	 .ascii "\007^\264Q^_\334\246\215\362\177z\231\215\362\023\033\362\320"
 570      5E5F DCA6 
 570      8DF2 7F7A 
 570      998D F213 
 570      1BF2 D0
 571 11da A21E D567 	 .ascii "\242\036\325g\337(_V\354\334(\177\276\230\273Q\376F1w\243\374"
GAS LISTING  			page 43


 571      DF28 5F56 
 571      ECDC 287F 
 571      BE98 BB51 
 571      FE46 3177 
 572 11f0 8362 7AA3 	 .ascii "\203bz\243\234T\357\260\252\275\266\352\257\254j\237\255\372"
 572      9C54 EFB0 
 572      AABD B6EA 
 572      AFAC 6A9F 
 572      ADFA 
 573 1202 5F56 758E 	 .ascii "_Vu\216\255\372g\253\332o\253\236P\222\256\316%\352\240\333\314"
 573      ADFA 67AB 
 573      DA6F AB9E 
 573      5092 AECE 
 573      25EA A0DB 
 574 1217 7BF3 969D 	 .ascii "{\363\226\235Ty\263\361L\360\221W\2607\317\004Ns\206p\333\307"
 574      5479 B3F1 
 574      4CF0 9157 
 574      B037 CF04 
 574      4E73 8670 
 575 122d A6E1 D49E 	 .ascii "\246\341\324\236\215/\231\277lI\025)\256\337\357~\345e\336H~"
 575      8D2F 99BF 
 575      6C49 1529 
 575      AEDF EF7E 
 575      E565 DE48 
 576 1242 60        	 .ascii "`"
 577 1243 C84B 1F1D 	 .string "\310K\037\035.\341d\362U%$\223\223\023\235\177'':qP\275a\260|\351\025\235\350\374\300\210\022\376q\340/\331\254\334Hge\363PZ\226\224\365\255-e\2412s\274\fU=a\373\247\006\342\037\263\272|JJ\377\nu\251p\334\250\3626\003)\333/K\231@@\007>D\201p\2043\037o\372\235}>\246C\001\235-\021Y\354_l,d<X\262\325\325A\223\267\235\261c\233\226Q\354\324\315\322gNP\340\221\374\2601\302w\033\f\337{E\247\210Q+\302\227Z7\335\342kl\005\337+\333\336\227\307\353\360\274\361\235\301\372\r\313\3128\355;\033\353k\323\337\227\307!V\334\353\367nz5O.\247^\3326\317;\276\273y\324G\314G\374\321\344\\\374loJ\265LX$\034\350\031O\3545\225\330\260\317\263\276\346\374\242mlG\241\357\b\344\342\216\326y\036\342\313\005\r\310'\330\260\317\030"
 577      2EE1 64F2 
 577      5525 2493 
 577      9313 9D7F 
 577      2727 3A71 
 578 1344 CD99 0D9B 	 .string "\315\231\r\233>\327}\2129\327\335\234\331:\272\217\262\216m}4\016\255\217\314\243UL\003}r].\231v\376\037\276c\006\352\261\fS\375\024\237h\201\2006~D\\S\205\\\2233$\205i>gR8\3608o\221\276F\354b)\355\032f\325<\335\307\344\347\031\264'8\253f\352\0346\376\036<u\3766}\2627S\233\324\302\247t\237"
 578      3ED7 7D8A 
 578      39D7 DD9C 
 578      D93A BA8F 
 578      B28E 6D7D 
 579 13b2 25AD D89E 	 .ascii "%\255\330\236\001\342l\227a\342\233\353\313\3763\302\2672Z\207"
 579      01E2 6C97 
 579      61E2 9BEB 
 579      CBFE 33C2 
 579      B732 5A87 
 580 13c6 047C 33F9 	 .ascii "\004|3\371\021\004\032\352\252|\302\213\216i\327\373\334$\004"
 580      1104 1AEA 
 580      AA7C C28B 
 580      8E69 D7FB 
 580      DC24 04
 581 13d9 5DDF 4FFF 	 .ascii "]\337O\377\034\277\236\265\354|\332\262\314V\267m\215\330\323"
 581      1CBF 9EB5 
 581      EC7C DAB2 
 581      CC56 B76D 
 581      8DD8 D3
 582 13ec ECC5 4F38 	 .ascii "\354\305O8\027\372Z\2739\261\310\307\337\234\310!\2353\361\267"
 582      17FA 5ABB 
 582      39B1 C8C7 
 582      DF9C C821 
 582      9D33 F1B7 
 583 1400 3C43 FC2D 	 .ascii "<C\374-\026F\355\202\f\\K\004\\\374\303-k\323/\007o7|\365\231"
 583      1646 ED82 
GAS LISTING  			page 44


 583      0C5C 4B04 
 583      5CFC C32D 
 583      6BD3 2F07 
 584 1419 E1AB 653E 	 .ascii "\341\253e>\346\277\360\314;\276\373\264\f\301\200\277\312\276"
 584      E6BF F0CC 
 584      3BBE FBB4 
 584      0CC1 80BF 
 584      CABE 
 585 142b DBFC E58F 	 .ascii "\333\374\345\217\2776\376\003\f~s\2637\r\312\023:m)\323l\216"
 585      BF36 FE03 
 585      0C7E 73B3 
 585      370D CA13 
 585      3A6D 29D3 
 586 1441 B7F1 C78E 	 .ascii "\267\361\307\216 4\312\007\031\027\347\337\230\247\350W\371\214"
 586      2034 CA07 
 586      1917 E7DF 
 586      98A7 E857 
 586      F98C 
 587 1453 BDEE 8EF4 	 .ascii "\275\356\216\364\322\234M@\306\275}%\201\2269\350\227\006\326"
 587      D29C 4D40 
 587      C6BD 7D25 
 587      8196 39E8 
 587      9706 D6
 588 1466 3207 3DA1 	 .ascii "2\007=\241\341=\334\237\334\350\"|?\206,\231\332e\274i-0\305"
 588      E13D DC9F 
 588      DCE8 227C 
 588      3F86 2C99 
 588      DA65 BC69 
 589 147d 3BE6 0651 	 .ascii ";\346\006Q\374\037r\364\035\350\327\337\233d\023\356\204\033"
 589      FC1F 72F4 
 589      1DE8 D7DF 
 589      9B64 13EE 
 589      841B 
 590 148f 38E1 7FC9 	 .ascii "8\341\177\311\321\365c4\33497p\302\377P\243\353gh\270\363n\340"
 590      D1F5 6334 
 590      DC39 3770 
 590      C2FF 50A3 
 590      EB67 68B8 
 591 14a6 84FF 2F06 	 .ascii "\204\377/\006\026\230\365\024\234~\211\0138\336\377\214!\221"
 591      1698 F514 
 591      9C7E 890B 
 591      38DE FF8C 
 591      2191 
 592 14b8 75E2 088E 	 .ascii "u\342\b\216S\2146\301\rZ{\261po\323\272>\351\006\256H\f\267\223"
 592      538C 36C1 
 592      0D5A 7BB1 
 592      706F D3BA 
 592      3EE9 06AE 
 593 14d0 869B EA06 	 .ascii "\206\233\352\006\256D\f\367%\r7\303\r\334%b\270S4\334,7p\235"
 593      AE44 0CF7 
 593      250D 37C3 
 593      0DDC 2562 
 593      B853 34DC 
 594 14e8 C570 1768 	 .ascii "\305p\027h\270z7p\031\316\227\2349Rj8\026\277\025\234\317\242"
 594      B87A 3770 
 594      19CE 979C 
 594      3952 6A38 
GAS LISTING  			page 45


 594      16BF 159C 
 595 14fe B5EE 7889 	 .ascii "\265\356x\211\276\243\216\b\207\341\026\271\201\313p\300\344"
 595      BEA3 8E08 
 595      87E1 16B9 
 595      81CB 70C0 
 595      E4
 596 150f EC91 D239 	 .ascii "\354\221\3229WXg\377Dg\340Qfj\260M'\r\351'\034T2\262\3213\254"
 596      5758 67FF 
 596      4467 E051 
 596      666A B04D 
 596      270D E927 
 597 152a 2432 4792 	 .ascii "$2G\222+\310\264Lb\376L\303\257\321\2415\037^\036f11\357\\\013"
 597      2BC8 B44C 
 597      62FE 4CC3 
 597      AFD1 A135 
 597      1F5E 1E66 
 598 1543 57A7 0B48 	 .ascii "W\247\013H',\231\"}\324\032\261\340\341\336w\265\325\320\016"
 598      272C 9922 
 598      7DD4 1AB1 
 598      E0E1 DE77 
 598      B5D5 D00E 
 599 1557 7A71 A67E 	 .ascii "zq\246~I{\023\364\3236\203*\024h\335\204\332\336\007d\023\265"
 599      497B 13F4 
 599      D336 832A 
 599      1468 DD84 
 599      DADE 0764 
 600 156d B1CD A8   	 .ascii "\261\315\250"
 601 1570 1E0A 750E 	 .string "\036\nu\016\205\372c\233Q\275\024\352\\\n\365T\233Q}\024\352S\024\352\370NmE\315\241P\027R\250\323\333\214\352\247P\027S\250\365nP\257\344\241\322\321\272\216B]\336fT:\\_\246P7\264\031\225\216\327W)\324\315mF\245\343\365u\nuW\233Q\351x}\223B=\332fT:^\337\242P'tn+*\035\257\033\355g\006\027\262\240\274\224~\2258\375m\267\203\275\350\006\254\253\030\3543J\337\367\334\350[\312\346x\373\301\344,\222\224\272\315\361\273\350C\233\237\272Q\363j1\334n\273\315\016\271\001\273F\f\266\217\262\331176\273\366\377`\263k\335\332l?m\263\261\227\272P\363:\021\034<\252g<\230<)\255\246\371j\343t\253\037`\317\b\036`\213\210 \220\204Y\035\350nI\361z\216\022\351K\324\371R\307\226\313\314\346\343\017\363\266\\>\272\264\365[.g\331\215\201s\364\306"
 601      85FA 639B 
 601      51BD 14EA 
 601      5C0A F554 
 601      9B51 7D14 
 602 1671 E9F2 9DF5 	 .ascii "\351\362\235\365\233\356DOh\306\217O&\365u\275\027r\221\335\013"
 602      9BEE 444F 
 602      68C6 8F4F 
 602      26F5 75BD 
 602      1772 91DD 
 603 1686 E99E CF6E 	 .ascii "\351\236\317n\2054f\224\332x\007P\247\357l\302[!\300\256H\337"
 603      8534 6694 
 603      DA78 0750 
 603      A7EF 6CC2 
 603      5B21 C0AE 
 604 169c 1B1C 17AC 	 .ascii "\033\034\027\254\235\020\352P\213\321\310\322v,\365\006\340\002"
 604      9D10 EA50 
 604      8BD1 C8D2 
 604      762C F506 
 604      E002 
 605 16ae ABAE 9E43 	 .ascii "\253\256\236C\251K~\021\003\317\366\227\317N\237zc\203\313\362"
 605      A94B 7E11 
 605      03CF F697 
 605      CF4E 9F7A 
 605      6383 CBF2 
 606 16c2 32BD 5580 	 .ascii "2\275U\200\360&\344\2646\270&\346\360\203\313\262\320Oi\013\t"
 606      F026 E4B4 
 606      36B8 26E6 
 606      F083 CBB2 
 606      D04F 690B 
GAS LISTING  			page 46


 607 16d7 BB9D 6453 	 .ascii "\273\235dS\343\252\262d<V\026\016\r-\013\216\212\225\205\"\225"
 607      E3AA B264 
 607      3C56 160E 
 607      0D2D 0B8E 
 607      8A95 8522 
 608 16ec E1A4 AA95 	 .ascii "\341\244\252\225\305\023j(\222\350V%\371\223\360\3313\220\310"
 608      C513 6A28 
 608      92E8 5625 
 608      F993 F0D9 
 608      3390 C8
 609 16ff B9E7 8121 	 .ascii "\271\347\201!\245\345RN 0,\024\326\256\0242E\201\307[Y\025\214"
 609      A5E5 524E 
 609      2030 2C14 
 609      D6AE 1432 
 609      4581 C75B 
 610 1716 7986 2687 	 .ascii "y\206&\207\371\222\221\341Z\3027,\034\034\036\367\306C\217k\236"
 610      F992 91E1 
 610      5AC2 372C 
 610      1C1C 1EF7 
 610      C643 8F6B 
 611 172b B016 F154 	 .ascii "\260\026\361T'\023\036T\235T\203\211`.\302\277\245G Q\230\214"
 611      2713 1E54 
 611      9D54 8389 
 611      602E C2BF 
 611      A547 2051 
 612 1741 C443 C323 	 .ascii "\304C\303#\232Z\212\270\215\352\233o\207\352\210\226\bTFGV\007"
 612      9A5A 8AB8 
 612      8DEA 9B6F 
 612      87EA 8896 
 612      0854 4647 
 613 1757 9134 B970 	 .ascii "\2214\271pS\235\214W\365\224\325\242A\017\364\033P\321?Q\245"
 613      539D 8C57 
 613      F594 D5A2 
 613      410F F41B 
 613      50D1 3F51 
 614 176c C5A0 49B7 	 .ascii "\305\240I\267J\351\222\301\345\003\007i\225Zh\224V1&\322\255"
 614      4AE9 92C1 
 614      E503 0769 
 614      955A 6894 
 614      5631 26D2 
 615 1781 3A18 4B74 	 .ascii ":\030Kt\353\336A{,Q1tLB\303\3677{Q\271}\377\210Z\241ET\\\327"
 615      EBDE 417B 
 615      2C51 3174 
 615      4C42 C3F7 
 615      377B 51B9 
 616 179e A393 C5D8 	 .ascii "\243\223\305\330\017$\302\265\267\344WF#\021\2552\021\212Fr\023"
 616      0F24 C2B5 
 616      B7E4 5746 
 616      2311 AD32 
 616      118A 4672 
 617 17b3 D144 300C 	 .ascii "\321D0\f\242\377\262\377C\375\037\030\034\030R\3217\320O\033"
 617      A2FF B2FF 
 617      43FD 1F18 
 617      1C18 52D1 
 617      37D0 4F1B 
 618 17c7 15AA D402 	 .ascii "\025\252\324\002\345\321H\"\026"
 618      E5D1 4822 
GAS LISTING  			page 47


 618      16
 619 17d0 0D0F D21E 	 .string "\r\017\322\036Mj\361\004f\2755\357\336`D\rkC\372\r,\244d\312\251\216\306\022\221(\022\264<\r^\036\216\306C\221\341^\324\235\277<\030A\202\345V\207\203c@\257h\036\272\253H"
 619      4D6A F104 
 619      66BD 35EF 
 619      DE60 440D 
 619      6B43 FA0D 
 620 180e 6AC9 3D5A 	 .string "j\311=Z\242<\031\213i\221Dy(Vy\257\026TK\207D\302\321\240\212n\223\341`\254or\3300-\366`dpU(^\036\016A\303\234\321UZ\244R+2"
 620      A23C 198B 
 620      6991 4479 
 620      2856 79AF 
 620      1654 4B87 
 621 1845 92D5 7D63 	 .ascii "\222\325}c\320\2722\030O\024\366\213F\264\364]\256i\"?1K\321"
 621      D0BA 3218 
 621      4F14 F68B 
 621      46B4 F45D 
 621      AE69 223F 
 622 185c DDD1 58A5 	 .ascii "\335\321X\2456\320\020\001I\247\345\304\264`<\032\361\r2Z\201"
 622      36D0 1001 
 622      49A7 E5C4 
 622      B460 3C1A 
 622      F10D 325A 
 623 1871 8C83 A0F7 	 .ascii "\214\203\240\367\366\264\325\n+4\350\342\336`L\035\035\214i]"
 623      F6B4 D50A 
 623      2B34 E8E2 
 623      DE60 4C1D 
 623      1D8C 695D 
 624 1885 7886 420A 	 .ascii "x\206B\n_\356\370\242_(N,}=\217iXhx2\0264\fU\025\204hR\273f\361"
 624      5FEE F8A2 
 624      5F28 4E2C 
 624      7D3D 8F69 
 624      5868 7832 
 625 18a4 41BE 1117 	 .ascii "A\276\021\027\201\301\301\370\210\202Deu 8zX2\f\241\223\203\343"
 625      81C1 C1F8 
 625      8882 4465 
 625      7520 387A 
 625      5832 0CA1 
 626 18bb B818 EC78 	 .ascii "\270\030\354xwL\323,\007\374\242[\267259rhe,8,a\225\200%\257"
 626      774C D32C 
 626      07FC A25B 
 626      B732 3539 
 626      7268 652C 
 627 18d6 8FAA 6233 	 .ascii "\217\252b3\024\032&\004\215\377\024\013%\264v`(\263\354\277'"
 627      141A 2604 
 627      8DFF 140B 
 627      25B4 7660 
 627      28B3 ECBF 
 628 18eb 9A40 FAFF 	 .ascii "\232@\372\377\241[\331}C\356\356S\326/\006\006\211\305\313@\276"
 628      A15B D97D 
 628      43EE EE53 
 628      D62F 0606 
 628      89C5 CB40 
 629 1900 B2F2 684C 	 .ascii "\262\362hL+\353\363\320\240\236e\320\205\361\t\214\325Q\020\244"
 629      2BEB F3D0 
 629      A09E 65D0 
 629      85F1 098C 
 629      D551 10A4 
 630 1914 2201 261D 	 .ascii "\"\001&\035\031@uh\214E@\230d8\334\325\374:\200\fl\352\025 \215"
GAS LISTING  			page 48


 630      1940 7568 
 630      8C45 4098 
 630      6438 DCD5 
 630      FC3A 800C 
 631 192d EFEB 9F3F 	 .ascii "\357\353\237?r\214\241\034"
 631      728C A11C 
 632 1935 B05C 3630 	 .string "\260\\60\026\255\324\342q\343\2364\274\037\356\203\3035c\214D\253o\276\275`\22062:\21282\037\005\035\216\256\366\304R\310\267\311\230\346\307\355{\336\304h0P\213\205\252at\005\303X\366\n\270\017\206M\231;\222\333r\220-\241a\021{d\264\001\334\021A\303Z\314\204\311E~\034\020\t%nk\225\375Lv_\240o4\032\276*]m\006\214\226\256\031\030\033U\232\2761<\346\264\2539^+\372\372\007\207*G\200\245\362\321'h\b\242\024\f\251V\221\206\306\3155\334\274\227L\204\302e\252\006vF\236\t\004\206&C\341D(\022\2006\001\243:P9\2462\254\305\257\021\351\b\005\024\257\300\335\016\331\203\334\026\"\273\3643\343\321\217\356@4\344\256\020\024K\f\327\023\237\343\261\337\256\377\3408\370\027\222G\245\226\333\177\360P\\\211\006m\034%MMm\037\206\361n\345\265B\030\037\326\235/\236"
 632      16AD D4E2 
 632      71E3 9E34 
 632      BC1F EE83 
 632      C335 638C 
 633 1a36 3D8B AC8A 	 .string "=\213\254\212\200Q\221S~\337\203\025\375\373\265\353_1\270O\337\373\006T\334\333\277_\001\252\032\360\300=\201?\365\0310\270\320~\323#/\001\331'\200\362\\\236\n!f+\005U5\346\217k\217\006\"\311\221\376`\345\b\364\231\037\203\b\005\217\214\fVvH\204Fj\001\310\2040\240A\211Dn\b<\202\352\3741-\021\013i\361\\\244ZbL\265\226\217\n\220\214\207'\252\274`\217x\201\221\235\321\\\002\225y\340R5\036\035\026\214\345TC'\232zs\266\270\252H\250d<\f\006pp\301%\310\005\244*\200\362,Dk\242p\350H[\253\334\241\344&g\364C\301pR\313\031= \242j\217\371G\337g\210U\202\020\350\254\344WC\361\340\320\260\326\276\022\262u"
 633      8051 9153 
 633      7EDF 8315 
 633      FDFB B5EB 
 633      5F31 B84F 
 634 1b0c 7B26 104C 	 .string "{&\020L\264\263\335B\202Bw\177\344\t\f~\213\227\341t\207d.\217\216\034\031\215\224\341\301\217\276\303\025 |g\234\375HX\244\305oG*\220\360\205\244\214e5\357p\313\016VZ\2550\234\177\377\230\373!\022\275\367\217\0310\320\007\345>\345\355G\216\001\377\240\261\020\210\004Gj\035\255\241\027\326\202\261\212\376\203\207\f,\f\206G\007\307\304!J\303\241\210VD\267\030\360\300\325\3341\204\312\325\321\321Z\f\r\202\312p\024\002D\r\215\002\311\255\362\315\266r\017[\371V[\271g\201\255\375\355\266\233[z\330nn\277\265\320\326\254GO\333]\217\333n/\301w\3251-^\t1\005\352&\212\003\001J\251@\300\023\b<v\2318\357\370a\352"
 634      B4B3 DD42 
 634      8242 777F 
 634      E409 0C7E 
 634      8B97 E174 
 635 1bdb FEB8 1759 	 .string "\376\270\027Y\334[\001K\037_\337`dD\274\004f\307H \031I\30655"
 635      DC5B 014B 
 635      1F5F DF60 
 635      6444 BC04 
 635      66C7 4820 
 636 1bf5 0D92 E184 	 .string "\r\222\341\204\205\322\027\215\324\301\321\376\003Q{dw\037\f\306x\302g\324\027\323v|p\310\340K\3235\025Z\030\206\254y\233\2033~\273h2\201\002*\021\f\205\375d5%?&\217\311\201a\r\243L~\3343&8\332W\035JTV)\321\307\224\350\030%\032W\242\217+\321\321J\264\332\033\201/s\"\306\267\327\253!5\020\211\3022\f:\216\004"
 636      85D2 178D 
 636      D4C1 D1FE 
 636      0351 7B64 
 636      771F 0CC6 
 637 1c67 3630 D45C 	 .string "60\324\\<\004PF\t\240q\232\213Z\241\371\246"
 637      3C04 5046 
 637      09A0 719A 
 637      8B5A A1F9 
 637      A600 
 638 1c79 150C 4680 	 .string "\025\fF\200(x$\t\337\307\253\203\243ae\347\217%#\021X\353tPa\375\2214\322j\274Z\323\324\334hdx,\232\214\2509AH<\243\264\302\252`<\020\216\016\207\331>\020\215\\\032\201&\201D\024\245\005"
 638      2878 2409 
 638      DFC7 AB83 
 638      A361 65E7 
 638      8F25 2311 
 639 1cbf 3674 0B87 	 .string "6t\013\207\342heH\352\021z\372\016\370B\221\316\024\317\bM\253\016\206\001\230\206\nG\243#\260\024\235\314\372\230V\035\036\203\n\325 fI\004VF\201\312\252dd\004\006\016\252\035+A\235\350H\024\033\350\0262\244V\335\301b6$\351"
 639      E268 6548 
 639      EA11 7AFA 
 639      0EF8 4291 
 639      CE14 CF08 
 640 1d0d EB14 355E 	 .string "\353\0245^\025\034\241\341\004Z\210\373@\371n\250\026+N\300\314B\362\034\376\302\250\211\223\252*p\255\232O\226\1770\276~\303\311\006\220"
 640      151C A1E1 
 640      045A 88FB 
 640      40F9 6EA8 
 640      162B 4EC0 
 641 1d3a AC1C 901E 	 .ascii "\254\034\220\036\371\235\356\tG\207\006\303\003\"\t-\026KVC4"
 641      F99D EE09 
 641      4787 06C3 
 641      0322 092D 
 641      164B 5643 
 642 1d4f A07C 9347 	 .ascii "\240|\223G&\240d\334\033\200?~\034\032\361\377\005G\377^ "
GAS LISTING  			page 49


 642      26A0 64DC 
 642      1B80 3F7E 
 642      1C1A F1FF 
 642      0547 FF5E 
 643               	 .text
 644               	 .section .gnu.lto_.symtab.18a998172e3fae79,"",@progbits
 645 0000 6279 7465 	 .string "bytespushed"
 645      7370 7573 
 645      6865 6400 
 646 000c 00        	 .string ""
 647 000d 0400      	 .string "\004"
 648 000f 0200      	 .string "\002"
 649 0011 00        	 .string ""
 650 0012 00        	 .string ""
 651 0013 00        	 .string ""
 652 0014 00        	 .string ""
 653 0015 00        	 .string ""
 654 0016 00        	 .string ""
 655 0017 AE01 00   	 .string "\256\001"
 656 001a 00        	 .string ""
 657 001b 6C61 7374 	 .string "lastconnection"
 657      636F 6E6E 
 657      6563 7469 
 657      6F6E 00
 658 002a 00        	 .string ""
 659 002b 00        	 .string ""
 660 002c 00        	 .string ""
 661 002d 00        	 .string ""
 662 002e 00        	 .string ""
 663 002f 00        	 .string ""
 664 0030 00        	 .string ""
 665 0031 00        	 .string ""
 666 0032 00        	 .string ""
 667 0033 00        	 .string ""
 668 0034 00        	 .string ""
 669 0035 B001 00   	 .string "\260\001"
 670 0038 00        	 .string ""
 671 0039 746F 7461 	 .string "totaldatalen"
 671      6C64 6174 
 671      616C 656E 
 671      00
 672 0046 00        	 .string ""
 673 0047 0400      	 .string "\004"
 674 0049 0200      	 .string "\002"
 675 004b 00        	 .string ""
 676 004c 00        	 .string ""
 677 004d 00        	 .string ""
 678 004e 00        	 .string ""
 679 004f 00        	 .string ""
 680 0050 00        	 .string ""
 681 0051 E201 00   	 .string "\342\001"
 682 0054 00        	 .string ""
 683 0055 7265 6164 	 .string "readsofar"
 683      736F 6661 
 683      7200 
 684 005f 00        	 .string ""
 685 0060 0400      	 .string "\004"
GAS LISTING  			page 50


 686 0062 0200      	 .string "\002"
 687 0064 00        	 .string ""
 688 0065 00        	 .string ""
 689 0066 00        	 .string ""
 690 0067 00        	 .string ""
 691 0068 00        	 .string ""
 692 0069 00        	 .string ""
 693 006a E401 00   	 .string "\344\001"
 694 006d 00        	 .string ""
 695 006e 4861 6E64 	 .string "HandleUDP"
 695      6C65 5544 
 695      5000 
 696 0078 00        	 .string ""
 697 0079 00        	 .string ""
 698 007a 00        	 .string ""
 699 007b 00        	 .string ""
 700 007c 00        	 .string ""
 701 007d 00        	 .string ""
 702 007e 00        	 .string ""
 703 007f 00        	 .string ""
 704 0080 00        	 .string ""
 705 0081 00        	 .string ""
 706 0082 00        	 .string ""
 707 0083 F400      	 .string "\364"
 708 0085 00        	 .string ""
 709 0086 00        	 .string ""
 710 0087 5443 5052 	 .string "TCPReceiveSyn"
 710      6563 6569 
 710      7665 5379 
 710      6E00 
 711 0095 00        	 .string ""
 712 0096 00        	 .string ""
 713 0097 00        	 .string ""
 714 0098 00        	 .string ""
 715 0099 00        	 .string ""
 716 009a 00        	 .string ""
 717 009b 00        	 .string ""
 718 009c 00        	 .string ""
 719 009d 00        	 .string ""
 720 009e 00        	 .string ""
 721 009f 00        	 .string ""
 722 00a0 FA00      	 .string "\372"
 723 00a2 00        	 .string ""
 724 00a3 00        	 .string ""
 725 00a4 5443 5043 	 .string "TCPConnectionClosing"
 725      6F6E 6E65 
 725      6374 696F 
 725      6E43 6C6F 
 725      7369 6E67 
 726 00b9 00        	 .string ""
 727 00ba 00        	 .string ""
 728 00bb 00        	 .string ""
 729 00bc 00        	 .string ""
 730 00bd 00        	 .string ""
 731 00be 00        	 .string ""
 732 00bf 00        	 .string ""
 733 00c0 00        	 .string ""
GAS LISTING  			page 51


 734 00c1 00        	 .string ""
 735 00c2 00        	 .string ""
 736 00c3 00        	 .string ""
 737 00c4 0101 00   	 .string "\001\001"
 738 00c7 00        	 .string ""
 739 00c8 4361 6E53 	 .string "CanSend"
 739      656E 6400 
 740 00d0 00        	 .string ""
 741 00d1 00        	 .string ""
 742 00d2 00        	 .string ""
 743 00d3 00        	 .string ""
 744 00d4 00        	 .string ""
 745 00d5 00        	 .string ""
 746 00d6 00        	 .string ""
 747 00d7 00        	 .string ""
 748 00d8 00        	 .string ""
 749 00d9 00        	 .string ""
 750 00da 00        	 .string ""
 751 00db 0601 00   	 .string "\006\001"
 752 00de 00        	 .string ""
 753 00df 5365 6E64 	 .string "SendStart"
 753      5374 6172 
 753      7400 
 754 00e9 00        	 .string ""
 755 00ea 00        	 .string ""
 756 00eb 00        	 .string ""
 757 00ec 00        	 .string ""
 758 00ed 00        	 .string ""
 759 00ee 00        	 .string ""
 760 00ef 00        	 .string ""
 761 00f0 00        	 .string ""
 762 00f1 00        	 .string ""
 763 00f2 00        	 .string ""
 764 00f3 00        	 .string ""
 765 00f4 0D01 00   	 .string "\r\001"
 766 00f7 00        	 .string ""
 767 00f8 6469 7361 	 .string "disable"
 767      626C 6500 
 768 0100 00        	 .string ""
 769 0101 0400      	 .string "\004"
 770 0103 0100      	 .string "\001"
 771 0105 00        	 .string ""
 772 0106 00        	 .string ""
 773 0107 00        	 .string ""
 774 0108 00        	 .string ""
 775 0109 00        	 .string ""
 776 010a 00        	 .string ""
 777 010b F901 00   	 .string "\371\001"
 778 010e 00        	 .string ""
 779 010f 4765 7443 	 .string "GetCurrentCircHead"
 779      7572 7265 
 779      6E74 4369 
 779      7263 4865 
 779      6164 00
 780 0122 00        	 .string ""
 781 0123 00        	 .string ""
 782 0124 00        	 .string ""
GAS LISTING  			page 52


 783 0125 00        	 .string ""
 784 0126 00        	 .string ""
 785 0127 00        	 .string ""
 786 0128 00        	 .string ""
 787 0129 00        	 .string ""
 788 012a 00        	 .string ""
 789 012b 00        	 .string ""
 790 012c 00        	 .string ""
 791 012d 1101 00   	 .string "\021\001"
 792 0130 00        	 .string ""
 793 0131 6369 7263 	 .string "circ_buffer_at"
 793      5F62 7566 
 793      6665 725F 
 793      6174 00
 794 0140 00        	 .string ""
 795 0141 00        	 .string ""
 796 0142 00        	 .string ""
 797 0143 00        	 .string ""
 798 0144 00        	 .string ""
 799 0145 00        	 .string ""
 800 0146 00        	 .string ""
 801 0147 00        	 .string ""
 802 0148 00        	 .string ""
 803 0149 00        	 .string ""
 804 014a 00        	 .string ""
 805 014b FB01 00   	 .string "\373\001"
 806 014e 00        	 .string ""
 807 014f 556E 6C6F 	 .string "UnloadCircularBufferOnThisClient"
 807      6164 4369 
 807      7263 756C 
 807      6172 4275 
 807      6666 6572 
 808 0170 00        	 .string ""
 809 0171 00        	 .string ""
 810 0172 00        	 .string ""
 811 0173 00        	 .string ""
 812 0174 00        	 .string ""
 813 0175 00        	 .string ""
 814 0176 00        	 .string ""
 815 0177 00        	 .string ""
 816 0178 00        	 .string ""
 817 0179 00        	 .string ""
 818 017a 00        	 .string ""
 819 017b 1501 00   	 .string "\025\001"
 820 017e 00        	 .string ""
 821 017f 6369 7263 	 .string "circ_buffer"
 821      5F62 7566 
 821      6665 7200 
 822 018b 00        	 .string ""
 823 018c 0400      	 .string "\004"
 824 018e 4000      	 .string "@"
 825 0190 00        	 .string ""
 826 0191 00        	 .string ""
 827 0192 00        	 .string ""
 828 0193 00        	 .string ""
 829 0194 00        	 .string ""
 830 0195 00        	 .string ""
GAS LISTING  			page 53


 831 0196 FD01 00   	 .string "\375\001"
 832 0199 00        	 .string ""
 833 019a 5374 6172 	 .string "StartupBroadcast"
 833      7475 7042 
 833      726F 6164 
 833      6361 7374 
 833      00
 834 01ab 00        	 .string ""
 835 01ac 00        	 .string ""
 836 01ad 00        	 .string ""
 837 01ae 00        	 .string ""
 838 01af 00        	 .string ""
 839 01b0 00        	 .string ""
 840 01b1 00        	 .string ""
 841 01b2 00        	 .string ""
 842 01b3 00        	 .string ""
 843 01b4 00        	 .string ""
 844 01b5 00        	 .string ""
 845 01b6 1D01 00   	 .string "\035\001"
 846 01b9 00        	 .string ""
 847 01ba 696E 6369 	 .string "incirc"
 847      7263 00
 848 01c1 00        	 .string ""
 849 01c2 00        	 .string ""
 850 01c3 00        	 .string ""
 851 01c4 00        	 .string ""
 852 01c5 00        	 .string ""
 853 01c6 00        	 .string ""
 854 01c7 00        	 .string ""
 855 01c8 00        	 .string ""
 856 01c9 00        	 .string ""
 857 01ca 00        	 .string ""
 858 01cb 00        	 .string ""
 859 01cc 0102 00   	 .string "\001\002"
 860 01cf 00        	 .string ""
 861 01d0 446F 6E65 	 .string "DoneBroadcast"
 861      4272 6F61 
 861      6463 6173 
 861      7400 
 862 01de 00        	 .string ""
 863 01df 00        	 .string ""
 864 01e0 00        	 .string ""
 865 01e1 00        	 .string ""
 866 01e2 00        	 .string ""
 867 01e3 00        	 .string ""
 868 01e4 00        	 .string ""
 869 01e5 00        	 .string ""
 870 01e6 00        	 .string ""
 871 01e7 00        	 .string ""
 872 01e8 00        	 .string ""
 873 01e9 2001 00   	 .string " \001"
 874 01ec 00        	 .string ""
 875 01ed 6578 7453 	 .string "extSbyte"
 875      6279 7465 
 875      00
 876 01f6 00        	 .string ""
 877 01f7 00        	 .string ""
GAS LISTING  			page 54


 878 01f8 00        	 .string ""
 879 01f9 00        	 .string ""
 880 01fa 00        	 .string ""
 881 01fb 00        	 .string ""
 882 01fc 00        	 .string ""
 883 01fd 00        	 .string ""
 884 01fe 00        	 .string ""
 885 01ff 00        	 .string ""
 886 0200 00        	 .string ""
 887 0201 2301 00   	 .string "#\001"
 888 0204 00        	 .string ""
 889 0205 456E 6453 	 .string "EndSend"
 889      656E 6400 
 890 020d 00        	 .string ""
 891 020e 00        	 .string ""
 892 020f 00        	 .string ""
 893 0210 00        	 .string ""
 894 0211 00        	 .string ""
 895 0212 00        	 .string ""
 896 0213 00        	 .string ""
 897 0214 00        	 .string ""
 898 0215 00        	 .string ""
 899 0216 00        	 .string ""
 900 0217 00        	 .string ""
 901 0218 2701 00   	 .string "'\001"
 902 021b 00        	 .string ""
 903 021c 466F 7263 	 .string "ForcePlayerClose"
 903      6550 6C61 
 903      7965 7243 
 903      6C6F 7365 
 903      00
 904 022d 00        	 .string ""
 905 022e 00        	 .string ""
 906 022f 00        	 .string ""
 907 0230 00        	 .string ""
 908 0231 00        	 .string ""
 909 0232 00        	 .string ""
 910 0233 00        	 .string ""
 911 0234 00        	 .string ""
 912 0235 00        	 .string ""
 913 0236 00        	 .string ""
 914 0237 00        	 .string ""
 915 0238 2A01 00   	 .string "*\001"
 916 023b 00        	 .string ""
 917 023c 5262 7974 	 .string "Rbyte"
 917      6500 
 918 0242 00        	 .string ""
 919 0243 00        	 .string ""
 920 0244 00        	 .string ""
 921 0245 00        	 .string ""
 922 0246 00        	 .string ""
 923 0247 00        	 .string ""
 924 0248 00        	 .string ""
 925 0249 00        	 .string ""
 926 024a 00        	 .string ""
 927 024b 00        	 .string ""
 928 024c 00        	 .string ""
GAS LISTING  			page 55


 929 024d 3301 00   	 .string "3\001"
 930 0250 00        	 .string ""
 931 0251 4361 6E52 	 .string "CanRead"
 931      6561 6400 
 932 0259 00        	 .string ""
 933 025a 00        	 .string ""
 934 025b 00        	 .string ""
 935 025c 00        	 .string ""
 936 025d 00        	 .string ""
 937 025e 00        	 .string ""
 938 025f 00        	 .string ""
 939 0260 00        	 .string ""
 940 0261 00        	 .string ""
 941 0262 00        	 .string ""
 942 0263 00        	 .string ""
 943 0264 3701 00   	 .string "7\001"
 944 0267 00        	 .string ""
 945 0268 5443 5052 	 .string "TCPReceiveData"
 945      6563 6569 
 945      7665 4461 
 945      7461 00
 946 0277 00        	 .string ""
 947 0278 00        	 .string ""
 948 0279 00        	 .string ""
 949 027a 00        	 .string ""
 950 027b 00        	 .string ""
 951 027c 00        	 .string ""
 952 027d 00        	 .string ""
 953 027e 00        	 .string ""
 954 027f 00        	 .string ""
 955 0280 00        	 .string ""
 956 0281 00        	 .string ""
 957 0282 3A01 00   	 .string ":\001"
 958 0285 00        	 .string ""
 959 0286 5365 7475 	 .string "SetupHardware"
 959      7048 6172 
 959      6477 6172 
 959      6500 
 960 0294 00        	 .string ""
 961 0295 00        	 .string ""
 962 0296 00        	 .string ""
 963 0297 00        	 .string ""
 964 0298 00        	 .string ""
 965 0299 00        	 .string ""
 966 029a 00        	 .string ""
 967 029b 00        	 .string ""
 968 029c 00        	 .string ""
 969 029d 00        	 .string ""
 970 029e 00        	 .string ""
 971 029f 4201 00   	 .string "B\001"
 972 02a2 00        	 .string ""
 973 02a3 4556 454E 	 .string "EVENT_USB_Device_Connect"
 973      545F 5553 
 973      425F 4465 
 973      7669 6365 
 973      5F43 6F6E 
 974 02bc 00        	 .string ""
GAS LISTING  			page 56


 975 02bd 00        	 .string ""
 976 02be 00        	 .string ""
 977 02bf 00        	 .string ""
 978 02c0 00        	 .string ""
 979 02c1 00        	 .string ""
 980 02c2 00        	 .string ""
 981 02c3 00        	 .string ""
 982 02c4 00        	 .string ""
 983 02c5 00        	 .string ""
 984 02c6 00        	 .string ""
 985 02c7 4601 00   	 .string "F\001"
 986 02ca 00        	 .string ""
 987 02cb 4556 454E 	 .string "EVENT_USB_Device_Disconnect"
 987      545F 5553 
 987      425F 4465 
 987      7669 6365 
 987      5F44 6973 
 988 02e7 00        	 .string ""
 989 02e8 00        	 .string ""
 990 02e9 00        	 .string ""
 991 02ea 00        	 .string ""
 992 02eb 00        	 .string ""
 993 02ec 00        	 .string ""
 994 02ed 00        	 .string ""
 995 02ee 00        	 .string ""
 996 02ef 00        	 .string ""
 997 02f0 00        	 .string ""
 998 02f1 00        	 .string ""
 999 02f2 4901 00   	 .string "I\001"
 1000 02f5 00        	 .string ""
 1001 02f6 4556 454E 	 .string "EVENT_USB_Device_ConfigurationChanged"
 1001      545F 5553 
 1001      425F 4465 
 1001      7669 6365 
 1001      5F43 6F6E 
 1002 031c 00        	 .string ""
 1003 031d 00        	 .string ""
 1004 031e 00        	 .string ""
 1005 031f 00        	 .string ""
 1006 0320 00        	 .string ""
 1007 0321 00        	 .string ""
 1008 0322 00        	 .string ""
 1009 0323 00        	 .string ""
 1010 0324 00        	 .string ""
 1011 0325 00        	 .string ""
 1012 0326 00        	 .string ""
 1013 0327 4C01 00   	 .string "L\001"
 1014 032a 00        	 .string ""
 1015 032b 4556 454E 	 .string "EVENT_USB_Device_ControlRequest"
 1015      545F 5553 
 1015      425F 4465 
 1015      7669 6365 
 1015      5F43 6F6E 
 1016 034b 00        	 .string ""
 1017 034c 00        	 .string ""
 1018 034d 00        	 .string ""
 1019 034e 00        	 .string ""
GAS LISTING  			page 57


 1020 034f 00        	 .string ""
 1021 0350 00        	 .string ""
 1022 0351 00        	 .string ""
 1023 0352 00        	 .string ""
 1024 0353 00        	 .string ""
 1025 0354 00        	 .string ""
 1026 0355 00        	 .string ""
 1027 0356 4F01 00   	 .string "O\001"
 1028 0359 00        	 .string ""
 1029 035a 524E 4449 	 .string "RNDIS_Task"
 1029      535F 5461 
 1029      736B 00
 1030 0365 00        	 .string ""
 1031 0366 00        	 .string ""
 1032 0367 00        	 .string ""
 1033 0368 00        	 .string ""
 1034 0369 00        	 .string ""
 1035 036a 00        	 .string ""
 1036 036b 00        	 .string ""
 1037 036c 00        	 .string ""
 1038 036d 00        	 .string ""
 1039 036e 00        	 .string ""
 1040 036f 00        	 .string ""
 1041 0370 5201 00   	 .string "R\001"
 1042 0373 00        	 .string ""
 1043 0374 6D61 696E 	 .string "main"
 1043      00
 1044 0379 00        	 .string ""
 1045 037a 00        	 .string ""
 1046 037b 00        	 .string ""
 1047 037c 00        	 .string ""
 1048 037d 00        	 .string ""
 1049 037e 00        	 .string ""
 1050 037f 00        	 .string ""
 1051 0380 00        	 .string ""
 1052 0381 00        	 .string ""
 1053 0382 00        	 .string ""
 1054 0383 00        	 .string ""
 1055 0384 5501 00   	 .string "U\001"
 1056 0387 00        	 .string ""
 1057 0388 4D79 4D61 	 .string "MyMask"
 1057      736B 00
 1058 038f 00        	 .string ""
 1059 0390 00        	 .string ""
 1060 0391 00        	 .string ""
 1061 0392 00        	 .string ""
 1062 0393 00        	 .string ""
 1063 0394 00        	 .string ""
 1064 0395 00        	 .string ""
 1065 0396 00        	 .string ""
 1066 0397 00        	 .string ""
 1067 0398 00        	 .string ""
 1068 0399 00        	 .string ""
 1069 039a 1302 00   	 .string "\023\002"
 1070 039d 00        	 .string ""
 1071 039e 4D79 4950 	 .string "MyIP"
 1071      00
GAS LISTING  			page 58


 1072 03a3 00        	 .string ""
 1073 03a4 00        	 .string ""
 1074 03a5 00        	 .string ""
 1075 03a6 00        	 .string ""
 1076 03a7 00        	 .string ""
 1077 03a8 00        	 .string ""
 1078 03a9 00        	 .string ""
 1079 03aa 00        	 .string ""
 1080 03ab 00        	 .string ""
 1081 03ac 00        	 .string ""
 1082 03ad 00        	 .string ""
 1083 03ae 1802 00   	 .string "\030\002"
 1084 03b1 00        	 .string ""
 1085 03b2 4D79 4D41 	 .string "MyMAC"
 1085      4300 
 1086 03b8 00        	 .string ""
 1087 03b9 00        	 .string ""
 1088 03ba 00        	 .string ""
 1089 03bb 00        	 .string ""
 1090 03bc 00        	 .string ""
 1091 03bd 00        	 .string ""
 1092 03be 00        	 .string ""
 1093 03bf 00        	 .string ""
 1094 03c0 00        	 .string ""
 1095 03c1 00        	 .string ""
 1096 03c2 00        	 .string ""
 1097 03c3 1B02 00   	 .string "\033\002"
 1098 03c6 00        	 .string ""
 1099 03c7 6D79 5F73 	 .string "my_server_name"
 1099      6572 7665 
 1099      725F 6E61 
 1099      6D65 00
 1100 03d6 00        	 .string ""
 1101 03d7 00        	 .string ""
 1102 03d8 00        	 .string ""
 1103 03d9 00        	 .string ""
 1104 03da 00        	 .string ""
 1105 03db 00        	 .string ""
 1106 03dc 00        	 .string ""
 1107 03dd 00        	 .string ""
 1108 03de 00        	 .string ""
 1109 03df 00        	 .string ""
 1110 03e0 00        	 .string ""
 1111 03e1 1F02 00   	 .string "\037\002"
 1112 03e4 00        	 .string ""
 1113 03e5 4554 7365 	 .string "ETsendplace"
 1113      6E64 706C 
 1113      6163 6500 
 1114 03f1 00        	 .string ""
 1115 03f2 0200      	 .string "\002"
 1116 03f4 00        	 .string ""
 1117 03f5 00        	 .string ""
 1118 03f6 00        	 .string ""
 1119 03f7 00        	 .string ""
 1120 03f8 00        	 .string ""
 1121 03f9 00        	 .string ""
 1122 03fa 00        	 .string ""
GAS LISTING  			page 59


 1123 03fb 00        	 .string ""
 1124 03fc A801 00   	 .string "\250\001"
 1125 03ff 00        	 .string ""
 1126 0400 4554 6275 	 .string "ETbuffer"
 1126      6666 6572 
 1126      00
 1127 0409 00        	 .string ""
 1128 040a 0200      	 .string "\002"
 1129 040c 00        	 .string ""
 1130 040d 00        	 .string ""
 1131 040e 00        	 .string ""
 1132 040f 00        	 .string ""
 1133 0410 00        	 .string ""
 1134 0411 00        	 .string ""
 1135 0412 00        	 .string ""
 1136 0413 00        	 .string ""
 1137 0414 AA01 00   	 .string "\252\001"
 1138 0417 00        	 .string ""
 1139 0418 5443 5073 	 .string "TCPs"
 1139      00
 1140 041d 00        	 .string ""
 1141 041e 0200      	 .string "\002"
 1142 0420 00        	 .string ""
 1143 0421 00        	 .string ""
 1144 0422 00        	 .string ""
 1145 0423 00        	 .string ""
 1146 0424 00        	 .string ""
 1147 0425 00        	 .string ""
 1148 0426 00        	 .string ""
 1149 0427 00        	 .string ""
 1150 0428 B201 00   	 .string "\262\001"
 1151 042b 00        	 .string ""
 1152 042c 5553 425F 	 .string "USB_ControlRequest"
 1152      436F 6E74 
 1152      726F 6C52 
 1152      6571 7565 
 1152      7374 00
 1153 043f 00        	 .string ""
 1154 0440 0200      	 .string "\002"
 1155 0442 00        	 .string ""
 1156 0443 00        	 .string ""
 1157 0444 00        	 .string ""
 1158 0445 00        	 .string ""
 1159 0446 00        	 .string ""
 1160 0447 00        	 .string ""
 1161 0448 00        	 .string ""
 1162 0449 00        	 .string ""
 1163 044a E601 00   	 .string "\346\001"
 1164 044d 00        	 .string ""
 1165 044e 524E 4449 	 .string "RNDISMessageBuffer"
 1165      534D 6573 
 1165      7361 6765 
 1165      4275 6666 
 1165      6572 00
 1166 0461 00        	 .string ""
 1167 0462 0200      	 .string "\002"
 1168 0464 00        	 .string ""
GAS LISTING  			page 60


 1169 0465 00        	 .string ""
 1170 0466 00        	 .string ""
 1171 0467 00        	 .string ""
 1172 0468 00        	 .string ""
 1173 0469 00        	 .string ""
 1174 046a 00        	 .string ""
 1175 046b 00        	 .string ""
 1176 046c A601 00   	 .string "\246\001"
 1177 046f 00        	 .string ""
 1178 0470 4D65 7373 	 .string "MessageHeader"
 1178      6167 6548 
 1178      6561 6465 
 1178      7200 
 1179 047e 00        	 .string ""
 1180 047f 0200      	 .string "\002"
 1181 0481 00        	 .string ""
 1182 0482 00        	 .string ""
 1183 0483 00        	 .string ""
 1184 0484 00        	 .string ""
 1185 0485 00        	 .string ""
 1186 0486 00        	 .string ""
 1187 0487 00        	 .string ""
 1188 0488 00        	 .string ""
 1189 0489 0302 00   	 .string "\003\002"
 1190 048c 00        	 .string ""
 1191 048d 5553 425F 	 .string "USB_DeviceState"
 1191      4465 7669 
 1191      6365 5374 
 1191      6174 6500 
 1192 049d 00        	 .string ""
 1193 049e 0200      	 .string "\002"
 1194 04a0 00        	 .string ""
 1195 04a1 00        	 .string ""
 1196 04a2 00        	 .string ""
 1197 04a3 00        	 .string ""
 1198 04a4 00        	 .string ""
 1199 04a5 00        	 .string ""
 1200 04a6 00        	 .string ""
 1201 04a7 00        	 .string ""
 1202 04a8 1002 00   	 .string "\020\002"
 1203 04ab 00        	 .string ""
 1204 04ac 4765 7446 	 .string "GetFreeConnection"
 1204      7265 6543 
 1204      6F6E 6E65 
 1204      6374 696F 
 1204      6E00 
 1205 04be 00        	 .string ""
 1206 04bf 0200      	 .string "\002"
 1207 04c1 00        	 .string ""
 1208 04c2 00        	 .string ""
 1209 04c3 00        	 .string ""
 1210 04c4 00        	 .string ""
 1211 04c5 00        	 .string ""
 1212 04c6 00        	 .string ""
 1213 04c7 00        	 .string ""
 1214 04c8 00        	 .string ""
 1215 04c9 5801 00   	 .string "X\001"
GAS LISTING  			page 61


 1216 04cc 00        	 .string ""
 1217 04cd 4164 6450 	 .string "AddPlayer"
 1217      6C61 7965 
 1217      7200 
 1218 04d7 00        	 .string ""
 1219 04d8 0200      	 .string "\002"
 1220 04da 00        	 .string ""
 1221 04db 00        	 .string ""
 1222 04dc 00        	 .string ""
 1223 04dd 00        	 .string ""
 1224 04de 00        	 .string ""
 1225 04df 00        	 .string ""
 1226 04e0 00        	 .string ""
 1227 04e1 00        	 .string ""
 1228 04e2 5E01 00   	 .string "^\001"
 1229 04e5 00        	 .string ""
 1230 04e6 5374 6172 	 .string "StartTCPWrite"
 1230      7454 4350 
 1230      5772 6974 
 1230      6500 
 1231 04f4 00        	 .string ""
 1232 04f5 0200      	 .string "\002"
 1233 04f7 00        	 .string ""
 1234 04f8 00        	 .string ""
 1235 04f9 00        	 .string ""
 1236 04fa 00        	 .string ""
 1237 04fb 00        	 .string ""
 1238 04fc 00        	 .string ""
 1239 04fd 00        	 .string ""
 1240 04fe 00        	 .string ""
 1241 04ff 6001 00   	 .string "`\001"
 1242 0502 00        	 .string ""
 1243 0503 456E 6454 	 .string "EndTCPWrite"
 1243      4350 5772 
 1243      6974 6500 
 1244 050f 00        	 .string ""
 1245 0510 0200      	 .string "\002"
 1246 0512 00        	 .string ""
 1247 0513 00        	 .string ""
 1248 0514 00        	 .string ""
 1249 0515 00        	 .string ""
 1250 0516 00        	 .string ""
 1251 0517 00        	 .string ""
 1252 0518 00        	 .string ""
 1253 0519 00        	 .string ""
 1254 051a 6201 00   	 .string "b\001"
 1255 051d 00        	 .string ""
 1256 051e 476F 7444 	 .string "GotData"
 1256      6174 6100 
 1257 0526 00        	 .string ""
 1258 0527 0200      	 .string "\002"
 1259 0529 00        	 .string ""
 1260 052a 00        	 .string ""
 1261 052b 00        	 .string ""
 1262 052c 00        	 .string ""
 1263 052d 00        	 .string ""
 1264 052e 00        	 .string ""
GAS LISTING  			page 62


 1265 052f 00        	 .string ""
 1266 0530 00        	 .string ""
 1267 0531 6401 00   	 .string "d\001"
 1268 0534 00        	 .string ""
 1269 0535 456E 6470 	 .string "Endpoint_Read_Control_Stream_LE"
 1269      6F69 6E74 
 1269      5F52 6561 
 1269      645F 436F 
 1269      6E74 726F 
 1270 0555 00        	 .string ""
 1271 0556 0200      	 .string "\002"
 1272 0558 00        	 .string ""
 1273 0559 00        	 .string ""
 1274 055a 00        	 .string ""
 1275 055b 00        	 .string ""
 1276 055c 00        	 .string ""
 1277 055d 00        	 .string ""
 1278 055e 00        	 .string ""
 1279 055f 00        	 .string ""
 1280 0560 6601 00   	 .string "f\001"
 1281 0563 00        	 .string ""
 1282 0564 5072 6F63 	 .string "ProcessRNDISControlMessage"
 1282      6573 7352 
 1282      4E44 4953 
 1282      436F 6E74 
 1282      726F 6C4D 
 1283 057f 00        	 .string ""
 1284 0580 0200      	 .string "\002"
 1285 0582 00        	 .string ""
 1286 0583 00        	 .string ""
 1287 0584 00        	 .string ""
 1288 0585 00        	 .string ""
 1289 0586 00        	 .string ""
 1290 0587 00        	 .string ""
 1291 0588 00        	 .string ""
 1292 0589 00        	 .string ""
 1293 058a 6E01 00   	 .string "n\001"
 1294 058d 00        	 .string ""
 1295 058e 6574 5F70 	 .string "et_pop16"
 1295      6F70 3136 
 1295      00
 1296 0597 00        	 .string ""
 1297 0598 0200      	 .string "\002"
 1298 059a 00        	 .string ""
 1299 059b 00        	 .string ""
 1300 059c 00        	 .string ""
 1301 059d 00        	 .string ""
 1302 059e 00        	 .string ""
 1303 059f 00        	 .string ""
 1304 05a0 00        	 .string ""
 1305 05a1 00        	 .string ""
 1306 05a2 7001 00   	 .string "p\001"
 1307 05a5 00        	 .string ""
 1308 05a6 5265 6D6F 	 .string "RemovePlayer"
 1308      7665 506C 
 1308      6179 6572 
 1308      00
GAS LISTING  			page 63


 1309 05b3 00        	 .string ""
 1310 05b4 0200      	 .string "\002"
 1311 05b6 00        	 .string ""
 1312 05b7 00        	 .string ""
 1313 05b8 00        	 .string ""
 1314 05b9 00        	 .string ""
 1315 05ba 00        	 .string ""
 1316 05bb 00        	 .string ""
 1317 05bc 00        	 .string ""
 1318 05bd 00        	 .string ""
 1319 05be 7201 00   	 .string "r\001"
 1320 05c1 00        	 .string ""
 1321 05c2 5443 5043 	 .string "TCPCanSend"
 1321      616E 5365 
 1321      6E64 00
 1322 05cd 00        	 .string ""
 1323 05ce 0200      	 .string "\002"
 1324 05d0 00        	 .string ""
 1325 05d1 00        	 .string ""
 1326 05d2 00        	 .string ""
 1327 05d3 00        	 .string ""
 1328 05d4 00        	 .string ""
 1329 05d5 00        	 .string ""
 1330 05d6 00        	 .string ""
 1331 05d7 00        	 .string ""
 1332 05d8 7401 00   	 .string "t\001"
 1333 05db 00        	 .string ""
 1334 05dc 5265 7175 	 .string "RequestClosure"
 1334      6573 7443 
 1334      6C6F 7375 
 1334      7265 00
 1335 05eb 00        	 .string ""
 1336 05ec 0200      	 .string "\002"
 1337 05ee 00        	 .string ""
 1338 05ef 00        	 .string ""
 1339 05f0 00        	 .string ""
 1340 05f1 00        	 .string ""
 1341 05f2 00        	 .string ""
 1342 05f3 00        	 .string ""
 1343 05f4 00        	 .string ""
 1344 05f5 00        	 .string ""
 1345 05f6 7601 00   	 .string "v\001"
 1346 05f9 00        	 .string ""
 1347 05fa 6574 5F70 	 .string "et_pop8"
 1347      6F70 3800 
 1348 0602 00        	 .string ""
 1349 0603 0200      	 .string "\002"
 1350 0605 00        	 .string ""
 1351 0606 00        	 .string ""
 1352 0607 00        	 .string ""
 1353 0608 00        	 .string ""
 1354 0609 00        	 .string ""
 1355 060a 00        	 .string ""
 1356 060b 00        	 .string ""
 1357 060c 00        	 .string ""
 1358 060d 7801 00   	 .string "x\001"
 1359 0610 00        	 .string ""
GAS LISTING  			page 64


 1360 0611 5365 7269 	 .string "Serial_CreateStream"
 1360      616C 5F43 
 1360      7265 6174 
 1360      6553 7472 
 1360      6561 6D00 
 1361 0625 00        	 .string ""
 1362 0626 0200      	 .string "\002"
 1363 0628 00        	 .string ""
 1364 0629 00        	 .string ""
 1365 062a 00        	 .string ""
 1366 062b 00        	 .string ""
 1367 062c 00        	 .string ""
 1368 062d 00        	 .string ""
 1369 062e 00        	 .string ""
 1370 062f 00        	 .string ""
 1371 0630 7A01 00   	 .string "z\001"
 1372 0633 00        	 .string ""
 1373 0634 5553 425F 	 .string "USB_Init"
 1373      496E 6974 
 1373      00
 1374 063d 00        	 .string ""
 1375 063e 0200      	 .string "\002"
 1376 0640 00        	 .string ""
 1377 0641 00        	 .string ""
 1378 0642 00        	 .string ""
 1379 0643 00        	 .string ""
 1380 0644 00        	 .string ""
 1381 0645 00        	 .string ""
 1382 0646 00        	 .string ""
 1383 0647 00        	 .string ""
 1384 0648 7E01 00   	 .string "~\001"
 1385 064b 00        	 .string ""
 1386 064c 456E 6470 	 .string "Endpoint_ConfigureEndpoint_Prv"
 1386      6F69 6E74 
 1386      5F43 6F6E 
 1386      6669 6775 
 1386      7265 456E 
 1387 066b 00        	 .string ""
 1388 066c 0200      	 .string "\002"
 1389 066e 00        	 .string ""
 1390 066f 00        	 .string ""
 1391 0670 00        	 .string ""
 1392 0671 00        	 .string ""
 1393 0672 00        	 .string ""
 1394 0673 00        	 .string ""
 1395 0674 00        	 .string ""
 1396 0675 00        	 .string ""
 1397 0676 8001 00   	 .string "\200\001"
 1398 0679 00        	 .string ""
 1399 067a 456E 6470 	 .string "Endpoint_Write_Control_Stream_LE"
 1399      6F69 6E74 
 1399      5F57 7269 
 1399      7465 5F43 
 1399      6F6E 7472 
 1400 069b 00        	 .string ""
 1401 069c 0200      	 .string "\002"
 1402 069e 00        	 .string ""
GAS LISTING  			page 65


 1403 069f 00        	 .string ""
 1404 06a0 00        	 .string ""
 1405 06a1 00        	 .string ""
 1406 06a2 00        	 .string ""
 1407 06a3 00        	 .string ""
 1408 06a4 00        	 .string ""
 1409 06a5 00        	 .string ""
 1410 06a6 8901 00   	 .string "\211\001"
 1411 06a9 00        	 .string ""
 1412 06aa 4861 6E64 	 .string "HandleUSB"
 1412      6C65 5553 
 1412      4200 
 1413 06b4 00        	 .string ""
 1414 06b5 0200      	 .string "\002"
 1415 06b7 00        	 .string ""
 1416 06b8 00        	 .string ""
 1417 06b9 00        	 .string ""
 1418 06ba 00        	 .string ""
 1419 06bb 00        	 .string ""
 1420 06bc 00        	 .string ""
 1421 06bd 00        	 .string ""
 1422 06be 00        	 .string ""
 1423 06bf 9001 00   	 .string "\220\001"
 1424 06c2 00        	 .string ""
 1425 06c3 5469 636B 	 .string "TickTCP"
 1425      5443 5000 
 1426 06cb 00        	 .string ""
 1427 06cc 0200      	 .string "\002"
 1428 06ce 00        	 .string ""
 1429 06cf 00        	 .string ""
 1430 06d0 00        	 .string ""
 1431 06d1 00        	 .string ""
 1432 06d2 00        	 .string ""
 1433 06d3 00        	 .string ""
 1434 06d4 00        	 .string ""
 1435 06d5 00        	 .string ""
 1436 06d6 9201 00   	 .string "\222\001"
 1437 06d9 00        	 .string ""
 1438 06da 5469 636B 	 .string "TickServer"
 1438      5365 7276 
 1438      6572 00
 1439 06e5 00        	 .string ""
 1440 06e6 0200      	 .string "\002"
 1441 06e8 00        	 .string ""
 1442 06e9 00        	 .string ""
 1443 06ea 00        	 .string ""
 1444 06eb 00        	 .string ""
 1445 06ec 00        	 .string ""
 1446 06ed 00        	 .string ""
 1447 06ee 00        	 .string ""
 1448 06ef 00        	 .string ""
 1449 06f0 9401 00   	 .string "\224\001"
 1450 06f3 00        	 .string ""
 1451 06f4 5570 6461 	 .string "UpdateServer"
 1451      7465 5365 
 1451      7276 6572 
 1451      00
GAS LISTING  			page 66


 1452 0701 00        	 .string ""
 1453 0702 0200      	 .string "\002"
 1454 0704 00        	 .string ""
 1455 0705 00        	 .string ""
 1456 0706 00        	 .string ""
 1457 0707 00        	 .string ""
 1458 0708 00        	 .string ""
 1459 0709 00        	 .string ""
 1460 070a 00        	 .string ""
 1461 070b 00        	 .string ""
 1462 070c 9601 00   	 .string "\226\001"
 1463 070f 00        	 .string ""
 1464 0710 5553 425F 	 .string "USB_USBTask"
 1464      5553 4254 
 1464      6173 6B00 
 1465 071c 00        	 .string ""
 1466 071d 0200      	 .string "\002"
 1467 071f 00        	 .string ""
 1468 0720 00        	 .string ""
 1469 0721 00        	 .string ""
 1470 0722 00        	 .string ""
 1471 0723 00        	 .string ""
 1472 0724 00        	 .string ""
 1473 0725 00        	 .string ""
 1474 0726 00        	 .string ""
 1475 0727 9C01 00   	 .string "\234\001"
 1476 072a 00        	 .string ""
 1477 072b 496E 6974 	 .string "InitDumbcraft"
 1477      4475 6D62 
 1477      6372 6166 
 1477      7400 
 1478 0739 00        	 .string ""
 1479 073a 0200      	 .string "\002"
 1480 073c 00        	 .string ""
 1481 073d 00        	 .string ""
 1482 073e 00        	 .string ""
 1483 073f 00        	 .string ""
 1484 0740 00        	 .string ""
 1485 0741 00        	 .string ""
 1486 0742 00        	 .string ""
 1487 0743 00        	 .string ""
 1488 0744 9E01 00   	 .string "\236\001"
 1489 0747 00        	 .string ""
 1490 0748 496E 6974 	 .string "InitTCP"
 1490      5443 5000 
 1491 0750 00        	 .string ""
 1492 0751 0200      	 .string "\002"
 1493 0753 00        	 .string ""
 1494 0754 00        	 .string ""
 1495 0755 00        	 .string ""
 1496 0756 00        	 .string ""
 1497 0757 00        	 .string ""
 1498 0758 00        	 .string ""
 1499 0759 00        	 .string ""
 1500 075a 00        	 .string ""
 1501 075b A001 00   	 .string "\240\001"
 1502 075e 00        	 .string ""
GAS LISTING  			page 67


 1503 075f 6574 5F69 	 .string "et_init"
 1503      6E69 7400 
 1504 0767 00        	 .string ""
 1505 0768 0200      	 .string "\002"
 1506 076a 00        	 .string ""
 1507 076b 00        	 .string ""
 1508 076c 00        	 .string ""
 1509 076d 00        	 .string ""
 1510 076e 00        	 .string ""
 1511 076f 00        	 .string ""
 1512 0770 00        	 .string ""
 1513 0771 00        	 .string ""
 1514 0772 A201 00   	 .string "\242\001"
 1515 0775 00        	 .string ""
 1516               	 .text
 1517               	 .section .gnu.lto_.opts,"",@progbits
 1518 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 1518      6375 3D61 
 1518      746D 6567 
 1518      6133 3275 
 1518      3227 2027 
 1519               	 .text
 1520               	 .cfi_sections .debug_frame
 1521               	.global HandleUDP
 1523               	HandleUDP:
 1524               	.LFB114:
 1525               	 .file 1 "RNDISEthernet.c"
   1:RNDISEthernet.c **** /*
   2:RNDISEthernet.c ****              LUFA Library
   3:RNDISEthernet.c ****      Copyright (C) Dean Camera, 2014.
   4:RNDISEthernet.c **** 
   5:RNDISEthernet.c ****   dean [at] fourwalledcubicle [dot] com
   6:RNDISEthernet.c ****            www.lufa-lib.org
   7:RNDISEthernet.c **** */
   8:RNDISEthernet.c **** 
   9:RNDISEthernet.c **** /*
  10:RNDISEthernet.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:RNDISEthernet.c **** 
  12:RNDISEthernet.c ****   Permission to use, copy, modify, distribute, and sell this
  13:RNDISEthernet.c ****   software and its documentation for any purpose is hereby granted
  14:RNDISEthernet.c ****   without fee, provided that the above copyright notice appear in
  15:RNDISEthernet.c ****   all copies and that both that the copyright notice and this
  16:RNDISEthernet.c ****   permission notice and warranty disclaimer appear in supporting
  17:RNDISEthernet.c ****   documentation, and that the name of the author not be used in
  18:RNDISEthernet.c ****   advertising or publicity pertaining to distribution of the
  19:RNDISEthernet.c ****   software without specific, written prior permission.
  20:RNDISEthernet.c **** 
  21:RNDISEthernet.c ****   The author disclaims all warranties with regard to this
  22:RNDISEthernet.c ****   software, including all implied warranties of merchantability
  23:RNDISEthernet.c ****   and fitness.  In no event shall the author be liable for any
  24:RNDISEthernet.c ****   special, indirect or consequential damages or any damages
  25:RNDISEthernet.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:RNDISEthernet.c ****   in an action of contract, negligence or other tortious action,
  27:RNDISEthernet.c ****   arising out of or in connection with the use or performance of
  28:RNDISEthernet.c ****   this software.
  29:RNDISEthernet.c **** */
  30:RNDISEthernet.c **** 
GAS LISTING  			page 68


  31:RNDISEthernet.c **** /** \file
  32:RNDISEthernet.c ****  *
  33:RNDISEthernet.c ****  *  Main source file for the RNDISEthernet demo. This file contains the main tasks of the demo and
  34:RNDISEthernet.c ****  *  is responsible for the initial application hardware configuration.
  35:RNDISEthernet.c ****  */
  36:RNDISEthernet.c **** 
  37:RNDISEthernet.c **** #include "RNDISEthernet.h"
  38:RNDISEthernet.c **** #include "eth_config.h"
  39:RNDISEthernet.c **** #include "myRNDIS.h"
  40:RNDISEthernet.c **** #include "net_compat.h"
  41:RNDISEthernet.c **** #include "avr_print.h"
  42:RNDISEthernet.c **** #include "iparpetc.h"
  43:RNDISEthernet.c **** #include "tcp_awful.h"
  44:RNDISEthernet.c **** #include "dumbconfig.h"
  45:RNDISEthernet.c **** #include <dumbcraft.h>
  46:RNDISEthernet.c **** #include "ws2812.h"
  47:RNDISEthernet.c **** 
  48:RNDISEthernet.c **** #define POP et_pop8()
  49:RNDISEthernet.c **** #define POP16 et_pop16()
  50:RNDISEthernet.c **** #define PUSH(x) et_push8(x)
  51:RNDISEthernet.c **** #define PUSH16(x) et_push16(x)
  52:RNDISEthernet.c **** 
  53:RNDISEthernet.c **** int8_t lastconnection = -1; //for dumbcraft
  54:RNDISEthernet.c **** uint16_t bytespushed; //for dumbcraft
  55:RNDISEthernet.c **** char my_server_name[3] = { 'h', 'i', 0 };
  56:RNDISEthernet.c **** 
  57:RNDISEthernet.c **** 
  58:RNDISEthernet.c **** unsigned char MyMAC[6] = { 0x02, 0x00, 0x02, 0x00, 0x02, 0x00 };
  59:RNDISEthernet.c **** unsigned char MyIP[4]  = { 192, 168, 55, 243 };
  60:RNDISEthernet.c **** unsigned char MyMask[4] = { 255, 255, 255, 0 };
  61:RNDISEthernet.c **** 
  62:RNDISEthernet.c **** void HandleUDP( uint16_t len )
  63:RNDISEthernet.c **** {
 1526               	 .loc 1 63 0
 1527               	 .cfi_startproc
 1528               	.LVL0:
 1529               	 
 1530               	 
 1531               	 
 1532               	.L__stack_usage =0
  64:RNDISEthernet.c **** 	uint8_t mask;
  65:RNDISEthernet.c **** 	uint8_t v;
  66:RNDISEthernet.c **** 	/*uint16_t epcs = */et_pop16(); //Checksum
 1533               	 .loc 1 66 0
 1534 0000 0C94 0000 	 jmp et_pop16
 1535               	.LVL1:
 1536               	 .cfi_endproc
 1537               	.LFE114:
 1539               	.global TCPReceiveSyn
 1541               	TCPReceiveSyn:
 1542               	.LFB115:
  67:RNDISEthernet.c **** 	len -= 8; //remove header.
  68:RNDISEthernet.c **** 
  69:RNDISEthernet.c **** 	if( localport == 13313 )
  70:RNDISEthernet.c **** 	{
  71:RNDISEthernet.c **** 		//printf( "%d pack\n", len );
  72:RNDISEthernet.c **** 	}
GAS LISTING  			page 69


  73:RNDISEthernet.c **** }
  74:RNDISEthernet.c **** 
  75:RNDISEthernet.c **** 
  76:RNDISEthernet.c **** 
  77:RNDISEthernet.c **** uint8_t TCPReceiveSyn( uint16_t portno )
  78:RNDISEthernet.c **** {
 1543               	 .loc 1 78 0
 1544               	 .cfi_startproc
 1545               	.LVL2:
 1546 0004 CF93      	 push r28
 1547               	.LCFI0:
 1548               	 .cfi_def_cfa_offset 3
 1549               	 .cfi_offset 28,-2
 1550               	 
 1551               	 
 1552               	 
 1553               	.L__stack_usage =1
  79:RNDISEthernet.c **** 	if( portno == MINECRAFT_PORT )  //Must bump these up by 8... 
 1554               	 .loc 1 79 0
 1555 0006 8D3D      	 cpi r24,-35
 1556 0008 9346      	 sbci r25,99
 1557 000a 01F4      	 brne .L5
 1558               	.LVL3:
 1559               	.LBB45:
 1560               	.LBB46:
  80:RNDISEthernet.c **** 	{
  81:RNDISEthernet.c **** 		uint8_t ret = GetFreeConnection();//MyGetFreeConnection(HTTP_CONNECTIONS+1, TCP_SOCKETS );
 1561               	 .loc 1 81 0
 1562 000c 0E94 0000 	 call GetFreeConnection
 1563               	.LVL4:
 1564 0010 C82F      	 mov r28,r24
 1565               	.LVL5:
  82:RNDISEthernet.c **** 		if( ret == 0 ) return 0;
 1566               	 .loc 1 82 0
 1567 0012 8823      	 tst r24
 1568 0014 01F0      	 breq .L4
  83:RNDISEthernet.c **** 		sendstr( "Conn attempt: " );
  84:RNDISEthernet.c **** 		sendhex2( ret );
  85:RNDISEthernet.c **** 		sendchr( '\n' );
  86:RNDISEthernet.c **** 		AddPlayer( ret - HTTP_CONNECTIONS - 1 );
 1569               	 .loc 1 86 0
 1570 0016 8FEF      	 ldi r24,lo8(-1)
 1571               	.LVL6:
 1572 0018 8C0F      	 add r24,r28
 1573 001a 0E94 0000 	 call AddPlayer
 1574               	.LVL7:
 1575               	.L4:
  81:RNDISEthernet.c **** 		uint8_t ret = GetFreeConnection();//MyGetFreeConnection(HTTP_CONNECTIONS+1, TCP_SOCKETS );
 1576               	 .loc 1 81 0
 1577 001e 8C2F      	 mov r24,r28
 1578 0020 00C0      	 rjmp .L3
 1579               	.LVL8:
 1580               	.L5:
 1581               	.LBE46:
 1582               	.LBE45:
  87:RNDISEthernet.c **** 		
  88:RNDISEthernet.c **** 		return ret;
GAS LISTING  			page 70


  89:RNDISEthernet.c **** 	}
  90:RNDISEthernet.c **** #ifndef NO_HTTP
  91:RNDISEthernet.c **** 	else if( portno == 80 )
  92:RNDISEthernet.c **** 	{
  93:RNDISEthernet.c **** 		uint8_t ret = MyGetFreeConnection(1, HTTP_CONNECTIONS+1 );
  94:RNDISEthernet.c **** //		sendchr( 0 ); sendchr( 'x' ); sendhex2( ret );
  95:RNDISEthernet.c **** 		HTTPInit( ret-1, ret );
  96:RNDISEthernet.c **** 		return ret;
  97:RNDISEthernet.c **** 	}
  98:RNDISEthernet.c **** #endif
  99:RNDISEthernet.c **** 	return 0;
 1583               	 .loc 1 99 0
 1584 0022 80E0      	 ldi r24,0
 1585               	.LVL9:
 1586               	.L3:
 1587               	 
 100:RNDISEthernet.c **** }
 1588               	 .loc 1 100 0
 1589 0024 CF91      	 pop r28
 1590 0026 0895      	 ret
 1591               	 .cfi_endproc
 1592               	.LFE115:
 1594               	.global TCPConnectionClosing
 1596               	TCPConnectionClosing:
 1597               	.LFB116:
 101:RNDISEthernet.c **** 
 102:RNDISEthernet.c **** void TCPConnectionClosing( uint8_t conn )
 103:RNDISEthernet.c **** {
 1598               	 .loc 1 103 0
 1599               	 .cfi_startproc
 1600               	.LVL10:
 1601               	 
 1602               	 
 1603               	 
 1604               	.L__stack_usage =0
 104:RNDISEthernet.c **** 	if( conn >= HTTP_CONNECTIONS )
 105:RNDISEthernet.c **** 	{
 106:RNDISEthernet.c **** 		sendstr( "LOSC\n" );
 107:RNDISEthernet.c **** 		RemovePlayer( conn - HTTP_CONNECTIONS - 1 );
 1605               	 .loc 1 107 0
 1606 0028 8150      	 subi r24,lo8(-(-1))
 1607               	.LVL11:
 1608 002a 0C94 0000 	 jmp RemovePlayer
 1609               	.LVL12:
 1610               	 .cfi_endproc
 1611               	.LFE116:
 1613               	.global CanSend
 1615               	CanSend:
 1616               	.LFB117:
 108:RNDISEthernet.c **** 	}
 109:RNDISEthernet.c **** #ifndef NO_HTTP
 110:RNDISEthernet.c **** 	else
 111:RNDISEthernet.c **** 	{
 112:RNDISEthernet.c **** 		curhttp = &HTTPConnections[conn-1];
 113:RNDISEthernet.c **** 		HTTPClose(  );
 114:RNDISEthernet.c **** 	}
 115:RNDISEthernet.c **** #endif
GAS LISTING  			page 71


 116:RNDISEthernet.c **** }
 117:RNDISEthernet.c **** 
 118:RNDISEthernet.c **** 
 119:RNDISEthernet.c **** ///////////////////////////////////////DUMBCRAFT AREA//////////////////////////////////////////
 120:RNDISEthernet.c **** 
 121:RNDISEthernet.c **** uint8_t disable;
 122:RNDISEthernet.c **** 
 123:RNDISEthernet.c **** uint8_t CanSend( uint8_t playerno ) //DUMBCRAFT
 124:RNDISEthernet.c **** {
 1617               	 .loc 1 124 0
 1618               	 .cfi_startproc
 1619               	.LVL13:
 1620               	 
 1621               	 
 1622               	 
 1623               	.L__stack_usage =0
 125:RNDISEthernet.c **** 	return TCPCanSend( playerno + HTTP_CONNECTIONS + 1 );
 1624               	 .loc 1 125 0
 1625 002e 8F5F      	 subi r24,lo8(-(1))
 1626               	.LVL14:
 1627 0030 0C94 0000 	 jmp TCPCanSend
 1628               	.LVL15:
 1629               	 .cfi_endproc
 1630               	.LFE117:
 1632               	.global SendStart
 1634               	SendStart:
 1635               	.LFB118:
 126:RNDISEthernet.c **** }
 127:RNDISEthernet.c **** 
 128:RNDISEthernet.c **** void SendStart( uint8_t playerno )  //DUMBCRAFT
 129:RNDISEthernet.c **** {
 1636               	 .loc 1 129 0
 1637               	 .cfi_startproc
 1638               	.LVL16:
 1639               	 
 1640               	 
 1641               	 
 1642               	.L__stack_usage =0
 130:RNDISEthernet.c **** 	bytespushed = 0;
 1643               	 .loc 1 130 0
 1644 0034 1092 0000 	 sts bytespushed+1,__zero_reg__
 1645 0038 1092 0000 	 sts bytespushed,__zero_reg__
 131:RNDISEthernet.c **** 	lastconnection = playerno + HTTP_CONNECTIONS + 1;
 1646               	 .loc 1 131 0
 1647 003c 8F5F      	 subi r24,lo8(-(1))
 1648               	.LVL17:
 1649 003e 8093 0000 	 sts lastconnection,r24
 132:RNDISEthernet.c **** 	disable = 0;
 1650               	 .loc 1 132 0
 1651 0042 1092 0000 	 sts disable,__zero_reg__
 1652 0046 0895      	 ret
 1653               	 .cfi_endproc
 1654               	.LFE118:
 1656               	.global GetCurrentCircHead
 1658               	GetCurrentCircHead:
 1659               	.LFB119:
 133:RNDISEthernet.c **** }
GAS LISTING  			page 72


 134:RNDISEthernet.c **** 
 135:RNDISEthernet.c **** uint8_t incirc = 0;
 136:RNDISEthernet.c **** uint8_t circ_buffer_at = 0;
 137:RNDISEthernet.c **** uint8_t circ_buffer[CIRC_BUFFER_SIZE];
 138:RNDISEthernet.c **** 
 139:RNDISEthernet.c **** uint16_t GetCurrentCircHead()
 140:RNDISEthernet.c **** {
 1660               	 .loc 1 140 0
 1661               	 .cfi_startproc
 1662               	 
 1663               	 
 1664               	 
 1665               	.L__stack_usage =0
 141:RNDISEthernet.c **** 	return circ_buffer_at;
 1666               	 .loc 1 141 0
 1667 0048 8091 0000 	 lds r24,circ_buffer_at
 142:RNDISEthernet.c **** }
 1668               	 .loc 1 142 0
 1669 004c 90E0      	 ldi r25,0
 1670 004e 0895      	 ret
 1671               	 .cfi_endproc
 1672               	.LFE119:
 1674               	.global UnloadCircularBufferOnThisClient
 1676               	UnloadCircularBufferOnThisClient:
 1677               	.LFB120:
 143:RNDISEthernet.c **** 
 144:RNDISEthernet.c **** uint8_t UnloadCircularBufferOnThisClient( uint16_t * whence )
 145:RNDISEthernet.c **** {
 1678               	 .loc 1 145 0
 1679               	 .cfi_startproc
 1680               	.LVL18:
 1681               	 
 1682               	 
 1683               	 
 1684               	.L__stack_usage =0
 1685 0050 FC01      	 movw r30,r24
 1686               	.LVL19:
 146:RNDISEthernet.c **** 	//TRICKY: we're in the middle of a transaction now.
 147:RNDISEthernet.c **** 	//We need to back out, copy the memory, then pretend nothing happened.
 148:RNDISEthernet.c **** 	uint16_t w = *whence;
 149:RNDISEthernet.c **** 	uint16_t togomaxB = (circ_buffer_at - w)&((CIRC_BUFFER_SIZE)-1);
 1687               	 .loc 1 149 0
 1688 0052 2091 0000 	 lds r18,circ_buffer_at
 1689 0056 30E0      	 ldi r19,0
 1690 0058 8081      	 ld r24,Z
 1691 005a 9181      	 ldd r25,Z+1
 1692               	.LVL20:
 1693 005c 281B      	 sub r18,r24
 1694 005e 390B      	 sbc r19,r25
 1695 0060 2F73      	 andi r18,63
 1696 0062 3327      	 clr r19
 1697               	.LVL21:
 150:RNDISEthernet.c **** 
 151:RNDISEthernet.c **** 	if( togomaxB == 0 ) return 0;
 1698               	 .loc 1 151 0
 1699 0064 2115      	 cp r18,__zero_reg__
 1700 0066 3105      	 cpc r19,__zero_reg__
GAS LISTING  			page 73


 1701 0068 01F0      	 breq .L23
 1702 006a 4091 0000 	 lds r20,ETsendplace
 1703 006e 5091 0000 	 lds r21,ETsendplace+1
 1704               	.LVL22:
 1705               	.L16:
 152:RNDISEthernet.c **** //	printf( "(%d-%d)", circ_buffer_at, *whence );
 153:RNDISEthernet.c **** //	printf( "-%d-", togomaxB );
 154:RNDISEthernet.c **** 	while ( togomaxB-- )
 1706               	 .loc 1 154 0 discriminator 1
 1707               	.LVL23:
 1708 0072 2150      	 subi r18,1
 1709 0074 3109      	 sbc r19,__zero_reg__
 1710 0076 00F4      	 brcc .L20
 1711 0078 5093 0000 	 sts ETsendplace+1,r21
 1712 007c 4093 0000 	 sts ETsendplace,r20
 1713 0080 00C0      	 rjmp .L23
 1714               	.L20:
 1715               	.LBB50:
 155:RNDISEthernet.c **** 	{
 156:RNDISEthernet.c **** 		uint8_t cc = circ_buffer[*(whence)];
 1716               	 .loc 1 156 0
 1717 0082 A081      	 ld r26,Z
 1718 0084 B181      	 ldd r27,Z+1
 1719 0086 A050      	 subi r26,lo8(-(circ_buffer))
 1720 0088 B040      	 sbci r27,hi8(-(circ_buffer))
 1721 008a 8C91      	 ld r24,X
 1722               	.LVL24:
 1723               	.LBB51:
 1724               	.LBB52:
 1725               	 .file 2 "net_compat.h"
   1:net_compat.h  **** #ifndef _ENC424JCOMPAT_H
   2:net_compat.h  **** #define _ENC424JCOMPAT_H
   3:net_compat.h  **** 
   4:net_compat.h  **** //enc424j600 compat lib.
   5:net_compat.h  **** //We're using the IP library from AVRCraft... but we're using our own PHY+MAC
   6:net_compat.h  **** 
   7:net_compat.h  **** //TODO: Should probably use Timer1 (since we can't use Timer0)
   8:net_compat.h  **** //to make sure we send media detect pulses at the right points.
   9:net_compat.h  **** //Also, as a user, you cannot use the USI or Timer0
  10:net_compat.h  **** 
  11:net_compat.h  **** #include <stdint.h>
  12:net_compat.h  **** #include "eth_config.h"
  13:net_compat.h  **** 
  14:net_compat.h  **** void HandleUSB();
  15:net_compat.h  **** 
  16:net_compat.h  **** uint8_t IsSendBufferFree();
  17:net_compat.h  **** 
  18:net_compat.h  **** //You must define 'mymac'
  19:net_compat.h  **** extern unsigned char MyMAC[6];
  20:net_compat.h  **** extern unsigned char ETbuffer[ETBUFFERSIZE];
  21:net_compat.h  **** extern unsigned short ETsendplace;
  22:net_compat.h  **** //For telling where the current transaction started.
  23:net_compat.h  **** extern uint16_t sendbaseaddress;
  24:net_compat.h  **** extern unsigned short ETchecksum;
  25:net_compat.h  **** 
  26:net_compat.h  **** //return 0 if OK, otherwise nonzero.
  27:net_compat.h  **** int8_t et_init( const unsigned char * macaddy );
GAS LISTING  			page 74


  28:net_compat.h  **** 
  29:net_compat.h  **** int8_t et_xmitpacket( uint16_t start, uint16_t len );
  30:net_compat.h  **** 
  31:net_compat.h  **** //This waits for 8ms, sends an autoneg notice, then waits for 8 more ms.
  32:net_compat.h  **** //Ordinarily this would if packets were processed and still ned processing, but
  33:net_compat.h  **** //that doesn't make sense for this driver.  Do not put this in a loop unto itself.
  34:net_compat.h  **** unsigned short et_recvpack();
  35:net_compat.h  **** 
  36:net_compat.h  **** //You have to write this! (Or the underlying IP core must)
  37:net_compat.h  **** void et_receivecallback( uint16_t packetlen );
  38:net_compat.h  **** 
  39:net_compat.h  **** //Finish up any reading. 							//CLOSURE
  40:net_compat.h  **** static inline void et_finish_callback_now() { }
  41:net_compat.h  **** 
  42:net_compat.h  **** //Raw, on-wire pops. (assuming already in read)
  43:net_compat.h  **** void et_popblob( uint8_t * data, uint8_t len );
  44:net_compat.h  **** void et_dumpbytes( uint8_t len );
  45:net_compat.h  **** uint16_t et_pop16();
  46:net_compat.h  **** uint8_t et_pop8();
  47:net_compat.h  **** 
  48:net_compat.h  **** //Raw, on-wire push. (assuming already in write)
  49:net_compat.h  **** void et_pushpgmstr( const char * msg );
  50:net_compat.h  **** void et_pushstr( const char * msg );
  51:net_compat.h  **** void et_pushblob( const uint8_t * data, uint8_t len );
  52:net_compat.h  **** void et_pushpgmblob( const uint8_t * data, uint8_t len );
  53:net_compat.h  **** static inline void et_push8( uint8_t d ) { if (ETsendplace < ETBUFFERSIZE ) ETbuffer[ETsendplace++]
 1726               	 .loc 2 53 0
 1727 008c 4F3F      	 cpi r20,-1
 1728 008e 5105      	 cpc r21,__zero_reg__
 1729 0090 01F0      	 breq .+2
 1730 0092 00F4      	 brsh .L17
 1731 0094 DA01      	 movw r26,r20
 1732 0096 A050      	 subi r26,lo8(-(ETbuffer))
 1733 0098 B040      	 sbci r27,hi8(-(ETbuffer))
 1734 009a 8C93      	 st X,r24
 1735 009c 4F5F      	 subi r20,-1
 1736 009e 5F4F      	 sbci r21,-1
 1737               	.L17:
 1738               	.LBE52:
 1739               	.LBE51:
 157:RNDISEthernet.c **** 		PUSH( cc );
 158:RNDISEthernet.c **** //XXX XXX XXX TODO Re-enable sending here.
 159:RNDISEthernet.c **** //		PUSH( '\x05' );
 160:RNDISEthernet.c **** //		sendchr (' ' );
 161:RNDISEthernet.c **** //		sendhex2( cc );
 162:RNDISEthernet.c **** 		(*whence)++;
 1740               	 .loc 1 162 0
 1741 00a0 8081      	 ld r24,Z
 1742 00a2 9181      	 ldd r25,Z+1
 1743               	.LVL25:
 1744 00a4 0196      	 adiw r24,1
 163:RNDISEthernet.c **** 		if( *whence >= CIRC_BUFFER_SIZE ) *whence = 0;
 1745               	 .loc 1 163 0
 1746 00a6 8034      	 cpi r24,64
 1747 00a8 9105      	 cpc r25,__zero_reg__
 1748 00aa 00F4      	 brsh .L18
 162:RNDISEthernet.c **** 		(*whence)++;
GAS LISTING  			page 75


 1749               	 .loc 1 162 0
 1750 00ac 9183      	 std Z+1,r25
 1751 00ae 8083      	 st Z,r24
 1752 00b0 00C0      	 rjmp .L16
 1753               	.L18:
 1754               	 .loc 1 163 0 discriminator 1
 1755 00b2 1182      	 std Z+1,__zero_reg__
 1756 00b4 1082      	 st Z,__zero_reg__
 1757 00b6 00C0      	 rjmp .L16
 1758               	.L23:
 1759               	.LBE50:
 164:RNDISEthernet.c **** 	}
 165:RNDISEthernet.c **** 
 166:RNDISEthernet.c **** 	return 0;
 167:RNDISEthernet.c **** }
 1760               	 .loc 1 167 0
 1761 00b8 80E0      	 ldi r24,0
 1762 00ba 0895      	 ret
 1763               	 .cfi_endproc
 1764               	.LFE120:
 1766               	.global StartupBroadcast
 1768               	StartupBroadcast:
 1769               	.LFB121:
 168:RNDISEthernet.c **** 
 169:RNDISEthernet.c **** void StartupBroadcast()
 170:RNDISEthernet.c **** {
 1770               	 .loc 1 170 0
 1771               	 .cfi_startproc
 1772               	 
 1773               	 
 1774               	 
 1775               	.L__stack_usage =0
 171:RNDISEthernet.c **** 	incirc = 1;
 1776               	 .loc 1 171 0
 1777 00bc 81E0      	 ldi r24,lo8(1)
 1778 00be 8093 0000 	 sts incirc,r24
 1779 00c2 0895      	 ret
 1780               	 .cfi_endproc
 1781               	.LFE121:
 1783               	.global DoneBroadcast
 1785               	DoneBroadcast:
 1786               	.LFB122:
 172:RNDISEthernet.c **** }
 173:RNDISEthernet.c **** 
 174:RNDISEthernet.c **** void DoneBroadcast()
 175:RNDISEthernet.c **** {
 1787               	 .loc 1 175 0
 1788               	 .cfi_startproc
 1789               	 
 1790               	 
 1791               	 
 1792               	.L__stack_usage =0
 176:RNDISEthernet.c **** 	incirc = 0;
 1793               	 .loc 1 176 0
 1794 00c4 1092 0000 	 sts incirc,__zero_reg__
 1795 00c8 0895      	 ret
 1796               	 .cfi_endproc
GAS LISTING  			page 76


 1797               	.LFE122:
 1799               	.global extSbyte
 1801               	extSbyte:
 1802               	.LFB123:
 177:RNDISEthernet.c **** }
 178:RNDISEthernet.c **** 
 179:RNDISEthernet.c **** void extSbyte( uint8_t byte ) //DUMBCRAFT
 180:RNDISEthernet.c **** {
 1803               	 .loc 1 180 0
 1804               	 .cfi_startproc
 1805               	.LVL26:
 1806 00ca CF93      	 push r28
 1807               	.LCFI1:
 1808               	 .cfi_def_cfa_offset 3
 1809               	 .cfi_offset 28,-2
 1810               	 
 1811               	 
 1812               	 
 1813               	.L__stack_usage =1
 1814 00cc C82F      	 mov r28,r24
 181:RNDISEthernet.c **** 	if( !incirc )
 1815               	 .loc 1 181 0
 1816 00ce 8091 0000 	 lds r24,incirc
 1817               	.LVL27:
 1818 00d2 8111      	 cpse r24,__zero_reg__
 1819 00d4 00C0      	 rjmp .L30
 1820               	.LVL28:
 1821               	.LBB57:
 1822               	.LBB58:
 182:RNDISEthernet.c **** 	{
 183:RNDISEthernet.c **** 		if( bytespushed == 0 )
 1823               	 .loc 1 183 0
 1824 00d6 2091 0000 	 lds r18,bytespushed
 1825 00da 3091 0000 	 lds r19,bytespushed+1
 1826 00de 232B      	 or r18,r19
 1827 00e0 01F4      	 brne .L31
 184:RNDISEthernet.c **** 		{
 185:RNDISEthernet.c **** 			TCPs[lastconnection].sendtype = ACKBIT | PSHBIT;
 1828               	 .loc 1 185 0
 1829 00e2 2091 0000 	 lds r18,lastconnection
 1830 00e6 822F      	 mov r24,r18
 1831 00e8 9927      	 clr r25
 1832 00ea 87FD      	 sbrc r24,7
 1833 00ec 9095      	 com r25
 1834 00ee 6EE1      	 ldi r22,lo8(30)
 1835 00f0 70E0      	 ldi r23,0
 1836 00f2 0E94 0000 	 call __mulhi3
 1837 00f6 FC01      	 movw r30,r24
 1838 00f8 E050      	 subi r30,lo8(-(TCPs))
 1839 00fa F040      	 sbci r31,hi8(-(TCPs))
 1840 00fc 88E1      	 ldi r24,lo8(24)
 1841 00fe 838F      	 std Z+27,r24
 186:RNDISEthernet.c **** 			StartTCPWrite( lastconnection );
 1842               	 .loc 1 186 0
 1843 0100 822F      	 mov r24,r18
 1844 0102 0E94 0000 	 call StartTCPWrite
 1845               	.LVL29:
GAS LISTING  			page 77


 1846               	.L31:
 187:RNDISEthernet.c **** 		}
 188:RNDISEthernet.c **** 		bytespushed++;
 1847               	 .loc 1 188 0
 1848 0106 2091 0000 	 lds r18,bytespushed
 1849 010a 3091 0000 	 lds r19,bytespushed+1
 1850 010e 2F5F      	 subi r18,-1
 1851 0110 3F4F      	 sbci r19,-1
 1852 0112 3093 0000 	 sts bytespushed+1,r19
 1853 0116 2093 0000 	 sts bytespushed,r18
 1854               	.LVL30:
 1855               	.LBB59:
 1856               	.LBB60:
 1857               	 .loc 2 53 0
 1858 011a 2091 0000 	 lds r18,ETsendplace
 1859 011e 3091 0000 	 lds r19,ETsendplace+1
 1860 0122 2F3F      	 cpi r18,-1
 1861 0124 3105      	 cpc r19,__zero_reg__
 1862 0126 01F0      	 breq .+2
 1863 0128 00F4      	 brsh .L29
 1864 012a A901      	 movw r20,r18
 1865 012c 4F5F      	 subi r20,-1
 1866 012e 5F4F      	 sbci r21,-1
 1867 0130 5093 0000 	 sts ETsendplace+1,r21
 1868 0134 4093 0000 	 sts ETsendplace,r20
 1869 0138 F901      	 movw r30,r18
 1870 013a E050      	 subi r30,lo8(-(ETbuffer))
 1871 013c F040      	 sbci r31,hi8(-(ETbuffer))
 1872 013e C083      	 st Z,r28
 1873 0140 00C0      	 rjmp .L29
 1874               	.LVL31:
 1875               	.L30:
 1876               	.LBE60:
 1877               	.LBE59:
 1878               	.LBE58:
 1879               	.LBE57:
 189:RNDISEthernet.c **** 		PUSH( byte );
 190:RNDISEthernet.c **** 	}
 191:RNDISEthernet.c **** 	else
 192:RNDISEthernet.c **** 	{
 193:RNDISEthernet.c **** 		circ_buffer[circ_buffer_at] = byte;
 1880               	 .loc 1 193 0
 1881 0142 8091 0000 	 lds r24,circ_buffer_at
 1882 0146 E82F      	 mov r30,r24
 1883 0148 F0E0      	 ldi r31,0
 1884 014a E050      	 subi r30,lo8(-(circ_buffer))
 1885 014c F040      	 sbci r31,hi8(-(circ_buffer))
 1886 014e C083      	 st Z,r28
 194:RNDISEthernet.c **** //		sendchr( ':');
 195:RNDISEthernet.c **** //		sendhex2( byte );
 196:RNDISEthernet.c **** 		circ_buffer_at++;
 1887               	 .loc 1 196 0
 1888 0150 8F5F      	 subi r24,lo8(-(1))
 1889 0152 8093 0000 	 sts circ_buffer_at,r24
 197:RNDISEthernet.c **** 		if( circ_buffer_at>= CIRC_BUFFER_SIZE) circ_buffer_at = 0;
 1890               	 .loc 1 197 0
 1891 0156 8034      	 cpi r24,lo8(64)
GAS LISTING  			page 78


 1892 0158 00F0      	 brlo .L29
 1893               	 .loc 1 197 0 is_stmt 0 discriminator 1
 1894 015a 1092 0000 	 sts circ_buffer_at,__zero_reg__
 1895               	.L29:
 1896               	 
 198:RNDISEthernet.c **** 	}
 199:RNDISEthernet.c **** }
 1897               	 .loc 1 199 0 is_stmt 1
 1898 015e CF91      	 pop r28
 1899               	.LVL32:
 1900 0160 0895      	 ret
 1901               	 .cfi_endproc
 1902               	.LFE123:
 1904               	.global EndSend
 1906               	EndSend:
 1907               	.LFB124:
 200:RNDISEthernet.c **** 
 201:RNDISEthernet.c **** void EndSend( )  //DUMBCRAFT
 202:RNDISEthernet.c **** {
 1908               	 .loc 1 202 0
 1909               	 .cfi_startproc
 1910               	 
 1911               	 
 1912               	 
 1913               	.L__stack_usage =0
 203:RNDISEthernet.c **** 	if( bytespushed == 0 )
 1914               	 .loc 1 203 0
 1915 0162 8091 0000 	 lds r24,bytespushed
 1916 0166 9091 0000 	 lds r25,bytespushed+1
 1917 016a 892B      	 or r24,r25
 1918 016c 01F0      	 breq .L35
 1919               	.LBB63:
 1920               	.LBB64:
 204:RNDISEthernet.c **** 	{
 205:RNDISEthernet.c **** 	}
 206:RNDISEthernet.c **** 	else
 207:RNDISEthernet.c **** 	{
 208:RNDISEthernet.c **** 		EndTCPWrite( lastconnection );
 1921               	 .loc 1 208 0
 1922 016e 8091 0000 	 lds r24,lastconnection
 1923 0172 0C94 0000 	 jmp EndTCPWrite
 1924               	.LVL33:
 1925               	.L35:
 1926 0176 0895      	 ret
 1927               	.LBE64:
 1928               	.LBE63:
 1929               	 .cfi_endproc
 1930               	.LFE124:
 1932               	.global ForcePlayerClose
 1934               	ForcePlayerClose:
 1935               	.LFB125:
 209:RNDISEthernet.c **** 	}
 210:RNDISEthernet.c **** }
 211:RNDISEthernet.c **** 
 212:RNDISEthernet.c **** void ForcePlayerClose( uint8_t playerno, uint8_t reason ) //DUMBCRAFT
 213:RNDISEthernet.c **** {
 1936               	 .loc 1 213 0
GAS LISTING  			page 79


 1937               	 .cfi_startproc
 1938               	.LVL34:
 1939 0178 CF93      	 push r28
 1940               	.LCFI2:
 1941               	 .cfi_def_cfa_offset 3
 1942               	 .cfi_offset 28,-2
 1943               	 
 1944               	 
 1945               	 
 1946               	.L__stack_usage =1
 1947 017a C82F      	 mov r28,r24
 214:RNDISEthernet.c **** 	sendstr( "FPC\n" );
 215:RNDISEthernet.c **** 	RequestClosure( playerno + HTTP_CONNECTIONS );
 1948               	 .loc 1 215 0
 1949 017c 0E94 0000 	 call RequestClosure
 1950               	.LVL35:
 216:RNDISEthernet.c **** 	RemovePlayer( playerno );	
 1951               	 .loc 1 216 0
 1952 0180 8C2F      	 mov r24,r28
 1953               	 
 217:RNDISEthernet.c **** }
 1954               	 .loc 1 217 0
 1955 0182 CF91      	 pop r28
 1956               	.LVL36:
 216:RNDISEthernet.c **** 	RemovePlayer( playerno );	
 1957               	 .loc 1 216 0
 1958 0184 0C94 0000 	 jmp RemovePlayer
 1959               	.LVL37:
 1960               	 .cfi_endproc
 1961               	.LFE125:
 1963               	.global Rbyte
 1965               	Rbyte:
 1966               	.LFB126:
 218:RNDISEthernet.c **** 
 219:RNDISEthernet.c **** 
 220:RNDISEthernet.c **** uint16_t totaldatalen;
 221:RNDISEthernet.c **** uint16_t readsofar;
 222:RNDISEthernet.c **** 
 223:RNDISEthernet.c **** uint8_t Rbyte()  //DUMBCRAFT
 224:RNDISEthernet.c **** {
 1967               	 .loc 1 224 0
 1968               	 .cfi_startproc
 1969               	 
 1970               	 
 1971               	 
 1972               	.L__stack_usage =0
 225:RNDISEthernet.c **** 	if( readsofar++ > totaldatalen ) return 0;
 1973               	 .loc 1 225 0
 1974 0188 8091 0000 	 lds r24,readsofar
 1975 018c 9091 0000 	 lds r25,readsofar+1
 1976 0190 9C01      	 movw r18,r24
 1977 0192 2F5F      	 subi r18,-1
 1978 0194 3F4F      	 sbci r19,-1
 1979 0196 3093 0000 	 sts readsofar+1,r19
 1980 019a 2093 0000 	 sts readsofar,r18
 1981 019e 2091 0000 	 lds r18,totaldatalen
 1982 01a2 3091 0000 	 lds r19,totaldatalen+1
GAS LISTING  			page 80


 1983 01a6 2817      	 cp r18,r24
 1984 01a8 3907      	 cpc r19,r25
 1985 01aa 00F0      	 brlo .L39
 226:RNDISEthernet.c **** 	return POP;
 1986               	 .loc 1 226 0
 1987 01ac 0C94 0000 	 jmp et_pop8
 1988               	.LVL38:
 1989               	.L39:
 227:RNDISEthernet.c **** }
 1990               	 .loc 1 227 0
 1991 01b0 80E0      	 ldi r24,0
 1992 01b2 0895      	 ret
 1993               	 .cfi_endproc
 1994               	.LFE126:
 1996               	.global CanRead
 1998               	CanRead:
 1999               	.LFB127:
 228:RNDISEthernet.c **** 
 229:RNDISEthernet.c **** uint8_t CanRead()  //DUMBCRAFT
 230:RNDISEthernet.c **** {
 2000               	 .loc 1 230 0
 2001               	 .cfi_startproc
 2002               	 
 2003               	 
 2004               	 
 2005               	.L__stack_usage =0
 231:RNDISEthernet.c **** 	return readsofar < totaldatalen;
 2006               	 .loc 1 231 0
 2007 01b4 81E0      	 ldi r24,lo8(1)
 2008 01b6 4091 0000 	 lds r20,readsofar
 2009 01ba 5091 0000 	 lds r21,readsofar+1
 2010 01be 2091 0000 	 lds r18,totaldatalen
 2011 01c2 3091 0000 	 lds r19,totaldatalen+1
 2012 01c6 4217      	 cp r20,r18
 2013 01c8 5307      	 cpc r21,r19
 2014 01ca 00F0      	 brlo .L41
 2015 01cc 80E0      	 ldi r24,0
 2016               	.L41:
 232:RNDISEthernet.c **** }
 2017               	 .loc 1 232 0
 2018 01ce 0895      	 ret
 2019               	 .cfi_endproc
 2020               	.LFE127:
 2022               	.global TCPReceiveData
 2024               	TCPReceiveData:
 2025               	.LFB128:
 233:RNDISEthernet.c **** 
 234:RNDISEthernet.c **** uint8_t TCPReceiveData( uint8_t connection, uint16_t totallen ) 
 235:RNDISEthernet.c **** {
 2026               	 .loc 1 235 0
 2027               	 .cfi_startproc
 2028               	.LVL39:
 2029               	 
 2030               	 
 2031               	 
 2032               	.L__stack_usage =0
 236:RNDISEthernet.c **** 	if( connection > HTTP_CONNECTIONS ) //DUMBCRAFT
GAS LISTING  			page 81


 2033               	 .loc 1 236 0
 2034 01d0 8823      	 tst r24
 2035 01d2 01F0      	 breq .L43
 2036               	.LVL40:
 2037               	.LBB67:
 2038               	.LBB68:
 237:RNDISEthernet.c **** 	{
 238:RNDISEthernet.c **** 		totaldatalen = totallen;
 2039               	 .loc 1 238 0
 2040 01d4 7093 0000 	 sts totaldatalen+1,r23
 2041 01d8 6093 0000 	 sts totaldatalen,r22
 239:RNDISEthernet.c **** 		readsofar = 0;
 2042               	 .loc 1 239 0
 2043 01dc 1092 0000 	 sts readsofar+1,__zero_reg__
 2044 01e0 1092 0000 	 sts readsofar,__zero_reg__
 240:RNDISEthernet.c **** 		GotData( connection -  HTTP_CONNECTIONS - 1 );
 2045               	 .loc 1 240 0
 2046 01e4 8150      	 subi r24,lo8(-(-1))
 2047               	.LVL41:
 2048 01e6 0E94 0000 	 call GotData
 2049               	.LVL42:
 2050               	.L43:
 2051               	.LBE68:
 2052               	.LBE67:
 241:RNDISEthernet.c **** 		return 0; //Do this if we didn't send an ack.
 242:RNDISEthernet.c **** 	}
 243:RNDISEthernet.c **** #ifndef NO_HTTP
 244:RNDISEthernet.c **** 	else
 245:RNDISEthernet.c **** 	{
 246:RNDISEthernet.c **** 		HTTPGotData( connection-1, totallen );
 247:RNDISEthernet.c **** 		return 0;
 248:RNDISEthernet.c **** 	}
 249:RNDISEthernet.c **** #endif
 250:RNDISEthernet.c **** 	return 0;
 251:RNDISEthernet.c **** }
 2053               	 .loc 1 251 0
 2054 01ea 80E0      	 ldi r24,0
 2055 01ec 0895      	 ret
 2056               	 .cfi_endproc
 2057               	.LFE128:
 2059               	.global SetupHardware
 2061               	SetupHardware:
 2062               	.LFB130:
 252:RNDISEthernet.c **** 
 253:RNDISEthernet.c **** 
 254:RNDISEthernet.c **** 
 255:RNDISEthernet.c **** 
 256:RNDISEthernet.c **** 
 257:RNDISEthernet.c **** 
 258:RNDISEthernet.c **** 
 259:RNDISEthernet.c **** 
 260:RNDISEthernet.c **** 
 261:RNDISEthernet.c **** 
 262:RNDISEthernet.c **** 
 263:RNDISEthernet.c **** 
 264:RNDISEthernet.c **** 
 265:RNDISEthernet.c **** 
GAS LISTING  			page 82


 266:RNDISEthernet.c **** 
 267:RNDISEthernet.c **** 
 268:RNDISEthernet.c **** /** Main program entry point. This routine configures the hardware required by the application, the
 269:RNDISEthernet.c ****  *  enters a loop to run the application tasks in sequence.
 270:RNDISEthernet.c ****  */
 271:RNDISEthernet.c **** int main(void)
 272:RNDISEthernet.c **** {
 273:RNDISEthernet.c **** 	uint8_t cyc;
 274:RNDISEthernet.c **** 	SetupHardware();
 275:RNDISEthernet.c **** 
 276:RNDISEthernet.c **** 	/* Webserver Initialization */
 277:RNDISEthernet.c **** 		setup_spi();
 278:RNDISEthernet.c **** 
 279:RNDISEthernet.c **** 	DDRD |= _BV(6);
 280:RNDISEthernet.c **** 	PORTD &= ~_BV(6);
 281:RNDISEthernet.c **** 	PORTD = 0;
 282:RNDISEthernet.c **** 
 283:RNDISEthernet.c **** 	GlobalInterruptEnable();
 284:RNDISEthernet.c **** 
 285:RNDISEthernet.c **** 	//sendstr( "Boot" );
 286:RNDISEthernet.c **** 
 287:RNDISEthernet.c **** 	et_init( 0 );
 288:RNDISEthernet.c **** 
 289:RNDISEthernet.c **** 	InitTCP();
 290:RNDISEthernet.c **** 	InitDumbcraft();
 291:RNDISEthernet.c **** 
 292:RNDISEthernet.c **** 
 293:RNDISEthernet.c **** 	for (;;)
 294:RNDISEthernet.c **** 	{
 295:RNDISEthernet.c **** //	SetManyWS( 0xff, 0x00, 0x00, 20 );
 296:RNDISEthernet.c **** 
 297:RNDISEthernet.c **** 		RNDIS_Task();
 298:RNDISEthernet.c **** 		USB_USBTask();
 299:RNDISEthernet.c **** 		_delay_us(200);
 300:RNDISEthernet.c **** 		UpdateServer();
 301:RNDISEthernet.c **** 		cyc++;
 302:RNDISEthernet.c **** 		if( (cyc & 0x7f) == 0 )
 303:RNDISEthernet.c **** 		{
 304:RNDISEthernet.c **** 			struct Player * p = &Players[0];
 305:RNDISEthernet.c **** //			sendhex2( p->npitch );
 306:RNDISEthernet.c **** //			 = 1;
 307:RNDISEthernet.c **** //			if( p->active )
 308:RNDISEthernet.c **** 
 309:RNDISEthernet.c **** 			PORTD |= _BV(6);
 310:RNDISEthernet.c **** 			TickServer();
 311:RNDISEthernet.c **** 			TickTCP();
 312:RNDISEthernet.c **** 			PORTD &= ~_BV(6);
 313:RNDISEthernet.c **** 		}
 314:RNDISEthernet.c **** 	}
 315:RNDISEthernet.c **** }
 316:RNDISEthernet.c **** 
 317:RNDISEthernet.c **** /** Configures the board hardware and chip peripherals for the demo's functionality. */
 318:RNDISEthernet.c **** void SetupHardware(void)
 319:RNDISEthernet.c **** {
 2063               	 .loc 1 319 0
 2064               	 .cfi_startproc
 2065               	 
GAS LISTING  			page 83


 2066               	 
 2067               	 
 2068               	.L__stack_usage =0
 320:RNDISEthernet.c **** 	/* Disable watchdog if enabled by bootloader/fuses */
 321:RNDISEthernet.c **** 	MCUSR &= ~(1 << WDRF);
 2069               	 .loc 1 321 0
 2070 01ee 84B7      	 in r24,0x34
 2071 01f0 877F      	 andi r24,lo8(-9)
 2072 01f2 84BF      	 out 0x34,r24
 322:RNDISEthernet.c **** 	wdt_disable();
 2073               	 .loc 1 322 0
 2074 01f4 88E1      	 ldi r24,lo8(24)
 2075               	 
 2076               	 
 2077 01f6 0FB6      	 in __tmp_reg__,__SREG__
 2078 01f8 F894      	 cli
 2079 01fa 8093 6000 	 sts 96,r24
 2080 01fe 1092 6000 	 sts 96,__zero_reg__
 2081 0202 0FBE      	 out __SREG__,__tmp_reg__
 2082               	 
 2083               	 
 2084               	.LVL43:
 2085               	 
 2086               	.LBB69:
 2087               	.LBB70:
 2088               	 .file 3 "/usr/lib/avr/include/avr/power.h"
   1:/usr/lib/avr/include/avr/power.h **** /* Copyright (c) 2006, 2007, 2008  Eric B. Weddington
   2:/usr/lib/avr/include/avr/power.h ****    All rights reserved.
   3:/usr/lib/avr/include/avr/power.h **** 
   4:/usr/lib/avr/include/avr/power.h ****    Redistribution and use in source and binary forms, with or without
   5:/usr/lib/avr/include/avr/power.h ****    modification, are permitted provided that the following conditions are met:
   6:/usr/lib/avr/include/avr/power.h **** 
   7:/usr/lib/avr/include/avr/power.h ****    * Redistributions of source code must retain the above copyright
   8:/usr/lib/avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer.
   9:/usr/lib/avr/include/avr/power.h ****    * Redistributions in binary form must reproduce the above copyright
  10:/usr/lib/avr/include/avr/power.h ****      notice, this list of conditions and the following disclaimer in
  11:/usr/lib/avr/include/avr/power.h ****      the documentation and/or other materials provided with the
  12:/usr/lib/avr/include/avr/power.h ****      distribution.
  13:/usr/lib/avr/include/avr/power.h ****    * Neither the name of the copyright holders nor the names of
  14:/usr/lib/avr/include/avr/power.h ****      contributors may be used to endorse or promote products derived
  15:/usr/lib/avr/include/avr/power.h ****      from this software without specific prior written permission.
  16:/usr/lib/avr/include/avr/power.h **** 
  17:/usr/lib/avr/include/avr/power.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  18:/usr/lib/avr/include/avr/power.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  19:/usr/lib/avr/include/avr/power.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  20:/usr/lib/avr/include/avr/power.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  21:/usr/lib/avr/include/avr/power.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  22:/usr/lib/avr/include/avr/power.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  23:/usr/lib/avr/include/avr/power.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  24:/usr/lib/avr/include/avr/power.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  25:/usr/lib/avr/include/avr/power.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  26:/usr/lib/avr/include/avr/power.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  27:/usr/lib/avr/include/avr/power.h ****   POSSIBILITY OF SUCH DAMAGE. */
  28:/usr/lib/avr/include/avr/power.h **** 
  29:/usr/lib/avr/include/avr/power.h **** /* $Id: power.h 2254 2011-09-26 15:06:50Z arcanum $ */
  30:/usr/lib/avr/include/avr/power.h **** 
  31:/usr/lib/avr/include/avr/power.h **** #ifndef _AVR_POWER_H_
GAS LISTING  			page 84


  32:/usr/lib/avr/include/avr/power.h **** #define _AVR_POWER_H_   1
  33:/usr/lib/avr/include/avr/power.h **** 
  34:/usr/lib/avr/include/avr/power.h **** #include <avr/io.h>
  35:/usr/lib/avr/include/avr/power.h **** #include <stdint.h>
  36:/usr/lib/avr/include/avr/power.h **** 
  37:/usr/lib/avr/include/avr/power.h **** 
  38:/usr/lib/avr/include/avr/power.h **** /** \file */
  39:/usr/lib/avr/include/avr/power.h **** /** \defgroup avr_power <avr/power.h>: Power Reduction Management
  40:/usr/lib/avr/include/avr/power.h **** 
  41:/usr/lib/avr/include/avr/power.h **** \code #include <avr/power.h>\endcode
  42:/usr/lib/avr/include/avr/power.h **** 
  43:/usr/lib/avr/include/avr/power.h **** Many AVRs contain a Power Reduction Register (PRR) or Registers (PRRx) that 
  44:/usr/lib/avr/include/avr/power.h **** allow you to reduce power consumption by disabling or enabling various on-board 
  45:/usr/lib/avr/include/avr/power.h **** peripherals as needed.
  46:/usr/lib/avr/include/avr/power.h **** 
  47:/usr/lib/avr/include/avr/power.h **** There are many macros in this header file that provide an easy interface
  48:/usr/lib/avr/include/avr/power.h **** to enable or disable on-board peripherals to reduce power. See the table below.
  49:/usr/lib/avr/include/avr/power.h **** 
  50:/usr/lib/avr/include/avr/power.h **** \note Not all AVR devices have a Power Reduction Register (for example
  51:/usr/lib/avr/include/avr/power.h **** the ATmega128). On those devices without a Power Reduction Register, these 
  52:/usr/lib/avr/include/avr/power.h **** macros are not available.
  53:/usr/lib/avr/include/avr/power.h **** 
  54:/usr/lib/avr/include/avr/power.h **** \note Not all AVR devices contain the same peripherals (for example, the LCD
  55:/usr/lib/avr/include/avr/power.h **** interface), or they will be named differently (for example, USART and 
  56:/usr/lib/avr/include/avr/power.h **** USART0). Please consult your device's datasheet, or the header file, to 
  57:/usr/lib/avr/include/avr/power.h **** find out which macros are applicable to your device.
  58:/usr/lib/avr/include/avr/power.h **** 
  59:/usr/lib/avr/include/avr/power.h **** */
  60:/usr/lib/avr/include/avr/power.h **** 
  61:/usr/lib/avr/include/avr/power.h **** 
  62:/usr/lib/avr/include/avr/power.h **** /** \addtogroup avr_power
  63:/usr/lib/avr/include/avr/power.h **** 
  64:/usr/lib/avr/include/avr/power.h **** \anchor avr_powermacros
  65:/usr/lib/avr/include/avr/power.h **** <small>
  66:/usr/lib/avr/include/avr/power.h **** <center>
  67:/usr/lib/avr/include/avr/power.h **** <table border="3">
  68:/usr/lib/avr/include/avr/power.h ****   <tr>
  69:/usr/lib/avr/include/avr/power.h ****     <td width="10%"><strong>Power Macro</strong></td>
  70:/usr/lib/avr/include/avr/power.h ****     <td width="15%"><strong>Description</strong></td>
  71:/usr/lib/avr/include/avr/power.h ****     <td width="75%"><strong>Applicable for device</strong></td>
  72:/usr/lib/avr/include/avr/power.h ****   </tr>
  73:/usr/lib/avr/include/avr/power.h **** 
  74:/usr/lib/avr/include/avr/power.h ****   <tr>
  75:/usr/lib/avr/include/avr/power.h ****     <td>power_adc_enable()</td>
  76:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Analog to Digital Converter module.</td>
  77:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  78:/usr/lib/avr/include/avr/power.h ****   </tr>
  79:/usr/lib/avr/include/avr/power.h **** 
  80:/usr/lib/avr/include/avr/power.h ****   <tr>
  81:/usr/lib/avr/include/avr/power.h ****     <td>power_adc_disable()</td>
  82:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Analog to Digital Converter module.</td>
  83:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
  84:/usr/lib/avr/include/avr/power.h ****   </tr>
  85:/usr/lib/avr/include/avr/power.h **** 
  86:/usr/lib/avr/include/avr/power.h ****   <tr>
  87:/usr/lib/avr/include/avr/power.h ****     <td>power_lcd_enable()</td>
  88:/usr/lib/avr/include/avr/power.h ****     <td>Enable the LCD module.</td>
GAS LISTING  			page 85


  89:/usr/lib/avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  90:/usr/lib/avr/include/avr/power.h ****   </tr>
  91:/usr/lib/avr/include/avr/power.h **** 
  92:/usr/lib/avr/include/avr/power.h ****   <tr>
  93:/usr/lib/avr/include/avr/power.h ****     <td>power_lcd_disable().</td>
  94:/usr/lib/avr/include/avr/power.h ****     <td>Disable the LCD module.</td>
  95:/usr/lib/avr/include/avr/power.h ****     <td>ATmega169, ATmega169P, ATmega329, ATmega329A, ATmega3290, ATmega3290A, ATmega649, ATmega649
  96:/usr/lib/avr/include/avr/power.h ****   </tr>
  97:/usr/lib/avr/include/avr/power.h **** 
  98:/usr/lib/avr/include/avr/power.h ****   <tr>
  99:/usr/lib/avr/include/avr/power.h ****     <td>power_pscr_enable()</td>
 100:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Reduced Power Stage Controller module.</td>
 101:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM81</td>
 102:/usr/lib/avr/include/avr/power.h ****   </tr>
 103:/usr/lib/avr/include/avr/power.h **** 
 104:/usr/lib/avr/include/avr/power.h ****   <tr>
 105:/usr/lib/avr/include/avr/power.h ****     <td>power_pscr_disable()</td>
 106:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Reduced Power Stage Controller module.</td>
 107:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM81</td>
 108:/usr/lib/avr/include/avr/power.h ****   </tr>
 109:/usr/lib/avr/include/avr/power.h **** 
 110:/usr/lib/avr/include/avr/power.h ****   <tr>
 111:/usr/lib/avr/include/avr/power.h ****     <td>power_psc0_enable()</td>
 112:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 0 module.</td>
 113:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 114:/usr/lib/avr/include/avr/power.h ****   </tr>
 115:/usr/lib/avr/include/avr/power.h **** 
 116:/usr/lib/avr/include/avr/power.h ****   <tr>
 117:/usr/lib/avr/include/avr/power.h ****     <td>power_psc0_disable()</td>
 118:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 0 module.</td>
 119:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 120:/usr/lib/avr/include/avr/power.h ****   </tr>
 121:/usr/lib/avr/include/avr/power.h **** 
 122:/usr/lib/avr/include/avr/power.h ****   <tr>
 123:/usr/lib/avr/include/avr/power.h ****     <td>power_psc1_enable()</td>
 124:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 1 module.</td>
 125:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 126:/usr/lib/avr/include/avr/power.h ****   </tr>
 127:/usr/lib/avr/include/avr/power.h **** 
 128:/usr/lib/avr/include/avr/power.h ****   <tr>
 129:/usr/lib/avr/include/avr/power.h ****     <td>power_psc1_disable()</td>
 130:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 1 module.</td>
 131:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 132:/usr/lib/avr/include/avr/power.h ****   </tr>
 133:/usr/lib/avr/include/avr/power.h **** 
 134:/usr/lib/avr/include/avr/power.h ****   <tr>
 135:/usr/lib/avr/include/avr/power.h ****     <td>power_psc2_enable()</td>
 136:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Power Stage Controller 2 module.</td>
 137:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 138:/usr/lib/avr/include/avr/power.h ****   </tr>
 139:/usr/lib/avr/include/avr/power.h **** 
 140:/usr/lib/avr/include/avr/power.h ****   <tr>
 141:/usr/lib/avr/include/avr/power.h ****     <td>power_psc2_disable()</td>
 142:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Power Stage Controller 2 module.</td>
 143:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM1, AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B, AT90PWM81</td>
 144:/usr/lib/avr/include/avr/power.h ****   </tr>
 145:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 86


 146:/usr/lib/avr/include/avr/power.h ****   <tr>
 147:/usr/lib/avr/include/avr/power.h ****     <td>power_spi_enable()</td>
 148:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Serial Peripheral Interface module.</td>
 149:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 150:/usr/lib/avr/include/avr/power.h ****   </tr>
 151:/usr/lib/avr/include/avr/power.h **** 
 152:/usr/lib/avr/include/avr/power.h ****   <tr>
 153:/usr/lib/avr/include/avr/power.h ****     <td>power_spi_disable()</td>
 154:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Serial Peripheral Interface module.</td>
 155:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 156:/usr/lib/avr/include/avr/power.h ****   </tr>
 157:/usr/lib/avr/include/avr/power.h **** 
 158:/usr/lib/avr/include/avr/power.h ****   <tr>
 159:/usr/lib/avr/include/avr/power.h ****     <td>power_timer0_enable()</td>
 160:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 0 module.</td>
 161:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 162:/usr/lib/avr/include/avr/power.h ****   </tr>
 163:/usr/lib/avr/include/avr/power.h **** 
 164:/usr/lib/avr/include/avr/power.h ****   <tr>
 165:/usr/lib/avr/include/avr/power.h ****     <td>power_timer0_disable()</td>
 166:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 0 module.</td>
 167:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 168:/usr/lib/avr/include/avr/power.h ****   </tr>
 169:/usr/lib/avr/include/avr/power.h **** 
 170:/usr/lib/avr/include/avr/power.h ****   <tr>
 171:/usr/lib/avr/include/avr/power.h ****     <td>power_timer1_enable()</td>
 172:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 1 module.</td>
 173:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 174:/usr/lib/avr/include/avr/power.h ****   </tr>
 175:/usr/lib/avr/include/avr/power.h **** 
 176:/usr/lib/avr/include/avr/power.h ****   <tr>
 177:/usr/lib/avr/include/avr/power.h ****     <td>power_timer1_disable()</td>
 178:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 1 module.</td>
 179:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 180:/usr/lib/avr/include/avr/power.h ****   </tr>
 181:/usr/lib/avr/include/avr/power.h **** 
 182:/usr/lib/avr/include/avr/power.h ****   <tr>
 183:/usr/lib/avr/include/avr/power.h ****     <td>power_timer2_enable()</td>
 184:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 2 module.</td>
 185:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 186:/usr/lib/avr/include/avr/power.h ****   </tr>
 187:/usr/lib/avr/include/avr/power.h **** 
 188:/usr/lib/avr/include/avr/power.h ****   <tr>
 189:/usr/lib/avr/include/avr/power.h ****     <td>power_timer2_disable()</td>
 190:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 2 module.</td>
 191:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 192:/usr/lib/avr/include/avr/power.h ****   </tr>
 193:/usr/lib/avr/include/avr/power.h **** 
 194:/usr/lib/avr/include/avr/power.h ****   <tr>
 195:/usr/lib/avr/include/avr/power.h ****     <td>power_timer3_enable()</td>
 196:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 3 module.</td>
 197:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 198:/usr/lib/avr/include/avr/power.h ****   </tr>
 199:/usr/lib/avr/include/avr/power.h **** 
 200:/usr/lib/avr/include/avr/power.h ****   <tr>
 201:/usr/lib/avr/include/avr/power.h ****     <td>power_timer3_disable()</td>
 202:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 3 module.</td>
GAS LISTING  			page 87


 203:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 204:/usr/lib/avr/include/avr/power.h ****   </tr>
 205:/usr/lib/avr/include/avr/power.h **** 
 206:/usr/lib/avr/include/avr/power.h ****   <tr>
 207:/usr/lib/avr/include/avr/power.h ****     <td>power_timer4_enable()</td>
 208:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 4 module.</td>
 209:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 210:/usr/lib/avr/include/avr/power.h ****   </tr>
 211:/usr/lib/avr/include/avr/power.h **** 
 212:/usr/lib/avr/include/avr/power.h ****   <tr>
 213:/usr/lib/avr/include/avr/power.h ****     <td>power_timer4_disable()</td>
 214:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 4 module.</td>
 215:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 216:/usr/lib/avr/include/avr/power.h ****   </tr>
 217:/usr/lib/avr/include/avr/power.h **** 
 218:/usr/lib/avr/include/avr/power.h ****   <tr>
 219:/usr/lib/avr/include/avr/power.h ****     <td>power_timer5_enable()</td>
 220:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Timer 5 module.</td>
 221:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 222:/usr/lib/avr/include/avr/power.h ****   </tr>
 223:/usr/lib/avr/include/avr/power.h **** 
 224:/usr/lib/avr/include/avr/power.h ****   <tr>
 225:/usr/lib/avr/include/avr/power.h ****     <td>power_timer5_disable()</td>
 226:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Timer 5 module.</td>
 227:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561</td>
 228:/usr/lib/avr/include/avr/power.h ****   </tr>
 229:/usr/lib/avr/include/avr/power.h **** 
 230:/usr/lib/avr/include/avr/power.h ****   <tr>
 231:/usr/lib/avr/include/avr/power.h ****     <td>power_twi_enable()</td>
 232:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Two Wire Interface module.</td>
 233:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 234:/usr/lib/avr/include/avr/power.h ****   </tr>
 235:/usr/lib/avr/include/avr/power.h **** 
 236:/usr/lib/avr/include/avr/power.h ****   <tr>
 237:/usr/lib/avr/include/avr/power.h ****     <td>power_twi_disable()</td>
 238:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Two Wire Interface module.</td>
 239:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 240:/usr/lib/avr/include/avr/power.h ****   </tr>
 241:/usr/lib/avr/include/avr/power.h **** 
 242:/usr/lib/avr/include/avr/power.h ****   <tr>
 243:/usr/lib/avr/include/avr/power.h ****     <td>power_usart_enable()</td>
 244:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USART module.</td>
 245:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 246:/usr/lib/avr/include/avr/power.h ****   </tr>
 247:/usr/lib/avr/include/avr/power.h **** 
 248:/usr/lib/avr/include/avr/power.h ****   <tr>
 249:/usr/lib/avr/include/avr/power.h ****     <td>power_usart_disable()</td>
 250:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USART module.</td>
 251:/usr/lib/avr/include/avr/power.h ****     <td>AT90PWM2, AT90PWM2B, AT90PWM3, AT90PWM3B</td>
 252:/usr/lib/avr/include/avr/power.h ****   </tr>
 253:/usr/lib/avr/include/avr/power.h **** 
 254:/usr/lib/avr/include/avr/power.h ****   <tr>
 255:/usr/lib/avr/include/avr/power.h ****     <td>power_usart0_enable()</td>
 256:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USART 0 module.</td>
 257:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 258:/usr/lib/avr/include/avr/power.h ****   </tr>
 259:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 88


 260:/usr/lib/avr/include/avr/power.h ****   <tr>
 261:/usr/lib/avr/include/avr/power.h ****     <td>power_usart0_disable()</td>
 262:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USART 0 module.</td>
 263:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, ATmega165, ATmega
 264:/usr/lib/avr/include/avr/power.h ****   </tr>
 265:/usr/lib/avr/include/avr/power.h **** 
 266:/usr/lib/avr/include/avr/power.h ****   <tr>
 267:/usr/lib/avr/include/avr/power.h ****     <td>power_usart1_enable()</td>
 268:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USART 1 module.</td>
 269:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 270:/usr/lib/avr/include/avr/power.h ****   </tr>
 271:/usr/lib/avr/include/avr/power.h **** 
 272:/usr/lib/avr/include/avr/power.h ****   <tr>
 273:/usr/lib/avr/include/avr/power.h ****     <td>power_usart1_disable()</td>
 274:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USART 1 module.</td>
 275:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega128RFA1, ATmega2560, ATmega2561, AT90USB646, AT90U
 276:/usr/lib/avr/include/avr/power.h ****   </tr>
 277:/usr/lib/avr/include/avr/power.h **** 
 278:/usr/lib/avr/include/avr/power.h ****   <tr>
 279:/usr/lib/avr/include/avr/power.h ****     <td>power_usart2_enable()</td>
 280:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USART 2 module.</td>
 281:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 282:/usr/lib/avr/include/avr/power.h ****   </tr>
 283:/usr/lib/avr/include/avr/power.h **** 
 284:/usr/lib/avr/include/avr/power.h ****   <tr>
 285:/usr/lib/avr/include/avr/power.h ****     <td>power_usart2_disable()</td>
 286:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USART 2 module.</td>
 287:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 288:/usr/lib/avr/include/avr/power.h ****   </tr>
 289:/usr/lib/avr/include/avr/power.h **** 
 290:/usr/lib/avr/include/avr/power.h ****   <tr>
 291:/usr/lib/avr/include/avr/power.h ****     <td>power_usart3_enable()</td>
 292:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USART 3 module.</td>
 293:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 294:/usr/lib/avr/include/avr/power.h ****   </tr>
 295:/usr/lib/avr/include/avr/power.h **** 
 296:/usr/lib/avr/include/avr/power.h ****   <tr>
 297:/usr/lib/avr/include/avr/power.h ****     <td>power_usart3_disable()</td>
 298:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USART 3 module.</td>
 299:/usr/lib/avr/include/avr/power.h ****     <td>ATmega640, ATmega1280, ATmega1281, ATmega2560, ATmega2561</td>
 300:/usr/lib/avr/include/avr/power.h ****   </tr>
 301:/usr/lib/avr/include/avr/power.h **** 
 302:/usr/lib/avr/include/avr/power.h ****   <tr>
 303:/usr/lib/avr/include/avr/power.h ****     <td>power_usb_enable()</td>
 304:/usr/lib/avr/include/avr/power.h ****     <td>Enable the USB module.</td>
 305:/usr/lib/avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 306:/usr/lib/avr/include/avr/power.h ****   </tr>
 307:/usr/lib/avr/include/avr/power.h **** 
 308:/usr/lib/avr/include/avr/power.h ****   <tr>
 309:/usr/lib/avr/include/avr/power.h ****     <td>power_usb_disable()</td>
 310:/usr/lib/avr/include/avr/power.h ****     <td>Disable the USB module.</td>
 311:/usr/lib/avr/include/avr/power.h ****     <td>AT90USB646, AT90USB647, AT90USB1286, AT90USB1287</td>
 312:/usr/lib/avr/include/avr/power.h ****   </tr>
 313:/usr/lib/avr/include/avr/power.h **** 
 314:/usr/lib/avr/include/avr/power.h ****   <tr>
 315:/usr/lib/avr/include/avr/power.h ****     <td>power_usi_enable()</td>
 316:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Universal Serial Interface module.</td>
GAS LISTING  			page 89


 317:/usr/lib/avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 318:/usr/lib/avr/include/avr/power.h ****   </tr>
 319:/usr/lib/avr/include/avr/power.h **** 
 320:/usr/lib/avr/include/avr/power.h ****   <tr>
 321:/usr/lib/avr/include/avr/power.h ****     <td>power_usi_disable()</td>
 322:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Universal Serial Interface module.</td>
 323:/usr/lib/avr/include/avr/power.h ****     <td>ATtiny24, ATtiny44, ATtiny84, ATtiny84A, ATtiny25, ATtiny45, ATtiny85, ATtiny261, ATtiny461
 324:/usr/lib/avr/include/avr/power.h ****   </tr>
 325:/usr/lib/avr/include/avr/power.h **** 
 326:/usr/lib/avr/include/avr/power.h ****   <tr>
 327:/usr/lib/avr/include/avr/power.h ****     <td>power_vadc_enable()</td>
 328:/usr/lib/avr/include/avr/power.h ****     <td>Enable the Voltage ADC module.</td>
 329:/usr/lib/avr/include/avr/power.h ****     <td>ATmega406</td>
 330:/usr/lib/avr/include/avr/power.h ****   </tr>
 331:/usr/lib/avr/include/avr/power.h **** 
 332:/usr/lib/avr/include/avr/power.h ****   <tr>
 333:/usr/lib/avr/include/avr/power.h ****     <td>power_vadc_disable()</td>
 334:/usr/lib/avr/include/avr/power.h ****     <td>Disable the Voltage ADC module.</td>
 335:/usr/lib/avr/include/avr/power.h ****     <td>ATmega406</td>
 336:/usr/lib/avr/include/avr/power.h ****   </tr>
 337:/usr/lib/avr/include/avr/power.h **** 
 338:/usr/lib/avr/include/avr/power.h ****   <tr>
 339:/usr/lib/avr/include/avr/power.h ****     <td>power_all_enable()</td>
 340:/usr/lib/avr/include/avr/power.h ****     <td>Enable all modules.</td>
 341:/usr/lib/avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 342:/usr/lib/avr/include/avr/power.h ****   </tr>
 343:/usr/lib/avr/include/avr/power.h **** 
 344:/usr/lib/avr/include/avr/power.h ****   <tr>
 345:/usr/lib/avr/include/avr/power.h ****     <td>power_all_disable()</td>
 346:/usr/lib/avr/include/avr/power.h ****     <td>Disable all modules.</td>
 347:/usr/lib/avr/include/avr/power.h ****     <td>ATxmega6A4, ATxmega32A4, ATxmega64A1, ATxmega64A1U, ATxmega64A3, ATxmegaA1, ATxmegaA1U, ATx
 348:/usr/lib/avr/include/avr/power.h ****   </tr>
 349:/usr/lib/avr/include/avr/power.h **** </table>
 350:/usr/lib/avr/include/avr/power.h **** </center>
 351:/usr/lib/avr/include/avr/power.h **** </small>
 352:/usr/lib/avr/include/avr/power.h **** 
 353:/usr/lib/avr/include/avr/power.h **** @} */
 354:/usr/lib/avr/include/avr/power.h **** 
 355:/usr/lib/avr/include/avr/power.h **** // Xmega A series has AES, EBI and DMA bits
 356:/usr/lib/avr/include/avr/power.h **** // Include any other device on need basis
 357:/usr/lib/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 358:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 359:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 360:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 361:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 362:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 363:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 364:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 365:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 366:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
 367:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 368:/usr/lib/avr/include/avr/power.h **** 
 369:/usr/lib/avr/include/avr/power.h **** #define power_aes_enable()  (PR_PRGEN &= (uint8_t)~(PR_AES_bm))
 370:/usr/lib/avr/include/avr/power.h **** #define power_aes_disable() (PR_PRGEN |= (uint8_t)PR_AES_bm)
 371:/usr/lib/avr/include/avr/power.h **** 
 372:/usr/lib/avr/include/avr/power.h **** #define power_ebi_enable()  (PR_PRGEN &= (uint8_t)~(PR_EBI_bm))
 373:/usr/lib/avr/include/avr/power.h **** #define power_ebi_disable() (PR_PRGEN |= (uint8_t)PR_EBI_bm)
GAS LISTING  			page 90


 374:/usr/lib/avr/include/avr/power.h **** 
 375:/usr/lib/avr/include/avr/power.h **** #define power_dma_enable()    (PR_PRGEN &= (uint8_t)~(PR_DMA_bm))
 376:/usr/lib/avr/include/avr/power.h **** #define power_dma_disable()   (PR_PRGEN |= (uint8_t)PR_DMA_bm)
 377:/usr/lib/avr/include/avr/power.h **** 
 378:/usr/lib/avr/include/avr/power.h **** #define power_daca_enable()     (PR_PRPA &= (uint8_t)~(PR_DAC_bm))
 379:/usr/lib/avr/include/avr/power.h **** #define power_daca_disable()    (PR_PRPA |= (uint8_t)PR_DAC_bm)
 380:/usr/lib/avr/include/avr/power.h **** #define power_dacb_enable()     (PR_PRPB &= (uint8_t)~(PR_DAC_bm))
 381:/usr/lib/avr/include/avr/power.h **** #define power_dacb_disable()    (PR_PRPB |= (uint8_t)PR_DAC_bm)
 382:/usr/lib/avr/include/avr/power.h **** 
 383:/usr/lib/avr/include/avr/power.h **** #define power_usartc1_enable()  (PR_PRPC &= (uint8_t)~(PR_USART1_bm))
 384:/usr/lib/avr/include/avr/power.h **** #define power_usartc1_disable() (PR_PRPC |= (uint8_t)PR_USART1_bm)
 385:/usr/lib/avr/include/avr/power.h **** #define power_usartd1_enable()  (PR_PRPD &= (uint8_t)~(PR_USART1_bm))
 386:/usr/lib/avr/include/avr/power.h **** #define power_usartd1_disable() (PR_PRPD |= (uint8_t)PR_USART1_bm)
 387:/usr/lib/avr/include/avr/power.h **** #define power_usarte1_enable()  (PR_PRPE &= (uint8_t)~(PR_USART1_bm))
 388:/usr/lib/avr/include/avr/power.h **** #define power_usarte1_disable() (PR_PRPE |= (uint8_t)PR_USART1_bm)
 389:/usr/lib/avr/include/avr/power.h **** #define power_usartf1_enable()  (PR_PRPF &= (uint8_t)~(PR_USART1_bm))
 390:/usr/lib/avr/include/avr/power.h **** #define power_usartf1_disable() (PR_PRPF |= (uint8_t)PR_USART1_bm)
 391:/usr/lib/avr/include/avr/power.h **** 
 392:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 393:/usr/lib/avr/include/avr/power.h **** do { \
 394:/usr/lib/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 395:/usr/lib/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 396:/usr/lib/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 397:/usr/lib/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 398:/usr/lib/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 399:/usr/lib/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 400:/usr/lib/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC
 401:/usr/lib/avr/include/avr/power.h **** } while(0)
 402:/usr/lib/avr/include/avr/power.h **** 
 403:/usr/lib/avr/include/avr/power.h **** 
 404:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 405:/usr/lib/avr/include/avr/power.h **** do { \
 406:/usr/lib/avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_AES_bm|PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 407:/usr/lib/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 408:/usr/lib/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_DAC_bm|PR_ADC_bm|PR_AC_bm); \
 409:/usr/lib/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 410:/usr/lib/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 411:/usr/lib/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 412:/usr/lib/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART1_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0
 413:/usr/lib/avr/include/avr/power.h **** } while(0)
 414:/usr/lib/avr/include/avr/power.h **** #endif
 415:/usr/lib/avr/include/avr/power.h **** 
 416:/usr/lib/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16A4__) \
 417:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega16D4__) \
 418:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega32A4__) \
 419:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 420:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1__) \
 421:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A1U__) \
 422:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64A3__) \
 423:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 424:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1__) \
 425:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A1U__) \
 426:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128A3__) \
 427:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 428:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega192A3__) \
 429:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) \
 430:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3__) \
GAS LISTING  			page 91


 431:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega256A3B__)
 432:/usr/lib/avr/include/avr/power.h **** 
 433:/usr/lib/avr/include/avr/power.h **** 
 434:/usr/lib/avr/include/avr/power.h **** #define power_rtc_enable()  (PR_PRGEN &= (uint8_t)~(PR_RTC_bm))
 435:/usr/lib/avr/include/avr/power.h **** #define power_rtc_disable() (PR_PRGEN |= (uint8_t)PR_RTC_bm)
 436:/usr/lib/avr/include/avr/power.h **** 
 437:/usr/lib/avr/include/avr/power.h **** #define power_evsys_enable()    (PR_PRGEN &= (uint8_t)~(PR_EVSYS_bm))
 438:/usr/lib/avr/include/avr/power.h **** #define power_evsys_disable()   (PR_PRGEN |= (uint8_t)PR_EVSYS_bm)
 439:/usr/lib/avr/include/avr/power.h **** 
 440:/usr/lib/avr/include/avr/power.h **** #define power_adca_enable()     (PR_PRPA &= (uint8_t)~(PR_ADC_bm))
 441:/usr/lib/avr/include/avr/power.h **** #define power_adca_disable()    (PR_PRPA |= (uint8_t)PR_ADC_bm)
 442:/usr/lib/avr/include/avr/power.h **** #define power_adcb_enable()     (PR_PRPB &= (uint8_t)~(PR_ADC_bm))
 443:/usr/lib/avr/include/avr/power.h **** #define power_adcb_disable()    (PR_PRPB |= (uint8_t)PR_ADC_bm)
 444:/usr/lib/avr/include/avr/power.h **** 
 445:/usr/lib/avr/include/avr/power.h **** #define power_aca_enable()      (PR_PRPA &= (uint8_t)~(PR_AC_bm))
 446:/usr/lib/avr/include/avr/power.h **** #define power_aca_disable()     (PR_PRPA |= (uint8_t)PR_AC_bm)
 447:/usr/lib/avr/include/avr/power.h **** #define power_acb_enable()      (PR_PRPB &= (uint8_t)~(PR_AC_bm))
 448:/usr/lib/avr/include/avr/power.h **** #define power_acb_disable()     (PR_PRPB |= (uint8_t)PR_AC_bm)
 449:/usr/lib/avr/include/avr/power.h **** 
 450:/usr/lib/avr/include/avr/power.h **** #define power_twic_enable()     (PR_PRPC &= (uint8_t)~(PR_TWI_bm))
 451:/usr/lib/avr/include/avr/power.h **** #define power_twic_disable()    (PR_PRPC |= (uint8_t)PR_TWI_bm)
 452:/usr/lib/avr/include/avr/power.h **** #define power_twid_enable()     (PR_PRPD &= (uint8_t)~(PR_TWI_bm))
 453:/usr/lib/avr/include/avr/power.h **** #define power_twid_disable()    (PR_PRPD |= (uint8_t)PR_TWI_bm)
 454:/usr/lib/avr/include/avr/power.h **** #define power_twie_enable()     (PR_PRPE &= (uint8_t)~(PR_TWI_bm))
 455:/usr/lib/avr/include/avr/power.h **** #define power_twie_disable()    (PR_PRPE |= (uint8_t)PR_TWI_bm)
 456:/usr/lib/avr/include/avr/power.h **** #define power_twif_enable()     (PR_PRPF &= (uint8_t)~(PR_TWI_bm))
 457:/usr/lib/avr/include/avr/power.h **** #define power_twif_disable()    (PR_PRPF |= (uint8_t)PR_TWI_bm)
 458:/usr/lib/avr/include/avr/power.h **** 
 459:/usr/lib/avr/include/avr/power.h **** #define power_usartc0_enable()  (PR_PRPC &= (uint8_t)~(PR_USART0_bm))
 460:/usr/lib/avr/include/avr/power.h **** #define power_usartc0_disable() (PR_PRPC |= (uint8_t)PR_USART0_bm)
 461:/usr/lib/avr/include/avr/power.h **** #define power_usartd0_enable()  (PR_PRPD &= (uint8_t)~(PR_USART0_bm))
 462:/usr/lib/avr/include/avr/power.h **** #define power_usartd0_disable() (PR_PRPD |= (uint8_t)PR_USART0_bm)
 463:/usr/lib/avr/include/avr/power.h **** #define power_usarte0_enable()  (PR_PRPE &= (uint8_t)~(PR_USART0_bm))
 464:/usr/lib/avr/include/avr/power.h **** #define power_usarte0_disable() (PR_PRPE |= (uint8_t)PR_USART0_bm)
 465:/usr/lib/avr/include/avr/power.h **** #define power_usartf0_enable()  (PR_PRPF &= (uint8_t)~(PR_USART0_bm))
 466:/usr/lib/avr/include/avr/power.h **** #define power_usartf0_disable() (PR_PRPF |= (uint8_t)PR_USART0_bm)
 467:/usr/lib/avr/include/avr/power.h **** 
 468:/usr/lib/avr/include/avr/power.h **** #define power_spic_enable()     (PR_PRPC &= (uint8_t)~(PR_SPI_bm))
 469:/usr/lib/avr/include/avr/power.h **** #define power_spic_disable()    (PR_PRPC |= (uint8_t)PR_SPI_bm)
 470:/usr/lib/avr/include/avr/power.h **** #define power_spid_enable()     (PR_PRPD &= (uint8_t)~(PR_SPI_bm))
 471:/usr/lib/avr/include/avr/power.h **** #define power_spid_disable()    (PR_PRPD |= (uint8_t)PR_SPI_bm)
 472:/usr/lib/avr/include/avr/power.h **** #define power_spie_enable()     (PR_PRPE &= (uint8_t)~(PR_SPI_bm))
 473:/usr/lib/avr/include/avr/power.h **** #define power_spie_disable()    (PR_PRPE |= (uint8_t)PR_SPI_bm)
 474:/usr/lib/avr/include/avr/power.h **** #define power_spif_enable()     (PR_PRPF &= (uint8_t)~(PR_SPI_bm))
 475:/usr/lib/avr/include/avr/power.h **** #define power_spif_disable()    (PR_PRPF |= (uint8_t)PR_SPI_bm)
 476:/usr/lib/avr/include/avr/power.h **** 
 477:/usr/lib/avr/include/avr/power.h **** #define power_hiresc_enable()   (PR_PRPC &= (uint8_t)~(PR_HIRES_bm))
 478:/usr/lib/avr/include/avr/power.h **** #define power_hiresc_disable()  (PR_PRPC |= (uint8_t)PR_HIRES_bm)
 479:/usr/lib/avr/include/avr/power.h **** #define power_hiresd_enable()   (PR_PRPD &= (uint8_t)~(PR_HIRES_bm))
 480:/usr/lib/avr/include/avr/power.h **** #define power_hiresd_disable()  (PR_PRPD |= (uint8_t)PR_HIRES_bm)
 481:/usr/lib/avr/include/avr/power.h **** #define power_hirese_enable()   (PR_PRPE &= (uint8_t)~(PR_HIRES_bm))
 482:/usr/lib/avr/include/avr/power.h **** #define power_hirese_disable()  (PR_PRPE |= (uint8_t)PR_HIRES_bm)
 483:/usr/lib/avr/include/avr/power.h **** #define power_hiresf_enable()   (PR_PRPF &= (uint8_t)~(PR_HIRES_bm))
 484:/usr/lib/avr/include/avr/power.h **** #define power_hiresf_disable()  (PR_PRPF |= (uint8_t)PR_HIRES_bm)
 485:/usr/lib/avr/include/avr/power.h **** 
 486:/usr/lib/avr/include/avr/power.h **** #define power_tc1c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC1_bm))
 487:/usr/lib/avr/include/avr/power.h **** #define power_tc1c_disable()    (PR_PRPC |= (uint8_t)PR_TC1_bm)
GAS LISTING  			page 92


 488:/usr/lib/avr/include/avr/power.h **** #define power_tc1d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC1_bm))
 489:/usr/lib/avr/include/avr/power.h **** #define power_tc1d_disable()    (PR_PRPD |= (uint8_t)PR_TC1_bm)
 490:/usr/lib/avr/include/avr/power.h **** #define power_tc1e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC1_bm))
 491:/usr/lib/avr/include/avr/power.h **** #define power_tc1e_disable()    (PR_PRPE |= (uint8_t)PR_TC1_bm)
 492:/usr/lib/avr/include/avr/power.h **** #define power_tc1f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC1_bm))
 493:/usr/lib/avr/include/avr/power.h **** #define power_tc1f_disable()    (PR_PRPF |= (uint8_t)PR_TC1_bm)
 494:/usr/lib/avr/include/avr/power.h **** 
 495:/usr/lib/avr/include/avr/power.h **** #define power_tc0c_enable()     (PR_PRPC &= (uint8_t)~(PR_TC0_bm))
 496:/usr/lib/avr/include/avr/power.h **** #define power_tc0c_disable()    (PR_PRPC |= (uint8_t)PR_TC0_bm)
 497:/usr/lib/avr/include/avr/power.h **** #define power_tc0d_enable()     (PR_PRPD &= (uint8_t)~(PR_TC0_bm))
 498:/usr/lib/avr/include/avr/power.h **** #define power_tc0d_disable()    (PR_PRPD |= (uint8_t)PR_TC0_bm)
 499:/usr/lib/avr/include/avr/power.h **** #define power_tc0e_enable()     (PR_PRPE &= (uint8_t)~(PR_TC0_bm))
 500:/usr/lib/avr/include/avr/power.h **** #define power_tc0e_disable()    (PR_PRPE |= (uint8_t)PR_TC0_bm)
 501:/usr/lib/avr/include/avr/power.h **** #define power_tc0f_enable()     (PR_PRPF &= (uint8_t)~(PR_TC0_bm))
 502:/usr/lib/avr/include/avr/power.h **** #define power_tc0f_disable()    (PR_PRPF |= (uint8_t)PR_TC0_bm)
 503:/usr/lib/avr/include/avr/power.h **** 
 504:/usr/lib/avr/include/avr/power.h **** #endif
 505:/usr/lib/avr/include/avr/power.h **** 
 506:/usr/lib/avr/include/avr/power.h **** #if defined(__AVR_ATxmega16D4__) \
 507:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega32D4__) \
 508:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega64D3__) \
 509:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega128D3__) \
 510:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATxmega192D3__) 
 511:/usr/lib/avr/include/avr/power.h **** 
 512:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 513:/usr/lib/avr/include/avr/power.h **** do { \
 514:/usr/lib/avr/include/avr/power.h ****     PR_PRGEN &= (uint8_t)~(PR_RTC_bm|PR_EVSYS_bm); \
 515:/usr/lib/avr/include/avr/power.h ****     PR_PRPA &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 516:/usr/lib/avr/include/avr/power.h ****     PR_PRPB &= (uint8_t)~(PR_ADC_bm|PR_AC_bm); \
 517:/usr/lib/avr/include/avr/power.h ****     PR_PRPC &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 518:/usr/lib/avr/include/avr/power.h ****     PR_PRPD &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 519:/usr/lib/avr/include/avr/power.h ****     PR_PRPE &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 520:/usr/lib/avr/include/avr/power.h ****     PR_PRPF &= (uint8_t)~(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 521:/usr/lib/avr/include/avr/power.h **** } while(0)
 522:/usr/lib/avr/include/avr/power.h **** 
 523:/usr/lib/avr/include/avr/power.h **** 
 524:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 525:/usr/lib/avr/include/avr/power.h **** do { \
 526:/usr/lib/avr/include/avr/power.h ****     PR_PRGEN|= (uint8_t)(PR_EBI_bm|PR_RTC_bm|PR_EVSYS_bm|PR_DMA_bm); \
 527:/usr/lib/avr/include/avr/power.h ****     PR_PRPA |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 528:/usr/lib/avr/include/avr/power.h ****     PR_PRPB |= (uint8_t)(PR_ADC_bm|PR_AC_bm); \
 529:/usr/lib/avr/include/avr/power.h ****     PR_PRPC |= (uint8_t)(PR_TWI_bm|R_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 530:/usr/lib/avr/include/avr/power.h ****     PR_PRPD |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 531:/usr/lib/avr/include/avr/power.h ****     PR_PRPE |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 532:/usr/lib/avr/include/avr/power.h ****     PR_PRPF |= (uint8_t)(PR_TWI_bm|PR_USART0_bm|PR_SPI_bm|PR_HIRES_bm|PR_TC1_bm|PR_TC0_bm); \
 533:/usr/lib/avr/include/avr/power.h **** } while(0)
 534:/usr/lib/avr/include/avr/power.h **** 
 535:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega640__) \
 536:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
 537:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
 538:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
 539:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) 
 540:/usr/lib/avr/include/avr/power.h **** 
 541:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 542:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 543:/usr/lib/avr/include/avr/power.h **** 
 544:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
GAS LISTING  			page 93


 545:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 546:/usr/lib/avr/include/avr/power.h **** 
 547:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 548:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 549:/usr/lib/avr/include/avr/power.h **** 
 550:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 551:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 552:/usr/lib/avr/include/avr/power.h **** 
 553:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 554:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 555:/usr/lib/avr/include/avr/power.h **** 
 556:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 557:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 558:/usr/lib/avr/include/avr/power.h **** 
 559:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 560:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 561:/usr/lib/avr/include/avr/power.h **** 
 562:/usr/lib/avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 563:/usr/lib/avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 564:/usr/lib/avr/include/avr/power.h **** 
 565:/usr/lib/avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 566:/usr/lib/avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 567:/usr/lib/avr/include/avr/power.h **** 
 568:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 569:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 570:/usr/lib/avr/include/avr/power.h **** 
 571:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 572:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 573:/usr/lib/avr/include/avr/power.h **** 
 574:/usr/lib/avr/include/avr/power.h **** #define power_usart2_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART2))
 575:/usr/lib/avr/include/avr/power.h **** #define power_usart2_disable()  (PRR1 |= (uint8_t)(1 << PRUSART2))
 576:/usr/lib/avr/include/avr/power.h **** 
 577:/usr/lib/avr/include/avr/power.h **** #define power_usart3_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART3))
 578:/usr/lib/avr/include/avr/power.h **** #define power_usart3_disable()  (PRR1 |= (uint8_t)(1 << PRUSART3))
 579:/usr/lib/avr/include/avr/power.h **** 
 580:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 581:/usr/lib/avr/include/avr/power.h **** do{ \
 582:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
 583:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|
 584:/usr/lib/avr/include/avr/power.h **** }while(0)
 585:/usr/lib/avr/include/avr/power.h **** 
 586:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 587:/usr/lib/avr/include/avr/power.h **** do{ \
 588:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 589:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)|(1<<PRUSART2)|(
 590:/usr/lib/avr/include/avr/power.h **** }while(0)
 591:/usr/lib/avr/include/avr/power.h **** 
 592:/usr/lib/avr/include/avr/power.h **** 
 593:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega128RFA1__)
 594:/usr/lib/avr/include/avr/power.h **** 
 595:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 596:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 597:/usr/lib/avr/include/avr/power.h **** 
 598:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 599:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 600:/usr/lib/avr/include/avr/power.h **** 
 601:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
GAS LISTING  			page 94


 602:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 603:/usr/lib/avr/include/avr/power.h **** 
 604:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 605:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 606:/usr/lib/avr/include/avr/power.h **** 
 607:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 608:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 609:/usr/lib/avr/include/avr/power.h **** 
 610:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 611:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 612:/usr/lib/avr/include/avr/power.h **** 
 613:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 614:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 615:/usr/lib/avr/include/avr/power.h **** 
 616:/usr/lib/avr/include/avr/power.h **** #define power_timer4_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM4))
 617:/usr/lib/avr/include/avr/power.h **** #define power_timer4_disable()  (PRR1 |= (uint8_t)(1 << PRTIM4))
 618:/usr/lib/avr/include/avr/power.h **** 
 619:/usr/lib/avr/include/avr/power.h **** #define power_timer5_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM5))
 620:/usr/lib/avr/include/avr/power.h **** #define power_timer5_disable()  (PRR1 |= (uint8_t)(1 << PRTIM5))
 621:/usr/lib/avr/include/avr/power.h **** 
 622:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 623:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 624:/usr/lib/avr/include/avr/power.h **** 
 625:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 626:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 627:/usr/lib/avr/include/avr/power.h **** 
 628:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 629:/usr/lib/avr/include/avr/power.h **** do{ \
 630:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
 631:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 632:/usr/lib/avr/include/avr/power.h **** }while(0)
 633:/usr/lib/avr/include/avr/power.h **** 
 634:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 635:/usr/lib/avr/include/avr/power.h **** do{ \
 636:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
 637:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRTIM4)|(1<<PRTIM5)|(1<<PRTIM5)|(1<<PRUSART1)); \
 638:/usr/lib/avr/include/avr/power.h **** }while(0)
 639:/usr/lib/avr/include/avr/power.h **** 
 640:/usr/lib/avr/include/avr/power.h **** 
 641:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90USB646__) \
 642:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
 643:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
 644:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__)
 645:/usr/lib/avr/include/avr/power.h **** 
 646:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 647:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 648:/usr/lib/avr/include/avr/power.h **** 
 649:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 650:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 651:/usr/lib/avr/include/avr/power.h **** 
 652:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 653:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 654:/usr/lib/avr/include/avr/power.h **** 
 655:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 656:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 657:/usr/lib/avr/include/avr/power.h **** 
 658:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
GAS LISTING  			page 95


 659:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 660:/usr/lib/avr/include/avr/power.h **** 
 661:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 662:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 663:/usr/lib/avr/include/avr/power.h **** 
 664:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 665:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 666:/usr/lib/avr/include/avr/power.h **** 
 667:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 668:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 669:/usr/lib/avr/include/avr/power.h **** 
 670:/usr/lib/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 671:/usr/lib/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 672:/usr/lib/avr/include/avr/power.h **** 
 673:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 674:/usr/lib/avr/include/avr/power.h **** do{ \
 675:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 676:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 677:/usr/lib/avr/include/avr/power.h **** }while(0)
 678:/usr/lib/avr/include/avr/power.h **** 
 679:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 680:/usr/lib/avr/include/avr/power.h **** do{ \
 681:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 682:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 683:/usr/lib/avr/include/avr/power.h **** }while(0)
 684:/usr/lib/avr/include/avr/power.h **** 
 685:/usr/lib/avr/include/avr/power.h **** 
 686:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U4__) \
 687:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__)
 688:/usr/lib/avr/include/avr/power.h **** 
 689:/usr/lib/avr/include/avr/power.h **** 
 690:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 691:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 692:/usr/lib/avr/include/avr/power.h **** 
 693:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 694:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 695:/usr/lib/avr/include/avr/power.h **** 
 696:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 697:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 698:/usr/lib/avr/include/avr/power.h **** 
 699:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 700:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 701:/usr/lib/avr/include/avr/power.h **** 
 702:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 703:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 704:/usr/lib/avr/include/avr/power.h **** 
 705:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 706:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 707:/usr/lib/avr/include/avr/power.h **** 
 708:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 709:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 710:/usr/lib/avr/include/avr/power.h **** 
 711:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 712:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 713:/usr/lib/avr/include/avr/power.h **** 
 714:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 715:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
GAS LISTING  			page 96


 716:/usr/lib/avr/include/avr/power.h **** 
 717:/usr/lib/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 718:/usr/lib/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 719:/usr/lib/avr/include/avr/power.h **** 
 720:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 721:/usr/lib/avr/include/avr/power.h **** do{ \
 722:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<P
 723:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 724:/usr/lib/avr/include/avr/power.h **** }while(0)
 725:/usr/lib/avr/include/avr/power.h **** 
 726:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 727:/usr/lib/avr/include/avr/power.h **** do{ \
 728:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRUSART0)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PR
 729:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 730:/usr/lib/avr/include/avr/power.h **** }while(0)
 731:/usr/lib/avr/include/avr/power.h **** 
 732:/usr/lib/avr/include/avr/power.h **** 
 733:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32U6__)
 734:/usr/lib/avr/include/avr/power.h **** 
 735:/usr/lib/avr/include/avr/power.h **** 
 736:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 737:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 738:/usr/lib/avr/include/avr/power.h **** 
 739:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 740:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 741:/usr/lib/avr/include/avr/power.h **** 
 742:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 743:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 744:/usr/lib/avr/include/avr/power.h **** 
 745:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 746:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 747:/usr/lib/avr/include/avr/power.h **** 
 748:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 749:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 750:/usr/lib/avr/include/avr/power.h **** 
 751:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 752:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 753:/usr/lib/avr/include/avr/power.h **** 
 754:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
 755:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
 756:/usr/lib/avr/include/avr/power.h **** 
 757:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
 758:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
 759:/usr/lib/avr/include/avr/power.h **** 
 760:/usr/lib/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
 761:/usr/lib/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
 762:/usr/lib/avr/include/avr/power.h **** 
 763:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
 764:/usr/lib/avr/include/avr/power.h **** do{ \
 765:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 766:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
 767:/usr/lib/avr/include/avr/power.h **** }while(0)
 768:/usr/lib/avr/include/avr/power.h **** 
 769:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
 770:/usr/lib/avr/include/avr/power.h **** do{ \
 771:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)); \
 772:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRTIM3)|(1<<PRUSART1)|(1<<PRUSB)); \
GAS LISTING  			page 97


 773:/usr/lib/avr/include/avr/power.h **** }while(0)
 774:/usr/lib/avr/include/avr/power.h **** 
 775:/usr/lib/avr/include/avr/power.h **** 
 776:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM1__)
 777:/usr/lib/avr/include/avr/power.h **** 
 778:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 779:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 780:/usr/lib/avr/include/avr/power.h **** 
 781:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 782:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 783:/usr/lib/avr/include/avr/power.h **** 
 784:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 785:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 786:/usr/lib/avr/include/avr/power.h **** 
 787:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 788:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 789:/usr/lib/avr/include/avr/power.h **** 
 790:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 0 */
 791:/usr/lib/avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
 792:/usr/lib/avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 793:/usr/lib/avr/include/avr/power.h **** 
 794:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 1 */
 795:/usr/lib/avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 796:/usr/lib/avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 797:/usr/lib/avr/include/avr/power.h **** 
 798:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 2 */
 799:/usr/lib/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 800:/usr/lib/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 801:/usr/lib/avr/include/avr/power.h **** 
 802:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
 803:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
 804:/usr/lib/avr/include/avr/power.h **** 
 805:/usr/lib/avr/include/avr/power.h **** 
 806:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM2__) \
 807:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
 808:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
 809:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
 810:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
 811:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__)
 812:/usr/lib/avr/include/avr/power.h **** 
 813:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 814:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 815:/usr/lib/avr/include/avr/power.h **** 
 816:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 817:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 818:/usr/lib/avr/include/avr/power.h **** 
 819:/usr/lib/avr/include/avr/power.h **** #define power_usart_enable()    (PRR &= (uint8_t)~(1 << PRUSART))
 820:/usr/lib/avr/include/avr/power.h **** #define power_usart_disable()   (PRR |= (uint8_t)(1 << PRUSART))
 821:/usr/lib/avr/include/avr/power.h **** 
 822:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
 823:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
 824:/usr/lib/avr/include/avr/power.h **** 
 825:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 826:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 827:/usr/lib/avr/include/avr/power.h **** 
 828:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 0 */
 829:/usr/lib/avr/include/avr/power.h **** #define power_psc0_enable()     (PRR &= (uint8_t)~(1 << PRPSC0))
GAS LISTING  			page 98


 830:/usr/lib/avr/include/avr/power.h **** #define power_psc0_disable()    (PRR |= (uint8_t)(1 << PRPSC0))
 831:/usr/lib/avr/include/avr/power.h **** 
 832:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 1 */
 833:/usr/lib/avr/include/avr/power.h **** #define power_psc1_enable()     (PRR &= (uint8_t)~(1 << PRPSC1))
 834:/usr/lib/avr/include/avr/power.h **** #define power_psc1_disable()    (PRR |= (uint8_t)(1 << PRPSC1))
 835:/usr/lib/avr/include/avr/power.h **** 
 836:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 2 */
 837:/usr/lib/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 838:/usr/lib/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 839:/usr/lib/avr/include/avr/power.h **** 
 840:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(
 841:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART)|(1<<PRTIM0)|(1
 842:/usr/lib/avr/include/avr/power.h **** 
 843:/usr/lib/avr/include/avr/power.h **** 
 844:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90PWM81__)
 845:/usr/lib/avr/include/avr/power.h **** 
 846:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 847:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 848:/usr/lib/avr/include/avr/power.h **** 
 849:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 850:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 851:/usr/lib/avr/include/avr/power.h **** 
 852:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 853:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 854:/usr/lib/avr/include/avr/power.h **** 
 855:/usr/lib/avr/include/avr/power.h **** /* Reduced Power Stage Controller */
 856:/usr/lib/avr/include/avr/power.h **** #define power_pscr_enable()     (PRR &= (uint8_t)~(1 << PRPSCR))
 857:/usr/lib/avr/include/avr/power.h **** #define power_pscr_disable()    (PRR |= (uint8_t)(1 << PRPSCR))
 858:/usr/lib/avr/include/avr/power.h **** 
 859:/usr/lib/avr/include/avr/power.h **** /* Power Stage Controller 2 */
 860:/usr/lib/avr/include/avr/power.h **** #define power_psc2_enable()     (PRR &= (uint8_t)~(1 << PRPSC2))
 861:/usr/lib/avr/include/avr/power.h **** #define power_psc2_disable()    (PRR |= (uint8_t)(1 << PRPSC2))
 862:/usr/lib/avr/include/avr/power.h **** 
 863:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1
 864:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRPSCR)|(1<
 865:/usr/lib/avr/include/avr/power.h **** 
 866:/usr/lib/avr/include/avr/power.h **** 
 867:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega165__) \
 868:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
 869:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
 870:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
 871:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
 872:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
 873:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
 874:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
 875:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
 876:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
 877:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
 878:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
 879:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__)
 880:/usr/lib/avr/include/avr/power.h **** 
 881:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 882:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 883:/usr/lib/avr/include/avr/power.h **** 
 884:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 885:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 886:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 99


 887:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 888:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 889:/usr/lib/avr/include/avr/power.h **** 
 890:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 891:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 892:/usr/lib/avr/include/avr/power.h **** 
 893:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1))
 894:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)))
 895:/usr/lib/avr/include/avr/power.h **** 
 896:/usr/lib/avr/include/avr/power.h **** 
 897:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega169__) \
 898:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
 899:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
 900:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
 901:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
 902:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
 903:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
 904:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
 905:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
 906:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
 907:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3290P__) \
 908:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
 909:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
 910:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
 911:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
 912:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
 913:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__)
 914:/usr/lib/avr/include/avr/power.h **** 
 915:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
 916:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
 917:/usr/lib/avr/include/avr/power.h **** 
 918:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
 919:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
 920:/usr/lib/avr/include/avr/power.h **** 
 921:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
 922:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
 923:/usr/lib/avr/include/avr/power.h **** 
 924:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
 925:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
 926:/usr/lib/avr/include/avr/power.h **** 
 927:/usr/lib/avr/include/avr/power.h **** #define power_lcd_enable()      (PRR &= (uint8_t)~(1 << PRLCD))
 928:/usr/lib/avr/include/avr/power.h **** #define power_lcd_disable()     (PRR |= (uint8_t)(1 << PRLCD))
 929:/usr/lib/avr/include/avr/power.h **** 
 930:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|
 931:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM1)|(
 932:/usr/lib/avr/include/avr/power.h **** 
 933:/usr/lib/avr/include/avr/power.h **** 
 934:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega164A__) \
 935:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
 936:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
 937:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
 938:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega324PA__) \
 939:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
 940:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
 941:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__)
 942:/usr/lib/avr/include/avr/power.h **** 
 943:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
GAS LISTING  			page 100


 944:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 945:/usr/lib/avr/include/avr/power.h **** 
 946:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 947:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 948:/usr/lib/avr/include/avr/power.h **** 
 949:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 950:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 951:/usr/lib/avr/include/avr/power.h **** 
 952:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
 953:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
 954:/usr/lib/avr/include/avr/power.h **** 
 955:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 956:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 957:/usr/lib/avr/include/avr/power.h **** 
 958:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 959:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 960:/usr/lib/avr/include/avr/power.h **** 
 961:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 962:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 963:/usr/lib/avr/include/avr/power.h **** 
 964:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 965:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 966:/usr/lib/avr/include/avr/power.h **** 
 967:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART
 968:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRUSART1
 969:/usr/lib/avr/include/avr/power.h **** 
 970:/usr/lib/avr/include/avr/power.h **** 
 971:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega644__)
 972:/usr/lib/avr/include/avr/power.h **** 
 973:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
 974:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
 975:/usr/lib/avr/include/avr/power.h **** 
 976:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
 977:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
 978:/usr/lib/avr/include/avr/power.h **** 
 979:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
 980:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
 981:/usr/lib/avr/include/avr/power.h **** 
 982:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
 983:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
 984:/usr/lib/avr/include/avr/power.h **** 
 985:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
 986:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
 987:/usr/lib/avr/include/avr/power.h **** 
 988:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
 989:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
 990:/usr/lib/avr/include/avr/power.h **** 
 991:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
 992:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
 993:/usr/lib/avr/include/avr/power.h **** 
 994:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)
 995:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
 996:/usr/lib/avr/include/avr/power.h **** 
 997:/usr/lib/avr/include/avr/power.h **** 
 998:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega406__)
 999:/usr/lib/avr/include/avr/power.h **** 
1000:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
GAS LISTING  			page 101


1001:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1002:/usr/lib/avr/include/avr/power.h **** 
1003:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1004:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1005:/usr/lib/avr/include/avr/power.h **** 
1006:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1007:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1008:/usr/lib/avr/include/avr/power.h **** 
1009:/usr/lib/avr/include/avr/power.h **** /* Voltage ADC */
1010:/usr/lib/avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1011:/usr/lib/avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1012:/usr/lib/avr/include/avr/power.h **** 
1013:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC))
1014:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)))
1015:/usr/lib/avr/include/avr/power.h **** 
1016:/usr/lib/avr/include/avr/power.h **** 
1017:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega48__) \
1018:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega48A__) \
1019:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1020:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1021:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88A__) \
1022:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1023:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88PA__) \
1024:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1025:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega168A__) \
1026:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1027:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1028:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1029:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1030:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny88__)
1031:/usr/lib/avr/include/avr/power.h **** 
1032:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1033:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1034:/usr/lib/avr/include/avr/power.h **** 
1035:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1036:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1037:/usr/lib/avr/include/avr/power.h **** 
1038:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR &= (uint8_t)~(1 << PRUSART0))
1039:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR |= (uint8_t)(1 << PRUSART0))
1040:/usr/lib/avr/include/avr/power.h **** 
1041:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1042:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1043:/usr/lib/avr/include/avr/power.h **** 
1044:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1045:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1046:/usr/lib/avr/include/avr/power.h **** 
1047:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR &= (uint8_t)~(1 << PRTIM2))
1048:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR |= (uint8_t)(1 << PRTIM2))
1049:/usr/lib/avr/include/avr/power.h **** 
1050:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR &= (uint8_t)~(1 << PRTWI))
1051:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR |= (uint8_t)(1 << PRTWI))
1052:/usr/lib/avr/include/avr/power.h **** 
1053:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|
1054:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRUSART0)|(1<<PRTIM0)|(
1055:/usr/lib/avr/include/avr/power.h **** 
1056:/usr/lib/avr/include/avr/power.h **** 
1057:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny24__) \
GAS LISTING  			page 102


1058:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny24A__) \
1059:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny44__) \
1060:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny44A__) \
1061:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny84__) \
1062:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny84A__) \
1063:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny25__) \
1064:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny45__) \
1065:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny85__) \
1066:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny261__) \
1067:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny261A__) \
1068:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny461__) \
1069:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny461A__) \
1070:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny861__) \
1071:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny861A__) \
1072:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny43U__)
1073:/usr/lib/avr/include/avr/power.h **** 
1074:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1075:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1076:/usr/lib/avr/include/avr/power.h **** 
1077:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1078:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1079:/usr/lib/avr/include/avr/power.h **** 
1080:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1081:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1082:/usr/lib/avr/include/avr/power.h **** 
1083:/usr/lib/avr/include/avr/power.h **** /* Universal Serial Interface */
1084:/usr/lib/avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1085:/usr/lib/avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1086:/usr/lib/avr/include/avr/power.h **** 
1087:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1088:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRUSI)))
1089:/usr/lib/avr/include/avr/power.h **** 
1090:/usr/lib/avr/include/avr/power.h **** 
1091:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega1284P__)
1092:/usr/lib/avr/include/avr/power.h **** 
1093:/usr/lib/avr/include/avr/power.h **** 
1094:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR0 &= (uint8_t)~(1 << PRADC))
1095:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR0 |= (uint8_t)(1 << PRADC))
1096:/usr/lib/avr/include/avr/power.h **** 
1097:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1098:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1099:/usr/lib/avr/include/avr/power.h **** 
1100:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1101:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1102:/usr/lib/avr/include/avr/power.h **** 
1103:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1104:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1105:/usr/lib/avr/include/avr/power.h **** 
1106:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1107:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1108:/usr/lib/avr/include/avr/power.h **** 
1109:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1110:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1111:/usr/lib/avr/include/avr/power.h **** 
1112:/usr/lib/avr/include/avr/power.h **** #define power_timer3_enable()   (PRR1 &= (uint8_t)~(1 << PRTIM3))
1113:/usr/lib/avr/include/avr/power.h **** #define power_timer3_disable()  (PRR1 |= (uint8_t)(1 << PRTIM3))
1114:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 103


1115:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1116:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1117:/usr/lib/avr/include/avr/power.h **** 
1118:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART1))
1119:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR0 |= (uint8_t)(1 << PRUSART1))
1120:/usr/lib/avr/include/avr/power.h **** 
1121:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
1122:/usr/lib/avr/include/avr/power.h **** do{ \
1123:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRU
1124:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~(1<<PRTIM3); \
1125:/usr/lib/avr/include/avr/power.h **** }while(0)
1126:/usr/lib/avr/include/avr/power.h **** 
1127:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
1128:/usr/lib/avr/include/avr/power.h **** do{ \
1129:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRADC)|(1<<PRSPI)|(1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRTIM2)|(1<<PRUS
1130:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)(1<<PRTIM3); \
1131:/usr/lib/avr/include/avr/power.h **** }while(0)
1132:/usr/lib/avr/include/avr/power.h **** 
1133:/usr/lib/avr/include/avr/power.h **** 
1134:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega32HVB__) \
1135:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1136:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1137:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__)
1138:/usr/lib/avr/include/avr/power.h **** 
1139:/usr/lib/avr/include/avr/power.h **** 
1140:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1141:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1142:/usr/lib/avr/include/avr/power.h **** 
1143:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1144:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1145:/usr/lib/avr/include/avr/power.h **** 
1146:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1147:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1148:/usr/lib/avr/include/avr/power.h **** 
1149:/usr/lib/avr/include/avr/power.h **** /* Voltage ADC */
1150:/usr/lib/avr/include/avr/power.h **** #define power_vadc_enable()     (PRR0 &= (uint8_t)~(1 << PRVADC))
1151:/usr/lib/avr/include/avr/power.h **** #define power_vadc_disable()    (PRR0 |= (uint8_t)(1 << PRVADC))
1152:/usr/lib/avr/include/avr/power.h **** 
1153:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1154:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1155:/usr/lib/avr/include/avr/power.h **** 
1156:/usr/lib/avr/include/avr/power.h **** #define power_vrm_enable()      (PRR0 &= (uint8_t)~(1 << PRVRM))
1157:/usr/lib/avr/include/avr/power.h **** #define power_vrm_disable()     (PRR0 |= (uint8_t)(1 << PRVRM))
1158:/usr/lib/avr/include/avr/power.h **** 
1159:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR0 &= (uint8_t)~((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|
1160:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR0 |= (uint8_t)((1<<PRTWI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRVADC)|(
1161:/usr/lib/avr/include/avr/power.h **** 
1162:/usr/lib/avr/include/avr/power.h **** 
1163:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATmega16M1__) \
1164:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1165:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1166:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega64C1__) \
1167:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega64M1__)
1168:/usr/lib/avr/include/avr/power.h **** 
1169:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1170:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1171:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 104


1172:/usr/lib/avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1173:/usr/lib/avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1174:/usr/lib/avr/include/avr/power.h **** 
1175:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1176:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1177:/usr/lib/avr/include/avr/power.h **** 
1178:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1179:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1180:/usr/lib/avr/include/avr/power.h **** 
1181:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1182:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1183:/usr/lib/avr/include/avr/power.h **** 
1184:/usr/lib/avr/include/avr/power.h **** #define power_psc_enable()      (PRR &= (uint8_t)~(1 << PRPSC))
1185:/usr/lib/avr/include/avr/power.h **** #define power_psc_disable()     (PRR |= (uint8_t)(1 << PRPSC))
1186:/usr/lib/avr/include/avr/power.h **** 
1187:/usr/lib/avr/include/avr/power.h **** #define power_can_enable()      (PRR &= (uint8_t)~(1 << PRCAN))
1188:/usr/lib/avr/include/avr/power.h **** #define power_can_disable()     (PRR |= (uint8_t)(1 << PRCAN))
1189:/usr/lib/avr/include/avr/power.h **** 
1190:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<
1191:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRLIN)|(1<<PRSPI)|(1<<PRTIM0)|(1<<
1192:/usr/lib/avr/include/avr/power.h **** 
1193:/usr/lib/avr/include/avr/power.h **** 
1194:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny167__) \
1195:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny87__)
1196:/usr/lib/avr/include/avr/power.h **** 
1197:/usr/lib/avr/include/avr/power.h **** 
1198:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()      (PRR &= (uint8_t)~(1 << PRADC))
1199:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()     (PRR |= (uint8_t)(1 << PRADC))
1200:/usr/lib/avr/include/avr/power.h **** 
1201:/usr/lib/avr/include/avr/power.h **** #define power_usi_enable()      (PRR &= (uint8_t)~(1 << PRUSI))
1202:/usr/lib/avr/include/avr/power.h **** #define power_usi_disable()     (PRR |= (uint8_t)(1 << PRUSI))
1203:/usr/lib/avr/include/avr/power.h **** 
1204:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1205:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1206:/usr/lib/avr/include/avr/power.h **** 
1207:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1208:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1209:/usr/lib/avr/include/avr/power.h **** 
1210:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR &= (uint8_t)~(1 << PRSPI))
1211:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR |= (uint8_t)(1 << PRSPI))
1212:/usr/lib/avr/include/avr/power.h **** 
1213:/usr/lib/avr/include/avr/power.h **** #define power_lin_enable()      (PRR &= (uint8_t)~(1 << PRLIN))
1214:/usr/lib/avr/include/avr/power.h **** #define power_lin_disable()     (PRR |= (uint8_t)(1 << PRLIN))
1215:/usr/lib/avr/include/avr/power.h **** 
1216:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1
1217:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRUSI)|(1<<PRTIM0)|(1<<PRTIM1)|(1<
1218:/usr/lib/avr/include/avr/power.h **** 
1219:/usr/lib/avr/include/avr/power.h **** 
1220:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90USB82__) \
1221:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1222:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
1223:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
1224:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__)
1225:/usr/lib/avr/include/avr/power.h **** 
1226:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1227:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1228:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 105


1229:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1230:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1231:/usr/lib/avr/include/avr/power.h **** 
1232:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1233:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1234:/usr/lib/avr/include/avr/power.h **** 
1235:/usr/lib/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1236:/usr/lib/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1237:/usr/lib/avr/include/avr/power.h **** 
1238:/usr/lib/avr/include/avr/power.h **** #define power_usart1_enable()   (PRR1 &= (uint8_t)~(1 << PRUSART1))
1239:/usr/lib/avr/include/avr/power.h **** #define power_usart1_disable()  (PRR1 |= (uint8_t)(1 << PRUSART1))
1240:/usr/lib/avr/include/avr/power.h **** 
1241:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
1242:/usr/lib/avr/include/avr/power.h **** do{ \
1243:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1244:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSB)|(1<<PRUSART1)); \
1245:/usr/lib/avr/include/avr/power.h **** }while(0)
1246:/usr/lib/avr/include/avr/power.h **** 
1247:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
1248:/usr/lib/avr/include/avr/power.h **** do{ \
1249:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRSPI)|(1<<PRTIM0)|(1<<PRTIM1)); \
1250:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSB)|(1<<PRUSART1)); \
1251:/usr/lib/avr/include/avr/power.h **** }while(0)
1252:/usr/lib/avr/include/avr/power.h **** 
1253:/usr/lib/avr/include/avr/power.h **** 
1254:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_AT90SCR100__)
1255:/usr/lib/avr/include/avr/power.h **** 
1256:/usr/lib/avr/include/avr/power.h **** #define power_usart0_enable()   (PRR0 &= (uint8_t)~(1 << PRUSART0))
1257:/usr/lib/avr/include/avr/power.h **** #define power_usart0_disable()  (PRR0 |= (uint8_t)(1 << PRUSART0))
1258:/usr/lib/avr/include/avr/power.h **** 
1259:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()      (PRR0 &= (uint8_t)~(1 << PRSPI))
1260:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()     (PRR0 |= (uint8_t)(1 << PRSPI))
1261:/usr/lib/avr/include/avr/power.h **** 
1262:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM1))
1263:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR0 |= (uint8_t)(1 << PRTIM1))
1264:/usr/lib/avr/include/avr/power.h **** 
1265:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM0))
1266:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR0 |= (uint8_t)(1 << PRTIM0))
1267:/usr/lib/avr/include/avr/power.h **** 
1268:/usr/lib/avr/include/avr/power.h **** #define power_timer2_enable()   (PRR0 &= (uint8_t)~(1 << PRTIM2))
1269:/usr/lib/avr/include/avr/power.h **** #define power_timer2_disable()  (PRR0 |= (uint8_t)(1 << PRTIM2))
1270:/usr/lib/avr/include/avr/power.h **** 
1271:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()      (PRR0 &= (uint8_t)~(1 << PRTWI))
1272:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()     (PRR0 |= (uint8_t)(1 << PRTWI))
1273:/usr/lib/avr/include/avr/power.h **** 
1274:/usr/lib/avr/include/avr/power.h **** #define power_usbh_enable()     (PRR1 &= (uint8_t)~(1 << PRUSBH))
1275:/usr/lib/avr/include/avr/power.h **** #define power_usbh_disable()    (PRR1 |= (uint8_t)(1 << PRUSBH))
1276:/usr/lib/avr/include/avr/power.h **** 
1277:/usr/lib/avr/include/avr/power.h **** #define power_usb_enable()      (PRR1 &= (uint8_t)~(1 << PRUSB))
1278:/usr/lib/avr/include/avr/power.h **** #define power_usb_disable()     (PRR1 |= (uint8_t)(1 << PRUSB))
1279:/usr/lib/avr/include/avr/power.h **** 
1280:/usr/lib/avr/include/avr/power.h **** #define power_hsspi_enable()    (PRR1 &= (uint8_t)~(1 << PRHSSPI))
1281:/usr/lib/avr/include/avr/power.h **** #define power_hsspi_disable()   (PRR1 |= (uint8_t)(1 << PRHSSPI))
1282:/usr/lib/avr/include/avr/power.h **** 
1283:/usr/lib/avr/include/avr/power.h **** #define power_sci_enable()      (PRR1 &= (uint8_t)~(1 << PRSCI))
1284:/usr/lib/avr/include/avr/power.h **** #define power_sci_disable()     (PRR1 |= (uint8_t)(1 << PRSCI))
1285:/usr/lib/avr/include/avr/power.h **** 
GAS LISTING  			page 106


1286:/usr/lib/avr/include/avr/power.h **** #define power_aes_enable()      (PRR1 &= (uint8_t)~(1 << PRAES))
1287:/usr/lib/avr/include/avr/power.h **** #define power_aes_disable()     (PRR1 |= (uint8_t)(1 << PRAES))
1288:/usr/lib/avr/include/avr/power.h **** 
1289:/usr/lib/avr/include/avr/power.h **** #define power_kb_enable()       (PRR1 &= (uint8_t)~(1 << PRKB))
1290:/usr/lib/avr/include/avr/power.h **** #define power_kb_disable()      (PRR1 |= (uint8_t)(1 << PRKB))
1291:/usr/lib/avr/include/avr/power.h **** 
1292:/usr/lib/avr/include/avr/power.h **** #define power_all_enable() \
1293:/usr/lib/avr/include/avr/power.h **** do{ \
1294:/usr/lib/avr/include/avr/power.h ****     PRR0 &= (uint8_t)~((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1295:/usr/lib/avr/include/avr/power.h ****     PRR1 &= (uint8_t)~((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1296:/usr/lib/avr/include/avr/power.h **** }while(0)
1297:/usr/lib/avr/include/avr/power.h **** 
1298:/usr/lib/avr/include/avr/power.h **** #define power_all_disable() \
1299:/usr/lib/avr/include/avr/power.h **** do{ \
1300:/usr/lib/avr/include/avr/power.h ****     PRR0 |= (uint8_t)((1<<PRUSART0)|(1<<PRSPI)|(1<<PRTIM1)|(1<<PRTIM0)|(1<<PRTIM2)|(1<<PRTWI)); \
1301:/usr/lib/avr/include/avr/power.h ****     PRR1 |= (uint8_t)((1<<PRUSBH)|(1<<PRUSB)|(1<<PRHSSPI)|(1<<PRSCI)|(1<<PRAES)|(1<<PRKB)); \
1302:/usr/lib/avr/include/avr/power.h **** }while(0)
1303:/usr/lib/avr/include/avr/power.h **** 
1304:/usr/lib/avr/include/avr/power.h **** 
1305:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny4__) \
1306:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny5__) \
1307:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny9__) \
1308:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny10__) \
1309:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny13A__) \
1310:/usr/lib/avr/include/avr/power.h **** 
1311:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1312:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1313:/usr/lib/avr/include/avr/power.h **** 
1314:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1315:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1316:/usr/lib/avr/include/avr/power.h **** 
1317:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)))
1318:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)))
1319:/usr/lib/avr/include/avr/power.h **** 
1320:/usr/lib/avr/include/avr/power.h **** 
1321:/usr/lib/avr/include/avr/power.h **** #elif defined(__AVR_ATtiny20__) \
1322:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny40__)
1323:/usr/lib/avr/include/avr/power.h **** 
1324:/usr/lib/avr/include/avr/power.h **** #define power_adc_enable()   (PRR &= (uint8_t)~(1 << PRADC))
1325:/usr/lib/avr/include/avr/power.h **** #define power_adc_disable()  (PRR |= (uint8_t)(1 << PRADC))
1326:/usr/lib/avr/include/avr/power.h **** 
1327:/usr/lib/avr/include/avr/power.h **** #define power_timer0_enable()   (PRR &= (uint8_t)~(1 << PRTIM0))
1328:/usr/lib/avr/include/avr/power.h **** #define power_timer0_disable()  (PRR |= (uint8_t)(1 << PRTIM0))
1329:/usr/lib/avr/include/avr/power.h **** 
1330:/usr/lib/avr/include/avr/power.h **** #define power_timer1_enable()   (PRR &= (uint8_t)~(1 << PRTIM1))
1331:/usr/lib/avr/include/avr/power.h **** #define power_timer1_disable()  (PRR |= (uint8_t)(1 << PRTIM1))
1332:/usr/lib/avr/include/avr/power.h **** 
1333:/usr/lib/avr/include/avr/power.h **** #define power_spi_enable()   (PRR &= (uint8_t)~(1 << PRSPI))
1334:/usr/lib/avr/include/avr/power.h **** #define power_spi_disable()  (PRR |= (uint8_t)(1 << PRSPI))
1335:/usr/lib/avr/include/avr/power.h **** 
1336:/usr/lib/avr/include/avr/power.h **** #define power_twi_enable()   (PRR &= (uint8_t)~(1 << PRTWI))
1337:/usr/lib/avr/include/avr/power.h **** #define power_twi_disable()  (PRR |= (uint8_t)(1 << PRTWI))
1338:/usr/lib/avr/include/avr/power.h **** 
1339:/usr/lib/avr/include/avr/power.h **** #define power_all_enable()      (PRR &= (uint8_t)~((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1
1340:/usr/lib/avr/include/avr/power.h **** #define power_all_disable()     (PRR |= (uint8_t)((1<<PRADC)|(1<<PRTIM0)|(1<<PRTIM1)|(1<<PRSPI)|(1<
1341:/usr/lib/avr/include/avr/power.h **** 
1342:/usr/lib/avr/include/avr/power.h **** #endif
GAS LISTING  			page 107


1343:/usr/lib/avr/include/avr/power.h **** 
1344:/usr/lib/avr/include/avr/power.h **** 
1345:/usr/lib/avr/include/avr/power.h **** #if defined(__AVR_AT90CAN32__) \
1346:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90CAN64__) \
1347:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90CAN128__) \
1348:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM1__) \
1349:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2__) \
1350:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM2B__) \
1351:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3__) \
1352:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM3B__) \
1353:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM216__) \
1354:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90PWM316__) \
1355:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90SCR100__) \
1356:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB646__) \
1357:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB647__) \
1358:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB82__) \
1359:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB1286__) \
1360:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB1287__) \
1361:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_AT90USB162__) \
1362:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega1280__) \
1363:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega1281__) \
1364:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega128RFA1__) \
1365:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega1284P__) \
1366:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega162__) \
1367:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega164A__) \
1368:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega164P__) \
1369:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega165__) \
1370:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega165A__) \
1371:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega165P__) \
1372:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega168__) \
1373:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega168P__) \
1374:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169__) \
1375:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169A__) \
1376:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169P__) \
1377:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega169PA__) \
1378:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16U4__) \
1379:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega2560__) \
1380:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega2561__) \
1381:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega324A__) \
1382:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega324P__) \
1383:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega325__) \
1384:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega325A__) \
1385:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3250__) \
1386:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3250A__) \
1387:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega328__) \
1388:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega328P__) \
1389:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329__) \
1390:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329A__) \
1391:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329P__) \
1392:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega329PA__) \
1393:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3290__) \
1394:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega3290A__) \
1395:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32C1__) \
1396:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVB__) \
1397:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32HVBREVB__) \
1398:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVB__) \
1399:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16HVBREVB__) \
GAS LISTING  			page 108


1400:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32M1__) \
1401:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
1402:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32U4__) \
1403:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32U6__) \
1404:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega48__) \
1405:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega48P__) \
1406:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega640__) \
1407:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649P__) \
1408:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644__) \
1409:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644A__) \
1410:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644P__) \
1411:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega644PA__) \
1412:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645__) \
1413:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645A__) \
1414:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega645P__) \
1415:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450__) \
1416:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450A__) \
1417:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6450P__) \
1418:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649__) \
1419:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega649A__) \
1420:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490__) \
1421:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490A__) \
1422:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega6490P__) \
1423:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88__) \
1424:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega88P__) \
1425:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega8U2__) \
1426:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega16U2__) \
1427:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATmega32U2__) \
1428:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny48__) \
1429:/usr/lib/avr/include/avr/power.h **** || defined(__AVR_ATtiny167__) \
1430:/usr/lib/avr/include/avr/power.h **** || defined(__DOXYGEN__)
1431:/usr/lib/avr/include/avr/power.h **** 
1432:/usr/lib/avr/include/avr/power.h **** 
1433:/usr/lib/avr/include/avr/power.h **** /** \addtogroup avr_power
1434:/usr/lib/avr/include/avr/power.h **** 
1435:/usr/lib/avr/include/avr/power.h **** Some of the newer AVRs contain a System Clock Prescale Register (CLKPR) that
1436:/usr/lib/avr/include/avr/power.h **** allows you to decrease the system clock frequency and the power consumption
1437:/usr/lib/avr/include/avr/power.h **** when the need for processing power is low. Below are two macros and an
1438:/usr/lib/avr/include/avr/power.h **** enumerated type that can be used to interface to the Clock Prescale Register.
1439:/usr/lib/avr/include/avr/power.h **** 
1440:/usr/lib/avr/include/avr/power.h **** \note Not all AVR devices have a Clock Prescale Register. On those devices
1441:/usr/lib/avr/include/avr/power.h **** without a Clock Prescale Register, these macros are not available.
1442:/usr/lib/avr/include/avr/power.h **** */
1443:/usr/lib/avr/include/avr/power.h **** 
1444:/usr/lib/avr/include/avr/power.h **** 
1445:/usr/lib/avr/include/avr/power.h **** /** \addtogroup avr_power
1446:/usr/lib/avr/include/avr/power.h **** \code 
1447:/usr/lib/avr/include/avr/power.h **** typedef enum
1448:/usr/lib/avr/include/avr/power.h **** {
1449:/usr/lib/avr/include/avr/power.h ****     clock_div_1 = 0,
1450:/usr/lib/avr/include/avr/power.h ****     clock_div_2 = 1,
1451:/usr/lib/avr/include/avr/power.h ****     clock_div_4 = 2,
1452:/usr/lib/avr/include/avr/power.h ****     clock_div_8 = 3,
1453:/usr/lib/avr/include/avr/power.h ****     clock_div_16 = 4,
1454:/usr/lib/avr/include/avr/power.h ****     clock_div_32 = 5,
1455:/usr/lib/avr/include/avr/power.h ****     clock_div_64 = 6,
1456:/usr/lib/avr/include/avr/power.h ****     clock_div_128 = 7,
GAS LISTING  			page 109


1457:/usr/lib/avr/include/avr/power.h ****     clock_div_256 = 8,
1458:/usr/lib/avr/include/avr/power.h ****     clock_div_1_rc = 15, // ATmega128RFA1 only
1459:/usr/lib/avr/include/avr/power.h **** } clock_div_t;
1460:/usr/lib/avr/include/avr/power.h **** \endcode
1461:/usr/lib/avr/include/avr/power.h **** Clock prescaler setting enumerations.
1462:/usr/lib/avr/include/avr/power.h **** 
1463:/usr/lib/avr/include/avr/power.h **** */
1464:/usr/lib/avr/include/avr/power.h **** typedef enum
1465:/usr/lib/avr/include/avr/power.h **** {
1466:/usr/lib/avr/include/avr/power.h ****     clock_div_1 = 0,
1467:/usr/lib/avr/include/avr/power.h ****     clock_div_2 = 1,
1468:/usr/lib/avr/include/avr/power.h ****     clock_div_4 = 2,
1469:/usr/lib/avr/include/avr/power.h ****     clock_div_8 = 3,
1470:/usr/lib/avr/include/avr/power.h ****     clock_div_16 = 4,
1471:/usr/lib/avr/include/avr/power.h ****     clock_div_32 = 5,
1472:/usr/lib/avr/include/avr/power.h ****     clock_div_64 = 6,
1473:/usr/lib/avr/include/avr/power.h ****     clock_div_128 = 7,
1474:/usr/lib/avr/include/avr/power.h ****     clock_div_256 = 8
1475:/usr/lib/avr/include/avr/power.h **** #if defined(__AVR_ATmega128RFA1__)
1476:/usr/lib/avr/include/avr/power.h ****     , clock_div_1_rc = 15
1477:/usr/lib/avr/include/avr/power.h **** #endif
1478:/usr/lib/avr/include/avr/power.h **** } clock_div_t;
1479:/usr/lib/avr/include/avr/power.h **** 
1480:/usr/lib/avr/include/avr/power.h **** 
1481:/usr/lib/avr/include/avr/power.h **** static __inline__ void clock_prescale_set(clock_div_t) __attribute__((__always_inline__));
1482:/usr/lib/avr/include/avr/power.h **** 
1483:/usr/lib/avr/include/avr/power.h **** /** \addtogroup avr_power
1484:/usr/lib/avr/include/avr/power.h **** \code clock_prescale_set(x) \endcode
1485:/usr/lib/avr/include/avr/power.h **** 
1486:/usr/lib/avr/include/avr/power.h **** Set the clock prescaler register select bits, selecting a system clock
1487:/usr/lib/avr/include/avr/power.h **** division setting. This function is inlined, even if compiler
1488:/usr/lib/avr/include/avr/power.h **** optimizations are disabled.
1489:/usr/lib/avr/include/avr/power.h **** 
1490:/usr/lib/avr/include/avr/power.h **** The type of x is clock_div_t.
1491:/usr/lib/avr/include/avr/power.h **** */
1492:/usr/lib/avr/include/avr/power.h **** void clock_prescale_set(clock_div_t __x)
1493:/usr/lib/avr/include/avr/power.h **** {
1494:/usr/lib/avr/include/avr/power.h ****     uint8_t __tmp = _BV(CLKPCE);
1495:/usr/lib/avr/include/avr/power.h ****     __asm__ __volatile__ (
 2089               	 .loc 3 1495 0
 2090 0204 80E0      	 ldi r24,0
 2091 0206 90E0      	 ldi r25,0
 2092 0208 20E8      	 ldi r18,lo8(-128)
 2093               	 
 2094               	 
 2095 020a 0FB6      	 in __tmp_reg__,__SREG__
 2096 020c F894      	 cli
 2097 020e 2093 6100 	 sts 97,r18
 2098 0212 8093 6100 	 sts 97,r24
 2099 0216 0FBE      	 out __SREG__,__tmp_reg__
 2100               	 
 2101               	 
 2102               	.LBE70:
 2103               	.LBE69:
 323:RNDISEthernet.c **** 
 324:RNDISEthernet.c **** 	/* Disable clock division */
 325:RNDISEthernet.c **** 	clock_prescale_set(clock_div_1);
GAS LISTING  			page 110


 326:RNDISEthernet.c **** 
 327:RNDISEthernet.c **** 	/* Hardware Initialization */
 328:RNDISEthernet.c **** 
 329:RNDISEthernet.c **** 	USB_Init();
 2104               	 .loc 1 329 0
 2105 0218 0E94 0000 	 call USB_Init
 2106               	.LVL44:
 330:RNDISEthernet.c **** 	Serial_CreateStream(NULL);
 2107               	 .loc 1 330 0
 2108 021c 80E0      	 ldi r24,0
 2109 021e 90E0      	 ldi r25,0
 2110 0220 0C94 0000 	 jmp Serial_CreateStream
 2111               	.LVL45:
 2112               	 .cfi_endproc
 2113               	.LFE130:
 2115               	.global EVENT_USB_Device_Connect
 2117               	EVENT_USB_Device_Connect:
 2118               	.LFB131:
 331:RNDISEthernet.c **** }
 332:RNDISEthernet.c **** 
 333:RNDISEthernet.c **** /** Event handler for the USB_Connect event. This indicates that the device is enumerating via the 
 334:RNDISEthernet.c ****  *  starts the library USB task to begin the enumeration and USB management process.
 335:RNDISEthernet.c ****  */
 336:RNDISEthernet.c **** void EVENT_USB_Device_Connect(void)
 337:RNDISEthernet.c **** {
 2119               	 .loc 1 337 0
 2120               	 .cfi_startproc
 2121               	 
 2122               	 
 2123               	 
 2124               	.L__stack_usage =0
 2125 0224 0895      	 ret
 2126               	 .cfi_endproc
 2127               	.LFE131:
 2129               	.global EVENT_USB_Device_Disconnect
 2131               	EVENT_USB_Device_Disconnect:
 2132               	.LFB132:
 338:RNDISEthernet.c **** 	/* Indicate USB enumerating */
 339:RNDISEthernet.c **** //	LEDs_SetAllLEDs(LEDMASK_USB_ENUMERATING);
 340:RNDISEthernet.c **** }
 341:RNDISEthernet.c **** 
 342:RNDISEthernet.c **** /** Event handler for the USB_Disconnect event. This indicates that the device is no longer connect
 343:RNDISEthernet.c ****  *  the status LEDs and stops all the relevant tasks.
 344:RNDISEthernet.c ****  */
 345:RNDISEthernet.c **** void EVENT_USB_Device_Disconnect(void)
 346:RNDISEthernet.c **** {
 2133               	 .loc 1 346 0
 2134               	 .cfi_startproc
 2135               	 
 2136               	 
 2137               	 
 2138               	.L__stack_usage =0
 2139 0226 0895      	 ret
 2140               	 .cfi_endproc
 2141               	.LFE132:
 2143               	.global EVENT_USB_Device_ConfigurationChanged
 2145               	EVENT_USB_Device_ConfigurationChanged:
GAS LISTING  			page 111


 2146               	.LFB133:
 347:RNDISEthernet.c **** 	/* Indicate USB not ready */
 348:RNDISEthernet.c **** //	LEDs_SetAllLEDs(LEDMASK_USB_NOTREADY);
 349:RNDISEthernet.c **** }
 350:RNDISEthernet.c **** 
 351:RNDISEthernet.c **** /** Event handler for the USB_ConfigurationChanged event. This is fired when the host sets the curr
 352:RNDISEthernet.c ****  *  of the USB device after enumeration, and configures the RNDIS device endpoints and starts the r
 353:RNDISEthernet.c ****  */
 354:RNDISEthernet.c **** void EVENT_USB_Device_ConfigurationChanged(void)
 355:RNDISEthernet.c **** {
 2147               	 .loc 1 355 0
 2148               	 .cfi_startproc
 2149               	 
 2150               	 
 2151               	 
 2152               	.L__stack_usage =0
 2153               	.LVL46:
 2154               	.LBB71:
 2155               	.LBB72:
 2156               	 .file 4 "./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
GAS LISTING  			page 112


  38:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
GAS LISTING  			page 113


  95:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
GAS LISTING  			page 114


 152:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
GAS LISTING  			page 115


 209:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 2157               	 .loc 4 210 0
 2158 0228 42E2      	 ldi r20,lo8(34)
 2159 022a 61E8      	 ldi r22,lo8(-127)
 2160 022c 81E0      	 ldi r24,lo8(1)
 2161 022e 0E94 0000 	 call Endpoint_ConfigureEndpoint_Prv
 2162               	.LVL47:
 2163               	.LBE72:
 2164               	.LBE71:
 2165               	.LBB73:
 2166               	.LBB74:
 2167 0232 42E2      	 ldi r20,lo8(34)
 2168 0234 60E8      	 ldi r22,lo8(-128)
 2169 0236 82E0      	 ldi r24,lo8(2)
 2170 0238 0E94 0000 	 call Endpoint_ConfigureEndpoint_Prv
 2171               	.LVL48:
 2172               	.LBE74:
 2173               	.LBE73:
 2174               	.LBB75:
 2175               	.LBB76:
 2176 023c 42E0      	 ldi r20,lo8(2)
 2177 023e 61EC      	 ldi r22,lo8(-63)
 2178 0240 83E0      	 ldi r24,lo8(3)
 2179 0242 0C94 0000 	 jmp Endpoint_ConfigureEndpoint_Prv
 2180               	.LVL49:
 2181               	.LBE76:
 2182               	.LBE75:
 2183               	 .cfi_endproc
 2184               	.LFE133:
 2186               	.global EVENT_USB_Device_ControlRequest
 2188               	EVENT_USB_Device_ControlRequest:
 2189               	.LFB134:
 356:RNDISEthernet.c **** 	bool ConfigSuccess = true;
 357:RNDISEthernet.c **** 
 358:RNDISEthernet.c **** 	/* Setup RNDIS Data Endpoints */
 359:RNDISEthernet.c **** 	ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_TX_EPADDR, EP_TYPE_BULK, CDC_TXRX_EPSIZE, 1);
 360:RNDISEthernet.c **** 	ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_RX_EPADDR, EP_TYPE_BULK, CDC_TXRX_EPSIZE, 1);
 361:RNDISEthernet.c **** 	ConfigSuccess &= Endpoint_ConfigureEndpoint(CDC_NOTIFICATION_EPADDR, EP_TYPE_INTERRUPT, CDC_NOTIFI
 362:RNDISEthernet.c **** 
 363:RNDISEthernet.c **** 	/* Indicate endpoint configuration success or failure */
 364:RNDISEthernet.c **** //	LEDs_SetAllLEDs(ConfigSuccess ? LEDMASK_USB_READY : LEDMASK_USB_ERROR);
 365:RNDISEthernet.c **** }
 366:RNDISEthernet.c **** 
 367:RNDISEthernet.c **** /** Event handler for the USB_ControlRequest event. This is used to catch and process control reque
 368:RNDISEthernet.c ****  *  the device from the USB host before passing along unhandled control requests to the library for
 369:RNDISEthernet.c ****  *  internally.
 370:RNDISEthernet.c ****  */
 371:RNDISEthernet.c **** void EVENT_USB_Device_ControlRequest(void)
 372:RNDISEthernet.c **** {
 2190               	 .loc 1 372 0
 2191               	 .cfi_startproc
 2192               	 
 2193               	 
 2194               	 
 2195               	.L__stack_usage =0
 373:RNDISEthernet.c **** 	/* Process RNDIS class commands */
GAS LISTING  			page 116


 374:RNDISEthernet.c **** 	switch (USB_ControlRequest.bRequest)
 2196               	 .loc 1 374 0
 2197 0246 8091 0000 	 lds r24,USB_ControlRequest+1
 2198 024a 8823      	 tst r24
 2199 024c 01F0      	 breq .L53
 2200 024e 8130      	 cpi r24,lo8(1)
 2201 0250 01F0      	 breq .L54
 2202 0252 0895      	 ret
 2203               	.L53:
 375:RNDISEthernet.c **** 	{
 376:RNDISEthernet.c **** 		case RNDIS_REQ_SendEncapsulatedCommand:
 377:RNDISEthernet.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_CLASS | REQREC_INTERFACE)
 2204               	 .loc 1 377 0
 2205 0254 8091 0000 	 lds r24,USB_ControlRequest
 2206 0258 8132      	 cpi r24,lo8(33)
 2207 025a 01F0      	 breq .+2
 2208 025c 00C0      	 rjmp .L51
 2209               	.LBB91:
 2210               	.LBB92:
 2211               	.LBB93:
 2212               	.LBB94:
 211:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 117


 247:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
GAS LISTING  			page 118


 304:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
GAS LISTING  			page 119


 361:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
GAS LISTING  			page 120


 418:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 2213               	 .loc 4 444 0
 2214 025e 8091 E800 	 lds r24,232
 2215 0262 877F      	 andi r24,lo8(-9)
 2216 0264 8093 E800 	 sts 232,r24
 2217               	.LBE94:
 2218               	.LBE93:
 378:RNDISEthernet.c **** 			{
 379:RNDISEthernet.c **** 				Endpoint_ClearSETUP();
 380:RNDISEthernet.c **** 
 381:RNDISEthernet.c **** 				/* Read in the RNDIS message into the message buffer */
 382:RNDISEthernet.c **** 				Endpoint_Read_Control_Stream_LE(RNDISMessageBuffer, USB_ControlRequest.wLength);
 2219               	 .loc 1 382 0
 2220 0268 6091 0000 	 lds r22,USB_ControlRequest+6
 2221 026c 7091 0000 	 lds r23,USB_ControlRequest+6+1
 2222 0270 80E0      	 ldi r24,lo8(RNDISMessageBuffer)
 2223 0272 90E0      	 ldi r25,hi8(RNDISMessageBuffer)
 2224 0274 0E94 0000 	 call Endpoint_Read_Control_Stream_LE
 2225               	.LVL50:
 2226               	.LBB95:
 2227               	.LBB96:
 445:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 121


 455:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 2228               	 .loc 4 456 0
 2229 0278 8091 E800 	 lds r24,232
 2230 027c 8E77      	 andi r24,lo8(126)
 2231 027e 8093 E800 	 sts 232,r24
 2232               	.LBE96:
 2233               	.LBE95:
 383:RNDISEthernet.c **** 				Endpoint_ClearIN();
 384:RNDISEthernet.c **** 
 385:RNDISEthernet.c **** 				/* Process the RNDIS message */
 386:RNDISEthernet.c **** 				ProcessRNDISControlMessage();
 2234               	 .loc 1 386 0
 2235 0282 0C94 0000 	 jmp ProcessRNDISControlMessage
 2236               	.LVL51:
 2237               	.L54:
 2238               	.LBE92:
 2239               	.LBE91:
 387:RNDISEthernet.c **** 			}
 388:RNDISEthernet.c **** 
 389:RNDISEthernet.c **** 			break;
 390:RNDISEthernet.c **** 		case RNDIS_REQ_GetEncapsulatedResponse:
 391:RNDISEthernet.c **** 			if (USB_ControlRequest.bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE)
 2240               	 .loc 1 391 0
 2241 0286 8091 0000 	 lds r24,USB_ControlRequest
 2242 028a 813A      	 cpi r24,lo8(-95)
 2243 028c 01F4      	 brne .L51
 392:RNDISEthernet.c **** 			{
 393:RNDISEthernet.c **** 				/* Check if a response to the last message is ready */
 394:RNDISEthernet.c **** 				if (!(MessageHeader->MessageLength))
 2244               	 .loc 1 394 0
 2245 028e E091 0000 	 lds r30,MessageHeader
 2246 0292 F091 0000 	 lds r31,MessageHeader+1
 2247 0296 8481      	 ldd r24,Z+4
 2248 0298 9581      	 ldd r25,Z+5
 2249 029a A681      	 ldd r26,Z+6
 2250 029c B781      	 ldd r27,Z+7
 2251 029e 892B      	 or r24,r25
 2252 02a0 8A2B      	 or r24,r26
 2253 02a2 8B2B      	 or r24,r27
 2254 02a4 01F4      	 brne .L55
 395:RNDISEthernet.c **** 				{
 396:RNDISEthernet.c **** 					/* Set the response to a single 0x00 byte to indicate that no response is ready */
 397:RNDISEthernet.c **** 					RNDISMessageBuffer[0] = 0;
 2255               	 .loc 1 397 0
 2256 02a6 1092 0000 	 sts RNDISMessageBuffer,__zero_reg__
 398:RNDISEthernet.c **** 					MessageHeader->MessageLength = 1;
 2257               	 .loc 1 398 0
 2258 02aa 81E0      	 ldi r24,lo8(1)
 2259 02ac 90E0      	 ldi r25,0
 2260 02ae A0E0      	 ldi r26,0
 2261 02b0 B0E0      	 ldi r27,0
 2262 02b2 8483      	 std Z+4,r24
 2263 02b4 9583      	 std Z+5,r25
 2264 02b6 A683      	 std Z+6,r26
 2265 02b8 B783      	 std Z+7,r27
 2266               	.L55:
GAS LISTING  			page 122


 2267               	.LBB97:
 2268               	.LBB98:
 444:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 2269               	 .loc 4 444 0
 2270 02ba 8091 E800 	 lds r24,232
 2271 02be 877F      	 andi r24,lo8(-9)
 2272 02c0 8093 E800 	 sts 232,r24
 2273               	.LBE98:
 2274               	.LBE97:
 399:RNDISEthernet.c **** 				}
 400:RNDISEthernet.c **** 
 401:RNDISEthernet.c **** 				Endpoint_ClearSETUP();
 402:RNDISEthernet.c **** 
 403:RNDISEthernet.c **** 				/* Write the message response data to the endpoint */
 404:RNDISEthernet.c **** 				Endpoint_Write_Control_Stream_LE(RNDISMessageBuffer, MessageHeader->MessageLength);
 2275               	 .loc 1 404 0
 2276 02c4 E091 0000 	 lds r30,MessageHeader
 2277 02c8 F091 0000 	 lds r31,MessageHeader+1
 2278 02cc 6481      	 ldd r22,Z+4
 2279 02ce 7581      	 ldd r23,Z+5
 2280 02d0 80E0      	 ldi r24,lo8(RNDISMessageBuffer)
 2281 02d2 90E0      	 ldi r25,hi8(RNDISMessageBuffer)
 2282 02d4 0E94 0000 	 call Endpoint_Write_Control_Stream_LE
 2283               	.LVL52:
 2284               	.LBB99:
 2285               	.LBB100:
 457:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 2286               	 .loc 4 471 0
 2287 02d8 8091 E800 	 lds r24,232
 2288 02dc 8B77      	 andi r24,lo8(123)
 2289 02de 8093 E800 	 sts 232,r24
 2290               	.LBE100:
 2291               	.LBE99:
 405:RNDISEthernet.c **** 				Endpoint_ClearOUT();
 406:RNDISEthernet.c **** 
 407:RNDISEthernet.c **** 				/* Reset the message header once again after transmission */
 408:RNDISEthernet.c **** 				MessageHeader->MessageLength = 0;
 2292               	 .loc 1 408 0
 2293 02e2 E091 0000 	 lds r30,MessageHeader
 2294 02e6 F091 0000 	 lds r31,MessageHeader+1
 2295 02ea 1482      	 std Z+4,__zero_reg__
 2296 02ec 1582      	 std Z+5,__zero_reg__
 2297 02ee 1682      	 std Z+6,__zero_reg__
GAS LISTING  			page 123


 2298 02f0 1782      	 std Z+7,__zero_reg__
 2299               	.L51:
 2300 02f2 0895      	 ret
 2301               	 .cfi_endproc
 2302               	.LFE134:
 2304               	.global RNDIS_Task
 2306               	RNDIS_Task:
 2307               	.LFB135:
 409:RNDISEthernet.c **** 			}
 410:RNDISEthernet.c **** 
 411:RNDISEthernet.c **** 			break;
 412:RNDISEthernet.c **** 	}
 413:RNDISEthernet.c **** }
 414:RNDISEthernet.c **** 
 415:RNDISEthernet.c **** /** Task to manage the sending and receiving of encapsulated RNDIS data and notifications. This rem
 416:RNDISEthernet.c ****  *  wrapper from received Ethernet frames and places them in the FrameIN global buffer, or adds the
 417:RNDISEthernet.c ****  *  to a frame in the FrameOUT global before sending the buffer contents to the host.
 418:RNDISEthernet.c ****  */
 419:RNDISEthernet.c **** 
 420:RNDISEthernet.c **** void RNDIS_Task(void)
 421:RNDISEthernet.c **** {
 2308               	 .loc 1 421 0
 2309               	 .cfi_startproc
 2310               	 
 2311               	 
 2312               	 
 2313               	.L__stack_usage =0
 2314               	.LVL53:
 2315               	.LBB101:
 2316               	.LBB102:
 270:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 2317               	 .loc 4 270 0
 2318 02f4 83E0      	 ldi r24,lo8(3)
 2319 02f6 8093 E900 	 sts 233,r24
 2320               	.LBE102:
 2321               	.LBE101:
 422:RNDISEthernet.c **** 	Endpoint_SelectEndpoint(CDC_NOTIFICATION_EPADDR);
 423:RNDISEthernet.c **** 
 424:RNDISEthernet.c **** 	if (USB_DeviceState != DEVICE_STATE_Configured)
 2322               	 .loc 1 424 0
 2323 02fa 8091 0000 	 lds r24,USB_DeviceState
 2324 02fe 8430      	 cpi r24,lo8(4)
 2325 0300 01F4      	 brne .L56
 425:RNDISEthernet.c **** 	  return;
 426:RNDISEthernet.c **** 
 427:RNDISEthernet.c **** 	HandleUSB();
 2326               	 .loc 1 427 0
 2327 0302 0C94 0000 	 jmp HandleUSB
 2328               	.LVL54:
 2329               	.L56:
 2330 0306 0895      	 ret
 2331               	 .cfi_endproc
 2332               	.LFE135:
 2334               	 .section .text.startup,"ax",@progbits
 2335               	.global main
 2337               	main:
 2338               	.LFB129:
GAS LISTING  			page 124


 272:RNDISEthernet.c **** {
 2339               	 .loc 1 272 0
 2340               	 .cfi_startproc
 2341               	 
 2342               	 
 2343               	 
 2344               	.L__stack_usage =0
 274:RNDISEthernet.c **** 	SetupHardware();
 2345               	 .loc 1 274 0
 2346 0000 0E94 0000 	 call SetupHardware
 2347               	.LVL55:
 279:RNDISEthernet.c **** 	DDRD |= _BV(6);
 2348               	 .loc 1 279 0
 2349 0004 569A      	 sbi 0xa,6
 280:RNDISEthernet.c **** 	PORTD &= ~_BV(6);
 2350               	 .loc 1 280 0
 2351 0006 5E98      	 cbi 0xb,6
 281:RNDISEthernet.c **** 	PORTD = 0;
 2352               	 .loc 1 281 0
 2353 0008 1BB8      	 out 0xb,__zero_reg__
 2354               	.LBB103:
 2355               	.LBB104:
 2356               	 .file 5 "./LUFA/Drivers/USB/../../Common/Common.h"
   1:./LUFA/Drivers/USB/../../Common/Common.h **** /*
   2:./LUFA/Drivers/USB/../../Common/Common.h ****              LUFA Library
   3:./LUFA/Drivers/USB/../../Common/Common.h ****      Copyright (C) Dean Camera, 2014.
   4:./LUFA/Drivers/USB/../../Common/Common.h **** 
   5:./LUFA/Drivers/USB/../../Common/Common.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Drivers/USB/../../Common/Common.h ****            www.lufa-lib.org
   7:./LUFA/Drivers/USB/../../Common/Common.h **** */
   8:./LUFA/Drivers/USB/../../Common/Common.h **** 
   9:./LUFA/Drivers/USB/../../Common/Common.h **** /*
  10:./LUFA/Drivers/USB/../../Common/Common.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Drivers/USB/../../Common/Common.h **** 
  12:./LUFA/Drivers/USB/../../Common/Common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Drivers/USB/../../Common/Common.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Drivers/USB/../../Common/Common.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Drivers/USB/../../Common/Common.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Drivers/USB/../../Common/Common.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Drivers/USB/../../Common/Common.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Drivers/USB/../../Common/Common.h ****   advertising or publicity pertaining to distribution of the
  19:./LUFA/Drivers/USB/../../Common/Common.h ****   software without specific, written prior permission.
  20:./LUFA/Drivers/USB/../../Common/Common.h **** 
  21:./LUFA/Drivers/USB/../../Common/Common.h ****   The author disclaims all warranties with regard to this
  22:./LUFA/Drivers/USB/../../Common/Common.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Drivers/USB/../../Common/Common.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Drivers/USB/../../Common/Common.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Drivers/USB/../../Common/Common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Drivers/USB/../../Common/Common.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Drivers/USB/../../Common/Common.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Drivers/USB/../../Common/Common.h ****   this software.
  29:./LUFA/Drivers/USB/../../Common/Common.h **** */
  30:./LUFA/Drivers/USB/../../Common/Common.h **** 
  31:./LUFA/Drivers/USB/../../Common/Common.h **** /** \dir
  32:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library header files.
  33:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  34:./LUFA/Drivers/USB/../../Common/Common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
GAS LISTING  			page 125


  35:./LUFA/Drivers/USB/../../Common/Common.h ****  *  user applications.
  36:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  37:./LUFA/Drivers/USB/../../Common/Common.h **** 
  38:./LUFA/Drivers/USB/../../Common/Common.h **** /** \file
  39:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  41:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \copydetails Group_Common
  42:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  43:./LUFA/Drivers/USB/../../Common/Common.h **** 
  44:./LUFA/Drivers/USB/../../Common/Common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  47:./LUFA/Drivers/USB/../../Common/Common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
  48:./LUFA/Drivers/USB/../../Common/Common.h ****  *  aspects of the library.
  49:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  50:./LUFA/Drivers/USB/../../Common/Common.h ****  *  @{
  51:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  52:./LUFA/Drivers/USB/../../Common/Common.h **** 
  53:./LUFA/Drivers/USB/../../Common/Common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:./LUFA/Drivers/USB/../../Common/Common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:./LUFA/Drivers/USB/../../Common/Common.h ****  *
  56:./LUFA/Drivers/USB/../../Common/Common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:./LUFA/Drivers/USB/../../Common/Common.h ****  */
  58:./LUFA/Drivers/USB/../../Common/Common.h **** 
  59:./LUFA/Drivers/USB/../../Common/Common.h **** #ifndef __LUFA_COMMON_H__
  60:./LUFA/Drivers/USB/../../Common/Common.h **** #define __LUFA_COMMON_H__
  61:./LUFA/Drivers/USB/../../Common/Common.h **** 
  62:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Macros: */
  63:./LUFA/Drivers/USB/../../Common/Common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:./LUFA/Drivers/USB/../../Common/Common.h **** 
  65:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Includes: */
  66:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stdint.h>
  67:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stdbool.h>
  68:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <string.h>
  69:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include <stddef.h>
  70:./LUFA/Drivers/USB/../../Common/Common.h **** 
  71:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "Architectures.h"
  72:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "BoardTypes.h"
  73:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "ArchitectureSpecific.h"
  74:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "CompilerSpecific.h"
  75:./LUFA/Drivers/USB/../../Common/Common.h **** 		#include "Attributes.h"
  76:./LUFA/Drivers/USB/../../Common/Common.h **** 
  77:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "LUFAConfig.h"
  79:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
  80:./LUFA/Drivers/USB/../../Common/Common.h **** 
  81:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(__cplusplus)
  83:./LUFA/Drivers/USB/../../Common/Common.h **** 			extern "C" {
  84:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
  85:./LUFA/Drivers/USB/../../Common/Common.h **** 
  86:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Architecture specific utility includes: */
  87:./LUFA/Drivers/USB/../../Common/Common.h **** 		#if defined(__DOXYGEN__)
  88:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
GAS LISTING  			page 126


  92:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/io.h>
  95:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/interrupt.h>
  96:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/pgmspace.h>
  97:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/eeprom.h>
  98:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/boot.h>
  99:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 100:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <util/delay.h>
 101:./LUFA/Drivers/USB/../../Common/Common.h **** 
 102:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 103:./LUFA/Drivers/USB/../../Common/Common.h **** 
 104:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 105:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:./LUFA/Drivers/USB/../../Common/Common.h **** 
 109:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 110:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_UC3)
 111:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr32/io.h>
 112:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 113:./LUFA/Drivers/USB/../../Common/Common.h **** 
 114:./LUFA/Drivers/USB/../../Common/Common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define PROGMEM
 116:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define pgm_read_byte(x)         *x
 117:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:./LUFA/Drivers/USB/../../Common/Common.h **** 			// =================================================
 120:./LUFA/Drivers/USB/../../Common/Common.h **** 
 121:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint32_t uint_reg_t;
 122:./LUFA/Drivers/USB/../../Common/Common.h **** 
 123:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_BIG_ENDIAN
 124:./LUFA/Drivers/USB/../../Common/Common.h **** 
 125:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 126:./LUFA/Drivers/USB/../../Common/Common.h **** 		#elif (ARCH == ARCH_XMEGA)
 127:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/io.h>
 128:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/interrupt.h>
 129:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/pgmspace.h>
 130:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <avr/eeprom.h>
 131:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <math.h>
 132:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include <util/delay.h>
 133:./LUFA/Drivers/USB/../../Common/Common.h **** 
 134:./LUFA/Drivers/USB/../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 135:./LUFA/Drivers/USB/../../Common/Common.h **** 
 136:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 137:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 138:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 139:./LUFA/Drivers/USB/../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 140:./LUFA/Drivers/USB/../../Common/Common.h **** 
 141:./LUFA/Drivers/USB/../../Common/Common.h **** 			#include "Endianness.h"
 142:./LUFA/Drivers/USB/../../Common/Common.h **** 		#else
 143:./LUFA/Drivers/USB/../../Common/Common.h **** 			#error Unknown device architecture specified.
 144:./LUFA/Drivers/USB/../../Common/Common.h **** 		#endif
 145:./LUFA/Drivers/USB/../../Common/Common.h **** 
 146:./LUFA/Drivers/USB/../../Common/Common.h **** 	/* Public Interface - May be used in end-application: */
 147:./LUFA/Drivers/USB/../../Common/Common.h **** 		/* Macros: */
 148:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(__DOXYGEN__)
GAS LISTING  			page 127


 149:./LUFA/Drivers/USB/../../Common/Common.h **** 				// Obsolete, retained for compatibility with user code
 150:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MACROS                  do
 151:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MACROE                  while (0)
 152:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 153:./LUFA/Drivers/USB/../../Common/Common.h **** 
 154:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Convenience macro to determine the larger of two values.
 155:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 156:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 157:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *             multiple times.
 158:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 159:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 160:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 161:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 162:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return The larger of the two input parameters
 163:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 164:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 165:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 166:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 167:./LUFA/Drivers/USB/../../Common/Common.h **** 
 168:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Convenience macro to determine the smaller of two values.
 169:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 170:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 171:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *             multiple times.
 172:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 173:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] x  First value to compare.
 174:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] y  First value to compare.
 175:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 176:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return The smaller of the two input parameters
 177:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 178:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 179:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 180:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 181:./LUFA/Drivers/USB/../../Common/Common.h **** 
 182:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 183:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 184:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  marks around the input, converting the source into a string literal.
 185:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 186:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 187:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 188:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return String version of the input.
 189:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 190:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define STRINGIFY(x)            #x
 191:./LUFA/Drivers/USB/../../Common/Common.h **** 
 192:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 193:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 194:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 195:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 196:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 197:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return String version of the expanded input.
 198:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 199:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 200:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 201:./LUFA/Drivers/USB/../../Common/Common.h **** 
 202:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(CONCAT) || defined(__DOXYGEN__)
 203:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Concatenates the given input into a single token, via the C Preprocessor.
 204:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 205:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
GAS LISTING  			page 128


 206:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 207:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 208:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return Concatenated version of the input.
 209:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 210:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define CONCAT(x, y)            x ## y
 211:./LUFA/Drivers/USB/../../Common/Common.h **** 
 212:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** CConcatenates the given input into a single token after macro expansion, via the C Preproce
 213:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 214:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
 215:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 216:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 217:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \return Concatenated version of the expanded input.
 218:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 219:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define CONCAT_EXPANDED(x, y)   CONCAT(x, y)
 220:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 221:./LUFA/Drivers/USB/../../Common/Common.h **** 
 222:./LUFA/Drivers/USB/../../Common/Common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 223:./LUFA/Drivers/USB/../../Common/Common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 224:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 225:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  state with unintentional side-effects.
 226:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 227:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 228:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 229:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 230:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 231:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 232:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 233:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \ingroup Group_GlobalInt
 234:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *
 235:./LUFA/Drivers/USB/../../Common/Common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 236:./LUFA/Drivers/USB/../../Common/Common.h **** 				 */
 237:./LUFA/Drivers/USB/../../Common/Common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 238:./LUFA/Drivers/USB/../../Common/Common.h **** 			#endif
 239:./LUFA/Drivers/USB/../../Common/Common.h **** 
 240:./LUFA/Drivers/USB/../../Common/Common.h **** 		/* Inline Functions: */
 241:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 242:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  etc.
 243:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 244:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 245:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 246:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 247:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 248:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 249:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 250:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 251:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 252:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 253:./LUFA/Drivers/USB/../../Common/Common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 254:./LUFA/Drivers/USB/../../Common/Common.h **** 
 255:./LUFA/Drivers/USB/../../Common/Common.h **** 				return Byte;
 256:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 257:./LUFA/Drivers/USB/../../Common/Common.h **** 
 258:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 259:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 260:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  may be slightly higher.
 261:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 262:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
GAS LISTING  			page 129


 263:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 264:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 265:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 266:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 267:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 268:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 269:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 270:./LUFA/Drivers/USB/../../Common/Common.h **** 					_delay_ms(Milliseconds);
 271:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 272:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 273:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 274:./LUFA/Drivers/USB/../../Common/Common.h **** 					while (Milliseconds--)
 275:./LUFA/Drivers/USB/../../Common/Common.h **** 					  _delay_ms(1);
 276:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 277:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 278:./LUFA/Drivers/USB/../../Common/Common.h **** 				while (Milliseconds--)
 279:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 280:./LUFA/Drivers/USB/../../Common/Common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 281:./LUFA/Drivers/USB/../../Common/Common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 282:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 283:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 284:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 285:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 286:./LUFA/Drivers/USB/../../Common/Common.h **** 					_delay_ms(Milliseconds);
 287:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 288:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 289:./LUFA/Drivers/USB/../../Common/Common.h **** 				{
 290:./LUFA/Drivers/USB/../../Common/Common.h **** 					while (Milliseconds--)
 291:./LUFA/Drivers/USB/../../Common/Common.h **** 					  _delay_ms(1);
 292:./LUFA/Drivers/USB/../../Common/Common.h **** 				}
 293:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 294:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 295:./LUFA/Drivers/USB/../../Common/Common.h **** 
 296:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 297:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 298:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 299:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 300:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 301:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 302:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 303:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 304:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 305:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 306:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 307:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 308:./LUFA/Drivers/USB/../../Common/Common.h **** 
 309:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 310:./LUFA/Drivers/USB/../../Common/Common.h **** 				return SREG;
 311:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 312:./LUFA/Drivers/USB/../../Common/Common.h **** 				return __builtin_mfsr(AVR32_SR);
 313:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 314:./LUFA/Drivers/USB/../../Common/Common.h **** 				return SREG;
 315:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 316:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 317:./LUFA/Drivers/USB/../../Common/Common.h **** 
 318:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 319:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
GAS LISTING  			page 130


 320:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 321:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 322:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 323:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 324:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 325:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 326:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 327:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 328:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 329:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 330:./LUFA/Drivers/USB/../../Common/Common.h **** 
 331:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 332:./LUFA/Drivers/USB/../../Common/Common.h **** 				SREG = GlobalIntState;
 333:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 334:./LUFA/Drivers/USB/../../Common/Common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 335:./LUFA/Drivers/USB/../../Common/Common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 336:./LUFA/Drivers/USB/../../Common/Common.h **** 				else
 337:./LUFA/Drivers/USB/../../Common/Common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 338:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 339:./LUFA/Drivers/USB/../../Common/Common.h **** 				SREG = GlobalIntState;
 340:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 341:./LUFA/Drivers/USB/../../Common/Common.h **** 
 342:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 343:./LUFA/Drivers/USB/../../Common/Common.h **** 			}
 344:./LUFA/Drivers/USB/../../Common/Common.h **** 
 345:./LUFA/Drivers/USB/../../Common/Common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 346:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *
 347:./LUFA/Drivers/USB/../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 348:./LUFA/Drivers/USB/../../Common/Common.h **** 			 */
 349:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 350:./LUFA/Drivers/USB/../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void)
 351:./LUFA/Drivers/USB/../../Common/Common.h **** 			{
 352:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 2357               	 .loc 5 352 0
 353:./LUFA/Drivers/USB/../../Common/Common.h **** 
 354:./LUFA/Drivers/USB/../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 355:./LUFA/Drivers/USB/../../Common/Common.h **** 				sei();
 2358               	 .loc 5 355 0
 2359               	 
 2360               	 
 2361 000a 7894      	 sei
 2362               	 
 356:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 357:./LUFA/Drivers/USB/../../Common/Common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 358:./LUFA/Drivers/USB/../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 359:./LUFA/Drivers/USB/../../Common/Common.h **** 				sei();
 360:./LUFA/Drivers/USB/../../Common/Common.h **** 				#endif
 361:./LUFA/Drivers/USB/../../Common/Common.h **** 
 362:./LUFA/Drivers/USB/../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 2363               	 .loc 5 362 0
 2364               	 
 2365               	.LBE104:
 2366               	.LBE103:
 287:RNDISEthernet.c **** 	et_init( 0 );
 2367               	 .loc 1 287 0
 2368 000c 80E0      	 ldi r24,0
 2369 000e 90E0      	 ldi r25,0
GAS LISTING  			page 131


 2370 0010 0E94 0000 	 call et_init
 2371               	.LVL56:
 289:RNDISEthernet.c **** 	InitTCP();
 2372               	 .loc 1 289 0
 2373 0014 0E94 0000 	 call InitTCP
 2374               	.LVL57:
 290:RNDISEthernet.c **** 	InitDumbcraft();
 2375               	 .loc 1 290 0
 2376 0018 0E94 0000 	 call InitDumbcraft
 2377               	.LVL58:
 2378               	.L59:
 297:RNDISEthernet.c **** 		RNDIS_Task();
 2379               	 .loc 1 297 0
 2380 001c 0E94 0000 	 call RNDIS_Task
 2381               	.LVL59:
 298:RNDISEthernet.c **** 		USB_USBTask();
 2382               	 .loc 1 298 0
 2383 0020 0E94 0000 	 call USB_USBTask
 2384               	.LVL60:
 2385               	.LBB105:
 2386               	.LBB106:
 2387               	 .file 6 "/usr/lib/avr/include/util/delay.h"
   1:/usr/lib/avr/include/util/delay.h **** /* Copyright (c) 2002, Marek Michalkiewicz
   2:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2004,2005,2007 Joerg Wunsch
   3:/usr/lib/avr/include/util/delay.h ****    Copyright (c) 2007  Florin-Viorel Petrov
   4:/usr/lib/avr/include/util/delay.h ****    All rights reserved.
   5:/usr/lib/avr/include/util/delay.h **** 
   6:/usr/lib/avr/include/util/delay.h ****    Redistribution and use in source and binary forms, with or without
   7:/usr/lib/avr/include/util/delay.h ****    modification, are permitted provided that the following conditions are met:
   8:/usr/lib/avr/include/util/delay.h **** 
   9:/usr/lib/avr/include/util/delay.h ****    * Redistributions of source code must retain the above copyright
  10:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer.
  11:/usr/lib/avr/include/util/delay.h **** 
  12:/usr/lib/avr/include/util/delay.h ****    * Redistributions in binary form must reproduce the above copyright
  13:/usr/lib/avr/include/util/delay.h ****      notice, this list of conditions and the following disclaimer in
  14:/usr/lib/avr/include/util/delay.h ****      the documentation and/or other materials provided with the
  15:/usr/lib/avr/include/util/delay.h ****      distribution.
  16:/usr/lib/avr/include/util/delay.h **** 
  17:/usr/lib/avr/include/util/delay.h ****    * Neither the name of the copyright holders nor the names of
  18:/usr/lib/avr/include/util/delay.h ****      contributors may be used to endorse or promote products derived
  19:/usr/lib/avr/include/util/delay.h ****      from this software without specific prior written permission.
  20:/usr/lib/avr/include/util/delay.h **** 
  21:/usr/lib/avr/include/util/delay.h ****   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:/usr/lib/avr/include/util/delay.h ****   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:/usr/lib/avr/include/util/delay.h ****   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:/usr/lib/avr/include/util/delay.h ****   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  25:/usr/lib/avr/include/util/delay.h ****   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:/usr/lib/avr/include/util/delay.h ****   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:/usr/lib/avr/include/util/delay.h ****   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:/usr/lib/avr/include/util/delay.h ****   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:/usr/lib/avr/include/util/delay.h ****   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:/usr/lib/avr/include/util/delay.h ****   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:/usr/lib/avr/include/util/delay.h ****   POSSIBILITY OF SUCH DAMAGE. */
  32:/usr/lib/avr/include/util/delay.h **** 
  33:/usr/lib/avr/include/util/delay.h **** /* $Id: delay.h.in 2251 2011-09-14 08:20:33Z joerg_wunsch $ */
  34:/usr/lib/avr/include/util/delay.h **** 
  35:/usr/lib/avr/include/util/delay.h **** #ifndef _UTIL_DELAY_H_
GAS LISTING  			page 132


  36:/usr/lib/avr/include/util/delay.h **** #define _UTIL_DELAY_H_ 1
  37:/usr/lib/avr/include/util/delay.h **** 
  38:/usr/lib/avr/include/util/delay.h **** #ifndef __HAS_DELAY_CYCLES
  39:/usr/lib/avr/include/util/delay.h **** #define __HAS_DELAY_CYCLES 1
  40:/usr/lib/avr/include/util/delay.h **** #endif
  41:/usr/lib/avr/include/util/delay.h **** 
  42:/usr/lib/avr/include/util/delay.h **** #include <inttypes.h>
  43:/usr/lib/avr/include/util/delay.h **** #include <util/delay_basic.h>
  44:/usr/lib/avr/include/util/delay.h **** #include <math.h>
  45:/usr/lib/avr/include/util/delay.h **** 
  46:/usr/lib/avr/include/util/delay.h **** /** \file */
  47:/usr/lib/avr/include/util/delay.h **** /** \defgroup util_delay <util/delay.h>: Convenience functions for busy-wait delay loops
  48:/usr/lib/avr/include/util/delay.h ****     \code
  49:/usr/lib/avr/include/util/delay.h ****     #define F_CPU 1000000UL  // 1 MHz
  50:/usr/lib/avr/include/util/delay.h ****     //#define F_CPU 14.7456E6
  51:/usr/lib/avr/include/util/delay.h ****     #include <util/delay.h>
  52:/usr/lib/avr/include/util/delay.h ****     \endcode
  53:/usr/lib/avr/include/util/delay.h **** 
  54:/usr/lib/avr/include/util/delay.h ****     \note As an alternative method, it is possible to pass the
  55:/usr/lib/avr/include/util/delay.h ****     F_CPU macro down to the compiler from the Makefile.
  56:/usr/lib/avr/include/util/delay.h ****     Obviously, in that case, no \c \#define statement should be
  57:/usr/lib/avr/include/util/delay.h ****     used.
  58:/usr/lib/avr/include/util/delay.h **** 
  59:/usr/lib/avr/include/util/delay.h ****     The functions in this header file are wrappers around the basic
  60:/usr/lib/avr/include/util/delay.h ****     busy-wait functions from <util/delay_basic.h>.  They are meant as
  61:/usr/lib/avr/include/util/delay.h ****     convenience functions where actual time values can be specified
  62:/usr/lib/avr/include/util/delay.h ****     rather than a number of cycles to wait for.  The idea behind is
  63:/usr/lib/avr/include/util/delay.h ****     that compile-time constant expressions will be eliminated by
  64:/usr/lib/avr/include/util/delay.h ****     compiler optimization so floating-point expressions can be used
  65:/usr/lib/avr/include/util/delay.h ****     to calculate the number of delay cycles needed based on the CPU
  66:/usr/lib/avr/include/util/delay.h ****     frequency passed by the macro F_CPU.
  67:/usr/lib/avr/include/util/delay.h **** 
  68:/usr/lib/avr/include/util/delay.h ****     \note In order for these functions to work as intended, compiler
  69:/usr/lib/avr/include/util/delay.h ****     optimizations <em>must</em> be enabled, and the delay time
  70:/usr/lib/avr/include/util/delay.h ****     <em>must</em> be an expression that is a known constant at
  71:/usr/lib/avr/include/util/delay.h ****     compile-time.  If these requirements are not met, the resulting
  72:/usr/lib/avr/include/util/delay.h ****     delay will be much longer (and basically unpredictable), and
  73:/usr/lib/avr/include/util/delay.h ****     applications that otherwise do not use floating-point calculations
  74:/usr/lib/avr/include/util/delay.h ****     will experience severe code bloat by the floating-point library
  75:/usr/lib/avr/include/util/delay.h ****     routines linked into the application.
  76:/usr/lib/avr/include/util/delay.h **** 
  77:/usr/lib/avr/include/util/delay.h ****     The functions available allow the specification of microsecond, and
  78:/usr/lib/avr/include/util/delay.h ****     millisecond delays directly, using the application-supplied macro
  79:/usr/lib/avr/include/util/delay.h ****     F_CPU as the CPU clock frequency (in Hertz).
  80:/usr/lib/avr/include/util/delay.h **** 
  81:/usr/lib/avr/include/util/delay.h **** */
  82:/usr/lib/avr/include/util/delay.h **** 
  83:/usr/lib/avr/include/util/delay.h **** #if !defined(__DOXYGEN__)
  84:/usr/lib/avr/include/util/delay.h **** static inline void _delay_us(double __us) __attribute__((always_inline));
  85:/usr/lib/avr/include/util/delay.h **** static inline void _delay_ms(double __ms) __attribute__((always_inline));
  86:/usr/lib/avr/include/util/delay.h **** #endif
  87:/usr/lib/avr/include/util/delay.h **** 
  88:/usr/lib/avr/include/util/delay.h **** #ifndef F_CPU
  89:/usr/lib/avr/include/util/delay.h **** /* prevent compiler error by supplying a default */
  90:/usr/lib/avr/include/util/delay.h **** # warning "F_CPU not defined for <util/delay.h>"
  91:/usr/lib/avr/include/util/delay.h **** # define F_CPU 1000000UL
  92:/usr/lib/avr/include/util/delay.h **** #endif
GAS LISTING  			page 133


  93:/usr/lib/avr/include/util/delay.h **** 
  94:/usr/lib/avr/include/util/delay.h **** #ifndef __OPTIMIZE__
  95:/usr/lib/avr/include/util/delay.h **** # warning "Compiler optimizations disabled; functions from <util/delay.h> won't work as designed"
  96:/usr/lib/avr/include/util/delay.h **** #endif
  97:/usr/lib/avr/include/util/delay.h **** 
  98:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
  99:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 100:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 101:/usr/lib/avr/include/util/delay.h **** #  include <math.h>
 102:/usr/lib/avr/include/util/delay.h **** #endif
 103:/usr/lib/avr/include/util/delay.h **** 
 104:/usr/lib/avr/include/util/delay.h **** /**
 105:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 106:/usr/lib/avr/include/util/delay.h **** 
 107:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __ms milliseconds, using _delay_loop_2().
 108:/usr/lib/avr/include/util/delay.h **** 
 109:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 110:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 111:/usr/lib/avr/include/util/delay.h **** 
 112:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 262.14 ms / F_CPU in MHz.
 113:/usr/lib/avr/include/util/delay.h **** 
 114:/usr/lib/avr/include/util/delay.h ****    When the user request delay which exceed the maximum possible one,
 115:/usr/lib/avr/include/util/delay.h ****    _delay_ms() provides a decreased resolution functionality. In this
 116:/usr/lib/avr/include/util/delay.h ****    mode _delay_ms() will work with a resolution of 1/10 ms, providing
 117:/usr/lib/avr/include/util/delay.h ****    delays up to 6.5535 seconds (independent from CPU frequency).  The
 118:/usr/lib/avr/include/util/delay.h ****    user will not be informed about decreased resolution.
 119:/usr/lib/avr/include/util/delay.h **** 
 120:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 121:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 ms/ F_CPU in MHz. For
 122:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflows results in
 123:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0ms.
 124:/usr/lib/avr/include/util/delay.h **** 
 125:/usr/lib/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 126:/usr/lib/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 127:/usr/lib/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 128:/usr/lib/avr/include/util/delay.h **** 
 129:/usr/lib/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 130:/usr/lib/avr/include/util/delay.h ****    to round down and round to closest integer.
 131:/usr/lib/avr/include/util/delay.h **** 
 132:/usr/lib/avr/include/util/delay.h ****    Note: The new implementation of _delay_ms(double __ms) with 
 133:/usr/lib/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible. 
 134:/usr/lib/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 135:/usr/lib/avr/include/util/delay.h ****    Also, the backward compatible
 136:/usr/lib/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 137:/usr/lib/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 138:/usr/lib/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 139:/usr/lib/avr/include/util/delay.h **** 
 140:/usr/lib/avr/include/util/delay.h ****  */
 141:/usr/lib/avr/include/util/delay.h **** void
 142:/usr/lib/avr/include/util/delay.h **** _delay_ms(double __ms)
 143:/usr/lib/avr/include/util/delay.h **** {
 144:/usr/lib/avr/include/util/delay.h **** 	uint16_t __ticks;
 145:/usr/lib/avr/include/util/delay.h **** 	double __tmp ; 
 146:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 147:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 148:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 149:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
GAS LISTING  			page 134


 150:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 151:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e3) * __ms;
 152:/usr/lib/avr/include/util/delay.h **** 
 153:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 154:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 155:/usr/lib/avr/include/util/delay.h **** 
 156:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 157:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 158:/usr/lib/avr/include/util/delay.h **** 
 159:/usr/lib/avr/include/util/delay.h **** 	#else
 160:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 161:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 162:/usr/lib/avr/include/util/delay.h **** 	#endif
 163:/usr/lib/avr/include/util/delay.h **** 
 164:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 165:/usr/lib/avr/include/util/delay.h **** 
 166:/usr/lib/avr/include/util/delay.h **** #else
 167:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 4e3) * __ms;
 168:/usr/lib/avr/include/util/delay.h **** 	if (__tmp < 1.0)
 169:/usr/lib/avr/include/util/delay.h **** 		__ticks = 1;
 170:/usr/lib/avr/include/util/delay.h **** 	else if (__tmp > 65535)
 171:/usr/lib/avr/include/util/delay.h **** 	{
 172:/usr/lib/avr/include/util/delay.h **** 		//	__ticks = requested delay in 1/10 ms
 173:/usr/lib/avr/include/util/delay.h **** 		__ticks = (uint16_t) (__ms * 10.0);
 174:/usr/lib/avr/include/util/delay.h **** 		while(__ticks)
 175:/usr/lib/avr/include/util/delay.h **** 		{
 176:/usr/lib/avr/include/util/delay.h **** 			// wait 1/10 ms
 177:/usr/lib/avr/include/util/delay.h **** 			_delay_loop_2(((F_CPU) / 4e3) / 10);
 178:/usr/lib/avr/include/util/delay.h **** 			__ticks --;
 179:/usr/lib/avr/include/util/delay.h **** 		}
 180:/usr/lib/avr/include/util/delay.h **** 		return;
 181:/usr/lib/avr/include/util/delay.h **** 	}
 182:/usr/lib/avr/include/util/delay.h **** 	else
 183:/usr/lib/avr/include/util/delay.h **** 		__ticks = (uint16_t)__tmp;
 184:/usr/lib/avr/include/util/delay.h **** 	_delay_loop_2(__ticks);
 185:/usr/lib/avr/include/util/delay.h **** #endif
 186:/usr/lib/avr/include/util/delay.h **** }
 187:/usr/lib/avr/include/util/delay.h **** 
 188:/usr/lib/avr/include/util/delay.h **** /**
 189:/usr/lib/avr/include/util/delay.h ****    \ingroup util_delay
 190:/usr/lib/avr/include/util/delay.h **** 
 191:/usr/lib/avr/include/util/delay.h ****    Perform a delay of \c __us microseconds, using _delay_loop_1().
 192:/usr/lib/avr/include/util/delay.h **** 
 193:/usr/lib/avr/include/util/delay.h ****    The macro F_CPU is supposed to be defined to a
 194:/usr/lib/avr/include/util/delay.h ****    constant defining the CPU clock frequency (in Hertz).
 195:/usr/lib/avr/include/util/delay.h **** 
 196:/usr/lib/avr/include/util/delay.h ****    The maximal possible delay is 768 us / F_CPU in MHz.
 197:/usr/lib/avr/include/util/delay.h **** 
 198:/usr/lib/avr/include/util/delay.h ****    If the user requests a delay greater than the maximal possible one,
 199:/usr/lib/avr/include/util/delay.h ****    _delay_us() will automatically call _delay_ms() instead.  The user
 200:/usr/lib/avr/include/util/delay.h ****    will not be informed about this case.
 201:/usr/lib/avr/include/util/delay.h **** 
 202:/usr/lib/avr/include/util/delay.h ****    If the avr-gcc toolchain has __builtin_avr_delay_cycles(unsigned long)
 203:/usr/lib/avr/include/util/delay.h ****    support, maximal possible delay is 4294967.295 us/ F_CPU in MHz. For
 204:/usr/lib/avr/include/util/delay.h ****    values greater than the maximal possible delay, overflow results in
 205:/usr/lib/avr/include/util/delay.h ****    no delay i.e., 0us.
 206:/usr/lib/avr/include/util/delay.h ****   
GAS LISTING  			page 135


 207:/usr/lib/avr/include/util/delay.h ****    Conversion of __us into clock cycles may not always result in integer.
 208:/usr/lib/avr/include/util/delay.h ****    By default, the clock cycles rounded up to next integer. This ensures that
 209:/usr/lib/avr/include/util/delay.h ****    the user gets atleast __us microseconds of delay.
 210:/usr/lib/avr/include/util/delay.h **** 
 211:/usr/lib/avr/include/util/delay.h ****    Alternatively, user can define __DELAY_ROUND_DOWN__ and __DELAY_ROUND_CLOSEST__
 212:/usr/lib/avr/include/util/delay.h ****    to round down and round to closest integer.
 213:/usr/lib/avr/include/util/delay.h ****  
 214:/usr/lib/avr/include/util/delay.h ****    Note: The new implementation of _delay_us(double __us) with 
 215:/usr/lib/avr/include/util/delay.h ****     __builtin_avr_delay_cycles(unsigned long) support is not backward compatible.
 216:/usr/lib/avr/include/util/delay.h ****    User can define __DELAY_BACKWARD_COMPATIBLE__ to get a backward compatible delay.
 217:/usr/lib/avr/include/util/delay.h ****    Also, the backward compatible
 218:/usr/lib/avr/include/util/delay.h ****    algorithm will be chosen if the code is compiled in a <em>freestanding
 219:/usr/lib/avr/include/util/delay.h ****    environment</em> (GCC option \c -ffreestanding), as the math functions
 220:/usr/lib/avr/include/util/delay.h ****    required for rounding are not available to the compiler then.
 221:/usr/lib/avr/include/util/delay.h **** 
 222:/usr/lib/avr/include/util/delay.h ****  */
 223:/usr/lib/avr/include/util/delay.h **** void
 224:/usr/lib/avr/include/util/delay.h **** _delay_us(double __us)
 225:/usr/lib/avr/include/util/delay.h **** {
 226:/usr/lib/avr/include/util/delay.h **** 	uint8_t __ticks;
 227:/usr/lib/avr/include/util/delay.h **** 	double __tmp ; 
 228:/usr/lib/avr/include/util/delay.h **** #if __HAS_DELAY_CYCLES && defined(__OPTIMIZE__) && \
 229:/usr/lib/avr/include/util/delay.h ****   !defined(__DELAY_BACKWARD_COMPATIBLE__) &&	   \
 230:/usr/lib/avr/include/util/delay.h ****   __STDC_HOSTED__
 231:/usr/lib/avr/include/util/delay.h **** 	uint32_t __ticks_dc;
 232:/usr/lib/avr/include/util/delay.h **** 	extern void __builtin_avr_delay_cycles(unsigned long);
 233:/usr/lib/avr/include/util/delay.h **** 	__tmp = ((F_CPU) / 1e6) * __us;
 234:/usr/lib/avr/include/util/delay.h **** 
 235:/usr/lib/avr/include/util/delay.h **** 	#if defined(__DELAY_ROUND_DOWN__)
 236:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)fabs(__tmp);
 237:/usr/lib/avr/include/util/delay.h **** 
 238:/usr/lib/avr/include/util/delay.h **** 	#elif defined(__DELAY_ROUND_CLOSEST__)
 239:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(fabs(__tmp)+0.5);
 240:/usr/lib/avr/include/util/delay.h **** 
 241:/usr/lib/avr/include/util/delay.h **** 	#else
 242:/usr/lib/avr/include/util/delay.h **** 		//round up by default
 243:/usr/lib/avr/include/util/delay.h **** 		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
 244:/usr/lib/avr/include/util/delay.h **** 	#endif
 245:/usr/lib/avr/include/util/delay.h **** 
 246:/usr/lib/avr/include/util/delay.h **** 	__builtin_avr_delay_cycles(__ticks_dc);
 2388               	 .loc 6 246 0
 2389 0024 8FE1      	 ldi r24,lo8(799)
 2390 0026 93E0      	 ldi r25,hi8(799)
 2391 0028 0197      	 1:sbiw r24,1
 2392 002a 01F4      	 brne 1b
 2393 002c 00C0      	 rjmp .
 2394 002e 0000      	 nop
 2395               	.LBE106:
 2396               	.LBE105:
 300:RNDISEthernet.c **** 		UpdateServer();
 2397               	 .loc 1 300 0
 2398 0030 0E94 0000 	 call UpdateServer
 2399               	.LVL61:
 301:RNDISEthernet.c **** 		cyc++;
 2400               	 .loc 1 301 0
 2401 0034 CF5F      	 subi r28,lo8(-(1))
 2402               	.LVL62:
GAS LISTING  			page 136


 302:RNDISEthernet.c **** 		if( (cyc & 0x7f) == 0 )
 2403               	 .loc 1 302 0
 2404 0036 8C2F      	 mov r24,r28
 2405 0038 8F77      	 andi r24,lo8(127)
 2406 003a 01F4      	 brne .L59
 2407               	.LBB107:
 309:RNDISEthernet.c **** 			PORTD |= _BV(6);
 2408               	 .loc 1 309 0
 2409 003c 5E9A      	 sbi 0xb,6
 310:RNDISEthernet.c **** 			TickServer();
 2410               	 .loc 1 310 0
 2411 003e 0E94 0000 	 call TickServer
 2412               	.LVL63:
 311:RNDISEthernet.c **** 			TickTCP();
 2413               	 .loc 1 311 0
 2414 0042 0E94 0000 	 call TickTCP
 2415               	.LVL64:
 312:RNDISEthernet.c **** 			PORTD &= ~_BV(6);
 2416               	 .loc 1 312 0
 2417 0046 5E98      	 cbi 0xb,6
 2418 0048 00C0      	 rjmp .L59
 2419               	.LBE107:
 2420               	 .cfi_endproc
 2421               	.LFE129:
 2423               	 .comm readsofar,2,1
 2424               	 .comm totaldatalen,2,1
 2425               	 .comm circ_buffer,64,1
 2426               	.global circ_buffer_at
 2427               	 .section .bss
 2430               	circ_buffer_at:
 2431 0000 00        	 .zero 1
 2432               	.global incirc
 2435               	incirc:
 2436 0001 00        	 .zero 1
 2437               	 .comm disable,1,1
 2438               	.global MyMask
 2439               	 .data
 2442               	MyMask:
 2443 0000 FF        	 .byte -1
 2444 0001 FF        	 .byte -1
 2445 0002 FF        	 .byte -1
 2446 0003 00        	 .byte 0
 2447               	.global MyIP
 2450               	MyIP:
 2451 0004 C0        	 .byte -64
 2452 0005 A8        	 .byte -88
 2453 0006 37        	 .byte 55
 2454 0007 F3        	 .byte -13
 2455               	.global MyMAC
 2458               	MyMAC:
 2459 0008 02        	 .byte 2
 2460 0009 00        	 .byte 0
 2461 000a 02        	 .byte 2
 2462 000b 00        	 .byte 0
 2463 000c 02        	 .byte 2
 2464 000d 00        	 .byte 0
 2465               	.global my_server_name
GAS LISTING  			page 137


 2468               	my_server_name:
 2469 000e 68        	 .byte 104
 2470 000f 69        	 .byte 105
 2471 0010 00        	 .byte 0
 2472               	 .comm bytespushed,2,1
 2473               	.global lastconnection
 2476               	lastconnection:
 2477 0011 FF        	 .byte -1
 2478               	 .text
 2479               	.Letext0:
 2480               	 .file 7 "/usr/lib/avr/include/stdint.h"
 2481               	 .file 8 "./LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2482               	 .file 9 "/usr/lib/avr/include/stdio.h"
 2483               	 .file 10 "./LUFA/Drivers/USB/Core/AVR8/../Device.h"
 2484               	 .file 11 "./LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 2485               	 .file 12 "tcp_awful.h"
 2486               	 .file 13 "../dumbcraft/dumbcraft.h"
 2487               	 .file 14 "./LUFA/Drivers/USB/Core/USBTask.h"
 2488               	 .file 15 "myRNDIS.h"
 2489               	 .file 16 "iparpetc.h"
 2490               	 .file 17 "./LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.h"
 2491               	 .file 18 "./LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.h"
 2492               	 .file 19 "./LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
GAS LISTING  			page 138


DEFINED SYMBOLS
                            *ABS*:0000000000000000 RNDISEthernet.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:1523   .text:0000000000000000 HandleUDP
    {standard input}:1541   .text:0000000000000004 TCPReceiveSyn
    {standard input}:1596   .text:0000000000000028 TCPConnectionClosing
    {standard input}:1615   .text:000000000000002e CanSend
    {standard input}:1634   .text:0000000000000034 SendStart
                            *COM*:0000000000000002 bytespushed
    {standard input}:2476   .data:0000000000000011 lastconnection
                            *COM*:0000000000000001 disable
    {standard input}:1658   .text:0000000000000048 GetCurrentCircHead
    {standard input}:2430   .bss:0000000000000000 circ_buffer_at
    {standard input}:1676   .text:0000000000000050 UnloadCircularBufferOnThisClient
                            *COM*:0000000000000040 circ_buffer
    {standard input}:1768   .text:00000000000000bc StartupBroadcast
    {standard input}:2435   .bss:0000000000000001 incirc
    {standard input}:1785   .text:00000000000000c4 DoneBroadcast
    {standard input}:1801   .text:00000000000000ca extSbyte
    {standard input}:1906   .text:0000000000000162 EndSend
    {standard input}:1934   .text:0000000000000178 ForcePlayerClose
    {standard input}:1965   .text:0000000000000188 Rbyte
                            *COM*:0000000000000002 readsofar
                            *COM*:0000000000000002 totaldatalen
    {standard input}:1998   .text:00000000000001b4 CanRead
    {standard input}:2024   .text:00000000000001d0 TCPReceiveData
    {standard input}:2061   .text:00000000000001ee SetupHardware
    {standard input}:2117   .text:0000000000000224 EVENT_USB_Device_Connect
    {standard input}:2131   .text:0000000000000226 EVENT_USB_Device_Disconnect
    {standard input}:2145   .text:0000000000000228 EVENT_USB_Device_ConfigurationChanged
    {standard input}:2188   .text:0000000000000246 EVENT_USB_Device_ControlRequest
    {standard input}:2306   .text:00000000000002f4 RNDIS_Task
    {standard input}:2337   .text.startup:0000000000000000 main
    {standard input}:2442   .data:0000000000000000 MyMask
    {standard input}:2450   .data:0000000000000004 MyIP
    {standard input}:2458   .data:0000000000000008 MyMAC
    {standard input}:2468   .data:000000000000000e my_server_name
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
et_pop16
GetFreeConnection
AddPlayer
RemovePlayer
TCPCanSend
ETsendplace
ETbuffer
__mulhi3
TCPs
StartTCPWrite
EndTCPWrite
RequestClosure
et_pop8
GAS LISTING  			page 139


GotData
USB_Init
Serial_CreateStream
Endpoint_ConfigureEndpoint_Prv
USB_ControlRequest
RNDISMessageBuffer
Endpoint_Read_Control_Stream_LE
ProcessRNDISControlMessage
MessageHeader
Endpoint_Write_Control_Stream_LE
USB_DeviceState
HandleUSB
et_init
InitTCP
InitDumbcraft
USB_USBTask
UpdateServer
TickServer
TickTCP
__do_copy_data
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "Descriptors.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.8bcc7a953b47e8fc,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006X\2404#\003+\003"
  10      6062 C006 
  10      58A0 3423 
  10      032B 0300 
  11 0010 00        	 .string ""
  12 0011 EE00      	 .string "\356"
  13 0013 0F        	 .ascii "\017"
  14               	 .text
  15               	 .section .gnu.lto_.inline.8bcc7a953b47e8fc,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b\300\006\344\2414#\003\203\f\027##\210f`\346\275\300\313\300\336\241\316\304\240r%\221\005,\r"
  16      6062 C006 
  16      E4A1 3423 
  16      0383 0C17 
  16      2323 8866 
  17 0026 2E11 0350 	 .ascii ".\021\003P"
  18               	 .text
  19               	 .section .gnu.lto_.pureconst.8bcc7a953b47e8fc,"",@progbits
  20 0000 789C 6362 	 .string "x\234cb`b`f\200"
  20      6062 6066 
  20      8000 
  21 000a 4606 2900 	 .string "F\006)"
  22 000e 00        	 .string ""
  23 000f 8500      	 .string "\205"
  24 0011 23        	 .ascii "#"
  25               	 .text
  26               	 .section .gnu.lto_CALLBACK_USB_GetDescriptor.8bcc7a953b47e8fc,"",@progbits
  27 0000 789C BD95 	 .string "x\234\275\225Mh\\U\024\200\317\271\357\377\315_b\272\320M\b\025\021Q\244n\334\265Up-\212\202E+\245fF\351\360\212\303L\006\333t\221\227fJ]\3246\326\b\3016\322P\265\235$M\002v\241Fp\026\205\232\332LQ\350\"\352b\026.\322.\204*A\214\342x\356\317{\363\346%\323\f.\f\344\2367\347\234{~\276\373\307\200A\374o\224\377\273"
  27      4D68 5C55 
  27      1480 CFB9 
  27      EFFF CD5F 
  27      62BA D04D 
  28 0074 8324 D105 	 .string "\203$\321\005d\343uR\330Lw\256\365\201okb\324\305hH\r:\322E\017>\f\345k\212\321\022\243-5\201\213\025|\330\301\207\203\310?"
  28      64E3 7552 
  28      D84C 77AE 
  28      F581 6F6B 
  28      62D4 C568 
  29 00a3 6184 69BA 	 .ascii "a\204i\272aZ\244\031\331\217\274${'L\373\376\331\306\211\273"
  29      615A A419 
  29      D98F BC24 
  29      7B27 4CFB 
  29      FED9 C689 
  30 00b8 F7F0 84DF 	 .ascii "\367\360\204\337\360\307\375\177\232#\350!U\337\213\360&\302"
  30      F0C7 FD7F 
  30      9A23 E821 
  30      55DF 8BF0 
  30      26C2 
  31 00ca 6BF4 037B 	 .ascii "k\364\003{\204`\261\216\344\324\332\017u6\351Wj\315\346^\017"
  31      8460 B18E 
GAS LISTING  			page 2


  31      E4D4 DA0F 
  31      7536 E957 
  31      6ACD E65E 
  32 00df 3506 0F75 	 .ascii "5\006\017u9\355\3033\023\206\277\350\277\3537\233#bb\177w\023"
  32      39ED C333 
  32      1386 BFE8 
  32      BFEB 379B 
  32      2362 627F 
  33 00f5 6946 0D79 	 .ascii "iF\ry\231Mr\321\031<\332\232f\313i\270e\276\363\267\"ef\3613"
  33      994D 72D1 
  33      193C DA9A 
  33      66CB 69B8 
  33      65BE F3B7 
  34 010e 64FF 215D 	 .ascii "d\377!]\026/G\346\3357\337\325\377+\337\002\2535\232\315\233"
  34      162F 47E6 
  34      DD37 DFD5 
  34      FF2B DF02 
  34      AB35 9ACD 
  35 0123 BF57 7EDC 	 .ascii "\277W~\334\263\003!\213\323\270\223V/\213\027IjX@\320\301C\303"
  35      B303 218B 
  35      D3B8 9356 
  35      2F8B 1749 
  35      6A58 40D0 
  36 013a A0C1 34F9 	 .ascii "\240\3014\371`\221\355S\262\331$/\221t\224\257K\262J2Ar\206d"
  36      6091 ED53 
  36      B2D9 242F 
  36      9174 94AF 
  36      4BB2 4A32 
  37 0152 52E9 5324 	 .ascii "R\351S$gI\246I\316\221\314(}/\305\306>\036\233\2120\240\342\373"
  37      6749 A649 
  37      CE91 CC28 
  37      7D2F C5C6 
  37      3E1E 9B8A 
  38 016a E303 BC87 	 .ascii "\343\003\274\207\361"
  38      F1
  39 016f B3B5 A5FA 	 .string "\263\265\245\372\204\336Z[\213\301\256n\026\211&~}\272\005\215\246\355\335n\232\354V\326\003\334\227\376^\241\221o\367}D\216\244\266\002c\363c\177\234\337\237\305+Tj\036\365<j<\226i\223\3632\034\257=&-Y\234\247(CP\242\324y\216\376\212\350\214\273\\\370\330\n|\026#>Z\324\247q\371z\350\304\213\342) \230_\rM\027\225I\343\246\0258\376\353\330\302\024\013J3(/\300M0B\305{pj\264\342\367x\310\213\205\267P\356\031\251\255\375T\247@6\217f\241\260jQ\353o\351\300\310\204Q\217\0327B\243&\214F\004\352>\212s\255O\373\216n\016Y\207\b\314[\234?\331\326\3421\330\360'}\177\267\207N\001\315\240\331\306\302\311M\335\032\017\204\261\365xl]\"\372\252Ch\267\200V\030zi\213\320{\302\320F<\264\301\021\217-=\f\204\262O-{\242\211\001\371\277\246\364"
  39      84DE 5A5B 
  39      8BC1 AE6E 
  39      1689 267E 
  39      7DBA 058D 
  40 0270 B449 0E6D 	 .ascii "\264I\016m\344\315\373\222\177\377"
  40      E4CD FB92 
  40      7FFF 
  41 027a 160B F849 	 .string "\026\013\370I\253\035\265Nf\332\227\305\211\032\0273\355\313\342\266\2217\341\236\336\326\202-\033_\276\276\025\236\027=L\0260\001\341^\252\366\253\203(\217\270<\340\374\230\250}\232G\213O}\320\303\324\3430\303\273\263\224LS\234\234:]9\214\034\263e\240\355\371\215\310\314C\346y\307\365@\307\035_\320\370S\247\311\367\256\037^\237\362'\237\3610#\323q.\355\366\203\322\336\243\312\211\347\270$r\330\252\237\341`9\234\274$\301\242\313\237Wd\211\233\025\347\346\310]\265\322\031[\262\205\355\313\026\266\252\3006\023\307\346v\306\226\354\214\355\206\310\\\025\245\272\n\333\215n\260%\266\301\346\306s\314\210\034\2118\266\244\320m\302\226\f\260\331ql\256\304\266\332\031[\252\205\355N\013\333\254\3006\027\307\226\352\214-\325\031\333m\221yV\224\232R\330nw\203-\275\r\266T<\307\234\310\221\216c\313\b\335&l\231"
  41      AB1D B54E 
  41      66DA 97C5 
  41      891A 1733 
  41      EDCB E2B6 
  42 037b 9B23 1E96 	 .ascii "\233#\036\226(7&\270\331\020\372F\024\323B\201\"\311\362\027"
  42      2837 26B8 
  42      D910 FA46 
  42      14D3 4281 
  42      22C9 F217 
  43 038f 1B77 54D4 	 .ascii "\033wT\324s\360\321\350\270\357\033\364L\344\261\227\337\b\275"
  43      73F0 D1E8 
  43      B8EF 1BF4 
  43      4CE4 B197 
GAS LISTING  			page 3


  43      DF08 BD
  44 03a2 20CB 24D7 	 .ascii " \313$\327\357a\364\302]+\250G4\263\n\250\336\024vj\375\210\\"
  44      EF61 F4C2 
  44      5D2B A847 
  44      34B3 0AA8 
  44      DE14 766A 
  45 03b9 93DA CFE9 	 .ascii "\223\332\317\351\360\362\325\276\325\224r\375t&\2747\365P\373"
  45      F0F2 D5BE 
  45      D594 72FD 
  45      7426 BC37 
  45      F550 FB
  46 03cc C199 1DE1 	 .ascii "\301\231\035\341ua\256i*\226Q)+\373\347\312\316!\331k\301\254"
  46      7561 AE69 
  46      2A96 5129 
  46      2BFB E7CA 
  46      CE21 D96B 
  47 03e2 734A CBB7 	 .ascii "sJ\313\267\214\265\246\255\002S\257\027\233(\253\233]\373{\275"
  47      8CB5 A6AD 
  47      0253 AF17 
  47      9B28 AB9B 
  47      5DFB 7BBD 
  48 03f6 A06E 62FD 	 .ascii "\240nb\375\352;t(\315\271?\217(/c\242L\334\354O\216\321\246\263"
  48      EA3B 7428 
  48      CDB9 3F8F 
  48      282F 63A2 
  48      4CDC EC4F 
  49 040e 7E39 CA5F 	 .ascii "~9\312_g\344\360xG\351\347r\245\301\342\241\302\320\333\305\322"
  49      67E4 F078 
  49      47E9 E772 
  49      A5C1 E2A1 
  49      C2D0 DBC5 
  50 0423 9383 603D 	 .ascii "\223\203`=\233\315\026s\245\222\376\322\241\341\234}\340\300"
  50      9BCD 1673 
  50      A592 FED2 
  50      A1E1 9C7D 
  50      E0C0 
  51 0435 41FA F9D4 	 .ascii "A\372\371\324\323\364A\312\2627\024\361~\371h!\327\323\372\371"
  51      D3F4 41CA 
  51      B237 14F1 
  51      7EF9 6821 
  51      D7D3 FAF9 
  52 0449 7CF9 F01B 	 .ascii "|\371\360\033\271b\322+\034\036xd\327\023\003\257\272\016h\273"
  52      B962 D22B 
  52      1C1E 7864 
  52      D713 03AF 
  52      BA0E 68BB 
  53 045d 8BC0 86E1 	 .ascii "\213\300\206\341_\354\377i\203"
  53      5FEC FF69 
  53      83
  54               	 .text
  55               	 .section .gnu.lto_.symbol_nodes.8bcc7a953b47e8fc,"",@progbits
  56 0000 789C 2DC5 	 .string "x\234-\305\261\r\300 \f"
  56      B10D C020 
  56      0C00 
  57 000a C1B7 C11B 	 .ascii "\301\267\301\033\261\237[*\224\311\262\002\b\310\036\304\022"
  57      B19F 5B2A 
  57      94C9 B202 
GAS LISTING  			page 4


  57      08C8 1EC4 
  57      12
  58 001b D79C A214 	 .ascii "\327\234\242\024.\375px^poUl\2029\266\220h\243Q'E\203\374\307"
  58      2EFD 7078 
  58      5E70 6F55 
  58      6C82 39B6 
  58      9068 A351 
  59 0034 016C 940C 	 .ascii "\001l\224\f1"
  59      31
  60               	 .text
  61               	 .section .gnu.lto_.refs.8bcc7a953b47e8fc,"",@progbits
  62 0000 789C 6362 	 .string "x\234cb`b\020f\200"
  62      6062 1066 
  62      8000 
  63 000a 0E06 2646 	 .string "\016\006&F&&&f&\026&V \213\231\211\211\001"
  63      2626 2666 
  63      2616 2656 
  63      208B 9989 
  63      8901 00
  64 001d 0486 00   	 .string "\004\206"
  65 0020 45        	 .ascii "E"
  66               	 .text
  67               	 .section .gnu.lto_.decls.8bcc7a953b47e8fc,"",@progbits
  68 0000 789C B55A 	 .string "x\234\265Zkp\024E\036\357\236\335\274x\204$\007\030\260J\243\245w\224u\225\215\226uG\325Ui\342\346\320\324\001RD\374p~X\227\235\001\267n\263\033wg\301\273\017\307$\032\213\363\024B\020\b\242I\020#b\371 \006\220\003\204\225\022\360D\r\206\030\024\257b\340<D@\r\250w\274d\257_3\323=\314L&9o\252\272\263=\323\375\373?\372\367\357\177Og$ \201\223"
  68      6B70 1445 
  68      1EEF 9EDD 
  68      BC78 8424 
  68      0718 B04A 
  69 007c 802C BACE 	 .string "\200,\272\316\375\022\200\177\346"
  69      FD12 807F 
  69      E600 
  70 0086 7407 803B 	 .ascii "t\007\200;\200yAT"
  70      8079 4154 
  71 008e D6A3 821E 	 .string "\326\243\202\036\201\335\250\f\242r\002\2253\250\024C \\\270_\t*U\250\024\2422\016\225\r\250\274\306\306\373Q\331\316\360\237FcW\241\262\025\375^\215\376\256A\245\025\225\265\250\264\241\262\023P]\366\243\362\001\247\007\306\335\202\312\016T:\320\315\365\250<\217\312\006h\352\364\002*\235\250\274\bE\235\371\353z\320\246u\f\016v\236\370\b6i\203Z&\233\275\023L\006\2534|5h\225\017\027\200\245\232\326\250u4h\023[\221\314\007\240\f\013\013@\021\3711\256\200\250v3xA\323\232\007\017\017-/\3274\277\f7@|\277\002\202[\300&\204\322\254i+&\200\253/\031\346\024\\\325\226\341\213\360\026@\345\220\307\354G6\3533\204\347\353\302!\360a\005$P\311~\321.\376\002\324B\027{x\017\024\204<\017'\003\343)\276\201\325e\rf\254\266B\033\307\031\313\311\323\215\315|\237\207n\275F\f}"
  71      81DD A80C 
  71      A272 0295 
  71      33A8 1443 
  71      205C B85F 
  72 018f 1A5A 5340 	 .ascii "\032ZS@h1\013\212f\301\002\363G\026\362\272\214\005O\230\276"
  72      6831 0B8A 
  72      66C1 02F3 
  72      4716 F2BA 
  72      8C05 4F98 
  73 01a4 9661 D558 	 .ascii "\226a\325X[wc\3107\340XA\304<\237\321\220@DT\350&\260AknA3|,"
  73      5B77 63C8 
  73      37E0 5841 
  73      C43C 9FD1 
  73      9040 4454 
  74 01c2 B749 7BD0 	 .ascii "\267I{\320\230\317\016\307\371\224\341\013\360f\017\323!\201"
  74      98CF 0EC7 
  74      F994 E10B 
  74      F066 0FD3 
  74      2181 
  75 01d4 3F63 49EB 	 .ascii "?cI\353\341\365\0160[\261\251D|cf\353\207[\375Z\205\341\340\016"
  75      E1F5 0E30 
  75      5BB1 A944 
  75      7C63 66EB 
GAS LISTING  			page 5


  75      875B FD5A 
  76 01ec 4707 CBF0 	 .ascii "G\007\313\360u\"}\030\257I\240\tZ\244[`\266\033\322[2o.\333\225"
  76      7522 7D18 
  76      AF49 A009 
  76      5AA4 5B60 
  76      B61B D25B 
  77 0205 A355 18FE 	 .ascii "\243U\030\376\355\030\201\177%\360\244U\220\305\314\235\264\363"
  77      ED18 817F 
  77      25F0 A455 
  77      90C5 CC9D 
  77      B4F3 
  78 0217 CF41 2742 	 .ascii "\317A'B\317t/{*\247\251\202\322\n\270\214c\222\272\241\321\300"
  78      CF74 2F7B 
  78      2AA7 A982 
  78      D20A B88C 
  78      6392 BAA1 
  79 022d D78D 60BD 	 .ascii "\327\215`\2756t(\363\331\301\215P\333\214\202'\233]R\002V\340"
  79      3674 28F3 
  79      D9C1 8D50 
  79      DB8C 8227 
  79      9B5D 5202 
  80 0243 60EC D0F6 	 .ascii "`\354\320\366j\360a\273\031c<o\203\214\350,\036\327\035\354\273"
  80      6AF0 61BB 
  80      1963 3C6F 
  80      838C E82C 
  80      1ED7 1DEC 
  81 0258 F665 4DCB 	 .ascii "\366eM\3137\3067:\214\227a\006\372P\275\027\371\335cg\254\371"
  81      37C6 373A 
  81      8C97 6106 
  81      FA50 BD17 
  81      F9DD 6367 
  82 026e 3BB0 84CD 	 .ascii ";\260\204\315\020\021\250e.\235\036\204d\001\300O\200\300A\341"
  82      1011 A865 
  82      2E9D 1E84 
  82      6401 C04F 
  82      80C0 41E1 
  83 0282 BA01 74E0 	 .ascii "\272\001t\340\356\331\323'}h\311yP\027\331\340$\222\330'\303"
  83      EED9 D327 
  83      7D68 C979 
  83      5017 D9E0 
  83      2492 D827 
  84 0297 B775 4FB1 	 .ascii "\267uO\261\020lo\231\244I2<\200\204I\340\b\024I?,\250\f\337e"
  84      106C 6F99 
  84      A449 323C 
  84      8084 49E0 
  84      0814 493F 
  85 02b0 761C B4DA 	 .ascii "v\034\264\332\261\262\245\020\003\037\364`EcfM\3572\277\266\271"
  85      B1B2 A510 
  85      031F F460 
  85      4563 664D 
  85      EF32 BFB6 
  86 02c5 425F 0CBE 	 .ascii "B_\f\276%z\340\241v\244d?\351\305:\210p\255-Rk\251\016\366\275"
  86      257A E0A1 
  86      76A4 643F 
  86      E9C5 3A88 
  86      70AD 2D52 
  87 02de 1730 6803 	 .ascii "\0270h\003fw\361\206\312\360}\022c\037\300\033P\335\203j\343"
GAS LISTING  			page 6


  87      6677 F186 
  87      CAF0 7D12 
  87      631F C01B 
  87      50DD 836A 
  88 02f3 92C0 0522 	 .ascii "\222\300\005\"\365\035S\252@\333\341L\3202\253\276\031\202\r"
  88      F51D 53AA 
  88      40DB E14C 
  88      D032 ABBE 
  88      1982 0D
  89 0306 685E 8B41 	 .ascii "h^\213A3\245\222\206\246\200\004\276\346%\215\254h\331\337\004"
  89      33A5 9286 
  89      A680 04BE 
  89      E625 8DAC 
  89      68D9 DF04 
  90 031a 1FD5 2A   	 .ascii "\037\325*"
  91 031d 65D8 479C 	 .string "e\330G\234\260I\262\256\257~\313\372\352\027W\n\324\324\264+Yr\301%\354N6\013\371!\207a1\371%\250E4qZ\021\216\260U]\260\237:\254K\322\035\006\370.\222\333\304\350\363\260\217\314\303~2\017\275\342<\354\271\312pS\004wC\357\342\200r\304@a\232\224\351\372\371\365\205\343\204\004M\310\243,\312n\007\335\332\322L\231\f\367\020\031\030\333\270u\200\334\302\344a\013\262\237\261\2105}\200\351AG\024Q\177\033\236`S\362\227|,\207.x\203\377\332}\301\217H\243\341\231[\002\251T\t\234\263*\177\b\352\332O\325\227\205\177@n5=6\032\355K\035\264\277\0164\371\236\323Z+\r\272\260\305\271ev\253F6J\272\232m>\253\232\222\256\346-\266j~9\0325\2479\252\371\212\255\232;\232P\3405h\332e\224\254\355sH\263\341\315\022\207Evp\335_\373:a\243Vi\237\027x"
  91      B049 B2AE 
  91      AF7E CBFA 
  91      EA17 570A 
  91      D4D4 B42B 
  92 041e 197E 43B2 	 .ascii "\031~C\262\310\267\216Y\344\352\336X\342Y\353\362\273f%Y~\317"
  92      C8B7 8E59 
  92      E4EA DE58 
  92      E259 EBF2 
  92      BB66 2559 
  93 0434 7A4A 22EB 	 .ascii "zJ\"\353\016\267\345\220\345\227\272\353#(1\310\321\254]\215"
  93      0EB7 E590 
  93      E597 BAEB 
  93      2328 31C8 
  93      D1AC 5D8D 
  94 0448 99F6 95CB 	 .ascii "\231\366\225\313)\034\335\303~L&v\0308\2738gp\333Vr\253\371\t"
  94      291C DDC3 
  94      7E4C 2676 
  94      1838 BB38 
  94      6770 DB56 
  95 0460 2B98 DD6A 	 .ascii "+\230\335j\356w\006\333\316\203\235\361\002\226\343\f\266\203"
  95      EE77 06DB 
  95      CE83 9DF1 
  95      0296 E30C 
  95      B683 
  96 0472 07FB C10B 	 .ascii "\007\373\301\013X\2563\330n\036\354\212\027\260<g\260\336\303"
  96      58AE 33D8 
  96      6E1E EC8A 
  96      17B0 3C67 
  96      B0DE C3
  97 0485 048C 4EC0 	 .ascii "\004\214N\300\223~\017\023\220\357\f\326\307\203\255\362\002"
  97      937E 0F13 
  97      90EF 0CD6 
  97      C783 ADF2 
  97      02
  98 0496 36C6 19AC 	 .ascii "6\306\031\254\237\007k\367\0026\316\031l\200\367\331\253V0;\237"
  98      9F07 6BF7 
  98      0236 CE19 
  98      6C80 F7D9 
  98      AB56 303B 
  99 04ab 153A 835D 	 .ascii "\025:\203]\344\301\366z\001\233\340\f\326\262\232\003\353\365"
  99      E4C1 F67A 
GAS LISTING  			page 7


  99      019B E00C 
  99      D6B2 9A03 
  99      EBF5 
 100 04bd 0256 E4C2 	 .ascii "\002V\344\3023\036\354\013/`\3056`\306\245\247\315s$m~G\022\336"
 100      331E EC0B 
 100      2F60 C536 
 100      60C6 A5A7 
 100      CD73 246D 
 101 04d5 F7A4 FE37 	 .ascii "\367\244\3767\251\317\223\372\"\251/\223\372\n\2515\t\327\215"
 101      A9CF 93FA 
 101      22A9 2F93 
 101      FA0A A935 
 101      09D7 8D
 102 04e8 A47E 8CD4 	 .ascii "\244~\214\324\217\223z)\251\237\220\204\224y\311oM\274g\255\211"
 102      8F93 7A29 
 102      A99F 9084 
 102      9479 C96F 
 102      4DBC 67AD 
 103 04fd F7AC 9078 	 .ascii "\367\254\220x\377Oz\254\314\261\244\025\233\365ZH+OI|Z9\344\223"
 103      FF4F 7AAC 
 103      CCB1 A415 
 103      9BF5 5A48 
 103      2B4F 497C 
 104 0515 E1D7 44CF 	 .ascii "\341\327D\317\357\\\363J\211\230W `\266\260W\275f\211Y\305\236"
 104      EF5C F34A 
 104      8998 5720 
 104      60B6 B057 
 104      BD66 8959 
 105 052b 4BCC 3CE3 	 .ascii "K\314<\343\245\214\332\3115/\233\315|f9\303:\235\307|\300\332"
 105      A58C DAC9 
 105      352F 9BCD 
 105      7C66 39C3 
 105      3A9D C77C 
 106 0541 EF57 326F 	 .ascii "\357W2o\2606dn1T\241\376\341$/\225\004QO\360\235\215\315D\323"
 106      B036 646E 
 106      3154 A1FE 
 106      E124 2F95 
 106      0451 4FF0 
 107 055a 89A1 1C73 	 .ascii "\211\241\034s3a$\243\f\237\214\206|\272/\361)\f\313vkOg\2466"
 107      3361 24A3 
 107      0C9F 8C86 
 107      7CBA 2FF1 
 107      290C CB76 
 108 0573 71C9 4E73 	 .ascii "q\311Ns\036!\303\225\022\227\350\\z\342\276\253$\353;\306\376"
 108      1E21 C395 
 108      1297 E85C 
 108      7AE2 BEAB 
 108      24EB 3BC6 
 109 0588 F138 C9E1 	 .ascii "\3618\311\341\373\303'\2715\217\277\212\336\006+\354\263\352"
 109      FBC3 27B9 
 109      358F BF8A 
 109      DE06 2BEC 
 109      B3EA 
 110 059a 3DBA AC02 	 .ascii "=\272\254\002\347\034>\260\021\347p\031\266Jx\273\322\235#\362"
 110      E71C 3EB0 
 110      11E7 7019 
 110      B64A 78BB 
GAS LISTING  			page 8


 110      D29D 23F2 
 111 05ae 7B58 5C19 	 .ascii "{X\\\031\256\225h\262~\326jGW\033I\326\317z\262c\353\200M\262"
 111      AE95 68B2 
 111      7ED6 6A47 
 111      571B 49D6 
 111      CF7A B263 
 112 05c6 C643 4797 	 .ascii "\306CG\227\254\377\326&$\353O\211Y\303\300\271$\353\335m\334"
 112      ACFF D626 
 112      24EB 4F89 
 112      59C3 C0B9 
 112      24EB DD6D 
 113 05db 5235 6405 	 .ascii "R5d\005\033a\262\356\345\301\264\\\017`.\311\272\217\007{\332"
 113      1B61 B2EE 
 113      E5C1 B45C 
 113      0F60 2EC9 
 113      BA8F 077B 
 114 05f0 0B98 4BB2 	 .ascii "\013\230K\262\376\204\007{\331\013\230K\262\036\342\301vz\001"
 114      FE84 077B 
 114      D90B 984B 
 114      B21E E2C1 
 114      767A 01
 115 0603 B34B D676 	 .ascii "\263K\326v\027\3175\031>'\341\365\276\215\254\222\355\244^O\352"
 115      17CF 3519 
 115      3E27 E1F5 
 115      BE8D AC92 
 115      EDA4 5E4F 
 116 0618 0DA4 EE24 	 .ascii "\r\244\356$\365FRo\022\327\320\036\242\323*S'\216\326\036^f\321"
 116      F546 526F 
 116      12D7 D01E 
 116      A2D3 2A53 
 116      278E D61E 
 117 062f 8A30 547A 	 .ascii "\2120Tz\264Q\313\274\rG\037}GJ\3611\214\f_%\321\327\237;\342"
 117      B451 CBBC 
 117      0D47 1F7D 
 117      474A F131 
 117      8C0C 5F25 
 118 0648 E87B 8D45 	 .ascii "\350{\215E_\2275\372\326\035g'.]\236\342\257\3758=q\021\003\260"
 118      5F97 35FA 
 118      D61D 6727 
 118      2E5D 9EE2 
 118      AFFD 383D 
 119 0660 6BD4 01D8 	 .ascii "k\324\001\330}\374$|\214\340Q\002\234%\246u\271\023\300%\002"
 119      7DFC 247C 
 119      8CE0 5102 
 119      9C25 A675 
 119      B913 C025 
 120 0675 B71C 2FD3 	 .ascii "\267\034/\323\036\365\351h\ry\036\320|\316h\273\005\264\026/"
 120      1EF5 E968 
 120      0D79 1ED0 
 120      7CCE 68BB 
 120      05B4 162F 
 121 0689 686E 01CD 	 .ascii "hn\001\315\241\311\360?V\317\2154\242\005\264\013^\320\\B\272"
 121      A1C9 F03F 
 121      56CF 8D34 
 121      A205 B40B 
 121      5ED0 5C42 
 122 069e 5F40 BBE4 	 .ascii "_@\273\344\005\315%\246\217\n~[\357\305o\336\203\272\213\013"
GAS LISTING  			page 9


 122      05CD 25A6 
 122      8F0A 7E5B 
 122      EFC5 6FDE 
 122      83BA 8B0B 
 123 06b2 EA37 4850 	 .ascii "\3527HPw\223\260\335B\352m\244\336N\352\035\244\336I\352]\244"
 123      7793 B0DD 
 123      42EA 6DA4 
 123      DE4E EA1D 
 123      A4DE 49EA 
 124 06c8 7E4B 0CED 	 .ascii "~K\f\355\356<\017\241m\036\332\330\204\366y\327\320\236f\316"
 124      EE3C 0FA1 
 124      6D1E DAD8 
 124      84F6 79D7 
 124      D09E 66CE 
 125 06dc A353 685F 	 .ascii "\243Sh_\311\334\271\211\204\366\333$\264\033\362\275\2046\207"
 125      C9DC B989 
 125      84F6 DB24 
 125      B41B F2BD 
 125      8436 87
 126 06ef 2BC3 BD2C 	 .ascii "+\303\275,\264\367YC{g\017\331 \354\363\024\330{\226\333$\326"
 126      B4F7 5943 
 126      7B67 0FD9 
 126      20EC F314 
 126      D87B 96DB 
 127 0705 7DA3 8EEB 	 .ascii "}\243\216\353C\313\271U}#1j\337\250\203\272\277\207{kz\335\n"
 127      43CB B955 
 127      7D23 316A 
 127      DFA8 83BA 
 127      BF87 7B6B 
 128 071c 66A7 995D 	 .ascii "f\247\231]L\333\263i\037\307\246\375\204M\007\bS\336%\365{\""
 128      4CDB B369 
 128      1FC7 A6FD 
 128      844D 0708 
 128      53DE 25F5 
 129 0732 5F32 F916 	 .ascii "_2\371\026\276p\023a\310.q\343Kf\312\321e\034_\006\305\303e\353"
 129      BE70 1361 
 129      C82E 71E3 
 129      4B66 CAD1 
 129      651C 5F06 
 130 074a C19A 1D5F 	 .ascii "\301\232\035_\316\317\244|\371\220\246\002{\2768\343\242\215"
 130      CECF A47C 
 130      F990 A602 
 130      7BBE 38E3 
 130      A28D 
 131 075c 3AE3 4BAF 	 .ascii ":\343K\257\225/\227z\t_z=\361%\333b\303\227\336Q\363\245\331"
 131      952F 977A 
 131      095F 7A3D 
 131      F125 DB62 
 131      C397 DE51 
 132 0773 7CFD 94E1 	 .ascii "|\375\224\341\337%\013\330\b\371\262\232\177\227\275@<4\f\230"
 132      DF25 0BD8 
 132      08F9 B29A 
 132      7F97 BD40 
 132      3C34 0C98 
 133 0787 77BE F472 	 .ascii "w\276\364r|9L\370\322G\230\3621\251\373E\276<^`\341\0137\021"
 133      7C39 4CF8 
 133      D247 98F2 
GAS LISTING  			page 10


 133      31A9 FB45 
 133      BE3C 5E60 
 134 079f 86EC 6BDC 	 .ascii "\206\354k\334\370\362\356\224\377u}\371\344\367\224/G\t_\326"
 134      F8F2 EE94 
 134      FF75 7DF9 
 134      E4F7 942F 
 134      4709 5FD6 
 135 07b3 168C 787D 	 .ascii "\026\214x}\371\214\361e\300\312\2277\373\t_\006<\361e\347j\033"
 135      F98C F165 
 135      C0CA 9737 
 135      FB09 5F06 
 135      3CF1 65E7 
 136 07c9 BE0C 8C9A 	 .ascii "\276\f\214\232/\273V"
 136      2FBB 56
 137 07d0 5FC5 9781 	 .string "_\305\227\201Q\363\245\227?a\330M<4\f\230\313\236\241\217\007\353\363\002f\267e\260'\337"
 137      51F3 A597 
 137      3F61 D84D 
 137      3C34 0C98 
 137      CB9E A18F 
 138 07ef 47BE CF09 	 .ascii "G\276\317\t\371\006\t\355\216\221\3728\251\277\020)\370\225\225"
 138      F906 09ED 
 138      8E91 FA38 
 138      A9BF 1029 
 138      F895 95
 139 0802 8276 4BD6 	 .ascii "\202vK\326\265n\024<\344J\301\351\346v\300q\367\3323\225\356"
 139      B56E 143C 
 139      E44A C1E9 
 139      E676 C071 
 139      F7DA 3395 
 140 0817 5E4F 120A 	 .ascii "^O\022\n^\361DA\016W\206_1\n\236\261R\360\307/\331\356\365\214"
 140      5EF1 4441 
 140      0E57 865F 
 140      310A 9EB1 
 140      52F0 C72F 
 141 082f 2712 AE38 	 .ascii "'\022\2568e\267{=3j\026\256:5$\354^[\307@\021o\204D|\346\024"
 141      65B7 7B3D 
 141      336A 16AE 
 141      3A35 24EC 
 141      5E5B C740 
 142 084a BF6F 7AC9 	 .ascii "\277oz\311\013\232\013\0237\237\232F\320h\336\354\266\242\331"
 142      0B9A 0B13 
 142      379F 9A46 
 142      D068 DEEC 
 142      B6A2 D9
 143 085d D9EA B27B 	 .ascii "\331\352\262{\335&\350\226\361\242\233\335~\323\236\330g8b\177"
 143      DD26 E896 
 143      F1A2 9BDD 
 143      7ED3 9ED8 
 143      6738 627F 
 144 0871 4D88 FD0D 	 .ascii "M\210\375\r!\363\267\244>K\352\357H\375\203H\357\3361\026zs\274"
 144      21F3 B7A4 
 144      3E4B EAEF 
 144      48FD 8348 
 144      EFDE 3116 
 145 0888 31F4 2873 	 .ascii "1\364(s\243\367IFo\375\345\352\264\025\321nO\370\013G\304\314"
 145      A3F7 4946 
 145      6FFD E5EA 
GAS LISTING  			page 11


 145      B415 D16E 
 145      4FF8 0B47 
 146 089e AE19 38FC 	 .ascii "\256\0318\374)\325\177\364\242]\2053\326n\016k\345X\017X\277"
 146      29D5 7FF4 
 146      A25D 8533 
 146      D66E 0E6B 
 146      E558 0F58 
 147 08b3 76F3 B8EE 	 .ascii "v\363\270\356\340\325\304\301k\210;_!u\206\324\037\220\372SR"
 147      E0D5 C4C1 
 147      6B88 3B5F 
 147      2175 86D4 
 147      1F90 FA53 
 148 08c8 7F49 EAF3 	 .ascii "\177I\352\363\244\276H\352\313\242\343_\032k=\341\244\007Q\234"
 148      A4BE 48EA 
 148      CBA2 E35F 
 148      1A6B 3DE1 
 148      A407 519C 
 149 08dc 34F3 C40A 	 .ascii "4\363\304\n\374\357\362\016\030\362\230u\374\t\231\335IfV8\311"
 149      FCEF F20E 
 149      18F2 9875 
 149      FC09 99DD 
 149      4966 5638 
 150 08f1 6C46 CC6D 	 .ascii "lF\314m!\372`=\350\275zz\232E\017\005\234\0177q\206\351\341\017"
 150      21FA 603D 
 150      E8BD 7A7A 
 150      9A45 0F05 
 150      9C0F 3771 
 151 0909 2F01 3D40 	 .ascii "/\001=@\300\355\034,\235\236$\030\217\351\221\002kb\245;\305"
 151      C0ED 1C2C 
 151      9D9E 2418 
 151      8FE9 9102 
 151      6B62 A53B 
 152 091e 03C7 8D66 	 .ascii "\003\307\215f3\203\037o2\333\267\001\346\"\252\215\346\243\244"
 152      3383 1F6F 
 152      32DB B701 
 152      E622 AA8D 
 152      E6A3 A4
 153 0931 A46F 389E 	 .ascii "\244o8\2365\364c\224-\242\320mbs\273\250\341\016Q\377\235bs"
 153      35F4 6394 
 153      2DA2 D06D 
 153      6273 BBA8 
 153      E10E 51FF 
 154 0948 97D9 CCE2 	 .string "\227\331\314\342\336o\361Xl6\251r\025\3645\206\356\241\235\365\315\021\365\275\t\260\3756\247\340{\022\177z\314\310b\b\371\220\b\351s\025\342\267\021\362\261hX\277\305\220O\r\300J\272_\242\371ud\206\0343AsYR\346\354\372B8m\246\274\247\370sh\240\323\225\317Yd\236(2\007\260U\222\265\037\205l\275dm\037[8\231/\363\331\njN'\213\272\237\224p\320\225p\222H\2701\"\341\200H8`\303\267\213?\261\317$\321e\222\350\2622\321ed\360\345\237X\203\0068B\025\256\372\320\357k\207\377\"bAO\373\214/\321,\243Z\034v\003d\365v\034\265\307E\326j\307Q\370[:\247Qk\314Q\306WWN\237\252\321\257\256\320\246\237\374\377\356\240\360_4\233\217\221\330'D\231\006\356\023\"\374qf\251\201}\365\267\231\370{St\353\031\037\226\367\371X\313\247\271f\212\301\035\360\365"
 154      DE6F F158 
 154      6C36 A972 
 154      15F4 3586 
 154      EEA1 9DF5 
 155 0a49 EBAC 65B3 	 .ascii "\353\254e\263\3747C\370\326\022CL\251\270c\223\341Z\337H? z\216"
 155      FC37 43F8 
 155      D612 434C 
 155      A9B8 6393 
 155      E15A DF48 
 156 0a61 9337 8EDB 	 .ascii "\2237\216\333\215\350YO\377\\\212\330J\345;A\265\215Xx\273\203"
 156      8DE8 594F 
 156      FF5C 8AD8 
 156      4AE5 3B41 
 156      B58D 5878 
GAS LISTING  			page 12


 157 0a77 70DD 3B65 	 .ascii "p\335;e\240\0359\2569\323\210n\3371\t\350\337-\032\027}>\330"
 157      A01D 39AE 
 157      39D3 886E 
 157      DF31 09E8 
 157      DF2D 1A17 
 158 0a8e 797A 4A93 	 .ascii "yzJ\223\344\326#sn\231\226\343\212\221\2718l\217\025=\215s\212"
 158      E4D6 2373 
 158      6E99 96E3 
 158      8A91 B938 
 158      6C8F 153D 
 159 0aa5 5C7B B42E 	 .ascii "\\{\264.\037\016c\263s\017PX\255\244\"\311h\275\232H\246\312"
 159      1F0E 63B3 
 159      730F 5058 
 159      ADA4 22C9 
 159      68BD 9A48 
 160 0abb 23E0 BA40 	 .ascii "#\340\272@:\225\f\304\242\363\003\341E\311@4\036\211\245e%\220"
 160      3A95 0CC4 
 160      A2F3 03E1 
 160      45C9 4034 
 160      1E89 A565 
 161 0ad1 52E5 685C 	 .ascii "R\345h\\-\177\b\344\247\321\337[\177\025Rs\357\236=\257,\b\362"
 161      2D7F 08E4 
 161      A7D1 DF5B 
 161      7F15 5273 
 161      EF9E 3DAF 
 162 0ae8 E289 783C 	 .ascii "\342\211x<\035\213\225,\016'\343\241t<\235R\344PRI\245cj\036"
 162      1D8B 952C 
 162      0E27 E3A1 
 162      743C 9D52 
 162      E450 5249 
 163 0b00 EE3A 3DA4 	 .ascii "\356:=\244N\rV\315\234yWU\360w\241y\265w\205\356VTS`\356\342"
 163      4E0D 56CD 
 163      9C79 5755 
 163      F077 A179 
 163      B577 85EE 
 164 0b1a FBC3 B1B4 	 .ascii "\373\303\261\264\222\273\270&.+\217\024\233\017\252d\031\201"
 164      92BB B826 
 164      2E2B 8F14 
 164      9B0F AA64 
 164      1981 
 165 0b2c A472 EBC3 	 .ascii "\244r\353\303\221?(\362\255\345\201\231\363fT\005\252\223\321"
 165      913F 28F2 
 165      ADE5 8199 
 165      F366 5405 
 165      AA93 D1
 166 0b3f 454A 3215 	 .ascii "EJ2\025@8\201`\"\251\004\252\356\237;=P^\036\250Ue\336\212\207"
 166      4038 8160 
 166      22A9 04AA 
 166      EE9F 3B3D 
 166      505E 1EA8 
 167 0b58 C035 5894 	 .ascii "\3005X\224y+t\217\022\226\225dH\365\327F\377\244\370\357\373"
 167      792B 748F 
 167      1296 9564 
 167      48F5 D746 
 167      FFA4 F8EF 
 168 0b6d 63BD 924B 	 .ascii "c\275\222KoM3\314]\030\211\020\223o/\237^~\033o\270\254,@\210"
 168      6F4D 33CC 
GAS LISTING  			page 13


 168      5D18 8910 
 168      936F 2F9F 
 168      5E7E 1B6F 
 169 0b86 798B 230F 	 .ascii "y\213#\017\205\021\302\370y\361h$!+\265j2\032_h\225C\357\206"
 169      8511 C2F8 
 169      79F1 6824 
 169      212B B56A 
 169      321A 5F68 
 170 0b9e D4C2 99E1 	 .ascii "\324\302\231\341\370\302tx!\35366\024\252O&\026\326)u\241P\311"
 170      F8C2 7478 
 170      21EB 3636 
 170      14AA 4F26 
 170      16D6 2975 
 171 0bb5 AC70 3CBD 	 .ascii "\254p<\275 \034Q\323I%I\037\227V\003\005\204A\034MW\020\375\255"
 171      201C 51D3 
 171      4925 491F 
 171      9756 0305 
 171      8441 1C4D 
 172 0bcd 43AD 24FA 	 .ascii "C\255$\372\013\300\3709\311\204\234\216\250\264\333\264\231`"
 172      0BC0 F839 
 172      C984 9C8E 
 172      A8B4 DBB4 
 172      9960 
 173 0bdf 1E98 01AA 	 .ascii "\036\230\001\252P\267\271`6\250\0065\240\226\f\251F\245\f`\220"
 173      50B7 B960 
 173      36A8 0635 
 173      A096 0CA9 
 173      46A5 0C60 
 174 0bf4 3A90 40C3 	 .ascii ":\220@\303\212\220V\265\365J$\272 \032\t\253\321D<'\030\013\247"
 174      8A90 56B5 
 174      F54A 24BA 
 174      201A 09AB 
 174      D144 3C27 
 175 0c0b 52F9 B5E9 	 .ascii "R\371\265\351\371\364\007\202U\023\221Dl\374o\343r}\002MS\005"
 175      F9F4 0782 
 175      5513 9144 
 175      6CFC 6FE3 
 175      727D 024D 
 176 0c21 F64B FEFD 	 .ascii "\366K\376\375J\\N$k\252\013\230\330\232\352\361s\225\230\022"
 176      4A5C 4E24 
 176      6BAA 0B98 
 176      D89A EAF1 
 176      7395 9812 
 177 0c35 4E29 B3D3 	 .ascii "N)\263\323u\363\225\344D\213\352d\326&\230:\322Y\254U\222\321"
 177      75F3 95E4 
 177      448B EA64 
 177      D626 983A 
 177      D259 AC55 
 178 0c4b 700C 8DD0 	 .ascii "p\f\215\320\357L\246\243\357]\020L\304\027D\027\246\223D\247"
 178      EF4C A6A3 
 178      EF5D 104C 
 178      C417 4417 
 178      A693 44A7 
 179 0c5f 94D5 77D5 	 .ascii "\224\325w\325\312\242hD\t\251E\364\207\371\244P\234\333\233-"
 179      CAA2 6844 
 179      09A9 45F4 
 179      87F9 A450 
GAS LISTING  			page 14


 179      9CDB 9B2D 
 180 0c73 E304 5463 	 .ascii "\343\004Tc\246'\337\227P\3031\341\031\266q\002\271]\023W\225"
 180      A627 DF97 
 180      50C3 31E1 
 180      19B6 7102 
 180      B95D 1357 
 181 0c88 2432 4449 	 .ascii "$2DI\375L\350A\025\235$\216bV\024\321\273U*\232\213\371i\025"
 181      FD4C E841 
 181      159D 248E 
 181      6256 14D1 
 181      BB55 2A9A 
 182 0ca0 0D9D 157E 	 .ascii "\r\235\025~dNb\261\222D\017R\351\272z\3349\227v\232jQ\321\220"
 182      644E 62B1 
 182      9244 0F52 
 182      E9BA 7ADC 
 182      3997 769A 
 183 0cb8 1752 2718 	 .ascii "\027R'\030\277\251\260\242\252\030j\307\303\252R\253\250*\232"
 183      BFA9 B0A2 
 183      AA18 6AC7 
 183      C3AA 52AB 
 183      A82A 9A
 184 0ccb E542 A2A1 	 .ascii "\345B\242\241>1\251b\243\277\341\340`u0\024\f\326\230\250\277"
 184      3E31 A962 
 184      A3BF E1E0 
 184      6075 3014 
 184      0CD6 98A8 
 185 0ce0 B18B 0F3C 	 .ascii "\261\213\017<\321\001\352J\034\"\301D]]\"\036@c\311\023\332\324"
 185      D101 EA4A 
 185      1C22 C144 
 185      5D5D 221E 
 185      4063 C913 
 186 0cf6 BD89 1139 	 .ascii "\275\211\0219ug\244\343\021lM8\246{3\017QGEQS\204z\n\314\232"
 186      7567 A4E3 
 186      116C 4D38 
 186      A67B 330F 
 186      5147 4551 
 187 0d10 8487 9AFD 	 .ascii "\204\207\232\375\231\373ot\005\255\n\316\n\251\343\202\341\372"
 187      99FB 6F74 
 187      05AD 0ACE 
 187      0AA9 E382 
 187      E1FA 
 188 0d22 F0FC 682C 	 .ascii "\360\374h,\252F\225T\211\005\005\365\270\311\025\002\005!\232"
 188      AA46 9554 
 188      8905 05F5 
 188      B8C9 1502 
 188      0521 9A
 189 0d35 6B75 D2AC 	 .ascii "ku\322\254p\n\371\300\342\322\211\265\261\360\"\305z\323\"\202"
 189      700A F9C0 
 189      E2D2 89B5 
 189      B1F0 22C5 
 189      7AD3 2282 
 190 0d49 204C B1CC 	 .ascii " L\261\314\223\356u4M\372O\266\022\2151\347}\234\376\b\363\251"
 190      93EE 7534 
 190      4DFA 4FB6 
 190      128D 31E7 
 190      7D9C FE08 
 191 0d5f 784E 2216 	 .ascii "xN\"\026C\263F\244-\n\307f\325\226bA\263\023\252\341\"\275;\231"
GAS LISTING  			page 15


 191      43B3 46A4 
 191      2D0A C766 
 191      D596 6241 
 191      B313 AAE1 
 192 0d77 B76A 7EDE 	 .ascii "\267j~\336&\315\235]]S\033\252\016\253\341{\323\252\336o\242"
 192      26CD 9D5D 
 192      5D53 1BAA 
 192      0EAB E17B 
 192      D3AA DE6F 
 193 0d8c 79B7 C618 	 .ascii "y\267\306\030|\235+\351\325k\204\266\331\317\217\027\255\377"
 193      7C9D 2BE9 
 193      D56B 84B6 
 193      D9CF 8F17 
 193      ADFF 
 194 0d9e 02E8 0C35 	 .ascii "\002\350\f5Q"
 194      51
 195               	 .text
 196               	 .section .gnu.lto_.symtab.8bcc7a953b47e8fc,"",@progbits
 197 0000 4341 4C4C 	 .string "CALLBACK_USB_GetDescriptor"
 197      4241 434B 
 197      5F55 5342 
 197      5F47 6574 
 197      4465 7363 
 198 001b 00        	 .string ""
 199 001c 00        	 .string ""
 200 001d 00        	 .string ""
 201 001e 00        	 .string ""
 202 001f 00        	 .string ""
 203 0020 00        	 .string ""
 204 0021 00        	 .string ""
 205 0022 00        	 .string ""
 206 0023 00        	 .string ""
 207 0024 00        	 .string ""
 208 0025 00        	 .string ""
 209 0026 A100      	 .string "\241"
 210 0028 00        	 .string ""
 211 0029 00        	 .string ""
 212 002a 4C61 6E67 	 .string "LanguageString"
 212      7561 6765 
 212      5374 7269 
 212      6E67 00
 213 0039 00        	 .string ""
 214 003a 00        	 .string ""
 215 003b 00        	 .string ""
 216 003c 00        	 .string ""
 217 003d 00        	 .string ""
 218 003e 00        	 .string ""
 219 003f 00        	 .string ""
 220 0040 00        	 .string ""
 221 0041 00        	 .string ""
 222 0042 00        	 .string ""
 223 0043 00        	 .string ""
 224 0044 BE00      	 .string "\276"
 225 0046 00        	 .string ""
 226 0047 00        	 .string ""
 227 0048 4D61 6E75 	 .string "ManufacturerString"
 227      6661 6374 
GAS LISTING  			page 16


 227      7572 6572 
 227      5374 7269 
 227      6E67 00
 228 005b 00        	 .string ""
 229 005c 00        	 .string ""
 230 005d 00        	 .string ""
 231 005e 00        	 .string ""
 232 005f 00        	 .string ""
 233 0060 00        	 .string ""
 234 0061 00        	 .string ""
 235 0062 00        	 .string ""
 236 0063 00        	 .string ""
 237 0064 00        	 .string ""
 238 0065 00        	 .string ""
 239 0066 E000      	 .string "\340"
 240 0068 00        	 .string ""
 241 0069 00        	 .string ""
 242 006a 5072 6F64 	 .string "ProductString"
 242      7563 7453 
 242      7472 696E 
 242      6700 
 243 0078 00        	 .string ""
 244 0079 00        	 .string ""
 245 007a 00        	 .string ""
 246 007b 00        	 .string ""
 247 007c 00        	 .string ""
 248 007d 00        	 .string ""
 249 007e 00        	 .string ""
 250 007f 00        	 .string ""
 251 0080 00        	 .string ""
 252 0081 00        	 .string ""
 253 0082 00        	 .string ""
 254 0083 E600      	 .string "\346"
 255 0085 00        	 .string ""
 256 0086 00        	 .string ""
 257 0087 4465 7669 	 .string "DeviceDescriptor"
 257      6365 4465 
 257      7363 7269 
 257      7074 6F72 
 257      00
 258 0098 00        	 .string ""
 259 0099 00        	 .string ""
 260 009a 00        	 .string ""
 261 009b 00        	 .string ""
 262 009c 00        	 .string ""
 263 009d 00        	 .string ""
 264 009e 00        	 .string ""
 265 009f 00        	 .string ""
 266 00a0 00        	 .string ""
 267 00a1 00        	 .string ""
 268 00a2 00        	 .string ""
 269 00a3 EC00      	 .string "\354"
 270 00a5 00        	 .string ""
 271 00a6 00        	 .string ""
 272 00a7 436F 6E66 	 .string "ConfigurationDescriptor"
 272      6967 7572 
 272      6174 696F 
GAS LISTING  			page 17


 272      6E44 6573 
 272      6372 6970 
 273 00bf 00        	 .string ""
 274 00c0 00        	 .string ""
 275 00c1 00        	 .string ""
 276 00c2 00        	 .string ""
 277 00c3 00        	 .string ""
 278 00c4 00        	 .string ""
 279 00c5 00        	 .string ""
 280 00c6 00        	 .string ""
 281 00c7 00        	 .string ""
 282 00c8 00        	 .string ""
 283 00c9 00        	 .string ""
 284 00ca 1101 00   	 .string "\021\001"
 285 00cd 00        	 .string ""
 286               	 .text
 287               	 .section .gnu.lto_.opts,"",@progbits
 288 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 288      6375 3D61 
 288      746D 6567 
 288      6133 3275 
 288      3227 2027 
 289               	 .text
 290               	 .cfi_sections .debug_frame
 291               	.global CALLBACK_USB_GetDescriptor
 293               	CALLBACK_USB_GetDescriptor:
 294               	.LFB95:
 295               	 .file 1 "Descriptors.c"
   1:Descriptors.c **** /*
   2:Descriptors.c ****              LUFA Library
   3:Descriptors.c ****      Copyright (C) Dean Camera, 2014.
   4:Descriptors.c **** 
   5:Descriptors.c ****   dean [at] fourwalledcubicle [dot] com
   6:Descriptors.c ****            www.lufa-lib.org
   7:Descriptors.c **** */
   8:Descriptors.c **** 
   9:Descriptors.c **** /*
  10:Descriptors.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:Descriptors.c **** 
  12:Descriptors.c ****   Permission to use, copy, modify, distribute, and sell this
  13:Descriptors.c ****   software and its documentation for any purpose is hereby granted
  14:Descriptors.c ****   without fee, provided that the above copyright notice appear in
  15:Descriptors.c ****   all copies and that both that the copyright notice and this
  16:Descriptors.c ****   permission notice and warranty disclaimer appear in supporting
  17:Descriptors.c ****   documentation, and that the name of the author not be used in
  18:Descriptors.c ****   advertising or publicity pertaining to distribution of the
  19:Descriptors.c ****   software without specific, written prior permission.
  20:Descriptors.c **** 
  21:Descriptors.c ****   The author disclaims all warranties with regard to this
  22:Descriptors.c ****   software, including all implied warranties of merchantability
  23:Descriptors.c ****   and fitness.  In no event shall the author be liable for any
  24:Descriptors.c ****   special, indirect or consequential damages or any damages
  25:Descriptors.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:Descriptors.c ****   in an action of contract, negligence or other tortious action,
  27:Descriptors.c ****   arising out of or in connection with the use or performance of
  28:Descriptors.c ****   this software.
  29:Descriptors.c **** */
GAS LISTING  			page 18


  30:Descriptors.c **** 
  31:Descriptors.c **** /** \file
  32:Descriptors.c ****  *
  33:Descriptors.c ****  *  USB Device Descriptors, for library use when in USB device mode. Descriptors are special
  34:Descriptors.c ****  *  computer-readable structures which the host requests upon device enumeration, to determine
  35:Descriptors.c ****  *  the device's capabilities and functions.
  36:Descriptors.c ****  */
  37:Descriptors.c **** 
  38:Descriptors.c **** #include "Descriptors.h"
  39:Descriptors.c **** 
  40:Descriptors.c **** /** Device descriptor structure. This descriptor, located in FLASH memory, describes the overall
  41:Descriptors.c ****  *  device characteristics, including the supported USB version, control endpoint size and the
  42:Descriptors.c ****  *  number of device configurations. The descriptor is read out by the USB host when the enumeratio
  43:Descriptors.c ****  *  process begins.
  44:Descriptors.c ****  */
  45:Descriptors.c **** const USB_Descriptor_Device_t PROGMEM DeviceDescriptor =
  46:Descriptors.c **** {
  47:Descriptors.c **** 	.Header                 = {.Size = sizeof(USB_Descriptor_Device_t), .Type = DTYPE_Device},
  48:Descriptors.c **** 
  49:Descriptors.c **** 	.USBSpecification       = VERSION_BCD(1,1,0),
  50:Descriptors.c **** 	.Class                  = CDC_CSCP_CDCClass,
  51:Descriptors.c **** 	.SubClass               = CDC_CSCP_NoSpecificSubclass,
  52:Descriptors.c **** 	.Protocol               = CDC_CSCP_NoSpecificProtocol,
  53:Descriptors.c **** 
  54:Descriptors.c **** 	.Endpoint0Size          = FIXED_CONTROL_ENDPOINT_SIZE,
  55:Descriptors.c **** 
  56:Descriptors.c **** 	.VendorID               = 0x03EB,
  57:Descriptors.c **** 	.ProductID              = 0x204C,
  58:Descriptors.c **** 	.ReleaseNumber          = VERSION_BCD(0,0,1),
  59:Descriptors.c **** 
  60:Descriptors.c **** 	.ManufacturerStrIndex   = STRING_ID_Manufacturer,
  61:Descriptors.c **** 	.ProductStrIndex        = STRING_ID_Product,
  62:Descriptors.c **** 	.SerialNumStrIndex      = NO_DESCRIPTOR,
  63:Descriptors.c **** 
  64:Descriptors.c **** 	.NumberOfConfigurations = FIXED_NUM_CONFIGURATIONS
  65:Descriptors.c **** };
  66:Descriptors.c **** 
  67:Descriptors.c **** /** Configuration descriptor structure. This descriptor, located in FLASH memory, describes the usa
  68:Descriptors.c ****  *  of the device in one of its supported configurations, including information about any device in
  69:Descriptors.c ****  *  and endpoints. The descriptor is read out by the USB host during the enumeration process when s
  70:Descriptors.c ****  *  a configuration so that the host may correctly communicate with the USB device.
  71:Descriptors.c ****  */
  72:Descriptors.c **** const USB_Descriptor_Configuration_t PROGMEM ConfigurationDescriptor =
  73:Descriptors.c **** {
  74:Descriptors.c **** 	.Config =
  75:Descriptors.c **** 		{
  76:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Configuration_Header_t), .Type = DTYPE_
  77:Descriptors.c **** 
  78:Descriptors.c **** 			.TotalConfigurationSize = sizeof(USB_Descriptor_Configuration_t),
  79:Descriptors.c **** 			.TotalInterfaces        = 2,
  80:Descriptors.c **** 
  81:Descriptors.c **** 			.ConfigurationNumber    = 1,
  82:Descriptors.c **** 			.ConfigurationStrIndex  = NO_DESCRIPTOR,
  83:Descriptors.c **** 
  84:Descriptors.c **** 			.ConfigAttributes       = (USB_CONFIG_ATTR_RESERVED | USB_CONFIG_ATTR_SELFPOWERED),
  85:Descriptors.c **** 
  86:Descriptors.c **** 			.MaxPowerConsumption    = USB_CONFIG_POWER_MA(100)
GAS LISTING  			page 19


  87:Descriptors.c **** 		},
  88:Descriptors.c **** 
  89:Descriptors.c **** 	.CDC_CCI_Interface =
  90:Descriptors.c **** 		{
  91:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_Interface},
  92:Descriptors.c **** 
  93:Descriptors.c **** 			.InterfaceNumber        = INTERFACE_ID_CDC_CCI,
  94:Descriptors.c **** 			.AlternateSetting       = 0,
  95:Descriptors.c **** 
  96:Descriptors.c **** 			.TotalEndpoints         = 1,
  97:Descriptors.c **** 
  98:Descriptors.c **** 			.Class                  = CDC_CSCP_CDCClass,
  99:Descriptors.c **** 			.SubClass               = CDC_CSCP_ACMSubclass,
 100:Descriptors.c **** 			.Protocol               = CDC_CSCP_VendorSpecificProtocol,
 101:Descriptors.c **** 
 102:Descriptors.c **** 			.InterfaceStrIndex      = NO_DESCRIPTOR
 103:Descriptors.c **** 		},
 104:Descriptors.c **** 
 105:Descriptors.c **** 	.CDC_Functional_Header =
 106:Descriptors.c **** 		{
 107:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalHeader_t), .Type = DTYPE_
 108:Descriptors.c **** 			.Subtype                = CDC_DSUBTYPE_CSInterface_Header,
 109:Descriptors.c **** 
 110:Descriptors.c **** 			.CDCSpecification       = VERSION_BCD(1,1,0),
 111:Descriptors.c **** 		},
 112:Descriptors.c **** 
 113:Descriptors.c **** 	.CDC_Functional_ACM =
 114:Descriptors.c **** 		{
 115:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalACM_t), .Type = DTYPE_CSI
 116:Descriptors.c **** 			.Subtype                = CDC_DSUBTYPE_CSInterface_ACM,
 117:Descriptors.c **** 
 118:Descriptors.c **** 			.Capabilities           = 0x00,
 119:Descriptors.c **** 		},
 120:Descriptors.c **** 
 121:Descriptors.c **** 	.CDC_Functional_Union =
 122:Descriptors.c **** 		{
 123:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_CDC_Descriptor_FunctionalUnion_t), .Type = DTYPE_C
 124:Descriptors.c **** 			.Subtype                = CDC_DSUBTYPE_CSInterface_Union,
 125:Descriptors.c **** 
 126:Descriptors.c **** 			.MasterInterfaceNumber  = INTERFACE_ID_CDC_CCI,
 127:Descriptors.c **** 			.SlaveInterfaceNumber   = INTERFACE_ID_CDC_DCI,
 128:Descriptors.c **** 		},
 129:Descriptors.c **** 
 130:Descriptors.c **** 	.CDC_NotificationEndpoint =
 131:Descriptors.c **** 		{
 132:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_Endpoint},
 133:Descriptors.c **** 
 134:Descriptors.c **** 			.EndpointAddress        = CDC_NOTIFICATION_EPADDR,
 135:Descriptors.c **** 			.Attributes             = (EP_TYPE_INTERRUPT | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_DATA),
 136:Descriptors.c **** 			.EndpointSize           = CDC_NOTIFICATION_EPSIZE,
 137:Descriptors.c **** 			.PollingIntervalMS      = 0xFF
 138:Descriptors.c **** 		},
 139:Descriptors.c **** 
 140:Descriptors.c **** 	.CDC_DCI_Interface =
 141:Descriptors.c **** 		{
 142:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Interface_t), .Type = DTYPE_Interface},
 143:Descriptors.c **** 
GAS LISTING  			page 20


 144:Descriptors.c **** 			.InterfaceNumber        = INTERFACE_ID_CDC_DCI,
 145:Descriptors.c **** 			.AlternateSetting       = 0,
 146:Descriptors.c **** 
 147:Descriptors.c **** 			.TotalEndpoints         = 2,
 148:Descriptors.c **** 
 149:Descriptors.c **** 			.Class                  = CDC_CSCP_CDCDataClass,
 150:Descriptors.c **** 			.SubClass               = CDC_CSCP_NoDataSubclass,
 151:Descriptors.c **** 			.Protocol               = CDC_CSCP_NoDataProtocol,
 152:Descriptors.c **** 
 153:Descriptors.c **** 			.InterfaceStrIndex      = NO_DESCRIPTOR
 154:Descriptors.c **** 		},
 155:Descriptors.c **** 
 156:Descriptors.c **** 	.RNDIS_DataOutEndpoint =
 157:Descriptors.c **** 		{
 158:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_Endpoint},
 159:Descriptors.c **** 
 160:Descriptors.c **** 			.EndpointAddress        = CDC_RX_EPADDR,
 161:Descriptors.c **** 			.Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_DATA),
 162:Descriptors.c **** 			.EndpointSize           = CDC_TXRX_EPSIZE,
 163:Descriptors.c **** 			.PollingIntervalMS      = 0x05
 164:Descriptors.c **** 		},
 165:Descriptors.c **** 
 166:Descriptors.c **** 	.RNDIS_DataInEndpoint =
 167:Descriptors.c **** 		{
 168:Descriptors.c **** 			.Header                 = {.Size = sizeof(USB_Descriptor_Endpoint_t), .Type = DTYPE_Endpoint},
 169:Descriptors.c **** 
 170:Descriptors.c **** 			.EndpointAddress        = CDC_TX_EPADDR,
 171:Descriptors.c **** 			.Attributes             = (EP_TYPE_BULK | ENDPOINT_ATTR_NO_SYNC | ENDPOINT_USAGE_DATA),
 172:Descriptors.c **** 			.EndpointSize           = CDC_TXRX_EPSIZE,
 173:Descriptors.c **** 			.PollingIntervalMS      = 0x05
 174:Descriptors.c **** 		}
 175:Descriptors.c **** };
 176:Descriptors.c **** 
 177:Descriptors.c **** /** Language descriptor structure. This descriptor, located in FLASH memory, is returned when the h
 178:Descriptors.c ****  *  the string descriptor with index 0 (the first index). It is actually an array of 16-bit integer
 179:Descriptors.c ****  *  via the language ID table available at USB.org what languages the device supports for its strin
 180:Descriptors.c ****  */
 181:Descriptors.c **** const USB_Descriptor_String_t PROGMEM LanguageString = USB_STRING_DESCRIPTOR_ARRAY(LANGUAGE_ID_ENG)
 182:Descriptors.c **** 
 183:Descriptors.c **** /** Manufacturer descriptor string. This is a Unicode string containing the manufacturer's details 
 184:Descriptors.c ****  *  form, and is read out upon request by the host when the appropriate string ID is requested, lis
 185:Descriptors.c ****  *  Descriptor.
 186:Descriptors.c ****  */
 187:Descriptors.c **** const USB_Descriptor_String_t PROGMEM ManufacturerString = USB_STRING_DESCRIPTOR(L"Dean Camera");
 188:Descriptors.c **** 
 189:Descriptors.c **** /** Product descriptor string. This is a Unicode string containing the product's details in human r
 190:Descriptors.c ****  *  and is read out upon request by the host when the appropriate string ID is requested, listed in
 191:Descriptors.c ****  *  Descriptor.
 192:Descriptors.c ****  */
 193:Descriptors.c **** const USB_Descriptor_String_t PROGMEM ProductString = USB_STRING_DESCRIPTOR(L"LUFA RNDIS CDC Demo")
 194:Descriptors.c **** 
 195:Descriptors.c **** /** This function is called by the library when in device mode, and must be overridden (see library
 196:Descriptors.c ****  *  documentation) by the application code so that the address and size of a requested descriptor c
 197:Descriptors.c ****  *  to the USB library. When the device receives a Get Descriptor request on the control endpoint, 
 198:Descriptors.c ****  *  is called so that the descriptor details can be passed back and the appropriate descriptor sent
 199:Descriptors.c ****  *  USB host.
 200:Descriptors.c ****  */
GAS LISTING  			page 21


 201:Descriptors.c **** uint16_t CALLBACK_USB_GetDescriptor(const uint16_t wValue,
 202:Descriptors.c ****                                     const uint8_t wIndex,
 203:Descriptors.c ****                                     const void** const DescriptorAddress)
 204:Descriptors.c **** {
 296               	 .loc 1 204 0
 297               	 .cfi_startproc
 298               	.LVL0:
 299               	 
 300               	 
 301               	 
 302               	.L__stack_usage =0
 205:Descriptors.c **** 	const uint8_t  DescriptorType   = (wValue >> 8);
 303               	 .loc 1 205 0
 304 0000 292F      	 mov r18,r25
 305 0002 3327      	 clr r19
 206:Descriptors.c **** 	const uint8_t  DescriptorNumber = (wValue & 0xFF);
 207:Descriptors.c **** 
 208:Descriptors.c **** 	const void* Address = NULL;
 209:Descriptors.c **** 	uint16_t    Size    = NO_DESCRIPTOR;
 210:Descriptors.c **** 
 211:Descriptors.c **** 	switch (DescriptorType)
 306               	 .loc 1 211 0
 307 0004 2230      	 cpi r18,2
 308 0006 3105      	 cpc r19,__zero_reg__
 309 0008 01F0      	 breq .L3
 310 000a 2330      	 cpi r18,3
 311 000c 3105      	 cpc r19,__zero_reg__
 312 000e 01F0      	 breq .L4
 313 0010 2130      	 cpi r18,1
 314 0012 3105      	 cpc r19,__zero_reg__
 315 0014 01F4      	 brne .L11
 212:Descriptors.c **** 	{
 213:Descriptors.c **** 		case DTYPE_Device:
 214:Descriptors.c **** 			Address = &DeviceDescriptor;
 215:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Device_t);
 316               	 .loc 1 215 0
 317 0016 82E1      	 ldi r24,lo8(18)
 318 0018 90E0      	 ldi r25,0
 319               	.LVL1:
 214:Descriptors.c **** 			Address = &DeviceDescriptor;
 320               	 .loc 1 214 0
 321 001a 20E0      	 ldi r18,lo8(DeviceDescriptor)
 322 001c 30E0      	 ldi r19,hi8(DeviceDescriptor)
 323 001e 00C0      	 rjmp .L5
 324               	.LVL2:
 325               	.L3:
 216:Descriptors.c **** 			break;
 217:Descriptors.c **** 		case DTYPE_Configuration:
 218:Descriptors.c **** 			Address = &ConfigurationDescriptor;
 219:Descriptors.c **** 			Size    = sizeof(USB_Descriptor_Configuration_t);
 326               	 .loc 1 219 0
 327 0020 8EE3      	 ldi r24,lo8(62)
 328 0022 90E0      	 ldi r25,0
 329               	.LVL3:
 218:Descriptors.c **** 			Address = &ConfigurationDescriptor;
 330               	 .loc 1 218 0
 331 0024 20E0      	 ldi r18,lo8(ConfigurationDescriptor)
GAS LISTING  			page 22


 332 0026 30E0      	 ldi r19,hi8(ConfigurationDescriptor)
 220:Descriptors.c **** 			break;
 333               	 .loc 1 220 0
 334 0028 00C0      	 rjmp .L5
 335               	.LVL4:
 336               	.L4:
 337 002a 9927      	 clr r25
 338               	.LVL5:
 221:Descriptors.c **** 		case DTYPE_String:
 222:Descriptors.c **** 			switch (DescriptorNumber)
 339               	 .loc 1 222 0
 340 002c 8130      	 cpi r24,1
 341 002e 9105      	 cpc r25,__zero_reg__
 342 0030 01F0      	 breq .L6
 343 0032 8230      	 cpi r24,2
 344 0034 9105      	 cpc r25,__zero_reg__
 345 0036 01F0      	 breq .L7
 346 0038 892B      	 or r24,r25
 347 003a 01F4      	 brne .L11
 348               	.LVL6:
 349               	.LBB2:
 223:Descriptors.c **** 			{
 224:Descriptors.c **** 				case STRING_ID_Language:
 225:Descriptors.c **** 					Address = &LanguageString;
 226:Descriptors.c **** 					Size    = pgm_read_byte(&LanguageString.Header.Size);
 350               	 .loc 1 226 0
 351 003c E0E0      	 ldi r30,lo8(LanguageString)
 352 003e F0E0      	 ldi r31,hi8(LanguageString)
 353 0040 00C0      	 rjmp .L12
 354               	.LVL7:
 355               	.L6:
 356               	.LBE2:
 357               	.LBB3:
 227:Descriptors.c **** 					break;
 228:Descriptors.c **** 				case STRING_ID_Manufacturer:
 229:Descriptors.c **** 					Address = &ManufacturerString;
 230:Descriptors.c **** 					Size    = pgm_read_byte(&ManufacturerString.Header.Size);
 358               	 .loc 1 230 0
 359 0042 E0E0      	 ldi r30,lo8(ManufacturerString)
 360 0044 F0E0      	 ldi r31,hi8(ManufacturerString)
 361 0046 00C0      	 rjmp .L12
 362               	.LVL8:
 363               	.L7:
 364               	.LBE3:
 365               	.LBB4:
 231:Descriptors.c **** 					break;
 232:Descriptors.c **** 				case STRING_ID_Product:
 233:Descriptors.c **** 					Address = &ProductString;
 234:Descriptors.c **** 					Size    = pgm_read_byte(&ProductString.Header.Size);
 366               	 .loc 1 234 0
 367 0048 E0E0      	 ldi r30,lo8(ProductString)
 368 004a F0E0      	 ldi r31,hi8(ProductString)
 369               	.LVL9:
 370               	.L12:
 371               	 
 372               	 
 373 004c 8491      	 lpm r24,Z
GAS LISTING  			page 23


 374               	 
 375               	 
 376               	.LVL10:
 377               	 
 378               	.LBE4:
 379 004e 90E0      	 ldi r25,0
 380               	.LVL11:
 233:Descriptors.c **** 					Address = &ProductString;
 381               	 .loc 1 233 0
 382 0050 9F01      	 movw r18,r30
 235:Descriptors.c **** 					break;
 383               	 .loc 1 235 0
 384 0052 00C0      	 rjmp .L5
 385               	.LVL12:
 386               	.L11:
 209:Descriptors.c **** 	uint16_t    Size    = NO_DESCRIPTOR;
 387               	 .loc 1 209 0
 388 0054 80E0      	 ldi r24,0
 389 0056 90E0      	 ldi r25,0
 208:Descriptors.c **** 	const void* Address = NULL;
 390               	 .loc 1 208 0
 391 0058 20E0      	 ldi r18,0
 392 005a 30E0      	 ldi r19,0
 393               	.LVL13:
 394               	.L5:
 236:Descriptors.c **** 			}
 237:Descriptors.c **** 
 238:Descriptors.c **** 			break;
 239:Descriptors.c **** 	}
 240:Descriptors.c **** 
 241:Descriptors.c **** 	*DescriptorAddress = Address;
 395               	 .loc 1 241 0
 396 005c FA01      	 movw r30,r20
 397 005e 3183      	 std Z+1,r19
 398 0060 2083      	 st Z,r18
 242:Descriptors.c **** 	return Size;
 243:Descriptors.c **** }
 399               	 .loc 1 243 0
 400 0062 0895      	 ret
 401               	 .cfi_endproc
 402               	.LFE95:
 404               	.global ProductString
 405               	 .section .progmem.data,"a",@progbits
 408               	ProductString:
 409 0000 28        	 .byte 40
 410 0001 03        	 .byte 3
 411 0002 4C00      	 .string "L"
 412 0004 5500      	 .string "U"
 413 0006 4600      	 .string "F"
 414 0008 4100      	 .string "A"
 415 000a 2000      	 .string " "
 416 000c 5200      	 .string "R"
 417 000e 4E00      	 .string "N"
 418 0010 4400      	 .string "D"
 419 0012 4900      	 .string "I"
 420 0014 5300      	 .string "S"
 421 0016 2000      	 .string " "
GAS LISTING  			page 24


 422 0018 4300      	 .string "C"
 423 001a 4400      	 .string "D"
 424 001c 4300      	 .string "C"
 425 001e 2000      	 .string " "
 426 0020 4400      	 .string "D"
 427 0022 6500      	 .string "e"
 428 0024 6D00      	 .string "m"
 429 0026 6F00      	 .string "o"
 430 0028 00        	 .string ""
 431 0029 00        	 .string ""
 432               	.global ManufacturerString
 435               	ManufacturerString:
 436 002a 18        	 .byte 24
 437 002b 03        	 .byte 3
 438 002c 4400      	 .string "D"
 439 002e 6500      	 .string "e"
 440 0030 6100      	 .string "a"
 441 0032 6E00      	 .string "n"
 442 0034 2000      	 .string " "
 443 0036 4300      	 .string "C"
 444 0038 6100      	 .string "a"
 445 003a 6D00      	 .string "m"
 446 003c 6500      	 .string "e"
 447 003e 7200      	 .string "r"
 448 0040 6100      	 .string "a"
 449 0042 00        	 .string ""
 450 0043 00        	 .string ""
 451               	.global LanguageString
 454               	LanguageString:
 455 0044 04        	 .byte 4
 456 0045 03        	 .byte 3
 457 0046 0904      	 .word 1033
 458               	.global ConfigurationDescriptor
 461               	ConfigurationDescriptor:
 462 0048 09        	 .byte 9
 463 0049 02        	 .byte 2
 464 004a 3E00      	 .word 62
 465 004c 02        	 .byte 2
 466 004d 01        	 .byte 1
 467 004e 00        	 .byte 0
 468 004f C0        	 .byte -64
 469 0050 32        	 .byte 50
 470 0051 09        	 .byte 9
 471 0052 04        	 .byte 4
 472 0053 00        	 .byte 0
 473 0054 00        	 .byte 0
 474 0055 01        	 .byte 1
 475 0056 02        	 .byte 2
 476 0057 02        	 .byte 2
 477 0058 FF        	 .byte -1
 478 0059 00        	 .byte 0
 479 005a 05        	 .byte 5
 480 005b 24        	 .byte 36
 481 005c 00        	 .byte 0
 482 005d 1001      	 .word 272
 483 005f 04        	 .byte 4
 484 0060 24        	 .byte 36
GAS LISTING  			page 25


 485 0061 02        	 .byte 2
 486 0062 00        	 .byte 0
 487 0063 05        	 .byte 5
 488 0064 24        	 .byte 36
 489 0065 06        	 .byte 6
 490 0066 00        	 .byte 0
 491 0067 01        	 .byte 1
 492 0068 07        	 .byte 7
 493 0069 05        	 .byte 5
 494 006a 83        	 .byte -125
 495 006b 03        	 .byte 3
 496 006c 0800      	 .word 8
 497 006e FF        	 .byte -1
 498 006f 09        	 .byte 9
 499 0070 04        	 .byte 4
 500 0071 01        	 .byte 1
 501 0072 00        	 .byte 0
 502 0073 02        	 .byte 2
 503 0074 0A        	 .byte 10
 504 0075 00        	 .byte 0
 505 0076 00        	 .byte 0
 506 0077 00        	 .byte 0
 507 0078 07        	 .byte 7
 508 0079 05        	 .byte 5
 509 007a 02        	 .byte 2
 510 007b 02        	 .byte 2
 511 007c 2000      	 .word 32
 512 007e 05        	 .byte 5
 513 007f 07        	 .byte 7
 514 0080 05        	 .byte 5
 515 0081 81        	 .byte -127
 516 0082 02        	 .byte 2
 517 0083 2000      	 .word 32
 518 0085 05        	 .byte 5
 519               	.global DeviceDescriptor
 522               	DeviceDescriptor:
 523 0086 12        	 .byte 18
 524 0087 01        	 .byte 1
 525 0088 1001      	 .word 272
 526 008a 02        	 .byte 2
 527 008b 00        	 .byte 0
 528 008c 00        	 .byte 0
 529 008d 08        	 .byte 8
 530 008e EB03      	 .word 1003
 531 0090 4C20      	 .word 8268
 532 0092 0100      	 .word 1
 533 0094 01        	 .byte 1
 534 0095 02        	 .byte 2
 535 0096 00        	 .byte 0
 536 0097 01        	 .byte 1
 537               	 .text
 538               	.Letext0:
 539               	 .file 2 "/usr/lib/avr/include/stdint.h"
 540               	 .file 3 "/usr/lib/gcc/avr/4.8.2/include/stddef.h"
 541               	 .file 4 "./LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
 542               	 .file 5 "./LUFA/Drivers/USB/Class/Device/../Common/CDCClassCommon.h"
 543               	 .file 6 "Descriptors.h"
GAS LISTING  			page 26


 544               	 .file 7 "./LUFA/Drivers/USB/Core/USBTask.h"
GAS LISTING  			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Descriptors.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:293    .text:0000000000000000 CALLBACK_USB_GetDescriptor
    {standard input}:522    .progmem.data:0000000000000086 DeviceDescriptor
    {standard input}:461    .progmem.data:0000000000000048 ConfigurationDescriptor
    {standard input}:454    .progmem.data:0000000000000044 LanguageString
    {standard input}:435    .progmem.data:000000000000002a ManufacturerString
    {standard input}:408    .progmem.data:0000000000000000 ProductString
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "Device_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.8a1ad6b2fd19231c,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006X\2404#\020\003"
  10      6062 C006 
  10      58A0 3423 
  10      1003 00
  11 000f 00        	 .string ""
  12 0010 E400      	 .string "\344"
  13 0012 0A        	 .ascii "\n"
  14               	 .text
  15               	 .section .gnu.lto_.inline.8a1ad6b2fd19231c,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b\300\006\304\2414#\003\203\360c \311\244\360\341%7\003\333\002y\210r"
  16      6062 C006 
  16      C4A1 3423 
  16      0383 F063 
  16      20C9 A4F0 
  17 001e 35E3 03E1 	 .ascii "5\343\003\341"
  18               	 .text
  19               	 .section .gnu.lto_.pureconst.8a1ad6b2fd19231c,"",@progbits
  20 0000 789C 6362 	 .string "x\234cb`b`f\200"
  20      6062 6066 
  20      8000 
  21 000a 4606 2900 	 .string "F\006)"
  22 000e 00        	 .string ""
  23 000f 8500      	 .string "\205"
  24 0011 23        	 .ascii "#"
  25               	 .text
  26               	 .section .gnu.lto_USB_Device_SendRemoteWakeup.8a1ad6b2fd19231c,"",@progbits
  27 0000 789C 8551 	 .string "x\234\205Q=H[Q\024>\347\336\274\037c\024q\352\322\322U\205<\334\204.F\203 tj\261\206Zp0\257\250<\f\274\026G\315\3038\265C\206B\241\355b\207B\207\352\240B\215C\245\032\024\202B'K\027\343\244\210Nn.\366\234{\363\022\215\032/\344\234\223w\276\357;\177\002\004\324\277Q\372uI"
  27      3D48 5B51 
  27      143E E7DE 
  27      BC1F 6314 
  27      71EA D2D2 
  28 0064 8F3C 3601 	 .string "\217<6\001\212\374\036@`\013\224:\220\302~\277\r\220\215Fr\026dc\266\376\236\210\240\241\363\206\260t\336TyK\177O\230\210\354\001aVH;bX&\316\276BUqIl\224//\027W\346O\314v\003<\004\213\215\315&\312\246\231M\214M\013\233V6\364\f\310e\263\371\307"
  28      8AFC 1E40 
  28      600B 943A 
  28      90C2 7EBF 
  28      0D90 8D46 
  29 00c0 AFD5 DF61 	 .string "\257\325\337a\262T1\205\202\234\334\205\337?\277|\334-\312*J\007\033\245\305\207"
  29      B254 3185 
  29      829C DC85 
  29      DF3F BF7C 
  29      DC2D CA2A 
  30 00db 695C 4083 	 .string "i\\@\203x\212\370\031>\005\037\2026\017q\004=\024\203\240\234\352\214#\214P\240\344\366I.\215_\211y\037\305\254\3542\205\022hj\356\2460\377\353\307\243\372f\336-=\2515\243\370\223\330\334@\234\033\231[\337<\277\370\3672\215\337\2105\2111b0"
  30      788A F819 
  30      3E05 1F82 
  30      360F 7104 
  30      3D14 83A0 
  31 012e 7896 1DD8 	 .string "x\226\035\330::,\356\307\264$%U\346\352\033F\033\350<\230\242\261\364\232\n\305\363\223\343\236\033kZ\351\254u&ug-u\235\375\305[Z#\2554~W\325[\211\242\326q\200z\205\203:\323H\206X\nZ(\226V\037\204cX\314\310aH(\337\250\273&C\250Mh5\264\250\226\\\250\224\274C\2008\341\261\214\332\261\226K\030JF\357\253\276>7\023b\r\202W\313\357@\3564\350\256\246n\271\205U\271\205\311\267\370\003A\371Lhx\r\202\224b\261\216\247C\003\t'\351OL\273\376\033g\350y\237\323\237\361]'\361\342Y\217\223t\247'\306\334Q\216\343c\320\333"
  31      3A3A 2CEE 
GAS LISTING  			page 2


  31      C7B4 2425 
  31      55E6 EA1B 
  31      461B E83C 
  32 01e8 198F 5FF7 	 .ascii "\031\217_\367\224\355\317L\275\3653\236\347\372Z`\034\376\003"
  32      94ED CF4C 
  32      BDF5 339E 
  32      E7FA 5A60 
  32      1CFE 03
  33 01fb 5E34 E7C5 	 .ascii "^4\347\305"
  34               	 .text
  35               	 .section .gnu.lto_.symbol_nodes.8a1ad6b2fd19231c,"",@progbits
  36 0000 789C 6362 	 .string "x\234cb`b\020d\200\002\246\013\f\365\f\f\023\31610\324\327\317\353`d"
  36      6062 1064 
  36      8002 A60B 
  36      0CF5 0C0C 
  36      13CE 3130 
  37 001b 00        	 .string ""
  38 001c 2B5E 04EA 	 .ascii "+^\004\352"
  39               	 .text
  40               	 .section .gnu.lto_.refs.8a1ad6b2fd19231c,"",@progbits
  41 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  41      6062 6064 
  41      8002 00
  42 000b 00        	 .string ""
  43 000c 4600      	 .string "F"
  44 000e 06        	 .ascii "\006"
  45               	 .text
  46               	 .section .gnu.lto_.decls.8a1ad6b2fd19231c,"",@progbits
  47 0000 789C 8D52 	 .string "x\234\215RMh\023A\024~o\2436\261\265\026\377.\202\365R\301*\331kO%M\212\"\006\225\224\350\301\303\0223#]\\w\355\376\244\324\323$\202\r\"\250\240%'I5\255\330\212T/\205z0x\366 \036z(\b\361\350\255\227\202\036t\235\375I\262I\227\350\300\354\274y?\337\373\366{#\200"
  47      4D68 1341 
  47      147E 6FA3 
  47      36B1 B516 
  47      FF2E 82F5 
  48 0062 0400      	 .string "\004"
  49 0064 6CBE 6A11 	 .string "l\276j\021\200\030\002\367"
  49      8018 02F7 
  49      00
  50 006d 8C43 7B71 	 .ascii "\214C{q\027,\302\356\345\370\"~|\231\357\025\337\277\307\217"
  50      172C C2EE 
  50      E5F8 227E 
  50      7C99 EF15 
  50      DFBF C78F 
  51 0081 ADF2 BDC6 	 .string "\255\362\275\306\367FH\3550<g\325Fci\341\f\273\307\376\3306\036\203g\314YE\226\230!8~\024\256#\301\301\030D]c \346v\001 \370\202\247zV6\342a\tp\026a\024^\363\352\307\034\3400\206\364\0038\005Kn\203\247ut\361\035\204E\034\016\246\020|\211B\320\021\2032\343\374\330\0236P\031\204PJ#P\343m\033\037\357\377\376\216%\226p+J=+\b\276\302\021\376\305\030\377\324p\024\2744~m\031\266;\005\025[\t\036;7%\300\366\037\b\375\360\300\341R-\262#\225A\202\313\334\355\363\031j\362\021|\244\025\354\017N\246\276\335\3706\377y\007\2772\366\220\375\264\355\276r\322\023^\200u\f\262\2128\b\002|\302\226\346a2\257v\313\374\246Sf\257e}kS\250\260m\333~T-\013\301\347\020\205yW\323b=1\323c\b\316\360\271\353=F9\243/\030\376\n\300K"
  51      F746 48ED 
  51      303C 67D5 
  51      4663 69E1 
  51      0CBB C7FE 
  52 0182 5F29 CF6E 	 .ascii "_)\317nZ\030\206\356\377\342f\033\220\340\273\2207\370c\2670"
  52      5A18 86EE 
  52      FFE2 661B 
  52      90E0 BB90 
  52      37F8 63B7 
  53 0197 04DF B67F 	 .ascii "\004\337\266\177\324\025\246\304\312\2560^_\202k\\\231\360\207"
  53      D415 A6C4 
  53      CAAE 305E 
  53      5F82 6B5C 
  53      99F0 87
GAS LISTING  			page 3


  54 01aa EE86 D743 	 .ascii "\356\206\327CuZ\330j\353\324\034\313\257\377\351\3365\226\215"
  54      755A D86A 
  54      EBD4 1CCB 
  54      AFFF E9DE 
  54      3596 8D
  55 01bd EEB1 7CE8 	 .ascii "\356\261|\350l\007\247\323\331s\023\342\244.\027\250n\210\331"
  55      6C07 A7D3 
  55      D973 13E2 
  55      A42E 17A8 
  55      6E88 D9
  56 01d0 A9A4 98D2 	 .ascii "\251\244\230\322t*N\\\315\214\211\223\264 \347\251\344\330\361"
  56      742A 4E5C 
  56      CD8C 8993 
  56      B420 E7A9 
  56      E4D8 F1
  57 01e3 3C1C E741 	 .ascii "<\034\347A\311wMQ\225d\350m\315\244\327r\267\250ug\337\371K\331"
  57      C977 4D51 
  57      9564 E86D 
  57      CDA4 D772 
  57      B7A8 7567 
  58 01fb 9329 3821 	 .ascii "\223)8!Z\206.*\362\r1W\320EY\315+\026\241\242a\022Y5\343\323"
  58      5A86 2E2A 
  58      F20D 3157 
  58      D045 59CD 
  58      2B16 A1A2 
  59 0215 D067 F173 	 .ascii "\320g\361sL2\023=z\306\343\235'\217\2464\325\3245E\241\272Ge"
  59      4C32 133D 
  59      7AC6 E39D 
  59      278F A634 
  59      D5D4 3545 
  60 022d 1AF6 3B54 	 .ascii "\032\366;T\256\244\323\322e\365@N\231\315\315\031\222\254*\262"
  60      AEA4 D3D2 
  60      65F5 404E 
  60      99CD CD19 
  60      92AC 2AB2 
  61 0241 4AF7 4A49 	 .ascii "J\367JIMS\016\315\346tU\262T\313\240D\322\251a)\346\301f\305"
  61      4D53 0ECD 
  61      E674 55B2 
  61      54CB A044 
  61      D2A9 6129 
  62 0259 0523 4373 	 .ascii "\005#Csdn\310\271\247\322\027\245\254zS\247\364.\375\013\317"
  62      646E C8B9 
  62      A7D2 17A5 
  62      AC7A 53A7 
  62      F42E FD0B 
  63 026e A30D 01   	 .ascii "\243\r\001"
  64               	 .text
  65               	 .section .gnu.lto_.symtab.8a1ad6b2fd19231c,"",@progbits
  66 0000 5553 425F 	 .string "USB_Device_SendRemoteWakeup"
  66      4465 7669 
  66      6365 5F53 
  66      656E 6452 
  66      656D 6F74 
  67 001c 00        	 .string ""
  68 001d 00        	 .string ""
  69 001e 00        	 .string ""
  70 001f 00        	 .string ""
GAS LISTING  			page 4


  71 0020 00        	 .string ""
  72 0021 00        	 .string ""
  73 0022 00        	 .string ""
  74 0023 00        	 .string ""
  75 0024 00        	 .string ""
  76 0025 00        	 .string ""
  77 0026 00        	 .string ""
  78 0027 A100      	 .string "\241"
  79 0029 00        	 .string ""
  80 002a 00        	 .string ""
  81               	 .text
  82               	 .section .gnu.lto_.opts,"",@progbits
  83 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  83      6375 3D61 
  83      746D 6567 
  83      6133 3275 
  83      3227 2027 
  84               	 .text
  85               	 .cfi_sections .debug_frame
  86               	.global USB_Device_SendRemoteWakeup
  88               	USB_Device_SendRemoteWakeup:
  89               	.LFB80:
  90               	 .file 1 "LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c"
   1:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #include "../../../../Common/Common.h"
  32:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  34:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
GAS LISTING  			page 5


  35:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #include "../USBMode.h"
  36:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  37:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #if defined(USB_CAN_BE_DEVICE)
  38:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  39:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** #include "../Device.h"
  40:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  41:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** void USB_Device_SendRemoteWakeup(void)
  42:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** {
  91               	 .loc 1 42 0
  92               	 .cfi_startproc
  93               	 
  94               	 
  95               	 
  96               	.L__stack_usage =0
  97               	.LBB8:
  98               	.LBB9:
  99               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
GAS LISTING  			page 6


  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			extern "C" {
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__))
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
GAS LISTING  			page 7


  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@{
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Option mask for \ref USB_Init() to keep regulator enabled at all times. Indicates that \ref 
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  should not disable the regulator as it would otherwise. Has no effect if regulator is disabl
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \ref USB_OPT_REG_DISABLED.
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_KEEP_ENABLED           (1 << 3)
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
GAS LISTING  			page 8


 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@}
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				{
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				}
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Attaches the device to the USB bus. This announces the device's presence to any attached
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  USB host, starting the enumeration process. If no host is present, attaching the device
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will allow for enumeration once a host is connected to the device.
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  This is inexplicably also required for proper operation while in host mode, to enable the
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attachment of a device to the host. This is despite the bit being located in the device-mode
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  register and despite the datasheet making no mention of its requirement in host mode.
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void)
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  &= ~(1 << DETACH);
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Main function to initialize and start the USB interface. Once active, the USB interface will
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  allow for device connection to a host when in device mode, or for device enumeration while i
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  host mode.
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
GAS LISTING  			page 9


 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  As the USB library relies on interrupts for the device and host mode enumeration processes,
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the user must enable global interrupts before or shortly after this function is called. In
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  device mode, interrupts must be enabled within 500ms of this function being called to ensure
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the host does not time out whilst enumerating the device. In host mode, interrupts may 
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enabled at the application's leisure however enumeration will not begin of an attached devic
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  until after this has occurred.
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  Calling this function when the USB interface is already initialized will cause a complete US
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  interface reset and re-enumeration.
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Mode     Mask indicating what mode the USB interface is to be initialized to, a v
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      from the \ref USB_Modes_t enum.
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      \note This parameter does not exist on devices with only one supported U
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                            mode (device or host).
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Options  Mask indicating the options which should be used when initializing the U
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      interface to control the USB interface's behavior. This should be compri
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      a \c USB_OPT_REG_* mask to control the regulator, a \c USB_OPT_*_PLL mas
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      PLL, and a \c USB_DEVICE_OPT_* mask (when the device mode is enabled) to
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      mode speed.
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only device or host mode is require
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the mode can be statically set in the project makefile by defining the token \c USB_DE
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        (for device mode) or \c USB_HOST_ONLY (for host mode), passing the token to the compil
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        via the -D switch. If the mode is statically set, this parameter does not exist in the
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        function prototype.
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only fixed settings are required,
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the options may be set statically in the same manner as the mode (see the Mode paramet
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        this function). To statically set the USB options, pass in the \c USE_STATIC_OPTIONS t
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        defined to the appropriate options masks. When the options are statically set, this
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        parameter does not exist in the function prototype.
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note The mode parameter does not exist on devices where only one mode is possible, such as 
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        AVR models which only implement the USB device mode in hardware.
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \see \ref Group_Device for the \c USB_DEVICE_OPT_* masks.
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Init(
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Mode
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if (defined(USB_CAN_BE_BOTH) && !defined(USE_STATIC_OPTIONS)) || defined(__DOXYG
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               ,
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #elif (!defined(USB_CAN_BE_BOTH) && defined(USE_STATIC_OPTIONS))
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               void
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Options
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               );
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Shuts down the USB interface. This turns off the USB interface after deallocating all USB FI
GAS LISTING  			page 10


 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  memory, endpoints and pipes. When turned off, no USB functionality can be used until the int
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  is restarted with the \ref USB_Init() function.
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Disable(void);
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Resets the interface, when already initialized. This will re-enumerate the device if already
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  to a host, or re-enumerate an already attached device when in host mode.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_ResetInterface(void);
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Global Variables: */
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the mode that the USB interface is currently initialized to, a value from the
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_Modes_t enum.
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note When the controller is initialized into UID auto-detection mode, this variable will h
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        currently selected USB mode (i.e. \ref USB_MODE_Device or \ref USB_MODE_Host). If the
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        is fixed into a specific mode (either through the \c USB_DEVICE_ONLY or \c USB_HOST_O
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        options, or a limitation of the USB controller in the chosen device model) this will 
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        a constant of the appropriate value and will never evaluate to \ref USB_MODE_None eve
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        USB interface is not initialized.
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_CurrentMode;
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_HOST)
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Host
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_DEVICE)
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Device
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the current USB options that the USB interface was initialized with when \ref USB
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  was called. This value will be one of the \c USB_MODE_* masks defined elsewhere in this mod
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_Options;
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USE_STATIC_OPTIONS)
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_Options USE_STATIC_OPTIONS
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Private Interface - For use in library only: */
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	#if !defined(__DOXYGEN__)
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(__INCLUDE_FROM_USB_CONTROLLER_C)
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_DEVICE)
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Device(void);
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_HOST)
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Host(void);
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
GAS LISTING  			page 11


 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void)
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 100               	 .loc 2 330 0
 101 0000 84E0      	 ldi r24,lo8(4)
 102 0002 89BD      	 out 0x29,r24
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 103               	 .loc 2 331 0
 104 0004 86E0      	 ldi r24,lo8(6)
 105 0006 89BD      	 out 0x29,r24
 106               	.L3:
 107               	.LBE9:
 108               	.LBE8:
  43:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	if (!(USB_Options & USB_OPT_MANUAL_PLL))
  44:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	{
  45:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 		USB_PLL_On();
  46:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 		while (!(USB_PLL_IsReady()));
 109               	 .loc 1 46 0 discriminator 1
 110 0008 09B4      	 in __tmp_reg__,0x29
 111 000a 00FE      	 sbrs __tmp_reg__,0
 112 000c 00C0      	 rjmp .L3
 113               	.LBB10:
 114               	.LBB11:
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void)
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void)
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				return ((PLLCSR & (1 << PLOCK)) ? true : false);
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void)
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON |=  (1 << UVREGE);
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  &= ~(1 << REGDIS);
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void) ATTR_ALWAYS_INLINE;
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void)
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON &= ~(1 << UVREGE);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  |=  (1 << REGDIS);
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
GAS LISTING  			page 12


 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << OTGPADE);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void)
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << OTGPADE);
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void)
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << FRZCLK);
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void)
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << FRZCLK);
 115               	 .loc 2 389 0
 116 000e 8091 D800 	 lds r24,216
 117 0012 8F7D      	 andi r24,lo8(-33)
 118 0014 8093 D800 	 sts 216,r24
 119               	.LBE11:
 120               	.LBE10:
  47:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	}
  48:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  49:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	USB_CLK_Unfreeze();
  50:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 
  51:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	UDCON |= (1 << RMWKUP);
 121               	 .loc 1 51 0
 122 0018 8091 E000 	 lds r24,224
 123 001c 8260      	 ori r24,lo8(2)
 124 001e 8093 E000 	 sts 224,r24
 125               	.L5:
  52:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** 	while (UDCON & (1 << RMWKUP));
 126               	 .loc 1 52 0 discriminator 1
 127 0022 8091 E000 	 lds r24,224
 128 0026 81FD      	 sbrc r24,1
 129 0028 00C0      	 rjmp .L5
 130               	 
  53:LUFA/Drivers/USB/Core/AVR8/Device_AVR8.c **** }
 131               	 .loc 1 53 0
 132 002a 0895      	 ret
 133               	 .cfi_endproc
 134               	.LFE80:
 136               	.Letext0:
 137               	 .file 3 "/usr/lib/avr/include/stdint.h"
GAS LISTING  			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Device_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:88     .text:0000000000000000 USB_Device_SendRemoteWakeup
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "EndpointStream_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.286d6c29995bfbbb,"",@progbits
  10 0000 789C 7590 	 .ascii "x\234u\220Y\016\3020\020C\33510\242e)\320\005\261\227\003\365"
  10      590E C230 
  10      1043 DD31 
  10      30A2 6529 
  10      D005 B197 
  11 0016 389C BF4E 	 .ascii "8\234\277N+>\bM\244\211\025?\317(\211\3010\267\372l\322\016D"
  11      2B3E 084D 
  11      A489 153F 
  11      CF28 89C1 
  11      30B7 FA6C 
  12 002d 4698 0354 	 .ascii "F\230\003T-TK\225\350J2\366:\326\310Q`C\243\216\037%\025\220"
  12      2D54 4B95 
  12      E84A 32F6 
  12      3AD6 C851 
  12      6043 A38E 
  13 0045 60FB E7EC 	 .ascii "`\373\347\354\234\277\216\304\002\330k\032\312\024=\004zL\321"
  13      9CBF 8EC4 
  13      02D8 6B1A 
  13      CA14 3D04 
  13      7A4C D1
  14 0058 53A0 558A 	 .ascii "S\240U\212\326>=\245I\005Z\377~\301\231\027^\343;\337b\343\316"
  14      D63E 3DA5 
  14      4905 5AFF 
  14      7EC1 9917 
  14      5EE3 3BDF 
  15 006f 079F D4D0 	 .ascii "\007\237\324\320W\330\272\030\217\303\336\263.\006\023\307\020"
  15      57D8 BA18 
  15      8FC3 DEB3 
  15      2E06 13C7 
  15      10
  16 0080 39        	 .ascii "9"
  17               	 .text
  18               	 .section .gnu.lto_.inline.286d6c29995bfbbb,"",@progbits
  19 0000 789C C595 	 .string "x\234\305\225Ak\023A\024\200\337{;\273\335f7M\232\252\2111f\223x\250A\020\017\342E\253\236=\344\017x\361 \232\203\340_\250B\305\203H.\205\036D\242V\304\"\242Eh\017R\321C\017\232CS\212\242-\322\203\240x(=\204\036\004\301\231\235\315\256M\326\235\244\224\232\303\333\331\307\314\373\276\274\231a\t\b\302~\027\006\345\263\b\220\233$\324\261z\021\257\241\310\340U\177\204^\320\370\203\017\0073+\217R`\324\035\002s\376\001%\001\227\215\002#\371"
  19      416B 1341 
  19      1480 DF7B 
  19      3BBB DD66 
  19      374D 9AAA 
  20 0094 9A8E 5F62 	 .ascii "\232\216_b\300^\377B\023hC\343y\2666\300D\035\262x\212W\330#"
  20      C05E FF42 
  20      1368 43E3 
  20      79B6 36C0 
  20      441D B278 
  21 00ac 1041 618B 	 .ascii "\020Aa\213\320 \037D>\210\320\013\232d\272\264Xn\274\231\365"
  21      D020 1F44 
  21      3E88 D00B 
  21      9A64 BAB4 
  21      586E BC99 
GAS LISTING  			page 2


  22 00c1 689B ABC8 	 .ascii "h\233\253\310iMIk\272\264\207\202\306c\0359t|N@\177\220\200."
  22      694D 496B 
  22      BAB4 8782 
  22      C663 1D39 
  22      747C 4E40 
  23 00d9 E92E 1463 	 .ascii "\351.\024c\330&k\377\215\314\2408\241\365C\316\267\346r\273B"
  23      D826 6BFF 
  23      8DCC A038 
  23      A1F5 43CE 
  23      B7E6 72BB 
  24 00ee D6A1 34C5 	 .ascii "\326\2414\305\372!g\357\374\314\354N\267m\004\254U\f(\255\364"
  24      FA21 67EF 
  24      FCCC EC4E 
  24      B76D 04AC 
  24      550C 28AD 
  25 0103 F5D7 B3EB 	 .ascii "\365\327\263\353\323#\212\303\305\243+\020r\306:\004\250V\251"
  25      D323 8AC3 
  25      C5A3 2B10 
  25      72C6 3A04 
  25      A856 A9
  26 0116 5506 C0FE 	 .ascii "U\006\300\376\316kSj\341\261-+\213C\034\226\214\205%\255\260"
  26      CE6B 536A 
  26      E1B1 2D2B 
  26      8B43 1C96 
  26      8C85 25AD 
  27 012b A40D 569A 	 .ascii "\244\rV\232\347X\335\361S,\016\222G\026\177"
  27      E758 DDF1 
  27      532C 0E92 
  27      4716 7F
  28 013a 8BAB 260C 	 .string "\213\253&\f\201\235\351\230\240\017qk1\301\233\222\200\321\026\242\036\326\273\240an\027\315\302\342BR\326\241\245DR\204\023`\336\276\205\347A[\327y\177\254\257\016oX\343\272\371\327\215\227\255\342\357I\265\312\360\036\251\244\324*#p\364w\217*\245\331\017\303;V\331\247V\331\017\345O\324\233J\376\313\313D\317*\336\335\3514:\2406JC\371y\257F\3137\354.\243\306\013a4k\b\243\233En\364m\n}%\357\360n\227\312\300\351'\204\232\374\\\270_\212\252?\022\201]Yl\034\221\034\326\340\034\343\243\345\336\324,\214=%d\377\\\347\232\352\301b\343\236\343I\266+\034\202\321\317\030E>\265\366\352\240G\256\363\305\306|\232m\273\2079(\257\242R!\250bl\036o+t\226:\fgf\"\273P}\277\021\326\205<\234}\246\356B\260\270\273\013\016\214\275\211$_~7\023F\326l\022g\254"
  28      819D E998 
  28      A00F 716B 
  28      31C1 9B92 
  28      80D1 16A2 
  29 023b E7DE AA05 	 .ascii "\347\336\252\005\202\032\335\002^\241\"\224[\221\273q\362\376"
  29      821A DD02 
  29      5EA1 2294 
  29      5B91 BB71 
  29      F2FE 
  30 024d DDC8 DD10 	 .ascii "\335\310\335\020u\334A\t\216m\251\267%(\027\261-~M\370\003\274"
  30      75DC 4109 
  30      8E6D A9B7 
  30      2528 17B1 
  30      2D7E 4DF8 
  31 0263 DC3C 82   	 .ascii "\334<\202"
  32               	 .text
  33               	 .section .gnu.lto_.pureconst.286d6c29995bfbbb,"",@progbits
  34 0000 789C 25C1 	 .ascii "x\234%\301\307\021\2000\020\004\301C\270\302\013\2775X\221\n"
  34      C711 8030 
  34      1004 C143 
  34      B8C2 0BBF 
  34      3558 910A 
  35 0014 F9E7 C483 	 .ascii "\371\347\304\203ng\316^\373\005#\302\021\223\220\222\221SPRQ"
  35      6E67 CE5E 
  35      FB05 23C2 
  35      1193 9092 
  35      9153 5052 
GAS LISTING  			page 3


  36 0029 AB51 AB0E 	 .ascii "\253Q\253\016\257\236A#\223f\026\255\b\330\33098\271\270\t<|"
  36      AF9E 4123 
  36      9366 16AD 
  36      08D8 D839 
  36      38B9 B809 
  37 003f BC2B 05E7 	 .ascii "\274+\005\347"
  38               	 .text
  39               	 .section .gnu.lto_Endpoint_Discard_Stream.part.0.286d6c29995bfbbb,"",@progbits
  40 0000 789C 8D55 	 .string "x\234\215U]h\\E\024>g\356\377\317n6\177\320\n\005)\376A!\213/\"\bJ\372#\004|\262V\013\n\022\334]\332%\331\224\233X(>d\222MCl\002M\213\017MUh\240H\221\224*\253/i\2254i\245!T\361\241\204@\013[mi\241\021\324>Xkq=gf\357\256\033b\354\205\235s\317\231\357;\363\23593w\005\bX\373\234\242\33736\300Q\262\230\004LL~O/\t\024\312\na|5\017 }\363z"
  40      5D68 5C45 
  40      143E 67EE 
  40      FFCF 6E36 
  40      7FD0 0A05 
  41 008d 3234 D0E4 	 .ascii "24\320\344\360\220kb\240\346-a\217=K\323\036\217\241-\234\031"
  41      F090 6B62 
  41      A0E6 2D61 
  41      8F3D 4BD3 
  41      1E8F A12D 
  42 00a3 419E 7B6B 	 .ascii "A\236{k\2118\241\203\241F\273\"Tq_\307=\364u\334\327Y:\003a\251"
  42      8938 A183 
  42      A146 BB22 
  42      5471 5FC7 
  42      3DF4 75DC 
  43 00bd 195F C1C2 	 .ascii "\031_\301\302\020\221\303\2000\230\020\206i\331\216\353"
  43      1091 C380 
  43      3098 1086 
  43      69D9 8EEB 
  44 00cd F941 8883 	 .string "\371A\210\203\357 +6\267\302\264\224\307\313\207\317Ol\031\221e9)\377\256\fb\017Rq/#\344\020\336&\007]e\0046V\253\250'\313S\243g7\217\034\251S\rx\034\336\361\271o~yN\026\347\344\203J\305\351AS\300\301\372z)\315\023\353\362f\217I\211C\247\344\243J\305PBG\361\377\224\236\023\262\\\251\374y\307\335\202x\200)=h\031\364\206&\320`\221k\333<8<\270<x\f\361!\203\247q+\004\354\204\344|FN\202\3544\331$S\233xHUa\315\004\203\026\216\264V#m\354\264W\035z,\030\221r\362I\235(\216\346\224\330\267h\\2\311$\310\030{Q\260\271\002#\253\027\227\3333x\206D\346\021\2716\347\337\205\355\245\335\276o\030Wax\366p\351>\306@\3611\234\034\2222E\373\272\206u\025\212\037\026\0131\216f\rB\003,\202\3201\322K\3418\271\311\""
  44      EF20 2B36 
  44      B7C2 B494 
  44      C7CB 87CF 
  44      4F6C 1991 
  45 01ce 56A0 8580 	 .ascii "V\240\205\200\202g\frZ9!a\304\255\240\372f(\264\005t\360H\313"
  45      8267 0C72 
  45      5A39 2161 
  45      C4AD A0FA 
  45      6628 B405 
  46 01e6 FCEC E5F1 	 .ascii "\374\354\345\361\325\333F\265\330\270\352\271\322\304\203M\204"
  46      D5DB 46B5 
  46      D8B8 EAB9 
  46      D2C4 834D 
  46      84
  47 01f7 D5EB E450 	 .ascii "\325\353\344PU\235G\213\245~4DR]N\346\335\325\215\364\352z\317"
  47      559D 478B 
  47      A57E 3444 
  47      525D 4EE6 
  47      DDD5 8DF4 
  48 020e 2F8C AF5E 	 .ascii "/\214\257^\2632\370\271\222l\023\205\0016%\206+p\351"
  48      B332 F8B9 
  48      926C 1385 
  48      0136 2586 
  48      2B70 E9
  49 0221 CECD A9D1 	 .string "\316\315\251\321\013v\\\220\255\246\032w\310\206\337\237\326\252\226\226\227\327Q\365\360\tQW%\264*\3471Tq\266\f\236U\353\272D\331\f'\344\031\371\305+\304Q\220\371.=\273Q\252<c\271\313T\305\267\316F}v\340\030\352>\377uO\304@o\243>\217\0311, d\036}\216\016w\351\340\177\020\t\033/\350\302\315\247\214\037\240X>\362s\355\\\205\037\300C9\3064?\307\367\234\236\036f\324\216\217>\331\004\324U\325\211\353\364\305\253\365e\374\217\023/\324\256\306\264\272\024\265\356\0345:\352\3351\265\306\304\232-\375\255\261;\2130\374\353O\237~\227\310\340\327J\322\264\222\224\320\233\262P\232\230Z\250\235\227\246<&\325\031\246o\t\254\275\006M\232Q\2747\261-\306\247h\033\025\036\241\241\352\323j\211T\\\232\017\227\027A]\2346Z\300\345\\\336'\245}+\320N|vS\336Li\006\031\032"
  49      0B76 5C90 
  49      ADA6 1A77 
  49      C886 DF9F 
  49      D6AA 9696 
GAS LISTING  			page 4


  50 0322 7D9E 0D92 	 .string "}\236\r\222\354B-\217\257j\240\200\222\221\324{y\361Fw\254\"Y\275v\361\263\002\311<\266\230\204m\363q\005\374<\266\262\323\356\253\025B\276\304?\322?\004o]\263\3067s\006\332d\347\3219\002\206\356\205/7\251\b@\260Zr\371k\204\304\342\313\360\322k{^\355L\357\214\366\037\314F\375\351=\273\267\247w\364E\331t\347\233\257\277\230\356\350h\264\273\n\231\003}\373\013\003\357\262\327\261\017\254\235\357\367\366\036z~\203\f1c\367@\224\355\356\325\274\367\240i\373\241\201l\177W\341\215\250\273\320\237\313F\336\256(\352\213v\364e\262\377"
  50      EC42 2D8F 
  50      AF6A A080 
  50      9291 D47B 
  50      79F1 4677 
  51 03d1 6CED A0C4 	 .ascii "l\355\240\304"
  52               	 .text
  53               	 .section .gnu.lto_Endpoint_Null_Stream.part.1.286d6c29995bfbbb,"",@progbits
  54 0000 789C 8D55 	 .string "x\234\215U]h\\U\020\2369\367g\357ov\363#\250\240HQ|\220f-(\024|\220\264\251\020\360\311Z-(Hpwi\227uSn\202 >\344&\033K\254I\033\213\017\241\372\240\365\257\320@\005\005\261%\220\2156$,\325\226\372\320\305\200\033l\251H!\264\342\213\001\327\231s\356i\262iM\275\260\347\334\231\371\346;\363s\346\256"
  54      5D68 5C55 
  54      109E 39F7 
  54      67EF 6F76 
  54      F323 A8A0 
  55 006e 019B 9F8F 	 .ascii "\001\233\237\217\351w\237\rp\224vl\003\f\247~\244\227\020\205"
  55      E977 9F0D 
  55      7094 766C 
  55      030C A77E 
  55      A497 1085 
  56 0082 DC85 30BE 	 .ascii "\334\2050\276\231\007\210=s\331\20780\320d\365\210c\242/\355"
  56      9907 883D 
  56      73D9 8738 
  56      30D0 64F5 
  56      8863 A22F 
  57 0097 96B0 C71F 	 .ascii "\226\260\307\037'\263\313k`\213\324\214 \311\271Z#\237 \205\201"
  57      27B3 CB6B 
  57      608B D48C 
  57      20C9 B95A 
  57      239F 2085 
  58 00ac 423B 2290 	 .ascii "B;\"\220zO\351]\364\224\336S,=\276\260\244\305"
  58      7A4F E95D 
  58      F494 DE53 
  58      2C3D BEB0 
  58      A4C5 
  59 00be 93B0 2040 	 .string "\223\260 @d5 \f\207\3020-;\345\270\236\037\340\360\253\310\021\033\333\340\2238>\321\370\374\217E\034;\322\210\247\342\177\232\303Xb[\001\341\025zCGn\002[S\225~\307\347~Y\230\264\342\257\342\361\270\331\034.\241!\340)\274\355\230Q\216\342\256\216W\016\213\351xl\256\331|\266\204\246\200^\274\307ygD\334h6\353k\316C\210\207\220j_B\313\24074\201\026\213D\333\346%\305\213\303\213\313\020\017rx\022\267\201\317B@\302g$\204\354\322\306K:1g\310l\266\263\246#\321t\262\320\225\b\364X0\026\307S\217(\002\255-\310 _\246\265f\322\026\322f\354G\301\333\"\214\335\250\376\265 r\370\005EWD\344\244R\0333\332\217\006\374i\030\027`\364\354;\253\223\017k\240\370\020N\214\304q\206\252\271\311\353\002T\336\255\2245\316,2\200\212\273\004\311!\0240\2515\271\311Q"
  59      6435 200C 
  59      87C2 302D 
  59      3BE5 B89E 
  59      1FE0 F0AB 
  60 01bf D4A1 9D80 	 .string "\324\241\235\200\202-\006\t\035LHj\361\363\323\311\233!\321\026\320\245\241X\346\317\236_\233\270RK%\351\352\274\347j\277V]"
  60      822D 0609 
  60      1D4C 486A 
  60      F1F3 D3C9 
  60      9B21 D116 
  61 01e9 754E 0165 	 .ascii "uN\001e\332E\2648\324\017F(T\207\311\334\337U\007\335\365x\317"
  61      DA45 B438 
  61      D40F 4628 
  61      5487 C9DC 
  61      DF55 07DD 
  62 0200 7D4F 6CA7 	 .ascii "}Ol\247\375\034\236\2221\333\344\303\b\233\210a\021~\270\276"
  62      FD1C 9E92 
  62      31DB E4C3 
  62      089B 8861 
  62      117E B8BE 
  63 0214 726D F549 	 .ascii "rm\365I\235\220--\255\025\262\341\326c:\252\3513wFu\265j\255"
  63      9D90 2D2D 
  63      AD15 B2E1 
  63      D663 3AAA 
GAS LISTING  			page 5


  63      E933 7746 
  64 022c 4725 5454 	 .ascii "G%TT\251\377\025\025\261\345\360\264<\330!\237\007`:>\0257\350"
  64      A9FF 1515 
  64      B1E5 F0B4 
  64      3CD8 219F 
  64      0760 3A3E 
  65 0243 323A 1233 	 .ascii "2:\0223\337\247\254[q\025\031\313}^\271vk\347V}N\301\373\250"
  65      DFA7 AC5B 
  65      7115 19CB 
  65      7D5E B976 
  65      6BE7 567D 
  66 025b FAFC EDD1 	 .ascii "\372\374\355\321\355\032\350n\325\347qC\303|B\026\321c\355h\237"
  66      ED1A E86E 
  66      D5E7 7143 
  66      C37C 4216 
  66      D163 ED68 
  67 0270 52FE 8723 	 .ascii "R\376\207#a\365\201\016\254<j\374\004\225F\3757\324D\301\333"
  67      61F5 810E 
  67      AC3C 6AFC 
  67      0495 46FD 
  67      37D4 44C1 
  68 0285 F037 CD29 	 .ascii "\3607\315)\271y\005\356;=%\366\270}}\324\325&\240Jj\335\361."
  68      B979 05EE 
  68      3B3D 25F6 
  68      B87D 7DD4 
  68      D526 A04A 
  69 029d 7D71 B92F 	 .ascii "}q\271/K0\352\250y\236:>wya\302\\\377\020\004\002\216\340\275"
  69      4B30 EAA8 
  69      799E 3A3E 
  69      7779 61C2 
  69      5CFF 1004 
  70 02b5 469A 7581 	 .ascii "F\232u\201Jx\276\266|\375\342d\345"
  70      4A78 BEB6 
  70      7CFD E264 
  70      E5
  71 02c2 8E06 BFB7 	 .string "\216\006\277\267Z\265r\370\265\0346\335fy\3037\365\345\346\306\276l\340\255\214W>=\366\240\316\244\255\210\241\274\365\315&\027\240up\332\022\374\227\307\236\320\3704\025^\342\021Z\352tR\326)\255\213\341\301\371%\220\243\326I\0078\314\345N\314\036\250C\027\371\263\230v?\232\235A\206\372@\037\343\244p\232\307cnV\3100BU\375\352\332\341@\207\021&\223\252\237:\204El7\t\334\351a\035\274\"v\260\320\345\311#\002\236\373K\364\207\3007\"\243\360\031f0-H\335\370\216b\n\234\231s\367K\r\200\277<\353\360\027\f\311\213\347g\307\363\373\236\353\311\366F\007\337\314G\203\331}{wew\017D\371l\317K/\354\314\356)\347\016\r\034,\017\355\035\212\362\375o\274\306\272\356\327!\275\353\255\241\374`_\371\305\250\277<X\310G\356\236(\032\210v\017\344\362\317l\301\325\335\335\272kn\305z"
  71      5AB5 72F8 
  71      B51C 36DD 
  71      6679 C337 
  71      F5E5 E6C6 
  72 03c3 CCDE FEA1 	 .ascii "\314\336\376\241\376\177\001AJ\233\375"
  72      FE7F 0141 
  72      4A9B FD
  73               	 .text
  74               	 .section .gnu.lto_Endpoint_Write_Stream_LE.part.2.286d6c29995bfbbb,"",@progbits
  75 0000 789C 8D55 	 .ascii "x\234\215Ukh\\E\024>g\346\336\275\217\275\373\310c\363D(\005"
  75      6B68 5C45 
  75      143E 67E6 
  75      DEBD 8FBD 
  75      FBC8 63F3 
  76 0017 7F09 C92F 	 .ascii "\177\t\311/Q\020\224\364!\006\372\253\017\033P(\213\273\241]"
  76      5110 94F4 
  76      2106 FAAB 
  76      0F1B 5028 
  76      8BBB A15D 
  77 002b B749 D804 	 .ascii "\267I\330\004A\374\221\233n\003\325\256\022\242BI\013"
  77      41FC 919B 
GAS LISTING  			page 6


  77      6E03 D5AE 
  77      12A2 4249 
  77      0B
  78 003c ADB5 4AD5 	 .string "\255\265J\325H\224\210\305Z4F\305\326\245>J\005\027\372#E%\326F|\374\262\032Y\317\231\271w\323Mj\332\013;3\347\234\357;\217\2313\263\002\004\254\376N\320/k\001\274J3\306\001c\023_\321\"\206B\315B\310\367\346\001|\327\270\022\005\337\223h\260z\31460\252\354\246\210\\n!\263s\356>2G\2045-H\262\177,\023\307\263\320\323h[xJ\357j\275\203\256\326\273\332KOT\230\312\342*\230\347!\262\032\020FcB\032f\304\262\0357\352\341\350\343\310\031\033\033\341\025\337\237Zx\355R\311\030\177\307?\344W\253\243y\266\364#<\206yD[M\002\353\013U\254\311\271\343\277n\360\213s\376_\325\252\225G)\340A\2743\336\261\227}\037\307N\370\313\325\252\314\243!\340\221\025bR\023\305-\211SuDS@\337\355\2103\302_\250Vo,\332w#\016!\235Y\036#\222Vh"
  78      4894 88C5 
  78      5A34 46C5 
  78      D6A5 3E4A 
  78      0517 FA23 
  79 013d 0D26 AD44 	 .string "\r&\255D\0042\370:n\004\213l\226\315\203\303\203\313C\224\361\036\001N\021 \306B\234\204\223$$\002V\222a\r\201\320\310N\233xh\0168)2\313\026\326\264\006\230\266\300\322\316\312\216@\331\031(\3513\341\240\357Ol\320z\255\325\021\325\241\320\267\233\306K\222\246\030M\262\017\005O\347\341\340\322'\037\2442x\032M\310!\362^\3307oD\037J(Iy\021\016\234\035\377\347\027\f\201\342(L\215\371~\222\216a\025\353\"\024\237-\346B\034Y%\241\001.\200\320:\312\236\324\nw\270X\355\b\201\221\034\232\365@]\tY\302D\fN\030\240\002-\344T\260\027\271T\216T\240\225\250\342\3125\362\020\221\313OV\240\215\323\241\bb\351Z$XJ\345\300\004jq*e\376\354\3473/|_\266\202-\013\367n\356\360\373\333"
  79      0432 F83A 
  79      6E04 8B6C 
  79      96CD 83C3 
  79      83CB 4394 
  80 0226 74F0 7E54 	 .ascii "t\360~T{\226C\213\013}i\214\nu\330\227\373\263n\033w\245\332"
  80      7B96 438B 
  80      0B7D 698C 
  80      0A75 D897 
  80      FBB3 6E1B 
  81 023d 0F3F 2567 	 .ascii "\017?%goE3\370\246*\304&\016#,\362\013\347\341\263\305\253\343"
  81      6F45 33F8 
  81      A62A C426 
  81      0E23 2CF2 
  81      0BE7 E1B3 
  82 0254 4765 58A5 	 .ascii "GeX\245\255,\365\373\033\201\177SaRGf\326&u\306XIJ\350\244\234"
  82      AD2C F5FB 
  82      1B81 7F53 
  82      6152 4766 
  82      D626 75C6 
  83 026e 3B4A      	 .ascii ";J"
  84 0270 8A9C 65F0 	 .string "\212\234e\360m\025\327%N;\034\361O\373\013\017\021Ia\346{\265u=_9\236\277\206\342\357\223\277Y:\007\200g\340o\272\360\204\217\366\243T\250<z\\*u\322\215\273\326\353$\013.C\320I\327E\b\214\256\327I\207j;\027#d\216\343\020\277W+\377\207H\3300\240\ro\244$\245\277\360\334\017\265\316\215\327\362\217\365sk\250\374\343u}wR\365]\\\327\264B\274\305\3319\260x\257\256\350\343\222\021\002\223\265\304\250\365\023\3142\003B-\006\277K\023\223s/\376t\323C\230\020p\034o\367\022\222wuv\345\345?\277y\276\270\246Y\312_\364d\360\214\272\364a\313\250\330\253\316\370\217\3723N\006\267\361\252\027\226\320\020$\256\302\257\271\221\r\372l\212\213\245\332\365m\312a\243\272k\364\302\302\352\333\336\024\340\257\227\356\t\361\315t\226\n\277*\300)\025\2409\334_\027>\372\022\324\235o\247"
  84      6D15 D725 
  84      4E3B 1CF1 
  84      4FFB 0B0F 
  84      1149 61E6 
  85 0371 36FB 728E 	 .ascii "6\373r\216\315\356\255@\007%\310b\203S\232MV\240\223\334\261"
  85      CDEE AD40 
  85      0725 C862 
  85      8353 9A4D 
  85      56A0 93DC 
  86 0386 D8EC 4CCF 	 .ascii "\330\354L\317N#3\243@\377_\362\002\034\260\241\346\326\343PZ"
  86      4E23 33A3 
  86      40FF 5FF2 
  86      021C B0A1 
  86      E6D6 E350 
  87 039b A10B 4984 	 .ascii "\241\013I\204\n\225fc\320\304\337\245\303,\033\203\347#\374*"
  87      0A95 6663 
  87      D0C4 DFA5 
  87      C32C 1B83 
  87      E723 FC2A 
  88 03af D098 C316 	 .ascii "\320\230\303\026\203\260\355.V \221\303V\026:X\360r\330\306B"
  88      83B0 ED2E 
  88      5620 91C3 
  88      5616 3A58 
  88      F072 D8C6 
  89 03c4 A7AB E27B 	 .ascii "\247\253\342{\374X}K\177\260\274\301)MN\261;i\202\265<C\300\270"
  89      FC58 7D4B 
  89      7FB0 BCC1 
GAS LISTING  			page 7


  89      294D 4EB1 
  89      3B69 82B5 
  90 03dc 7DEE 5DF5 	 .ascii "}\356]\365TQ}\321\245Y\233_h$\026\337\361\007\266\355z\270\247"
  90      5451 7DD1 
  90      A559 9B5F 
  90      6824 16DF 
  90      F107 B6ED 
  91 03f3 7B4B 61DF 	 .ascii "{Ka\337S\331\302p\367\256\035\233\2727\017\026\262\335=\217n"
  91      53D9 C270 
  91      F7AE 1D9B 
  91      BA37 0F16 
  91      B2DD 3D8F 
  92 0408 BFBF 7B67 	 .ascii "\277\277{gv\377P>=\222\255-\366l\035\310\f\r\356\033\030\331"
  92      76FF 503E 
  92      3D92 AD2D 
  92      F66C 1DC8 
  92      0C0D EE1B 
  93 041e B37D 77D7 	 .ascii "\263}w\327\023\340l-\024\006\013\233\0073\331\304\246\247G\262"
  93      13E0 6C2D 
  93      1406 0B9B 
  93      0733 D9C4 
  93      A6A7 47B2 
  94 0432 C3BD 033B 	 .ascii "\303\275\003;\013\351\201\341\376l\301\335\222\036I\357\030)"
  94      0BE9 81E1 
  94      FE6C C1DD 
  94      921E 49EF 
  94      1829 
  95 0444 64D3 FBD7 	 .ascii "d\323\373\327\013\320\325U?\327\334\263\324\265\027\fv\363\037"
  95      0BD0 D555 
  95      3FD7 DCB3 
  95      D4B5 170C 
  95      76F3 1F
  96 0457 8F56 EA27 	 .ascii "\217V\352'"
  97               	 .text
  98               	 .section .gnu.lto_Endpoint_Read_Stream_LE.part.3.286d6c29995bfbbb,"",@progbits
  99 0000 789C 8D55 	 .ascii "x\234\215Umh[e\024>\347\275\271\271\037\271I\3234\351'\302\030"
  99      6D68 5B65 
  99      143E E7BD 
  99      B9B9 1FB9 
  99      49D3 34E9 
 100 0017 F86B D0FC 	 .ascii "\370k\320\374\022\005A\351>d\205\375\332\207+(\214`\022\266\230"
 100      1205 41E9 
 100      3E64 85FD 
 100      DA87 2B28 
 100      8C60 12B6 
 101 002c B525 2D82 	 .ascii "\265%-\202\370\243\267\313\n\325\025)c\202tC'\243\350X1\033\025"
 101      F8A3 B7CB 
 101      0AD5 1529 
 101      6382 7443 
 101      27A3 E858 
 102 0043 C539 46AD 	 .ascii "\3059F\255\212\233e\023\307\004\003\373\321\241P\347*\352?\247"
 102      8A9B 6513 
 102      C704 03FB 
 102      D1A1 50E7 
 102      2AEA 3FA7 
 103 0057 D5EB 39EF 	 .ascii "\325\3539\357{ob\322Y{"
 103      7B6F 62D2 
GAS LISTING  			page 8


 103      597B 
 104 0061 21EF FB9E 	 .string "!\357\373\236s\236\347|\275\037\021 \240\371;K\277\335\006\300[4c\f0:}\223\026Q\024r\026B\373`\021\300\265Cw\"\340:\032\206X=n\2060\"\355\272\b\337n'\263u\345q2\207\2051'H2\177X\"\216c\240\243\320\246p\244\336Vz\013m\245\267\225\227\276\210\320\245\305\2260\307Ad5 \214E\205\026\322\303\206i\331\021\007\307\236G\316X\337\n\357\270\356\314\362\354\255\251\320\304Ew\322\365\274\261\"[\362\b\317a\021\321\224\223\300\306B\025\313\235<\265\200\323\356\337\236G\020mS\234\223\013o\377\274\305-/\270\277{\236A\201\004<\205\233\343\235y\303uq\374\254\273\346yZ\021C\002v\327\211qE\024\017%\3164\020u\001\003\377G\254\bw\331\363\036\254\230\217\"\016s\216E\fk\264\302\020\320\240\323J\204!\213\357\342V0\310f\230<X<\330<D\030\357\020`\226"
 104      739E E77C 
 104      BD1F 1120 
 104      A0F9 3B4B 
 104      BFDD 06C0 
 105 0162 5116 6224 	 .string "Q\026b$\234#\241\205\004\210\373\324V\177N\260\3236\036\222>'\305\260v\326t\370\230N\337\322\305\312n_\331\343+y\033\341\270\353NoQz\245U\021\345\246\320w\220\306[\032MQ\232\264\001\024<]\203\343\253\237~\234\312\342y\324\241\200\310\2750\377\335\210\001\332\325)M\273\001\307.O\374\371\023\006@q\032f\306]7N\333\320\304\272\001\345W\313\205"
 105      9C23 A185 
 105      0488 FBD4 
 105      567F 4EB0 
 105      D336 1E92 
 106 01d7 4756 8DD0 	 .string "GV\215\320"
 106      00
 107 01dc D741 281D 	 .string "\327A(\035eOj\211;Q\366\272\003`\270\200z#PUB\226 \221\020'\fP\205vr*\330\213\266\272\024\256B\007Q\305\235{\344!\254\255\275X\205NN\207\"\210\325{a\177\251I\007:\320\265\240R\026/\177Qy\375\273%\303oY\320\273\205\023\037\356\001P\301\363({V@\203\013=5N\205Z\354\313\376Q\035\033\273^\355'\237\221\263\013\221,^\220\205\230\304a\204A~\341\032|\276rw\342\264\026TiJKc\177\303\360W*H\252RY\237\324G\241zRB%em*)r\226\305\367e\\\2338]\360\246\373\236{\361i\"I\314b\277\262n\344\253\300\363\327P\376\365\344/\206\312\001\340\025\370\203\036\t\302G\362|\343\351+\242\303\245\322Iz\360\310F'\311\200\333\340\237\244\373\""
 107      654F 6A89 
 107      3B51 F6BA 
 107      0360 B880 
 107      7A23 5055 
 108 02c0 4636 3A49 	 .string "F6:I\223\265\316E\tY\3408\304\357W\312\377 \0226\bh\302\371\224F\351/\277\366}\355\344\306j\371G\363|4d\376\261\206swN\236\273\230\252\251N|\310\336Y\260\362X\260wW/%\233\367n\351\313\276\372\336\351*\271\226\246~\377\326\274w\353\312#R\234!\272_^\213\177y\356:Aj\255>B\276\233\353.P\253jeye\252v\333\332\n\230\220W\203\036Dh\276\234m>\376\376\324\266"
 108      93B5 CE45 
 108      0959 E038 
 108      C4EF 57CA 
 108      FF20 1236 
 109 0345 9FA4 D64B 	 .ascii "\237\244\326K|S\200Y\031 \031\264\303\206\253_\201\274\242]\024"
 109      7C53 8059 
 109      1920 19B4 
 109      C386 AB5F 
 109      81BC A25D 
 110 035a C064 5FD6 	 .ascii "\300d_\326\231\371\303U\350\246\004Yl\265\246\346\343U\350!w"
 110      99F9 C355 
 110      E8A6 0459 
 110      6CB5 A6E6 
 110      E355 E821 
 111 036f 2C26 ADB9 	 .ascii ",&\255\271\3719df\004\350/J\273\016\307L\250\271u8\224R\250B"
 111      F939 6466 
 111      04E8 2F4A 
 111      BB0E C74C 
 111      A8B9 7538 
 112 0387 E281 42A6 	 .ascii "\342\201B\246\231\360\317\334\267\231 \313\204\177\333\203\257"
 112      99F0 CFDC 
 112      B799 20CB 
 112      847F DB83 
 112      AF
 113 0398 0A89 02B6 	 .ascii "\n\211\002\266\207\b\333ec\025\342\005\354`\241\233\005\247\200"
 113      8708 DB65 
 113      6315 E205 
 113      EC60 A19B 
 113      05A7 80
 114 03ab 9D2C F4D8 	 .ascii "\235,\364\3302\276\303o\3137\364\037\312\rN)r\212\335\321V\032"
 114      32BE C36F 
 114      CB37 F41F 
 114      CA0D 4E29 
 114      728A DDD1 
 115 03c1 6B15 02C6 	 .ascii "k\025\002\306\314+\227\344\313B\266\310\352\274\311\017*\022"
 115      CC2B 97E4 
 115      CB42 B6C8 
 115      EABC C90F 
GAS LISTING  			page 9


 115      2A12 
 116 03d3 8BAF E493 	 .ascii "\213\257\344\223{\016<\323\227\336Y:\362R\2564\222>\260o{z\307"
 116      7B0E 3CD3 
 116      97DE 593A 
 116      F252 AE34 
 116      923E B06F 
 117 03ea 5029 97EE 	 .ascii "P)\227\356{v\357\023\351\375\271\243\303\305\314h\256\2668\264"
 117      7B76 EF13 
 117      E9FD B9A3 
 117      C3C5 CC68 
 117      AEB6 38B4 
 118 03fe 6B30 3B3C 	 .ascii "k0;<tdp\364\320\336\203\275/\200\265\253T\032*\355\030\312\346"
 118      7464 70F4 
 118      D0DE 83BD 
 118      2F80 B5AB 
 118      541A 2AED 
 119 0415 5AB6 BF3C 	 .ascii "Z\266\277<\232\033\351\037\334_\312\f\216\344s%{gf4\263o\264"
 119      9A1B E91F 
 119      DC5F CA0C 
 119      8EE4 7325 
 119      7B67 6634 
 120 042c 94CB 1CDD 	 .ascii "\224\313\034\335(@oo\343\\s\317R\357a\370\007U\310\340\200"
 120      2840 6F6F 
 120      E35C 73CF 
 120      52EF 61F8 
 120      0755 C8E0 
 121               	 .text
 122               	 .section .gnu.lto_Endpoint_Write_PStream_LE.part.4.286d6c29995bfbbb,"",@progbits
 123 0000 789C 8D56 	 .string "x\234\215Vkh\034U\024>\347\316\354\274vv\263yl\336J\b\350\037%\321\037>@|\244\017%\320\037\322\207-U\f\213\273K\273n\036LVA\375\221I\267\221\332\256\030\242BH+\326\020K\252\301\030\"\026c\250\333h\2615\264j\251\340B\177\244\250\304\332\370\372gmt=\367\316\314&\233\3244\003\231s\357\271\3379\3379g\316=\033\006\fV>G\351\357i\r\340,I\f\002\006\372\317\323\"\200LH\306\244\217f"
 123      6B68 1C55 
 123      143E E7CE 
 123      ECBC 7676 
 123      B379 6CDE 
 124 008a 6C43 BEE4 	 .ascii "lC\276\344\007\333\224P\346\352^MF\2778\3671\345b%\035\353\323"
 124      07DB 9450 
 124      E6EA 5E4D 
 124      46BF 38F7 
 124      31E5 6225 
 125 00a1 F7D1 B1C2 	 .ascii "\367\321\261\302\3241F;\355\307Y\2621U4\035\264\306L\2417\034"
 125      D431 463B 
 125      EDC7 59B2 
 125      3155 341D 
 125      B4C6 4CA1 
 126 00b7 BD8E 86A3 	 .ascii "\275\216\206\2437\034/-~\346\023'\206\200\231&\"W\003BO\200I"
 126      371C 2F2D 
 126      7EE6 1327 
 126      8680 9926 
 126      2257 0342 
 127 00ce B24F 5135 	 .ascii "\262OQ5\335\360\233\330\363\024\362\210\225Fx\307\266\207\346"
 127      DDF0 9BD8 
 127      F314 F288 
 127      9546 78C7 
 127      B687 E6
 128 00e1 DEBD 9091 	 .ascii "\336\275\220\221\373>\264\017\330\371|O\222\237\304\021\236\304"
 128      FB3E B40F 
 128      D8F9 7C4F 
 128      929F C411 
GAS LISTING  			page 10


 128      9EC4 
 129 00f3 24A2 2604 	 .ascii "$\242&\004\303\342D\205\325@\366\355\227\033\355t\326\376+\237"
 129      C3E2 4485 
 129      D540 F6ED 
 129      971B ED74 
 129      D6FE 2B9F 
 130 0107 5793 2831 	 .ascii "W\223(1x\b\327eg\037\264\263\330o\377\233\317\023Df\360\330\222"
 130      7808 D765 
 130      671F B4B3 
 130      D86F FF9B 
 130      CF13 4466 
 131 011e 59C8 3163 	 .ascii "Y\3101c7\246\373\265\241\210\356\361\365\321e\217\274i\333\330"
 131      37A6 FBB5 
 131      A188 EEF1 
 131      F5D1 658F 
 131      BC69 DBD8 
 132 0132 7BD4 5ECC 	 .ascii "{\324^\314\347%A\270{\235\204CE\206>\006\211\233\031\2163{.\237"
 132      E725 41B8 
 132      7B9D 8443 
 132      4586 3E06 
 132      899B 198E 
 133 014a BF36 AFDD 	 .ascii "\2776\257\335\216\330\205\324\"IT$Z\241\f\364\362\321\212)\020"
 133      8ED8 85D4 
 133      2249 5424 
 133      5AA1 0CF4 
 133      F2D1 8A29 
 134 015f C5F7 B011 	 .ascii "\305\367\260\021T:S5\376\322\371\313\340/?\307\233\004\030%@"
 134      543A 5335 
 134      FED2 F9CB 
 134      E02F 3FC7 
 134      9B04 1825 
 135 0174 806F 82B4 	 .ascii "\200o\202\2649F\233\022\327*Dr\204d)\311a\222e\256\276\234\373"
 135      3946 9B12 
 135      D72A 4472 
 135      8464 29C9 
 135      6192 65AE 
 136 018b AFE0 AFB0 	 .ascii "\257\340\257\260k^I\346R\025\327T\273\230\032\367\244\226+\353"
 136      6B5E 49E6 
 136      5215 D754 
 136      BB98 1AF7 
 136      A496 2BEB 
 137 019f 5C65 BDAB 	 .ascii "\\e\275\253\244\307\007\373m\273\277\301\321;Z\207\\\264\003"
 137      A4C7 07FB 
 137      6DBB BFC1 
 137      D13B 5A87 
 137      5CB4 03
 138 01b2 3D3B E97D 	 .ascii "=;\351}A\"\021 !\355B\306\305\031\330\277p\352\223p\024\307\320"
 138      4122 1120 
 138      21ED 42C6 
 138      C519 D8BF 
 138      70EA 9370 
 139 01c9 4705 425E 	 .ascii "G\005B^\026myMv\241\004\031I:\007\373\246\372\256\377\202\036"
 139      166D 794D 
 139      76A1 0419 
 139      493A 07FB 
 139      A6FA AEFF 
 140 01df 901D 86A1 	 .ascii "\220\035\206\241^\333\016\321\027Yau\016\322\257\244\023\036"
GAS LISTING  			page 11


 140      5EDB 0ED1 
 140      1759 6175 
 140      0ED2 AFA4 
 140      131E 
 141 01f1 8E4E 2542 	 .ascii "\216N%B\363[\305\034\035EOj\201;\224\316\327z@%\201\276b\240"
 141      F35B C51C 
 141      1D45 4F6A 
 141      813B 94CE 
 141      D77A 4025 
 142 0209 9309 9D78 	 .ascii "\223\t\235x\201\310<`\200\034T\221S\306\275H\013\263J\016\252"
 142      81C8 3C60 
 142      801C 5491 
 142      53C6 BD48 
 142      0BB3 4A0E 
 143 021e C994 5DBA 	 .ascii "\311\224]\272B\036\024i\361\331\034\324\360p\210\201-\\Q\334"
 143      421E 1469 
 143      F1D9 1CD4 
 143      F070 8881 
 143      2D5C 51DC 
 144 0232 A524 1CF8 	 .ascii "\245$\034\370\200.\027\24523u\372\304k\337\317\252n\311\274\332"
 144      802E 17A5 
 144      3233 75FA 
 144      C46B DFCF 
 144      AA6E C9BC 
 145 0247 650F 7DBC 	 .ascii "e\017}\274\005\300!\217\243\250Y"
 145      05C0 218F 
 145      A3A8 59
 146 0252 0255 9EE8 	 .string "\002U\236\350\033\275\224\250\316}\031?;\035d,e\373\351\347\344\354}\177\024?\020\211hd\303\021*\371\2053\360\305\374\345\276\303\222\227\245&N\212\353\253\300?a/\250\301\361\325A\235\220\227\202bNP\372\272\202\"gQ\234\020\274\006\331\324\300\240=j\317=LF\0023\323\352\234\256\345+\301\345\327\220\376c\340w\325\211\001\340%\370\233F\r\341\375q\224\004*\211&O\225:\351\332-ku\222\n\027\301\355\244\253\314\003\372\327\352\244\003\205\312\005\b\231\340<d\337\352(\377\307\220\260\036\241\006\307\303\022\205?w\360\207B\347\006\013\361\007\342\2745D\374\301\242\276;&\372.\350\344\264dx\203o\247\303\374=<\243\337\322\237e\344\302\r\034\021woX\334=\257j\344 \224\300\022\227gJ\360\214\b\236\020\300yO\307\273n\202\252\312x\313\212\217}+\234\304\267\354\301G\222\334\226{)\005\367\254"
 146      1BBD 94A8 
 146      CE7D 193F 
 146      3B1D 642C 
 146      65FB E9E7 
 147 0353 9871 0121 	 .string "\230q\001!\227F\304\266\214fX\320\224.\323\361\t\331?\220}\375\247e#\271\224\301i\274\331L\026n\250uf\247\257\177\363jzU\257\316~\331\022\305S\313\362\216;\271\257h\261?\213[\254\324\035\006\227M\257\324eT\251\002\375\252\201P\346\264Fz>S\230\036\025\t,\027W\235f=\254\0346\025.\376j\346\016\017\037\246V\022\370\025\004\243\202 \354}^\003N~\005b\344\324\022\201\306}\351G&\367\344\240\216\002\344\3332=3\031\312A=\271\343\333\260>69\206\334\322\017\364\303-\235\205}\032\024\334\232\234\312Q8\211\224x\n\021f\271{\207\276\213xQ\226\273\323\313{rP\236\300*\231\260\265\006\346\240$\201\325|S\3077f\002k\370\246\336\020\374&\237\225\337\322\177\026\274\300\225\216q%w'\371@]\034'`P\233\236\250\026\032"
 147      9746 C4B6 
 147      8C66 58D0 
 147      942E D3F1 
 147      09D9 3F90 
 148 0445 FFC2 A4C6 	 .ascii "\377\302\244\306\177 \220\254xS=\260e\307\243-\315\233\254\275"
 148      7F20 90AC 
 148      7853 3DB0 
 148      65C7 A32D 
 148      CD9B ACBD 
 149 0459 CFC7 ACEE 	 .ascii "\317\307\254\356\346\035\33364o\354\264b\315-Ol\275\277y{\254"
 149      E61D DB36 
 149      346F ECB4 
 149      62CD 2D4F 
 149      6CBD BF79 
 150 046f BD2B 1949 	 .ascii "\275+\031I\305\n\213\266\315\035\321\256\316\275\035\251\266"
 150      C50A 8BB6 
 150      CD1D D1AE 
 150      CEBD 1DA9 
 150      B6
 151 0480 AD3B 9B9E 	 .ascii "\255;\233\236\001\255\255\315\212u?\227L\321\"\022\215Zw\337"
 151      01AD ADCD 
 151      8A75 3F97 
 151      4CD1 2212 
 151      8D5A 77DF 
GAS LISTING  			page 12


 152 0494 AB6F B6AC 	 .ascii "\253o\266\254Nkcg4V\262\341\205T\254\273\265c\273\025\351\350"
 152      4E6B 6367 
 152      3456 B2E1 
 152      8554 ACBB 
 152      B563 BB15 
 153 04aa 8EC7 2C63 	 .ascii "\216\307,cS$\025\331\226\262b\221\366\265(\233\232\212e\201\220"
 153      5324 15D9 
 153      96B2 6291 
 153      F6B5 289B 
 153      9A8A 6581 
 154 04bf EF9A F680 	 .ascii "\357\232\366\200\231\354jo\270\355\256;\033v\033:H\017Z\300^"
 154      99EC 6A6F 
 154      B8ED AE3B 
 154      1B76 1B3A 
 154      480F 5AC0 
 155 04d4 0499 BBFE 	 .ascii "\004\231\273\376\017\022U!\201"
 155      0F12 5521 
 155      81
 156               	 .text
 157               	 .section .gnu.lto_Endpoint_Write_EStream_LE.part.5.286d6c29995bfbbb,"",@progbits
 158 0000 789C 8D55 	 .string "x\234\215Ukh\\E\024>g\346\356\336\307\336}\344\261y\"\224\202\277\n\311/Q\020\224\364!\006\372\253\017\033P(\213\273K{\335&a\023\004\361Gn\272\tT\0335D\205\222\026Zk\225\252\221(\021\213\265H\214\026[C}\224\n.\364G\212J\254\215\370\370e5\262\2363s\357\246\233\324\264\027vf\3169\337w\0363gf\005\bX\375\235\240_\316\004x\235fL"
 158      6B68 5C45 
 158      143E 67E6 
 158      EEDE C7DE 
 158      7DE4 B179 
 159 007a C6C7 BFA2 	 .string "\306\307\277\242E\034\205\232\205\220\037\314\001\370\216q5\006\276+\321`\365\260e`L\331#\"z\245\211\314\366\271\373\311\034\025\346\224 \311\372q\2368\256\211\256F[\302UzG\353mt\264\336\321^\272b\"\242,\216\202\271.\"\253\001a(.\244\021\211\232\226\355\304\\\034z\0029cc#\274\346\373\223\013o\\\0363F\337\363\017\371\225\312P\201-y\204\307\261\200h\251I`m\241\21251{\374\327\r~i\326\377\253R1\013(\005<\204w\307;\366\252\357\343\360\t\177\271R\221\0054\004<\272BLi\242\270-q\262\206\030\021\320s'\342\264\360\027*\225\233\213\326\275\210\375HgV\300\250\244\025\032@C\204V\"\nY|\0237\202I6\323\342\301\346\301\341!\306x\227"
 159      451C 859A 
 159      8590 1FCC 
 159      01F8 8E71 
 159      3506 BE2B 
 160 0155 A708 1067 	 .ascii "\247\b\020g!A\302I\022\222\001+\305\260\272@\250g\247\r<4\006"
 160      2141 C249 
 160      1292 012B 
 160      C5B0 BA40 
 160      A867 A70D 
 161 016c 9C34 9965 	 .ascii "\2344\231e\023k\232\003LK`iee[\240l\017\224\364E`\304\367\307"
 161      136B 9A03 
 161      4C4B 6069 
 161      6565 5BA0 
 161      6C0F 94F4 
 162 0185 3768 BDD6 	 .ascii "7h\275\326\352\210\352P\350\333C\343eIS"
 162      EA88 EA50 
 162      E8DB 43E3 
 162      6549 53
 163 0194 9C26 D983 	 .string "\234&\331\203\202\247\0130\262\364\351G\351,\236\306\bx\210\274\027\326\255\033\321\203\022\306\244\274\004\007\317\216\376\363\013\206@q\024&\207}?E\307\260\212u\tJ\317\225\274\020GVIh\200\213 \264\216\262'\265\302\035.U\332B`\324\303H-PWB\2260\021\203\023\006(C\0239\025\354E.\315G\313\320LTq\365:y\210\312\345\247\312\320\302\351P\004\261t=\032,\245r\020\001jq*e\356\354\371\351\027\277\2377\203-\013\367n\366\360\207\333\001t\360<\252=\363\320\344B_\031\246Bm\366\345\374\254\333\306Y\251\366\343\317\310\331;\261,\276\255\n\261\210\303\b\223\374\302\005\370|\361\332\350Q\031Vi)K\355\376F\341\337t\230\324\221\351\265I\2351V\222\022:)\373\256\222\"gY|W\305u\210\323\nG\374\323\376\302\303DR\230\271nm]\317\227\307\363\327P\372}\3427S\347"
 163      82A7 0B30 
 163      B2F4 E947 
 163      E92C 9EC6 
 163      0878 88BC 
 164 0295 F02C FC4D 	 .string "\360,\374M\027\236\360\261<J\205*\240\313\245R'\335\274g\275N2\341\n\004\235tC\204\300\330z\235t\250\272sqBz\034\207\370\335Z\371?D\302\206\001-x+-)\375\205\347\177\250vn\242\232\177<\317\255\241\362O\324\364\335I\325w\t]\323\n\3616gg\303\342}\024`d\341\245R\025\227\252\006H\346\325\206qJ\311\002=4+1\370]\032\237\230}\371\247[\036\302:\001\307\361N/\241\307n\350\354\346\227\377\374\346\205\322\232f\231\377\242+\213g\324\245\017[F]\237Ug\374G\355\031\247\202\333x\315\rk\250\243\214\253\341\327\334\310:}6\245\305\261\352\365m\360\260^\3355zaa\365mo\b\3607\3066\205\370F:K\205_\025\340\224\n\320\030\356\257\003\237|\t\352\316\267R"
 164      179E F0B1 
 164      3C4A 852A 
 164      A0CB A552 
 164      27DD BC67 
 165 0377 8B7D D9C7 	 .ascii "\213}\331\307f\366\225\241\215\022d\261\316\036\233I\225\241"
 165      66F6 95A1 
 165      8D12 64B1 
GAS LISTING  			page 13


 165      CE1E 9B49 
 165      95A1 
 166 0389 9DDC B1D8 	 .ascii "\235\334\261\330hO\315L!3c@\377_\362\"\034\264\240\352\326\345"
 166      684F CD4C 
 166      2133 6340 
 166      FF5F F222 
 166      1CB4 A0EA 
 167 039f 505A A10B 	 .ascii "PZ\241\013I\206\n\225f}\320\304\337e\302,\353\203\347#\374\312"
 167      4986 0A95 
 167      667D D0C4 
 167      DF65 C22C 
 167      EB83 E723 
 168 03b5 50EF 6193 	 .ascii "P\357a\223A\330V\007\313\220\364\260\231\2056\026\\\017[XhwT"
 168      41D8 5607 
 168      CB90 F4B0 
 168      9985 3616 
 168      5C0F 5B58 
 169 03cc 7C97 1FAB 	 .ascii "|\227\037\253o\351\017\22678\255\311iv'#`.O\0230a\235{_=UT_l"
 169      6FE9 0F96 
 169      3738 ADC9 
 169      6976 2723 
 169      602E 4F13 
 170 03ea 69C6 E217 	 .ascii "i\306\342\027\032\211\305w\374\301\355\273\037\351\352\334Z\334"
 170      1A89 C577 
 170      FCC1 EDBB 
 170      1FE9 EADC 
 170      5ADC 
 171 03fc FF74 AE38 	 .ascii "\377t\2568\320\271{\347\346\316-}\305\\g\327c;\036\350\334\225"
 171      D0B9 7BE7 
 171      E6CE 2D7D 
 171      C55C 67D7 
 171      633B 1EE8 
 172 0412 3BD0 5FC8 	 .ascii ";\320_\310\f\346\252\213\275\333z\263\375}\373{\007\367\356\330"
 172      0CE6 AA8B 
 172      BDDB 7AB3 
 172      FD7D FB7B 
 172      07F7 EED8 
 173 0426 D3F1 24D8 	 .ascii "\323\361$\330\333\212\305\276\342\226\276l.\271\371\231\301\334"
 173      DB8A C5BE 
 173      E296 BE6C 
 173      2EB9 F999 
 173      C1DC 
 174 0438 4077 EFAE 	 .ascii "@w\357\256b\246w \237+:[3\203\231\235\203\305\\\346\300z\001"
 174      62A6 7720 
 174      9F2B 3A5B 
 174      3383 999D 
 174      83C5 5CE6 
 175 044f 3A3A 6AE7 	 .ascii "::j\347\252{\226:\366\201\301n\376\003\030\214\352\001"
 175      AA7B 963A 
 175      F681 C16E 
 175      FE03 188C 
 175      EA01 
 176               	 .text
 177               	 .section .gnu.lto_Endpoint_Read_EStream_LE.part.6.286d6c29995bfbbb,"",@progbits
 178 0000 789C 8D55 	 .ascii "x\234\215Ukh\034U\024>\347\316\314\316cg7\233\315\346\215P\212"
 178      6B68 1C55 
 178      143E E7CE 
GAS LISTING  			page 14


 178      CCCE 6367 
 178      379B CDE6 
 179 0017 C51F 42F6 	 .ascii "\305\037B\366\257 (\351C\214\364W\0376\240P\026w\227v\273M\302"
 179      AF20 28E9 
 179      438C F457 
 179      1F36 A050 
 179      1677 9776 
 180 002e 2608 E28F 	 .ascii "&\b\342\217L\272\rD\033$\226\n\222\026\255\224\240\322`Z\"\212"
 180      4CBA 0D44 
 180      1B24 960A 
 180      9216 AD94 
 180      A0D2 605A 
 181 0044 5524 8D16 	 .ascii "U$\215\026\033B-\025\004\027\372#A!\326F|\375\261\032\034\317"
 181      1B42 2D15 
 181      0417 FA23 
 181      4121 D646 
 181      7CFD B11A 
 182 005a B977 66D3 	 .ascii "\271wf\323\335\324\230\201\275\367\236s\276\357\274\356c\005"
 182      DDD4 9881 
 182      BDF7 9E73 
 182      BEEF BCEE 
 182      6305 
 183 006c 08A8 FFCE 	 .ascii "\b\250\377\316\323\357\031\023\340-\2321\016\030\233\370\232"
 183      D3EF 1913 
 183      E02D 9A31 
 183      0E18 9BF8 
 183      9A
 184 007d 1631 1472 	 .ascii "\0261\024r\026B\373p\036\300s\364\333Q\360\\\ruV\217X:F\245\335"
 184      1642 FB70 
 184      1EC0 73F4 
 184      DB51 F05C 
 184      0D75 568F 
 185 0096 1091 B147 	 .ascii "\020\221\261G\310l\363\350F\2049-H\262~X$\216k\242\253\320\226"
 185      C86C F3E8 
 185      4684 392D 
 185      48B2 7E58 
 185      248E 6BA2 
 186 00ad 70A5 DE51 	 .ascii "p\245\336Qz\033\035\245w\224\227\356\2500\244\305\2210\327Ed"
 186      7A1B 1DA5 
 186      7794 97EE 
 186      A830 A4C5 
 186      9130 D745 
 187 00c2 3520 0CC7 	 .ascii "5 \f\307\204\246\033\021\323\262\235\250\213\303\317#gll\207"
 187      84A6 1B11 
 187      D3B2 9DA8 
 187      8BC3 CF23 
 187      676C 6C87 
 188 00d6 773C 6F72 	 .ascii "w<ori\352\233q}\364\2227\346\371\376p\221-y\204\347\260\210h"
 188      69EA 9B71 
 188      7DF4 9237 
 188      E6F9 FE70 
 188      912D 7984 
 189 00ee C949 606D 	 .ascii "\311I`m\241\212\345\215\235\231\303\t\357\037\337'\210\266%\316"
 189      A18A E58D 
 189      9D99 C309 
 189      EF1F DF27 
 189      88B6 25CE 
GAS LISTING  			page 15


 190 0102 E9B9 B77F 	 .ascii "\351\271\267\177\336\346\225\347\274?}\337\244@\002\236\300\255"
 190      DEE6 95E7 
 190      BC3F 7DDF 
 190      A440 029E 
 190      C0AD 
 191 0114 F1CE BDE1 	 .ascii "\361\316\275\341y8r\336[\363}\255\210\272\200\247\327\211\tE"
 191      7938 72DE 
 191      5BF3 7DAD 
 191      88BA 80A7 
 191      D789 0945 
 192 0128 140F 244E 	 .ascii "\024\017$N\326\020\r\001\275\377G\234\021\336\222\357\337[\261"
 192      D610 0D01 
 192      BDFF 479C 
 192      11DE 92EF 
 192      DF5B B1
 193 013b 7620 0E70 	 .ascii "v \016p\216E\214h\264B\035h0h%\"\220\305wq;\230d3-\036l\036\034"
 193      8E45 8C68 
 193      B442 1D68 
 193      3068 2522 
 193      90C5 7771 
 194 0158 1EA2 8C77 	 .ascii "\036\242\214w\t0E\200\030\013q\022.\220\320@\002$\002jc0'\331"
 194      0930 4580 
 194      180B 7112 
 194      2E90 D040 
 194      0224 026A 
 195 0170 6913 0FA9 	 .ascii "i\023\017\251\200\323\314\260\026\326\264\006\230\266\300\322"
 195      80D3 CCB0 
 195      16D6 B406 
 195      98B6 C0D2 
 196 0180 CECA 8E40 	 .ascii "\316\312\216@\331\031(y\033\341\244\347MlSz\245U\021\345\246"
 196      D919 2879 
 196      1BE1 A4E7 
 196      4D6C 537A 
 196      A555 11E5 
 197 0195 D077 88C6 	 .ascii "\320w\210\306E\235\246\030MZ/\n\236\256\303\311\325\253\2374"
 197      459D A618 
 197      4D5A 2F0A 
 197      9EAE C3C9 
 197      D5AB 9F34 
 198 01a9 67F1 7D34 	 .ascii "g\361}4\240\200\310\275\260\356oD/\355\352\037\232v\003N\\\031"
 198      A080 C8BD 
 198      B0EE 6F44 
 198      2FED EA1F 
 198      9A76 034E 
 199 01bf FDFB 270C 	 .ascii "\375\373'\f\201\342,L\216x^\202\266\241\216u\003\312\257\224"
 199      81E2 2C4C 
 199      8E78 5E82 
 199      B6A1 8E75 
 199      03CA AF94 
 200 01d3 0B21 8EAC 	 .ascii "\013!\216\254\032\241\001\026@(\035eOj\211;U\366;B`\244\200F"
 200      1AA1 0116 
 200      4028 1D65 
 200      4F6A 893B 
 200      55F6 3B42 
 201 01eb 2D50 5542 	 .ascii "-PUB\2260\021\235\023\006\250@\0139\025\354E[]\214T\240\225\250"
 201      9630 119D 
 201      1306 A840 
GAS LISTING  			page 16


 201      0B39 15EC 
 201      455B 5D8C 
 202 0203 E2F6 1DF2 	 .ascii "\342\366\035\362\020\321\326\216U\240\215\323\241\bb\365N$Xj"
 202      10D1 D68E 
 202      55A0 8DD3 
 202      A108 62F5 
 202      4E24 586A 
 203 0217 D281 0174 	 .ascii "\322\201\001t-\250\224\371+\327f^\373n\321\fZ\026\366n\356\324"
 203      2DA8 94F9 
 203      2BD7 665E 
 203      FB6E D10C 
 203      5A16 F66E 
 204 022d 477B 0154 	 .ascii "G{\001T\360<\312\236\025\320\344B\317\214P\2416\373r~T\307\306"
 204      F03C CA9E 
 204      15D0 E442 
 204      CF8C 50A1 
 204      36FB 727E 
 205 0244 59AF F6D3 	 .ascii "Y\257\366\323/\310\331\305h\026/\312B,\3420\302$\277p\035\276"
 205      2FC8 D9C5 
 205      6816 2FCA 
 205      422C E230 
 205      C224 BF70 
 206 025a 5C59 1E3D 	 .ascii "\\Y\036=\253\205UZ\322R\333\337\b\374\276#LjffcR\037\353\353"
 206      AB85 555A 
 206      D252 DBDF 
 206      08FC BE23 
 206      4C6A 6666 
 207 0273 4909 9594 	 .ascii "I\t\225\224\275\245\244\310Y\026?\220q\035\342\264\303\233\336"
 207      BDA5 A4C8 
 207      5916 3F90 
 207      711D E2B4 
 207      C39B DE
 208 0286 7BDE A527 	 .ascii "{\336\245'\211$1\363=\312\272\231\257\002\3177\241\374\353\351"
 208      8924 31F3 
 208      3DCA BA99 
 208      AF02 CF37 
 208      A1FC EBE9 
 209 029a 5F4C 9503 	 .ascii "_L\225\003\300\313\360\027=\022\204\217\346\371\306\323WD\227"
 209      C0CB F017 
 209      3D12 848F 
 209      E6F9 C6D3 
 209      5744 97
 210 02ad 4BA5 9374 	 .ascii "K\245\223t\357\241\315N\222\t\257cp\222\356\212\020\030\335\354"
 210      EFA1 CD4E 
 210      9209 AF63 
 210      7092 EE8A 
 210      1018 DDEC 
 211 02c1 248D 553B 	 .ascii "$\215U;\027#d\201\343\020\277G)\377\203H\3300\240\005\313\017"
 211      1723 6481 
 211      E310 BF47 
 211      29FF 8348 
 211      D830 A005 
 212 02d7 6B94 FED2 	 .ascii "k\224\376\322\253\337WOn\274\232\177,\317GC\346\037\2579w\027"
 212      ABDF 574F 
 212      6EBC 9A7F 
 212      2CCF 4743 
 212      E61F AF39 
GAS LISTING  			page 17


 213 02ed E4B9 8BAB 	 .ascii "\344\271\213\253\232\326\211\017\330;\373\276\275\373\374r\252"
 213      9AD6 890F 
 213      D83B FBBE 
 213      BDFB FC72 
 213      AA
 214 02fe 7EEF 16BF 	 .ascii "~\357\026\277\352^\337;C%\327P\327\357\337j\367\356&\030\033"
 214      EA5E DF3B 
 214      4325 D750 
 214      D7EF DF6A 
 214      F7EE 2618 
 215 0313 1ADD 900F 	 .ascii "\032\335\220\017.A\001\023\344\240Ho\226\272>\313n\230\\#\231"
 215      2E41 0113 
 215      E4A0 486F 
 215      96BA 3ECB 
 215      6E98 5C23 
 216 0328 AA2F E786 	 .ascii "\252/\347\206+\324\250\232Y^\031\257\336\267\246\002&\345\345"
 216      2BD4 A89A 
 216      595E 19AF 
 216      DEB7 A602 
 216      26E5 E5
 217 033b A027 11EA 	 .ascii "\240'\021\352\257gS\200\277;\376h\210OQ\363%\276.\300\224\f\220"
 217      AF67 5380 
 217      BF3B FE68 
 217      884F 51F3 
 217      25BE 2EC0 
 218 0352 0A1B E2C0 	 .ascii "\n\033\342\300\265\005\220\227\264\235\002X\354\313>7{\244\002"
 218      B505 9097 
 218      B49D 0258 
 218      ECCB 3E37 
 218      7BA4 02
 219 0365 1D94 208B 	 .ascii "\035\224 \213\215\366\370l\242\002\235\344\216\305\224==;\215"
 219      8DF6 F86C 
 219      A202 9DE4 
 219      8EC5 943D 
 219      3D3B 8D
 220 0378 CC8C 02FD 	 .ascii "\314\214\002\375Ii\013p\302\202\252[\227C)\205*$\021*d\232\311"
 220      4969 0B70 
 220      C282 AA5B 
 220      9743 2985 
 220      2A24 112A 
 221 038f E0D4 7D9B 	 .ascii "\340\324}\233\t\263L\006\367=\374*\220,`\213N\330v\007+@\335"
 221      09B3 4C06 
 221      F73D FC2A 
 221      902C 608B 
 221      4ED8 7607 
 222 03a6 6B65 A183 	 .ascii "ke\241\203\005\267\200m,t:2\276\313\257\313-\372\027\34567+r"
 222      05B7 806D 
 222      2C74 3A32 
 222      BECB AFCB 
 222      2DFA 17E5 
 223 03be 33BB A3CD 	 .ascii "3\273\243\3154\327f\b\030\267>\273,\337\026\262EWg-~R\221X|)"
 223      34D7 6608 
 223      18B7 3EBB 
 223      2CDF 16B2 
 223      4557 672D 
 224 03d8 1FDF 7BF0 	 .ascii "\037\337{\360\251\356\364\356\322\321\027s\245\301\364\301\375"
 224      A9EE F4EE 
GAS LISTING  			page 18


 224      D2D1 1773 
 224      A5C1 F4C1 
 224      FD
 225 03e9 3BD3 BBFA 	 .ascii ";\323\273\372K\271t\367\263\373\036K\037\310\035\037(f\206r\325"
 225      4BB9 74F7 
 225      B3FB 1E4B 
 225      1FC8 1D1F 
 225      2866 8672 
 226 03fe C5E1 3D7D 	 .ascii "\305\341=}\331\201\376\243}C\207\367\035\352z\001\354=\245R\177"
 226      D981 FEA3 
 226      7D43 87F7 
 226      1DEA 7A01 
 226      EC3D A552 
 227 0413 6957 7F36 	 .ascii "iW\1776\327\260\363\245\241\334`O\337\201R\246o0\237+9\2733C"
 227      D7B0 F3A5 
 227      A1DC 604F 
 227      DF81 52A6 
 227      6F30 9F2B 
 228 042b 99FD 43A5 	 .ascii "\231\375C\245\\\346\370f\001\272\272j\347\252{\226\272\216\300"
 228      5CE6 F866 
 228      01BA BA6A 
 228      E7AA 7B96 
 228      BA8E C0
 229 043e BFF3 DADF 	 .ascii "\277\363\332\337\377"
 229      FF
 230               	 .text
 231               	 .section .gnu.lto_Endpoint_Read_Control_Stream_LE.part.7.286d6c29995bfbbb,"",@progbits
 232 0000 789C 9553 	 .string "x\234\225SMk\023Q\024\275\367\275\3712V(\350\017\220\376\200d\341Fp\225&u\325UcM\244B\b\231)F\246I\210\241\033\027y\241U\212\250D\251\250\351\242\272h\213X\211Rp\241.R\255\325P\"\324\225\356j\021j\301\037 \"\216\367\275Ic\"E\343\203\231\373>\316\271\367\2347w\0300\370s\244\351\251r\200y\212x"
 232      4D6B 1351 
 232      14BD F7BD 
 232      F932 5628 
 232      E80F 90FE 
 233 006d D0AA BCA3 	 .string "\320\252\274\243\tc\3462\003\021\340\2377"
 233      0963 E632 
 233      0311 E09F 
 233      3700 
 234 007b 441F      	 .ascii "D\037"
 235 007d 6F2D 357F 	 .string "o-5\177\251\241!Qa\013u\205\326\3755\032\214)@@\241\373LD\271\r\b%\3065K7L,\235EY\324\032\200\373BT\267\026\336_\325.=\0263\302\363J\256<\031G\030C\027\321R\201a\267V\237%\256\314\326\261\"~z\036A\370oN\277\317a\373rf:8Z\217u:9\275j\373\177\316\315\372\355\365k\232h\337\202\306`\b{#>\275!\004\226\357\211\037\236\307\211h\343\022\262\336\230wnu2u\006g\360\037\367Xcb\313\363\356\356X\006\202\215\2138@\275\344\242\301\345K\003u\251\240\303\264\020\225\2436>\240ce\236F\234\336\273\006$H\0325\007o\302\313\306\267\355\017\330\306.*\254\215\017i\213\306y\3049\250\226E\271\337E\363\"|\247k\241\231\225W\271\2440\253%\250\001\314\306e\"\371)\210\007\360\026\326vV\347.s\377\200\266$\301\350\264\221\240\216Ym"
 235      A9A1 2151 
 235      610B 7585 
 235      D6FD 351A 
 235      8C29 4040 
 236 017e 57C8 F9F5 	 .ascii "W\310\371\365C\335H\275\003\031'KKo\200\307\251\342\256AA\227"
 236      43DD 48BD 
 236      0319 274B 
 236      4B6F 80C7 
 236      A9E2 AE41 
 237 0194 2141 E9A8 	 .ascii "!A\351\250\251\245\215g\257W\256\327\232f\313\310\236\373\372"
 237      A9A5 8D67 
 237      AF57 AED7 
 237      9A66 CBC8 
 237      9EFB FA
 238 01a7 C6DA A6B9 	 .ascii "\306\332\246\271\347g\034\321\367\304\244\247Y\345Iy\370\202"
 238      E767 1CD1 
 238      F7C4 A4A7 
 238      59E5 4979 
 238      F882 
GAS LISTING  			page 19


 239 01b9 5D5E 9A30 	 .ascii "]^\2320\365\374\025e{t\320\306\232\322\303\211\243$\311\004R"
 239      F5FC 1565 
 239      7B74 D0C6 
 239      9AD2 C389 
 239      A324 C904 
 240 01ce ECA7 85ED 	 .ascii "\354\247\205\355:\372Y\351t\037_\246\224\267\teK\326\223_\003"
 240      3AFA 59E9 
 240      741F 5FA6 
 240      94B7 0965 
 240      4BD6 935F 
 241 01e3 3E82 2671 	 .ascii ">\202&q\324P\354\353\223#j\312\201O\037\033\363\377\001\343\305"
 241      D450 ECEB 
 241      9323 6ACA 
 241      814F 1F1B 
 241      F3FF 01E3 
 242 01f8 8A25 6D22 	 .ascii "\212%m\"\021\345\307\036\034\036=\031\016E\013\231I\247p!4\032"
 242      11E5 C71E 
 242      1C1E 3D19 
 242      0E45 0B99 
 242      49A7 7021 
 243 020e 1B0C 4572 	 .ascii "\033\fEr\005'\024>=r<t\312\231\310\273\251\242\323\236$\207\262"
 243      0527 143E 
 243      3D72 3C74 
 243      CA99 C8BB 
 243      A9A2 D39E 
 244 0225 763E 97C9 	 .ascii "v>\227\311\026\223\221\\\266X\310\271\311\221`\032\016\023+\031"
 244      1693 915C 
 244      B658 C8B9 
 244      C991 601A 
 244      0E13 2B19 
 245 0239 7526 3369 	 .ascii "u&3i'V\224\250\341\310p \232*\246b\305\202\223\2328\361\227\n"
 245      2756 94A8 
 245      E1C8 7020 
 245      9A2A A662 
 245      C582 939A 
 246 0251 C160 776C 	 .ascii "\301`wl\347\227\253\3409\370\005\331\001\025\275"
 246      E797 ABE0 
 246      39F8 05D9 
 246      0115 BD
 247               	 .text
 248               	 .section .gnu.lto_Endpoint_Read_Control_Stream_BE.part.8.286d6c29995bfbbb,"",@progbits
 249 0000 789C 9553 	 .string "x\234\225SMk\023Q\024\275\367\275\3712V(\350\017\220\376\200d\341Fp\225&u\325UcM\244B\b\231)F\246I\210\241\033\027y\241U\212\250D\251\250\351\242\272h\213X\211Rp\241.R\255\325P\"\324\225\356j\021j\301\037 \"\216\367\275Ic\"E\343\203\231\373>\316\271\367\2347w\0300\370s\244\351\251r\200y\212x"
 249      4D6B 1351 
 249      14BD F7BD 
 249      F932 5628 
 249      E80F 90FE 
 250 006d D0AA BCA3 	 .string "\320\252\274\243\tc\3462\003\021\340\2377"
 250      0963 E632 
 250      0311 E09F 
 250      3700 
 251 007b 441F      	 .ascii "D\037"
 252 007d 6F2D 357F 	 .string "o-5\177\251\241!Qa\013u\205\326\3755\032\214)@@\241\373LD\271\r\b%\3065K7L,\235EY\324\032\200\373BT\267\026\336_\325.=\0263\302\363J\256<\031G\030C\027\321R\201a\267V\237%\256\314\326\261\"~z\036A\370oN\277\317a\373rf:8Z\217u:9\275j\373\177\316\315\372\355\365k\232h\337\202\306`\b{#>\275!\004\226\357\211\037\236\307\211h\343\022\262\336\230wnu2u\006g\360\037\367Xcb\313\363\356\356X\006\202\215\2138@\275\344\242\301\345K\003u\251\240\303\264\020\225\2436>\240ce\236F\234\336\273\006$H\0325\007o\302\313\306\267\355\017\330\306.*\254\215\017i\213\306y\3049\250\226E\271\337E\363\"|\247k\241\231\225W\271\2440\253%\250\001\314\306e\"\371)\210\007\360\026\326vV\347.s\377\200\266$\301\350\264\221\240\216Ym"
 252      A9A1 2151 
 252      610B 7585 
 252      D6FD 351A 
 252      8C29 4040 
 253 017e 57C8 F9F5 	 .ascii "W\310\371\365C\335H\275\003\031'KKo\200\307\251\342\256AA\227"
GAS LISTING  			page 20


 253      43DD 48BD 
 253      0319 274B 
 253      4B6F 80C7 
 253      A9E2 AE41 
 254 0194 2141 E9A8 	 .ascii "!A\351\250\251\245\215g\257W\256\327\232f\313\310\236\373\372"
 254      A9A5 8D67 
 254      AF57 AED7 
 254      9A66 CBC8 
 254      9EFB FA
 255 01a7 C6DA A6B9 	 .ascii "\306\332\246\271\347g\034\321\367\304\244\247Y\345Iy\370\202"
 255      E767 1CD1 
 255      F7C4 A4A7 
 255      59E5 4979 
 255      F882 
 256 01b9 5D5E 9A30 	 .ascii "]^\2320\365\374\025e{t\320\306\232\322\303\211\243$\311\004R"
 256      F5FC 1565 
 256      7B74 D0C6 
 256      9AD2 C389 
 256      A324 C904 
 257 01ce ECA7 85ED 	 .ascii "\354\247\205\355:\372Y\351t\037_\246\224\267\teK\326\223_\003"
 257      3AFA 59E9 
 257      741F 5FA6 
 257      94B7 0965 
 257      4BD6 935F 
 258 01e3 3E82 2671 	 .ascii ">\202&q\324P\354\353\223#j\312\201O\037\033\363\377\001\343\305"
 258      D450 ECEB 
 258      9323 6ACA 
 258      814F 1F1B 
 258      F3FF 01E3 
 259 01f8 8A25 6D22 	 .ascii "\212%m\"\021\345\307\036\034\036=\031\016E\013\231I\247p!4\032"
 259      11E5 C71E 
 259      1C1E 3D19 
 259      0E45 0B99 
 259      49A7 7021 
 260 020e 1B0C 4572 	 .ascii "\033\fEr\005'\024>=r<t\312\231\310\273\251\242\323\236$\207\262"
 260      0527 143E 
 260      3D72 3C74 
 260      CA99 C8BB 
 260      A9A2 D39E 
 261 0225 763E 97C9 	 .ascii "v>\227\311\026\223\221\\\266X\310\271\311\221`\032\016\023+\031"
 261      1693 915C 
 261      B658 C8B9 
 261      C991 601A 
 261      0E13 2B19 
 262 0239 7526 3369 	 .ascii "u&3i'V\224\250\341\310p \232*\246b\305\202\223\2328\361\227\n"
 262      2756 94A8 
 262      E1C8 7020 
 262      9A2A A662 
 262      C582 939A 
 263 0251 C160 776C 	 .ascii "\301`wl\347\227\253\3409\370\005\331\001\025\275"
 263      E797 ABE0 
 263      39F8 05D9 
 263      0115 BD
 264               	 .text
 265               	 .section .gnu.lto_Endpoint_Read_Control_EStream_LE.part.9.286d6c29995bfbbb,"",@progbits
 266 0000 789C 9553 	 .string "x\234\225SMk\023Q\024\275\367\275\3712V(\350\017\220\376\200d\341Fp\225&u\325UcM\244B\b\231)F\246I\210\241\033\027y\241U\212\250D\251\250\351\242\272h\213X\211Rp\241.R\255\325P\"\324\225\356j\021j\301\037 \"\216\367\275Ic\"E\343\203\231\373>\316\271\367\2347w\0300\370s\244\351\251r\200y\212x"
 266      4D6B 1351 
GAS LISTING  			page 21


 266      14BD F7BD 
 266      F932 5628 
 266      E80F 90FE 
 267 006d D0AA BCA3 	 .string "\320\252\274\243\tc\3462\003\021\340\2377"
 267      0963 E632 
 267      0311 E09F 
 267      3700 
 268 007b 441F      	 .ascii "D\037"
 269 007d 6F2D 357F 	 .string "o-5\177\251\241!Qa\013u\205\326\3755\032\214)@@\241\373LD\271\r\b%\3065K7L,\235EY\324\032\200\373BT\267\026\336_\325.=\0263\302\363J\256<\031G\030C\027\321R\201a\267V\237%\256\314\326\261\"~z\036A\370oN\277\317a\373rf:8Z\217u:9\275j\373\177\316\315\372\355\365k\232h\337\202\306`\b{#>\275!\004\226\357\211\037\236\307\211h\343\022\262\336\230wnu2u\006g\360\037\367Xcb\313\363\356\356X\006\202\215\2138@\275\344\242\301\345K\003u\251\240\303\264\020\225\2436>\240ce\236F\234\336\273\006$H\0325\007o\302\313\306\267\355\017\330\306.*\254\215\017i\213\306y\3049\250\226E\271\337E\363\"|\247k\241\231\225W\271\2440\253%\250\001\314\306e\"\371)\210\007\360\026\326vV\347.s\377\200\266$\301\350\264\221\240\216Ym"
 269      A9A1 2151 
 269      610B 7585 
 269      D6FD 351A 
 269      8C29 4040 
 270 017e 57C8 F9F5 	 .ascii "W\310\371\365C\335H\275\003\031'KKo\200\307\251\342\256AA\227"
 270      43DD 48BD 
 270      0319 274B 
 270      4B6F 80C7 
 270      A9E2 AE41 
 271 0194 2141 E9A8 	 .ascii "!A\351\250\251\245\215g\257W\256\327\232f\313\310\236\373\372"
 271      A9A5 8D67 
 271      AF57 AED7 
 271      9A66 CBC8 
 271      9EFB FA
 272 01a7 C6DA A6B9 	 .ascii "\306\332\246\271\347g\034\321\367\304\244\247Y\345Iy\370\202"
 272      E767 1CD1 
 272      F7C4 A4A7 
 272      59E5 4979 
 272      F882 
 273 01b9 5D5E 9A30 	 .ascii "]^\2320\365\374\025e{t\320\306\232\322\303\211\243$\311\004R"
 273      F5FC 1565 
 273      7B74 D0C6 
 273      9AD2 C389 
 273      A324 C904 
 274 01ce ECA7 85ED 	 .ascii "\354\247\205\355:\372Y\351t\037_\246\224\267\teK\326\223_\003"
 274      3AFA 59E9 
 274      741F 5FA6 
 274      94B7 0965 
 274      4BD6 935F 
 275 01e3 3E82 2671 	 .ascii ">\202&q\324P\354\353\223#j\312\201O\037\033\363\377\001\343\305"
 275      D450 ECEB 
 275      9323 6ACA 
 275      814F 1F1B 
 275      F3FF 01E3 
 276 01f8 8A25 6D22 	 .ascii "\212%m\"\021\345\307\036\034\036=\031\016E\013\231I\247p!4\032"
 276      11E5 C71E 
 276      1C1E 3D19 
 276      0E45 0B99 
 276      49A7 7021 
 277 020e 1B0C 4572 	 .ascii "\033\fEr\005'\024>=r<t\312\231\310\273\251\242\323\236$\207\262"
 277      0527 143E 
 277      3D72 3C74 
 277      CA99 C8BB 
 277      A9A2 D39E 
 278 0225 763E 97C9 	 .ascii "v>\227\311\026\223\221\\\266X\310\271\311\221`\032\016\023+\031"
 278      1693 915C 
 278      B658 C8B9 
 278      C991 601A 
GAS LISTING  			page 22


 278      0E13 2B19 
 279 0239 7526 3369 	 .ascii "u&3i'V\224\250\341\310p \232*\246b\305\202\223\2328\361\227\n"
 279      2756 94A8 
 279      E1C8 7020 
 279      9A2A A662 
 279      C582 939A 
 280 0251 C160 776C 	 .ascii "\301`wl\347\227\253\3409\370\005\331\001\025\275"
 280      E797 ABE0 
 280      39F8 05D9 
 280      0115 BD
 281               	 .text
 282               	 .section .gnu.lto_Endpoint_Read_Control_EStream_BE.part.10.286d6c29995bfbbb,"",@progbits
 283 0000 789C 9553 	 .string "x\234\225SMk\023Q\024\275\367\275\3712V(\350\017\220\376\200d\341Fp\225&u\325UcM\244B\b\231)F\246I\210\241\033\027y\241U\212\250D\251\250\351\242\272h\213X\211Rp\241.R\255\325P\"\324\225\356j\021j\301\037 \"\216\367\275Ic\"E\343\203\231\373>\316\271\367\2347w\0300\370s\244\351\251r\200y\212x"
 283      4D6B 1351 
 283      14BD F7BD 
 283      F932 5628 
 283      E80F 90FE 
 284 006d D0AA BCA3 	 .string "\320\252\274\243\tc\3462\003\021\340\2377"
 284      0963 E632 
 284      0311 E09F 
 284      3700 
 285 007b 441F      	 .ascii "D\037"
 286 007d 6F2D 357F 	 .string "o-5\177\251\241!Qa\013u\205\326\3755\032\214)@@\241\373LD\271\r\b%\3065K7L,\235EY\324\032\200\373BT\267\026\336_\325.=\0263\302\363J\256<\031G\030C\027\321R\201a\267V\237%\256\314\326\261\"~z\036A\370oN\277\317a\373rf:8Z\217u:9\275j\373\177\316\315\372\355\365k\232h\337\202\306`\b{#>\275!\004\226\357\211\037\236\307\211h\343\022\262\336\230wnu2u\006g\360\037\367Xcb\313\363\356\356X\006\202\215\2138@\275\344\242\301\345K\003u\251\240\303\264\020\225\2436>\240ce\236F\234\336\273\006$H\0325\007o\302\313\306\267\355\017\330\306.*\254\215\017i\213\306y\3049\250\226E\271\337E\363\"|\247k\241\231\225W\271\2440\253%\250\001\314\306e\"\371)\210\007\360\026\326vV\347.s\377\200\266$\301\350\264\221\240\216Ym"
 286      A9A1 2151 
 286      610B 7585 
 286      D6FD 351A 
 286      8C29 4040 
 287 017e 57C8 F9F5 	 .ascii "W\310\371\365C\335H\275\003\031'KKo\200\307\251\342\256AA\227"
 287      43DD 48BD 
 287      0319 274B 
 287      4B6F 80C7 
 287      A9E2 AE41 
 288 0194 2141 E9A8 	 .ascii "!A\351\250\251\245\215g\257W\256\327\232f\313\310\236\373\372"
 288      A9A5 8D67 
 288      AF57 AED7 
 288      9A66 CBC8 
 288      9EFB FA
 289 01a7 C6DA A6B9 	 .ascii "\306\332\246\271\347g\034\321\367\304\244\247Y\345Iy\370\202"
 289      E767 1CD1 
 289      F7C4 A4A7 
 289      59E5 4979 
 289      F882 
 290 01b9 5D5E 9A30 	 .ascii "]^\2320\365\374\025e{t\320\306\232\322\303\211\243$\311\004R"
 290      F5FC 1565 
 290      7B74 D0C6 
 290      9AD2 C389 
 290      A324 C904 
 291 01ce ECA7 85ED 	 .ascii "\354\247\205\355:\372Y\351t\037_\246\224\267\teK\326\223_\003"
 291      3AFA 59E9 
 291      741F 5FA6 
 291      94B7 0965 
 291      4BD6 935F 
 292 01e3 3E82 2671 	 .ascii ">\202&q\324P\354\353\223#j\312\201O\037\033\363\377\001\343\305"
 292      D450 ECEB 
 292      9323 6ACA 
 292      814F 1F1B 
 292      F3FF 01E3 
GAS LISTING  			page 23


 293 01f8 8A25 6D22 	 .ascii "\212%m\"\021\345\307\036\034\036=\031\016E\013\231I\247p!4\032"
 293      11E5 C71E 
 293      1C1E 3D19 
 293      0E45 0B99 
 293      49A7 7021 
 294 020e 1B0C 4572 	 .ascii "\033\fEr\005'\024>=r<t\312\231\310\273\251\242\323\236$\207\262"
 294      0527 143E 
 294      3D72 3C74 
 294      CA99 C8BB 
 294      A9A2 D39E 
 295 0225 763E 97C9 	 .ascii "v>\227\311\026\223\221\\\266X\310\271\311\221`\032\016\023+\031"
 295      1693 915C 
 295      B658 C8B9 
 295      C991 601A 
 295      0E13 2B19 
 296 0239 7526 3369 	 .ascii "u&3i'V\224\250\341\310p \232*\246b\305\202\223\2328\361\227\n"
 296      2756 94A8 
 296      E1C8 7020 
 296      9A2A A662 
 296      C582 939A 
 297 0251 C160 776C 	 .ascii "\301`wl\347\227\253\3409\370\005\331\001\025\275"
 297      E797 ABE0 
 297      39F8 05D9 
 297      0115 BD
 298               	 .text
 299               	 .section .gnu.lto_Endpoint_Discard_Stream.286d6c29995bfbbb,"",@progbits
 300 0000 789C 6551 	 .ascii "x\234eQ;K\303P\024>\337M\332TQ\364\027\21089\031\004\007'\301"
 300      3B4B C350 
 300      143E DF4D 
 300      DA54 51F4 
 300      1788 3839 
 301 0019 2708 BA58 	 .ascii "'\b\272X_\240 b\0230\304Dn\213 \016\275\322\n.\2028\212KQ'\007"
 301      5FA0 2062 
 301      1330 C444 
 301      6E8B 200E 
 301      BDD2 0A2E 
 302 0034 FD01 0AC5 	 .ascii "\375\001\n\305IQ\254\202 n\035\035t\027\227xn\343\333@\316\007"
 302      4951 AC82 
 302      206E 1D1D 
 302      7417 9778 
 302      6EE3 DB40 
 303 004a E79C EF71 	 .ascii "\347\234\357q\022A\202\376>\235\374\356\202h\224\021\t\202\330"
 303      1241 82FE 
 303      3E9D FCEE 
 303      8268 9411 
 303      0982 D8
 304 005d BE21 5A4F 	 .ascii "\276!ZO\ta\236\266\220\2527\356mR\r\006L\335\206\th$P^\030&\362"
 304      0961 9EB6 
 304      90AA 37EE 
 304      6D52 0D06 
 304      4CDD 8609 
 305 0078 B3D0 1268 	 .ascii "\263\320\022h\243\222R;\325\303\207-S\235\250M\025Ey\037\354"
 305      A392 523B 
 305      D5C3 872D 
 305      539D A84D 
 305      1545 791F 
 306 008d D505 7241 	 .ascii "\325\005rA3\360\201T\r\004~\233\037\213r5\212\256\217n+h\004"
GAS LISTING  			page 24


 306      33F0 8154 
 306      0D04 7E9B 
 306      1F8B 7235 
 306      8AAE 8F6E 
 307 00a4 D538 5C12 	 .ascii "\3258\\\022\224A\211E\223X\006Y\\4+AE\245\266[\343IlX>{iW\205"
 307      9441 8945 
 307      9358 0659 
 307      5C34 2B41 
 307      45A5 B65B 
 308 00c1 B27A 8D22 	 .ascii "\262z\215\"\313\207!\250\347\333\2579\366\373w\257[K0\305\365"
 308      CB87 21A8 
 308      E7DB AF39 
 308      F6FB 77AF 
 308      5B4B 30C5 
 309 00d6 DCA2 6908 	 .ascii "\334\242i\b\006\343\222D\006\373\320\266\007,\256\211\206\336"
 309      06E3 9244 
 309      06FB D0B6 
 309      072C AE89 
 309      86DE 
 310 00e8 AA50 A1FA 	 .ascii "\252P\241\372T\037\217<$\326\350\215ok\366a\272\210\357\360y"
 310      541F 8F3C 
 310      24D6 E88D 
 310      6F6B F661 
 310      BA88 EFF0 
 311 00fd 403F D83A 	 .ascii "@?\330:\232\247{\027T|\306\027Q\013&\177\206\230f\375+\323\250"
 311      9AA7 7B17 
 311      547C C617 
 311      510B 267F 
 311      8698 66FD 
 312 0114 D046 EA73 	 .ascii "\320F\352sI|\251[.\342\324\036,\017I\237?\335\007\311\324a\357"
 312      497C A95B 
 312      2EE2 D41E 
 312      2C0F 499F 
 312      3FDD 07C9 
 313 012b F8E7 E859 	 .ascii "\370\347\350Y-\301#\201\365\305\336\026\2030\240\017\003/i~\347"
 313      2DC1 2381 
 313      F5C5 DE16 
 313      8330 A00F 
 313      032F 697E 
 314 0140 C8C4 50AF 	 .ascii "\310\304P\257= \027W\034\231\265'\322}v\177(\035\273wr\254\333"
 314      3D20 1757 
 314      1C99 B527 
 314      D27D 767F 
 314      281D BB77 
 315 0157 1E0C 32CB 	 .ascii "\036\f2\313\341b\220K\347\2443\2774\247{\035\013T7(e(\373\303"
 315      E162 904B 
 315      E7A4 33BF 
 315      34A7 7B1D 
 315      0B54 3728 
 316 016f 8CD3 D4B7 	 .ascii "\214\323\324\267\232s\262\303\301\270\234\017\262\256#\337\001"
 316      9A73 B2C3 
 316      C1B8 9C0F 
 316      B2AE 23DF 
 316      01
 317 0180 06CD 73DE 	 .ascii "\006\315s\336"
 318               	 .text
 319               	 .section .gnu.lto_Endpoint_Null_Stream.286d6c29995bfbbb,"",@progbits
GAS LISTING  			page 25


 320 0000 789C 6551 	 .string "x\234eQ;K\003A\020\236o\357.\211\242\230_\020\304\037\340\021\260\260\022\342\013\004m\214\217\200\202\004s\007\2063\t\233 \210EVL\300B!\370\003\204\020{m\304\306B,D\021\024\301B\261I\257\225\245\205\347lN\215\217\203\235ag\346{\314\236 A\177\2778\237}\020Mq\206E\020\265\033\242\315\210\020\346i\214T\247qo\223\3522`\3522L@g\002\225\205a\242\274\bM\201>\252+\265\327\254>?\240\242\232\252\246\336\3752<\260\332"
 320      3B4B 0341 
 320      109E 6FEF 
 320      2E89 A298 
 320      5F10 C41F 
 321 0092 C805 2DF0 	 .string "\310\005-\360\005\221V\022\370-\177(\316\232\276\177z\\y\215u\203Z\030\016\026ePg\332\020\n\2400\007\215\262\250\242T\2557\350\004\222gO\027\273\226:R\333\312\367\313\036\fACm\301h \370oe\267ea\236\343y\230R\020\234\214+\022\0314\240u\017\230]\003\r=uK[\315\303\006\202^\026\326\006\275\261X\324\203\351\"\330\304\343\006\375\200ksY]\273\244\312K\033\250\031C?]\244X\340\3324n\251\032\371\032\022\337\354a\027\201\355,\302Y\204<~\274O\220\251\335\336\361\017\322\275\226\203G\002\363\213\235\223(3\030\320\233\201\2074>>9;\236\260G\345\312\232#\213\366lr\330\036\311K\307N\314M\017\332c\271L!\277\222+%K\322I\257.\351Z\3772u\214I\231\227#\371\214\3233\274^r\212\023\271\031\231\316\025]G~"
 321      0591 5612 
 321      F82D 7F28 
 321      CE9A BE7F 
 321      7A5C 798D 
 322 0185 2F7B 75A8 	 .ascii "/{u\250"
 323               	 .text
 324               	 .section .gnu.lto_Endpoint_Write_Stream_LE.286d6c29995bfbbb,"",@progbits
 325 0000 789C 8551 	 .ascii "x\234\205Q\315K\033Q\020\237\337{\273\311\032\212\372\027\024"
 325      CD4B 1B51 
 325      109F DF7B 
 325      BBC9 1A8A 
 325      FA17 14
 326 0013 F1E4 A98B 	 .ascii "\361\344\251\213\267B\241\340WQ\320\036\214V\241\005\331v7`X"
 326      B742 A1E0 
 326      5751 D01E 
 326      8C56 A105 
 326      D976 3760 
 327 0028 93F0 B214 	 .ascii "\223\360\262\024J\017yV\221B)\210\340I\017\206\026A(\264"
 327      4A0F 7956 
 327      9142 2988 
 327      E049 0F86 
 327      1641 28B4 
 328 003c 7F40 0F39 	 .string "\177@\0179*HSm/\336r\361\246'/\245\004\326yY\023?.>\330\231\335y\363\373\230YA\202\356\236A~.@\364\2323l\202X\377E\264\354\ba\375|H:#\377\272\244\037HX\246\f\0130\231@\025!-T^\301P\240\237\252Zo4N\377|\266\364\017\375Q\307q%\004k=\005\345@/\021\002N+\t\334\026\377.j\2158>\334\373]G7\250\205\341 Q\002\245\310G\225\231\323\374\001\207\203\261n\323\252\326\353}\211^m\353|@\257\324\364\2778N\207\220\202\306\257\345z\023\271;\343^\341\2667\265\306\362\216n\306\261\fa\t\312\336\007L\254\220\351\3423\307\261i\323<[j\332\362\200>\354L\371\370\302\313\363\361\225\333\362\220D\246\372\274]\335\345\252\241\265\f\272N+\215\223Lr\225G\352=\375\347\215\365\206\260sH\266\023\"e\360\242\215\256\2668\271\266O\253g\350"
 328      2A48 536D 
 328      2FDE 72F1 
 328      A627 2FA5 
 328      04D6 7959 
 329 013d 0D61 FAA6 	 .ascii "\ra\372\246\311y\326=\226\262NkN\273It\330\235\034\222\231\330"
 329      C979 D63D 
 329      96B2 4E6B 
 329      4EBB 4974 
 329      D89D 1C92 
 330 0153 5D1E 4E1E 	 .ascii "]\036N\036\274\262\2566\3162s\034\361_7\327-\023'\004\226\020"
 330      BCB2 AE36 
 330      CE32 731C 
 330      F15F 37D7 
 330      2D13 2704 
 331 0169 DF3E 7112 	 .ascii "\337>q\022\022ffp\223\241x29\373l\310\035U\213o\003Uvg\263\303"
 331      1266 6670 
 331      93A1 7832 
 331      39FB 6CC8 
 331      1D55 8B6F 
 332 0183 EE48 5105 	 .ascii "\356HQ\005\356\320\213\351\307\356L\260T\n\275(\350\274,\214"
 332      EED0 8BE9 
 332      C7EE 4CB0 
 332      540A BD28 
 332      E8BC 2C8C 
 333 0197 15FC 5271 	 .ascii "\025\374Rq\261\020-L\317=zC]cJ\025\325H\321\0172\243^\344e#\025"
 333      B110 2D4C 
 333      CF3D 7A43 
 333      5D63 4A15 
GAS LISTING  			page 26


 333      D548 D10F 
 334 01b2 784B 3DC3 	 .ascii "xK=\303\357\242\240<Q\230Q^\241\234\013\324%L\237\221y"
 334      EFA2 A03C 
 334      5198 515E 
 334      A19C 0BD4 
 334      254C 9F91 
 335               	 .text
 336               	 .section .gnu.lto_Endpoint_Write_Stream_BE.286d6c29995bfbbb,"",@progbits
 337 0000 789C 8D56 	 .string "x\234\215VkL\034U\024>\347\316\314\356\354\354.P\240D\b.\345Qh1\262\277\214&&\032\3720!i\374\321\207\255\321\244\331\270K\332u\013d!&\306\037\fl\233\240P\203\250Ic\033mCHE1h0b*Q\212\032\037\250\255\212\211\233\364\007\215\032\254%\361\361K+f=\347\336\231\001\026D&\331\271s\317\375\316w\236\367\336\025  \377\271H\277J\023`\230F,"
 337      6B4C 1C55 
 337      143E E7CE 
 337      CCEE ECEC 
 337      2E50 A044 
 338 007c 1483 5F01 	 .ascii "\024\203_\001\364\230B\204\247\"`[\332\\\024\354\220&\364\267"
 338      F498 4284 
 338      A722 605B 
 338      DA5C 14EC 
 338      9026 F4B7 
 339 0090 6780 A6C6 	 .ascii "g\200\246\306\265 Mu4\024\312\300\020\177\240O\370\347\312h\331"
 339      B520 4D75 
 339      3414 CAC0 
 339      107F A04F 
 339      F8E7 CA68 
 340 00a5 9ABA 9B96 	 .ascii "\232\272\233\226\375\302\034\0234\013\3748K:!\023\303\n\035\020"
 340      FDC2 1C13 
 340      340B FC38 
 340      4B3A 2113 
 340      C30A 1D10 
 341 00b9 6129 0F2A 	 .ascii "a)\017*\271\205A%"
 341      B985 4125 
 342 00c1 0F2A 96E6 	 .string "\017*\226\346\220\360\311\025K\302BaD\026\003B\267\320t\303\3477\003V\220\244\335\217\";\256\325\300\005\333\036\232\037\371\366\264a\277i\367\331\271\\w\n)\302\373\020Z\021\036\301\024b\221\034D^\324Jq\372\334\213\266\215=\347\355\245\\NK\241&\240e\223\212/?\267RQ\027\360\360\262\242\251\024q\265\342\270\230\236\317\345\276\030\275z\005\357D\350`/\343x\001k@\243q\230F\035\210\310\217\264b\322\227\b\320\027Z\016\246\200\306\021\032\013I(\212h\331\330\302\024\305\216j\t+\224:\3302^)gL\005\277*\035q\304\241\250\"\241\257\332\021\3260\266\326a\251\343\311v^\256\347W\203\203\331\301\223\235\374jt\200\364\030p\322\266\007\267)\204\222*z\3404\320s\230\336K\006\034AA\203\366%d\3722\223\267\2148^D\003\222h&\321/\223D\351#0-\367g\332\334E+\211\001\202"
 342      90F0 C915 
 342      4BC2 4261 
 342      4416 0342 
 342      B7D0 74C3 
 343 01c2 7C06 42C9 	 .string "|\006B\311\224\031ZaY\357\371\007])\233e\032\346\200+\220\231\317Z.I\301Sp\213\032\242(\205\376VT\245H\345q\216H\316\002\200O\341\344\"z\212L\350[Y\271#\304\377\215\2461\352\362\273\036\256\220q\201\3258\035\0064\212\265\367\322\251\277\177\361\200Eg\341\245\036\362C\313\323\241\240\237\316$]\324\026\312\baW8H\305 1\343zG3\271\n\027X\"Q\2341\315\025\225\312\234\225\254\223\260R\3273\203\"\240,d\241\214\354hH\304\372\342\254/\013\r\244\252]\273\341#\250\276\364x\026\032\235tj\2137|\316\247.\t|@\373\222b\233\271\364\361\370\263\337\317\372\235\006p;a\272\377\235}"
 343      9419 5A61 
 343      59EF F907 
 343      5D29 9B65 
 343      1AE6 802B 
 344 0288 CA78 2BCA 	 .string "\312x+\312=\223\304\355\034\371\013\034\273\305\\\301\237\325\006\t.'\340\275\017\211\354\365`\034_\223\201\324\223\216L?\361RU>Z\270~\352\254\027e\375:\205\361\303?[]\247\316\214\257ujR_vJSN\355\330\224SD\026\3077\244\335\235\244S\016g\354W\355\371\373S\334\202\204\231iQ\253\033q\221\246l\312\337\206~\365+\037"
 344      3D93 C4ED 
 344      1CF9 0B1C 
 344      BBC5 5CC1 
 344      9FD5 0609 
 345 02f6 BCA6 0CB5 	 .string "\274\246\f\265\242\3564eX5\340\345\277n\337\250\265L\230\003\247\265n\n\027X\376\337\255\325\347\345\255\202pI\216\236\264[\224p]5B\272\306\0020\272U\343\375\364\314\017^\033G6\273\241\"y\033*\262N\335,X\270KE\363\301\200\356\002\253\310-\202\352I\024\254\342\242=\003|\364\016\016M?\377\3236;3m\377\231\313\371SX \340\025\374\277\243\227\250e\321f\227\376\270z:\263\246Kf?i\216\343\244<\273\334^\341Z\345\027\367\367\325\305\255r\216\255\353!\327\377j\307q\347P[\263\031\253Ua2\013\003\336f\256I\"\312m\226\247\"\367~\215\203\2779p\207\213\257\245BJ<\25660,\r\324\272\351\r\302\373\237\323\275B\333\275\216h\254s\023\307\310N"
 345      A2EE 3465 
 345      5835 E0E5 
 345      BF6E DFA8 
 345      B54C 9803 
 346 03d0 B350 495E 	 .string "\263PI^X\003\023EI\276_\262PL:\326\330\304\030\235\007Z"
 346      5803 1345 
 346      49BE 5FB2 
 346      504C 3AD6 
 346      D8C4 189D 
 347 03e7 5933 0474 	 .ascii "Y3\004t\337\"\035\262&x\264\232<u\245@\005\"\\\201t\023\235\376"
 347      DF22 1DB2 
GAS LISTING  			page 27


 347      2678 B49A 
 347      3C75 A540 
 347      0522 5C81 
 348 03ff FD2E E67A 	 .ascii "\375.\346z\211\336\231\254\236,\220\2012\203^uA\262*\222\330"
 348      89DE 99AC 
 348      9E2C 9081 
 348      3283 5E75 
 348      41B2 2A92 
 349 0414 C093 4A9E 	 .ascii "\300\223J\236P\0176\362\2448(\355\207\371\266\370\232\376\020"
 349      500F 36F2 
 349      A438 28ED 
 349      87F9 B6F8 
 349      9AFE 10
 350 0427 708A 75A5 	 .ascii "p\212u\245L\rQ \306\372%\253n\200\2714N\370H`\352\255\333\244"
 350      4C0D 5120 
 350      C6FA 25AB 
 350      6E80 B934 
 350      4EF8 4860 
 351 043f 0420 B438 	 .ascii "\004 \2648a\362\215\203\244\314G\317\275\373\016=\320\034\335"
 351      61F2 8D83 
 351      A4CC 47CF 
 351      BDFB 0E3D 
 351      D01C DD
 352 0452 933E FE44 	 .ascii "\223>\376D\"\335\031=t`Wtw{:\021m~h\377=\321\203\211\023\035"
 352      22DD 193D 
 352      7460 5774 
 352      777B 3A11 
 352      6D7E 68FF 
 353 046c A958 57C2 	 .ascii "\251XW\302\3738\272\267-\336\321~\274\255\353\350\376\303M\217"
 353      FB38 BAB7 
 353      2DDE D17E 
 353      BCAD EBE8 
 353      FEC3 4D8F 
 354 0480 81B5 27D6 	 .ascii "\201\265'\326\025;\320\225N\304N\024\356z\262+\321\331\322v0"
 354      153B D095 
 354      4EC4 4E14 
 354      EE7A B22B 
 354      D1D9 D276 
 355 0495 1D6B EB6C 	 .ascii "\035k\353lM\244\003{\323\351\366\364\356\366xb#\003MM\253G\217"
 355      4DA4 037B 
 355      D3E9 F6F4 
 355      EEF6 7862 
 355      2303 4D4D 
 356 04ac 9E67 4DC7 	 .ascii "\236gM\307@g\003\377\002\005y\023F"
 356      4067 03FF 
 356      0205 7913 
 356      46
 357               	 .text
 358               	 .section .gnu.lto_Endpoint_Read_Stream_LE.286d6c29995bfbbb,"",@progbits
 359 0000 789C 8551 	 .ascii "x\234\205Q\315K\033Q\020\237\337{\273\311\032\212\372\027\024"
 359      CD4B 1B51 
 359      109F DF7B 
 359      BBC9 1A8A 
 359      FA17 14
 360 0013 F1E4 A98B 	 .ascii "\361\344\251\213\267B\241\340WQ\320\036\214V\241\005\331v7`X"
 360      B742 A1E0 
 360      5751 D01E 
GAS LISTING  			page 28


 360      8C56 A105 
 360      D976 3760 
 361 0028 93F0 B214 	 .ascii "\223\360\262\024J\017yV\221B)\210\340I\017\206\026A(\264"
 361      4A0F 7956 
 361      9142 2988 
 361      E049 0F86 
 361      1641 28B4 
 362 003c 7F40 0F39 	 .string "\177@\0179*HSm/\336r\361\246'/\245\004\326yY\023?.>\330\231\335y\363\373\230YA\202\356\236A~.@\364\2323l\202X\377E\264\354\ba\375|H:#\377\272\244\037HX\246\f\0130\231@\025!-T^\301P\240\237\252Zo4N\377|\266\364\017\375Q\307q%\004k=\005\345@/\021\002N+\t\334\026\377.j\2158>\334\373]G7\250\205\341 Q\002\245\310G\225\231\323\374\001\207\203\261n\323\252\326\353}\211^m\353|@\257\324\364\2778N\207\220\202\306\257\345z\023\271;\343^\341\2667\265\306\362\216n\306\261\fa\t\312\336\007L\254\220\351\3423\307\261i\323<[j\332\362\200>\354L\371\370\302\313\363\361\225\333\362\220D\246\372\274]\335\345\252\241\265\f\272N+\215\223Lr\225G\352=\375\347\215\365\206\260sH\266\023\"e\360\242\215\256\2668\271\266O\253g\350"
 362      2A48 536D 
 362      2FDE 72F1 
 362      A627 2FA5 
 362      04D6 7959 
 363 013d 0D61 FAA6 	 .ascii "\ra\372\246\311y\326=\226\262NkN\273It\330\235\034\222\231\330"
 363      C979 D63D 
 363      96B2 4E6B 
 363      4EBB 4974 
 363      D89D 1C92 
 364 0153 5D1E 4E1E 	 .ascii "]\036N\036\274\262\2566\3162s\034\361_7\327-\023'\004\226\020"
 364      BCB2 AE36 
 364      CE32 731C 
 364      F15F 37D7 
 364      2D13 2704 
 365 0169 DF3E 7112 	 .ascii "\337>q\022\022ffp\223\241x29\373l\310\035U\213o\003Uvg\263\303"
 365      1266 6670 
 365      93A1 7832 
 365      39FB 6CC8 
 365      1D55 8B6F 
 366 0183 EE48 5105 	 .ascii "\356HQ\005\356\320\213\351\307\356L\260T\n\275(\350\274,\214"
 366      EED0 8BE9 
 366      C7EE 4CB0 
 366      540A BD28 
 366      E8BC 2C8C 
 367 0197 15FC 5271 	 .ascii "\025\374Rq\261\020-L\317=zC]cJ\025\325H\321\0172\243^\344e#\025"
 367      B110 2D4C 
 367      CF3D 7A43 
 367      5D63 4A15 
 367      D548 D10F 
 368 01b2 784B 3DC3 	 .ascii "xK=\303\357\242\240<Q\230Q^\241\234\013\324%L\237\221y"
 368      EFA2 A03C 
 368      5198 515E 
 368      A19C 0BD4 
 368      254C 9F91 
 369               	 .text
 370               	 .section .gnu.lto_Endpoint_Read_Stream_BE.286d6c29995bfbbb,"",@progbits
 371 0000 789C 8D55 	 .ascii "x\234\215Ukh\034U\024>\347\316\314\356<v\2234I\203\t\270\204"
 371      6B68 1C55 
 371      143E E7CE 
 371      CCEE 3C76 
 371      9334 4983 
 372 0017 3C9A 36C1 	 .ascii "<\2326\301\354/Q\020\224\364!\004\212?\372\260\025\205\262\270"
 372      EC2F 5110 
 372      94F4 2104 
 372      8A3F FAB0 
 372      1585 B2B8 
 373 002b BBB4 EB36 	 .ascii "\273\264\3536\t\233 \210?2\311\266\020M\224Z\024\304\226\322"
 373      099B 2088 
 373      3F32 C9B6 
GAS LISTING  			page 29


 373      104D 945A 
 373      14C4 96D2 
 374 003f 5242 8D46 	 .ascii "RB\215F\322\222b\245\206\222\246\025\037Q\353#\202\013\375\221"
 374      D292 62A5 
 374      8692 A615 
 374      1F51 EB23 
 374      820B FD91 
 375 0053 A210 6B03 	 .ascii "\242\020k\003\352Okd=\347\336\231I\262\215!\003s\357\334s\277"
 375      EA4F 6B64 
 375      3DE7 DE99 
 375      49B2 8D21 
 375      0373 EFDC 
 376 0069 EFBC EE39 	 .ascii "\357\274\3569w\004\b(}.\320;\033\0068C3\226\001\212\023\337\002"
 376      7704 0828 
 376      7D2E D03B 
 376      1B06 3843 
 376      3396 018A 
 377 0080 0C98 4244 	 .ascii "\f\230BD\247b\340\332\332\\\034\334\210&\364\3133@K\343\266C"
 377      A762 E0DA 
 377      DA5C 1CDC 
 377      8826 F4CB 
 377      3340 4BE3 
 378 0096 4B1D 0D85 	 .ascii "K\035\r\20520\302\037\030\022\341\271\032\332\266\247\036\243"
 378      3230 C21F 
 378      1812 E1B9 
 378      1ADA B6A7 
 378      1EA3 
 379 00a8 EDB0 30C7 	 .ascii "\355\2600\307\005\255\254_g\211\02311\252\320\226\210J\271\243"
 379      05AD AC5F 
 379      6789 1331 
 379      31AA D096 
 379      884A B9A3 
 380 00bc E436 3A4A 	 .ascii "\3446:J\356(-\035\021\021\222;\266\204E\242\210,\006\204~\241"
 380      EE28 2D1D 
 380      1111 923B 
 380      B684 45A2 
 380      882C 0684 
 381 00d2 E946 286C 	 .ascii "\351F(lZ\266C\322\376\027\220\035\327\032\340\234\353\236\234"
 381      5AB6 43D2 
 381      FE17 901D 
 381      D71A E09C 
 381      EB9E 9C
 382 00e5 1FFD F10D 	 .ascii "\037\375\361\r\303\275\350\016\271\305b\177\026)\302'\021\322"
 382      C3BD E80E 
 382      B9C5 627F 
 382      1629 C227 
 382      11D2 
 383 00f7 08CF 6316 	 .ascii "\b\317c\026\261BN\242$jE\234>\375\216\353\342\300Yw\251X\324"
 383      B142 4EA2 
 383      246A 459C 
 383      3EFD 8EEB 
 383      E2C0 5977 
 384 010e B2A8 09E8 	 .ascii "\262\250\t\350\334 "
 384      DC20 
 385 0114 F1CC 5B2B 	 .string "\361\314[+\211\272\200\347\226\211\246\"\342j\342\204\230\236/\026\277\036\373\356\026>\202\320\303^&\361\0346\200F\363y\232u Ea\244\035\223\276\204E_h{\030\307\233\313h\036\245\271\2346E\005\301\214M\254\252\222\207*fU{\300\032Oi-c\352x\210y\324zo\247\301C62\267\311\0236\363b\013\301C-<l\345a\033\017\255\354\\\233G\241\307\200c\256{\242^\255\025W\251\007N\003=\007h\\2\340 \n\232\264o ?\224\277r\337H\342\0054 \203f\006\3032I\224>\002\323\366p\276\313\337\2643h\021\004\340K\020J\246\314\320\016\313\006\317>\343K\331,\253a\035p\013\362\363\005\333WR\366*\334\247\202\250\310b8\215\352(\262%:G\245\3162\200/\340\330\"\006DV\030Zyr\007I\377\017\232\306\250\353\237\004\270r\306Y\253q:\214h\024\353\340\325\343\377\374\036"
 385      89BA 80E7 
 385      9689 A622 
GAS LISTING  			page 30


 385      E26A E284 
 385      989E 2F16 
 386 0215 2B4E C17B 	 .string "+N\301{\003\344\207V\302\241\240_\313g|\324&\312\baW8H'Ab\306\r\216\345\213u>\260J\2428c\232/\252\2269\253Z#a\325\276g\006E@Y(@%\331\321\220\024\353\213\263\241\0028D\325n\337\r\021T_z\251"
 386      03E4 8756 
 386      C2A1 A05F 
 386      CB67 7CD4 
 386      26CA 0861 
 387 0263 355E 3AB5 	 .string "5^:\265\305\273!\357S\227\nB@}I\261\315\\\375l\342\315\237g\303^\001\370\2250=\374\361n"
 387      C5BB 21EF 
 387      5397 0A42 
 387      407D 49B1 
 387      CD5C FD6C 
 388 0286 653C 8DB2 	 .string "e<\215\262g2\270\205#\177\233c\267Y\227\363\233j\020g9\001\237\336 e\037:I\374@\006\322B\034\231~\322K\247rs\341\316\361SA\224-k\034L\030\376\335\354;51\361\240SW\364e\2474\345\324\326\r9E\312\222\370\221\264\273\2158\265\360\256\373\276{\361\251,\227 af:\325\356z\272\210)\213\362\317\223\177\204\225\017"
 388      6732 B885 
 388      237F 9B63 
 388      B759 97F3 
 388      9B6A 1067 
 389 02f4 4151 46D2 	 .string "AQF\322\250{E\031U\005x\375\357\207\327+-\023\346\300+\255{\302\007\326\376\177i\r\005y\253#\\\206\243'v\247\022\256I#\244o\314\202\261\315\032\367\323\353\277\004e\034\333hC\305J\032*\266\306\271\331\260\360\250\177n\327.U\227\236\333\354\347\035\313\347f(\347ZKr\375W\351\271\255\b\216\344z\006\005\357\203\027[\253w\313\334\211\370~5x\b\357\016z\240w\032T\036\363\013#A\3575f\020eW\224Pd\2536z\370{#m>\276\211\362.\361\270\332\300yi\240\311\317\206\003\327\276\242\337"
 389      A87B 4519 
 389      5505 78FD 
 389      EF87 D72B 
 389      2D13 E6C0 
 390 0399 7567 33A9 	 .string "ug3\251\261OO\036&;\026\026\240\215\274\260G&+2\374;(@=q\354\361\311qj_\315BfF\200~\217Hw\242\t\201ZM^\222R\240\002\021\276@\272\211^\271\375\224\360\275\304\340\nUO\001\310@\245AC\263CVE\006\035^\264\361\202J\246\206\027\365\216\264\037\345\313\375{\372\177s\212uE\246\314\227\211\361a\251U7\300\\\232 |\314\232\272\364\220\224"
 390      B14F 4F1E 
 390      263B 1616 
 390      A08D BCB0 
 390      4726 2B32 
 391 0413 4416 274D 	 .ascii "D\026'M\376A \221\371\246xb\367\376\247;\342;sG^N\345z\343\373"
 391      FE41 2091 
 391      F9A6 7862 
 391      F7FE A73B 
 391      E23B 7347 
 392 042d F76E 8FEF 	 .ascii "\367n\217\357\350\316\245\342\035\317\356y<\276/u\264'\233\350"
 392      E8CE A5E2 
 392      1DCF EE79 
 392      3CBE 2F75 
 392      B427 9BE8 
 393 0441 4B05 1F87 	 .ascii "K\005\037\207vu%{\272\217t\365\035\332s\240\375E\260w&\372\022"
 393      7675 257B 
 393      BA8F 74F5 
 393      1DDA 73A0 
 393      FD45 B077 
 394 0458 7BFB 72A9 	 .ascii "{\373r\251\304\321\362\355\257\364\245z;\273\366\345\022]\275"
 394      C4D1 F2ED 
 394      AFF4 A57A 
 394      3BBB F6E5 
 394      125D BD
 395 046b E954 CEDA 	 .ascii "\351T\316\332\225\313u\347vt'S\353\031ho_=\007\352y\325~\030"
 395      95CB 75E7 
 395      7674 2753 
 395      EB19 686F 
 395      5F3D 07EA 
 396 0483 FE03 9A13 	 .ascii "\376\003\232\023\376\343"
 396      FEE3 
 397               	 .text
 398               	 .section .gnu.lto_Endpoint_Write_PStream_LE.286d6c29995bfbbb,"",@progbits
 399 0000 789C 8551 	 .ascii "x\234\205Q\315K\033Q\020\237\337{\273\311\032\212\372\027\024"
GAS LISTING  			page 31


 399      CD4B 1B51 
 399      109F DF7B 
 399      BBC9 1A8A 
 399      FA17 14
 400 0013 F1E4 A98B 	 .ascii "\361\344\251\213\267B\241\340WQ\320\036\214V\241\005\331v7`X"
 400      B742 A1E0 
 400      5751 D01E 
 400      8C56 A105 
 400      D976 3760 
 401 0028 93F0 B214 	 .ascii "\223\360\262\024J\017yV\221B)\210\340I\017\206\026A(\264"
 401      4A0F 7956 
 401      9142 2988 
 401      E049 0F86 
 401      1641 28B4 
 402 003c 7F40 0F39 	 .string "\177@\0179*HSm/\336r\361\246'/\245\004\326yY\023?.>\330\231\335y\363\373\230YA\202\356\236A~.@\364\2323l\202X\377E\264\354\ba\375|H:#\377\272\244\037HX\246\f\0130\231@\025!-T^\301P\240\237\252Zo4N\377|\266\364\017\375Q\307q%\004k=\005\345@/\021\002N+\t\334\026\377.j\2158>\334\373]G7\250\205\341 Q\002\245\310G\225\231\323\374\001\207\203\261n\323\252\326\353}\211^m\353|@\257\324\364\2778N\207\220\202\306\257\345z\023\271;\343^\341\2667\265\306\362\216n\306\261\fa\t\312\336\007L\254\220\351\3423\307\261i\323<[j\332\362\200>\354L\371\370\302\313\363\361\225\333\362\220D\246\372\274]\335\345\252\241\265\f\272N+\215\223Lr\225G\352=\375\347\215\365\206\260sH\266\023\"e\360\242\215\256\2668\271\266O\253g\350"
 402      2A48 536D 
 402      2FDE 72F1 
 402      A627 2FA5 
 402      04D6 7959 
 403 013d 0D61 FAA6 	 .ascii "\ra\372\246\311y\326=\226\262NkN\273It\330\235\034\222\231\330"
 403      C979 D63D 
 403      96B2 4E6B 
 403      4EBB 4974 
 403      D89D 1C92 
 404 0153 5D1E 4E1E 	 .ascii "]\036N\036\274\262\2566\3162s\034\361_7\327-\023'\004\226\020"
 404      BCB2 AE36 
 404      CE32 731C 
 404      F15F 37D7 
 404      2D13 2704 
 405 0169 DF3E 7112 	 .ascii "\337>q\022\022ffp\223\241x29\373l\310\035U\213o\003Uvg\263\303"
 405      1266 6670 
 405      93A1 7832 
 405      39FB 6CC8 
 405      1D55 8B6F 
 406 0183 EE48 5105 	 .ascii "\356HQ\005\356\320\213\351\307\356L\260T\n\275(\350\274,\214"
 406      EED0 8BE9 
 406      C7EE 4CB0 
 406      540A BD28 
 406      E8BC 2C8C 
 407 0197 15FC 5271 	 .ascii "\025\374Rq\261\020-L\317=zC]cJ\025\325H\321\0172\243^\344e#\025"
 407      B110 2D4C 
 407      CF3D 7A43 
 407      5D63 4A15 
 407      D548 D10F 
 408 01b2 784B 3DC3 	 .ascii "xK=\303\357\242\240<Q\230Q^\241\234\013\324%L\237\221y"
 408      EFA2 A03C 
 408      5198 515E 
 408      A19C 0BD4 
 408      254C 9F91 
 409               	 .text
 410               	 .section .gnu.lto_Endpoint_Write_PStream_BE.286d6c29995bfbbb,"",@progbits
 411 0000 789C 8D56 	 .string "x\234\215Vkl\024U\024>\347\316\354cf\266\017Bi\240\301\355\002m)`Z\375\341#1>\312\303\244\t\361\007\017\301G\322l\330m`\335>\262\255&\352\017\206.\030\224\022+j\322\b*\2044\265\241\021\233\032k\260\301\266J|T\001\265&n\302\217\0225\025i|\374S\250\256\347\334;3\335.\025:\311\316\235{\356w\316w\316\271\347\236\273\002\004\344?\275\364[j"
 411      6B6C 1455 
 411      143E E7CE 
 411      EC63 66B6 
 411      0F42 69A0 
 412 007a 7C41 2316 	 .string "|A#\026\002\212\256\363"
GAS LISTING  			page 32


 412      028A AEF3 
 412      00
 413 0083 FB82 4214 	 .string "\373\202B\024\f\207\3016\265\211Z\260C\232\320\337\037\003\232\372.Y4\325\321\247P>\f\361\007\372E`\242\224\226\315\341{h9 \202\375\202f\306O\343\244\023\nb\201B\033\242@\312-%7\321RrKY\251\013\t\277\\1%,T\200\310b@\330+4\335\347\017\004\r\323\"\351\336'\221\035\367\255\204\023\266}d\262\347\273\303>\373=\373\240\235\315\356M\"E\370"
 413      0C87 C136 
 413      B589 5AB0 
 413      439A D0DF 
 413      1F03 9AFA 
 414 00fb 4223 C213 	 .ascii "B#\302\023\230D,\226\203\310\213Z)\216\034{\335\266q\337q{&\233"
 414      9844 2C96 
 414      83C8 8B5A 
 414      298E 1C7B 
 414      DDB6 71DF 
 415 0113 D592 A809 	 .ascii "\325\222\250\t\250_\240"
 415      A85F A0
 416 011a E25B AFE4 	 .string "\342[\257\344*\352\002\036\233U\f*E\234W\361\355\027\326\332\351\021\373\257l6 \tw-\214\220b\033\301.\373\337l\026%]\362Vt\247\305\310d6\373U\337\305\013X\203\320\312I\211\341\t\\\t\032\215'i\324\311\206\036@Z\t\322\2270\350\013M\007c\261B!MzhRD+\242\2300\276E,^\314\350\022\007X\352\214\313x\271\214_\313\035\363aG\273\234\306^\032#4\366\321\270\302\321X\345\214\025l\263\322Q\252\342\311j2\343\257\346\327\032G\274\226'\353\370\305{\016\373m\273+\242\264\325\272b\002\316\b=;\350=\343\203\235(h\320\276\206\364\301\364\3205_\fO\241\017\022\030L`@\346\2136\216\300\264|(\335\354.\232\t4\b\302'A(\231\242\241\025\226u\034\177\304\2252-\233a\033p\001\322\223\031\3235R\370<\\\243\355*Nb\240\021\325\256$\363l\366H\233\205"
 416      2AEA 021E 
 416      9B55 0C2A 
 416      459C 57F1 
 416      ED17 D6DA 
 417 021b 9FC3 FE69 	 .string "\237\303\376i\364\024\331\240?w\023w\222\375o5\215Q\243\037z\270\"\306\031sq:tj\024k\307\231\003\327\177\365\200\305G\341\215}\344\207\226\247CA\277\230N\270\250E\224\021\302\3468H\233@b\306u\364\245\263e.p\261Dq\3064WT\"s\266x\236\204\225\270\236\371(\002\312B\006,\342\321\220\f\353\323\343\376\f\224\222\252v\351\212\237\240\372\314S\031X\343\244S\233\276\342w>ui\300\017\324\021(\266\2613\347\206^\376a<\340\024\200[\t#\207>\330\f\240\310\033Q\036\236\004\256\346\310_\343\330M\266e\375\242\316\2125\233\200\217>!c\247\254\030\276+\003\251&\035\231~\262K\273\362\351\324\345\003G\275(\253\347\331\230"
 417      F414 D9A0 
 417      3F77 1377 
 417      92FD 6F35 
 417      8D51 A31F 
 418 02e9 FCB3 C475 	 .string "\374\263\304u\252\373\364\215N\r\351\263Ni\312\251\265\013r\212\214\305p@\362\256#\235e\320m\277cO>\230\344\022$\314X\275Z\275\231-\322\224E\371\307\221\337\003\312\007"
 418      AAFB F48D 
 418      4E0D E9B3 
 418      4E69 CAA9 
 418      B50B 728A 
 419 0322 AF28 438D 	 .string "\257(C\215\250;EY\240\np\364\357\333nVZA\230"
 419      A83B 4559 
 419      A00A 70F4 
 419      EFDB 6E56 
 419      5A41 9800 
 420 0336 A7B4 AE0A 	 .ascii "\247\264\256\n\027\270\354\377K\353\240\227\2672\302%8z\322\256"
 420      17B8 ECFF 
 420      4BEB A097 
 420      B732 C225 
 420      387A D2AE 
 421 034a 57C2 79D5 	 .ascii "W\302y\325\b\351\222\031\320\267D\343\363\364\322\217^\031\207"
 421      08E9 9219 
 421      D0B7 44E3 
 421      F3F4 D28F 
 421      5E19 87
 422 035d 177A A0C2 	 .ascii "\027z\240\302y\007*<\317\276\2310u\027G\363[\372\343N\335\353"
 422      7907 2A3C 
 422      CFBE 9930 
 422      7517 47F3 
 422      5BFA E34E 
 423 0373 25BD B28B 	 .ascii "%\275\262\213\364\311.\342f\214\f\224'\270\240$\317\031\311\323"
 423      F4C9 2EE2 
 423      668C 0C94 
 423      27B8 A024 
 423      CF19 C9D3 
 424 0387 2B79 CA01 	 .ascii "+y\312\001\316\2732vh\200b$\234\246\256\3260\234\3057\355\356"
 424      CEBB 3276 
 424      6880 6224 
GAS LISTING  			page 33


 424      9CA6 AED6 
 424      309C C537 
 425 039d 8792 7CC0 	 .ascii "\207\222|\300\331\n\227\324\\\300\230\003(rh\244o94}\222&\222"
 425      D90A 97D4 
 425      5CC0 9803 
 425      2872 68A4 
 425      6F39 347D 
 426 03b4 23E3 5BA0 	 .ascii "#\343[\240\353\310\310\253?Gfo\217b\001\347\360V\367\2004Ce3"
 426      EBC8 C8AB 
 426      3F47 666F 
 426      8F62 01E7 
 426      F056 F780 
 427 03cc 3E7C FDE2 	 .ascii ">|\375\342\341\364\ru:\376Y]\fGs\342nT\261\347\225\327\237s\313"
 427      E1F4 0D75 
 427      3AFE 595D 
 427      0C47 73E2 
 427      6E54 B1E7 
 428 03e5 2BE2 34CE 	 .ascii "+\3424\316\313!7\325\253(S9m\365\206v\260J\225Fz\252\323k'\025"
 428      CB21 37D5 
 428      AB28 5339 
 428      6DF5 8676 
 428      B04A 9546 
 429 03ff 0944 79D0 	 .ascii "\tDy\320\363Td\367\251p\360W;\327\271\370J*%\211\307\271\004"
 429      F354 64F7 
 429      A970 F057 
 429      3BD7 B9F8 
 429      4A2A 2589 
 430 0416 2725 41A5 	 .ascii "'%A\245\273\301\026\234\375\2222M\r\247\212\314\230\307\006w"
 430      BBC1 169C 
 430      FD92 324D 
 430      0DA7 8ACC 
 430      98C7 0677 
 431 042a 138F 8119 	 .ascii "\023\217\201\031XA^\230\235\203\305\t\276\3542\260\234t\314\376"
 431      5841 5E98 
 431      9D83 C509 
 431      BEEC 32B0 
 431      9C74 CCFE 
 432 043e C17E EA48 	 .ascii "\301~\352H\232\201\254\031\002\372\257\201\324\346\203\340\231"
 432      9A81 AC19 
 432      02FA AF81 
 432      D4E6 83E0 
 432      99
 433 044f D564 DF97 	 .ascii "\325d\337\227\002\025\210p\005\322MtN\320\367Q\327K\364n\005"
 433      0215 8870 
 433      05D2 4D74 
 433      4ED0 F751 
 433      D74B F46E 
 434 0464 F564 8008 	 .ascii "\365d\200\b,\037\275\252,b\025\t,\345\311\n\236\320)X\303\223"
 434      2C1F BDAA 
 434      2C62 1509 
 434      2CE5 C90A 
 434      9ED0 2958 
 435 047a E596 E42F 	 .ascii "\345\226\344/\340\373\352\033\3723\304)\326\225\262N\327\202"
 435      E0FB EA1B 
 435      FA33 C429 
 435      D695 B24E 
 435      D782 
GAS LISTING  			page 34


 436 048c E83F 24AD 	 .ascii "\350?$\255R\271\006gN\023>l\f\017,\225\022\200\320\364`\220\357"
 436      52B9 0667 
 436      4E13 3E6C 
 436      0C0F 2C95 
 436      1280 D0F4 
 437 04a3 3C24 65AE 	 .ascii "<$e\256\256\3736o\177\270\256vcj\3173\361T[\355\366\255\353k"
 437      AEFB 366F 
 437      7FB8 AE76 
 437      636A CF33 
 437      F154 5BED 
 438 04bb 37B4 A4E2 	 .ascii "7\264\244\342\265u\217n\271\267v[\274\2515\031m\217{\037\r\233"
 438      B575 8F6E 
 438      B9B7 765B 
 438      BCA9 3519 
 438      6D8F 7B1F 
 439 04d1 9A63 AD2D 	 .ascii "\232c\255-{\232\333\033\266\354\250\331\005\346\306h{tk{*\036"
 439      7B9A DB1B 
 439      B6EC A8D9 
 439      05E6 C668 
 439      7B74 6B7B 
 440 04e7 6D2A 5AFF 	 .ascii "m*Z\377l{\274\255\276y[*\332\334\326\030O\031\233R\251\226\324"
 440      6C7B BCAD 
 440      BE79 5B2A 
 440      DADC D618 
 440      4F19 9B52 
 441 04fe 8696 583C 	 .ascii "\206\226X<\330\320\020\215\305Rw\336M\037\251x\333\323\311\366"
 441      D8D0 108D 
 441      C552 77DE 
 441      4D1F A978 
 441      DBD3 C9F6 
 442 0512 9B51 D6D4 	 .ascii "\233Q\326\324\314\035=B\236\325\354\206P\262\265)Ry\307\355\221"
 442      CC1D 3D42 
 442      9ED5 EC86 
 442      50B2 B529 
 442      5279 C7ED 
 443 0527 C74D 03B4 	 .ascii "\307M\003\264\373S \236\003\235\335\370\017\331TLd"
 443      FB53 209E 
 443      039D DDF8 
 443      0FD9 544C 
 443      64
 444               	 .text
 445               	 .section .gnu.lto_Endpoint_Write_EStream_LE.286d6c29995bfbbb,"",@progbits
 446 0000 789C 8551 	 .ascii "x\234\205Q\315K\033Q\020\237\337{\273\311\032\212\372\027\024"
 446      CD4B 1B51 
 446      109F DF7B 
 446      BBC9 1A8A 
 446      FA17 14
 447 0013 F1E4 A98B 	 .ascii "\361\344\251\213\267B\241\340WQ\320\036\214V\241\005\331v7`X"
 447      B742 A1E0 
 447      5751 D01E 
 447      8C56 A105 
 447      D976 3760 
 448 0028 93F0 B214 	 .ascii "\223\360\262\024J\017yV\221B)\210\340I\017\206\026A(\264"
 448      4A0F 7956 
 448      9142 2988 
 448      E049 0F86 
 448      1641 28B4 
GAS LISTING  			page 35


 449 003c 7F40 0F39 	 .string "\177@\0179*HSm/\336r\361\246'/\245\004\326yY\023?.>\330\231\335y\363\373\230YA\202\356\236A~.@\364\2323l\202X\377E\264\354\ba\375|H:#\377\272\244\037HX\246\f\0130\231@\025!-T^\301P\240\237\252Zo4N\377|\266\364\017\375Q\307q%\004k=\005\345@/\021\002N+\t\334\026\377.j\2158>\334\373]G7\250\205\341 Q\002\245\310G\225\231\323\374\001\207\203\261n\323\252\326\353}\211^m\353|@\257\324\364\2778N\207\220\202\306\257\345z\023\271;\343^\341\2667\265\306\362\216n\306\261\fa\t\312\336\007L\254\220\351\3423\307\261i\323<[j\332\362\200>\354L\371\370\302\313\363\361\225\333\362\220D\246\372\274]\335\345\252\241\265\f\272N+\215\223Lr\225G\352=\375\347\215\365\206\260sH\266\023\"e\360\242\215\256\2668\271\266O\253g\350"
 449      2A48 536D 
 449      2FDE 72F1 
 449      A627 2FA5 
 449      04D6 7959 
 450 013d 0D61 FAA6 	 .ascii "\ra\372\246\311y\326=\226\262NkN\273It\330\235\034\222\231\330"
 450      C979 D63D 
 450      96B2 4E6B 
 450      4EBB 4974 
 450      D89D 1C92 
 451 0153 5D1E 4E1E 	 .ascii "]\036N\036\274\262\2566\3162s\034\361_7\327-\023'\004\226\020"
 451      BCB2 AE36 
 451      CE32 731C 
 451      F15F 37D7 
 451      2D13 2704 
 452 0169 DF3E 7112 	 .ascii "\337>q\022\022ffp\223\241x29\373l\310\035U\213o\003Uvg\263\303"
 452      1266 6670 
 452      93A1 7832 
 452      39FB 6CC8 
 452      1D55 8B6F 
 453 0183 EE48 5105 	 .ascii "\356HQ\005\356\320\213\351\307\356L\260T\n\275(\350\274,\214"
 453      EED0 8BE9 
 453      C7EE 4CB0 
 453      540A BD28 
 453      E8BC 2C8C 
 454 0197 15FC 5271 	 .ascii "\025\374Rq\261\020-L\317=zC]cJ\025\325H\321\0172\243^\344e#\025"
 454      B110 2D4C 
 454      CF3D 7A43 
 454      5D63 4A15 
 454      D548 D10F 
 455 01b2 784B 3DC3 	 .ascii "xK=\303\357\242\240<Q\230Q^\241\234\013\324%L\237\221y"
 455      EFA2 A03C 
 455      5198 515E 
 455      A19C 0BD4 
 455      254C 9F91 
 456               	 .text
 457               	 .section .gnu.lto_Endpoint_Write_EStream_BE.286d6c29995bfbbb,"",@progbits
 458 0000 789C 8D56 	 .string "x\234\215VkL\034U\024>\347\316\314\356<va\013\224\b\301\245,\024Z\214\354/\243\211\211\206>LH\032\177\364a\333h\322l\334\335\264\353\026\310BL\214?\030X\232\240PE\324\244\261\215\266!\244\242\0304\030i*1\0245>P[\025\0237\351\017\0325XK\342\343\227V\314z\356\2753\003,\210L\262s\347\236\373\235\357<\357\275\313\200A\341s\221~\325:\3000\215X\004\310\006\277\002\350\326\031\013N\205\3016\225\271(\330\001\205\251\357\316"
 458      6B4C 1C55 
 458      143E E7CE 
 458      CCEE 3C76 
 458      610B 9408 
 459 0092 4DB5 EB16 	 .string "M\265\353\026MU\324$J\303"
 459      4D55 D424 
 459      4AC3 00
 460 009d FF40 1FF3 	 .ascii "\377@\037\363\317\225\323\2629u/-\373\231>\306hf\3748K:\001\035"
 460      CF95 D3B2 
 460      3975 2F2D 
 460      FB99 3EC6 
 460      6866 FC38 
 461 00b5 8312 6DB0 	 .ascii "\203\022m\260\240\220[Rn\242%\345"
 461      A090 5B52 
 461      6EA2 25E5 
 462 00c1 9664 690E 	 .string "\226di\0160\237X1\005,\020D\344b@\350b\212\252\371\374\272aZ$\355z\f\271\343J\004.\330\366\320\374\310\267\2475\373m\273\317\316\347\273\322H\021>\200\220Dx\024\323\210!1\260\202\250\245\342\364\271\227m\033\273\317\333K\371\274\222F\205A\313&\025_}a\245\242\312\340\350\262\242.\025q\265\3428\233\236\317\347\277\030\275v\025\357Fh\347^\306\361\002F@\241q\230F\025\210\310\217\264\242\323\0273\350\013M\007SD\343\b\215\305$d!Z\326\266p\212\022G\265\224+\2249\330r\276R\3011\225\374U\345\210\303\016E5\t}5\2160\302\261\265\016K\035\237l\347\313\365\374\325\340`v\360\311N\376jt\200\364h\320k\333\203\333$BJ%=\3604\320s\230\336K\032\034AF\203\362%d\373\262\223\267\2658^D\rR\250\247\320/\222D\351#0-\367g[\335E3\205\006A"
 462      309F 5831 
 462      052C 1044 
 462      E462 40E8 
GAS LISTING  			page 36


 462      628A AAF9 
 463 01c2 3E03 2665 	 .string ">\003&e\322\f\255pY\317\371\207])7\313i8\007\\\205\354|\316tI\212\236\206\333\324\020\2414\372\223(K\221.\340\034\021\234E"
 463      D20C AD70 
 463      59CF F987 
 463      5D29 37CB 
 463      6938 075C 
 464 01f0 9F42 EF22 	 .ascii "\237B\357\"z"
 464      7A
 465 01f5 8A9C D0B7 	 .string "\212\234\320\267\262rG\210\377\033E\341\250+\227<\\1\307\031\253q*\f(\024k\317\345S\177\377\342\001Cg\341\225n\362C)\320\241\240\237\311\246\\\324\026\312\baW8H\305 1\307\365\214f\363\225.\260T\240x\306\024WT&rV\272N\302\312\\\3174\212\200\262\220\203r\262\243 \021\253\213\263\276\0344\220\252r\375\246\217\240\352\322\0239ht\322\251,\336\3649\237\252 \360\001\355K\212m\346\362\307\343\317}?\353w\032\300\355\204\351\376\367\366\001H\343I\024{&\205\333y\344/\361\330M\316e\375,7\210\265\234\200\367?$\2627\2558\276!\002\251'\035\221~\342\245\252|\264p\343\324Y/\312\372u\n\343\207\177\266\272N\235\031_\353\324\244\272\354\224\"\235\332\261)\247\210,\216o\t\273;I\247\002\316\330\257\333\363\017\246y\013\022f\246E\256n\304E\232\242)\177\033\372\325/}"
 465      B272 4788 
 465      FF1B 45E1 
 465      A82B 973C 
 465      5C31 C719 
 466 02f6 F09A 3290 	 .string "\360\2322\220D\325i\312\240l\300+\177\335\271Qk\3510\007Nk\335b.\260\342\277[\253\317\313[%\341R<z\322n\221\302u\325\b\351\0323`t\253\302\367\323\263?xm\034\336\354\206\n\027l\250\360:u3a\341\0362\320;\377|\326\303U{\006\212\222\"Y\334%\226\306\342\0256\370\351;84\375\342O\333\354\354\264\375g>\357Oc\210\301k\370\177\247/\321\213\272\315.\375q\355tvM\243\314~\322\034\307Iq|\271\355\"<.\250\357\357\253\353[\355\234\\7\002n\f5\344\361\212sm\315~\254\221\265\311.\fx\3739\222B\024;\255@El\377\210\203\2775p\227\213\257\245Z\n<\25660,\f\324\272\031\266\340\203\317\351j\241\035_G4\346\271\211\343d\307\300\034T\221\027\346\300D(\305\257\230\034\224\220\216961FG\202b \327\f"
 466      44D5 69CA 
 466      A06C C02B 
 466      7FDD B951 
 466      6BE9 3007 
 467 03ed 5DB9 48E7 	 .ascii "]\271H\347\254\016\036\255\"\016^!\220\2010W \334D\247\205\277"
 467      AC0E 1EAD 
 467      220E 5E21 
 467      9081 3057 
 467      20DC 44A7 
 468 0403 8BB9 5EA2 	 .ascii "\213\271^\242w,\313'\007d\240\\\243W\235EVY\n\033\370\244\212"
 468      772C CB27 
 468      0764 A05C 
 468      A357 9D45 
 468      5659 0A1B 
 469 041a 4FA8 0D1B 	 .ascii "O\250\r\033\371\244\304\022\366\203\374\302\370\232\376\023\360"
 469      F9A4 C412 
 469      F683 FCC2 
 469      F89A FE13 
 469      F0
 470 042b 14AB 5259 	 .ascii "\024\253RY\245s\231\215\365\013VU\003}i\234\360ac\352\235;\204"
 470      A573 998D 
 470      F50B 5655 
 470      037D 699C 
 470      F061 63EA 
 471 0442 0420 B038 	 .ascii "\004 \2608\241\363K\007I\231\237>\367\357;\364PstO\346\304\223"
 471      A1F3 4B07 
 471      4999 9F3E 
 471      F7EF 3BF4 
 471      5073 744F 
 472 0459 894C 47F4 	 .ascii "\211LG\364\320\201]\321\335m\231D\264\371\221\375\367E\017&N"
 472      D081 5DD1 
 472      DD6D 9944 
 472      B4F9 91FD 
 472      F745 0F26 
 473 046e B6A7 639D 	 .ascii "\266\247c\235\t\357\343\330\336\326x{\333\211\326\316c\373\017"
 473      09EF E3D8 
 473      DED6 787B 
 473      DB89 D6CE 
 473      63FB 0F
 474 0481 373D 0EE6 	 .ascii "7=\016\346\236Xg\354@g&\021;Y\274\353\251\316DGK\353\301L\254"
 474      9E58 67EC 
 474      4067 2611 
 474      3B59 BCEB 
GAS LISTING  			page 37


 474      A9CE 4447 
 475 049a B523 99C8 	 .ascii "\265#\231\310\030{3\231\266\314\356\266xb#\003MM\253G\217\236"
 475      187B 3399 
 475      B6CC EEB6 
 475      7862 2303 
 475      4D4D AB47 
 476 04b0 CF9A 8E83 	 .ascii "\317\232\216\203\312\r\374\013d\374\024\265"
 476      CA0D FC0B 
 476      64FC 14B5 
 477               	 .text
 478               	 .section .gnu.lto_Endpoint_Read_EStream_LE.286d6c29995bfbbb,"",@progbits
 479 0000 789C 8551 	 .string "x\234\205Q\315K\033A\024\177\277\231Iv\r\245\365/\220\342\311\223\2137\241P\360\253Th=\030\277\240\202\254\335\r\030\326$L\226\202\364\220\261\212\b\"\210\340\311\036\f-\205B\241\375\003z\b\236Z\024ci/\336r\351\255=\365RD\330\276\3116i\353\245\003\373\336\356\233\367\373xo\005\t\272~\206\370\371\001\242e\316\310\020\304\336\031\321\272+\204z\337G&'\277xdnH([\206\002l&PMH\205\332\",\005\372\251n\314~\353\353\347]e\336\231m\223$\265\b\254u\027T"
 479      CD4B 1B41 
 479      147F BF99 
 479      4976 0DA5 
 479      F52F 90E2 
 480 009f 3D42 04B8 	 .ascii "=B\004\270\355$\360\257\370[\321h%\311\351\353\363&n\202\332"
 480      ED24 F0AF 
 480      F85B D168 
 480      25C9 E9EB 
 480      F326 6E82 
 481 00b4 180E 1215 	 .ascii "\030\016\022\025P\226\002\324\231\331\341\017\270\034\254\365"
 481      5096 02D4 
 481      99D9 E10F 
 481      B81C ACF5 
 482 00c4 0C6D 1AB3 	 .ascii "\fm\032\263w;\325k\034~\0370\033\r\3633I\234\bR\320\375?r\275"
 482      773B D56B 
 482      1C7E 1F30 
 482      1B0D F333 
 482      499C 0852 
 483 00dd A9DC B571 	 .ascii "\251\334\265q\177\343\236\037\030\203\365#s\225$2\202\022\224"
 483      7FE3 9E1F 
 483      1883 F523 
 483      7395 2432 
 483      8212 94
 484 00f0 FF1F 30B5 	 .ascii "\377\0370\265B\266\213\317<\307c\207\026\330\322\261#?\322\263"
 484      42B6 8BCF 
 484      3CC7 6387 
 484      16D8 D2B1 
 484      233F D2B3 
 485 0104 A387 015E 	 .ascii "\243\207\001^\360\362\002\274\344\266\"$\221\255Nu\252\257\270"
 485      F0F2 02BC 
 485      E4B6 2224 
 485      91AD 4E75 
 485      AAAF B8
 486 0117 6A69 9545 	 .ascii "ji\225E7i\243u\221K\257\212\310>\245K\336Xo\204L\001\351v\"d"
 486      3769 A375 
 486      914B AF8A 
 486      C83E A54B 
 486      DE58 6F84 
 487 0131 2D5E 74D0 	 .ascii "-^t\320\3656'\327>\320\3467t\201\226\320\371\333\344\002\353"
 487      F536 27D7 
 487      3ED0 E637 
 487      7481 96D0 
 487      F9DB E402 
 488 0146 9E28 D9A4 	 .ascii "\236(\331\244-\267\323$\272\354n\001\351L\354\256\b\267\b^YO"
 488      2DB7 D324 
GAS LISTING  			page 38


 488      BAEC 6E01 
 488      E94C ECAE 
 488      08B7 085E 
 489 015c 07A7 EC1C 	 .ascii "\007\247\354\034\237\370\257\333\353\266\211\013\002K\2107;\234"
 489      9FF8 AFDB 
 489      EBB6 890B 
 489      024B 8837 
 489      3B9C 
 490 016e 8484 9D19 	 .ascii "\204\204\235\031\334d)\356<\230\2757\342\215\353\225'\241\256"
 490      DC64 29EE 
 490      3C98 BD37 
 490      E28D EB95 
 490      27A1 AE
 491 0181 7AB3 F951 	 .ascii "z\263\371Qo\254\254Codnz\330\233\tW+\221\037\207\335\227\245"
 491      6FAC AC43 
 491      6F64 6E7A 
 491      D89B 0957 
 491      2B91 1F87 
 492 0198 8952 5029 	 .ascii "\211RP)\257\224\342\245\351\371\301\307\3243\241uY\217\225\203"
 492      AF94 E2A5 
 492      E9F9 C1C7 
 492      D433 A175 
 492      598F 9583 
 493 01ac 3037 EEC7 	 .ascii "07\356\307~>\326\241\277zkt-\016\253\223\245\031\355\227\252"
 493      7E3E D6A1 
 493      BF7A 6B74 
 493      2D0E AB93 
 493      A519 ED97 
 494 01c1 8550 FF02 	 .ascii "\205P\377\002|\177\220\223"
 494      7C7F 9093 
 495               	 .text
 496               	 .section .gnu.lto_Endpoint_Read_EStream_BE.286d6c29995bfbbb,"",@progbits
 497 0000 789C 8D55 	 .string "x\234\215Ukh\034U\024>\347\316\314\316k7I\223\020L\300%\344\321\264\rf\377\n\202\222>\204@\361G\037\266\242P\026w\227v\335&a\023\004\361G&\331\026\242\211\322\026\005\261\245\264\224P\253\221\264D\254\324\"i\264hY5\025\025\\\350\217\024\205Z\033\360\365\313\032X\317\271wf\222lb\310\300\334;\367\334\357;\257{\316\035\001\002*\237\213\364\3366\001\316\322\214U\200\342\304\267"
 497      6B68 1C55 
 497      143E E7CE 
 497      CCCE 6B37 
 497      4993 104C 
 498 007f C396 10B1 	 .ascii "\303\226\020\261\353q\360\034\355\207\004xQM\350\037\315\002"
 498      EB71 F01C 
 498      ED87 0478 
 498      514D E81F 
 498      CD02 
 499 0091 2D8D 3B2E 	 .ascii "-\215;.-u4\024\312\300(\177`D\230\243\035\264\355\360\0305\205"
 499      2D75 3414 
 499      CAC0 287F 
 499      6044 98A3 
 499      1DB4 EDF0 
 500 00a8 3529 6865 	 .ascii "5)he\377R$N\324\302\230B\333\"&\345\256\222;\350*\271\253\264"
 500      FF52 244E 
 500      D4C2 9842 
 500      DB22 26E5 
 500      AE92 3BE8 
 501 00c0 7447 4544 	 .ascii "tGED\3568\022\026\215!\262\030\020\206\204\246\033\021\323\262"
 501      EE38 1216 
 501      8D21 B218 
 501      1086 84A6 
 501      1B11 D3B2 
GAS LISTING  			page 39


 502 00d4 1D97 A443 	 .ascii "\035\227\244C/ ;\256\265\300y\317;5?\361\375\033\206w\331\033"
 502      2F20 3BAE 
 502      B5C0 79CF 
 502      3B35 3FF1 
 502      FD1B 8677 
 503 00ea F5CA E5A1 	 .ascii "\365\312\345\241\034R\204O\"d\020\236\307\034b\215\234DE\324"
 503      1C52 844F 
 503      2264 109E 
 503      C71C 628D 
 503      9C44 45D4 
 504 00fe 8A38 73E6 	 .ascii "\2128s\346m\317\303\341s\336b\271\254\345P\023\320\263A\342\331"
 504      6DCF C3E1 
 504      73DE 62B9 
 504      ACE5 5013 
 504      D0B3 41E2 
 505 0113 93CB 89BA 	 .ascii "\223\313\211\272\200\347\226\210\226\"\342J\342\224\230\231/"
 505      80E7 9688 
 505      9622 E24A 
 505      E294 9899 
 505      2F
 506 0124 97BF BE74 	 .ascii "\227\277\276t{\016\037C\350g/Sx\036[@\243\371\002\315:\220\""
 506      7B0E 1F43 
 506      E867 2F53 
 506      781E 5B40 
 506      A3F9 02CD 
 507 013b 1369 C7A2 	 .ascii "\023i\307\242/a\323\027:>\306\365\347*\232'h\256\246MQC0c\023"
 507      2F61 D317 
 507      3A3E C6F5 
 507      E72A 9A27 
 507      68AE A64D 
 508 0154 ABAA E5A1 	 .ascii "\253\252\345\241\216Y\365>\260\301W\332\310\230&\036\342>\265"
 508      8E59 F53E 
 508      B0C1 57DA 
 508      C898 261E 
 508      E23E B5
 509 0167 D9DF 69F1 	 .ascii "\331\337i\361"
 510 016b 91AD CC6D 	 .string "\221\255\314m\363\205\355\274\330L\360H\007\017[x\330\312\3036v\256\323\247\320c\3001\317;\321\254\326\212\253\324\003\247\201\236\0034\316\232p\020\005M\3327P\030-\\}h\244\360\"\032\220E+\213\246L\022\245\217\300\264=V\350\r6\235,\332\004\001\270\005B\311\224\031\332a\331\310\271g\002)\233e5\254\003\346\2400_r\002%U\257\302C*\210\232\034\232\031TG\221\253\3209!uV\001|\005\307\0260$\262\302\310\362\223;H\372\213\272\306\250\033\237\204\270j\306\331+q:\374\255Q\254#\327\216\377\373[\b\2549\r\357\016\223\037Z\005\207\202~\255\220\rP\233(#\204]\346 \235\004\211\0317r\251Pn\n\200u\022\305\031\323\002Q\275\314Y\335\032\t\253\017<3(\002\312B\tj\311\216\206\244X_(FJ\340\022U\273s?BP}\361\245\0224\370\351\324\026\356G\374O]*\210"
 510      F385 EDBC 
 510      D84C F048 
 510      070F 5B78 
 510      D8CA C336 
 511 026c F525 C536 	 .string "\365%\3056{\355\346\324\233?\025M\277"
 511      7BED E6D4 
 511      9B3F 154D 
 511      BF00 
 512 027a 824A 9819 	 .string "\202J\230\031\373x7\2002\236A\3313Y\334\314\221\277\305\261;\254\313\375U5\210\273\224\200O?'e\037\270)|_\006\322A\034\231~\322K\247\362\305\275\273\307O\207Qv\254q0&\374\325\036855\265\332\251\253\372\222S\232rj\313\206\234\"e)\374P\332\335J\234Fx\307{\317\273\374T\216K\2200\263=jw=]\304\224E\371\307\251\337M\345\003@X\224\321\f\352~Q\306T\001\336\370\347\321\365J\313\202\223\350\227\326\003\021"
 512      FB78 3780 
 512      329E 41D9 
 512      3359 DCCC 
 512      91BF C5B1 
 513 0309 1BFF BFB4 	 .string "\033\377\277\264F\303\2745\021.\313\321\023\273G\t\327\244\02120f\303|\233\306\375\364\372\317a\031\3077\332P\361\212\206\212\257qn\316\262s\373\354J}\345\271\025\277\354^:7C9\267\255\"\327\177\256<\26790V%\271*\343\333\315\242 \0059\254\366\257\232\273\321\300\271\026\332Zv\021\255j\240\026\225\314\302\275\361\260\001[\263\210\2625*(\262_[}\374\203\361\316"
 513      46C3 BC35 
 513      112E CBD1 
 513      13BB 4709 
 513      D7A4 1132 
 514 0382 DF46 C997 	 .string "\337F\311\227x\\i\340\2024\320\026\244\304\205\233\267\350_@-\332Nj\2343\323\207\311\216\215%\350$/\234\361\351\232,\377\023J\320L\034grz\222zX\263\221\231Q\240\177$\322\305hA\250V\2237\245\024\250@D \220n\242_s?&\003/1\274G\325S\0022Pk\320\320\356\222U\312\237\313\213N^P\3354\360\242\331\225\366c|\303\177G?qN\264\256\310:]\244brLj\325\r\260\026\247\b\037\267\257_yDJ"
 514      785C 69E0 
GAS LISTING  			page 40


 514      8234 D016 
 514      A4C4 859B 
 514      B7E8 5F40 
 515 0410 A20B D316 	 .ascii "\242\013\323\026\377%\220\310|]<\261{\377\323\335\211\235\371"
 515      FF25 90C8 
 515      7C5D 3CB1 
 515      7BFF D3DD 
 515      899D F9
 516 0423 232F A7F3 	 .ascii "#/\247\363\003\211\375{\267'v\364\345\323\211\356g\367<\236\330"
 516      0389 FD7B 
 516      B727 76F4 
 516      E5D3 89EE 
 516      67F7 3C9E 
 517 0438 973E DA9F 	 .ascii "\227>\332\237K\016\246\303\217C\273zS\375}Gz\007\017\3559\320"
 517      4B0E A6C3 
 517      8F43 BB7A 
 517      53FD 7D47 
 517      7A07 0FED 
 518 044e F522 383B 	 .ascii "\365\"8;\223\203\311\275\203\371t\362h\365\366W\006\323\003="
 518      9383 C9BD 
 518      83F9 74F2 
 518      68F5 F657 
 518      06D3 033D 
 519 0462 BDFB F2C9 	 .ascii "\275\373\362\311\336\201L:o\357\312\347\373\362;\372R\351\365"
 519      DE81 4C3A 
 519      6FEF CAE7 
 519      FBF2 3BFA 
 519      52E9 F5
 520 0475 0C74 75AD 	 .ascii "\ftu\255\234C\365\274\352:\f\377\001IN\377+"
 520      9C43 F5BC 
 520      EA3A 0CFF 
 520      0149 4EFF 
 520      2B
 521               	 .text
 522               	 .section .gnu.lto_Endpoint_Write_Control_Stream_LE.286d6c29995bfbbb,"",@progbits
 523 0000 789C 9557 	 .ascii "x\234\225WklTU\020\236\271\217}ow\351n\037[y\230\246\241@K\253"
 523      6B6C 5455 
 523      109E B98F 
 523      7D6F 77E9 
 523      6E1F 5B79 
 524 001a F2D2 A831 	 .ascii "\362\322\2501<\023LMPT\232h\3224\354\022\273.\320\224\325\304"
 524      3C13 4C4D 
 524      5054 9A68 
 524      D234 EC12 
 524      BB2E D094 
 525 0030 F883 DB16 	 .ascii "\370\203\333\026\f\211%\001\345\007AB@\304Z\005J)J\320\032\272"
 525      0C89 2501 
 525      E507 4142 
 525      40C4 5A05 
 525      4A29 4AD0 
 526 0046 D042 6B5D 	 .ascii "\320Bk]\244\001\242U\023\341\007\255Qb\324h$J\262\316\234s\357"
 526      A401 A255 
 526      13E1 07AD 
 526      5162 D468 
 526      244A B2CE 
 527 005d 6E77 5BA1 	 .ascii "nw[\241\366\307\2343\347\314\343;3sg\266\n(\220\373\367\002\002"
 527      F6C7 9C33 
GAS LISTING  			page 41


 527      E7CC E33B 
 527      3373 67B6 
 527      0A28 90FB 
 528 0074 CCF0 029C 	 .ascii "\314\360\002\234\247=\336\007\250\354\272\004\320\354P\024uG"
 528      A73D DE07 
 528      A8EC BA04 
 528      D0EC 5014 
 528      7547 
 529 0086 3918 2E8D 	 .ascii "9\030.\215\251GE?\037\243\246\350\342T\334ytT\245\260M)\032@"
 529      A947 453F 
 529      1FA3 A6E8 
 529      E254 DC79 
 529      7454 A5B0 
 530 009e 3AB6 0F7C 	 .ascii ":\266\017|\ttn7Y\207d\035&\353\224\254S)\024\254K\262.\305-\330"
 530      0974 6E37 
 530      5987 641D 
 530      26EB 94AC 
 530      5329 14AC 
 531 00b8 12C9 96E0 	 .ascii "\022\311\226\3404\266\271\324\215^i\333#7\t\207W\311\273\364"
 531      34B6 B9D4 
 531      8D5E 69DB 
 531      2337 0987 
 531      57C9 BBF4 
 532 00cc 0589 B87C 	 .ascii "\005\211\270|\347T\022\314S<\343Y\237D\230p\370\245\001\234\246"
 532      E754 12CC 
 532      533C E359 
 532      9F44 9870 
 532      F8A5 019C 
 533 00e1 D804 D47C 	 .ascii "\330\004\324|\0015_\261\t\373.\341\333\023P\212n\260\323`\247"
 533      0135 5FB1 
 533      09FB 2EE1 
 533      DB13 508A 
 533      6EB0 D360 
 534 00f6 701A 34D9 	 .ascii "p\0324\331\002\311\026\230lH\262!,\026\220\n\345\212\305J@\\"
 534      02C9 1698 
 534      6C48 B221 
 534      2C16 900A 
 534      E58A C54A 
 535 010c B884 94A7 	 .ascii "\270\204\224\247\b\221\217\001a\253\242j\272\315\356p\272J\334"
 535      0891 8F01 
 535      61AB A26A 
 535      BACD EE70 
 535      BA4A DC
 536 011f 1E6F 9ECF 	 .ascii "\036o\236\317?-?\020,\b\025\026\027\341\326\027\221\203\255\227"
 536      3F2D 3F10 
 536      2C08 1516 
 536      17E1 D617 
 536      9183 AD97 
 537 0133 C221 C378 	 .ascii "\302!\303x\353\372\366+;u\343\204\261\303H\245\266\306\220\262"
 537      EBFA F62B 
 537      3B75 E384 
 537      B1C3 48A5 
 537      B6C6 90B2 
 538 0147 B212 6103 	 .ascii "\262\022a\003R.b\210~\261(9\231\222\212\275\373v\033\0066\037"
 538      522E 6288 
 538      7EB1 2839 
 538      9992 8ABD 
GAS LISTING  			page 42


 538      FB76 1B06 
 539 015d 34EE A452 	 .ascii "4\356\244Rj\fU\005\326d\024\035R\021'U\354\311R\324\024\250\233"
 539      6A0C 5505 
 539      D664 141D 
 539      5211 2755 
 539      ECC9 52D4 
 540 0174 A2E2 5F7F 	 .ascii "\242\342_\177\3161Z{\215\333\251\224=\206\272\002[\246\210\364"
 540      CE31 5A7B 
 540      8DDB A994 
 540      3D86 BA02 
 540      5BA6 88F4 
 541 0188 CC85 9D5A 	 .ascii "\314\205\235Z\346\211Z\030\337G\345\036\036;\225\336\353\251"
 541      E689 5A18 
 541      DF47 E51E 
 541      1E3B 95DE 
 541      EBA9 
 542 019a 544F C7E5 	 .ascii "TO\307\345\257\3611\204F\216\013\021\025\302x\bKA3W\235\326\303"
 542      AFF1 3184 
 542      468E 0B11 
 542      15C2 7808 
 542      4B41 3357 
 543 01b1 B4DA 686D 	 .ascii "\264\332hm\247\325\016d\336\203\215\210>\332\331\374\264\203"
 543      A7D5 0E64 
 543      DE83 8D88 
 543      3EDA D9FC 
 543      B483 
 544 01c3 7CBA 3B42 	 .ascii "|\272;Bw\001S6h\352\026\262\301\022\022\263O7Of\360\311L\323"
 544      7701 5336 
 544      68EA 16B2 
 544      C112 12B3 
 544      4F37 4F66 
 545 01db D42C 53BC 	 .ascii "\324,S\274\224\326\016Z\313L~\266)\\\316\302sX}.\223yL*\230T"
 545      94D6 0E5A 
 545      CB4C 7EB6 
 545      295C CEC2 
 545      7358 7D2E 
 546 01f5 3299 CFA4 	 .ascii "2\231\317\244\212I5\223\007\230<HD\177\210w\013\230,d\262\210"
 546      8A49 3593 
 546      0798 3C48 
 546      447F 8877 
 546      0B98 2C64 
 547 020b C962 264B 	 .ascii "\311b&K\230pY\3006\303\330u\277t\"]\002\307\212\376\326\021\275"
 547      9870 59C0 
 547      36C3 D875 
 547      BF74 225D 
 547      02C7 8AFE 
 548 0222 6983 5A0A 	 .ascii "i\203Z\n\336M\233:\b-\327\277\\\034\306\017Q7!E\321\003@\307"
 548      DE4D 9B3A 
 548      082D D7BF 
 548      5C1C C60F 
 548      5137 2145 
 549 023a 079F B24E 	 .ascii "\007\237\262NY\233\243\253\262z\022Z\276\275}\245L\336E\321W"
 549      599B A3AB 
 549      B27A 125A 
 549      BEBD 7DA5 
 549      4CDE 45D1 
 550 024f 01F3 08D0 	 .ascii "\001\363\b\320;\260\257\3310\3741t\274\016\177S\212h\347lDEt"
GAS LISTING  			page 43


 550      3BB0 AFD9 
 550      30FC 3174 
 550      BC0E 7F53 
 550      8A68 E76C 
 551 0266 03DA 8A64 	 .ascii "\003\332\212dD\322\311\031\200\276\321f\267e\302OV2)\253%7\204"
 551      44D2 C919 
 551      80BE D166 
 551      B765 C24F 
 551      5632 29AB 
 552 027d 0B60 040A 	 .ascii "\013`\004\n\351NC\":\021\237\322\366\263m\004\202\004O\353s\022"
 552      E94E 4322 
 552      3A11 9FD2 
 552      F6B3 6D04 
 552      8204 4FEB 
 553 0293 6555 8F42 	 .ascii "eU\217Bb\001\023\233v\325i\356t\013\256\"\fjpRU\311\347X\242"
 553      6201 139B 
 553      76D5 69EE 
 553      740B AE22 
 553      0C6A 7052 
 554 02ac BB21 ED94 	 .ascii "\273!\355\224%\364\361\265RK\354\b\252I8\367i\177\347\236\275"
 554      25F4 F1B5 
 554      524B EC08 
 554      AA49 38F7 
 554      697F E79E 
 555 02c1 9D76 3386 	 .ascii "\235v3\206V0{\337<V\t \3657\240xK\024\347\360\303\3674\323s]"
 555      5630 7BDF 
 555      3C56 0920 
 555      F537 A078 
 555      4B14 E7F0 
 556 02db 6C        	 .ascii "l"
 557 02dc D0FD A32C 	 .string "\320\375\243,G\267i3\t\255\237\235\027\306\302x\\\370\235K:!\330k|`\\\177\202\224\204\314\271\325\362\366n\266H\323\202i\203\243I`\234\203\337\337\376\026\323\231>\"r,\361\t\205|\221\024a/\235\024w\243\310\342x\214\203\240\204\261[$\372\210H\177\276H\320Xb8$\317\351\204\345\355\331\301\262\303\350\020\310\250^\333\230-\250g\t:\340\275/\300\n\353\017\311\211a\375\244\206aw\213\260*\022\372\274)\205\365\207cTC\237\b\307\025\244#|;Dym\273uc\373w^\013U\305$\360\2350:\220F54\t\252\323OfP\251\022U\345\224P\r1\2523\302\361|\322\021\2765\013U\177\006\325\374IP\271\340\243\213iT\235\023Q\r\365<\222A\245ITUSB\325\311\250z\204\343j\322\021\276\321Bu\344\200j\241\252\236\200j\035\226\300\237\375\200\265d\362t\372\373H\266O"
 557      47B7 6933 
 557      09AD 9F9D 
 557      17C6 C278 
 557      5CF8 9D4B 
 558 03dd 37F8 F8B8 	 .ascii "7\370\370\270\276\323nVc\267\254\306\rVQ>\220\203\366\367\\\264"
 558      BED3 6E56 
 558      63B7 ACC6 
 558      0D56 513E 
 558      9083 F6F7 
 559 03f3 2DBF 10DA 	 .ascii "-\277\020\332\344E\f\343Y\001\350A\322\021\375\350\327\223\374"
 559      E445 0CE3 
 559      5901 E841 
 559      D211 FDE8 
 559      D793 FC
 560 0406 1525 44A1 	 .ascii "\025%D\241J\353V\324<p3\217p\265|\272="
 560      4AEB 56D4 
 560      3C70 338F 
 560      70B5 7CBA 
 560      3D
 561 0417 5521 25A2 	 .string "U!%\242XB~\310\256\026E\225\355[\302\242\330Y\202g\312\256\267z\337\276y\177f\026Q79\213\367\032bdZ|\263Cw\336\035\336\331:1Cg\3650\366\231\217O\210<\331X-\347\331\277e\177\333\302d\353\233\255\207<\026\376\351&p\341>\215\332\352\320\323\205\374\216\326\366\266\373,\205\031QD\321\323h\034\217W\241\371B\227\246\374Gm\225\226\374\314(\332\204|\216\203v\341`\246\025[/\354\367\363\220p@\372\316&\322!\016$\032\325:\020\276P\026U\342\237\006\313\025\346\364\332\021\240~\256\270\211\314\360\354\357\212\215\200\032E\215\331\351\236\266\256\340\b\330(\353\356\236N;\301\360\034\355:\201\214#\017\316\372\250\333l\033M\374\323\201\226a\371\200\361\325ZK\243D\024i\353W\255\247\333\322\3250\313\222ud?\366\260\300?K$\364\277\272\376\305\204\236\311\245\331\366\037\232z\333\037\024"
 561      5842 7EC8 
 561      AE16 4595 
 561      ED5B C2A2 
 561      D859 8267 
 562 0518 1690 4E18 	 .string "\026\220N\030\2730\004V\303\037\274g\303_`=\311\017\3578\220\303V\036\305B\225\342\204>\034\201\331Q\f2\2432S\026\305"
 562      BB30 0456 
GAS LISTING  			page 44


 562      C31F BC67 
 562      C35F 603D 
 562      C90F EF38 
 563 0542 33B3 7CC7 	 .string "3\263|\307\367](`\245i@\277!\321J\224|\250\236\2339-+s\212\231\2713\365\326\224T&dN\211b\271\237\323WB^\351\353\232\315\214\306\214\036\3052f\364\022\221\260|\330Q\316\t\273\325\374\264eMO\377\210\310\244+"
 563      F75D 2860 
 563      A569 40BF 
 563      21D1 4A94 
 563      7CA8 9E9B 
 564 058e BB43 6296 	 .ascii "\273Cb\226\355\035\373&3\313:rgY\351\377\230eI\221\332\016\361"
 564      ED1D FB26 
 564      33CB 3A72 
 564      6759 E9FF 
 564      9865 4991 
 565 05a5 C052 7396 	 .ascii "\300Rs\226}\376\206*/\350h\222\276\033\204\301b9\313\206/x\263"
 565      7DFE 862A 
 565      2FE8 6892 
 565      BE1B 84C1 
 565      6239 CB86 
 566 05bc 05B3 8759 	 .ascii "\005\263\207Y\001\264\024\337m\226]K8\031"
 566      01B4 14DF 
 566      6D96 5D4B 
 566      3819 
 567 05ca 7772 FC30 	 .string "wr\3740[8\365avY8^D:\331\303\254\377\247o\320\202\265h\222\016\035\202\317\213\250A\027\302\001\331\256j\261\030\276\013\341]\306[r\2673\363c\306\234o\213\247>\337\256\b(KHg\334|\353\033\273\321?\332\213V\272\227L\022\350\"\376m7L\377\204\261?\273,);\313\321\377\017\266\375\307D\247\320T\260\237\362\212\035\202\343\252\327\274\016\374\261\300\274\r\356Yd\336\026\234\222;\200\342[\037;8\022H\0168\356\313j\236[\265\264zES\303\253\221\246-\325\317\255]V\275|sS\244z\351\363\317<\\\375ldcc\254>\036Io\352Vn\n7nn\330\024\257[\276yS\274is\254n]\325zp\255\250\217\327\257\2157E\3527\346\325\324o\211\257\251_\377r$\276\352\225X,@\366\352VD^mX\037Y\033g\375\232\3455\276e\257\305#[Vo\262L=z\027"
 567      5B38 F561 
 567      7659 385E 
 567      443A D9C3 
 567      ACFF A76F 
 568 06cb 5555 D96B 	 .ascii "UU\331k\332=sU/\201\306\236\377\005\270Du\204"
 568      DA3D 7355 
 568      2F81 C69E 
 568      FF05 B844 
 568      7584 
 569               	 .text
 570               	 .section .gnu.lto_Endpoint_Write_Control_Stream_BE.286d6c29995bfbbb,"",@progbits
 571 0000 789C 9557 	 .string "x\234\225WklTU\020\2369\367\336}o\267\217\335v\267\022(\206`y\265<D F\r\017I05QQi\242I\323\320%v]JSV\023\343\017n[0M,\t ?\b\020#j\255U\261B\021\002\326\320E\n\324Z\205\200\321\202\t\360\203b\224\030%\032\211\220\2543\347\334\273\333\335V\250\3751\347\3149\363\370\316\314\334\231\255"
 571      6B6C 5455 
 571      109E 39F7 
 571      DE7D 6FB7 
 571      8FDD 76B7 
 572 006f 01B9 7F2F 	 .string "\001\271\177/ @\215\037\340+\332\343}\200b\333\267"
 572      2040 8D1F 
 572      E02B DAE3 
 572      7D80 62DB 
 572      B700 
 573 0081 CD2E 21B4 	 .ascii "\315.!\264\266\007\300\364\350L}\032\346\3631\352\302\220\247"
 573      B607 C0F4 
 573      E84C 7D1A 
 573      E6F3 31EA 
 573      C290 A7
 574 0094 F2CE 67A0 	 .ascii "\362\316g\240\246\204\035\242\344\f\322\261\363\3147@\347N\213"
 574      A684 1DA2 
 574      E40C D2B1 
 574      F3CC 3740 
 574      E74E 8B
 575 00a7 7529 D665 	 .ascii "u)\326e\261n\305\272E\261d=\212\365\b\257dK\025[\212\005ls\251"
 575      B16E C5BA 
 575      45B1 643D 
GAS LISTING  			page 45


 575      8AF5 08AF 
 575      644B 155B 
 576 00c0 17FD CAB6 	 .ascii "\027\375\312\266Om\222.\277\310\373\366k\022\361\004Nh$\230'"
 576      4F6D 922E 
 576      BFC8 FBF6 
 576      6B12 F104 
 576      4E68 2498 
 577 00d5 7CA3 D980 	 .ascii "|\243\331\200B\230t\345+\003X \034\022j\241\204Z(\034\322\276"
 577      4298 74E5 
 577      2B03 5820 
 577      1C12 6AA1 
 577      845A 281C 
 578 00eb 47FA F615 	 .ascii "G\372\366\025\211\222\253\3544\330-\235\006-6\244\330\220\305"
 578      8992 ABEC 
 578      34D8 2D9D 
 578      062D 36A4 
 578      D890 C5
 579 00fe 4614 1BC1 	 .ascii "F\024\033\301\260\204T\254V\f\213\"y\341\221R\276\022D>\006\204"
 579      B084 54AC 
 579      560C 8B22 
 579      79E1 9152 
 579      BE12 443E 
 580 0114 4D42 D30D 	 .ascii "MB\323\r\207\323\345\366\224z}\376\274@~AaQ0\024)\016\227\340"
 580      87D3 E5F6 
 580      947A 7DFE 
 580      BC40 7E41 
 580      6151 3014 
 581 012c A617 9183 	 .ascii "\246\027\221\203m\334\017\373Ls\307\225-\347\267\032\346gf\233"
 581      6DDC 0FFB 
 581      4C73 C795 
 581      2DE7 B71A 
 581      E667 669B 
 582 0140 994A 6D8A 	 .ascii "\231Jm\212#e\345q\204uH\271\210#\346\313"
 582      2365 E571 
 582      8475 48B9 
 582      8823 E6CB 
 583 0150 45E4 644A 	 .string "E\344dJ)\366\355\336n\232\330\374\216y'\225\322\342\250\tx*\243\350R\2128\256bo\226\242.\240f\202\212\177\377Un\266\366\231\267R)g\034\r\001\033'\210\364\350\251\255z\346\211z\035~\200\342\036\036\273E\337\225T\252\267\353\354\017\370(B#\307\205\210\006u\270\017\357\007\335Z\rZ\337\243\325Ak'\255N \363>$I?\355D\036\3550`\311\026\322\211#HL\0071!K\261\330\272\f\263\365I$\341\234l\235L\341\2232\313\356TK|\032\255]\264N\267\370rKx\006\013\317d\365YLf3\231\303\244\202I%\223\271L\3461\231\317d\001\021\343A\336-d\362\020\223EL\0263Y\302\204k\0046\233\346\2662\345D\271\004\016\034\375\255!z\315\001\325\024\311k\016m\bZ\333Z{n\032u\370\021\032\020C\177\f}2\254\224b\022\246\3537[\033\354\313@\f\363H\004`"
 583      29F6 EDDE 
 583      6E9A D8FC 
 583      8E79 2795 
 583      D2E2 A809 
 584 0251 843A 530E 	 .string "\204:S\016\350\206\317Z\336y\322>e\207l\206m\220\221\226\213\267\316O\263\255\024\316\202\231\364\206=\260\273\3314\363\343\350z\035\376\241\024\323\316\335\210Bv\023\332\312dF\323\311=\003'G\232\275\266\t\037Y\311\244\274\232\334\320S"
 584      E886 CF5A 
 584      DE79 D23E 
 584      6587 6C86 
 584      6D90 9196 
 585 029d 8621 4C77 	 .ascii "\206!Lw:\0221\210\024\212\366_\035\303PL\360\364\223n\242\362"
 585      3A12 3188 
 585      148A F65F 
 585      1DC3 504C 
 585      F0F4 936E 
 586 02b3 0D82 C442 	 .ascii "\r\202\304B\0266\375\202\333\332\0316\\!\r\352pP\323\310\347"
 586      1636 FD82 
 586      DBDA 1936 
 586      5C21 0DEA 
 586      7050 D3C8 
 587 02c8 F564 4F7D 	 .ascii "\365dO}\332)K\030\243k\255\232\330a\244\030\2368\326\337\275"
GAS LISTING  			page 46


 587      DA29 4B18 
 587      A36B AD9A 
 587      D861 A418 
 587      9E38 D6DF 
 588 02dd 7357 B7D3 	 .ascii "sW\267\323\n\273\035\377\2767\367\317\006P\372\353P\276%\206"
 588      0ABB 1DFF 
 588      BE37 F7CF 
 588      0650 FAEB 
 588      50BE 2586 
 589 02f1 33F9 E13B 	 .ascii "3\371\341;\233\351\271\0366\350\375Y\225\263\327\262I\021\377"
 589      9BE9 B91E 
 589      36E8 FD59 
 589      95B3 D7B2 
 589      4911 FF
 590 0304 E22B 69AC 	 .ascii "\342+i\254\016?\225~g\221N\004v\231\037\232W\036#%)sb\225\272"
 590      0E3F 957E 
 590      6791 4E04 
 590      7699 1F9A 
 590      571E 2325 
 591 031d BD9B 2DD2 	 .ascii "\275\233-\322\264a:\340\223!`\234\003?\335\272\210\351\342\350"
 591      B461 3AE0 
 591      9321 609C 
 591      033F DDBA 
 591      88E9 E2E8 
 592 0331 9065 A1F0 	 .ascii "\220e\241\360I\205\240L\212\264\227N\212\267Qfq4F\231\376\036"
 592      4985 A04C 
 592      8AB4 974E 
 592      8AB7 5166 
 592      7134 4699 
 593 0347 99E8 0E99 	 .ascii "\231\350\016\231\376\240L\320\365\344\271\210:\247\023\226wf"
 593      FEA0 4CD0 
 593      F5E4 B988 
 593      3AA7 1396 
 593      7766 
 594 0359 07CB 0923 	 .ascii "\007\313\t#\203\240\242\372\375\372lA#K\320\005\357\177\rvX/"
 594      83A0 A2FA 
 594      FDFA 6C41 
 594      234B D005 
 594      EF7F 0D76 
 595 036f 0F8D 0DEB 	 .ascii "\017\215\r\353\341*\206\335#\303*\024\364\331\023\n\353\345\375"
 595      E12A 86DD 
 595      23C3 2A14 
 595      F4D9 130A 
 595      EBE5 FD
 596 0382 5443 87A5 	 .ascii "TC\207\245\3439\244#}\273dym\276qu\313%\277\215j\3168\360\335"
 596      E339 A423 
 596      7DBB 6479 
 596      6DBE 7175 
 596      CB25 BF8D 
 597 039b 3072 268D 	 .ascii "0r&\215jp\034TG\236\310\240\322\024\252\212\t\241\032dTG\245"
 597      6A70 1C54 
 597      479E C8A0 
 597      D214 AA8A 
 597      09A1 1A64 
 598 03b2 E34A D291 	 .ascii "\343J\322\221\276u\033U\177\006U\3458\250<\360\361\3514\252\356"
 598      BE75 1B55 
 598      7F06 55E5 
GAS LISTING  			page 47


 598      38A8 3CF0 
 598      F1E9 34AA 
 599 03c7 B1A8 067B 	 .ascii "\261\250\006{\227dP\351\n\325\334\t\241\352fT\275\322\361<\322"
 599      9764 50E9 
 599      0AD5 DC09 
 599      A1EA 6654 
 599      BDD2 F13C 
 600 03dc 91BE D146 	 .ascii "\221\276\321F\325\361\266f\243\2327\006\325\032,\205\277\372"
 600      D5F1 B666 
 600      A39A 3706 
 600      D51A 2C85 
 600      BFFA 
 601 03ee 01AB C9E4 	 .ascii "\001\253\311\344\221\364\3671\3249\006\334\300#\243ZU\247U\215"
 601      91F4 F731 
 601      D439 06DC 
 601      C023 A35A 
 601      55A7 558D 
 602 0402 3DAA 1AD7 	 .ascii "=\252\032\327\331E9?\007\355\315\\\264-\277\021\332\241\323X"
 602      D945 393F 
 602      07ED CD5C 
 602      B42D BF11 
 602      DAA1 D358 
 603 0416 87C7 25A0 	 .ascii "\207\307%\240\005\244#\373\321\357\007\371+J\312BU\326\355\250"
 603      05A4 23FB 
 603      D1EF 07F9 
 603      2B4A CA42 
 603      55D6 EDA8 
 604 042a F9E0 5A1E 	 .ascii "\371\340Z\036\341j9\266%5KI\304p\022\371!\273z\f5\266o\013\313"
 604      E16A 39B6 
 604      2535 4B49 
 604      C470 12F9 
 604      21BB 7A0C 
 605 0443 6267 099E 	 .ascii "bg\t\236I\333v\364\275u\255,3\313|\002\216\343\275\206 \231\226"
 605      49DB 76F4 
 605      BD75 AD2C 
 605      33CB 7C02 
 605      8EE3 BD86 
 606 045a DFEC E09D 	 .ascii "\337\354\340\235w\317mm\035\233\241\343"
 606      77CF 6D6D 
 606      1D9B A1E3 
 607 0466 D47D 4F5A 	 .string "\324}OZ\217O\312<9X-\347\331\177d\177\333\223\254\346\274\317g\343\237l\001\267Zw\032\267\335\243'K\215\266\326\316\366\373l\225)1D\331\325rTh(\321\245%\377q\373l[\276,\206\016)\217\331\016:\245\2032;\272~\330\233\257Q\374]\220\276s\310\204\310\003\205F\263\017\244/Te\225\274]o\273\302\234n;\f\324\321\205\227\310\024\337\336\003\361a\320b\2503;\331\327~ 8\f\016\312\273\267\267\333I0|\237\034\370\f\031G\036\034\017P\277\331<\222\274\335\205\266a\365\200\321\365ZM\343K\226i\353w\255G\332\323\3650\325\226ue?\366=\211\177\252L\351\177\365\375\323I#\223M\253\361?8\361\306? \001,$\235:<\200\021\260[\376\300=[\376B\373I\371\260\307\205\034\266\0311\fk\024'\f\3400\224\307\260\230\031\215\231\3511\f135\360\351\356S!V*"
 607      8F4F CA3C 
 607      3958 2DE7 
 607      D97F 647F 
 607      DB93 ACE6 
 608 0567 FA15 8A76 	 .ascii "\372\025\212v\242\324C\215\334\314\351Y\231\023V\346\216\326"
 608      A2D4 438D 
 608      DCCC E959 
 608      9913 56E6 
 608      8ED6 
 609 0579 DA73 528C 	 .ascii "\332sR\214\311\234\210\341\214|N_)y\245\357\253\234\031\235\031"
 609      C99C 88E1 
 609      8C7C 4E5F 
 609      2979 A5EF 
 609      AB9C 199D 
 610 058e 2386 D399 	 .ascii "#\206\323\2311Je\302\n\241\355\001N\330\215\346\247mkF\372gD"
 610      314A 65C2 
GAS LISTING  			page 48


 610      0AA1 ED01 
 610      4ED8 8DE6 
 610      A76D 6B46 
 611 05a5 265D 45B0 	 .ascii "&]E\260=\"\247\331\256\353?f\246YW\3564\233\366?\246\331\220"
 611      3D22 A7D9 
 611      AEEB 3F66 
 611      A659 57EE 
 611      349B F63F 
 612 05bc 4C6D 977C 	 .ascii "Lm\227|\3404k\232}\371\206\246.\350h\234\316\033\204\201\260"
 612      E034 6B9A 
 612      7DF9 86A6 
 612      2EE8 689C 
 612      CE1B 8481 
 613 05d1 9A66 E74E 	 .ascii "\232f\347N\371\263\005\263\307Y\bZ\302w\233f\337'\335\214"
 613      F9B3 05B3 
 613      C759 085A 
 613      C277 9B66 
 613      DF27 DD8C 
 614 05e5 7B68 F438 	 .string "{h\3648{h\342\343\354\254t\274\210t\262\307Y\377/?\242\rk\3218=:\002_\226P\213.\206\267U\303\252\3060\\\212\340]\006\334\320vw\346\347\2145\341\026O|\302\235\227P\226\220\316\250\tw\362\372\325\376\221>\264\323\275d\234@\227\360\257\273s\364o\034\373s\252\222r\262\034\375\007\342\330\273_v\n]\003\347!\277\334!\270.\370\255\353\242?\027X\267\301\235\013\255\333\320!\265\003\b\337\370\334\305\221@r\300q_V\365\334\312\245\225+\232\352_\2156m\254|n\365\262\312\345\033\232\242\225K\237\177fq\345\263\321\365\215\361\332D4\275\251y\274\241\256qC}C\242f\371\206\206D\323\206x\315\232\212\265\340YQ\233\250]\235h\212\326\256\317\253\252\335\230x\252v\355\313\321\304\312W\342\361\"\262W\263\"\372j\375\332\350\352\004\353W-\257\n,{-\021\335\270\252\3016\365\360]"
 614      7B68 E2E3 
 614      ECAC 74BC 
 614      8874 B2C7 
 614      59FF 2F3F 
 615 06e6 5454 64AF 	 .ascii "TTd\257i\367\314U\274\004:{\376\027\037'\206\001"
 615      69F7 CC55 
 615      BC04 3A7B 
 615      FE17 1F27 
 615      8601 
 616               	 .text
 617               	 .section .gnu.lto_Endpoint_Read_Control_Stream_LE.286d6c29995bfbbb,"",@progbits
 618 0000 789C 8D56 	 .ascii "x\234\215V]h\\E\024>g\346\336\275w\357\376f\253!\201@\3224M\322"
 618      5D68 5C45 
 618      143E 67E6 
 618      DEBD 77EF 
 618      FE66 AB21 
 619 001a 4093 3711 	 .ascii "@\2237\021T\244M*\024\362 \215\261\001\225\020\272\033\314e\363"
 619      54A4 4D2A 
 619      14F2 208D 
 619      B101 9510 
 619      BA1B CC65 
 620 002f 435C FAE2 	 .ascii "C\\\372\342Cn\232\004\"E\211\"R\254bK\254\265D\233\006\245\212"
 620      436E 9A04 
 620      2245 8922 
 620      52AC 624B 
 620      ACB5 449B 
 621 0046 919A C42A 	 .ascii "\221\232\304*\211i\242\322\247(\322\210\210\005\013\242O\"\302"
 621      8969 A2D2 
 621      A728 D288 
 621      8805 0BA2 
 621      4F22 C2
 622 0059 7ACE CCBD 	 .ascii "z\316\314\275\233\354\246\304,\354\23193\347\347;\337\314\234"
 622      9BEC A6C4 
 622      2CEC 9939 
 622      33E7 E73B 
 622      DFCC 9C
 623 006c 5D01 024A 	 .ascii "]\001\002J?\277\320\367\202\005\360\016\215\270\017PL\255\003"
 623      3FBF D0F7 
GAS LISTING  			page 49


 623      8205 F00E 
 623      8DB8 0F50 
 623      4CAD 03
 624 007f 8CDA 42C8 	 .ascii "\214\332B\310\311\006\360\034"
 624      C906 F01C 
 625 0087 8365 54A2 	 .string "\203eT\242\241\227\r\214\363\004MQ\266\214\264\035Z\276\005\264\037\362UK\253\226\257\332Z\265EX\251)\255\2460\241b\2041\242FG\217\213vDD\327\277!\013'\266$\311.*\234\355jL\247^\264\343\276\177B\230*\240\223\344\350\321$\226\251\3452D\036\001aDH\303\fYv*\354D\242\261x\"Y\206#\317\"\027-j\341\242\347\275\2669q\373e\323\273\346Mz\371\374H\026\211\235c\b\275\b\317`\0261\251\006Q\302\230v\\\270\376\252\347\341\350\005\357\337|^fQ\nxr\313\321\326\216X\3548+\0266\363\371\317\257L\255c3\302\020'#!!\215\027\261\026\f\1774\201\242\205Y88\204\030!\001q\332\233\246\275\004;\244|\303rV*|\245\222\225*_\251\366\307\032^\334O\241\214Z\026\007X\324\2618\310\242\236E\003'j\344\331!\026M,\b\252\t\343\2367U\243\303"
 625      A197 0D8C 
 625      F304 4D51 
 625      B68C B41D 
 625      5ABE 05B4 
 626 0188 D745 9F93 	 .string "\327E\237\223$'C\320\205\202\006\271\002g6o=\224\306Kh\372\351\\t"
 626      2427 43D0 
 626      8582 06B9 
 626      0267 366F 
 626      3D94 C64B 
 627 01a2 96E1 E66F 	 .string "\226\341\346o\213o?\250\327]\2140\021\346v\026\272P\302\270\224k\260\364\331W\037\2752;k\371\271\202\244\013\253\227\017\003h\377^T\211]\334\177\036\336\034}}4\231\305\020\007\264\356j\242-?\346\032\214\315\177\251\202\245\361=\225\267\226|*\341\234\367\276w\355qrR6K\307\365\356n\261\\U\257\202ip\225"
 627      8B6F 3FA8 
 627      D75D 8C30 
 627      11E6 7616 
 627      BA50 C2B8 
 628 0209 1B50 4E65 	 .string "\033PNeH$!p\003RT\245\274z\256\237\006\241\314L\240+\310\345\254\334-/\3206\255\302\350\"T\3248'\365T\322\027\341\037\272n4\263\206\220Cl/d\005D\032g\024\243\323\212\321\270\317\350|\245^\247\025\2667\212\031\r\301\370*He\370E\177\261\241Ydh\301\315\025\b\270\277\263\266\223\373\217\333\031\366\214\342^h\350\007\366\304\375\235\017#i\274\252\022\327\221\217\312m\003\243\037\277\367\363\245\037b\001\252\272\373\300\267ar\271\200ju'\252\263\327\037\333B%5\252\203{B\265\312\250\346T\342z\362Q\271\215"
 628      4824 2170 
 628      0352 54A5 
 628      BC7A AE9F 
 628      06A1 CC4C 
 629 02b3 D5C4 7919 	 .string "\325\304y\031\240\252\337\201\352$\246\340\273\257\001\2730\f\237\242\272\007\t\027\205MW\240\312\245\322\220\201;\360w<\300}c\356\201R\334/=\272\005\333\320\260\033J`\377Y\n\373\314q\355Av\264.]\224\274\017\376\345lP\225\235\035\373\265\200\274\302\267P\315f\333\365\321\017\262B\331O\216\375\376#\006\016\225.\242z\224\324\267\266\273P\253\240\315\340H\"0\227\344'nC!\226dc^P\226\250I\\\374\251/\b\214%O}\003\350\315$\302$*\235\017\376\bm"
 629      A0AA DF81 
 629      EA24 A6E0 
 629      BBAF 01BB 
 629      300C 9FA2 
 630 034b 1553 C56A 	 .string "\025S\305j\205\363\326\254\242/\n\267\023\001}k\227w\036\373'\317m\361\347\277\243\306\022\376\376*\346\217!\215v\006\210\032\357s\327b|\232\2734\237\033\207\267r\372\315\347\320\336\233\317\274\312\333D>i\274\242\330\324mg\376\177\333NS"
 630      85F3 D6AC 
 630      A22F 0AB7 
 630      1301 7D6B 
 630      9777 1EFB 
 631 0399 300E 8B96 	 .ascii "0\016\213\226\272n5.\226\033D\027\306\350\316U\273\230bE\306"
 631      BA6E 352E 
 631      961B 4417 
 631      C6E8 CE55 
 631      BB98 6245 
 632 03ae 1473 09A0 	 .ascii "\024s\t\240\037\270\222\3631\212\316G\004O\357\215h\320\213\305"
 632      1FB8 92F3 
 632      318A CE47 
 632      044F EF8D 
 632      68D0 8BC5 
 633 03c2 8E03 122E 	 .ascii "\216\003\022.\326\304)\252HQ\n\303\305jV\214\224J\221\204e\224"
 633      D6C4 29AA 
 633      4851 0AC3 
 633      C56A 568C 
 633      944A 9184 
 634 03d8 DFC2 841D 	 .ascii "\337\302\204\035\270\207\013\215\313\356U\035\225a;\324\026\263"
 634      B887 0B8D 
 634      CBEE 551D 
 634      9561 3BD4 
 634      16B3 
 635 03ea F444 7CF0 	 .ascii "\364D|\360e\3343\277\247\177\t\274g\352$&\247\245\337G\363\336"
 635      65DC 33BF 
GAS LISTING  			page 50


 635      A77F 09BC 
 635      67EA 2426 
 635      A7A5 DF47 
 636 0400 8CBA 2252 	 .ascii "\214\272\"RBh<\246f\b\326\2731\212\234D~pH\316\334s\216\266w"
 636      4268 3CA6 
 636      6608 D6BB 
 636      318A 9C44 
 636      7E70 48CE 
 637 0419 3E71 A4A5 	 .ascii ">q\244\245m\270\357tf\370\205\226\316\216\243-\255\203\303\231"
 637      6DB8 EF74 
 637      66F8 8596 
 637      CE8E A32D 
 637      AD83 C399 
 638 042d 9623 4F9F 	 .ascii "\226#O\237x\270\345\251L\377P\266'\227)L\272\217\r\244\207\006"
 638      78B8 E5A9 
 638      4CFF 50B6 
 638      2797 294C 
 638      BA8F 0DA4 
 639 0443 FB06 72DD 	 .ascii "\373\006r\335\255\203\003\271\341\301l\367\211\346S\340\264\365"
 639      AD83 03B9 
 639      E1C1 6CF7 
 639      89E6 53E0 
 639      B4F5 
 640 0455 E47A 3A72 	 .ascii "\344z:r\303\231\236\376}\024\240\273-s\272\357T\246#\307\016"
 640      C399 9EFE 
 640      7D14 A0BB 
 640      2D73 BAEF 
 640      54A6 23C7 
 641 046a EDAD ED8F 	 .ascii "\355\255\355\217\354\222\241\271\271x,\304g\255\371y\370\017"
 641      EC92 A1B9 
 641      B978 2CC4 
 641      67AD F979 
 641      F80F 
 642 047c 1997 03E6 	 .ascii "\031\227\003\346"
 643               	 .text
 644               	 .section .gnu.lto_Endpoint_Read_Control_Stream_BE.286d6c29995bfbbb,"",@progbits
 645 0000 789C 8D56 	 .string "x\234\215Vkh\\E\024>g\346\336\335\273w\037\331\335F\311\003\202I\333\274\232&\376\024T\244M*\024\362C\032c\003*!t7\230\313\346A\\\372\307\037\271i\022\210\024%\212H\261\212\226Xk\2116\r\225*Fj\022\253$\306\304G\177E\221VE,X\020\375%\"\254\347\314\334\273\311nJ\314B\316\2313s\036\337|3sn\004\b(\376\375B\177?\007\001\336$\215{"
 645      6B68 5C45 
 645      143E 67E6 
 645      DEDD BB77 
 645      1FD9 DD46 
 646 007c C5D4 3AC0 	 .ascii "\305\324:\300\250%\204\234\254\003\3276XF$\032z\332\300\030\017"
 646      A825 849C 
 646      AC03 D736 
 646      5846 241A 
 646      7ADA C018 
 647 0091 D014 8965 	 .ascii "\320\024\211e\244\345\300\362W@\353\001\317\fj3\350\231\2266"
 647      A4E5 C0F2 
 647      5740 EB01 
 647      CF0C 6A33 
 647      E899 9636 
 648 00a5 2D11 5266 	 .ascii "-\021RfR\233I,Q9B\030V\332\326z\321\n\213\310"
 648      529B 492C 
 648      5139 4218 
 648      56DA D67A 
 648      D10A 8BC8 
 649 00b9 FA97 E461 	 .string "\372\227\344aG\227$\371E\204\275\325\214\352\322\213V\314\213/\021\246Jh\3079{$\216\t5\235@d\r\b#B\032f h%Cv8\022\215\225\304\0238\362\024\362\246E\r\234s\335\227oM\334x\301t/\273\223n.7\222Ab\347\bB/\302\223\230A\214+%\212\030\323\201\013W_r]\034}\313\3757\227\223\031\224\002\036\333\f\264t \026\006\316\212\205[\271\334'\027\247\326\361~\204!.FBB\n\317a\r\030\2366\201\262\205X\330H\313a\032\211\b\2150\3529\304IO\223Npt\2517Y\306F\205gT\262Q\345\031\325\236\256\341\311\275\224\315\330\307b?\213Z\026u,\352Y4p\325F\036\035`\321\304\202p\2330\356\272S\367\3514\300\233\244\337q\222\223\001\350BAJ\256\301\330\344\330\225\357\314\024\236G\023\034\f;h+\n\210\034r\246\345\323c\003\376b\324\301\b\271"
GAS LISTING  			page 51


 649      4797 24F9 
 649      4584 BDD5 
 649      8CEA D28B 
 649      56CC 8B2F 
 650 01ba AC80 D073 	 .string "\254\200\320s:5\255"
 650      3A35 AD00 
 651 01c2 2CC3 F5DF 	 .string ",\303\365\337\026\337\270\307\367UY\314\255,v\241\204qI\025\227>\376\374\312\213\263\263A\017\236\217sa\365\302A"
 651      16DF B8C7 
 651      F755 59CC 
 651      AD2C 76A1 
 651      8471 4915 
 652 01e8 1DDF 8B0A 	 .ascii "\035\337\213\n\253\203{\317\302k\243\257\214\3063\030\340\204"
 652      AB83 7BCF 
 652      C26B A3AF 
 652      8CC6 3318 
 652      E084 
 653 01fa C1DB FAA0 	 .ascii "\301\333\372\240\202^N\3027\377\231J\226\302wT\335}\024S\016"
 653      825E 4EC2 
 653      37FF 994A 
 653      96C2 7754 
 653      DD7D 1453 
 654 020f 67DC 77DD 	 .ascii "g\334w\335\313\217P\220\362Y:\252Ww\312E\221>L\203\211\001\330"
 654      CB8F 5090 
 654      F259 3AAA 
 654      5777 CA45 
 654      913E 4C83 
 655 0226 8032 DA86 	 .ascii "\2002\332\206D\022\0027\240\224v)/\235\351'%\224\233\tt\205y"
 655      4412 0237 
 655      A094 7629 
 655      2F9D E927 
 655      2594 9B09 
 656 023d 3B2B B7EF 	 .ascii ";+\267\357\3153=\255\230\326\233PY\343\\\324UE\237\203\177\350"
 656      CD33 3DAD 
 656      98D6 9B50 
 656      59E3 5CD4 
 656      5545 9F83 
 657 0253 BAD2 2838 	 .ascii "\272\322(8\204\234b\353F\024\2433\212\321i\305"
 657      849C 62EB 
 657      4614 A333 
 657      8AD1 69C5 
 658 0263 68DC 6374 	 .string "h\334ct\276\\\317\323\f\373\033\205\214\006`|\025\244r\374\264\277\320\321,p\f\302\365\025\360\271\277\271\266\235\373\017\332\031\366\214\342^h\350\373w\305\375\315\367\303)\274\244\n\327R\214\252m\001\243\037\277\363\323\371\357\243>\252\332\273\300\267`r9\217ju;\252\323W\037\336D%5\252\272]\241ZeTs\252p=\305\250\332\206\217j\342\254\364Q\325oCu\034\223\360\315\027\200]\030\202\217P\335\203\204\203\302\242+P\345\320\326\220\201\333\360w\314\307}m\256\264\030\367\363\017m\30264\354\206\"\330\177\026\303>uTG\220\037\315K\007%\257\203w9\033\274\267\370k\036y\205\347\341\275\324-\027H?\311\n\02519\366\373\017\350\207T:\210\352Y\026\205P\177\241E\377P\3020\027\227+p\312\202|.\311\316<\241<Q\323\270\370c\237\237\030\213\036\373\006\320\253I\204HT\332\357\375\021\330"
 658      BE5C CFD3 
 658      0CFB 1B85 
 658      8C06 607C 
 658      15A4 72FC 
 659 0364 DA4E 159B 	 .ascii "\332N\025\233\025\366\353\263\212\300\b\334(\361\t\\\273\260"
 659      15F6 EBB3 
 659      8AC0 08DC 
 659      28F1 095C 
 659      BBB0 
 660 0376 FDE0 3F7C 	 .ascii "\375\340?|z\223A\357%5\0261\370W!\203\fi\264\323G\324x\227\333"
 660      7A93 41EF 
 660      2535 1631 
 660      F857 2183 
 660      0C69 B4D3 
 661 038f 16E5 F3DC 	 .ascii "\026\345\363\334\241\375\\;\270Y\323k?\007v\337~\346U\335&\212"
 661      A1FD 5C3B 
GAS LISTING  			page 52


 661      B859 D36B 
 661      3F07 76DF 
 661      7EE6 55DD 
 662 03a5 49E1 452C 	 .ascii "I\341E,\3177\236\371\377m<M>\300\030,\006\325\205\253q\260\314"
 662      CF37 9EF9 
 662      FF6D 3C4D 
 662      3EC0 182C 
 662      06D5 85AB 
 663 03bc 20BA 304A 	 .ascii " \2720J\267\256\332\301R6dT1W\002\364\211,:\037\243\340|\204"
 663      B7AE DAC1 
 663      5236 6454 
 663      3157 02F4 
 663      892C 3A1F 
 664 03d4 FFF8 5E8D 	 .ascii "\377\370^\215\370\335Xl; \341`M\214\262\212$\2250\034\254f\303"
 664      F8DD 586C 
 664      3B20 E160 
 664      4D8C B28A 
 664      2495 301C 
 665 03eb 48AA 1271 	 .ascii "H\252\022qXF\3715LX~x(\337\272\254^\325S\0316}\n\354\f=\022\017"
 665      5846 F935 
 665      4C58 7E78 
 665      28DF BAAC 
 665      5ED5 5319 
 666 0407 7C82 BBE6 	 .ascii "|\202\273\346\267\364\177\006\257\231\272\210\311e\351\013k\336"
 666      B7F4 7F06 
 666      AF99 BA88 
 666      C965 E90B 
 666      6BDE 
 667 0419 9951 5744 	 .ascii "\231QWDJ\b\214G\325\b!\3706}OBq\344'\207\024\314]\347p{\347\243"
 667      4A08 8C47 
 667      D508 21F8 
 667      367D 4F42 
 667      71E4 2787 
 668 0435 875A DA86 	 .ascii "\207Z\332\206\373N\246\207\237m\351\3548\334\322:8\234n9\364"
 668      FB4E A687 
 668      9F6D E9EC 
 668      38DC D23A 
 668      389C 6E39 
 669 044a C4B1 075A 	 .ascii "\304\261\007Z\036O\367\017ez\262\351\374\240\373\310@jh\260o"
 669      1E4F F70F 
 669      657A B2E9 
 669      FCA0 FBC8 
 669      406A 68B0 
 670 045f 20DB DD3A 	 .ascii " \333\335:8\220\035\036\314t\037k>\001v[O\266\247#;\234\356\351"
 670      3890 1D1E 
 670      CC74 1F6B 
 670      3E01 765B 
 670      4FB6 A723 
 671 0477 DF43 09BA 	 .ascii "\337C\t\272\333\322'\373N\244;\262\034\320\336\332\376\340\016"
 671      DBD2 27FB 
 671      4EA4 3BB2 
 671      1CD0 DEDA 
 671      FEE0 0E
 672 048a 159A 9B0B 	 .ascii "\025\232\233\013u>?[\315\317\300\177\205\226\023\347"
 672      753E 3F5B 
 672      CDCF C07F 
 672      8596 13E7 
GAS LISTING  			page 53


 673               	 .text
 674               	 .section .gnu.lto_Endpoint_Write_Control_PStream_LE.286d6c29995bfbbb,"",@progbits
 675 0000 789C 9557 	 .string "x\234\225W}lT\307\021\237\331\367\336}\177\330\234\017\373.\002\254Pd\300\216\r\001\034J\205Z>\022)\225+\245\245)V\022\311\262\270C\365\345"
 675      7D6C 54C7 
 675      119F D9F7 
 675      DE7D 7FD8 
 675      9C0F FB2E 
 676 0031 CBBE 446A 	 .string "\313\276Dj\373\007\317\034\251\220b$HS\311\"4\nJ\211c9\216\003MjA\215r\006\f8\216i-\202\210I\223@$L?P\325V\215\212\232\252\327\331\331\367\356\313.\\\357\217\331\235\335\371\370\355\314\354\316;\001\002J\177O#@4"
 676      FB07 CF1C 
 676      A990 6224 
 676      4853 C922 
 676      340A 4A89 
 677 0080 F047 9AE3 	 .ascii "\360G\232\343\003\200\342\320e\200\036\227\020\332\201:0=\272"
 677      0380 E2D0 
 677      6580 1E97 
 677      10DA 813A 
 677      303D BA
 678 0093 A43E 0D2B 	 .ascii "\244>\r+\3442\352\302\340U\336\363\031\250)a\207\250\276\204"
 678      E432 EAC2 
 678      E055 DEF3 
 678      19A8 2961 
 678      87A8 BE84 
 679 00a7 B4EC BCF4 	 .ascii "\264\354\274\364!\320\272\323b]\212uY\254[\261n\261\220Y\217"
 679      21D0 BAD3 
 679      625D 8A75 
 679      59AC 5BB1 
 679      6EB1 9059 
 680 00bc 623D C2CB 	 .ascii "b=\302\313lT\261Q\254\22467y\321\257l\373\324d\314\345\027\201"
 680      6C54 B151 
 680      AC94 3637 
 680      79D1 AF6C 
 680      FBD4 64CC 
 681 00d3 CB1F 9088 	 .ascii "\313\037\220\210'xV#\301\200\360\025\262A\205p\314U\241\f`\245"
 681      2778 5623 
 681      C180 F015 
 681      B241 8570 
 681      CC55 A10C 
 682 00e9 7030 D405 	 .ascii "p0\324\005\fu\201p\260}\017"
 682      0C75 8170 
 682      B07D 0F
 683 00f4 FBF6 8544 	 .string "\373\366\205D\365M\351\264j\230\235VYlX\261a\213\215(6\2025\fi\241\032\261F\204x\303\303R\276jD\271\f\b{\205\246\033\016\247\313\355\211z}\376@\260\242rA\250*\034YXS\215{\237A\031l\347\203p\3144_\272\361\302\225\203\206\371\216y\300\314f\367&\221\262\362(\302N\244\\$\021+x\020%\231R\212\231#\207M\023{^3\377\235\315jI\324\004<\221Wt)E\234Wq\264HQ\027\320V\246\342?\277\\n\2463\346\335l\326\231DC@w\231H\263WE\237\271?\223\315~\223\325\322X\236\036\305$\203\207\314\377d\263\3100{\261L\234\247.\034\324\363!\325c\370\006\212\373h\016\213\314\215lvt\340w\327p#B\247\314\003\021\rbx\f\037\004\335\032\r\032_\247\321Ac?\215N \363>\354D\f\320\314\021\244\031T\322\336q\332\013Y\262aK7B\343"
 683      F54D E9B4 
 683      6A98 9D56 
 683      596C 58B1 
 683      618B 8D28 
 684 01f5 8D51 1A07 	 .string "\215Q\032\007i\\d\255/\226\216\226X\006k-\245\2454\016\321\270\314\342\353,\341\345Rx\005\371r\256\224\244^\222\006I\036\222\244Q\222&IVI\262Z\222\207\211\030k\344l\255$\353$i\226\344\021I\326K\262A\032\245\237\001\373M\363P\255\362\244\374\202\f\033\375\266\023\275\345\200V\212\343-\2076\001\373n|\330\034\303\267\321\260p%\320\007@\313\257}\307^\225\3322\320\232T\237\202}\327\357^\371\232\332K`\240\036V\022\252W\340H\217iV$\321\365\023\370\027e\213f\356N\024\374\020\321\224\363\022\317\345\351\022\234\237\355\361\332&\202d%\237\275VrC\270"
 684      695C 64AD 
 684      2F96 8E96 
 684      5806 6B2D 
 684      A5A5 340E 
 685 02ad 6660 03ED 	 .ascii "f`\003\355\351H\304 \022\020\275\177v\314@\230\340\351\347\335"
 685      E948 C420 
 685      1210 BD7F 
 685      76CC 4098 
 685      E0E9 E7DD 
 686 02c1 44A5 AA4F 	 .ascii "D\245\252O\220X\310\302\246\177\344\266f\206\rW\260A\035Nj\032"
 686      9058 C8C2 
GAS LISTING  			page 54


 686      A67F E4B6 
 686      6686 0D57 
 686      B041 1D4E 
 687 02d7 F9BC 3DF6 	 .ascii "\371\274=\366\253\216\234S)a\024\226M+\2613\250M\301\331\323"
 687      AB8E 9C53 
 687      2961 1496 
 687      4D2B B133 
 687      A84D C1D9 
 688 02ec E323 3FEF 	 .ascii "\343#?\357\033vZ1\264\203\231yq\250\001@\351\357D>K\002W\310"
 688      1B76 5A31 
 688      B483 9979 
 688      71A8 0140 
 688      E9EF 443E 
 689 0304 83BF DC43 	 .ascii "\203\277\334C\307\365H\203\336?\250\312\364Z6\247 \375\233sl"
 689      C7F5 4883 
 689      DE3F A8CA 
 689      F45A 36A7 
 689      20FD 9B73 
 690 0319 2C86 27D9 	 .ascii ",\206'\331\357J\322\211@\237\371\246y\203n\220\207e\316>\256"
 690      EF4A D289 
 690      409F F9A6 
 690      7983 6E90 
 690      8765 CE3E 
 691 032e 76EF 658B 	 .ascii "v\357e\2134m\230\016xk\n$\316\211\337\337\275\216\271L\037\347"
 691      346D 980E 
 691      786B 0A24 
 691      CE89 DFDF 
 691      BD8E B94C 
 692 0344 1C2B 7CAC 	 .ascii "\034+|\254P\311Ia{\271\244x;9\213\205\030'@\304p\204\023}"
 692      50C9 4961 
 692      7BB9 A478 
 692      3B39 8B85 
 692      1827 40C4 
 693 035c 9CD3 5FC9 	 .string "\234\323_\311\t\272=6\035Q\353\264\"\345\235\305\301r\302\354$\250\250^\335U,h\024\t\272\340\227\037\200\035\326\317\247\346\206\365\327-\022\366\b\207U(\350\365e\205\365\363!\252\241\323\354\270\201t\330\267\213\313k\377\235\233/|\342\267Q5\314\003\337\r\263\227r\250&\347A5\362\355<*M\241z\250,T\223\022\325\031v\334H:\354[\267Q\215\347Q5\316\203\312\003\203\027s\250\206\347\242\232\034\375z\036\225\256P5\225\205jX\242\312\260\343U\244\303\276\321Fu\374U\315F\265j\016\252\355\030\205/\307\001[\311\344H\356~L\365\317\0017\261\261\340\335\351\267\252qDU\343N\273(W\227\240\375{)\332}\177!\264S\0271\206\347\030\320\303\244\303\357\321_O\312[4\316\205\252\254\333Q\363\301\255\200&5\323\331\372\034\200\001~\370\006-\030\343\266\377HBf\223k\376\"\233\032\340\232\217"
 693      09BA 3D36 
 693      1D51 EBB4 
 693      22E5 9DC5 
 693      C172 C2EC 
 694 045d 5CB6 D7E4 	 .string "\\\266\327\344\335\236&)\252EM}Y-\206\317\360\027f\337\267\222\362i\224V\242`\355\345\004\276\260\004\374\226\233\374\325Rn\006\331M\264`M6\270C/e~v\2536\337\210\003\364&\337\2673\262\031J\303\344\350\340\364\301\364\334\032y\337\210\341\345\202s\357\244\027\203~%\201\377[\361\353\302&\323/\246\217\371\224R\002\027Q\244r\356\031\365xA\217X\304\362\007\322\375\275\017\330\n\213\023\210\374\252\322\267H\241\nu$\332\264\344\007{\033l\371%\tt\260|\211\203~v\260\304\316\256\037\216V\3106\345\202\334\236\203\013\202\027\024\032\315^`_\250\312z\354\253\016\333\025\226\274\3663@\035Ex\211,\366\035=\221\234\001-\201\272d\027\371zOT\315\200\203\352\316;:\354$\030\276\267N\274\203\022G"
 694      DD9E 2629 
 694      AA45 4D7D 
 694      592D 86CF 
 694      F017 66DF 
 695 0540 DE0F D27B 	 .ascii "\336\017\322{\267\177v\354\253\001\264\r\253\003\024\336\227"
 695      B77F 76EC 
 695      AB01 B40D 
 695      AB03 14DE 
 695      97
 696 0551 560C AA6B 	 .ascii "V\f\252k\222\376mz\244\267\336\026\254\265e]\305\207}\235\361"
 696      92FE 6D7A 
 696      A4B7 DE16 
 696      ACB5 655D 
 696      C587 7D9D 
 697 0566 D772 42FF 	 .ascii "\327rB\377W\337\2718f\344si5\2365\3457\236+\f`-\351\304\360="
 697      57DF B938 
 697      66E4 7369 
 697      359E 35E5 
GAS LISTING  			page 55


 697      379E 2B0C 
 698 0580 AE4C D572 	 .ascii "\256L\325r\256\334\267\345\254\265\217T\001\257\270P\206my\002"
 698      AEDC B7E5 
 698      ACB5 8F54 
 698      01AF B850 
 698      866D 7902 
 699 0594 3768 1427 	 .ascii "7h\024'\f\342\f\324%0,\031M2\313\022\030\222Lm\360\355#\027\302"
 699      0CE2 0CD4 
 699      2530 2C19 
 699      4D32 CB12 
 699      1892 4C6D 
 700 05ad 52A9 12E8 	 .ascii "R\251\022\350\003\032\355D\251\203\032\245\231\323\2132'\254"
 700      031A ED44 
 700      A983 1AA5 
 700      99D3 8B32 
 700      27AC 
 701 05bf CC9D 6AB7 	 .ascii "\314\235j\267\373\264\230\2239\221\300\345\0252}Q\362\252'\260"
 701      FBB4 9893 
 701      3991 C0E5 
 701      1532 7D51 
 701      F2AA 27B0 
 702 05d3 4E32 BA64 	 .ascii "N2\272d\214\004.\223\214\021\345\204-\200\003u2awz\276k[3r\237"
 702      8C04 2E93 
 702      8C11 E584 
 702      2D80 0375 
 702      3261 777A 
 703 05ed 31F9 7485 	 .ascii "1\371t\205\340p\204\273i\337\355\217\363\335t\250\264\233.\375"
 703      E070 84BB 
 703      69DF ED8F 
 703      F3DD 74A8 
 703      B49B 2EFD 
 704 0601 3FBA E935 	 .ascii "?\272\3515N\355\020\037p\251\325M\317\374TS\033\2644\317\313"
 704      4EED 101F 
 704      70A9 D54D 
 704      CFFC 5453 
 704      1BB4 34CF 
 705 0616 5F05 1335 	 .ascii "_\005\0235\252\233N_\360\027\013\026\267\3230\354\253\271W7\275"
 705      AA9B 4E5F 
 705      F017 0B16 
 705      B7D3 30EC 
 705      ABB9 5737 
 706 062b 3AE6 96B8 	 .ascii ":\346\226\270\257\025\266\323u\345\267\323\353\354\270\231t\212"
 706      AF15 B6D3 
 706      75E5 B7D3 
 706      EBEC B899 
 706      748A 
 707 063d DBE9 F89F 	 .ascii "\333\351\370\237>F\033V"
 707      3E46 1B56 
 708 0645 F33C 3D22 	 .string "\363<=\"\002g\252\251E,\204W\325s\325\2125\360I\004\357\321`\247\016\273\363\237SV\207}\244\374\016\373)CYO:\005\035\366\374\355\233\343\263\031\264\323\275~\236@W\313\257\313i\372\007*\3759UI9\237V\377J\034G\207\370\245\3205p\276\353\347\031\202\353#\277\265\035\372\307\032k\267\352\345u\326n\370]5\003\250\271\363\236KF\002\311\201\214\373\346\226'\037\333\324\264\265\253\343\371xWw\323\223\33367m\331\323\025o\332\364\203\357\255o\372~|Wg\262=\025\317M\332\036\335\035\353\334\323\261;\325\266e\317\356T\327\236d\333\366\306\035\340\331\332\236j\337\226\352\212\267\357\n\264\264w\247\236h\337\361l<\365\330s\311d\210\354\265m\215?\337\261#\276-%\365[\266\264\0047\377(\025\357~|\267m\312\325\326\326\036\213u\255n\246IW\274\373\271d\352\033\367\200\324\330X<\346"
 708      0267 AAA9 
 708      452C 8457 
 708      D573 D58A 
 708      35F0 4904 
 709 0746 49AE F187 	 .ascii "I\256\361\207\340Kv\356\252]\266\252\241\366)\217\033\264\215"
 709      E04B 76EE 
 709      AA5D B6AA 
 709      A1F6 298F 
GAS LISTING  			page 56


 709      1BB4 8D
 710 0759 5D20 7E0C 	 .ascii "] ~\f\272\304\367_\034\336\260\263"
 710      BAC4 F75F 
 710      1CDE B0B3 
 711               	 .text
 712               	 .section .gnu.lto_Endpoint_Write_Control_PStream_BE.286d6c29995bfbbb,"",@progbits
 713 0000 789C 9557 	 .string "x\234\225WklT\327\021\2369\367\336}?l\326\313zmT\214U\344\202\035\233G @\211R\036\211\224\312\225\322\322\024\253\211dY\354\242z\273\030\313\336Dj\373\203k\226T\226b$HS\311\"4\nJ\251k9\216\003Ij%5\312\232`\036qMk\021DL\332\006*a\372@U\0335*j\252n\347\314\271w_va\273?\346\2349g\036\337\231\231s\346\256"
 713      6B6C 54D7 
 713      119E 39F7 
 713      DE7D 3F6C 
 713      D6CB 7A6D 
 714 0079 01A5 BFA7 	 .string "\001\245\277\247\020\340\351"
 714      10E0 E900 
 715 0081 C09F 688E 	 .ascii "\300\237h\216\265\200\342\310e\200>\227\020Z\177\003\230\036"
 715      B580 E2C8 
 715      6580 3E97 
 715      105A 7F03 
 715      981E 
 716 0093 5D52 9F86 	 .ascii "]R\237\206\025r\031ua\360*\357\371\f\324\224\260CD.\"-"
 716      1572 1975 
 716      61F0 2AEF 
 716      F90C D494 
 716      B043 442E 
 717 00a9 3B2F FE0A 	 .string ";/\376\nh\335i\261.\305\272,\326\255X\267X\312\254G\261\036\341e\266F\2615X)mn\363\242_\331\366\251\311\244\313/\002\227? \021O\360\254F\202\001\341+d\203\n\341\244\253B\031\300J\341`\250K\030\352\022\341`\373\036\366\355\013\211\310M\351\264j\214\235VYlX\261a\213\215*6\212\325\fi\251\032\261Z\204x\303\303R\276\b\242\\\006\204\003B\323\r\207\323\345\366\324x}\376@\260\242rI\250*\034]Z\035\301\003O\243\f\266\263\036N\230\346\0137\236\273r\3300\3370\373\315l\366@\022)+\217\"\354E\312E\022\261\202\007Q\222)\245\2309v\3244\261\357\025\363\337\331\254\226DM\300\023yE\227R\304E\025'\212\024u\001\355e*\376\363\263/\231\351\214y7\233u&\321\020\320[&\322\354U1h\036\312d\263\217\260Z\032\313\323\243\230d\360\210\371\237l\026\031\346"
 717      68DD 69B1 
 717      2EC5 BA2C 
 717      D6AD 58B7 
 717      58CA AC47 
 718 01aa 9689 F39D 	 .string "\226\211\363\235\363\207\365|H\365\030\376\f\305}4\307D\346F6;1\374\233k\370\bB\267\314\003\021\rbx\002\353A\267F\203\306Wit\3208D\243\023\310\274\017I\322O3\021\240\031\006-\331JZq\204\2109IL\330R\214X\233\2654\016\323\270\214\306\021\032\227[\353u\322\353\n\313z\275\245\264\222\306Q\032\033,~\225%\274Z\n7\222\033g\223$\017H\322,I\213$k$Y+\311:I\326K\362 \021c\203\234m\224\344!I6I\262Y\222-\222l\225F\351g\300!\323<R\247<)\277 cH\277\335Do9\240\215\202z\313\241\315@\272?\375\346\247F\f_G\003\022\350O\240\217#L\325E\302\264\375|\272\313\336\f&0@\""
 718      F387 F57C 
 718      48F5 18FE 
 718      0CC5 7D34 
 718      C744 E646 
 719 027e 9740 A835 	 .ascii "\227@\2505\345\200v\344\332\301W\276f\257J\207\322\214\264AF"
 719      E580 76E4 
 719      DAC1 57BE 
 719      66AF 4A87 
 719      D28C B441 
 720 0293 0E5E BF7B 	 .ascii "\016^\277{\345\213\266\225\312FXM\007y\t\216\365\231fE\022]?"
 720      E58B B695 
 720      CA46 584D 
 720      0779 098E 
 720      F599 6645 
 721 02aa 807F 51B6 	 .ascii "\200\177Q\266i\346\356F\301\017\031M9\257\361\\\236/\302\271"
 721      69E6 EE46 
 721      C10F 194D 
 721      39AF F15C 
 721      9E2F C2B9 
 722 02be F93E AF6D 	 .ascii "\371>\257m\302GV\362\331o#7t\024\2009\330J{:\0221\210T\212\201"
 722      C247 56F2 
 722      D96F 2337 
 722      7414 8039 
 722      D84A 7B3A 
 723 02d8 BF38 E620 	 .ascii "\2778\346 B\360\364sn\242|\006Aba\013\233\376\241\333\232\031"
 723      42F0 F473 
 723      6EA2 7C06 
 723      4162 610B 
GAS LISTING  			page 57


 723      9BFE A1DB 
 724 02ee 365C C106 	 .ascii "6\\\301\006u8\255i\344\363\366\344\233\2359\247R\302(,\2736b"
 724      7538 AD69 
 724      E4F3 F6E4 
 724      9B9D 39A7 
 724      52C2 282C 
 725 0305 E790 6278 	 .ascii "\347\220bx\366\335\251\361\037\017\2169\255\260\333\361\317<"
 725      F6DD A9F1 
 725      1F0F 8E39 
 725      ADB0 DBF1 
 725      CF3C 
 726 0317 3FDA 04A0 	 .ascii "?\332\004\240\364\367\"\237%\201\215\362\340/\366\321"
 726      F4F7 229F 
 726      2581 8DF2 
 726      E02F F6D1 
 727 0327 713D D2A0 	 .string "q=\322\240\367\217\252\262\275\226M\212\370/\337gc1<\315~\233H'\n\203\346\317\315\033t\003=,s\366q\265{/[\244i\303t\300k3 q^\372\355\335\353\230+\216\223\\\026\n\037+\2048)l/\227\024o7g\261\020#\247\177\234\023}\222\323\037\342\004\335\236\234\215\252uZ\221\362\316\342`9a~\032TT\257\356+\0264\212\004]\360\323\017\300\016\353'3\013\303\372\213V\t{\234\303*\024\364\007\312\n\353'\243TC\357\262\343f\322a\337..\257Cwn>\367\261\337F\325\274\b|7\314_\314\241\232^\004\325\370W\363\2504\205\252\245,T\323\022\325\031v\274\206t\330\267n\243\232\312\243Z\263\b*\017\214\\\310\241\032[\210jzbs\036\225\256P\255-\013\325\230D\225a\307\353H\207}\243\215\352\344\313\232\215j\335\002T\273\261\006>\233\002l#\223\343\271\37313\264"
 727      F78F AAB2 
 727      BD96 4D8A 
 727      F82F DF67 
 727      6331 3CCD 
 728 0428 DCA5 870B 	 .string "\334\245\207\013\236\252!\253\032\307U5\356\265\213r}\t\332OK\321\036\374+\241\235\271\2001|\237\001=H:\374\036\375\355\264\274ES\\\250\312\272\0355\037\334\nhR3\235m\314\001\030\346\267r\304\2021e\373\257M\310lr\315_`S\303\\\363\265"
 728      9EAA 21AB 
 728      1AC7 5535 
 728      EEB5 8B72 
 728      7D09 DA4F 
 729 047b 97ED 3579 	 .ascii "\227\3555y\267gI\212jQS_f_\200\337\343O\314\301\257$\311\025"
 729      B767 498A 
 729      6A51 535F 
 729      665F 80DF 
 729      E34F CCC1 
 730 0493 5B59 06D6 	 .ascii "[Y\006\326^N\340\017\226\200\337r\223\277Z\312\315\b\273YV\260"
 730      5E4E E00F 
 730      9680 DF72 
 730      93BF 5ACA 
 730      CD08 BB59 
 731 04a9 261B E491 	 .ascii "&\033\344\221\0272?\272U\227o\344\001z\306\357\333Y\331\f\245"
 731      1732 3FBA 
 731      5597 6FE4 
 731      017A C6EF 
 731      DB59 D90C 
 732 04be 617A 6264 	 .ascii "azbd\366pza\215\274G\357\377\345\202s\357\245\027\203~%\201\377"
 732      F670 7A61 
 732      8DBC 47EF 
 732      FFE5 8273 
 732      EFA5 1783 
 733 04d6 7BF1 EBB2 	 .ascii "{\361\353\262\314j\017'|J)\201\313)R\005\315\203qO\025t\211\345"
 733      CC6A 0F27 
 733      7C4A 2981 
 733      CB29 5205 
 733      CD83 714F 
 734 04ee ACD1 9F1E 	 .ascii "\254\321\237\036\032\250\265U\352\022\210\374\256\226\250P\033"
 734      1AA8 B555 
 734      EA12 88FC 
 734      AE96 A850 
 734      1B
 735 04ff A34D 4B7E 	 .ascii "\243MK~d\240\311\226_\221@\007\313c\261\203!v\260\302\316\257"
 735      64A0 C996 
GAS LISTING  			page 58


 735      5F91 4007 
 735      CB63 B183 
 735      2176 B0C2 
 736 0515 1F8E 5768 	 .ascii "\037\216WhT\001.\310\3559\270$xA\241\321\354\005\366\205\252"
 736      5401 2EC8 
 736      ED39 B824 
 736      7841 A1D1 
 736      EC05 F685 
 737 052a B027 3FEF 	 .ascii "\260'?\357\264]a\311{?\007\324S\204\227H\235\357\370\251\344"
 737      B45D 61C9 
 737      7B3F 07D4 
 737      5384 9748 
 737      9DEF F8A9 
 738 053f 1C68 09D4 	 .ascii "\034h\t\324%\273\3347p\252j\016\034Ty\336\2111'\301\360\275v"
 738      25BB DC37 
 738      70AA 6A0E 
 738      1C54 79DE 
 738      8931 27C1 
 739 0556 EA0D 9438 	 .ascii "\352\r\2248\002\360^\220^\274C\363\223\237\017\243mX\035\240"
 739      02F0 5E90 
 739      5EBC 43F3 
 739      939F 0FA3 
 739      6D58 1DA0 
 740 056a F0C6 B451 	 .ascii "\360\306\264Q\003\345\213\222\376uz|\240\321\026\254\267e]\305"
 740      03E5 8B92 
 740      FE75 7A7C 
 740      A0D1 16AC 
 740      B765 5DC5 
 741 057e 877D 95F1 	 .ascii "\207}\225\361\327sJ\377W\347\2710i\344\263i\265\236\r\345\267"
 741      D773 4AFF 
 741      57E7 B930 
 741      69E4 B369 
 741      B59E 0DE5 
 742 0593 9E2B 0C60 	 .ascii "\236+\f`#\351\304\360m\214\202\335t\256\334\267\351l\264\217"
 742      23E9 C4F0 
 742      6D8C 82DD 
 742      74AE DCB7 
 742      E96C B48F 
 743 05a7 5401 2FB9 	 .ascii "T\001/\271P\206mu\002\267j\024'\f\342\034\254J`D2\232d\032\022"
 743      5086 6D75 
 743      02B7 6A14 
 743      270C E21C 
 743      AC4A 6044 
 744 05c0 1896 4C7D 	 .ascii "\030\226L}\360\365c\347\303R\251\022\350\023\034\355D\251\203"
 744      F0F5 63E7 
 744      C352 A912 
 744      E813 1CED 
 744      44A9 83
 745 05d3 1AA5 99D3 	 .ascii "\032\245\231\323\2132'\254\314\275\323awj\261 s\"\201\253+d\372"
 745      8B32 27AC 
 745      CCBD D361 
 745      776A B120 
 745      7322 81AB 
 746 05ea 6AC8 AB9E 	 .ascii "j\310\253\236\300U\222\321%c$\260A2F\r'l\t\3647\310\204\335\351"
 746      C055 92D1 
 746      2563 24B0 
 746      4132 460D 
GAS LISTING  			page 59


 746      276C 09F4 
 747 0603 FBBA 6DCD 	 .ascii "\373\272m\315\310}\310\344\323\025\202\243Q\356\247\203\267?"
 747      C87D C8E4 
 747      D315 82A3 
 747      51EE A783 
 747      B73F 
 748 0615 CAF7 D3D1 	 .ascii "\312\367\323\321\322~\272\362\377\350\247\3278\265\243|\300\225"
 748      D27E BAF2 
 748      FFE8 A7D7 
 748      38B5 A37C 
 748      C095 
 749 0627 563F 3DF3 	 .ascii "V?=\363CMm\320\322\"o\177\025\\\252V\375t\366\274\277X\260\270"
 749      434D 6DD0 
 749      D222 6F7F 
 749      155C AA56 
 749      FD74 F6BC 
 750 063f A186 E160 	 .ascii "\241\206\341`\365\275\372\351\325I\267\304}\255\260\241>T~C\275"
 750      F5BD FAE9 
 750      D549 B7C4 
 750      7DAD B0A1 
 750      3E54 7E43 
 751 0654 CE8E 3791 	 .ascii "\316\2167\221NqC\235\372\363Gh\303\332\264H\227\210\302\231\b"
 751      4E71 439D 
 751      FAF3 4768 
 751      C3DA B448 
 751      9788 C299 
 752 0669 3589 A5F0 	 .ascii "5\211\245\360\262z\260\332\260\032>\216\342=Z\354\314Qw\376\203"
 752      B27A B0DA 
 752      B01A 3E8E 
 752      E23D 5AEC 
 752      CC51 77FE 
 753 067e CAEA B19B 	 .ascii "\312\352\261\233\313\357\261\277c([H\247\240\307\236\273}sj>"
 753      CBEF B1BF 
 753      6328 5B48 
 753      A7A0 C79E 
 753      BB7D 736A 
 754 0693 8376 BAB7 	 .ascii "\203v\272\267,\022\350\210\374\276\234\245\377\260\322\237S\225"
 754      2C12 E888 
 754      FCBE 9CA5 
 754      FFB0 D29F 
 754      5395 
 755 06a5 94F3 29F5 	 .ascii "\224\363)\365\277\306q|\224_\n]\003\347[~\236!\270>\364[\333"
 755      BFC6 717C 
 755      945F 0A5D 
 755      03E7 5B7E 
 755      9E21 B83E 
 756 06bc A17F ACB7 	 .ascii "\241\177\254\267v\253^\334`\355\206\337R3\200\352;o\273d$\220"
 756      76AB 5EDC 
 756      60ED 86DF 
 756      5233 80EA 
 756      3B6F BB64 
 757 06d2 1CC8 B86F 	 .ascii "\034\310\270oo}\362\261m-;{:\237\215\367\364\266<\271k{\313\216"
 757      6F7D F2B1 
 757      6D2D 3B7B 
 757      3A9F 8DF7 
 757      F4B6 3CB9 
 758 06ea FD3D F196 	 .ascii "\375=\361\226m\337\372\306\246\226o\306\367u';R\361\334\244\375"
GAS LISTING  			page 60


 758      6DDF FAC6 
 758      A696 6FC6 
 758      F775 273B 
 758      52F1 DCA4 
 759 06ff D1AE 58F7 	 .ascii "\321\256X\367\376\316\256T\373\216\375]\251\236\375\311\366\335"
 759      FECE AE54 
 759      FB8E FD5D 
 759      A99E FDC9 
 759      F6DD 
 760 0711 CD7B C0B3 	 .ascii "\315{\300\263\263#\325\261+\325\023\357\330\027h\355\350M=\321"
 760      B323 D5B1 
 760      2BD5 13EF 
 760      D817 68ED 
 760      E84D 3DD1 
 761 0725 B1E7 BBF1 	 .ascii "\261\347\273\361\324c\317$\223!\262\327\2763\376l\347\236\370"
 761      D463 CF24 
 761      9321 B2D7 
 761      BE33 FE6C 
 761      E79E F8
 762 0738 AE94 D46F 	 .ascii "\256\224\324o\335\321\032\334\376\275T\274\367\361.\333\224\253"
 762      DDD1 1ADC 
 762      FEBD 54BC 
 762      F7F1 2EDB 
 762      94AB 
 763 074a BDBD 2316 	 .ascii "\275\275#\026\353Y\273\221&=\361\336g\222\251/\337\003Rss\361"
 763      EB59 BB91 
 763      263D F1DE 
 763      6792 A92F 
 763      DF03 5273 
 764 0760 9803 24B9 	 .ascii "\230\003$\271\346\357\200/\331\275\257n\345\232\246\272o{\334"
 764      E6EF 802F 
 764      D9BD AF6E 
 764      E59A A6BA 
 764      6F7B DC
 765 0773 A03D DC03 	 .ascii "\240=\334\003\342\373\240K|\377\005;B\301G"
 765      E2FB A04B 
 765      7CFF 053B 
 765      42C1 47
 766               	 .text
 767               	 .section .gnu.lto_Endpoint_Write_Control_EStream_LE.286d6c29995bfbbb,"",@progbits
 768 0000 789C 9557 	 .string "x\234\225WklTU\020\2369\367\336}ow\351n\037[\236i\b\005\n-o4j\f\317\004S\023\024\221&\2324\r\273\304\256\013m\332\225\304\370\203[\n\206\204\222"
 768      6B6C 5455 
 768      109E 39F7 
 768      DE7D 6F77 
 768      E96E 1F5B 
 769 0038 F283 00   	 .string "\362\203"
 770 003b 2120 D65A 	 .string "! \326Zy\224\227\020\264\204.\264\320R\226G\200H\301\204\362\203b\224\0305\030\211\220\254s\316\271w\267\273\255P\373c\316\231s\346\361\235\231\2713[\006\f2\377>@\200qn\200\013\264\307\221\200l\353U\200z\033c\312\246\"\320\035*\247.\005\275\374\030U\246\211Sq\347\322P\221\302\026\226\337\205tl\355\272\002tn5X\233dm\006k\227\254\235\345\n\326!Y\007s\n\266@\262\0058Bxr\242[\332v\311M\314\346fYW/\223\210\303s^!\301,\346\032\310z$\302\230\315k\030\030\301,\002j\266\200\232\315,\302\276C\370v\371X\376\003\356\324\337*\234\372\r6G\2629\006\033\220l"
 770      7994 9710 
 770      B484 2EB4 
 770      D052 9647 
 770      8048 C184 
 771 00ff F384 C55C 	 .ascii "\363\204\305\\c\315c>q\341\020R\256|D~\f\b\353\230\242j\026\253"
 771      63CD 633E 
 771      71E1 1052 
 771      AE7C 447E 
 771      0C08 EB98 
 772 0117 CDEE 2870 	 .ascii "\315\356(p\272\334Y\036\357\210l\237?'\220\233\227\217\353>D"
GAS LISTING  			page 61


 772      BADC 591E 
 772      EF88 6C9F 
 772      3F27 909B 
 772      978F EB3E 
 773 012c 1E6C AD10 	 .ascii "\036l\255\020\366\353\372\366\276"
 773      F6EB FAF6 
 773      BE
 774 0135 8D37 B768 	 .string "\2157\267h\372Q}\223\236H\254\213 ee\021\302*\244\\D\020\275ba\031\231\222\212\355\273\266\351:\326\357\323\237'\022J\004\025\006KS\2126\251\210C*\266\245)\252\f*\206\251\370\367_\023\365\206v\375i\"a\215\240\306\240n\230H\317\\\334\242\246\236\250\006\361kd/\361\330\312\332\373\022\211\266\226\353?\342\353\b5<.D\024\b\342~,\004\325X5Z\017\320j\241\265\231V+\220y\027\326 zhg\361\322\016\262\351\256\211\356|\206\254\337\320\315\345\006\013H\314:\3128\031\315O\306\030\246\306\032\342\205\264\266\320:\336\340'\030\302E\\x\"W\237\304\311dN\2129\231\302\311TNJ8)\345d\032'\323\211h3\370n&'\2638\231\315\311\034N\346r\302\313\0026\350\372\326q\322\211t\t<V\364\267\202\350C\013\224S\360\036Z\224nX\337weN\020\277E\315\200\024F\027"
 774      FA51 7D93 
 774      9E48 AC8B 
 774      2065 6511 
 774      C22A A45C 
 775 0236 1DEF 7BDB 	 .string "\035\357{\333<\345\332<\272\nW\217\303\372\273Oo\216\227wa\364\024\303d\002\264\033v\325\353\2727\202\266\317\340\037J\021\355\3545\310D7\240\255HF(\231\234.\350\350\257w\232&\274d%\225\262rrC\270"
 775      3CE5 DA3C 
 775      BA0A 578F 
 775      C3FA BB4F 
 775      6F8E 9777 
 776 027c 7A21 97EE 	 .string "z!\227\356T$\242\021\361\260\306_-\275\340'xj\207\235(Wu1\022\363\031\330\324[vc\247\231p\2310\250\302qE!\237\217b'\252\222N\271\2046\260V\312\211\355E%\016\347\277\357l\335\261\263\325j\304\320\ff\373\346\303S"
 776      5424 A211 
 776      F1B0 C65F 
 776      2DBD E027 
 776      786A 879D 
 777 02ca A4FE 2A14 	 .string "\244\376*\024o\t\343D\376\360\035\365\364\\\0077\350\374Y\226\243\323\260\031\207\206\037.\bcA<\"\374N\"\235"
 777      6F09 E344 
 777      FEF0 1DF5 
 777      F45C 0737 
 777      E8FC 5996 
 778 02f0 ECD4 BFD1 	 .string "\354\324\277\321\373\336$%!s~\211\274}\221-\3224aZ\340P\0348\316\356\237\236\336\305d\246\233D\216%>\241\220-\222\"\354%\223\342\254\021Y\034\210\261\033X\020O\210D7\211\364g\213\004=\212\335\b\310s:\341\362\326\364`Y\241\277\007dTo\257N\027\324\322\004m\360\325e0\303z?>8\254\247\3128\354\023\"\254LB\237<\254\260\336?L5tJ8.&\035\341\333&\312k\303\343\007\033\357\271MT\305C\300\267C\177W\022U\317\020\250N\277\225B\245HTS\206\205\252\207\243:#\034O%\035\341[5Qu\246PM\035\002\225\003\016^J\242j\035\214\252\247\355\325\024*U\242*\031\026\252V\216\252M8.%\035\341\033MTM{\025\023U\351 T+\260"
 778      FBDE 2425 
 778      2173 7E89 
 778      BC7D 912D 
 778      D234 615A 
 779 03cd 9E74 0296 	 .ascii "\236t\002\226\223\311\323\311\357#\336<\b\\\367\033\003\372N"
 779      93C9 D3C9 
 779      EF23 DE3C 
 779      085C F71B 
 779      03FA 4E
 780 03e0 B351 8D27 	 .ascii "\263Q\215'd5\2562\213rZ\006\332?3\321\256\377\215\320\306/a\020"
 780      6435 AE32 
 780      8B72 5A06 
 780      DA3F 33D1 
 780      AEFF 8DD0 
 781 03f8 CF09 40D3 	 .ascii "\317\t@\323IG\364\243\337\217\363\257(&\nUZ7\243\346\202\207"
 781      4947 F4A3 
 781      DF8F F3AF 
 781      2826 0A55 
 781      5A37 A3E6 
 782 040e 59CA 35D8 	 .ascii "Y\3125\330\320\227pH"
 782      D097 7048 
 783 0416 8130 1624 	 .string "\2010\026$+\336\265\212>\030\351\233\306\224\333\250w.\305\307\312\326\355\355_<\034\227\032GY\f\316\341\313\346\030\231\027\237m\317\363/oli\030\234\244sZ\020;\214\367\307D\252D@3^\376G\372\347-L6ln\330\3572\3370\212\020'\335'Q\233Mz\224\220\337\324\320\3348\322T\030\035F\024m\215&\362@\025\0321ti\310\037l\234b\312\217\t\243E\310g8h\026\016\306\230\341u\303\036/\237\0236H\336YDF\304\201D\243\230\007\302\027\312\272\212=\2532]aF\273\355\005j\351\314Id\264k\317\261H/(aT9;\312\325x\314\337\013\026J\274\263\255\325J0\\\207\216\035E\216#\013\316y\250\341l\350\217=kA\323\260|\300\300\202-\247i\"\352\264\341Z\303\351\306bSp\254)kK\177\354\001\201\177\254H\350\1775\376K1-\225K\243\363\317\030~\347\357\026"
 783      2BDE B58A 
 783      3E18 E99B 
 783      C694 DBA8 
 783      772E C5C7 
 784 0517 6692 4E10 	 .string "f\222N\020\217a"
 784      8F61 00
 785 051e CC9E DFFD 	 .string "\314\236\337\375\322\236?\323|\222\027v\333\220\207\255(\214\271\n\305\t=\330\013\023\302\350\347\214\302\231\361a\364qf\254\347\310\256\2139\\i\004\320\317H4\023%\037\252efNM\313\03432w\246\322\034\224lP\346X\030\213\274<}\005\344U\r\343\004\316\250\234\321\3028\2363Z\201HX6l*\342\t{\\\377\216iMK\376\216H\245\313\007\333\002b\234\355|t'5\316Z2\307Y\341\377\030gq\221\332\026\361\300Bc\234\235\375\\\221\027t4D\353\365Cw\276\034g7.\272\323\005\323\347Y\016\254\317\177\3218\273\035\263s\334\361\201\363l\326\360\347\331u\341x6\351\244\317\263\316_\356\240\tk\366\020M:"
GAS LISTING  			page 62


 785      D29E 3FD3 
 785      7C92 1776 
 785      DB90 87AD 
 785      288C B90A 
 786 05e6 67F3 A847 	 .string "g\363\250G\347\302^\331\256\3121\017\356\005\360\005\023.\276\315\236\372=c\214\2709\303\037q7\005\224\271\2443`\304u<z\320\331\337\216f\272\347\016\021\350|\376\363\356\006\375\037\306\375YeIY\271\034\375\013a\331sXt\nU\001\353I\267\330!\330n\271\215k\337\223\231\306\255\177\307l\3436\347\244\334\001\344=\376\316\306#\201\344\200\307}~\331\362\305\363J\027\326V\255\r\325\326\225._6\277tAum\250t\336\373\357\276R\372^huM\2442\032Jn*\026\255\t\326TW\255\211V,\250^\023\255\255\216T\254(Y\t\216\205\225\321\312e\321\332P\345\352\254\262\312\272\350\322\312\225\037\207\242\213?\211D|d\257bahm\325\312\320\262(\327/[P\346\231\377i4T\267d\215i\352\265\027"
 786      E7C2 5ED9 
 786      AECA 310F 
 786      EE05 F005 
 786      132E BECD 
 787 06ca 2829 495F 	 .ascii "()I_\223\3569W\362\021\250\334\363\277\323Wv\216"
 787      93EE 3957 
 787      F211 A8DC 
 787      F3BF D357 
 787      768E 
 788               	 .text
 789               	 .section .gnu.lto_Endpoint_Write_Control_EStream_BE.286d6c29995bfbbb,"",@progbits
 790 0000 789C 9557 	 .ascii "x\234\225WklTU\020\2369\367\336}?J\273\333\356V\002\305\020\344"
 790      6B6C 5455 
 790      109E 39F7 
 790      DE7D 3F4A 
 790      BBDB EE56 
 791 0018 D98A 8840 	 .ascii "\331\212\210@\214\032y\230hj\202\242\322D\223\246\322%v]JSV\023"
 791      8C1A 7998 
 791      686A 82A2 
 791      D244 93A6 
 791      D225 765D 
 792 0030 E30F 6E29 	 .ascii "\343\017n)\232&\226\004\224\037\004\211\021\025kU\250X\225\240"
 792      9A26 9604 
 792      941F 0489 
 792      1115 6B55 
 792      A858 95A0 
 793 0044 2574 8102 	 .ascii "%t\201\002\245\026%h\264j\"\374\240\030%F\215F\242&\353\2349"
 793      A516 2568 
 793      B46A 22FC 
 793      A018 2546 
 793      8D46 A226 
 794 005b F7EC 76B7 	 .ascii "\367\354v\267\025j\177\3149s\316<\27633wf+@@\361\337\243\b\360"
 794      156A 7FCC 
 794      3973 CE3C 
 794      BE33 3377 
 794      662B 4040 
 795 0074 7810 E038 	 .ascii "x\020\3408\355\361\006@\261\375,@\233G\b\243\343&\260}\246\244"
 795      EDF1 0640 
 795      B1FD 2C40 
 795      9B47 08A3 
 795      E326 B07D 
 796 008a 0103 4BE4 	 .ascii "\001\003K\3441\232\302\342S\276\013Xh(a\227\210\235F:v\237\376"
 796      319A C2E2 
 796      53BE 0B58 
 796      6828 6197 
 796      889D 463A 
 797 00a1 14E8 DCED 	 .ascii "\024\350\334\355\260\036\305z\034\326\253X\257(g\326\247X\237"
 797      B01E C57A 
 797      1CD6 AB58 
 797      AF28 67D6 
 797      A758 9F
 798 00b4 F033 5BA9 	 .ascii "\3603[\251\330J\234\302\236\374\030T\266\003j\223\361\004E\350"
GAS LISTING  			page 63


 798      D84A 9CC2 
 798      9EFC 1854 
 798      B603 6A93 
 798      F104 45E8 
 799 00c8 EC19 12F1 	 .ascii "\354\031\022\361\205\217\031$\030\022\201\261lX!\314xJ\034\003"
 799      858F 1924 
 799      1812 81B1 
 799      6C58 21CC 
 799      784A 1C03 
 800 00dc 5384 8BA1 	 .ascii "S\204\213\241\2262\324R\341b\373>\366\035(\023\261\213\322i\244"
 800      9632 D452 
 800      E162 FB3E 
 800      F61D 2813 
 800      B18B D269 
 801 00f1 879D 461C 	 .ascii "\207\235F\0346\252\330\250\303\306\025\033\307\n\266X\356\254"
 801      36AA D8A8 
 801      C3C6 151B 
 801      C70A B658 
 801      EEAC 
 802 0103 15A2 8C2F 	 .ascii "\025\242\214/|,\025\210!\312c@\330,\f\323r\271=^_\245?\020\f"
 802      7C2C 1588 
 802      21CA 6340 
 802      D82C 0CD3 
 802      72B9 3D5E 
 803 011c 854B A694 	 .ascii "\205K\246\224\226E\242\361\362\212\030n~\fe\260\255\033a\257"
 803      9645 A2F1 
 803      F28A 186E 
 803      7E0C 65B0 
 803      AD1B 61AF 
 804 0130 6DBF 78E1 	 .ascii "m\277x\341\271\363\333,\373=\273\303\316f7\247\220\262\262\n"
 804      B9F3 DB2C 
 804      FB3D BBC3 
 804      CE66 37A7 
 804      90B2 B20A 
 805 0144 613D 522E 	 .ascii "a=R.R\210%\274\210"
 805      5288 25BC 
 805      88
 806 014d A24C 29C5 	 .string "\242L)\305\376\335;l\033\333^\265\377\311f\215\024\032\002V\347\025=J\021'T\354+P4\005\324OR\361\317?f\333\355\375\366\325l\326\235BK\300\246I\"=|r\233\231\177\242\331\210o\242\270\216\307\036\321\177!\233\355\353\376\374+\274\023\241E\306\205\210\001\215\270\027o\004\323Y-Z_\247\325Ek\027\255n \363\001$\311 \355D\210v\030vdK\351\304\025!f\0371QG\261\334\271\214I\353SI\302=\3159\231.O\252\034\2733\034\361\231\264v\323:\313\341g;\302s\244\360\\\251>O\222\371\222,\220\244Z\222\032In\226d\241$\267H\262\210\210u\253\334-\226\3446I\226H\262T\222e\222\310\032\201\255\266\275\275J9Q.A\006\216\376\326\022\275\344\202:\212\344%\2271\f\355\035\355\275\277Y\215\3706Z\220\304`\022\003\034VJ1\t\323\365\013\355\315\3722\234\304\020\211"
 806      FEDD 3B6C 
 806      1BDB 5EB5 
 806      FFC9 668D 
 806      141A 0256 
 807 024e 0C82 5067 	 .string "\f\202Pg\312\001\335\310\263-\257\336\257O\245CiF\332 #[\276\271z~\246\266R:\017\346\322\033^\206\335m\266]\222B\317\263\360\027\245\230v\336\026\024\334Mh\313\311L\344\222{\032N\214\266\371\265\211"
 807      CA01 DDC8 
 807      B32D AFDE 
 807      AF4F A543 
 807      6946 DA20 
 808 0293 59C9 A7BC 	 .string "Y\311\247\274\216\334\320S"
 808      8EDC D053 
 808      00
 809 029c 4620 4677 	 .ascii "F Fw&\022\261\210\224\212\316\237\\#PN\360\314\023^\242\374\006"
 809      2612 B188 
 809      948A CE9F 
 809      5C23 504E 
 809      F0CC 135E 
 810 02b3 4162 5107 	 .ascii "AbQ\007\233\371\205\327\331Y\032\256`\203&\274o\030\344\363r"
 810      9BF9 85D7 
GAS LISTING  			page 64


 810      D959 1AAE 
 810      6083 26BC 
 810      6F18 E4F3 
 811 02c8 A6B7 29E7 	 .ascii "\246\267)\347TJXck\255\216\330\021\244\030\036\373x\240g\347"
 811      544A 5863 
 811      6BAD 8ED8 
 811      11A4 181E 
 811      FB78 A067 
 812 02dd AE1E B713 	 .ascii "\256\036\267\023v\035\377\376\027\366\317\007P\372"
 812      761D FFFE 
 812      17F6 CF07 
 812      50FA 
 813 02eb EB91 DF92 	 .string "\353\221\337\222\304\271\362\341;\333\350\271>i\320\377\203*g\277c\223\"\376\311q6\326\210\007\330\357<\322\211\303.\373-\373\302]\244\3042\307\356U\267\327\262E\232\032\246\013\336\035\006\211s\360\273\253\337`\2568\366qY(|\254\020\341\244\260\275\\R\374-\234\305\261\0309\375\275\234\350}\234\376\b'\350r\346\\\\\235\323\211\224w\027\006\313\r\243C\240\242\372\345\206BA\253@\320\003o\234\001\035\326\357\207\307\207\365\243Z\t\273\227\303*\024\364\371\223\n\353\367\373\251\206>b\307\013H\207}{\270\274\266^\271\370\334\267A\215j\301\004\360\2750z:\207jh\002T\207\356\313\2432\024\252\352I\241\032\222\250\016\263\343\032\322a\337\246F5\220GU3\001*\037\274s*\207\252g<\252\241\276eyT\246Bu\363\244P\365HT}\354x!\351\260o\324\250\366\275bhT\013\307\241Z\213\225\360\373"
 813      C4B9 F2E1 
 813      3BDB E8B9 
 813      3E69 D0FF 
 813      832A 67BF 
 814 03ec 601D 993C 	 .string "`\035\231<\224\373>\206\273\306\201\033\274cL\253\352r\252\261WU\343z]\224\267\024\241\375\255\030\355\226\237\t\355\360)l\304\243\fh\021\351p?\372\345}\371\025e\270P\225u\035\265"
 814      94FB 3E86 
 814      BBC6 811B 
 814      BC63 4CAB 
 814      EA72 AAB1 
 815 0429 5C0A 199F 	 .string "\\\n\031\237\301\326\013Y\237\022H\342\324\\\305\007\326\323\007\243|\323\230\323\355NJ\311\261\264\375\305\376\227.U\345\307YH\300Q\274\336\034$\363\374\331\016\375\363\332\271m\355\343\223t\224\032\360\t\347\375\031N\025\007\264\350\345\277\026~\336S\235\376\2747\240\3370\215\020\217\351\3369\334\272MOc\215\216\366\256\316\033\264\312\364$\"7\266\"\025\232Kt\351\310\277\3239_\313W%\321\305\362X\350\240\213\035T\351"
 815      C1D6 0B59 
 815      9F12 48E2 
 815      D45C C507 
 815      D6D3 07A3 
 816 04ae 0761 4F89 	 .string "\007aO\211A)\360@\356\316\3059\341\003\205\306\320\007\354\013Uee\376n\322\256\260\250\341\216"
 816      4129 F040 
 816      EECE C539 
 816      E103 85C6 
 816      D007 EC0B 
 817 04ce 3575 E127 	 .ascii "5u\341'2=\260\347`j\004\214$\232\222\235\026\350<\030\031\001"
 817      323D B0E7 
 817      606A 048C 
 817      249A 929D 
 817      16E8 3C18 
 818 04e4 17A5 DEDF 	 .ascii "\027\245\336\337\327\343&\030\201w\017\276\207\022G\b\216\206"
 818      D7E3 2618 
 818      8177 0FBE 
 818      8712 4708 
 818      8E86 
 819 04f6 A9E5 6C1D 	 .ascii "\251\345l\035\315\374\335\215\332\260z\300\330\222\255\243\t"
 819      CDFC DD8D 
 819      DAB0 7AC0 
 819      D892 ADA3 
 819      09
 820 0507 C695 DAFE 	 .ascii "\306\225\332\376Y\373\241\316yZp\206\226\365\024>\366u\306?\203"
 820      59FB A1CE 
 820      795A 7086 
 820      96F5 143E 
 820      F675 C63F 
 821 051c 53FA 5FAD 	 .ascii "S\372_\255\377T\306\312g\323\351\375\267N\276\367\0172\200\305"
 821      FF54 C6CA 
 821      67D3 E9FD 
 821      B74E BEF7 
 821      0F32 80C5 
GAS LISTING  			page 65


 822 0530 A4D3 8807 	 .ascii "\244\323\210\0071\016\272\353\017^\267\353/\326O*\201\227=(\303"
 822      310E BAEB 
 822      0F5E B7EB 
 822      2FD6 4F2A 
 822      8197 3D28 
 823 0545 3627 8931 	 .ascii "6'\2111"
 824 0549 83E2 8461 	 .string "\203\342\204a\034\201\331I,\227\214!\231YI\214JfF\370\300\356\223Q\2514\005\350\207(\352D\251\207Z\305\2313\0132'\234\314\035n\320\243R\214\313\234H\342\234\022\231\276J\362j&q\266dL\311XI\234%\031\253\222\023V\n\0357\311\204]i{@[\263r\277$\362\351*\203\035q\036h\273.\177\235\037h\335\305\003m\346\377\030h\303\234\332n~\340Lg\240\035y\336P\027t4A\363\215\300`L\r\264s'\203\205\202\205\023-\n[b\327\032h_f\274\022\367\360\330\211v\333\344'\332\347\354x\t\351\024N\264\201\037\277F\rk\311\004m:\016G*\250K\227\303+\252a\325a\005|\033\307k\314\270\341\035\336\374/\032g\310-\235\374\220;\317P\226\221\316\230!w\342\362\305\201\321~\324\351^6A\240c\362\007\3369\372ON\372s\253\222rK9\372'\304\265g?w\n\323"
 824      1C81 D949 
 824      2C97 8C21 
 824      9959 498C 
 824      4A66 46F8 
 825 064a F707 41DE 	 .string "\367\007A\336!x\276\b:\327e\277/rn#;\027;\267\321\017\324\016\240\342\312\207\036\031\t$\0072\356\313k\037\276\347\356\232\225\255MO'Z7\325<\274fy\315\212\215\255\211\232\273\037ypi\315C\211\r-\251\206t\"\267\251_\325\334\330\262\261\2519]\277bcs\272uc\252~m\365:\360\255lH7\254I\267&\0326\204j\0336\245W7\254{2\221\276\347\251T\252\214\354\325\257L<\335\264.\261&-\365kW\324\206\227?\223Nl\272\267Y\233\272\375\032"
 825      2178 BE08 
 825      3AD7 65BF 
 825      2F72 6E23 
 825      3B17 3BB7 
 826 06e4 AAAB 0BD7 	 .ascii "\252\253\013\327\234{\311U?\001\246\364\374/H\331\207\013"
 826      9C7B C955 
 826      3F01 A6F4 
 826      FC2F 48D9 
 826      870B 
 827               	 .text
 828               	 .section .gnu.lto_Endpoint_Read_Control_EStream_LE.286d6c29995bfbbb,"",@progbits
 829 0000 789C 8D56 	 .ascii "x\234\215VoHdU\024?\347\336\367\346\275y\363\327\331\022\005"
 829      6F48 6455 
 829      143F E7DE 
 829      F7E6 BD79 
 829      F3D7 D912 
 830 0015 41D7 75D5 	 .ascii "A\327u\325\025V\277EP\021\273\272A\340\207X\263\025*DvF\3621"
 830      1556 BF45 
 830      5011 BBBA 
 830      41E0 8758 
 830      B315 2A44 
 831 002d FEC1 86FD 	 .ascii "\376\301\206\375\322\007\237\251`,\205E\304\322\026\265\230m"
 831      D207 9FA9 
 831      602C 8545 
 831      C4D2 16B5 
 831      986D 
 832 003f 8BB5 AE14 	 .ascii "\213\265\256\024[dlj[h\256n\261\237,b\215\210\026Z\210\372\024"
 832      5B64 6C6A 
 832      5B68 AE6E 
 832      B19F 2C62 
 832      8D88 165A 
 833 0056 114C E7DC 	 .ascii "\021L\347\334\373\336\350\214\21390\347\276s\357\371\363;\277"
 833      FBDE E88C 
 833      8B39 30E7 
 833      BE73 EFF9 
 833      F33B BF
 834 0069 77EE 9911 	 .ascii "w\356\231\021 \240\364\363\013}g,\200wh\305\003\200bj\003`\324"
 834      20A0 F4F3 
 834      0B7D 672C 
 834      8077 68C5 
 834      0380 626A 
 835 0080 1642 4E36 	 .ascii "\026BN6\200\347\030,\243\022\r\275m`\234\037\320\024e+H\307\241"
 835      80E7 182C 
 835      A312 0DBD 
 835      6D60 9C1F 
GAS LISTING  			page 66


 835      D014 652B 
 836 0097 951B 40E7 	 .ascii "\225\033@\347!_\265\264j\371\252\255U[\204\225\232\322j\n\023"
 836      215F B5B4 
 836      6AF9 AAAD 
 836      555B 8495 
 836      9AD2 6A0A 
 837 00ac 2A46 1823 	 .ascii "*F\030#ju\364\272dGDt\343[\262pb\313\222\354\242\302\331\251"
 837      6A75 F4BA 
 837      6447 4474 
 837      E35B B270 
 837      62CB 92EC 
 838 00c4 C674 EA25 	 .ascii "\306t\352%;"
 838      3B
 839 00c9 EEFB 2784 	 .string "\356\373'\204\251\002:I\216\036Mb\231\332.C\344\025\020F\2044\314\220e\247\302N$\032\213'\222e8\362\fr\321\242\026.x\336k[\023\267^6\275+\336\244\227\317\217d\221\3309\201\320\213\3604f\021\223j\021%\214i\307\305\253\257z\036\216\276\353\375\233\317\313,J\001Ol;\332\332\021\213\035\347\304\342V>\377\305\245\251\rlF\030\342d$$\244\361\002\326\202\341\257&P\2640\013\007\207\020#$ Ng\323t\226`\207\224oX\316J\205\257T\262R\345+\325\376Z\303\233\007)\224Q\313\342\020\213:\026\207Y\324\263h\340D\215\374t\204E\023\013\202j\302\270\347M\325\3500\300u\321\347\024\311\311\020t\241\240E\256\302\213[7\036H\343\f\232~:\027\035\200\025\270\376\333\322\333\367\353}\027#L\204\271\223\205.\2240.\345:,\177\376\365\307\257\314\315Y~\256 \351\342\332\305\243"
 839      A902 3A49 
 839      8E1E 4D62 
 839      99DA 2E43 
 839      E415 1046 
 840 01ca DABF 1755 	 .ascii "\332\277\027Ub\027\017\236\2077G_\037Mf1\304\001\255;\232h\313"
 840      6217 0F9E 
 840      8737 475F 
 840      1F4D 6631 
 840      C401 AD3B 
 841 01e1 8FB9 0E63 	 .ascii "\217\271\016c\013_\251`i|_\345\255%\237"
 841      0B5F A960 
 841      697C 5FE5 
 841      AD25 9F
 842 01f0 4A38 E77D 	 .string "J8\347}\340]y\224\234\224\315\362\343\372t\257X\256\252W\3014\270J\200M(\2472$\222\020\270\t)\252R^>\327O\213Pf&P\013r9\253w\312\013\264M\2530\272\b\0255\316I=\225\364\005\370\207\332\215\236\254!\344\020;\013Y\005\221\306Y\305\350\264b4\3563\272P\251\367i\207\355\215bFC0\276\006R\031~\331_lh\026\031Zp}\025\002\356o\257\357\346\376\223v\206=\253\270\027\032\372\241}q\177\373\243H\032/\253\304u\344\243r\333\300\350\307\357\376<\363C,@Uw\017\3706L\256\024P\255\355Fu\366\352#\333\250\244Fux_\250\326\030\325\274J\\O>*\267\021\240\2328/\003T\365\273P\235\302\024|\367\r`\027\206\3413T}\220pQ\330\324\002U.\225\206\f\334\201\277\343\001\356k\363\367\225\342~\351\341m\330\206\206\335P\002\373\317b\3307\301\324\016"
 842      E05D 7994 
 842      9C94 CDF2 
 842      E3FA 74AF 
 842      58AE AA57 
 843 02f1 8536 B17B 	 .string "\2056\261{\375\013\344\242\244"
 843      FD0B E4A2 
 843      A400 
 844 02fb 5902 C4E5 	 .string "Y\002\304\345\235\035\373\265"
 844      9D1D FBB5 
 844      00
 845 0304 BF82 8E0A 	 .string "\277\202\216\n\023gG\017\351[Y\241\354'\307~\377\021\003\207J\027Q\335L\032^;]h^\320a\360^\"0\237\344{nC!\226dc\336P\226\250\231\\\372\251/\b\214%\367}\023\350\342$\302$*\235\017\377\bm\002\225P\305j\205\363\326\234\3420\n\267\022\001\207\353\027w\277\373O\237\335&1\244ih,!\361\257b\022\031\322hg\200\250\361\036\r\027\343W\272\307\004\272vt;\247?\201\216\354\177\002-\250\274M\344\223\306K\212M={\026\376w\3664\005"
 845      1367 470F 
 845      E95B 59A1 
 845      EC27 C77E 
 845      FF11 0387 
 846 039c E3B0 64A9 	 .string "\343\260d\251\236\253q\261\334 \2720F\215W\355b\212\025\031S\314%\200~\345J\336\217Q\364~Dp\377\336\210\006\003Y\354zA\302\305\2328E\025)Ja\270X\315\212\221R)\222\260\202\362&L\330\201{\270\320\226No\001\266C\2631K\335\342\203/\343\301\371=\375U\3403S'19-\375H\232wgU\213H\t\241\361\230zB\260\336\213Q\344$\362\255Cr\346\301s\274\275\363\261c-m\303}g2\303\317\267tv\034oi\035\034\316\264\034{\352\344\203-Of\372\207\262=\271L\341\241\373\304@zh\260o \327\335:8\220\033\036\314v\237l>\rN[O\256\247#7\234\351\351?@\001\272\3332g\372Ng:r\354\320\336\332\376\320\036\031\232\233\213\327B|\326\232\237\203\377"
 846      9EAB 71B1 
 846      DC20 BA30 
 846      468D 57ED 
 846      628A 1519 
 847 047d 9CA2 0522 	 .ascii "\234\242\005\""
 848               	 .text
 849               	 .section .gnu.lto_Endpoint_Read_Control_EStream_BE.286d6c29995bfbbb,"",@progbits
 850 0000 789C 8D56 	 .string "x\234\215V]h\034U\024>\347\316\314\316\354\354Of\267Q\362\003\301\244m\222\246i\342\243\240\"mRA\310\2034\306\006TB\350n0\303\346\207\270\364\305\207LL\002+E\211\"R\254\242%\326Z\242MKK\025#5\211U\022cR\265OQ\244\025\221\026,\210>\211\b\3539\367\316l\262\233\022\263\220s\356\271\367\374|\367\273\347\336\211"
 850      5D68 1C55 
 850      143E E7CE 
 850      CCCE ECEC 
 850      4F66 B751 
 851 006f 01A5 BF5F 	 .string "\001\245\277_\351\357\266\t\360.i\334\005(\246\326"
GAS LISTING  			page 67


 851      E9EF B609 
 851      F02E 69DC 
 851      0528 A6D6 
 851      00
 852 0080 C62C 21B4 	 .string "\306,!\264\\\003x\266\3162\252\241\256\246u\214\363"
 852      5C03 78B6 
 852      CE32 AAA1 
 852      AEA6 758C 
 852      F300 
 853 0092 0D91 5842 	 .string "\r\221XBZ\016-}\013\264\036\362MS\231\246oZ\312\264DX\232Ie&\261L\346\bcDj[\351\005+\"\242k\337\220\207\035[\324\310/*\354\315fL\225^\260\342~|\2310dB\333\341\354Q\007\023r:\201\310\032\020F\205\246\033!\323J\206\355H4\026/s\0228\372,\362\246E\035\234\366\274\327oM\336x\305\360.x9/\237\037\315 \261s\030\241\017\341\031\314 :R\211\022\306T\340\374\225\327<\017\307\336\363\376\315\347\265\fj\002\236\334\b\264T \026\007\316\212\371[\371\374\347\347\246\326\360A\204a.FB\203\024\236\306:\320}m"
 853      5A0E 2D7D 
 853      0BB4 1EF2 
 853      4D53 99A6 
 853      6F5A CAB4 
 854 0146 650B B3B0 	 .string "e\013\263\260\221\226#4\022Q\032a\314wpHO\223Npt\271?Y\301F\225oT\263Q\343\033\265\276\256\343\311\335\224M\337\303b/\213z\026\r,\032Y\354\343\252M<\332\317\242\231\005\3416`\302\363\246\036Pi\2007I\277\243$s!\350FAJ[\205\361\334\370\245\037\214\024\236A\003\\\214\270hK\n\210\034r\246\345\023\343\203\301b\314\305(\271"
 854      9196 2334 
 854      1251 1A61 
 854      CC77 7048 
 854      4F93 4E70 
 855 01ba 2C83 5073 	 .string ",\203Ps*5\255"
 855      2A35 AD00 
 856 01c2 2CC1 B5DB 	 .string ",\301\265\333\013\357\334\027\370\312,\306f\026\273Q\203\t\215*.~\366\325\245WggM\037^\200s~\345\354\001"
 856      0BEF DC17 
 856      F8CA 2CC6 
 856      6616 BB51 
 856      8309 8D2A 
 857 01e8 15DF 8712 	 .string "\025\337\207\022\253\213\273O\301[co\2149\031\fqB\363\216:(\323\317I\370\346\276\224\311R\370\201\254\273\207b*\341\244\367\241w\3411\n\222>\213O\250\325\355rQd"
 857      AB8B BB4F 
 857      C15B 636F 
 857      8C39 190C 
 857      7142 F38E 
 858 0221 5367 6200 	 .string "Sgb"
 859 0225 D6A1 82B6 	 .string "\326\241\202\266\241!\t\201\353PN\273\324\316\237\034 %\244\233\001\324\302\274\235\345;\367\027\230\236\226L\253M\310\254\016\027\365d\321\027\341\037jW\032\231\303\310)6oD2:#\031\235\226\214:>\243s\225j\236f\330_/f4\004\023+\240I\307/\006\212\035\215\"G\023\256-C\300\375\315\325\255\334_\356`\3303\222{\241\240\357\335\021\3677?\216\244\360\274,\\O1\262\266\005\214~\342\356/g~\214\005\250\352\357\001\337\202\334R\001\325\312VT'\256<\272\201JS\250\032v\204j\205Q]\224\205\033)F\326\326\003T\223\247\264"
 859      A121 0981 
 859      EB50 4EBB 
 859      D4CE 9F1C 
 859      2025 A49B 
 860 02d3 55E3 1654 	 .string "U\343\026TG1\t\337}\r\330\215a\370\024e\037$\\\024\026\265@\215K[C\006n\303\337\361"
 860      4731 09DF 
 860      7D0D D88D 
 860      61F8 1465 
 860      1F24 5C14 
 861 02f4 F7D5 8BE5 	 .string "\367\325\213\345\245\270_~d\003\266\256`\357+\201\375g1\354\353`\250"
 861      A5B8 5F7E 
 861      6403 B6AE 
 861      60EF 2B81 
 861      FD67 31EC 
 862 030c 8042 9B58 	 .string "\200B\233X}\376\005rQ\243\004\031\002\244.\344o\005\370U\264\264\351\272n\352\"u/\253dDn\374\367\2370\b\251v\021\345\335,\t\241G\206\026\203\223\211\300EG[\206\227,(\344\322\330\231'\244'*.\027~\356\017\022c\311\215_\007\272:\2110\211j\373\243?B\353@\233\250a\263\312~{V\262\030\205\033e\001\213\253g\267\236\376'\317m\320\030RD4\225\320\370W1\215\fi\254+@\324t\217\226\213\361\241n\363\006]=\260Q\323\177\203\366\357\374\r\232\223u\233)&\205\347\260\262\360\372\314\375\357\353\323\034"
 862      7DFE 0572 
 862      51A3 0419 
 862      02A4 2EE4 
 862      6F05 F855 
 863 03b6 8CC3 8229 	 .ascii "\214\303\202)\273\256\316\305\n\235\350\302\030\265^\255\213"
 863      BBAE CEC5 
 863      0A9D E8C2 
 863      18B5 5EAD 
 863      8B
GAS LISTING  			page 68


 864 03c7 E56C 6831 	 .ascii "\345lh1\311\\\031\320w\262\344|\364\242\363\021\301\r|3\032<"
 864      C95C 19D0 
 864      77B2 E47C 
 864      F4A2 F311 
 864      C10D 7C33 
 865 03dd C962 CB01 	 .ascii "\311b\313\001\t\027\353\342\224U$\251\204\356b-\033zR\226p`\t"
 865      0917 EBE2 
 865      9455 24A9 
 865      84EE 622D 
 865      1B7A 5296 
 866 03f4 B5EB 3069 	 .ascii "\265\3530i\005\341\341Bc\332}\005\330\364=\2603\374IP\340\023"
 866      05E1 E142 
 866      63DA 7D05 
 866      D8F4 3DB0 
 866      33FC 4950 
 867 040a FC74 7E4F 	 .ascii "\374t~O\377l\360\232\241\212\030\\\226>\263\306\335\031\331\""
 867      FF6C F09A 
 867      A18A 185C 
 867      963E B3C6 
 867      DD19 D922 
 868 041e 9A06 A189 	 .ascii "\232\006\241\211\230\034!\230\357\323G%\354 \337;\244`~z\016"
 868      981C 2198 
 868      EFD3 4725 
 868      EC20 DF3B 
 868      A460 7E7A 
 869 0433 7574 3D7E 	 .ascii "ut=~\260\265}\244\377xz\344\205\326\256\316C\255mC#\351\326\203"
 869      B0B5 7DA4 
 869      FF78 7AE4 
 869      85D6 AECE 
 869      43AD 6D43 
 870 044b 4F1F 79A8 	 .ascii "O\037y\250\365\251\364\300p\2467\233.\fz\016\017\246\206\207"
 870      F5A9 F4C0 
 870      70A6 379B 
 870      2E0C 7A0E 
 870      0FA6 8687 
 871 045f FA07 B33D 	 .ascii "\372\007\263=mC\203\331\221\241L\317\221\226c`\267\367f{;\263"
 871      6D43 83D9 
 871      91A1 4CCF 
 871      9196 6360 
 871      B7F7 667B 
 872 0475 23E9 DE81 	 .ascii "#\351\336\201]\224\240\247=}\274\377X\2723\313\001\035m\035\017"
 872      5D94 A0A7 
 872      3D7D BCFF 
 872      58BA 33CB 
 872      011D 6D1D 
 873 048a 6F53 A1A5 	 .ascii "oS\241\245\245X\027\362\263\325\362<\374\007Q\220\025#"
 873      A558 17F2 
 873      B3D5 F23C 
 873      FC07 5190 
 873      1523 
 874               	 .text
 875               	 .section .gnu.lto_.symbol_nodes.286d6c29995bfbbb,"",@progbits
 876 0000 789C 4DD0 	 .string "x\234M\320KO\023Q\030\306\361\347\314\231\231\n\364\336N\253\202B[\350\207q\341Wq\355\352!\324\304K#\032\327\310\202\206\205\033\227nLXP\r\t&\203\242\342\r\245`\275'&\032/\253\032\317q\316\330\267\2339\277\367\374\317\\\352\301\3037\215\344\347}\005\201\3531@\336\274\244\274\357\240\022\374\005z\216W\rG\240\026\274\240\350\013v\025\003\301\033\212\241\340m\305\314\230\301\027\363p\302\273\243xLD\003\305\t\301#\305I\301\207\340\224\343\252\341#0+\270\013\346\034\227\r\037\203y\301'`A\360)X\024\334\003K\202\317\300\262\340s\260\"\370\002\254\n\276\004#\301W`Mp\037\254\217\031|\206\262\237\375\032<.\2427\340\t\301\003\360\244\340"
 876      4B4F 1351 
 876      18C6 F1E7 
 876      CC99 990A 
 876      F4DE 4EAB 
GAS LISTING  			page 69


 877 00d2 9C16 3C04 	 .ascii "\234\026<\004g\004\217\300S\202o\301\323\202CpV\360\03587\246"
 877      6704 8FC0 
 877      5382 6FC1 
 877      D382 4370 
 877      56F0 1D38 
 878 00e8 7A0F 3612 	 .ascii "z\0176\022..*\365\001l\216\365\021l\215\365\t\234\377/\215\026"
 878      2E2E 2AF5 
 878      016C 8EF5 
 878      116C 8DF5 
 878      099C FF2F 
 879 00fe FA5B 3B23 	 .ascii "\372[;#\255U\272\360Z\350]\031\3365\213yt.\356mh\255\323\211"
 879      AD55 BAF0 
 879      5AE8 5D19 
 879      DE35 8B79 
 879      742E EE6D 
 880 0116 4E27 7E3A 	 .ascii "N'~:\361\323I\260\200Nw\024gt\220n\005\351V\330F\257\273u9\320"
 880      F1D3 49B0 
 880      804E 7714 
 880      6774 906E 
 880      05E9 56D8 
 881 0130 A1D9 DAB6 	 .ascii "\241\331\332\266\217\b\355\226\235d\315d\360G\351,\260t+V:\347"
 881      8F08 ED96 
 881      9D64 CD64 
 881      F047 E92C 
 881      B074 2B56 
 882 0146 9C53 89F3 	 .ascii "\234S\211\363\346\245\254\363\036\326\326\215\013-t\016\215\013"
 882      E6A5 ACF3 
 882      1ED6 D68D 
 882      0B2D 740E 
 882      8D0B 
 883 0158 E606 0F86 	 .ascii "\346\006\017\206\347\255{\361\317s\272\350\272\242N\272\222\353"
 883      E7AD 7BF1 
 883      CF73 BAE8 
 883      BAA2 4EBA 
 883      92EB 
 884 016a 4AAE 2BB9 	 .ascii "J\256+\271\256\354\272\262\237t\025\327U\\Wq]\325u\325 \351\""
 884      AEEC BAB2 
 884      9F74 15D7 
 884      555C 5771 
 884      5DD5 75D5 
 885 0181 D745 AE8B 	 .ascii "\327E\256\213\\\027\231\257\276\366{%\3205w\240\026b\315\276"
 885      5C17 99AF 
 885      BEF6 7B25 
 885      D035 77A0 
 885      1662 CDBE 
 886 0195 78DD 1DA8 	 .ascii "x\335\035\250\333\003?V\265\035\364\342\375\025\2630\377\306"
 886      DB03 3F56 
 886      B51D F4E2 
 886      FD15 B330 
 886      FFC6 
 887 01a7 8E9D 4C67 	 .ascii "\216\235Lg\260\264{\317\3273\023\330\264\327Ys\257\345\373g\364"
 887      B0B4 7BCF 
 887      D733 13D8 
 887      B4D7 5973 
 887      AFE5 FB67 
 888 01bc DC02 FAF6 	 .ascii "\334\002\372\366\332h\243\263}pV7&\223\256\331F\337\2729\365"
 888      DA68 A3B3 
GAS LISTING  			page 70


 888      7D70 5637 
 888      2693 AED9 
 888      46DF BA39 
 889 01d1 AFC7 5F48 	 .ascii "\257\307_H\323G\322"
 889      D347 D2
 890               	 .text
 891               	 .section .gnu.lto_.refs.286d6c29995bfbbb,"",@progbits
 892 0000 789C 6362 	 .string "x\234cb`b\bd\200"
 892      6062 0864 
 892      8000 
 893 000a 4676 060E 	 .string "Fv\006\016FN \346\002bn\006\016f\t\006I\006\016 -\005\241\031\245\201X\006\310\227\205\212\313Aiy(\255"
 893      464E 20E6 
 893      0262 6E06 
 893      0E66 0906 
 893      4906 0E20 
 894 0031 55A7 08C4 	 .string "U\247\b\304J@\026"
 894      4A40 1600 
 895 0039 7F5C 02F1 	 .ascii "\177\\\002\361"
 896               	 .text
 897               	 .section .gnu.lto_.decls.286d6c29995bfbbb,"",@progbits
 898 0000 789C AD5B 	 .string "x\234\255[\017p\024\325\031\337w\227\204\304$$\244\024\261u\f0b\031\254\t *\265\255@ *\035\2062\374\263\035\333\036Gv\225\350q\t\227\013\224iG6\002\022\002j\210`\020P\217\bB\030\225\210\240\202\b\247\255\261\n\b\242 \020\b\021\202\bt*\266\241\022\333\346\372\275\335\267w\273\357\336{\273Y\270\231\357\366\337\373\376\374~\337\367\276\267{\331x$\217t0G\222b\360Y|\207$\355\351!I\003$I\272\007\304\003\262\016\244A\322?\003A6\202l\003\331\005\262\027\344(H+H;\310\005\220\016\220N\220.\020/\222\244L\220\\\220> 7\202\f"
 898      0F70 14D5 
 898      19DF 7797 
 898      84C4 2424 
 898      A414 B175 
 899 00b7 1904 5200 	 .string "\031\004R"
 900 00bb 321C E46E 	 .string "2\034\344n\220Q \367\202\214\007\231\006\362 \310t\020\005\344\021\2202\2200\310<\220\307@\026\200<\001\262\004d9\322\343\254\207\355j$Y>8\326,\220F\220\236d\377U\244\343I\005A\004\337*\330i\002y\035d!\261\221J\364\267\302\361N\342s7\361\365:\310\026\253+\215\223lb\337\360\325@|\213|=i\362\267\215\370{\237\370k&\376v\202\354\240\374a\376s)\177\215\304\347\n\304\366\371\t\310b\206\3574b\317\360\375\204\311\277\027\316\177\004\3627\220\017\250\030p\376s8\374:\215\301\360\277\327\304\265\341\377"
 900      9051 20F7 
 900      828C 0799 
 900      06F2 20C8 
 900      7410 05E4 
 901 0164 F17F 04E4 	 .string "\361\177\004\3440\310g\224\177\\{yW\311\301a\220\343\024\027G\005\\\234"
 901      30C8 6794 
 901      7F5C 7B79 
 901      57C9 C161 
 901      90E3 1417 
 902 017d 6901 394E 	 .ascii "i\0019N\305\322z\rb9\001Rc\212\245\007\261K\307\262\304\024\317"
 902      C5D2 7A0D 
 902      6239 0152 
 902      638A A507 
 902      B14B C7B2 
 903 0194 6990 2F41 	 .ascii "i\220/A\332\250x\360|\354u\225\2719\tRg\212\245\235\223\243\345"
 903      DAA8 78F0 
 903      7CEC 7595 
 903      B939 0952 
 903      678A A59D 
 904 01ab 2496 AF41 	 .ascii "$\226\257A\316\201|E\305\202\373B\206\304\236\0338"
 904      CE81 7C45 
 904      C582 FB42 
 904      86C4 9E1B 
 904      38
 905 01bc 1664 8A01 	 .string "\026d\212\001\177<D\247\225\\\253\247\346u\207\013{\035\002{\235.\354u\n\354u\271\260\327%\260\207\373h\206d\315%\266g\344\t\017?\r_\233\214\361D\007\347g#\261\237\001\373\351\224\335L\007v\317\300\327v\223\335Lbw\033\261\333\023\366\263)\273\270\337_G\331]\201\222m\267\303\327\273&\333\271\304\366.r\234\007\373\275A~@\331\307kI\016\261\311\353\265\206\037V}\233\347z\037\342\323<\307\214\271u\003l\373\202\374\210\362\177\243C|g\341k\237\t\337\215\304\327^r|\023\354\367\003\311\247\354\017 \270\334\3423\260\r0a3\346\254\321S\007\302\366f\220[(\337\203\\\346n\020\361u\224\034\017\206\375\237\202\334J\331\307\353~\257\253\300\306\352\327\005\202\034\016\205\355\020\220aT\034\303]\342\034N|\265\222\343;a\177\004\310]\224\375\273\257\022'k-\270\233\201\323\274\026\374\022\266\277"
 905      7F3C 44A7 
 905      955C ABA7 
 905      E675 870B 
 905      7B1D 027B 
 906 02bd B987 8A65 	 .string "\271\207\212e\224\313z\035E\374\265\223\343\"\330\037\0132\206\262\217\357\335r\257\002+\275\316\334\313\251[c\235\031\007\333\373A~E\305\201\357\037\263\2518p\0176\326a#\2265\360\365\025J\304\361$\301\277\031\351\376\307\023~\317\201\\Dz_\376\206\360\234\002\327\247\300v2\322\3577\351^=\355\032\3050\315&\206\337\302\3667\234\030\036$\3716\307\320H\3746\230\370\277\214mK\t\336\037$|\033>\017\020\237\027H\376\377"
GAS LISTING  			page 71


 906      94CB 7A1D 
 906      45FC B593 
 906      E322 D81F 
 906      0B32 86B2 
 907 0346 FBBF 67F8 	 .string "\373\277g\370\233\356\322\337t\216\277\016\342\257\004\366g0\374\341\347\002\272\377;\341\330\334;\314\\+6\\\317\204\355\303\034\256\037\271\306\261<b\023\313,\330\0068\261\224\271\214\305\334k\214X\322\211=V,KL\361\204`;\233\023O\370\032\307\023v\020\317\\\330\316\341\304\203\237\037\263$\373:5\372\221\271^\323\211>]\257\313I\f\235\244f\377\f\373\177b\370~\354*}?&\360\335E|W\301\276\312\360\235)\325\250\352\343j\244*\322{U\317\f\251Z?P\341"
 907      9BEE D2DF 
 907      748E BF0E 
 907      E2AF 04F6 
 907      6730 FCE1 
 908 03dd CF79 19C1 	 .string "\317y\031\301\271\\m'+C\273\247\033(\255W\325\332\266E\261K\036UM\221Q\003\302\347\373#i\260\324\250\302\025U]\227)%\177d\224\232\221t,\243\rh\260\244\373\321.\223\235X\314\313vn\n\027G\250{g\017\224\321\313\210\016$_zA\215\266\265}v\376c\264\250\272M\215\306b#\245>\322J\025\177\252\324Q\263\t|u\271\232e\202\237n\030F\t\370\037t\021\370\215\032|hF\006\026\3357\242\300\"+X\224\221\330\211!\266'\254\266\t\365\321\366\274:(\035o\374\200"
 908      B95C 6D27 
 908      2B43 BBA7 
 908      1B28 AD57 
 908      D5DA B645 
 909 047b 94D1 546F 	 .string "\224\321To\334\225Gz\324\032\313\315\322K\252Z\007\230\017\245.R\247\033\371\252Ax\324F\224\317dO\037\245\251\326\326E\337\332p\253\352\225\321:\360\346\201\262\022+\256\323c\272E\332"
 909      DC95 477A 
 909      D41A CBCD 
 909      D24B AA5A 
 909      0798 0FA5 
 910 04b8 5EA3 DBCF 	 .ascii "^\243\333\317F&b\335F\r\260E\217\302\252]~\ry\222\323\025=\324"
 910      4626 62DD 
 910      460D B045 
 910      8FC2 AA5D 
 910      7E0D 7992 
 911 04d0 FC78 CA2A 	 .ascii "\374x\312*\365R,\226c\316\225n\224G\334v\027\304E\020\2139\365"
 911      F552 2C96 
 911      63CE 956E 
 911      9447 DC76 
 911      17C4 4510 
 912 04e7 45F0 8990 	 .ascii "E\360\211\220nAFM\020\242\214\2669\"\356\360\023[R\325!:'2\332"
 912      6E41 464D 
 912      10A2 8CB6 
 912      3922 EEF0 
 912      135B 52D5 
 913 0500 6AA3 6965 	 .ascii "j\243ie\356\263\346e)\213\206$\230\333&f\356m\026smW\366\256"
 913      EEB3 E665 
 913      298B 8624 
 913      98DB 2666 
 913      EE6D 1673 
 914 0518 4F5D D8A4 	 .ascii "O]\330\244\266\305b\371\222\023\3564\202<\322\025\204\f\256\360"
 914      B6C5 62F9 
 914      9213 EE34 
 914      823C D215 
 914      840C AEF0 
 915 052c A514 9327 	 .ascii "\245\024\223'p\365.M\355\350L+\315\346kl\246UO2\323\265u\352"
 915      70F5 2E4D 
 915      EDE8 4C2B 
 915      CDE6 6B6C 
 915      A655 4F32 
 916 0544 B71A D396 	 .ascii "\267\032\323\226\206$\243\242"
 916      8624 A3A2 
 917 054c 1F72 27F8 	 .string "\037r'\370\350\314\204\311\210fr\027\227\335f\034\210\236\321\350\312\035\203qQ\232\023\312W4'\264\376\362`c&\030\371\344+Z\363\371\f5\023v\211\363\371WV>\325\232\332(\302M\313q.e\264\007\f\361s\271\217\316\345\310n\347rc7ry\017?\227#\343\271\224\321\207\032\263{\271\314~.\316%_\321&\227|Eq.\367\212syH\230K}By\244f\021\217z\375\032\314\034u[\345|E\033f\370\212bf\216\212\2319\346\210\231s\316\231iu\313\f_\321\206\031\276\242\230\231V13\247l\230\331\2471S\355\0252\363\271\211\231v\267\263\211\257h\303\f_Q\314L\273\230\231\263,f\"M-\335\271Gp\324\033/:\350\215T/\274\310\316\307\033\214|\\p\233\017\276\"\211\211C\353\0051\255\227l\n\356\242Vpu)\216\001v\270\005\310W\024\003\354\020\003\274\354\b\340\016\347"
 917      E8CC 84C9 
 917      8866 7217 
 917      97DD 661C 
 917      889E D1E8 
 918 064d 3BDD 02E4 	 .ascii ";\335\002\344+\212\001v\212\001~\357\b\340\227\316\001v\271\005"
GAS LISTING  			page 72


 918      2B8A 0176 
 918      8A01 7EEF 
 918      08E0 97CE 
 918      0176 B905 
 919 0661 C857 1403 	 .ascii "\310W\024\003\354\022\003\214%\003\214\264\265\035:?X]\240v\305"
 919      EC12 038C 
 919      2503 8CB4 
 919      B51D 3A3F 
 919      585D A076 
 920 0676 6255 29CE 	 .ascii "bU)\316\037\017\026z\272\377xP\223\312|<\330\316x<X\340\351\346"
 920      1F0F 167A 
 920      BAFF 7850 
 920      93CA 7C3C 
 920      D8CE 783C 
 921 068e 7395 D133 	 .ascii "s\225\3213\371\212\346\236\371x\322s\225I\217\305\334b\017\203"
 921      F98A E69E 
 921      F978 D273 
 921      9549 8FC5 
 921      DC62 0F83 
 922 06a2 3978 AEF2 	 .ascii "9x\256\362h-\363\351~:!\036\251\201\r\221\365\004\264\324\021"
 922      682D F3E9 
 922      7E3A 211E 
 922      A981 0D91 
 922      F504 B4D4 
 923 06b7 44D6 1310 	 .ascii "D\326\023\020_\323\212\221~\002Z*\306\270\214\205Q{\002R\265"
 923      5FD3 8A91 
 923      7E02 5A2A 
 923      C6B8 8C85 
 923      517B 0252 
 924 06cc 27A0 1747 	 .ascii "'\240\027GI\306\r\305[\f\230\234\033\212Zn\26067\024|E\233e\223"
 924      49C6 0DC5 
 924      5B0C 989C 
 924      1B8A 5A6E 
 924      B036 3714 
 925 06e5 AF68 A587 	 .ascii "\257h\245\207\236<\265bz\226\263\350QkT\353\255\326A\347\314"
 925      9E3C B562 
 925      7A96 B3E8 
 925      516B 54EB 
 925      ADD6 41E7 
 926 06fa 3CEB 9619 	 .ascii "<\353\226\031\276\242\r3|E13\317\212\231\251\0271\263GE\306\315"
 926      BEA2 0D33 
 926      7C45 3133 
 926      CF8A 99A9 
 926      1731 B347 
 927 0711 D679 3137 	 .ascii "\326y17\346\316\271\226\033\251M\347\344+\332p\303W\024s\263"
 927      E6CE B996 
 927      1BA9 4DE7 
 927      E42B DA70 
 927      C357 1473 
 928 0726 56CC CDF3 	 .ascii "V\314\315\3636U\2433S\225\346\230\231\006\267\314\360\025m\230"
 928      3655 A333 
 928      5395 E698 
 928      9906 B7CC 
 928      F015 6D98 
 929 073a E12B 8A99 	 .ascii "\341+\212\231i\0203\363\222m\325\3503\352917\346\031\265\311"
 929      6910 33F3 
 929      926D D5E8 
GAS LISTING  			page 73


 929      33EA 3931 
 929      37E6 19B5 
 930 074f ED8C E22B 	 .ascii "\355\214\342+\332p\303W\024s\263I\314M\243\243^\363\206sf^s\313"
 930      DA70 C357 
 930      1473 B349 
 930      CC4D A3A3 
 930      5EF3 8673 
 931 0767 0C5F D186 	 .ascii "\f_\321\206\031\276\242\230\231\327\304\314lqX5\373\235s\263"
 931      19BE A298 
 931      99D7 C4CC 
 931      6C71 5835 
 931      FB9D 73B3 
 932 077b CD2D 377C 	 .ascii "\315-7|E\033n\370\212bn\266\211\271\331\356\250j\3169gf\247["
 932      451B 6EF8 
 932      8A62 6EB6 
 932      89B9 D9EE 
 932      A86A CE39 
 933 0793 66F8 8A36 	 .ascii "f\370\2126\314\360\025\305\314\354\0243\363\216\303\025\252\252"
 933      CCF0 15C5 
 933      CCEC 1433 
 933      F38E C315 
 933      AAAA 
 934 07a5 87E3 3E1C 	 .ascii "\207\343>\034u\333\207\371\2126\334\360\025\305\334D\305\334"
 934      75DB 87F9 
 934      8A36 DCF0 
 934      15C5 DC44 
 934      C5DC 
 935 07b7 BCE7 6885 	 .ascii "\274\347h\205Z\355\234\231f\267\314\360\025m\230\341+\212\231"
 935      5AED 9C99 
 935      66B7 CCF0 
 935      156D 98E1 
 935      2B8A 99
 936 07ca 6916 33F3 	 .ascii "i\0263\363!\213"
 936      218B 
 937 07d0 99C8 91FF 	 .string "\231\310\221\377\f\322\037\227\3205\373\241d?\3750\305\370\203"
 937      0CD2 1F97 
 937      D035 FBA1 
 937      643F FD30 
 937      C5F8 8300 
 938 07e4 F52C F56F 	 .string "\365,\365ov>\3660f\361>\267\263\230\257h~\nM\246u\237\230\326C6\005\267_{\222\252Ow\f\360\210[\200|E1\300#b\200_0\353\246\251%\361\260\250\377\222\3606\033\"\353\227\204\026\267s\212\257(\206\330\"\206x\302\266\241\352\020\217:\207\330\346\026\"_Q\f\261M\f\361K\233\331o\024\352\025\347\205z\326m\241\362\025\305\020\317\212!~\345h&\256\316p\f\360\202[\200|E1\300\013b\200\027\035\001\334\345\034\3407n\001\362\025\305"
 938      763E F630 
 938      66F1 3EB7 
 938      B398 AF68 
 938      7E0A 4DA6 
 939 0877 BF11 03BC 	 .string "\277\021\003\274\344\b`\253s\200\035n\001\362\025\305"
 939      E408 60AB 
 939      7380 1D6E 
 939      01F2 15C5 
 939      00
 940 0888 3BC4 00   	 .string ";\304"
 941 088b 2F3B ECA5 	 .ascii "/;\354\245\352u\316\177vv\333h\370\212b\210\235b\210\337;\354"
 941      EA75 CE7F 
 941      7676 DB68 
 941      F88A 6288 
 941      9D62 88DF 
 942 08a1 A5EB 9C43 	 .ascii "\245\353\234C\354r\013\221\257(\206\330%\206\030K\206\330V\333"
 942      EC72 0B91 
GAS LISTING  			page 74


 942      AF28 86D8 
 942      2586 184B 
 942      86D8 56DB 
 943 08b5 B6F2 CD8F 	 .ascii "\266\362\315\217\366\243\367^\252\212\340\\\216\314\357\306\217"
 943      F6A3 F75E 
 943      AA8A E05C 
 943      8ECC EFC6 
 943      8F
 944 08c6 CFDE 3E64 	 .ascii "\317\336>d\317\270'\362H]\024;\206\353E^\226\353\223;\317\337"
 944      CFB8 27F2 
 944      485D 143B 
 944      86EB 455E 
 944      96EB 933B 
 945 08dc F65C 8DFA 	 .ascii "\366\\\215\372~\225\n\323\204\272\221K\374\215=\311\361b\206"
 945      7E95 0AD3 
 945      84BA 914B 
 945      FC8D 3DC9 
 945      F162 86
 946 08ef E33D 996C 	 .ascii "\343=\231l\307\325L\307o\356>V\215>Uk\227\251Wb\261\036\2209"
 946      C7D5 4CC7 
 946      6FEE 3E56 
 946      8D3E 556B 
 946      97A9 5762 
 947 0907 E7A8 6BBC 	 .ascii "\347\250k\274\226\273D\313{\\\361\367\256\"\334\367\256d\264"
 947      96BB 44CB 
 947      7B5C F1F7 
 947      AE22 DCF7 
 947      AE64 B4
 948 091a 190D 949C 	 .ascii "\031\r\224\234\276H\225\364z\3012\257\351\375\002\313\255\350"
 948      BE48 95F4 
 948      7AC1 32AF 
 948      E9FD 02CB 
 948      ADE8 
 949 092c 3F2C 0490 	 .ascii "?,\004\2207`\324,\313[r2z\212EG\364_g\232R\243\314\367k\004Y"
 949      3760 D42C 
 949      CB5B 7232 
 949      7A8A 4547 
 949      F45F 679A 
 950 0947 A813 1061 	 .ascii "\250\023\020a\2410\t\304\212\004\210\370\375u#\363\376zI\026"
 950      A130 09C4 
 950      8A04 88F8 
 950      FD75 23F3 
 950      FE7A 4916 
 951 095b 3BAB CF5A 	 .ascii ";\253\317Za\f\220\326\251\353\237\201rzo\360\356j(\247\205"
 951      610C 90D6 
 951      A9EB 9F81 
 951      727A 6FF0 
 951      EE6A 28A7 
 952 0970 EA7F E7C7 	 .string "\352\177\347\307\274Z6\026\b\337\202s\230\r\217\2646\036\b\217\216\347\022!\341p\"\265\321\357\232\327#`\025\027\367\374<i9&5\002\f\241\331\361XF\031F\322\215\204\275b$\214\274\237\367\305\231Oo\333\254\252\3512Z\343\315\303\177\231\245\b\261\265+\243\265^\257\026`\004\f\350\252\232m5Z\277\264\247\352\321\317K\f\226\311\247\277\024\301\255f\315\322\247S\324\246!\306\213\202j6\"&Y|\220]\375C\006X\315\255]\352Y\325\3270\366\224\023c\210o\354\205\275\2321\375\215\300z\332\230\245\374,\225\3104\326d6\366\202\023c)|c[\315\306681\226\3060\306\372\230\363\t\017\330^\\\305\r\336\376\360\275^\373~Y\373\336\244}o\206\357\370\307#\275\232M\325\262\251\\t\323\257$j9]Z\254\265\264\252\350\250\331\2027I\361\373\262p\352Uo:8\210\322\377+\225\b\032\0170"
 952      BC5A 3616 
 952      08DF 8273 
 952      980D 8FB4 
 952      361E 088F 
 953 0a71 EAFB C61E 	 .ascii "\352\373\306\036Jj!\253\274\374\026\322\224h!\224\026^\225xZ"
 953      4A6A 21AB 
 953      BCFC 16D2 
 953      9468 2194 
GAS LISTING  			page 75


 953      165E 9578 
 954 0a86 AF27 B4B4 	 .ascii "\257'\264\264?+_\202\305\357\333\337m\201E^[\201\252\026\366"
 954      3F2B 5F82 
 954      C5EF DBDF 
 954      6D81 455E 
 954      5B81 AA16 
 955 0a9b B776 3F1C 	 .ascii "\267v?\034\027\347\307\004\217\324\234mZZ\337`,I\307\262\031"
 955      17E7 C704 
 955      8FD4 9C6D 
 955      5A5A DF60 
 955      2C49 C7B2 
 956 0ab0 1DF9 7242 	 .ascii "\035\371rBK_\304\325\352\025\3218\0312\332\352\025.\341o&\367"
 956      4B5F C4D5 
 956      EA15 D138 
 956      1932 DAEA 
 956      152E E16F 
 957 0ac6 EFE8 A5E8 	 .ascii "\357\350\245\350\321Vr#\026\251\366\350\313\243GZ\3203\311\273"
 957      D156 7223 
 957      16A9 F6E8 
 957      CBA3 475A 
 957      D033 C9BB 
 958 0ada 8CDE 4EA8 	 .ascii "\214\336N\250k\336\341\243y\2076\257\375~\007\316-\351z\207\351"
 958      6BDE E1A3 
 958      7987 36AF 
 958      FD7E 07CE 
 958      2DE9 7A87 
 959 0aef EEF3 33E4 	 .ascii "\356\3633\344\351\013\b3\334\255t\341n7\355n\017\323\335j\006"
 959      E90B 0833 
 959      DCAD 74E1 
 959      6E37 ED6E 
 959      0FD3 DD6A 
 960 0b04 BA4D 2EDC 	 .ascii "\272M.\334\275O\273\373\013\323]\223\t\235\343\305\360C/\365"
 960      BD4F BBFB 
 960      0BD3 5D93 
 960      099D E3C5 
 960      F043 2FF5 
 961 0b18 DB51 A3B6 	 .ascii "\333Q\243\266\244X\026\263\035\302\230\311}\344\311\345\372}"
 961      A458 16B3 
 961      1DC2 98C9 
 961      7DE4 C9E5 
 961      FA7D 
 962 0b2a E493 5E5C 	 .ascii "\344\223^\\\266\037k*\315\234\232\320G%\320\236R7i\272\004o3"
 962      B61F 6B2A 
 962      CD9C 9AD0 
 962      4725 D09E 
 962      5237 69BA 
 963 0b41 8DF7 232B 	 .ascii "\215\367#+^j\342,\026L\234O\350\211\023\355<}\320\273H\325\336"
 963      5E6A E22C 
 963      164C 9C4F 
 963      E889 13ED 
 963      3C7D D0BB 
 964 0b58 3D87 9BE3 	 .ascii "=\207\233\343ZG\357,\020\310\333\023a\310\350 c\342\034p\222"
 964      5A47 EF2C 
 964      10C8 DB13 
 964      61C8 E820 
 964      63E2 1C70 
 965 0b6d 5C63 E218 	 .ascii "\\c\342\030\367\276\007\304\023\347\220\025{/\251\026G\013\363"
GAS LISTING  			page 76


 965      F7BE 07C4 
 965      13E7 9015 
 965      7B2F A916 
 965      470B F3
 966 0b80 1ED6 4DED 	 .ascii "\036\326M\355FA\325n\024\372\332\367\270#ZfN\365\344\366\270"
 966      4641 D56E 
 966      14FA DAF7 
 966      B823 5A66 
 966      4EF5 E4F6 
 967 0b95 237A 5234 	 .ascii "#zR4}\274\257\306\310\007\3157N\315\217\273\351k\270\361\022"
 967      7DBC AFC6 
 967      C807 CD37 
 967      4ECD 8FBB 
 967      E96B B8F1 
 968 0baa EDC3 DE5E 	 .ascii "\355\303\336^\332\036\t\312\310N\026\277\027\0363\371\313\312"
 968      DA1E 09CA 
 968      C84E 16BF 
 968      171E 33F9 
 968      CBCA 
 969 0bbc 90A8 452E 	 .ascii "\220\250E.\2165\242a\325\375\363L\035\357\266\363\026\216s\203"
 969      8E35 A261 
 969      D5FD F34C 
 969      1DEF B6F3 
 969      168E 7383 
 970 0bd0 1DAA C86A 	 .ascii "\035\252\310j\004Ev\202\333\323\353\004Z'\223J\263\345x\275\361"
 970      0445 7682 
 970      DBD3 EB04 
 970      5A27 934A 
 970      B3E5 78BD 
 971 0be5 AE44 34D7 	 .ascii "\256D4\327\243\367f\217\324\336\235\2422\272q\253\270\250N\t"
 971      A3F7 668F 
 971      D4DE 9DA2 
 971      32BA 71AB 
 971      B8A8 4E09 
 972 0bf9 2714 FEA7 	 .ascii "'\024\376\247\007^\324\247\271X\267\013\264\316p\265\336\025"
 972      075E D4A7 
 972      B958 B70B 
 972      B4CE 70B5 
 972      DE15 
 973 0c0b 68B5 73B5 	 .ascii "h\265s\265\366\t\264\316r\265\326p\356`\264\337\262\222\262\261"
 973      F609 B4CE 
 973      72B5 D670 
 973      EE60 B4DF 
 973      B292 B2B1 
 974 0c1f B3C5 DCBD 	 .ascii "\263\305\334\275\365\\|\347&\027\347\304\271\370\232\331\314"
 974      F55C 7CE7 
 974      2617 E7C4 
 974      B9F8 9AD9 
 974      CC
 975 0c30 EB18 DE6B 	 .ascii "\353\030\336ks\\x\277(\366\376w\246\367\377}\362\274\251\022"
 975      735C 78BF 
 975      28F6 FE77 
 975      A6F7 FF7D 
 975      F2BC A912 
 976 0c44 AD2D B2C1 	 .ascii "\255-\262\301q\213\274\304h\221\033\235a\250\3210"
 976      718B BCC4 
 976      6891 1B9D 
GAS LISTING  			page 77


 976      61A8 D130 
 977 0c54 3418 BF62 	 .string "4\030\277by\331?+\020\353\377\024V\363EA\255\\Nd]\272\251\260\262\"T\030(\235Q\350\237\023*,\r\226\004*e\245\260\",\227\006\303\0053\245\364J\330\016\275\323\027N\273o\302\324~c\244\241\343\247\336;\272pl\250t\216\022\252(\234:\271\250pLYH)\034=m\322\210\302\342\240\\^\006\303'\207C\212\177\226\017\237+(\221z`\013#|\341\233\214\313\276\261\245\025%\376\220\354\323\307\025\224\373C\341\202!i\343\225\340\303\341\231=\213\346\205\225\212\211\241\262\022\245\242B\221\177\034W\232P\031\bX4\206\376\\\020\312\024eVy\300\037V\342;\276\270\241I\017\340\240\202e\301 X\314\217\237~ T\n\243H\350\343\213u\037\303\322\212*\037zH\t%b\237\244\370ez\324\355\375(+\023\251\001\303\351\001\305\324\200;\362\255\016\350\353w\026\271\303:\246,\030\016\225\005|\223"
 977      79D9 3F2B 
 977      10EB FF14 
 977      56F3 4541 
 977      AD5C 4E64 
 978 0d55 F22D 5617 	 .string "\362-V\027\306%\312\323]\342aEd\330\210\237\260\207\321\201\377l\220x\234ao\350\220\3539\345\321\233U\001}yi\343\\(*\276\236\223A\366\371\242\342\033\270)\345]I\326)\346\352$\340\367\345%\236s\241\250\370*K\001W?]\216I\265`3\240\2508\337\246\230\304\327\213\212\373s\034$h\266\033\301\267Qlk#Af?\2732\266\031PT,\352B\005\005\326m\334\226\326\032gJ\211\342{\300_\032\236\032\f\227\006\260\227y\203\3046\341\304\024\177\305\243` \023v}\344p"
 978      C625 CAD3 
 978      5DE2 6145 
 978      64D8 889F 
 978      B087 D181 
 979 0df3 B391 E37D 	 .string "\263\221\343}E)\017\225\315\202\341\275|>E\201\2315\003z\254o\326\355\303*\207\245\373|\345\225!\305\347\313\303\227*\313\315\327r\260\361\261\312\234\322\022er\030j)\255\334_\362\250\"\337\345\f\360\344\260<I\231]\251T\204\247\314+W\300yol\216\234\362\335\0170\225\220/\234=c\226iT\372\fr\2206w\232?P\251\244\315\035\027\224\225?\366\230\253\257\ry\330\002\311"
 979      4529 0F95 
 979      CD82 E1BD 
 979      7C3E 4581 
 979      9935 037A 
 980 0e6f 1998 EA2B 	 .string "\031\230\352+*+\013\344\315\365\207\202\276\312`%\254\030\276\220RQ\031\b'\026\216q\025\230S\255"
 980      2A2B 0BE4 
 980      CDF5 8782 
 980      BECA 6025 
 980      AC18 BE90 
 981 0e90 4607 0265 	 .ascii "F\007\002es\0259\333\037\230\353\237W\341+\r\006J\203J\257\304"
 981      7315 39DB 
 981      1F98 EB9F 
 981      57E1 2B0D 
 981      064A 834A 
 982 0ea6 1409 28FE 	 .ascii "\024\t(\376\320\257\247N\311KjE#r\255\203\306M\310\245JkD\312"
 982      D0AF A74E 
 982      C94B 6A45 
 982      2372 AD83 
 982      C64D C8A5 
 983 0ebe 587F D89F 	 .ascii "X\177\330\237c\255\226\021)%3\375\241<S(\343&h\t\356k:5\271x"
 983      63AD 9611 
 983      2925 33FD 
 983      A13C 5328 
 983      E326 6809 
 984 0ed8 CAD4 8993 	 .ascii "\312\324\211\223\224\022\005\b\225\373\230.@$\306\351\304xmy"
 984      9412 0508 
 984      95FB 982E 
 984      4024 C6E9 
 984      C478 6D79 
 985 0eec 1C17 348E 	 .ascii "\034\0274\216\377\017\355\304\300\322"
 985      FF0F EDC4 
 985      C0D2 
 986               	 .text
 987               	 .section .gnu.lto_.symtab.286d6c29995bfbbb,"",@progbits
 988 0000 456E 6470 	 .string "Endpoint_Discard_Stream"
 988      6F69 6E74 
 988      5F44 6973 
 988      6361 7264 
 988      5F53 7472 
 989 0018 00        	 .string ""
 990 0019 00        	 .string ""
 991 001a 00        	 .string ""
 992 001b 00        	 .string ""
 993 001c 00        	 .string ""
 994 001d 00        	 .string ""
GAS LISTING  			page 78


 995 001e 00        	 .string ""
 996 001f 00        	 .string ""
 997 0020 00        	 .string ""
 998 0021 00        	 .string ""
 999 0022 00        	 .string ""
 1000 0023 0301 00   	 .string "\003\001"
 1001 0026 00        	 .string ""
 1002 0027 456E 6470 	 .string "Endpoint_Null_Stream"
 1002      6F69 6E74 
 1002      5F4E 756C 
 1002      6C5F 5374 
 1002      7265 616D 
 1003 003c 00        	 .string ""
 1004 003d 00        	 .string ""
 1005 003e 00        	 .string ""
 1006 003f 00        	 .string ""
 1007 0040 00        	 .string ""
 1008 0041 00        	 .string ""
 1009 0042 00        	 .string ""
 1010 0043 00        	 .string ""
 1011 0044 00        	 .string ""
 1012 0045 00        	 .string ""
 1013 0046 00        	 .string ""
 1014 0047 0B01 00   	 .string "\013\001"
 1015 004a 00        	 .string ""
 1016 004b 456E 6470 	 .string "Endpoint_Write_Stream_LE"
 1016      6F69 6E74 
 1016      5F57 7269 
 1016      7465 5F53 
 1016      7472 6561 
 1017 0064 00        	 .string ""
 1018 0065 00        	 .string ""
 1019 0066 00        	 .string ""
 1020 0067 00        	 .string ""
 1021 0068 00        	 .string ""
 1022 0069 00        	 .string ""
 1023 006a 00        	 .string ""
 1024 006b 00        	 .string ""
 1025 006c 00        	 .string ""
 1026 006d 00        	 .string ""
 1027 006e 00        	 .string ""
 1028 006f 1001 00   	 .string "\020\001"
 1029 0072 00        	 .string ""
 1030 0073 456E 6470 	 .string "Endpoint_Write_Stream_BE"
 1030      6F69 6E74 
 1030      5F57 7269 
 1030      7465 5F53 
 1030      7472 6561 
 1031 008c 00        	 .string ""
 1032 008d 00        	 .string ""
 1033 008e 00        	 .string ""
 1034 008f 00        	 .string ""
 1035 0090 00        	 .string ""
 1036 0091 00        	 .string ""
 1037 0092 00        	 .string ""
 1038 0093 00        	 .string ""
 1039 0094 00        	 .string ""
GAS LISTING  			page 79


 1040 0095 00        	 .string ""
 1041 0096 00        	 .string ""
 1042 0097 1601 00   	 .string "\026\001"
 1043 009a 00        	 .string ""
 1044 009b 456E 6470 	 .string "Endpoint_Read_Stream_LE"
 1044      6F69 6E74 
 1044      5F52 6561 
 1044      645F 5374 
 1044      7265 616D 
 1045 00b3 00        	 .string ""
 1046 00b4 00        	 .string ""
 1047 00b5 00        	 .string ""
 1048 00b6 00        	 .string ""
 1049 00b7 00        	 .string ""
 1050 00b8 00        	 .string ""
 1051 00b9 00        	 .string ""
 1052 00ba 00        	 .string ""
 1053 00bb 00        	 .string ""
 1054 00bc 00        	 .string ""
 1055 00bd 00        	 .string ""
 1056 00be 1C01 00   	 .string "\034\001"
 1057 00c1 00        	 .string ""
 1058 00c2 456E 6470 	 .string "Endpoint_Read_Stream_BE"
 1058      6F69 6E74 
 1058      5F52 6561 
 1058      645F 5374 
 1058      7265 616D 
 1059 00da 00        	 .string ""
 1060 00db 00        	 .string ""
 1061 00dc 00        	 .string ""
 1062 00dd 00        	 .string ""
 1063 00de 00        	 .string ""
 1064 00df 00        	 .string ""
 1065 00e0 00        	 .string ""
 1066 00e1 00        	 .string ""
 1067 00e2 00        	 .string ""
 1068 00e3 00        	 .string ""
 1069 00e4 00        	 .string ""
 1070 00e5 2201 00   	 .string "\"\001"
 1071 00e8 00        	 .string ""
 1072 00e9 456E 6470 	 .string "Endpoint_Write_PStream_LE"
 1072      6F69 6E74 
 1072      5F57 7269 
 1072      7465 5F50 
 1072      5374 7265 
 1073 0103 00        	 .string ""
 1074 0104 00        	 .string ""
 1075 0105 00        	 .string ""
 1076 0106 00        	 .string ""
 1077 0107 00        	 .string ""
 1078 0108 00        	 .string ""
 1079 0109 00        	 .string ""
 1080 010a 00        	 .string ""
 1081 010b 00        	 .string ""
 1082 010c 00        	 .string ""
 1083 010d 00        	 .string ""
 1084 010e 2801 00   	 .string "(\001"
GAS LISTING  			page 80


 1085 0111 00        	 .string ""
 1086 0112 456E 6470 	 .string "Endpoint_Write_PStream_BE"
 1086      6F69 6E74 
 1086      5F57 7269 
 1086      7465 5F50 
 1086      5374 7265 
 1087 012c 00        	 .string ""
 1088 012d 00        	 .string ""
 1089 012e 00        	 .string ""
 1090 012f 00        	 .string ""
 1091 0130 00        	 .string ""
 1092 0131 00        	 .string ""
 1093 0132 00        	 .string ""
 1094 0133 00        	 .string ""
 1095 0134 00        	 .string ""
 1096 0135 00        	 .string ""
 1097 0136 00        	 .string ""
 1098 0137 2E01 00   	 .string ".\001"
 1099 013a 00        	 .string ""
 1100 013b 456E 6470 	 .string "Endpoint_Write_EStream_LE"
 1100      6F69 6E74 
 1100      5F57 7269 
 1100      7465 5F45 
 1100      5374 7265 
 1101 0155 00        	 .string ""
 1102 0156 00        	 .string ""
 1103 0157 00        	 .string ""
 1104 0158 00        	 .string ""
 1105 0159 00        	 .string ""
 1106 015a 00        	 .string ""
 1107 015b 00        	 .string ""
 1108 015c 00        	 .string ""
 1109 015d 00        	 .string ""
 1110 015e 00        	 .string ""
 1111 015f 00        	 .string ""
 1112 0160 3401 00   	 .string "4\001"
 1113 0163 00        	 .string ""
 1114 0164 456E 6470 	 .string "Endpoint_Write_EStream_BE"
 1114      6F69 6E74 
 1114      5F57 7269 
 1114      7465 5F45 
 1114      5374 7265 
 1115 017e 00        	 .string ""
 1116 017f 00        	 .string ""
 1117 0180 00        	 .string ""
 1118 0181 00        	 .string ""
 1119 0182 00        	 .string ""
 1120 0183 00        	 .string ""
 1121 0184 00        	 .string ""
 1122 0185 00        	 .string ""
 1123 0186 00        	 .string ""
 1124 0187 00        	 .string ""
 1125 0188 00        	 .string ""
 1126 0189 3A01 00   	 .string ":\001"
 1127 018c 00        	 .string ""
 1128 018d 456E 6470 	 .string "Endpoint_Read_EStream_LE"
 1128      6F69 6E74 
GAS LISTING  			page 81


 1128      5F52 6561 
 1128      645F 4553 
 1128      7472 6561 
 1129 01a6 00        	 .string ""
 1130 01a7 00        	 .string ""
 1131 01a8 00        	 .string ""
 1132 01a9 00        	 .string ""
 1133 01aa 00        	 .string ""
 1134 01ab 00        	 .string ""
 1135 01ac 00        	 .string ""
 1136 01ad 00        	 .string ""
 1137 01ae 00        	 .string ""
 1138 01af 00        	 .string ""
 1139 01b0 00        	 .string ""
 1140 01b1 4001 00   	 .string "@\001"
 1141 01b4 00        	 .string ""
 1142 01b5 456E 6470 	 .string "Endpoint_Read_EStream_BE"
 1142      6F69 6E74 
 1142      5F52 6561 
 1142      645F 4553 
 1142      7472 6561 
 1143 01ce 00        	 .string ""
 1144 01cf 00        	 .string ""
 1145 01d0 00        	 .string ""
 1146 01d1 00        	 .string ""
 1147 01d2 00        	 .string ""
 1148 01d3 00        	 .string ""
 1149 01d4 00        	 .string ""
 1150 01d5 00        	 .string ""
 1151 01d6 00        	 .string ""
 1152 01d7 00        	 .string ""
 1153 01d8 00        	 .string ""
 1154 01d9 4601 00   	 .string "F\001"
 1155 01dc 00        	 .string ""
 1156 01dd 456E 6470 	 .string "Endpoint_Write_Control_Stream_LE"
 1156      6F69 6E74 
 1156      5F57 7269 
 1156      7465 5F43 
 1156      6F6E 7472 
 1157 01fe 00        	 .string ""
 1158 01ff 00        	 .string ""
 1159 0200 00        	 .string ""
 1160 0201 00        	 .string ""
 1161 0202 00        	 .string ""
 1162 0203 00        	 .string ""
 1163 0204 00        	 .string ""
 1164 0205 00        	 .string ""
 1165 0206 00        	 .string ""
 1166 0207 00        	 .string ""
 1167 0208 00        	 .string ""
 1168 0209 4C01 00   	 .string "L\001"
 1169 020c 00        	 .string ""
 1170 020d 456E 6470 	 .string "Endpoint_Write_Control_Stream_BE"
 1170      6F69 6E74 
 1170      5F57 7269 
 1170      7465 5F43 
 1170      6F6E 7472 
GAS LISTING  			page 82


 1171 022e 00        	 .string ""
 1172 022f 00        	 .string ""
 1173 0230 00        	 .string ""
 1174 0231 00        	 .string ""
 1175 0232 00        	 .string ""
 1176 0233 00        	 .string ""
 1177 0234 00        	 .string ""
 1178 0235 00        	 .string ""
 1179 0236 00        	 .string ""
 1180 0237 00        	 .string ""
 1181 0238 00        	 .string ""
 1182 0239 5601 00   	 .string "V\001"
 1183 023c 00        	 .string ""
 1184 023d 456E 6470 	 .string "Endpoint_Read_Control_Stream_LE"
 1184      6F69 6E74 
 1184      5F52 6561 
 1184      645F 436F 
 1184      6E74 726F 
 1185 025d 00        	 .string ""
 1186 025e 00        	 .string ""
 1187 025f 00        	 .string ""
 1188 0260 00        	 .string ""
 1189 0261 00        	 .string ""
 1190 0262 00        	 .string ""
 1191 0263 00        	 .string ""
 1192 0264 00        	 .string ""
 1193 0265 00        	 .string ""
 1194 0266 00        	 .string ""
 1195 0267 00        	 .string ""
 1196 0268 5B01 00   	 .string "[\001"
 1197 026b 00        	 .string ""
 1198 026c 456E 6470 	 .string "Endpoint_Read_Control_Stream_BE"
 1198      6F69 6E74 
 1198      5F52 6561 
 1198      645F 436F 
 1198      6E74 726F 
 1199 028c 00        	 .string ""
 1200 028d 00        	 .string ""
 1201 028e 00        	 .string ""
 1202 028f 00        	 .string ""
 1203 0290 00        	 .string ""
 1204 0291 00        	 .string ""
 1205 0292 00        	 .string ""
 1206 0293 00        	 .string ""
 1207 0294 00        	 .string ""
 1208 0295 00        	 .string ""
 1209 0296 00        	 .string ""
 1210 0297 6001 00   	 .string "`\001"
 1211 029a 00        	 .string ""
 1212 029b 456E 6470 	 .string "Endpoint_Write_Control_PStream_LE"
 1212      6F69 6E74 
 1212      5F57 7269 
 1212      7465 5F43 
 1212      6F6E 7472 
 1213 02bd 00        	 .string ""
 1214 02be 00        	 .string ""
 1215 02bf 00        	 .string ""
GAS LISTING  			page 83


 1216 02c0 00        	 .string ""
 1217 02c1 00        	 .string ""
 1218 02c2 00        	 .string ""
 1219 02c3 00        	 .string ""
 1220 02c4 00        	 .string ""
 1221 02c5 00        	 .string ""
 1222 02c6 00        	 .string ""
 1223 02c7 00        	 .string ""
 1224 02c8 6501 00   	 .string "e\001"
 1225 02cb 00        	 .string ""
 1226 02cc 456E 6470 	 .string "Endpoint_Write_Control_PStream_BE"
 1226      6F69 6E74 
 1226      5F57 7269 
 1226      7465 5F43 
 1226      6F6E 7472 
 1227 02ee 00        	 .string ""
 1228 02ef 00        	 .string ""
 1229 02f0 00        	 .string ""
 1230 02f1 00        	 .string ""
 1231 02f2 00        	 .string ""
 1232 02f3 00        	 .string ""
 1233 02f4 00        	 .string ""
 1234 02f5 00        	 .string ""
 1235 02f6 00        	 .string ""
 1236 02f7 00        	 .string ""
 1237 02f8 00        	 .string ""
 1238 02f9 6A01 00   	 .string "j\001"
 1239 02fc 00        	 .string ""
 1240 02fd 456E 6470 	 .string "Endpoint_Write_Control_EStream_LE"
 1240      6F69 6E74 
 1240      5F57 7269 
 1240      7465 5F43 
 1240      6F6E 7472 
 1241 031f 00        	 .string ""
 1242 0320 00        	 .string ""
 1243 0321 00        	 .string ""
 1244 0322 00        	 .string ""
 1245 0323 00        	 .string ""
 1246 0324 00        	 .string ""
 1247 0325 00        	 .string ""
 1248 0326 00        	 .string ""
 1249 0327 00        	 .string ""
 1250 0328 00        	 .string ""
 1251 0329 00        	 .string ""
 1252 032a 6F01 00   	 .string "o\001"
 1253 032d 00        	 .string ""
 1254 032e 456E 6470 	 .string "Endpoint_Write_Control_EStream_BE"
 1254      6F69 6E74 
 1254      5F57 7269 
 1254      7465 5F43 
 1254      6F6E 7472 
 1255 0350 00        	 .string ""
 1256 0351 00        	 .string ""
 1257 0352 00        	 .string ""
 1258 0353 00        	 .string ""
 1259 0354 00        	 .string ""
 1260 0355 00        	 .string ""
GAS LISTING  			page 84


 1261 0356 00        	 .string ""
 1262 0357 00        	 .string ""
 1263 0358 00        	 .string ""
 1264 0359 00        	 .string ""
 1265 035a 00        	 .string ""
 1266 035b 7401 00   	 .string "t\001"
 1267 035e 00        	 .string ""
 1268 035f 456E 6470 	 .string "Endpoint_Read_Control_EStream_LE"
 1268      6F69 6E74 
 1268      5F52 6561 
 1268      645F 436F 
 1268      6E74 726F 
 1269 0380 00        	 .string ""
 1270 0381 00        	 .string ""
 1271 0382 00        	 .string ""
 1272 0383 00        	 .string ""
 1273 0384 00        	 .string ""
 1274 0385 00        	 .string ""
 1275 0386 00        	 .string ""
 1276 0387 00        	 .string ""
 1277 0388 00        	 .string ""
 1278 0389 00        	 .string ""
 1279 038a 00        	 .string ""
 1280 038b 7901 00   	 .string "y\001"
 1281 038e 00        	 .string ""
 1282 038f 456E 6470 	 .string "Endpoint_Read_Control_EStream_BE"
 1282      6F69 6E74 
 1282      5F52 6561 
 1282      645F 436F 
 1282      6E74 726F 
 1283 03b0 00        	 .string ""
 1284 03b1 00        	 .string ""
 1285 03b2 00        	 .string ""
 1286 03b3 00        	 .string ""
 1287 03b4 00        	 .string ""
 1288 03b5 00        	 .string ""
 1289 03b6 00        	 .string ""
 1290 03b7 00        	 .string ""
 1291 03b8 00        	 .string ""
 1292 03b9 00        	 .string ""
 1293 03ba 00        	 .string ""
 1294 03bb 7E01 00   	 .string "~\001"
 1295 03be 00        	 .string ""
 1296 03bf 5553 425F 	 .string "USB_DeviceState"
 1296      4465 7669 
 1296      6365 5374 
 1296      6174 6500 
 1297 03cf 00        	 .string ""
 1298 03d0 0200      	 .string "\002"
 1299 03d2 00        	 .string ""
 1300 03d3 00        	 .string ""
 1301 03d4 00        	 .string ""
 1302 03d5 00        	 .string ""
 1303 03d6 00        	 .string ""
 1304 03d7 00        	 .string ""
 1305 03d8 00        	 .string ""
 1306 03d9 00        	 .string ""
GAS LISTING  			page 85


 1307 03da 9701 00   	 .string "\227\001"
 1308 03dd 00        	 .string ""
 1309 03de 5553 425F 	 .string "USB_ControlRequest"
 1309      436F 6E74 
 1309      726F 6C52 
 1309      6571 7565 
 1309      7374 00
 1310 03f1 00        	 .string ""
 1311 03f2 0200      	 .string "\002"
 1312 03f4 00        	 .string ""
 1313 03f5 00        	 .string ""
 1314 03f6 00        	 .string ""
 1315 03f7 00        	 .string ""
 1316 03f8 00        	 .string ""
 1317 03f9 00        	 .string ""
 1318 03fa 00        	 .string ""
 1319 03fb 00        	 .string ""
 1320 03fc 9A01 00   	 .string "\232\001"
 1321 03ff 00        	 .string ""
 1322 0400 456E 6470 	 .string "Endpoint_WaitUntilReady"
 1322      6F69 6E74 
 1322      5F57 6169 
 1322      7455 6E74 
 1322      696C 5265 
 1323 0418 00        	 .string ""
 1324 0419 0200      	 .string "\002"
 1325 041b 00        	 .string ""
 1326 041c 00        	 .string ""
 1327 041d 00        	 .string ""
 1328 041e 00        	 .string ""
 1329 041f 00        	 .string ""
 1330 0420 00        	 .string ""
 1331 0421 00        	 .string ""
 1332 0422 00        	 .string ""
 1333 0423 8301 00   	 .string "\203\001"
 1334 0426 00        	 .string ""
 1335 0427 5553 425F 	 .string "USB_USBTask"
 1335      5553 4254 
 1335      6173 6B00 
 1336 0433 00        	 .string ""
 1337 0434 0200      	 .string "\002"
 1338 0436 00        	 .string ""
 1339 0437 00        	 .string ""
 1340 0438 00        	 .string ""
 1341 0439 00        	 .string ""
 1342 043a 00        	 .string ""
 1343 043b 00        	 .string ""
 1344 043c 00        	 .string ""
 1345 043d 00        	 .string ""
 1346 043e 8601 00   	 .string "\206\001"
 1347 0441 00        	 .string ""
 1348 0442 5F5F 6565 	 .string "__eerd_byte_m32u2"
 1348      7264 5F62 
 1348      7974 655F 
 1348      6D33 3275 
 1348      3200 
 1349 0454 00        	 .string ""
GAS LISTING  			page 86


 1350 0455 0200      	 .string "\002"
 1351 0457 00        	 .string ""
 1352 0458 00        	 .string ""
 1353 0459 00        	 .string ""
 1354 045a 00        	 .string ""
 1355 045b 00        	 .string ""
 1356 045c 00        	 .string ""
 1357 045d 00        	 .string ""
 1358 045e 00        	 .string ""
 1359 045f 8901 00   	 .string "\211\001"
 1360 0462 00        	 .string ""
 1361 0463 5F5F 6565 	 .string "__eeupd_byte_m32u2"
 1361      7570 645F 
 1361      6279 7465 
 1361      5F6D 3332 
 1361      7532 00
 1362 0476 00        	 .string ""
 1363 0477 0200      	 .string "\002"
 1364 0479 00        	 .string ""
 1365 047a 00        	 .string ""
 1366 047b 00        	 .string ""
 1367 047c 00        	 .string ""
 1368 047d 00        	 .string ""
 1369 047e 00        	 .string ""
 1370 047f 00        	 .string ""
 1371 0480 00        	 .string ""
 1372 0481 9101 00   	 .string "\221\001"
 1373 0484 00        	 .string ""
 1374               	 .text
 1375               	 .section .gnu.lto_.opts,"",@progbits
 1376 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 1376      6375 3D61 
 1376      746D 6567 
 1376      6133 3275 
 1376      3227 2027 
 1377               	 .text
 1378               	 .cfi_sections .debug_frame
 1379               	.global Endpoint_Discard_Stream
 1381               	Endpoint_Discard_Stream:
 1382               	.LFB80:
 1383               	 .file 1 "LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c"
   1:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
GAS LISTING  			page 87


  17:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #include "../../../../Common/Common.h"
  32:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  34:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
  35:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #include "../USBMode.h"
  36:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  37:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #if defined(USB_CAN_BE_DEVICE)
  38:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  39:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #include "EndpointStream_AVR8.h"
  40:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  41:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** #if !defined(CONTROL_ONLY_DEVICE)
  42:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** uint8_t Endpoint_Discard_Stream(uint16_t Length,
  43:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****                                 uint16_t* const BytesProcessed)
  44:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** {
 1384               	 .loc 1 44 0
 1385               	 .cfi_startproc
 1386               	.LVL0:
 1387 0000 EF92      	 push r14
 1388               	.LCFI0:
 1389               	 .cfi_def_cfa_offset 3
 1390               	 .cfi_offset 14,-2
 1391 0002 FF92      	 push r15
 1392               	.LCFI1:
 1393               	 .cfi_def_cfa_offset 4
 1394               	 .cfi_offset 15,-3
 1395 0004 0F93      	 push r16
 1396               	.LCFI2:
 1397               	 .cfi_def_cfa_offset 5
 1398               	 .cfi_offset 16,-4
 1399 0006 1F93      	 push r17
 1400               	.LCFI3:
 1401               	 .cfi_def_cfa_offset 6
 1402               	 .cfi_offset 17,-5
 1403 0008 CF93      	 push r28
 1404               	.LCFI4:
 1405               	 .cfi_def_cfa_offset 7
 1406               	 .cfi_offset 28,-6
 1407 000a DF93      	 push r29
 1408               	.LCFI5:
 1409               	 .cfi_def_cfa_offset 8
 1410               	 .cfi_offset 29,-7
 1411               	 
 1412               	 
GAS LISTING  			page 88


 1413               	 
 1414               	.L__stack_usage =6
 1415 000c 8C01      	 movw r16,r24
 1416 000e EB01      	 movw r28,r22
 1417               	.LVL1:
  45:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	uint8_t  ErrorCode;
  46:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	uint16_t BytesInTransfer = 0;
  47:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  48:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 1418               	 .loc 1 48 0
 1419 0010 0E94 0000 	 call Endpoint_WaitUntilReady
 1420               	.LVL2:
 1421 0014 8111      	 cpse r24,__zero_reg__
 1422 0016 00C0      	 rjmp .L2
 1423               	.LVL3:
 1424               	.LBB383:
 1425               	.LBB384:
  49:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	  return ErrorCode;
  50:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  51:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	if (BytesProcessed != NULL)
 1426               	 .loc 1 51 0
 1427 0018 2097      	 sbiw r28,0
 1428 001a 01F0      	 breq .L3
  52:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	  Length -= *BytesProcessed;
 1429               	 .loc 1 52 0
 1430 001c 8881      	 ld r24,Y
 1431 001e 9981      	 ldd r25,Y+1
 1432               	.LVL4:
 1433 0020 081B      	 sub r16,r24
 1434 0022 190B      	 sbc r17,r25
 1435               	.LVL5:
 1436               	.L3:
 1437               	.LBE384:
 1438               	.LBE383:
  44:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** {
 1439               	 .loc 1 44 0
 1440 0024 E12C      	 mov r14,__zero_reg__
 1441 0026 F12C      	 mov r15,__zero_reg__
 1442               	.L4:
 1443               	.LVL6:
 1444               	.LBB392:
 1445               	.LBB391:
  53:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  54:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	while (Length)
 1446               	 .loc 1 54 0
 1447 0028 0115      	 cp r16,__zero_reg__
 1448 002a 1105      	 cpc r17,__zero_reg__
 1449 002c 01F0      	 breq .L16
 1450               	.LBB385:
 1451               	.LBB386:
 1452               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
GAS LISTING  			page 89


   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
GAS LISTING  			page 90


  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
GAS LISTING  			page 91


 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 92


 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 93


 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
GAS LISTING  			page 94


 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
GAS LISTING  			page 95


 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1453               	 .loc 2 360 0
 1454 002e 8091 E800 	 lds r24,232
 1455               	.LBE386:
 1456               	.LBE385:
  55:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	{
  56:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 1457               	 .loc 1 56 0
 1458 0032 85FD      	 sbrc r24,5
 1459 0034 00C0      	 rjmp .L5
 1460               	.LBB387:
 1461               	.LBB388:
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 96


 395:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
GAS LISTING  			page 97


 452:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1462               	 .loc 2 471 0
 1463 0036 8091 E800 	 lds r24,232
 1464 003a 8B77      	 andi r24,lo8(123)
 1465 003c 8093 E800 	 sts 232,r24
 1466               	.LBE388:
 1467               	.LBE387:
  57:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		{
  58:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Endpoint_ClearOUT();
  59:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  60:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			if (BytesProcessed != NULL)
 1468               	 .loc 1 60 0
 1469 0040 2097      	 sbiw r28,0
 1470 0042 01F0      	 breq .L6
  61:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			{
  62:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 				*BytesProcessed += BytesInTransfer;
 1471               	 .loc 1 62 0
 1472 0044 8881      	 ld r24,Y
 1473 0046 9981      	 ldd r25,Y+1
 1474 0048 8E0D      	 add r24,r14
 1475 004a 9F1D      	 adc r25,r15
 1476 004c 9983      	 std Y+1,r25
 1477 004e 8883      	 st Y,r24
  63:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 1478               	 .loc 1 63 0
 1479 0050 85E0      	 ldi r24,lo8(5)
 1480 0052 00C0      	 rjmp .L2
 1481               	.L6:
  64:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			}
  65:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  66:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 1482               	 .loc 1 66 0
 1483 0054 0E94 0000 	 call Endpoint_WaitUntilReady
 1484               	.LVL7:
 1485 0058 8823      	 tst r24
 1486 005a 01F0      	 breq .L4
 1487 005c 00C0      	 rjmp .L2
 1488               	.LVL8:
GAS LISTING  			page 98


 1489               	.L5:
 1490               	.LBB389:
 1491               	.LBB390:
 472:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
GAS LISTING  			page 99


 526:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 543:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 553:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 555:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 556:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 557:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 558:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 559:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 560:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 561:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void) ATTR_ALWAYS_INLINE;
 562:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void)
 563:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 564:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Dummy;
 565:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 566:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				Dummy = UEDATX;
 1492               	 .loc 2 566 0
 1493 005e 8091 F100 	 lds r24,241
 1494               	.LBE390:
 1495               	.LBE389:
  67:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			  return ErrorCode;
  68:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		}
  69:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		else
  70:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		{
  71:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Endpoint_Discard_8();
  72:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  73:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Length--;
 1496               	 .loc 1 73 0
 1497 0062 0150      	 subi r16,1
 1498 0064 1109      	 sbc r17,__zero_reg__
 1499               	.LVL9:
  74:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			BytesInTransfer++;
GAS LISTING  			page 100


 1500               	 .loc 1 74 0
 1501 0066 8FEF      	 ldi r24,-1
 1502 0068 E81A      	 sub r14,r24
 1503 006a F80A      	 sbc r15,r24
 1504               	.LVL10:
 1505 006c 00C0      	 rjmp .L4
 1506               	.L16:
  75:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		}
  76:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	}
  77:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  78:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1507               	 .loc 1 78 0
 1508 006e 80E0      	 ldi r24,0
 1509               	.LVL11:
 1510               	.L2:
 1511               	 
 1512               	.LBE391:
 1513               	.LBE392:
  79:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** }
 1514               	 .loc 1 79 0
 1515 0070 DF91      	 pop r29
 1516 0072 CF91      	 pop r28
 1517               	.LVL12:
 1518 0074 1F91      	 pop r17
 1519 0076 0F91      	 pop r16
 1520 0078 FF90      	 pop r15
 1521 007a EF90      	 pop r14
 1522 007c 0895      	 ret
 1523               	 .cfi_endproc
 1524               	.LFE80:
 1526               	.global Endpoint_Null_Stream
 1528               	Endpoint_Null_Stream:
 1529               	.LFB81:
  80:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  81:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** uint8_t Endpoint_Null_Stream(uint16_t Length,
  82:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c ****                              uint16_t* const BytesProcessed)
  83:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** {
 1530               	 .loc 1 83 0
 1531               	 .cfi_startproc
 1532               	.LVL13:
 1533 007e EF92      	 push r14
 1534               	.LCFI6:
 1535               	 .cfi_def_cfa_offset 3
 1536               	 .cfi_offset 14,-2
 1537 0080 FF92      	 push r15
 1538               	.LCFI7:
 1539               	 .cfi_def_cfa_offset 4
 1540               	 .cfi_offset 15,-3
 1541 0082 0F93      	 push r16
 1542               	.LCFI8:
 1543               	 .cfi_def_cfa_offset 5
 1544               	 .cfi_offset 16,-4
 1545 0084 1F93      	 push r17
 1546               	.LCFI9:
 1547               	 .cfi_def_cfa_offset 6
 1548               	 .cfi_offset 17,-5
 1549 0086 CF93      	 push r28
GAS LISTING  			page 101


 1550               	.LCFI10:
 1551               	 .cfi_def_cfa_offset 7
 1552               	 .cfi_offset 28,-6
 1553 0088 DF93      	 push r29
 1554               	.LCFI11:
 1555               	 .cfi_def_cfa_offset 8
 1556               	 .cfi_offset 29,-7
 1557               	 
 1558               	 
 1559               	 
 1560               	.L__stack_usage =6
 1561 008a 8C01      	 movw r16,r24
 1562 008c EB01      	 movw r28,r22
 1563               	.LVL14:
  84:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	uint8_t  ErrorCode;
  85:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	uint16_t BytesInTransfer = 0;
  86:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  87:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 1564               	 .loc 1 87 0
 1565 008e 0E94 0000 	 call Endpoint_WaitUntilReady
 1566               	.LVL15:
 1567 0092 8111      	 cpse r24,__zero_reg__
 1568 0094 00C0      	 rjmp .L18
 1569               	.LVL16:
 1570               	.LBB401:
 1571               	.LBB402:
  88:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	  return ErrorCode;
  89:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  90:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	if (BytesProcessed != NULL)
 1572               	 .loc 1 90 0
 1573 0096 2097      	 sbiw r28,0
 1574 0098 01F0      	 breq .L19
  91:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	  Length -= *BytesProcessed;
 1575               	 .loc 1 91 0
 1576 009a 8881      	 ld r24,Y
 1577 009c 9981      	 ldd r25,Y+1
 1578               	.LVL17:
 1579 009e 081B      	 sub r16,r24
 1580 00a0 190B      	 sbc r17,r25
 1581               	.LVL18:
 1582               	.L19:
 1583               	.LBE402:
 1584               	.LBE401:
  83:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** {
 1585               	 .loc 1 83 0
 1586 00a2 E12C      	 mov r14,__zero_reg__
 1587 00a4 F12C      	 mov r15,__zero_reg__
 1588               	.L20:
 1589               	.LVL19:
 1590               	.LBB410:
 1591               	.LBB409:
  92:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  93:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	while (Length)
 1592               	 .loc 1 93 0
 1593 00a6 0115      	 cp r16,__zero_reg__
 1594 00a8 1105      	 cpc r17,__zero_reg__
 1595 00aa 01F0      	 breq .L31
GAS LISTING  			page 102


 1596               	.LBB403:
 1597               	.LBB404:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1598               	 .loc 2 360 0
 1599 00ac 8091 E800 	 lds r24,232
 1600               	.LBE404:
 1601               	.LBE403:
  94:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	{
  95:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 1602               	 .loc 1 95 0
 1603 00b0 85FD      	 sbrc r24,5
 1604 00b2 00C0      	 rjmp .L21
 1605               	.LBB405:
 1606               	.LBB406:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1607               	 .loc 2 456 0
 1608 00b4 8091 E800 	 lds r24,232
 1609 00b8 8E77      	 andi r24,lo8(126)
 1610 00ba 8093 E800 	 sts 232,r24
 1611               	.LBE406:
 1612               	.LBE405:
  96:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		{
  97:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Endpoint_ClearIN();
  98:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
  99:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			if (BytesProcessed != NULL)
 1613               	 .loc 1 99 0
 1614 00be 2097      	 sbiw r28,0
 1615 00c0 01F0      	 breq .L22
 100:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			{
 101:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 				*BytesProcessed += BytesInTransfer;
 1616               	 .loc 1 101 0
 1617 00c2 8881      	 ld r24,Y
 1618 00c4 9981      	 ldd r25,Y+1
 1619 00c6 8E0D      	 add r24,r14
 1620 00c8 9F1D      	 adc r25,r15
 1621 00ca 9983      	 std Y+1,r25
 1622 00cc 8883      	 st Y,r24
 102:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 1623               	 .loc 1 102 0
 1624 00ce 85E0      	 ldi r24,lo8(5)
 1625 00d0 00C0      	 rjmp .L18
 1626               	.L22:
 103:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			}
 104:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
 105:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 1627               	 .loc 1 105 0
 1628 00d2 0E94 0000 	 call Endpoint_WaitUntilReady
 1629               	.LVL20:
 1630 00d6 8823      	 tst r24
 1631 00d8 01F0      	 breq .L20
 1632 00da 00C0      	 rjmp .L18
 1633               	.LVL21:
 1634               	.L21:
 1635               	.LBB407:
 1636               	.LBB408:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1637               	 .loc 2 554 0
GAS LISTING  			page 103


 1638 00dc 1092 F100 	 sts 241,__zero_reg__
 1639               	.LBE408:
 1640               	.LBE407:
 106:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			  return ErrorCode;
 107:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		}
 108:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		else
 109:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		{
 110:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Endpoint_Write_8(0);
 111:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
 112:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			Length--;
 1641               	 .loc 1 112 0
 1642 00e0 0150      	 subi r16,1
 1643 00e2 1109      	 sbc r17,__zero_reg__
 1644               	.LVL22:
 113:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 			BytesInTransfer++;
 1645               	 .loc 1 113 0
 1646 00e4 8FEF      	 ldi r24,-1
 1647 00e6 E81A      	 sub r14,r24
 1648 00e8 F80A      	 sbc r15,r24
 1649               	.LVL23:
 1650 00ea 00C0      	 rjmp .L20
 1651               	.LVL24:
 1652               	.L31:
 114:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 		}
 115:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	}
 116:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 
 117:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1653               	 .loc 1 117 0
 1654 00ec 80E0      	 ldi r24,0
 1655               	.LVL25:
 1656               	.L18:
 1657               	 
 1658               	.LBE409:
 1659               	.LBE410:
 118:LUFA/Drivers/USB/Core/AVR8/EndpointStream_AVR8.c **** }
 1660               	 .loc 1 118 0
 1661 00ee DF91      	 pop r29
 1662 00f0 CF91      	 pop r28
 1663               	.LVL26:
 1664 00f2 1F91      	 pop r17
 1665 00f4 0F91      	 pop r16
 1666 00f6 FF90      	 pop r15
 1667 00f8 EF90      	 pop r14
 1668 00fa 0895      	 ret
 1669               	 .cfi_endproc
 1670               	.LFE81:
 1672               	.global Endpoint_Write_Stream_LE
 1674               	Endpoint_Write_Stream_LE:
 1675               	.LFB82:
 1676               	 .file 3 "LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c"
   1:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** */
GAS LISTING  			page 104


   8:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** #if defined(TEMPLATE_FUNC_NAME)
  32:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  33:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** uint8_t TEMPLATE_FUNC_NAME (TEMPLATE_BUFFER_TYPE const Buffer,
  34:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****                             uint16_t Length,
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c ****                             uint16_t* const BytesProcessed)
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 1677               	 .loc 3 36 0
 1678               	 .cfi_startproc
 1679               	.LVL27:
 1680 00fc CF92      	 push r12
 1681               	.LCFI12:
 1682               	 .cfi_def_cfa_offset 3
 1683               	 .cfi_offset 12,-2
 1684 00fe DF92      	 push r13
 1685               	.LCFI13:
 1686               	 .cfi_def_cfa_offset 4
 1687               	 .cfi_offset 13,-3
 1688 0100 EF92      	 push r14
 1689               	.LCFI14:
 1690               	 .cfi_def_cfa_offset 5
 1691               	 .cfi_offset 14,-4
 1692 0102 FF92      	 push r15
 1693               	.LCFI15:
 1694               	 .cfi_def_cfa_offset 6
 1695               	 .cfi_offset 15,-5
 1696 0104 0F93      	 push r16
 1697               	.LCFI16:
 1698               	 .cfi_def_cfa_offset 7
 1699               	 .cfi_offset 16,-6
 1700 0106 1F93      	 push r17
 1701               	.LCFI17:
 1702               	 .cfi_def_cfa_offset 8
 1703               	 .cfi_offset 17,-7
 1704 0108 CF93      	 push r28
GAS LISTING  			page 105


 1705               	.LCFI18:
 1706               	 .cfi_def_cfa_offset 9
 1707               	 .cfi_offset 28,-8
 1708 010a DF93      	 push r29
 1709               	.LCFI19:
 1710               	 .cfi_def_cfa_offset 10
 1711               	 .cfi_offset 29,-9
 1712               	 
 1713               	 
 1714               	 
 1715               	.L__stack_usage =8
 1716 010c 7C01      	 movw r14,r24
 1717 010e 8B01      	 movw r16,r22
 1718 0110 EA01      	 movw r28,r20
 1719               	.LVL28:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint16_t BytesInTransfer = 0;
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t  ErrorCode;
  40:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 1720               	 .loc 3 41 0
 1721 0112 0E94 0000 	 call Endpoint_WaitUntilReady
 1722               	.LVL29:
 1723 0116 8111      	 cpse r24,__zero_reg__
 1724 0118 00C0      	 rjmp .L33
 1725               	.LVL30:
 1726               	.LBB419:
 1727               	.LBB420:
  42:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	  return ErrorCode;
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 1728               	 .loc 3 44 0
 1729 011a 2097      	 sbiw r28,0
 1730 011c 01F0      	 breq .L34
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	{
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 1731               	 .loc 3 46 0
 1732 011e 8881      	 ld r24,Y
 1733 0120 9981      	 ldd r25,Y+1
 1734               	.LVL31:
 1735 0122 081B      	 sub r16,r24
 1736 0124 190B      	 sbc r17,r25
 1737               	.LVL32:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 1738               	 .loc 3 47 0
 1739 0126 E80E      	 add r14,r24
 1740 0128 F91E      	 adc r15,r25
 1741               	.LVL33:
 1742               	.L34:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 1743               	 .loc 3 37 0
 1744 012a C12C      	 mov r12,__zero_reg__
 1745 012c D12C      	 mov r13,__zero_reg__
 1746               	.L35:
 1747               	.LVL34:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	}
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
GAS LISTING  			page 106


  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 1748               	 .loc 3 50 0
 1749 012e 0115      	 cp r16,__zero_reg__
 1750 0130 1105      	 cpc r17,__zero_reg__
 1751 0132 01F0      	 breq .L44
 1752               	.LBB421:
 1753               	.LBB422:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1754               	 .loc 2 360 0
 1755 0134 8091 E800 	 lds r24,232
 1756               	.LBE422:
 1757               	.LBE421:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	{
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 1758               	 .loc 3 52 0
 1759 0138 85FD      	 sbrc r24,5
 1760 013a 00C0      	 rjmp .L36
 1761               	.LBB423:
 1762               	.LBB424:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1763               	 .loc 2 456 0
 1764 013c 8091 E800 	 lds r24,232
 1765 0140 8E77      	 andi r24,lo8(126)
 1766 0142 8093 E800 	 sts 232,r24
 1767               	.LBE424:
 1768               	.LBE423:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		{
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_CLEAR_ENDPOINT();
  55:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			#if !defined(INTERRUPT_CONTROL_ENDPOINT)
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 1769               	 .loc 3 57 0
 1770 0146 0E94 0000 	 call USB_USBTask
 1771               	.LVL35:
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			#endif
  59:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 1772               	 .loc 3 60 0
 1773 014a 2097      	 sbiw r28,0
 1774 014c 01F0      	 breq .L37
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			{
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 1775               	 .loc 3 62 0
 1776 014e 8881      	 ld r24,Y
 1777 0150 9981      	 ldd r25,Y+1
 1778 0152 8C0D      	 add r24,r12
 1779 0154 9D1D      	 adc r25,r13
 1780 0156 9983      	 std Y+1,r25
 1781 0158 8883      	 st Y,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 1782               	 .loc 3 63 0
 1783 015a 85E0      	 ldi r24,lo8(5)
 1784 015c 00C0      	 rjmp .L33
 1785               	.L37:
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			}
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
GAS LISTING  			page 107


 1786               	 .loc 3 66 0
 1787 015e 0E94 0000 	 call Endpoint_WaitUntilReady
 1788               	.LVL36:
 1789 0162 8823      	 tst r24
 1790 0164 01F0      	 breq .L35
 1791 0166 00C0      	 rjmp .L33
 1792               	.LVL37:
 1793               	.L36:
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			  return ErrorCode;
  68:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		}
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		else
  70:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		{
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 1794               	 .loc 3 71 0
 1795 0168 F701      	 movw r30,r14
 1796 016a 8191      	 ld r24,Z+
 1797 016c 7F01      	 movw r14,r30
 1798               	.LVL38:
 1799               	.LBB425:
 1800               	.LBB426:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1801               	 .loc 2 554 0
 1802 016e 8093 F100 	 sts 241,r24
 1803               	.LVL39:
 1804               	.LBE426:
 1805               	.LBE425:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 1806               	 .loc 3 73 0
 1807 0172 0150      	 subi r16,1
 1808 0174 1109      	 sbc r17,__zero_reg__
 1809               	.LVL40:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 1810               	 .loc 3 74 0
 1811 0176 FFEF      	 ldi r31,-1
 1812 0178 CF1A      	 sub r12,r31
 1813 017a DF0A      	 sbc r13,r31
 1814               	.LVL41:
 1815 017c 00C0      	 rjmp .L35
 1816               	.LVL42:
 1817               	.L44:
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		}
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	}
  77:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1818               	 .loc 3 78 0
 1819 017e 80E0      	 ldi r24,0
 1820               	.LVL43:
 1821               	.L33:
 1822               	 
 1823               	.LBE420:
 1824               	.LBE419:
  79:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** }
 1825               	 .loc 3 79 0
 1826 0180 DF91      	 pop r29
 1827 0182 CF91      	 pop r28
 1828               	.LVL44:
GAS LISTING  			page 108


 1829 0184 1F91      	 pop r17
 1830 0186 0F91      	 pop r16
 1831 0188 FF90      	 pop r15
 1832 018a EF90      	 pop r14
 1833 018c DF90      	 pop r13
 1834 018e CF90      	 pop r12
 1835 0190 0895      	 ret
 1836               	 .cfi_endproc
 1837               	.LFE82:
 1839               	.global Endpoint_Write_Stream_BE
 1841               	Endpoint_Write_Stream_BE:
 1842               	.LFB83:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 1843               	 .loc 3 36 0
 1844               	 .cfi_startproc
 1845               	.LVL45:
 1846 0192 CF92      	 push r12
 1847               	.LCFI20:
 1848               	 .cfi_def_cfa_offset 3
 1849               	 .cfi_offset 12,-2
 1850 0194 DF92      	 push r13
 1851               	.LCFI21:
 1852               	 .cfi_def_cfa_offset 4
 1853               	 .cfi_offset 13,-3
 1854 0196 EF92      	 push r14
 1855               	.LCFI22:
 1856               	 .cfi_def_cfa_offset 5
 1857               	 .cfi_offset 14,-4
 1858 0198 FF92      	 push r15
 1859               	.LCFI23:
 1860               	 .cfi_def_cfa_offset 6
 1861               	 .cfi_offset 15,-5
 1862 019a 0F93      	 push r16
 1863               	.LCFI24:
 1864               	 .cfi_def_cfa_offset 7
 1865               	 .cfi_offset 16,-6
 1866 019c 1F93      	 push r17
 1867               	.LCFI25:
 1868               	 .cfi_def_cfa_offset 8
 1869               	 .cfi_offset 17,-7
 1870 019e CF93      	 push r28
 1871               	.LCFI26:
 1872               	 .cfi_def_cfa_offset 9
 1873               	 .cfi_offset 28,-8
 1874 01a0 DF93      	 push r29
 1875               	.LCFI27:
 1876               	 .cfi_def_cfa_offset 10
 1877               	 .cfi_offset 29,-9
 1878               	 
 1879               	 
 1880               	 
 1881               	.L__stack_usage =8
 1882 01a2 6C01      	 movw r12,r24
 1883 01a4 8B01      	 movw r16,r22
 1884 01a6 7A01      	 movw r14,r20
 1885               	.LVL46:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
GAS LISTING  			page 109


 1886               	 .loc 3 41 0
 1887 01a8 0E94 0000 	 call Endpoint_WaitUntilReady
 1888               	.LVL47:
 1889 01ac 8111      	 cpse r24,__zero_reg__
 1890 01ae 00C0      	 rjmp .L46
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 1891               	 .loc 3 37 0
 1892 01b0 E801      	 movw r28,r16
 1893 01b2 2197      	 sbiw r28,1
 1894               	.LVL48:
 1895 01b4 CC0D      	 add r28,r12
 1896 01b6 DD1D      	 adc r29,r13
 1897               	.LVL49:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 1898               	 .loc 3 44 0
 1899 01b8 E114      	 cp r14,__zero_reg__
 1900 01ba F104      	 cpc r15,__zero_reg__
 1901 01bc 01F0      	 breq .L47
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 1902               	 .loc 3 46 0
 1903 01be F701      	 movw r30,r14
 1904 01c0 8081      	 ld r24,Z
 1905 01c2 9181      	 ldd r25,Z+1
 1906               	.LVL50:
 1907 01c4 081B      	 sub r16,r24
 1908 01c6 190B      	 sbc r17,r25
 1909               	.LVL51:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 1910               	 .loc 3 47 0
 1911 01c8 C81B      	 sub r28,r24
 1912 01ca D90B      	 sbc r29,r25
 1913               	.LVL52:
 1914               	.L47:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 1915               	 .loc 3 36 0 discriminator 1
 1916 01cc C12C      	 mov r12,__zero_reg__
 1917 01ce D12C      	 mov r13,__zero_reg__
 1918               	.LVL53:
 1919               	.L48:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 1920               	 .loc 3 50 0 discriminator 1
 1921 01d0 0115      	 cp r16,__zero_reg__
 1922 01d2 1105      	 cpc r17,__zero_reg__
 1923 01d4 01F0      	 breq .L58
 1924               	.LBB427:
 1925               	.LBB428:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 1926               	 .loc 2 360 0
 1927 01d6 8091 E800 	 lds r24,232
 1928               	.LBE428:
 1929               	.LBE427:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 1930               	 .loc 3 52 0
 1931 01da 85FD      	 sbrc r24,5
 1932 01dc 00C0      	 rjmp .L49
 1933               	.LBB429:
 1934               	.LBB430:
GAS LISTING  			page 110


 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1935               	 .loc 2 456 0
 1936 01de 8091 E800 	 lds r24,232
 1937 01e2 8E77      	 andi r24,lo8(126)
 1938 01e4 8093 E800 	 sts 232,r24
 1939               	.LBE430:
 1940               	.LBE429:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 1941               	 .loc 3 57 0
 1942 01e8 0E94 0000 	 call USB_USBTask
 1943               	.LVL54:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 1944               	 .loc 3 60 0
 1945 01ec E114      	 cp r14,__zero_reg__
 1946 01ee F104      	 cpc r15,__zero_reg__
 1947 01f0 01F0      	 breq .L50
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 1948               	 .loc 3 62 0
 1949 01f2 F701      	 movw r30,r14
 1950 01f4 8081      	 ld r24,Z
 1951 01f6 9181      	 ldd r25,Z+1
 1952 01f8 8C0D      	 add r24,r12
 1953 01fa 9D1D      	 adc r25,r13
 1954 01fc 9183      	 std Z+1,r25
 1955 01fe 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 1956               	 .loc 3 63 0
 1957 0200 85E0      	 ldi r24,lo8(5)
 1958 0202 00C0      	 rjmp .L46
 1959               	.L50:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 1960               	 .loc 3 66 0
 1961 0204 0E94 0000 	 call Endpoint_WaitUntilReady
 1962               	.LVL55:
 1963 0208 8823      	 tst r24
 1964 020a 01F0      	 breq .L48
 1965 020c 00C0      	 rjmp .L46
 1966               	.LVL56:
 1967               	.L49:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 1968               	 .loc 3 71 0
 1969 020e 8881      	 ld r24,Y
 1970               	.LVL57:
 1971               	.LBB431:
 1972               	.LBB432:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1973               	 .loc 2 554 0
 1974 0210 8093 F100 	 sts 241,r24
 1975               	.LBE432:
 1976               	.LBE431:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 1977               	 .loc 3 72 0
 1978 0214 2197      	 sbiw r28,1
 1979               	.LVL58:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 1980               	 .loc 3 73 0
 1981 0216 0150      	 subi r16,1
GAS LISTING  			page 111


 1982 0218 1109      	 sbc r17,__zero_reg__
 1983               	.LVL59:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 1984               	 .loc 3 74 0
 1985 021a FFEF      	 ldi r31,-1
 1986 021c CF1A      	 sub r12,r31
 1987 021e DF0A      	 sbc r13,r31
 1988               	.LVL60:
 1989 0220 00C0      	 rjmp .L48
 1990               	.LVL61:
 1991               	.L58:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 1992               	 .loc 3 78 0
 1993 0222 80E0      	 ldi r24,0
 1994               	.LVL62:
 1995               	.L46:
 1996               	 
 1997               	 .loc 3 79 0
 1998 0224 DF91      	 pop r29
 1999 0226 CF91      	 pop r28
 2000 0228 1F91      	 pop r17
 2001 022a 0F91      	 pop r16
 2002               	.LVL63:
 2003 022c FF90      	 pop r15
 2004 022e EF90      	 pop r14
 2005               	.LVL64:
 2006 0230 DF90      	 pop r13
 2007 0232 CF90      	 pop r12
 2008 0234 0895      	 ret
 2009               	 .cfi_endproc
 2010               	.LFE83:
 2012               	.global Endpoint_Read_Stream_LE
 2014               	Endpoint_Read_Stream_LE:
 2015               	.LFB84:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2016               	 .loc 3 36 0
 2017               	 .cfi_startproc
 2018               	.LVL65:
 2019 0236 CF92      	 push r12
 2020               	.LCFI28:
 2021               	 .cfi_def_cfa_offset 3
 2022               	 .cfi_offset 12,-2
 2023 0238 DF92      	 push r13
 2024               	.LCFI29:
 2025               	 .cfi_def_cfa_offset 4
 2026               	 .cfi_offset 13,-3
 2027 023a EF92      	 push r14
 2028               	.LCFI30:
 2029               	 .cfi_def_cfa_offset 5
 2030               	 .cfi_offset 14,-4
 2031 023c FF92      	 push r15
 2032               	.LCFI31:
 2033               	 .cfi_def_cfa_offset 6
 2034               	 .cfi_offset 15,-5
 2035 023e 0F93      	 push r16
 2036               	.LCFI32:
 2037               	 .cfi_def_cfa_offset 7
GAS LISTING  			page 112


 2038               	 .cfi_offset 16,-6
 2039 0240 1F93      	 push r17
 2040               	.LCFI33:
 2041               	 .cfi_def_cfa_offset 8
 2042               	 .cfi_offset 17,-7
 2043 0242 CF93      	 push r28
 2044               	.LCFI34:
 2045               	 .cfi_def_cfa_offset 9
 2046               	 .cfi_offset 28,-8
 2047 0244 DF93      	 push r29
 2048               	.LCFI35:
 2049               	 .cfi_def_cfa_offset 10
 2050               	 .cfi_offset 29,-9
 2051               	 
 2052               	 
 2053               	 
 2054               	.L__stack_usage =8
 2055 0246 7C01      	 movw r14,r24
 2056 0248 8B01      	 movw r16,r22
 2057 024a EA01      	 movw r28,r20
 2058               	.LVL66:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2059               	 .loc 3 41 0
 2060 024c 0E94 0000 	 call Endpoint_WaitUntilReady
 2061               	.LVL67:
 2062 0250 8111      	 cpse r24,__zero_reg__
 2063 0252 00C0      	 rjmp .L60
 2064               	.LVL68:
 2065               	.LBB441:
 2066               	.LBB442:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2067               	 .loc 3 44 0
 2068 0254 2097      	 sbiw r28,0
 2069 0256 01F0      	 breq .L61
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2070               	 .loc 3 46 0
 2071 0258 8881      	 ld r24,Y
 2072 025a 9981      	 ldd r25,Y+1
 2073               	.LVL69:
 2074 025c 081B      	 sub r16,r24
 2075 025e 190B      	 sbc r17,r25
 2076               	.LVL70:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2077               	 .loc 3 47 0
 2078 0260 E80E      	 add r14,r24
 2079 0262 F91E      	 adc r15,r25
 2080               	.LVL71:
 2081               	.L61:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2082               	 .loc 3 37 0
 2083 0264 C12C      	 mov r12,__zero_reg__
 2084 0266 D12C      	 mov r13,__zero_reg__
 2085               	.L62:
 2086               	.LVL72:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2087               	 .loc 3 50 0
 2088 0268 0115      	 cp r16,__zero_reg__
GAS LISTING  			page 113


 2089 026a 1105      	 cpc r17,__zero_reg__
 2090 026c 01F0      	 breq .L71
 2091               	.LBB443:
 2092               	.LBB444:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 2093               	 .loc 2 360 0
 2094 026e 8091 E800 	 lds r24,232
 2095               	.LBE444:
 2096               	.LBE443:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2097               	 .loc 3 52 0
 2098 0272 85FD      	 sbrc r24,5
 2099 0274 00C0      	 rjmp .L63
 2100               	.LBB445:
 2101               	.LBB446:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 2102               	 .loc 2 471 0
 2103 0276 8091 E800 	 lds r24,232
 2104 027a 8B77      	 andi r24,lo8(123)
 2105 027c 8093 E800 	 sts 232,r24
 2106               	.LBE446:
 2107               	.LBE445:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2108               	 .loc 3 57 0
 2109 0280 0E94 0000 	 call USB_USBTask
 2110               	.LVL73:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2111               	 .loc 3 60 0
 2112 0284 2097      	 sbiw r28,0
 2113 0286 01F0      	 breq .L64
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2114               	 .loc 3 62 0
 2115 0288 8881      	 ld r24,Y
 2116 028a 9981      	 ldd r25,Y+1
 2117 028c 8C0D      	 add r24,r12
 2118 028e 9D1D      	 adc r25,r13
 2119 0290 9983      	 std Y+1,r25
 2120 0292 8883      	 st Y,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2121               	 .loc 3 63 0
 2122 0294 85E0      	 ldi r24,lo8(5)
 2123 0296 00C0      	 rjmp .L60
 2124               	.L64:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2125               	 .loc 3 66 0
 2126 0298 0E94 0000 	 call Endpoint_WaitUntilReady
 2127               	.LVL74:
 2128 029c 8823      	 tst r24
 2129 029e 01F0      	 breq .L62
 2130 02a0 00C0      	 rjmp .L60
 2131               	.LVL75:
 2132               	.L63:
 2133               	.LBB447:
 2134               	.LBB448:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 2135               	 .loc 2 542 0
 2136 02a2 8091 F100 	 lds r24,241
GAS LISTING  			page 114


 2137               	.LBE448:
 2138               	.LBE447:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 2139               	 .loc 3 71 0
 2140 02a6 F701      	 movw r30,r14
 2141 02a8 8193      	 st Z+,r24
 2142 02aa 7F01      	 movw r14,r30
 2143               	.LVL76:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 2144               	 .loc 3 73 0
 2145 02ac 0150      	 subi r16,1
 2146 02ae 1109      	 sbc r17,__zero_reg__
 2147               	.LVL77:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 2148               	 .loc 3 74 0
 2149 02b0 FFEF      	 ldi r31,-1
 2150 02b2 CF1A      	 sub r12,r31
 2151 02b4 DF0A      	 sbc r13,r31
 2152               	.LVL78:
 2153 02b6 00C0      	 rjmp .L62
 2154               	.L71:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 2155               	 .loc 3 78 0
 2156 02b8 80E0      	 ldi r24,0
 2157               	.LVL79:
 2158               	.L60:
 2159               	 
 2160               	.LBE442:
 2161               	.LBE441:
 2162               	 .loc 3 79 0
 2163 02ba DF91      	 pop r29
 2164 02bc CF91      	 pop r28
 2165               	.LVL80:
 2166 02be 1F91      	 pop r17
 2167 02c0 0F91      	 pop r16
 2168 02c2 FF90      	 pop r15
 2169 02c4 EF90      	 pop r14
 2170 02c6 DF90      	 pop r13
 2171 02c8 CF90      	 pop r12
 2172 02ca 0895      	 ret
 2173               	 .cfi_endproc
 2174               	.LFE84:
 2176               	.global Endpoint_Read_Stream_BE
 2178               	Endpoint_Read_Stream_BE:
 2179               	.LFB85:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2180               	 .loc 3 36 0
 2181               	 .cfi_startproc
 2182               	.LVL81:
 2183 02cc CF92      	 push r12
 2184               	.LCFI36:
 2185               	 .cfi_def_cfa_offset 3
 2186               	 .cfi_offset 12,-2
 2187 02ce DF92      	 push r13
 2188               	.LCFI37:
 2189               	 .cfi_def_cfa_offset 4
 2190               	 .cfi_offset 13,-3
GAS LISTING  			page 115


 2191 02d0 EF92      	 push r14
 2192               	.LCFI38:
 2193               	 .cfi_def_cfa_offset 5
 2194               	 .cfi_offset 14,-4
 2195 02d2 FF92      	 push r15
 2196               	.LCFI39:
 2197               	 .cfi_def_cfa_offset 6
 2198               	 .cfi_offset 15,-5
 2199 02d4 0F93      	 push r16
 2200               	.LCFI40:
 2201               	 .cfi_def_cfa_offset 7
 2202               	 .cfi_offset 16,-6
 2203 02d6 1F93      	 push r17
 2204               	.LCFI41:
 2205               	 .cfi_def_cfa_offset 8
 2206               	 .cfi_offset 17,-7
 2207 02d8 CF93      	 push r28
 2208               	.LCFI42:
 2209               	 .cfi_def_cfa_offset 9
 2210               	 .cfi_offset 28,-8
 2211 02da DF93      	 push r29
 2212               	.LCFI43:
 2213               	 .cfi_def_cfa_offset 10
 2214               	 .cfi_offset 29,-9
 2215               	 
 2216               	 
 2217               	 
 2218               	.L__stack_usage =8
 2219 02dc 6C01      	 movw r12,r24
 2220 02de 8B01      	 movw r16,r22
 2221 02e0 7A01      	 movw r14,r20
 2222               	.LVL82:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2223               	 .loc 3 41 0
 2224 02e2 0E94 0000 	 call Endpoint_WaitUntilReady
 2225               	.LVL83:
 2226 02e6 8111      	 cpse r24,__zero_reg__
 2227 02e8 00C0      	 rjmp .L73
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2228               	 .loc 3 37 0
 2229 02ea E801      	 movw r28,r16
 2230 02ec 2197      	 sbiw r28,1
 2231               	.LVL84:
 2232 02ee CC0D      	 add r28,r12
 2233 02f0 DD1D      	 adc r29,r13
 2234               	.LVL85:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2235               	 .loc 3 44 0
 2236 02f2 E114      	 cp r14,__zero_reg__
 2237 02f4 F104      	 cpc r15,__zero_reg__
 2238 02f6 01F0      	 breq .L74
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2239               	 .loc 3 46 0
 2240 02f8 F701      	 movw r30,r14
 2241 02fa 8081      	 ld r24,Z
 2242 02fc 9181      	 ldd r25,Z+1
 2243               	.LVL86:
GAS LISTING  			page 116


 2244 02fe 081B      	 sub r16,r24
 2245 0300 190B      	 sbc r17,r25
 2246               	.LVL87:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2247               	 .loc 3 47 0
 2248 0302 C81B      	 sub r28,r24
 2249 0304 D90B      	 sbc r29,r25
 2250               	.LVL88:
 2251               	.L74:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2252               	 .loc 3 36 0 discriminator 1
 2253 0306 C12C      	 mov r12,__zero_reg__
 2254 0308 D12C      	 mov r13,__zero_reg__
 2255               	.LVL89:
 2256               	.L75:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2257               	 .loc 3 50 0 discriminator 1
 2258 030a 0115      	 cp r16,__zero_reg__
 2259 030c 1105      	 cpc r17,__zero_reg__
 2260 030e 01F0      	 breq .L85
 2261               	.LBB449:
 2262               	.LBB450:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 2263               	 .loc 2 360 0
 2264 0310 8091 E800 	 lds r24,232
 2265               	.LBE450:
 2266               	.LBE449:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2267               	 .loc 3 52 0
 2268 0314 85FD      	 sbrc r24,5
 2269 0316 00C0      	 rjmp .L76
 2270               	.LBB451:
 2271               	.LBB452:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 2272               	 .loc 2 471 0
 2273 0318 8091 E800 	 lds r24,232
 2274 031c 8B77      	 andi r24,lo8(123)
 2275 031e 8093 E800 	 sts 232,r24
 2276               	.LBE452:
 2277               	.LBE451:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2278               	 .loc 3 57 0
 2279 0322 0E94 0000 	 call USB_USBTask
 2280               	.LVL90:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2281               	 .loc 3 60 0
 2282 0326 E114      	 cp r14,__zero_reg__
 2283 0328 F104      	 cpc r15,__zero_reg__
 2284 032a 01F0      	 breq .L77
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2285               	 .loc 3 62 0
 2286 032c F701      	 movw r30,r14
 2287 032e 8081      	 ld r24,Z
 2288 0330 9181      	 ldd r25,Z+1
 2289 0332 8C0D      	 add r24,r12
 2290 0334 9D1D      	 adc r25,r13
 2291 0336 9183      	 std Z+1,r25
GAS LISTING  			page 117


 2292 0338 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2293               	 .loc 3 63 0
 2294 033a 85E0      	 ldi r24,lo8(5)
 2295 033c 00C0      	 rjmp .L73
 2296               	.L77:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2297               	 .loc 3 66 0
 2298 033e 0E94 0000 	 call Endpoint_WaitUntilReady
 2299               	.LVL91:
 2300 0342 8823      	 tst r24
 2301 0344 01F0      	 breq .L75
 2302 0346 00C0      	 rjmp .L73
 2303               	.LVL92:
 2304               	.L76:
 2305               	.LBB453:
 2306               	.LBB454:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 2307               	 .loc 2 542 0
 2308 0348 8091 F100 	 lds r24,241
 2309               	.LBE454:
 2310               	.LBE453:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 2311               	 .loc 3 71 0
 2312 034c 8883      	 st Y,r24
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 2313               	 .loc 3 72 0
 2314 034e 2197      	 sbiw r28,1
 2315               	.LVL93:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 2316               	 .loc 3 73 0
 2317 0350 0150      	 subi r16,1
 2318 0352 1109      	 sbc r17,__zero_reg__
 2319               	.LVL94:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 2320               	 .loc 3 74 0
 2321 0354 FFEF      	 ldi r31,-1
 2322 0356 CF1A      	 sub r12,r31
 2323 0358 DF0A      	 sbc r13,r31
 2324               	.LVL95:
 2325 035a 00C0      	 rjmp .L75
 2326               	.L85:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 2327               	 .loc 3 78 0
 2328 035c 80E0      	 ldi r24,0
 2329               	.LVL96:
 2330               	.L73:
 2331               	 
 2332               	 .loc 3 79 0
 2333 035e DF91      	 pop r29
 2334 0360 CF91      	 pop r28
 2335 0362 1F91      	 pop r17
 2336 0364 0F91      	 pop r16
 2337               	.LVL97:
 2338 0366 FF90      	 pop r15
 2339 0368 EF90      	 pop r14
 2340               	.LVL98:
GAS LISTING  			page 118


 2341 036a DF90      	 pop r13
 2342 036c CF90      	 pop r12
 2343 036e 0895      	 ret
 2344               	 .cfi_endproc
 2345               	.LFE85:
 2347               	.global Endpoint_Write_PStream_LE
 2349               	Endpoint_Write_PStream_LE:
 2350               	.LFB86:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2351               	 .loc 3 36 0
 2352               	 .cfi_startproc
 2353               	.LVL99:
 2354 0370 CF92      	 push r12
 2355               	.LCFI44:
 2356               	 .cfi_def_cfa_offset 3
 2357               	 .cfi_offset 12,-2
 2358 0372 DF92      	 push r13
 2359               	.LCFI45:
 2360               	 .cfi_def_cfa_offset 4
 2361               	 .cfi_offset 13,-3
 2362 0374 EF92      	 push r14
 2363               	.LCFI46:
 2364               	 .cfi_def_cfa_offset 5
 2365               	 .cfi_offset 14,-4
 2366 0376 FF92      	 push r15
 2367               	.LCFI47:
 2368               	 .cfi_def_cfa_offset 6
 2369               	 .cfi_offset 15,-5
 2370 0378 0F93      	 push r16
 2371               	.LCFI48:
 2372               	 .cfi_def_cfa_offset 7
 2373               	 .cfi_offset 16,-6
 2374 037a 1F93      	 push r17
 2375               	.LCFI49:
 2376               	 .cfi_def_cfa_offset 8
 2377               	 .cfi_offset 17,-7
 2378 037c CF93      	 push r28
 2379               	.LCFI50:
 2380               	 .cfi_def_cfa_offset 9
 2381               	 .cfi_offset 28,-8
 2382 037e DF93      	 push r29
 2383               	.LCFI51:
 2384               	 .cfi_def_cfa_offset 10
 2385               	 .cfi_offset 29,-9
 2386               	 
 2387               	 
 2388               	 
 2389               	.L__stack_usage =8
 2390 0380 7C01      	 movw r14,r24
 2391 0382 8B01      	 movw r16,r22
 2392 0384 EA01      	 movw r28,r20
 2393               	.LVL100:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2394               	 .loc 3 41 0
 2395 0386 0E94 0000 	 call Endpoint_WaitUntilReady
 2396               	.LVL101:
 2397 038a 8111      	 cpse r24,__zero_reg__
GAS LISTING  			page 119


 2398 038c 00C0      	 rjmp .L87
 2399               	.LVL102:
 2400               	.LBB464:
 2401               	.LBB465:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2402               	 .loc 3 44 0
 2403 038e 2097      	 sbiw r28,0
 2404 0390 01F0      	 breq .L88
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2405               	 .loc 3 46 0
 2406 0392 8881      	 ld r24,Y
 2407 0394 9981      	 ldd r25,Y+1
 2408               	.LVL103:
 2409 0396 081B      	 sub r16,r24
 2410 0398 190B      	 sbc r17,r25
 2411               	.LVL104:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2412               	 .loc 3 47 0
 2413 039a E80E      	 add r14,r24
 2414 039c F91E      	 adc r15,r25
 2415               	.LVL105:
 2416               	.L88:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2417               	 .loc 3 37 0
 2418 039e C12C      	 mov r12,__zero_reg__
 2419 03a0 D12C      	 mov r13,__zero_reg__
 2420               	.L89:
 2421               	.LVL106:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2422               	 .loc 3 50 0
 2423 03a2 0115      	 cp r16,__zero_reg__
 2424 03a4 1105      	 cpc r17,__zero_reg__
 2425 03a6 01F0      	 breq .L98
 2426               	.LBB466:
 2427               	.LBB467:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 2428               	 .loc 2 360 0
 2429 03a8 8091 E800 	 lds r24,232
 2430               	.LBE467:
 2431               	.LBE466:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2432               	 .loc 3 52 0
 2433 03ac 85FD      	 sbrc r24,5
 2434 03ae 00C0      	 rjmp .L90
 2435               	.LBB468:
 2436               	.LBB469:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 2437               	 .loc 2 456 0
 2438 03b0 8091 E800 	 lds r24,232
 2439 03b4 8E77      	 andi r24,lo8(126)
 2440 03b6 8093 E800 	 sts 232,r24
 2441               	.LBE469:
 2442               	.LBE468:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2443               	 .loc 3 57 0
 2444 03ba 0E94 0000 	 call USB_USBTask
 2445               	.LVL107:
GAS LISTING  			page 120


  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2446               	 .loc 3 60 0
 2447 03be 2097      	 sbiw r28,0
 2448 03c0 01F0      	 breq .L91
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2449               	 .loc 3 62 0
 2450 03c2 8881      	 ld r24,Y
 2451 03c4 9981      	 ldd r25,Y+1
 2452 03c6 8C0D      	 add r24,r12
 2453 03c8 9D1D      	 adc r25,r13
 2454 03ca 9983      	 std Y+1,r25
 2455 03cc 8883      	 st Y,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2456               	 .loc 3 63 0
 2457 03ce 85E0      	 ldi r24,lo8(5)
 2458 03d0 00C0      	 rjmp .L87
 2459               	.L91:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2460               	 .loc 3 66 0
 2461 03d2 0E94 0000 	 call Endpoint_WaitUntilReady
 2462               	.LVL108:
 2463 03d6 8823      	 tst r24
 2464 03d8 01F0      	 breq .L89
 2465 03da 00C0      	 rjmp .L87
 2466               	.LVL109:
 2467               	.L90:
 2468               	.LBB470:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 2469               	 .loc 3 71 0
 2470 03dc F701      	 movw r30,r14
 2471               	 
 2472               	 
 2473 03de 8491      	 lpm r24,Z
 2474               	 
 2475               	 
 2476               	.LVL110:
 2477               	 
 2478               	.LBE470:
 2479               	.LBB471:
 2480               	.LBB472:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 2481               	 .loc 2 554 0
 2482 03e0 8093 F100 	 sts 241,r24
 2483               	.LBE472:
 2484               	.LBE471:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 2485               	 .loc 3 72 0
 2486 03e4 FFEF      	 ldi r31,-1
 2487 03e6 EF1A      	 sub r14,r31
 2488 03e8 FF0A      	 sbc r15,r31
 2489               	.LVL111:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 2490               	 .loc 3 73 0
 2491 03ea 0150      	 subi r16,1
 2492 03ec 1109      	 sbc r17,__zero_reg__
 2493               	.LVL112:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
GAS LISTING  			page 121


 2494               	 .loc 3 74 0
 2495 03ee 8FEF      	 ldi r24,-1
 2496 03f0 C81A      	 sub r12,r24
 2497 03f2 D80A      	 sbc r13,r24
 2498               	.LVL113:
 2499 03f4 00C0      	 rjmp .L89
 2500               	.LVL114:
 2501               	.L98:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 2502               	 .loc 3 78 0
 2503 03f6 80E0      	 ldi r24,0
 2504               	.LVL115:
 2505               	.L87:
 2506               	 
 2507               	.LBE465:
 2508               	.LBE464:
 2509               	 .loc 3 79 0
 2510 03f8 DF91      	 pop r29
 2511 03fa CF91      	 pop r28
 2512               	.LVL116:
 2513 03fc 1F91      	 pop r17
 2514 03fe 0F91      	 pop r16
 2515 0400 FF90      	 pop r15
 2516 0402 EF90      	 pop r14
 2517 0404 DF90      	 pop r13
 2518 0406 CF90      	 pop r12
 2519 0408 0895      	 ret
 2520               	 .cfi_endproc
 2521               	.LFE86:
 2523               	.global Endpoint_Write_PStream_BE
 2525               	Endpoint_Write_PStream_BE:
 2526               	.LFB87:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2527               	 .loc 3 36 0
 2528               	 .cfi_startproc
 2529               	.LVL117:
 2530 040a CF92      	 push r12
 2531               	.LCFI52:
 2532               	 .cfi_def_cfa_offset 3
 2533               	 .cfi_offset 12,-2
 2534 040c DF92      	 push r13
 2535               	.LCFI53:
 2536               	 .cfi_def_cfa_offset 4
 2537               	 .cfi_offset 13,-3
 2538 040e EF92      	 push r14
 2539               	.LCFI54:
 2540               	 .cfi_def_cfa_offset 5
 2541               	 .cfi_offset 14,-4
 2542 0410 FF92      	 push r15
 2543               	.LCFI55:
 2544               	 .cfi_def_cfa_offset 6
 2545               	 .cfi_offset 15,-5
 2546 0412 0F93      	 push r16
 2547               	.LCFI56:
 2548               	 .cfi_def_cfa_offset 7
 2549               	 .cfi_offset 16,-6
 2550 0414 1F93      	 push r17
GAS LISTING  			page 122


 2551               	.LCFI57:
 2552               	 .cfi_def_cfa_offset 8
 2553               	 .cfi_offset 17,-7
 2554 0416 CF93      	 push r28
 2555               	.LCFI58:
 2556               	 .cfi_def_cfa_offset 9
 2557               	 .cfi_offset 28,-8
 2558 0418 DF93      	 push r29
 2559               	.LCFI59:
 2560               	 .cfi_def_cfa_offset 10
 2561               	 .cfi_offset 29,-9
 2562               	 
 2563               	 
 2564               	 
 2565               	.L__stack_usage =8
 2566 041a 6C01      	 movw r12,r24
 2567 041c 8B01      	 movw r16,r22
 2568 041e 7A01      	 movw r14,r20
 2569               	.LVL118:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2570               	 .loc 3 41 0
 2571 0420 0E94 0000 	 call Endpoint_WaitUntilReady
 2572               	.LVL119:
 2573 0424 8111      	 cpse r24,__zero_reg__
 2574 0426 00C0      	 rjmp .L100
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2575               	 .loc 3 37 0
 2576 0428 E801      	 movw r28,r16
 2577 042a 2197      	 sbiw r28,1
 2578               	.LVL120:
 2579 042c CC0D      	 add r28,r12
 2580 042e DD1D      	 adc r29,r13
 2581               	.LVL121:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2582               	 .loc 3 44 0
 2583 0430 E114      	 cp r14,__zero_reg__
 2584 0432 F104      	 cpc r15,__zero_reg__
 2585 0434 01F0      	 breq .L101
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2586               	 .loc 3 46 0
 2587 0436 F701      	 movw r30,r14
 2588 0438 8081      	 ld r24,Z
 2589 043a 9181      	 ldd r25,Z+1
 2590               	.LVL122:
 2591 043c 081B      	 sub r16,r24
 2592 043e 190B      	 sbc r17,r25
 2593               	.LVL123:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2594               	 .loc 3 47 0
 2595 0440 C81B      	 sub r28,r24
 2596 0442 D90B      	 sbc r29,r25
 2597               	.LVL124:
 2598               	.L101:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2599               	 .loc 3 36 0 discriminator 1
 2600 0444 C12C      	 mov r12,__zero_reg__
 2601 0446 D12C      	 mov r13,__zero_reg__
GAS LISTING  			page 123


 2602               	.LVL125:
 2603               	.L102:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2604               	 .loc 3 50 0 discriminator 1
 2605 0448 0115      	 cp r16,__zero_reg__
 2606 044a 1105      	 cpc r17,__zero_reg__
 2607 044c 01F0      	 breq .L112
 2608               	.LBB473:
 2609               	.LBB474:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 2610               	 .loc 2 360 0
 2611 044e 8091 E800 	 lds r24,232
 2612               	.LBE474:
 2613               	.LBE473:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2614               	 .loc 3 52 0
 2615 0452 85FD      	 sbrc r24,5
 2616 0454 00C0      	 rjmp .L103
 2617               	.LBB475:
 2618               	.LBB476:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 2619               	 .loc 2 456 0
 2620 0456 8091 E800 	 lds r24,232
 2621 045a 8E77      	 andi r24,lo8(126)
 2622 045c 8093 E800 	 sts 232,r24
 2623               	.LBE476:
 2624               	.LBE475:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2625               	 .loc 3 57 0
 2626 0460 0E94 0000 	 call USB_USBTask
 2627               	.LVL126:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2628               	 .loc 3 60 0
 2629 0464 E114      	 cp r14,__zero_reg__
 2630 0466 F104      	 cpc r15,__zero_reg__
 2631 0468 01F0      	 breq .L104
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2632               	 .loc 3 62 0
 2633 046a F701      	 movw r30,r14
 2634 046c 8081      	 ld r24,Z
 2635 046e 9181      	 ldd r25,Z+1
 2636 0470 8C0D      	 add r24,r12
 2637 0472 9D1D      	 adc r25,r13
 2638 0474 9183      	 std Z+1,r25
 2639 0476 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2640               	 .loc 3 63 0
 2641 0478 85E0      	 ldi r24,lo8(5)
 2642 047a 00C0      	 rjmp .L100
 2643               	.L104:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2644               	 .loc 3 66 0
 2645 047c 0E94 0000 	 call Endpoint_WaitUntilReady
 2646               	.LVL127:
 2647 0480 8823      	 tst r24
 2648 0482 01F0      	 breq .L102
 2649 0484 00C0      	 rjmp .L100
GAS LISTING  			page 124


 2650               	.LVL128:
 2651               	.L103:
 2652               	.LBB477:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 2653               	 .loc 3 71 0
 2654 0486 FE01      	 movw r30,r28
 2655               	 
 2656               	 
 2657 0488 8491      	 lpm r24,Z
 2658               	 
 2659               	 
 2660               	.LVL129:
 2661               	 
 2662               	.LBE477:
 2663               	.LBB478:
 2664               	.LBB479:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 2665               	 .loc 2 554 0
 2666 048a 8093 F100 	 sts 241,r24
 2667               	.LBE479:
 2668               	.LBE478:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 2669               	 .loc 3 72 0
 2670 048e 2197      	 sbiw r28,1
 2671               	.LVL130:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 2672               	 .loc 3 73 0
 2673 0490 0150      	 subi r16,1
 2674 0492 1109      	 sbc r17,__zero_reg__
 2675               	.LVL131:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 2676               	 .loc 3 74 0
 2677 0494 FFEF      	 ldi r31,-1
 2678 0496 CF1A      	 sub r12,r31
 2679 0498 DF0A      	 sbc r13,r31
 2680               	.LVL132:
 2681 049a 00C0      	 rjmp .L102
 2682               	.LVL133:
 2683               	.L112:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 2684               	 .loc 3 78 0
 2685 049c 80E0      	 ldi r24,0
 2686               	.LVL134:
 2687               	.L100:
 2688               	 
 2689               	 .loc 3 79 0
 2690 049e DF91      	 pop r29
 2691 04a0 CF91      	 pop r28
 2692 04a2 1F91      	 pop r17
 2693 04a4 0F91      	 pop r16
 2694               	.LVL135:
 2695 04a6 FF90      	 pop r15
 2696 04a8 EF90      	 pop r14
 2697               	.LVL136:
 2698 04aa DF90      	 pop r13
 2699 04ac CF90      	 pop r12
 2700 04ae 0895      	 ret
GAS LISTING  			page 125


 2701               	 .cfi_endproc
 2702               	.LFE87:
 2704               	.global Endpoint_Write_EStream_LE
 2706               	Endpoint_Write_EStream_LE:
 2707               	.LFB88:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2708               	 .loc 3 36 0
 2709               	 .cfi_startproc
 2710               	.LVL137:
 2711 04b0 CF92      	 push r12
 2712               	.LCFI60:
 2713               	 .cfi_def_cfa_offset 3
 2714               	 .cfi_offset 12,-2
 2715 04b2 DF92      	 push r13
 2716               	.LCFI61:
 2717               	 .cfi_def_cfa_offset 4
 2718               	 .cfi_offset 13,-3
 2719 04b4 EF92      	 push r14
 2720               	.LCFI62:
 2721               	 .cfi_def_cfa_offset 5
 2722               	 .cfi_offset 14,-4
 2723 04b6 FF92      	 push r15
 2724               	.LCFI63:
 2725               	 .cfi_def_cfa_offset 6
 2726               	 .cfi_offset 15,-5
 2727 04b8 0F93      	 push r16
 2728               	.LCFI64:
 2729               	 .cfi_def_cfa_offset 7
 2730               	 .cfi_offset 16,-6
 2731 04ba 1F93      	 push r17
 2732               	.LCFI65:
 2733               	 .cfi_def_cfa_offset 8
 2734               	 .cfi_offset 17,-7
 2735 04bc CF93      	 push r28
 2736               	.LCFI66:
 2737               	 .cfi_def_cfa_offset 9
 2738               	 .cfi_offset 28,-8
 2739 04be DF93      	 push r29
 2740               	.LCFI67:
 2741               	 .cfi_def_cfa_offset 10
 2742               	 .cfi_offset 29,-9
 2743               	 
 2744               	 
 2745               	 
 2746               	.L__stack_usage =8
 2747 04c0 7C01      	 movw r14,r24
 2748 04c2 8B01      	 movw r16,r22
 2749 04c4 EA01      	 movw r28,r20
 2750               	.LVL138:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2751               	 .loc 3 41 0
 2752 04c6 0E94 0000 	 call Endpoint_WaitUntilReady
 2753               	.LVL139:
 2754 04ca 8111      	 cpse r24,__zero_reg__
 2755 04cc 00C0      	 rjmp .L114
 2756               	.LVL140:
 2757               	.LBB488:
GAS LISTING  			page 126


 2758               	.LBB489:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2759               	 .loc 3 44 0
 2760 04ce 2097      	 sbiw r28,0
 2761 04d0 01F0      	 breq .L115
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2762               	 .loc 3 46 0
 2763 04d2 8881      	 ld r24,Y
 2764 04d4 9981      	 ldd r25,Y+1
 2765               	.LVL141:
 2766 04d6 081B      	 sub r16,r24
 2767 04d8 190B      	 sbc r17,r25
 2768               	.LVL142:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2769               	 .loc 3 47 0
 2770 04da E80E      	 add r14,r24
 2771 04dc F91E      	 adc r15,r25
 2772               	.LVL143:
 2773               	.L115:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2774               	 .loc 3 37 0
 2775 04de C12C      	 mov r12,__zero_reg__
 2776 04e0 D12C      	 mov r13,__zero_reg__
 2777               	.L116:
 2778               	.LVL144:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2779               	 .loc 3 50 0
 2780 04e2 0115      	 cp r16,__zero_reg__
 2781 04e4 1105      	 cpc r17,__zero_reg__
 2782 04e6 01F0      	 breq .L125
 2783               	.LBB490:
 2784               	.LBB491:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 2785               	 .loc 2 360 0
 2786 04e8 8091 E800 	 lds r24,232
 2787               	.LBE491:
 2788               	.LBE490:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2789               	 .loc 3 52 0
 2790 04ec 85FD      	 sbrc r24,5
 2791 04ee 00C0      	 rjmp .L117
 2792               	.LBB492:
 2793               	.LBB493:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 2794               	 .loc 2 456 0
 2795 04f0 8091 E800 	 lds r24,232
 2796 04f4 8E77      	 andi r24,lo8(126)
 2797 04f6 8093 E800 	 sts 232,r24
 2798               	.LBE493:
 2799               	.LBE492:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2800               	 .loc 3 57 0
 2801 04fa 0E94 0000 	 call USB_USBTask
 2802               	.LVL145:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2803               	 .loc 3 60 0
 2804 04fe 2097      	 sbiw r28,0
GAS LISTING  			page 127


 2805 0500 01F0      	 breq .L118
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2806               	 .loc 3 62 0
 2807 0502 8881      	 ld r24,Y
 2808 0504 9981      	 ldd r25,Y+1
 2809 0506 8C0D      	 add r24,r12
 2810 0508 9D1D      	 adc r25,r13
 2811 050a 9983      	 std Y+1,r25
 2812 050c 8883      	 st Y,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2813               	 .loc 3 63 0
 2814 050e 85E0      	 ldi r24,lo8(5)
 2815 0510 00C0      	 rjmp .L114
 2816               	.L118:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2817               	 .loc 3 66 0
 2818 0512 0E94 0000 	 call Endpoint_WaitUntilReady
 2819               	.LVL146:
 2820 0516 8823      	 tst r24
 2821 0518 01F0      	 breq .L116
 2822 051a 00C0      	 rjmp .L114
 2823               	.LVL147:
 2824               	.L117:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 2825               	 .loc 3 71 0
 2826 051c C701      	 movw r24,r14
 2827 051e 0E94 0000 	 call __eerd_byte_m32u2
 2828               	.LVL148:
 2829               	.LBB494:
 2830               	.LBB495:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 2831               	 .loc 2 554 0
 2832 0522 8093 F100 	 sts 241,r24
 2833               	.LBE495:
 2834               	.LBE494:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 2835               	 .loc 3 72 0
 2836 0526 8FEF      	 ldi r24,-1
 2837 0528 E81A      	 sub r14,r24
 2838 052a F80A      	 sbc r15,r24
 2839               	.LVL149:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 2840               	 .loc 3 73 0
 2841 052c 0150      	 subi r16,1
 2842 052e 1109      	 sbc r17,__zero_reg__
 2843               	.LVL150:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 2844               	 .loc 3 74 0
 2845 0530 8FEF      	 ldi r24,-1
 2846 0532 C81A      	 sub r12,r24
 2847 0534 D80A      	 sbc r13,r24
 2848               	.LVL151:
 2849 0536 00C0      	 rjmp .L116
 2850               	.LVL152:
 2851               	.L125:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 2852               	 .loc 3 78 0
GAS LISTING  			page 128


 2853 0538 80E0      	 ldi r24,0
 2854               	.LVL153:
 2855               	.L114:
 2856               	 
 2857               	.LBE489:
 2858               	.LBE488:
 2859               	 .loc 3 79 0
 2860 053a DF91      	 pop r29
 2861 053c CF91      	 pop r28
 2862               	.LVL154:
 2863 053e 1F91      	 pop r17
 2864 0540 0F91      	 pop r16
 2865 0542 FF90      	 pop r15
 2866 0544 EF90      	 pop r14
 2867 0546 DF90      	 pop r13
 2868 0548 CF90      	 pop r12
 2869 054a 0895      	 ret
 2870               	 .cfi_endproc
 2871               	.LFE88:
 2873               	.global Endpoint_Write_EStream_BE
 2875               	Endpoint_Write_EStream_BE:
 2876               	.LFB89:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2877               	 .loc 3 36 0
 2878               	 .cfi_startproc
 2879               	.LVL155:
 2880 054c CF92      	 push r12
 2881               	.LCFI68:
 2882               	 .cfi_def_cfa_offset 3
 2883               	 .cfi_offset 12,-2
 2884 054e DF92      	 push r13
 2885               	.LCFI69:
 2886               	 .cfi_def_cfa_offset 4
 2887               	 .cfi_offset 13,-3
 2888 0550 EF92      	 push r14
 2889               	.LCFI70:
 2890               	 .cfi_def_cfa_offset 5
 2891               	 .cfi_offset 14,-4
 2892 0552 FF92      	 push r15
 2893               	.LCFI71:
 2894               	 .cfi_def_cfa_offset 6
 2895               	 .cfi_offset 15,-5
 2896 0554 0F93      	 push r16
 2897               	.LCFI72:
 2898               	 .cfi_def_cfa_offset 7
 2899               	 .cfi_offset 16,-6
 2900 0556 1F93      	 push r17
 2901               	.LCFI73:
 2902               	 .cfi_def_cfa_offset 8
 2903               	 .cfi_offset 17,-7
 2904 0558 CF93      	 push r28
 2905               	.LCFI74:
 2906               	 .cfi_def_cfa_offset 9
 2907               	 .cfi_offset 28,-8
 2908 055a DF93      	 push r29
 2909               	.LCFI75:
 2910               	 .cfi_def_cfa_offset 10
GAS LISTING  			page 129


 2911               	 .cfi_offset 29,-9
 2912               	 
 2913               	 
 2914               	 
 2915               	.L__stack_usage =8
 2916 055c 6C01      	 movw r12,r24
 2917 055e 8B01      	 movw r16,r22
 2918 0560 7A01      	 movw r14,r20
 2919               	.LVL156:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 2920               	 .loc 3 41 0
 2921 0562 0E94 0000 	 call Endpoint_WaitUntilReady
 2922               	.LVL157:
 2923 0566 8111      	 cpse r24,__zero_reg__
 2924 0568 00C0      	 rjmp .L127
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 2925               	 .loc 3 37 0
 2926 056a E801      	 movw r28,r16
 2927 056c 2197      	 sbiw r28,1
 2928               	.LVL158:
 2929 056e CC0D      	 add r28,r12
 2930 0570 DD1D      	 adc r29,r13
 2931               	.LVL159:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 2932               	 .loc 3 44 0
 2933 0572 E114      	 cp r14,__zero_reg__
 2934 0574 F104      	 cpc r15,__zero_reg__
 2935 0576 01F0      	 breq .L128
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 2936               	 .loc 3 46 0
 2937 0578 F701      	 movw r30,r14
 2938 057a 8081      	 ld r24,Z
 2939 057c 9181      	 ldd r25,Z+1
 2940               	.LVL160:
 2941 057e 081B      	 sub r16,r24
 2942 0580 190B      	 sbc r17,r25
 2943               	.LVL161:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 2944               	 .loc 3 47 0
 2945 0582 C81B      	 sub r28,r24
 2946 0584 D90B      	 sbc r29,r25
 2947               	.LVL162:
 2948               	.L128:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 2949               	 .loc 3 36 0 discriminator 1
 2950 0586 C12C      	 mov r12,__zero_reg__
 2951 0588 D12C      	 mov r13,__zero_reg__
 2952               	.LVL163:
 2953               	.L129:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 2954               	 .loc 3 50 0 discriminator 1
 2955 058a 0115      	 cp r16,__zero_reg__
 2956 058c 1105      	 cpc r17,__zero_reg__
 2957 058e 01F0      	 breq .L139
 2958               	.LBB496:
 2959               	.LBB497:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
GAS LISTING  			page 130


 2960               	 .loc 2 360 0
 2961 0590 8091 E800 	 lds r24,232
 2962               	.LBE497:
 2963               	.LBE496:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 2964               	 .loc 3 52 0
 2965 0594 85FD      	 sbrc r24,5
 2966 0596 00C0      	 rjmp .L130
 2967               	.LBB498:
 2968               	.LBB499:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 2969               	 .loc 2 456 0
 2970 0598 8091 E800 	 lds r24,232
 2971 059c 8E77      	 andi r24,lo8(126)
 2972 059e 8093 E800 	 sts 232,r24
 2973               	.LBE499:
 2974               	.LBE498:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 2975               	 .loc 3 57 0
 2976 05a2 0E94 0000 	 call USB_USBTask
 2977               	.LVL164:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 2978               	 .loc 3 60 0
 2979 05a6 E114      	 cp r14,__zero_reg__
 2980 05a8 F104      	 cpc r15,__zero_reg__
 2981 05aa 01F0      	 breq .L131
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 2982               	 .loc 3 62 0
 2983 05ac F701      	 movw r30,r14
 2984 05ae 8081      	 ld r24,Z
 2985 05b0 9181      	 ldd r25,Z+1
 2986 05b2 8C0D      	 add r24,r12
 2987 05b4 9D1D      	 adc r25,r13
 2988 05b6 9183      	 std Z+1,r25
 2989 05b8 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 2990               	 .loc 3 63 0
 2991 05ba 85E0      	 ldi r24,lo8(5)
 2992 05bc 00C0      	 rjmp .L127
 2993               	.L131:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 2994               	 .loc 3 66 0
 2995 05be 0E94 0000 	 call Endpoint_WaitUntilReady
 2996               	.LVL165:
 2997 05c2 8823      	 tst r24
 2998 05c4 01F0      	 breq .L129
 2999 05c6 00C0      	 rjmp .L127
 3000               	.LVL166:
 3001               	.L130:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 3002               	 .loc 3 71 0
 3003 05c8 CE01      	 movw r24,r28
 3004 05ca 0E94 0000 	 call __eerd_byte_m32u2
 3005               	.LVL167:
 3006               	.LBB500:
 3007               	.LBB501:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
GAS LISTING  			page 131


 3008               	 .loc 2 554 0
 3009 05ce 8093 F100 	 sts 241,r24
 3010               	.LBE501:
 3011               	.LBE500:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 3012               	 .loc 3 72 0
 3013 05d2 2197      	 sbiw r28,1
 3014               	.LVL168:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 3015               	 .loc 3 73 0
 3016 05d4 0150      	 subi r16,1
 3017 05d6 1109      	 sbc r17,__zero_reg__
 3018               	.LVL169:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 3019               	 .loc 3 74 0
 3020 05d8 FFEF      	 ldi r31,-1
 3021 05da CF1A      	 sub r12,r31
 3022 05dc DF0A      	 sbc r13,r31
 3023               	.LVL170:
 3024 05de 00C0      	 rjmp .L129
 3025               	.LVL171:
 3026               	.L139:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 3027               	 .loc 3 78 0
 3028 05e0 80E0      	 ldi r24,0
 3029               	.LVL172:
 3030               	.L127:
 3031               	 
 3032               	 .loc 3 79 0
 3033 05e2 DF91      	 pop r29
 3034 05e4 CF91      	 pop r28
 3035 05e6 1F91      	 pop r17
 3036 05e8 0F91      	 pop r16
 3037               	.LVL173:
 3038 05ea FF90      	 pop r15
 3039 05ec EF90      	 pop r14
 3040               	.LVL174:
 3041 05ee DF90      	 pop r13
 3042 05f0 CF90      	 pop r12
 3043 05f2 0895      	 ret
 3044               	 .cfi_endproc
 3045               	.LFE89:
 3047               	.global Endpoint_Read_EStream_LE
 3049               	Endpoint_Read_EStream_LE:
 3050               	.LFB90:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 3051               	 .loc 3 36 0
 3052               	 .cfi_startproc
 3053               	.LVL175:
 3054 05f4 CF92      	 push r12
 3055               	.LCFI76:
 3056               	 .cfi_def_cfa_offset 3
 3057               	 .cfi_offset 12,-2
 3058 05f6 DF92      	 push r13
 3059               	.LCFI77:
 3060               	 .cfi_def_cfa_offset 4
 3061               	 .cfi_offset 13,-3
GAS LISTING  			page 132


 3062 05f8 EF92      	 push r14
 3063               	.LCFI78:
 3064               	 .cfi_def_cfa_offset 5
 3065               	 .cfi_offset 14,-4
 3066 05fa FF92      	 push r15
 3067               	.LCFI79:
 3068               	 .cfi_def_cfa_offset 6
 3069               	 .cfi_offset 15,-5
 3070 05fc 0F93      	 push r16
 3071               	.LCFI80:
 3072               	 .cfi_def_cfa_offset 7
 3073               	 .cfi_offset 16,-6
 3074 05fe 1F93      	 push r17
 3075               	.LCFI81:
 3076               	 .cfi_def_cfa_offset 8
 3077               	 .cfi_offset 17,-7
 3078 0600 CF93      	 push r28
 3079               	.LCFI82:
 3080               	 .cfi_def_cfa_offset 9
 3081               	 .cfi_offset 28,-8
 3082 0602 DF93      	 push r29
 3083               	.LCFI83:
 3084               	 .cfi_def_cfa_offset 10
 3085               	 .cfi_offset 29,-9
 3086               	 
 3087               	 
 3088               	 
 3089               	.L__stack_usage =8
 3090 0604 7C01      	 movw r14,r24
 3091 0606 EB01      	 movw r28,r22
 3092 0608 8A01      	 movw r16,r20
 3093               	.LVL176:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 3094               	 .loc 3 41 0
 3095 060a 0E94 0000 	 call Endpoint_WaitUntilReady
 3096               	.LVL177:
 3097 060e 8111      	 cpse r24,__zero_reg__
 3098 0610 00C0      	 rjmp .L141
 3099               	.LVL178:
 3100               	.LBB510:
 3101               	.LBB511:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 3102               	 .loc 3 44 0
 3103 0612 0115      	 cp r16,__zero_reg__
 3104 0614 1105      	 cpc r17,__zero_reg__
 3105 0616 01F0      	 breq .L142
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 3106               	 .loc 3 46 0
 3107 0618 F801      	 movw r30,r16
 3108 061a 8081      	 ld r24,Z
 3109 061c 9181      	 ldd r25,Z+1
 3110               	.LVL179:
 3111 061e C81B      	 sub r28,r24
 3112 0620 D90B      	 sbc r29,r25
 3113               	.LVL180:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 3114               	 .loc 3 47 0
GAS LISTING  			page 133


 3115 0622 E80E      	 add r14,r24
 3116 0624 F91E      	 adc r15,r25
 3117               	.LVL181:
 3118               	.L142:
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 3119               	 .loc 3 37 0
 3120 0626 C12C      	 mov r12,__zero_reg__
 3121 0628 D12C      	 mov r13,__zero_reg__
 3122               	.L143:
 3123               	.LVL182:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 3124               	 .loc 3 50 0
 3125 062a 2097      	 sbiw r28,0
 3126 062c 01F0      	 breq .L152
 3127               	.LBB512:
 3128               	.LBB513:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 3129               	 .loc 2 360 0
 3130 062e 8091 E800 	 lds r24,232
 3131               	.LBE513:
 3132               	.LBE512:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 3133               	 .loc 3 52 0
 3134 0632 85FD      	 sbrc r24,5
 3135 0634 00C0      	 rjmp .L144
 3136               	.LBB514:
 3137               	.LBB515:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 3138               	 .loc 2 471 0
 3139 0636 8091 E800 	 lds r24,232
 3140 063a 8B77      	 andi r24,lo8(123)
 3141 063c 8093 E800 	 sts 232,r24
 3142               	.LBE515:
 3143               	.LBE514:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 3144               	 .loc 3 57 0
 3145 0640 0E94 0000 	 call USB_USBTask
 3146               	.LVL183:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 3147               	 .loc 3 60 0
 3148 0644 0115      	 cp r16,__zero_reg__
 3149 0646 1105      	 cpc r17,__zero_reg__
 3150 0648 01F0      	 breq .L145
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 3151               	 .loc 3 62 0
 3152 064a F801      	 movw r30,r16
 3153 064c 8081      	 ld r24,Z
 3154 064e 9181      	 ldd r25,Z+1
 3155 0650 8C0D      	 add r24,r12
 3156 0652 9D1D      	 adc r25,r13
 3157 0654 9183      	 std Z+1,r25
 3158 0656 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 3159               	 .loc 3 63 0
 3160 0658 85E0      	 ldi r24,lo8(5)
 3161 065a 00C0      	 rjmp .L141
 3162               	.L145:
GAS LISTING  			page 134


  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 3163               	 .loc 3 66 0
 3164 065c 0E94 0000 	 call Endpoint_WaitUntilReady
 3165               	.LVL184:
 3166 0660 8823      	 tst r24
 3167 0662 01F0      	 breq .L143
 3168 0664 00C0      	 rjmp .L141
 3169               	.LVL185:
 3170               	.L144:
 3171               	.LBB516:
 3172               	.LBB517:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 3173               	 .loc 2 542 0
 3174 0666 6091 F100 	 lds r22,241
 3175               	.LBE517:
 3176               	.LBE516:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 3177               	 .loc 3 71 0
 3178 066a C701      	 movw r24,r14
 3179 066c 0E94 0000 	 call __eeupd_byte_m32u2
 3180               	.LVL186:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 3181               	 .loc 3 72 0
 3182 0670 FFEF      	 ldi r31,-1
 3183 0672 EF1A      	 sub r14,r31
 3184 0674 FF0A      	 sbc r15,r31
 3185               	.LVL187:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 3186               	 .loc 3 73 0
 3187 0676 2197      	 sbiw r28,1
 3188               	.LVL188:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 3189               	 .loc 3 74 0
 3190 0678 8FEF      	 ldi r24,-1
 3191 067a C81A      	 sub r12,r24
 3192 067c D80A      	 sbc r13,r24
 3193               	.LVL189:
 3194 067e 00C0      	 rjmp .L143
 3195               	.L152:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 3196               	 .loc 3 78 0
 3197 0680 80E0      	 ldi r24,0
 3198               	.LVL190:
 3199               	.L141:
 3200               	 
 3201               	.LBE511:
 3202               	.LBE510:
 3203               	 .loc 3 79 0
 3204 0682 DF91      	 pop r29
 3205 0684 CF91      	 pop r28
 3206 0686 1F91      	 pop r17
 3207 0688 0F91      	 pop r16
 3208               	.LVL191:
 3209 068a FF90      	 pop r15
 3210 068c EF90      	 pop r14
 3211 068e DF90      	 pop r13
 3212 0690 CF90      	 pop r12
GAS LISTING  			page 135


 3213 0692 0895      	 ret
 3214               	 .cfi_endproc
 3215               	.LFE90:
 3217               	.global Endpoint_Read_EStream_BE
 3219               	Endpoint_Read_EStream_BE:
 3220               	.LFB91:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 3221               	 .loc 3 36 0
 3222               	 .cfi_startproc
 3223               	.LVL192:
 3224 0694 CF92      	 push r12
 3225               	.LCFI84:
 3226               	 .cfi_def_cfa_offset 3
 3227               	 .cfi_offset 12,-2
 3228 0696 DF92      	 push r13
 3229               	.LCFI85:
 3230               	 .cfi_def_cfa_offset 4
 3231               	 .cfi_offset 13,-3
 3232 0698 EF92      	 push r14
 3233               	.LCFI86:
 3234               	 .cfi_def_cfa_offset 5
 3235               	 .cfi_offset 14,-4
 3236 069a FF92      	 push r15
 3237               	.LCFI87:
 3238               	 .cfi_def_cfa_offset 6
 3239               	 .cfi_offset 15,-5
 3240 069c 0F93      	 push r16
 3241               	.LCFI88:
 3242               	 .cfi_def_cfa_offset 7
 3243               	 .cfi_offset 16,-6
 3244 069e 1F93      	 push r17
 3245               	.LCFI89:
 3246               	 .cfi_def_cfa_offset 8
 3247               	 .cfi_offset 17,-7
 3248 06a0 CF93      	 push r28
 3249               	.LCFI90:
 3250               	 .cfi_def_cfa_offset 9
 3251               	 .cfi_offset 28,-8
 3252 06a2 DF93      	 push r29
 3253               	.LCFI91:
 3254               	 .cfi_def_cfa_offset 10
 3255               	 .cfi_offset 29,-9
 3256               	 
 3257               	 
 3258               	 
 3259               	.L__stack_usage =8
 3260 06a4 6C01      	 movw r12,r24
 3261 06a6 8B01      	 movw r16,r22
 3262 06a8 7A01      	 movw r14,r20
 3263               	.LVL193:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if ((ErrorCode = Endpoint_WaitUntilReady()))
 3264               	 .loc 3 41 0
 3265 06aa 0E94 0000 	 call Endpoint_WaitUntilReady
 3266               	.LVL194:
 3267 06ae 8111      	 cpse r24,__zero_reg__
 3268 06b0 00C0      	 rjmp .L154
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	uint8_t* DataStream      = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
GAS LISTING  			page 136


 3269               	 .loc 3 37 0
 3270 06b2 E801      	 movw r28,r16
 3271 06b4 2197      	 sbiw r28,1
 3272               	.LVL195:
 3273 06b6 CC0D      	 add r28,r12
 3274 06b8 DD1D      	 adc r29,r13
 3275               	.LVL196:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	if (BytesProcessed != NULL)
 3276               	 .loc 3 44 0
 3277 06ba E114      	 cp r14,__zero_reg__
 3278 06bc F104      	 cpc r15,__zero_reg__
 3279 06be 01F0      	 breq .L155
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		Length -= *BytesProcessed;
 3280               	 .loc 3 46 0
 3281 06c0 F701      	 movw r30,r14
 3282 06c2 8081      	 ld r24,Z
 3283 06c4 9181      	 ldd r25,Z+1
 3284               	.LVL197:
 3285 06c6 081B      	 sub r16,r24
 3286 06c8 190B      	 sbc r17,r25
 3287               	.LVL198:
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		TEMPLATE_BUFFER_MOVE(DataStream, *BytesProcessed);
 3288               	 .loc 3 47 0
 3289 06ca C81B      	 sub r28,r24
 3290 06cc D90B      	 sbc r29,r25
 3291               	.LVL199:
 3292               	.L155:
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** {
 3293               	 .loc 3 36 0 discriminator 1
 3294 06ce C12C      	 mov r12,__zero_reg__
 3295 06d0 D12C      	 mov r13,__zero_reg__
 3296               	.LVL200:
 3297               	.L156:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	while (Length)
 3298               	 .loc 3 50 0 discriminator 1
 3299 06d2 0115      	 cp r16,__zero_reg__
 3300 06d4 1105      	 cpc r17,__zero_reg__
 3301 06d6 01F0      	 breq .L166
 3302               	.LBB518:
 3303               	.LBB519:
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 3304               	 .loc 2 360 0
 3305 06d8 8091 E800 	 lds r24,232
 3306               	.LBE519:
 3307               	.LBE518:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 		if (!(Endpoint_IsReadWriteAllowed()))
 3308               	 .loc 3 52 0
 3309 06dc 85FD      	 sbrc r24,5
 3310 06de 00C0      	 rjmp .L157
 3311               	.LBB520:
 3312               	.LBB521:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 3313               	 .loc 2 471 0
 3314 06e0 8091 E800 	 lds r24,232
 3315 06e4 8B77      	 andi r24,lo8(123)
 3316 06e6 8093 E800 	 sts 232,r24
 3317               	.LBE521:
GAS LISTING  			page 137


 3318               	.LBE520:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			USB_USBTask();
 3319               	 .loc 3 57 0
 3320 06ea 0E94 0000 	 call USB_USBTask
 3321               	.LVL201:
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if (BytesProcessed != NULL)
 3322               	 .loc 3 60 0
 3323 06ee E114      	 cp r14,__zero_reg__
 3324 06f0 F104      	 cpc r15,__zero_reg__
 3325 06f2 01F0      	 breq .L158
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				*BytesProcessed += BytesInTransfer;
 3326               	 .loc 3 62 0
 3327 06f4 F701      	 movw r30,r14
 3328 06f6 8081      	 ld r24,Z
 3329 06f8 9181      	 ldd r25,Z+1
 3330 06fa 8C0D      	 add r24,r12
 3331 06fc 9D1D      	 adc r25,r13
 3332 06fe 9183      	 std Z+1,r25
 3333 0700 8083      	 st Z,r24
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 				return ENDPOINT_RWSTREAM_IncompleteTransfer;
 3334               	 .loc 3 63 0
 3335 0702 85E0      	 ldi r24,lo8(5)
 3336 0704 00C0      	 rjmp .L154
 3337               	.L158:
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			if ((ErrorCode = Endpoint_WaitUntilReady()))
 3338               	 .loc 3 66 0
 3339 0706 0E94 0000 	 call Endpoint_WaitUntilReady
 3340               	.LVL202:
 3341 070a 8823      	 tst r24
 3342 070c 01F0      	 breq .L156
 3343 070e 00C0      	 rjmp .L154
 3344               	.LVL203:
 3345               	.L157:
 3346               	.LBB522:
 3347               	.LBB523:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 3348               	 .loc 2 542 0
 3349 0710 6091 F100 	 lds r22,241
 3350               	.LBE523:
 3351               	.LBE522:
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_TRANSFER_BYTE(DataStream);
 3352               	 .loc 3 71 0
 3353 0714 CE01      	 movw r24,r28
 3354 0716 0E94 0000 	 call __eeupd_byte_m32u2
 3355               	.LVL204:
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			TEMPLATE_BUFFER_MOVE(DataStream, 1);
 3356               	 .loc 3 72 0
 3357 071a 2197      	 sbiw r28,1
 3358               	.LVL205:
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			Length--;
 3359               	 .loc 3 73 0
 3360 071c 0150      	 subi r16,1
 3361 071e 1109      	 sbc r17,__zero_reg__
 3362               	.LVL206:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 			BytesInTransfer++;
 3363               	 .loc 3 74 0
 3364 0720 FFEF      	 ldi r31,-1
GAS LISTING  			page 138


 3365 0722 CF1A      	 sub r12,r31
 3366 0724 DF0A      	 sbc r13,r31
 3367               	.LVL207:
 3368 0726 00C0      	 rjmp .L156
 3369               	.L166:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_RW.c **** 	return ENDPOINT_RWSTREAM_NoError;
 3370               	 .loc 3 78 0
 3371 0728 80E0      	 ldi r24,0
 3372               	.LVL208:
 3373               	.L154:
 3374               	 
 3375               	 .loc 3 79 0
 3376 072a DF91      	 pop r29
 3377 072c CF91      	 pop r28
 3378 072e 1F91      	 pop r17
 3379 0730 0F91      	 pop r16
 3380               	.LVL209:
 3381 0732 FF90      	 pop r15
 3382 0734 EF90      	 pop r14
 3383               	.LVL210:
 3384 0736 DF90      	 pop r13
 3385 0738 CF90      	 pop r12
 3386 073a 0895      	 ret
 3387               	 .cfi_endproc
 3388               	.LFE91:
 3390               	.global Endpoint_Write_Control_Stream_LE
 3392               	Endpoint_Write_Control_Stream_LE:
 3393               	.LFB92:
 3394               	 .file 4 "LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c"
   1:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****   this software.
GAS LISTING  			page 139


  29:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** #if defined(TEMPLATE_FUNC_NAME)
  32:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  33:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** uint8_t TEMPLATE_FUNC_NAME (const void* const Buffer,
  34:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c ****                             uint16_t Length)
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 3395               	 .loc 4 35 0
 3396               	 .cfi_startproc
 3397               	.LVL211:
 3398               	 
 3399               	 
 3400               	 
 3401               	.L__stack_usage =0
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	bool     LastPacketFull = false;
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 3402               	 .loc 4 39 0
 3403 073c 2091 0000 	 lds r18,USB_ControlRequest+6
 3404 0740 3091 0000 	 lds r19,USB_ControlRequest+6+1
 3405 0744 2617      	 cp r18,r22
 3406 0746 3707      	 cpc r19,r23
 3407 0748 00F0      	 brlo .L182
  40:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	  Length = USB_ControlRequest.wLength;
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 3408               	 .loc 4 41 0
 3409 074a 6115      	 cp r22,__zero_reg__
 3410 074c 7105      	 cpc r23,__zero_reg__
 3411 074e 01F4      	 brne .L168
 3412               	.LBB524:
 3413               	.LBB525:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 3414               	 .loc 2 456 0
 3415 0750 2091 E800 	 lds r18,232
 3416 0754 2E77      	 andi r18,lo8(126)
 3417 0756 2093 E800 	 sts 232,r18
 3418 075a 00C0      	 rjmp .L168
 3419               	.L182:
 3420               	.LBE525:
 3421               	.LBE524:
 3422 075c B901      	 movw r22,r18
 3423               	.LVL212:
 3424               	.L168:
 3425               	.LBB526:
 3426               	.LBB527:
  42:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	  Endpoint_ClearIN();
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	{
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
GAS LISTING  			page 140


  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
  55:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  break;
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		{
  59:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			uint16_t BytesInEndpoint = Endpoint_BytesInEndpoint();
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3427               	 .loc 4 61 0 discriminator 1
 3428 075e 20E0      	 ldi r18,0
 3429               	.LVL213:
 3430               	.L174:
 3431               	.LBE527:
 3432               	.LBE526:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 3433               	 .loc 4 44 0 discriminator 1
 3434 0760 6115      	 cp r22,__zero_reg__
 3435 0762 7105      	 cpc r23,__zero_reg__
 3436 0764 01F0      	 breq .L195
 3437               	.L179:
 3438               	.LBB541:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3439               	 .loc 4 46 0
 3440 0766 3091 0000 	 lds r19,USB_DeviceState
 3441               	.LVL214:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 3442               	 .loc 4 48 0
 3443 076a 3323      	 tst r19
 3444 076c 01F4      	 brne .+2
 3445 076e 00C0      	 rjmp .L186
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3446               	 .loc 4 50 0
 3447 0770 3530      	 cpi r19,lo8(5)
 3448 0772 01F4      	 brne .+2
 3449 0774 00C0      	 rjmp .L187
 3450               	.LBB534:
 3451               	.LBB535:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 3452               	 .loc 2 431 0
 3453 0776 3091 E800 	 lds r19,232
 3454               	.LVL215:
 3455               	.LBE535:
 3456               	.LBE534:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 3457               	 .loc 4 52 0
 3458 077a 33FD      	 sbrc r19,3
 3459 077c 00C0      	 rjmp .L188
 3460               	.LBB536:
 3461               	.LBB537:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 3462               	 .loc 2 419 0
 3463 077e 3091 E800 	 lds r19,232
 3464               	.LBE537:
 3465               	.LBE536:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 3466               	 .loc 4 54 0
GAS LISTING  			page 141


 3467 0782 32FF      	 sbrs r19,2
 3468 0784 00C0      	 rjmp .L171
 3469               	.L181:
 3470               	.LBE541:
 3471               	.LBB542:
 3472               	.LBB543:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 3473               	 .loc 2 419 0 discriminator 1
 3474 0786 8091 E800 	 lds r24,232
 3475               	.LBE543:
 3476               	.LBE542:
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			{
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				Length--;
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				BytesInEndpoint++;
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			}
  68:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
  70:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			Endpoint_ClearIN();
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		}
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	}
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 3477               	 .loc 4 74 0 discriminator 1
 3478 078a 82FF      	 sbrs r24,2
 3479 078c 00C0      	 rjmp .L172
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	{
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
  77:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
  79:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
  81:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
  83:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
  84:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	}
  85:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 3480               	 .loc 4 86 0
 3481 078e 80E0      	 ldi r24,0
 3482 0790 0895      	 ret
 3483               	.L171:
 3484               	.LBB544:
 3485               	.LBB538:
 3486               	.LBB539:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 3487               	 .loc 2 407 0
 3488 0792 3091 E800 	 lds r19,232
 3489               	.LBE539:
 3490               	.LBE538:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 3491               	 .loc 4 57 0
 3492 0796 30FF      	 sbrs r19,0
 3493 0798 00C0      	 rjmp .L174
 3494               	.LBB540:
 3495               	.LBB528:
GAS LISTING  			page 142


 3496               	.LBB529:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 3497               	 .loc 2 229 0
 3498 079a 2091 F200 	 lds r18,242
 3499               	.LVL216:
 3500 079e 30E0      	 ldi r19,0
 3501               	.LBE529:
 3502               	.LBE528:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3503               	 .loc 4 61 0
 3504 07a0 FC01      	 movw r30,r24
 3505 07a2 281B      	 sub r18,r24
 3506 07a4 390B      	 sbc r19,r25
 3507               	.L175:
 3508 07a6 CF01      	 movw r24,r30
 3509 07a8 820F      	 add r24,r18
 3510 07aa 931F      	 adc r25,r19
 3511               	.LVL217:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3512               	 .loc 4 61 0 is_stmt 0 discriminator 1
 3513 07ac 6115      	 cp r22,__zero_reg__
 3514 07ae 7105      	 cpc r23,__zero_reg__
 3515 07b0 01F0      	 breq .L176
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3516               	 .loc 4 61 0 discriminator 2
 3517 07b2 8830      	 cpi r24,8
 3518 07b4 9105      	 cpc r25,__zero_reg__
 3519 07b6 00F4      	 brsh .L176
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 3520               	 .loc 4 63 0 is_stmt 1
 3521 07b8 8191      	 ld r24,Z+
 3522               	.LVL218:
 3523               	.LBB530:
 3524               	.LBB531:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 3525               	 .loc 2 554 0
 3526 07ba 8093 F100 	 sts 241,r24
 3527               	.LVL219:
 3528               	.LBE531:
 3529               	.LBE530:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				Length--;
 3530               	 .loc 4 65 0
 3531 07be 6150      	 subi r22,1
 3532 07c0 7109      	 sbc r23,__zero_reg__
 3533               	.LVL220:
 3534 07c2 00C0      	 rjmp .L175
 3535               	.LVL221:
 3536               	.L176:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 3537               	 .loc 4 69 0
 3538 07c4 21E0      	 ldi r18,lo8(1)
 3539 07c6 0897      	 sbiw r24,8
 3540 07c8 01F0      	 breq .L178
 3541 07ca 20E0      	 ldi r18,0
 3542               	.L178:
 3543               	.LVL222:
 3544               	.LBB532:
GAS LISTING  			page 143


 3545               	.LBB533:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 3546               	 .loc 2 456 0
 3547 07cc 8091 E800 	 lds r24,232
 3548               	.LVL223:
 3549 07d0 8E77      	 andi r24,lo8(126)
 3550 07d2 8093 E800 	 sts 232,r24
 3551 07d6 CF01      	 movw r24,r30
 3552 07d8 00C0      	 rjmp .L174
 3553               	.LVL224:
 3554               	.L195:
 3555               	.LBE533:
 3556               	.LBE532:
 3557               	.LBE540:
 3558               	.LBE544:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 3559               	 .loc 4 44 0 discriminator 2
 3560 07da 2111      	 cpse r18,__zero_reg__
 3561 07dc 00C0      	 rjmp .L179
 3562 07de 00C0      	 rjmp .L181
 3563               	.L172:
 3564               	.LBB545:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3565               	 .loc 4 76 0
 3566 07e0 8091 0000 	 lds r24,USB_DeviceState
 3567               	.LVL225:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 3568               	 .loc 4 78 0
 3569 07e4 8823      	 tst r24
 3570 07e6 01F0      	 breq .L186
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3571               	 .loc 4 80 0
 3572 07e8 8530      	 cpi r24,lo8(5)
 3573 07ea 01F0      	 breq .L187
 3574               	.LBB546:
 3575               	.LBB547:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 3576               	 .loc 2 431 0
 3577 07ec 8091 E800 	 lds r24,232
 3578               	.LVL226:
 3579               	.LBE547:
 3580               	.LBE546:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 3581               	 .loc 4 82 0
 3582 07f0 83FF      	 sbrs r24,3
 3583 07f2 00C0      	 rjmp .L181
 3584 07f4 00C0      	 rjmp .L188
 3585               	.L186:
 3586               	.LBE545:
 3587               	.LBB548:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 3588               	 .loc 4 49 0
 3589 07f6 82E0      	 ldi r24,lo8(2)
 3590 07f8 0895      	 ret
 3591               	.L187:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 3592               	 .loc 4 51 0
GAS LISTING  			page 144


 3593 07fa 83E0      	 ldi r24,lo8(3)
 3594 07fc 0895      	 ret
 3595               	.L188:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 3596               	 .loc 4 53 0
 3597 07fe 81E0      	 ldi r24,lo8(1)
 3598               	.LBE548:
  87:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** }
 3599               	 .loc 4 87 0
 3600 0800 0895      	 ret
 3601               	 .cfi_endproc
 3602               	.LFE92:
 3604               	.global Endpoint_Write_Control_Stream_BE
 3606               	Endpoint_Write_Control_Stream_BE:
 3607               	.LFB93:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 3608               	 .loc 4 35 0
 3609               	 .cfi_startproc
 3610               	.LVL227:
 3611               	 
 3612               	 
 3613               	 
 3614               	.L__stack_usage =0
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 3615               	 .loc 4 36 0
 3616 0802 FB01      	 movw r30,r22
 3617 0804 3197      	 sbiw r30,1
 3618 0806 E80F      	 add r30,r24
 3619 0808 F91F      	 adc r31,r25
 3620               	.LVL228:
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 3621               	 .loc 4 39 0
 3622 080a 8091 0000 	 lds r24,USB_ControlRequest+6
 3623 080e 9091 0000 	 lds r25,USB_ControlRequest+6+1
 3624               	.LVL229:
 3625 0812 8617      	 cp r24,r22
 3626 0814 9707      	 cpc r25,r23
 3627 0816 00F0      	 brlo .L211
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 3628               	 .loc 4 41 0
 3629 0818 6115      	 cp r22,__zero_reg__
 3630 081a 7105      	 cpc r23,__zero_reg__
 3631 081c 01F4      	 brne .L197
 3632               	.LBB549:
 3633               	.LBB550:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 3634               	 .loc 2 456 0
 3635 081e 8091 E800 	 lds r24,232
 3636 0822 8E77      	 andi r24,lo8(126)
 3637 0824 8093 E800 	 sts 232,r24
 3638 0828 00C0      	 rjmp .L197
 3639               	.L211:
 3640               	.LBE550:
 3641               	.LBE549:
 3642 082a BC01      	 movw r22,r24
 3643               	.LVL230:
 3644               	.L197:
GAS LISTING  			page 145


 3645               	.LBB551:
 3646               	.LBB552:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3647               	 .loc 4 61 0 discriminator 1
 3648 082c 80E0      	 ldi r24,0
 3649               	.LVL231:
 3650               	.L203:
 3651               	.LBE552:
 3652               	.LBE551:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 3653               	 .loc 4 44 0 discriminator 1
 3654 082e 6115      	 cp r22,__zero_reg__
 3655 0830 7105      	 cpc r23,__zero_reg__
 3656 0832 01F0      	 breq .L224
 3657               	.L208:
 3658               	.LBB566:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3659               	 .loc 4 46 0
 3660 0834 9091 0000 	 lds r25,USB_DeviceState
 3661               	.LVL232:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 3662               	 .loc 4 48 0
 3663 0838 9923      	 tst r25
 3664 083a 01F4      	 brne .+2
 3665 083c 00C0      	 rjmp .L215
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3666               	 .loc 4 50 0
 3667 083e 9530      	 cpi r25,lo8(5)
 3668 0840 01F4      	 brne .+2
 3669 0842 00C0      	 rjmp .L216
 3670               	.LBB559:
 3671               	.LBB560:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 3672               	 .loc 2 431 0
 3673 0844 9091 E800 	 lds r25,232
 3674               	.LVL233:
 3675               	.LBE560:
 3676               	.LBE559:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 3677               	 .loc 4 52 0
 3678 0848 93FD      	 sbrc r25,3
 3679 084a 00C0      	 rjmp .L217
 3680               	.LBB561:
 3681               	.LBB562:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 3682               	 .loc 2 419 0
 3683 084c 9091 E800 	 lds r25,232
 3684               	.LBE562:
 3685               	.LBE561:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 3686               	 .loc 4 54 0
 3687 0850 92FF      	 sbrs r25,2
 3688 0852 00C0      	 rjmp .L200
 3689               	.LVL234:
 3690               	.L210:
 3691               	.LBE566:
 3692               	.LBB567:
GAS LISTING  			page 146


 3693               	.LBB568:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 3694               	 .loc 2 419 0 discriminator 1
 3695 0854 8091 E800 	 lds r24,232
 3696               	.LBE568:
 3697               	.LBE567:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 3698               	 .loc 4 74 0 discriminator 1
 3699 0858 82FF      	 sbrs r24,2
 3700 085a 00C0      	 rjmp .L201
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 3701               	 .loc 4 86 0
 3702 085c 80E0      	 ldi r24,0
 3703 085e 0895      	 ret
 3704               	.LVL235:
 3705               	.L200:
 3706               	.LBB569:
 3707               	.LBB563:
 3708               	.LBB564:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 3709               	 .loc 2 407 0
 3710 0860 9091 E800 	 lds r25,232
 3711               	.LBE564:
 3712               	.LBE563:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 3713               	 .loc 4 57 0
 3714 0864 90FF      	 sbrs r25,0
 3715 0866 00C0      	 rjmp .L203
 3716               	.LBB565:
 3717               	.LBB553:
 3718               	.LBB554:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 3719               	 .loc 2 229 0
 3720 0868 4091 F200 	 lds r20,242
 3721 086c 50E0      	 ldi r21,0
 3722               	.LBE554:
 3723               	.LBE553:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3724               	 .loc 4 61 0
 3725 086e 80E0      	 ldi r24,0
 3726 0870 90E0      	 ldi r25,0
 3727               	.LVL236:
 3728               	.L204:
 3729 0872 9C01      	 movw r18,r24
 3730 0874 240F      	 add r18,r20
 3731 0876 351F      	 adc r19,r21
 3732               	.LVL237:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3733               	 .loc 4 61 0 is_stmt 0 discriminator 1
 3734 0878 6115      	 cp r22,__zero_reg__
 3735 087a 7105      	 cpc r23,__zero_reg__
 3736 087c 01F0      	 breq .L205
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 3737               	 .loc 4 61 0 discriminator 2
 3738 087e 2830      	 cpi r18,8
 3739 0880 3105      	 cpc r19,__zero_reg__
 3740 0882 00F4      	 brsh .L205
GAS LISTING  			page 147


  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 3741               	 .loc 4 63 0 is_stmt 1
 3742 0884 2081      	 ld r18,Z
 3743               	.LVL238:
 3744               	.LBB555:
 3745               	.LBB556:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 3746               	 .loc 2 554 0
 3747 0886 2093 F100 	 sts 241,r18
 3748               	.LBE556:
 3749               	.LBE555:
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 3750               	 .loc 4 64 0
 3751 088a 3197      	 sbiw r30,1
 3752               	.LVL239:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				Length--;
 3753               	 .loc 4 65 0
 3754 088c 6150      	 subi r22,1
 3755 088e 7109      	 sbc r23,__zero_reg__
 3756               	.LVL240:
 3757 0890 0196      	 adiw r24,1
 3758 0892 00C0      	 rjmp .L204
 3759               	.LVL241:
 3760               	.L205:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 3761               	 .loc 4 69 0
 3762 0894 81E0      	 ldi r24,lo8(1)
 3763 0896 2830      	 cpi r18,8
 3764 0898 3105      	 cpc r19,__zero_reg__
 3765 089a 01F0      	 breq .L207
 3766 089c 80E0      	 ldi r24,0
 3767               	.L207:
 3768               	.LVL242:
 3769               	.LBB557:
 3770               	.LBB558:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 3771               	 .loc 2 456 0
 3772 089e 9091 E800 	 lds r25,232
 3773 08a2 9E77      	 andi r25,lo8(126)
 3774 08a4 9093 E800 	 sts 232,r25
 3775 08a8 00C0      	 rjmp .L203
 3776               	.LVL243:
 3777               	.L224:
 3778               	.LBE558:
 3779               	.LBE557:
 3780               	.LBE565:
 3781               	.LBE569:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 3782               	 .loc 4 44 0 discriminator 2
 3783 08aa 8111      	 cpse r24,__zero_reg__
 3784 08ac 00C0      	 rjmp .L208
 3785 08ae 00C0      	 rjmp .L210
 3786               	.LVL244:
 3787               	.L201:
 3788               	.LBB570:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3789               	 .loc 4 76 0
GAS LISTING  			page 148


 3790 08b0 8091 0000 	 lds r24,USB_DeviceState
 3791               	.LVL245:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 3792               	 .loc 4 78 0
 3793 08b4 8823      	 tst r24
 3794 08b6 01F0      	 breq .L215
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3795               	 .loc 4 80 0
 3796 08b8 8530      	 cpi r24,lo8(5)
 3797 08ba 01F0      	 breq .L216
 3798               	.LBB571:
 3799               	.LBB572:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 3800               	 .loc 2 431 0
 3801 08bc 8091 E800 	 lds r24,232
 3802               	.LVL246:
 3803               	.LBE572:
 3804               	.LBE571:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 3805               	 .loc 4 82 0
 3806 08c0 83FF      	 sbrs r24,3
 3807 08c2 00C0      	 rjmp .L210
 3808 08c4 00C0      	 rjmp .L217
 3809               	.L215:
 3810               	.LBE570:
 3811               	.LBB573:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 3812               	 .loc 4 49 0
 3813 08c6 82E0      	 ldi r24,lo8(2)
 3814 08c8 0895      	 ret
 3815               	.L216:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 3816               	 .loc 4 51 0
 3817 08ca 83E0      	 ldi r24,lo8(3)
 3818 08cc 0895      	 ret
 3819               	.L217:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 3820               	 .loc 4 53 0
 3821 08ce 81E0      	 ldi r24,lo8(1)
 3822               	.LBE573:
 3823               	 .loc 4 87 0
 3824 08d0 0895      	 ret
 3825               	 .cfi_endproc
 3826               	.LFE93:
 3828               	.global Endpoint_Read_Control_Stream_LE
 3830               	Endpoint_Read_Control_Stream_LE:
 3831               	.LFB94:
 3832               	 .file 5 "LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c"
   1:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** /*
GAS LISTING  			page 149


  10:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** #if defined(TEMPLATE_FUNC_NAME)
  32:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  33:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** uint8_t TEMPLATE_FUNC_NAME (void* const Buffer,
  34:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c ****                             uint16_t Length)
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** {
 3833               	 .loc 5 35 0
 3834               	 .cfi_startproc
 3835               	.LVL247:
 3836               	 
 3837               	 
 3838               	 
 3839               	.L__stack_usage =0
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	uint8_t* DataStream = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
  37:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	if (!(Length))
 3840               	 .loc 5 38 0
 3841 08d2 6115      	 cp r22,__zero_reg__
 3842 08d4 7105      	 cpc r23,__zero_reg__
 3843 08d6 01F4      	 brne .L227
 3844               	.LVL248:
 3845               	.L232:
 3846               	.LBB605:
 3847               	.LBB606:
 3848               	.LBB607:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 3849               	 .loc 2 471 0
 3850 08d8 2091 E800 	 lds r18,232
 3851 08dc 2B77      	 andi r18,lo8(123)
 3852 08de 2093 E800 	 sts 232,r18
 3853               	.L227:
 3854               	.LVL249:
 3855               	.LBE607:
 3856               	.LBE606:
 3857               	.LBE605:
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	  Endpoint_ClearOUT();
  40:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
GAS LISTING  			page 150


  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (Length)
 3858               	 .loc 5 41 0 discriminator 1
 3859 08e2 6115      	 cp r22,__zero_reg__
 3860 08e4 7105      	 cpc r23,__zero_reg__
 3861 08e6 01F0      	 breq .L236
 3862               	.LVL250:
 3863               	.L230:
 3864               	.LBB616:
  42:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	{
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3865               	 .loc 5 43 0
 3866 08e8 2091 0000 	 lds r18,USB_DeviceState
 3867               	.LVL251:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 3868               	 .loc 5 45 0
 3869 08ec 2223      	 tst r18
 3870 08ee 01F0      	 breq .L237
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3871               	 .loc 5 47 0
 3872 08f0 2530      	 cpi r18,lo8(5)
 3873 08f2 01F0      	 breq .L238
 3874               	.LBB608:
 3875               	.LBB609:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 3876               	 .loc 2 431 0
 3877 08f4 2091 E800 	 lds r18,232
 3878               	.LVL252:
 3879               	.LBE609:
 3880               	.LBE608:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (Endpoint_IsSETUPReceived())
 3881               	 .loc 5 49 0
 3882 08f8 23FD      	 sbrc r18,3
 3883 08fa 00C0      	 rjmp .L239
 3884               	.LBB610:
 3885               	.LBB611:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 3886               	 .loc 2 419 0
 3887 08fc 2091 E800 	 lds r18,232
 3888               	.LBE611:
 3889               	.LBE610:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (Endpoint_IsOUTReceived())
 3890               	 .loc 5 52 0
 3891 0900 22FF      	 sbrs r18,2
 3892 0902 00C0      	 rjmp .L230
 3893 0904 FC01      	 movw r30,r24
 3894               	.LVL253:
 3895               	.L231:
 3896 0906 CF01      	 movw r24,r30
 3897               	.LVL254:
 3898               	.LBB612:
 3899               	.LBB613:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
GAS LISTING  			page 151


 3900               	 .loc 2 229 0
 3901 0908 2091 F200 	 lds r18,242
 3902               	.LBE613:
 3903               	.LBE612:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		{
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 3904               	 .loc 5 54 0
 3905 090c 2223      	 tst r18
 3906 090e 01F0      	 breq .L232
 3907               	.LBB614:
 3908               	.LBB615:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 3909               	 .loc 2 542 0
 3910 0910 8091 F100 	 lds r24,241
 3911               	.LVL255:
 3912               	.LBE615:
 3913               	.LBE614:
  55:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			{
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 3914               	 .loc 5 56 0
 3915 0914 8193      	 st Z+,r24
 3916               	.LVL256:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 3917               	 .loc 5 57 0
 3918 0916 CF01      	 movw r24,r30
 3919               	.LVL257:
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				Length--;
 3920               	 .loc 5 58 0
 3921 0918 6150      	 subi r22,1
 3922 091a 7109      	 sbc r23,__zero_reg__
 3923               	.LVL258:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 3924               	 .loc 5 54 0
 3925 091c 6115      	 cp r22,__zero_reg__
 3926 091e 7105      	 cpc r23,__zero_reg__
 3927 0920 01F4      	 brne .L231
 3928 0922 00C0      	 rjmp .L232
 3929               	.LVL259:
 3930               	.L246:
 3931               	.LBE616:
 3932               	.LBB617:
 3933               	.LBB618:
 3934               	.LBB619:
  59:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			}
  60:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			Endpoint_ClearOUT();
  62:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		}
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	}
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (!(Endpoint_IsINReady()))
  66:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	{
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 3935               	 .loc 5 67 0
 3936 0924 8091 0000 	 lds r24,USB_DeviceState
 3937               	.LVL260:
  68:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
GAS LISTING  			page 152


 3938               	 .loc 5 69 0
 3939 0928 8823      	 tst r24
 3940 092a 01F0      	 breq .L237
  70:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 3941               	 .loc 5 71 0
 3942 092c 8530      	 cpi r24,lo8(5)
 3943 092e 01F0      	 breq .L238
 3944               	.LVL261:
 3945               	.L236:
 3946               	.LBE619:
 3947               	.LBB620:
 3948               	.LBB621:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 3949               	 .loc 2 407 0
 3950 0930 8091 E800 	 lds r24,232
 3951               	.LBE621:
 3952               	.LBE620:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (!(Endpoint_IsINReady()))
 3953               	 .loc 5 65 0
 3954 0934 80FF      	 sbrs r24,0
 3955 0936 00C0      	 rjmp .L246
  72:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
  73:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	}
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 3956               	 .loc 5 75 0
 3957 0938 80E0      	 ldi r24,0
 3958 093a 0895      	 ret
 3959               	.L237:
 3960               	.LBE618:
 3961               	.LBE617:
 3962               	.LBB622:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 3963               	 .loc 5 46 0
 3964 093c 82E0      	 ldi r24,lo8(2)
 3965 093e 0895      	 ret
 3966               	.L238:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 3967               	 .loc 5 48 0
 3968 0940 83E0      	 ldi r24,lo8(3)
 3969 0942 0895      	 ret
 3970               	.LVL262:
 3971               	.L239:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 3972               	 .loc 5 50 0
 3973 0944 81E0      	 ldi r24,lo8(1)
 3974               	.LVL263:
 3975               	.LBE622:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** }
 3976               	 .loc 5 76 0
 3977 0946 0895      	 ret
 3978               	 .cfi_endproc
 3979               	.LFE94:
 3981               	.global Endpoint_Read_Control_Stream_BE
 3983               	Endpoint_Read_Control_Stream_BE:
 3984               	.LFB95:
GAS LISTING  			page 153


  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** {
 3985               	 .loc 5 35 0
 3986               	 .cfi_startproc
 3987               	.LVL264:
 3988               	 
 3989               	 
 3990               	 
 3991               	.L__stack_usage =0
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	uint8_t* DataStream = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 3992               	 .loc 5 36 0
 3993 0948 FB01      	 movw r30,r22
 3994 094a 3197      	 sbiw r30,1
 3995 094c E80F      	 add r30,r24
 3996 094e F91F      	 adc r31,r25
 3997               	.LVL265:
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	if (!(Length))
 3998               	 .loc 5 38 0
 3999 0950 6115      	 cp r22,__zero_reg__
 4000 0952 7105      	 cpc r23,__zero_reg__
 4001 0954 01F4      	 brne .L249
 4002               	.LVL266:
 4003               	.L254:
 4004               	.LBB654:
 4005               	.LBB655:
 4006               	.LBB656:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 4007               	 .loc 2 471 0
 4008 0956 8091 E800 	 lds r24,232
 4009 095a 8B77      	 andi r24,lo8(123)
 4010 095c 8093 E800 	 sts 232,r24
 4011               	.L249:
 4012               	.LBE656:
 4013               	.LBE655:
 4014               	.LBE654:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (Length)
 4015               	 .loc 5 41 0 discriminator 1
 4016 0960 6115      	 cp r22,__zero_reg__
 4017 0962 7105      	 cpc r23,__zero_reg__
 4018 0964 01F0      	 breq .L258
 4019               	.L252:
 4020               	.LBB665:
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4021               	 .loc 5 43 0
 4022 0966 8091 0000 	 lds r24,USB_DeviceState
 4023               	.LVL267:
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4024               	 .loc 5 45 0
 4025 096a 8823      	 tst r24
 4026 096c 01F0      	 breq .L259
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4027               	 .loc 5 47 0
 4028 096e 8530      	 cpi r24,lo8(5)
 4029 0970 01F0      	 breq .L260
 4030               	.LBB657:
 4031               	.LBB658:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4032               	 .loc 2 431 0
GAS LISTING  			page 154


 4033 0972 8091 E800 	 lds r24,232
 4034               	.LVL268:
 4035               	.LBE658:
 4036               	.LBE657:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (Endpoint_IsSETUPReceived())
 4037               	 .loc 5 49 0
 4038 0976 83FD      	 sbrc r24,3
 4039 0978 00C0      	 rjmp .L261
 4040               	.LBB659:
 4041               	.LBB660:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4042               	 .loc 2 419 0
 4043 097a 8091 E800 	 lds r24,232
 4044               	.LBE660:
 4045               	.LBE659:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (Endpoint_IsOUTReceived())
 4046               	 .loc 5 52 0
 4047 097e 82FF      	 sbrs r24,2
 4048 0980 00C0      	 rjmp .L252
 4049               	.L253:
 4050               	.LBB661:
 4051               	.LBB662:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 4052               	 .loc 2 229 0
 4053 0982 8091 F200 	 lds r24,242
 4054               	.LBE662:
 4055               	.LBE661:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 4056               	 .loc 5 54 0
 4057 0986 8823      	 tst r24
 4058 0988 01F0      	 breq .L254
 4059               	.LBB663:
 4060               	.LBB664:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 4061               	 .loc 2 542 0
 4062 098a 8091 F100 	 lds r24,241
 4063               	.LBE664:
 4064               	.LBE663:
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 4065               	 .loc 5 56 0
 4066 098e 8083      	 st Z,r24
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 4067               	 .loc 5 57 0
 4068 0990 3197      	 sbiw r30,1
 4069               	.LVL269:
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				Length--;
 4070               	 .loc 5 58 0
 4071 0992 6150      	 subi r22,1
 4072 0994 7109      	 sbc r23,__zero_reg__
 4073               	.LVL270:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 4074               	 .loc 5 54 0
 4075 0996 6115      	 cp r22,__zero_reg__
 4076 0998 7105      	 cpc r23,__zero_reg__
 4077 099a 01F4      	 brne .L253
 4078 099c 00C0      	 rjmp .L254
 4079               	.L268:
GAS LISTING  			page 155


 4080               	.LBE665:
 4081               	.LBB666:
 4082               	.LBB667:
 4083               	.LBB668:
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4084               	 .loc 5 67 0
 4085 099e 8091 0000 	 lds r24,USB_DeviceState
 4086               	.LVL271:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4087               	 .loc 5 69 0
 4088 09a2 8823      	 tst r24
 4089 09a4 01F0      	 breq .L259
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4090               	 .loc 5 71 0
 4091 09a6 8530      	 cpi r24,lo8(5)
 4092 09a8 01F0      	 breq .L260
 4093               	.LVL272:
 4094               	.L258:
 4095               	.LBE668:
 4096               	.LBB669:
 4097               	.LBB670:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 4098               	 .loc 2 407 0
 4099 09aa 8091 E800 	 lds r24,232
 4100               	.LBE670:
 4101               	.LBE669:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (!(Endpoint_IsINReady()))
 4102               	 .loc 5 65 0
 4103 09ae 80FF      	 sbrs r24,0
 4104 09b0 00C0      	 rjmp .L268
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 4105               	 .loc 5 75 0
 4106 09b2 80E0      	 ldi r24,0
 4107 09b4 0895      	 ret
 4108               	.L259:
 4109               	.LBE667:
 4110               	.LBE666:
 4111               	.LBB671:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 4112               	 .loc 5 46 0
 4113 09b6 82E0      	 ldi r24,lo8(2)
 4114 09b8 0895      	 ret
 4115               	.L260:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 4116               	 .loc 5 48 0
 4117 09ba 83E0      	 ldi r24,lo8(3)
 4118 09bc 0895      	 ret
 4119               	.L261:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 4120               	 .loc 5 50 0
 4121 09be 81E0      	 ldi r24,lo8(1)
 4122               	.LBE671:
 4123               	 .loc 5 76 0
 4124 09c0 0895      	 ret
 4125               	 .cfi_endproc
 4126               	.LFE95:
 4128               	.global Endpoint_Write_Control_PStream_LE
GAS LISTING  			page 156


 4130               	Endpoint_Write_Control_PStream_LE:
 4131               	.LFB96:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 4132               	 .loc 4 35 0
 4133               	 .cfi_startproc
 4134               	.LVL273:
 4135               	 
 4136               	 
 4137               	 
 4138               	.L__stack_usage =0
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 4139               	 .loc 4 39 0
 4140 09c2 2091 0000 	 lds r18,USB_ControlRequest+6
 4141 09c6 3091 0000 	 lds r19,USB_ControlRequest+6+1
 4142 09ca 2617      	 cp r18,r22
 4143 09cc 3707      	 cpc r19,r23
 4144 09ce 00F0      	 brlo .L284
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 4145               	 .loc 4 41 0
 4146 09d0 6115      	 cp r22,__zero_reg__
 4147 09d2 7105      	 cpc r23,__zero_reg__
 4148 09d4 01F4      	 brne .L270
 4149               	.LBB672:
 4150               	.LBB673:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4151               	 .loc 2 456 0
 4152 09d6 2091 E800 	 lds r18,232
 4153 09da 2E77      	 andi r18,lo8(126)
 4154 09dc 2093 E800 	 sts 232,r18
 4155 09e0 00C0      	 rjmp .L270
 4156               	.L284:
 4157               	.LBE673:
 4158               	.LBE672:
 4159 09e2 B901      	 movw r22,r18
 4160               	.LVL274:
 4161               	.L270:
 4162               	.LBB674:
 4163               	.LBB675:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4164               	 .loc 4 61 0 discriminator 1
 4165 09e4 20E0      	 ldi r18,0
 4166               	.LVL275:
 4167               	.L276:
 4168               	.LBE675:
 4169               	.LBE674:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4170               	 .loc 4 44 0 discriminator 1
 4171 09e6 6115      	 cp r22,__zero_reg__
 4172 09e8 7105      	 cpc r23,__zero_reg__
 4173 09ea 01F0      	 breq .L297
 4174               	.L281:
 4175               	.LBB690:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4176               	 .loc 4 46 0
 4177 09ec 3091 0000 	 lds r19,USB_DeviceState
 4178               	.LVL276:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
GAS LISTING  			page 157


 4179               	 .loc 4 48 0
 4180 09f0 3323      	 tst r19
 4181 09f2 01F4      	 brne .+2
 4182 09f4 00C0      	 rjmp .L288
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4183               	 .loc 4 50 0
 4184 09f6 3530      	 cpi r19,lo8(5)
 4185 09f8 01F4      	 brne .+2
 4186 09fa 00C0      	 rjmp .L289
 4187               	.LBB683:
 4188               	.LBB684:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4189               	 .loc 2 431 0
 4190 09fc 3091 E800 	 lds r19,232
 4191               	.LVL277:
 4192               	.LBE684:
 4193               	.LBE683:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4194               	 .loc 4 52 0
 4195 0a00 33FD      	 sbrc r19,3
 4196 0a02 00C0      	 rjmp .L290
 4197               	.LBB685:
 4198               	.LBB686:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4199               	 .loc 2 419 0
 4200 0a04 3091 E800 	 lds r19,232
 4201               	.LBE686:
 4202               	.LBE685:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 4203               	 .loc 4 54 0
 4204 0a08 32FF      	 sbrs r19,2
 4205 0a0a 00C0      	 rjmp .L273
 4206               	.L283:
 4207               	.LBE690:
 4208               	.LBB691:
 4209               	.LBB692:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4210               	 .loc 2 419 0 discriminator 1
 4211 0a0c 8091 E800 	 lds r24,232
 4212               	.LBE692:
 4213               	.LBE691:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 4214               	 .loc 4 74 0 discriminator 1
 4215 0a10 82FF      	 sbrs r24,2
 4216 0a12 00C0      	 rjmp .L274
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 4217               	 .loc 4 86 0
 4218 0a14 80E0      	 ldi r24,0
 4219 0a16 0895      	 ret
 4220               	.L273:
 4221               	.LBB693:
 4222               	.LBB687:
 4223               	.LBB688:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 4224               	 .loc 2 407 0
 4225 0a18 3091 E800 	 lds r19,232
 4226               	.LBE688:
GAS LISTING  			page 158


 4227               	.LBE687:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 4228               	 .loc 4 57 0
 4229 0a1c 30FF      	 sbrs r19,0
 4230 0a1e 00C0      	 rjmp .L276
 4231               	.LBB689:
 4232               	.LBB676:
 4233               	.LBB677:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 4234               	 .loc 2 229 0
 4235 0a20 2091 F200 	 lds r18,242
 4236               	.LVL278:
 4237 0a24 30E0      	 ldi r19,0
 4238               	.LBE677:
 4239               	.LBE676:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4240               	 .loc 4 61 0
 4241 0a26 FC01      	 movw r30,r24
 4242 0a28 281B      	 sub r18,r24
 4243 0a2a 390B      	 sbc r19,r25
 4244               	.L277:
 4245 0a2c C901      	 movw r24,r18
 4246 0a2e 8E0F      	 add r24,r30
 4247 0a30 9F1F      	 adc r25,r31
 4248               	.LVL279:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4249               	 .loc 4 61 0 is_stmt 0 discriminator 1
 4250 0a32 6115      	 cp r22,__zero_reg__
 4251 0a34 7105      	 cpc r23,__zero_reg__
 4252 0a36 01F0      	 breq .L278
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4253               	 .loc 4 61 0 discriminator 2
 4254 0a38 8830      	 cpi r24,8
 4255 0a3a 9105      	 cpc r25,__zero_reg__
 4256 0a3c 00F4      	 brsh .L278
 4257               	.LVL280:
 4258               	.LBB678:
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 4259               	 .loc 4 63 0 is_stmt 1
 4260               	 
 4261               	 
 4262 0a3e 8491      	 lpm r24,Z
 4263               	 
 4264               	 
 4265               	.LVL281:
 4266               	 
 4267               	.LBE678:
 4268               	.LBB679:
 4269               	.LBB680:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 4270               	 .loc 2 554 0
 4271 0a40 8093 F100 	 sts 241,r24
 4272               	.LBE680:
 4273               	.LBE679:
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 4274               	 .loc 4 64 0
 4275 0a44 3196      	 adiw r30,1
GAS LISTING  			page 159


 4276               	.LVL282:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				Length--;
 4277               	 .loc 4 65 0
 4278 0a46 6150      	 subi r22,1
 4279 0a48 7109      	 sbc r23,__zero_reg__
 4280               	.LVL283:
 4281 0a4a 00C0      	 rjmp .L277
 4282               	.LVL284:
 4283               	.L278:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 4284               	 .loc 4 69 0
 4285 0a4c 21E0      	 ldi r18,lo8(1)
 4286 0a4e 0897      	 sbiw r24,8
 4287 0a50 01F0      	 breq .L280
 4288 0a52 20E0      	 ldi r18,0
 4289               	.L280:
 4290               	.LVL285:
 4291               	.LBB681:
 4292               	.LBB682:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4293               	 .loc 2 456 0
 4294 0a54 8091 E800 	 lds r24,232
 4295               	.LVL286:
 4296 0a58 8E77      	 andi r24,lo8(126)
 4297 0a5a 8093 E800 	 sts 232,r24
 4298 0a5e CF01      	 movw r24,r30
 4299 0a60 00C0      	 rjmp .L276
 4300               	.LVL287:
 4301               	.L297:
 4302               	.LBE682:
 4303               	.LBE681:
 4304               	.LBE689:
 4305               	.LBE693:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4306               	 .loc 4 44 0 discriminator 2
 4307 0a62 2111      	 cpse r18,__zero_reg__
 4308 0a64 00C0      	 rjmp .L281
 4309 0a66 00C0      	 rjmp .L283
 4310               	.L274:
 4311               	.LBB694:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4312               	 .loc 4 76 0
 4313 0a68 8091 0000 	 lds r24,USB_DeviceState
 4314               	.LVL288:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4315               	 .loc 4 78 0
 4316 0a6c 8823      	 tst r24
 4317 0a6e 01F0      	 breq .L288
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4318               	 .loc 4 80 0
 4319 0a70 8530      	 cpi r24,lo8(5)
 4320 0a72 01F0      	 breq .L289
 4321               	.LBB695:
 4322               	.LBB696:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4323               	 .loc 2 431 0
 4324 0a74 8091 E800 	 lds r24,232
GAS LISTING  			page 160


 4325               	.LVL289:
 4326               	.LBE696:
 4327               	.LBE695:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4328               	 .loc 4 82 0
 4329 0a78 83FF      	 sbrs r24,3
 4330 0a7a 00C0      	 rjmp .L283
 4331 0a7c 00C0      	 rjmp .L290
 4332               	.L288:
 4333               	.LBE694:
 4334               	.LBB697:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 4335               	 .loc 4 49 0
 4336 0a7e 82E0      	 ldi r24,lo8(2)
 4337 0a80 0895      	 ret
 4338               	.L289:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 4339               	 .loc 4 51 0
 4340 0a82 83E0      	 ldi r24,lo8(3)
 4341 0a84 0895      	 ret
 4342               	.L290:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 4343               	 .loc 4 53 0
 4344 0a86 81E0      	 ldi r24,lo8(1)
 4345               	.LBE697:
 4346               	 .loc 4 87 0
 4347 0a88 0895      	 ret
 4348               	 .cfi_endproc
 4349               	.LFE96:
 4351               	.global Endpoint_Write_Control_PStream_BE
 4353               	Endpoint_Write_Control_PStream_BE:
 4354               	.LFB97:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 4355               	 .loc 4 35 0
 4356               	 .cfi_startproc
 4357               	.LVL290:
 4358               	 
 4359               	 
 4360               	 
 4361               	.L__stack_usage =0
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 4362               	 .loc 4 36 0
 4363 0a8a FB01      	 movw r30,r22
 4364 0a8c 3197      	 sbiw r30,1
 4365 0a8e E80F      	 add r30,r24
 4366 0a90 F91F      	 adc r31,r25
 4367               	.LVL291:
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 4368               	 .loc 4 39 0
 4369 0a92 8091 0000 	 lds r24,USB_ControlRequest+6
 4370 0a96 9091 0000 	 lds r25,USB_ControlRequest+6+1
 4371               	.LVL292:
 4372 0a9a 8617      	 cp r24,r22
 4373 0a9c 9707      	 cpc r25,r23
 4374 0a9e 00F0      	 brlo .L313
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 4375               	 .loc 4 41 0
GAS LISTING  			page 161


 4376 0aa0 6115      	 cp r22,__zero_reg__
 4377 0aa2 7105      	 cpc r23,__zero_reg__
 4378 0aa4 01F4      	 brne .L299
 4379               	.LBB698:
 4380               	.LBB699:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4381               	 .loc 2 456 0
 4382 0aa6 8091 E800 	 lds r24,232
 4383 0aaa 8E77      	 andi r24,lo8(126)
 4384 0aac 8093 E800 	 sts 232,r24
 4385 0ab0 00C0      	 rjmp .L299
 4386               	.L313:
 4387               	.LBE699:
 4388               	.LBE698:
 4389 0ab2 BC01      	 movw r22,r24
 4390               	.LVL293:
 4391               	.L299:
 4392               	.LBB700:
 4393               	.LBB701:
 4394 0ab4 80E0      	 ldi r24,0
 4395               	.LVL294:
 4396               	.L305:
 4397               	.LBE701:
 4398               	.LBE700:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4399               	 .loc 4 44 0 discriminator 1
 4400 0ab6 6115      	 cp r22,__zero_reg__
 4401 0ab8 7105      	 cpc r23,__zero_reg__
 4402 0aba 01F4      	 brne .+2
 4403 0abc 00C0      	 rjmp .L324
 4404               	.L310:
 4405               	.LBB716:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4406               	 .loc 4 46 0
 4407 0abe 9091 0000 	 lds r25,USB_DeviceState
 4408               	.LVL295:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4409               	 .loc 4 48 0
 4410 0ac2 9923      	 tst r25
 4411 0ac4 01F4      	 brne .+2
 4412 0ac6 00C0      	 rjmp .L318
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4413               	 .loc 4 50 0
 4414 0ac8 9530      	 cpi r25,lo8(5)
 4415 0aca 01F4      	 brne .+2
 4416 0acc 00C0      	 rjmp .L319
 4417               	.LBB709:
 4418               	.LBB710:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4419               	 .loc 2 431 0
 4420 0ace 9091 E800 	 lds r25,232
 4421               	.LVL296:
 4422               	.LBE710:
 4423               	.LBE709:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4424               	 .loc 4 52 0
 4425 0ad2 93FD      	 sbrc r25,3
GAS LISTING  			page 162


 4426 0ad4 00C0      	 rjmp .L320
 4427               	.LBB711:
 4428               	.LBB712:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4429               	 .loc 2 419 0
 4430 0ad6 9091 E800 	 lds r25,232
 4431               	.LBE712:
 4432               	.LBE711:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 4433               	 .loc 4 54 0
 4434 0ada 92FF      	 sbrs r25,2
 4435 0adc 00C0      	 rjmp .L302
 4436               	.LVL297:
 4437               	.L312:
 4438               	.LBE716:
 4439               	.LBB717:
 4440               	.LBB718:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4441               	 .loc 2 419 0 discriminator 1
 4442 0ade 8091 E800 	 lds r24,232
 4443               	.LBE718:
 4444               	.LBE717:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 4445               	 .loc 4 74 0 discriminator 1
 4446 0ae2 82FF      	 sbrs r24,2
 4447 0ae4 00C0      	 rjmp .L303
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 4448               	 .loc 4 86 0
 4449 0ae6 80E0      	 ldi r24,0
 4450 0ae8 0895      	 ret
 4451               	.LVL298:
 4452               	.L302:
 4453               	.LBB719:
 4454               	.LBB713:
 4455               	.LBB714:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 4456               	 .loc 2 407 0
 4457 0aea 9091 E800 	 lds r25,232
 4458               	.LBE714:
 4459               	.LBE713:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 4460               	 .loc 4 57 0
 4461 0aee 90FF      	 sbrs r25,0
 4462 0af0 00C0      	 rjmp .L305
 4463               	.LBB715:
 4464               	.LBB702:
 4465               	.LBB703:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 4466               	 .loc 2 229 0
 4467 0af2 A091 F200 	 lds r26,242
 4468 0af6 B0E0      	 ldi r27,0
 4469               	.LBE703:
 4470               	.LBE702:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4471               	 .loc 4 61 0
 4472 0af8 80E0      	 ldi r24,0
 4473 0afa 90E0      	 ldi r25,0
GAS LISTING  			page 163


 4474               	.LVL299:
 4475               	.L306:
 4476 0afc 9B01      	 movw r18,r22
 4477 0afe 281B      	 sub r18,r24
 4478 0b00 390B      	 sbc r19,r25
 4479 0b02 AC01      	 movw r20,r24
 4480 0b04 4A0F      	 add r20,r26
 4481 0b06 5B1F      	 adc r21,r27
 4482               	.LVL300:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4483               	 .loc 4 61 0 is_stmt 0 discriminator 1
 4484 0b08 8617      	 cp r24,r22
 4485 0b0a 9707      	 cpc r25,r23
 4486 0b0c 01F0      	 breq .L317
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4487               	 .loc 4 61 0 discriminator 2
 4488 0b0e 4830      	 cpi r20,8
 4489 0b10 5105      	 cpc r21,__zero_reg__
 4490 0b12 00F4      	 brsh .L307
 4491               	.LVL301:
 4492               	.LBB704:
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 4493               	 .loc 4 63 0 is_stmt 1
 4494               	 
 4495               	 
 4496 0b14 2491      	 lpm r18,Z
 4497               	 
 4498               	 
 4499               	.LVL302:
 4500               	 
 4501               	.LBE704:
 4502               	.LBB705:
 4503               	.LBB706:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 4504               	 .loc 2 554 0
 4505 0b16 2093 F100 	 sts 241,r18
 4506               	.LBE706:
 4507               	.LBE705:
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 4508               	 .loc 4 64 0
 4509 0b1a 3197      	 sbiw r30,1
 4510               	.LVL303:
 4511 0b1c 0196      	 adiw r24,1
 4512 0b1e 00C0      	 rjmp .L306
 4513               	.LVL304:
 4514               	.L317:
 4515 0b20 20E0      	 ldi r18,0
 4516 0b22 30E0      	 ldi r19,0
 4517               	.LVL305:
 4518               	.L307:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 4519               	 .loc 4 69 0
 4520 0b24 81E0      	 ldi r24,lo8(1)
 4521               	.LVL306:
 4522 0b26 4830      	 cpi r20,8
 4523 0b28 5105      	 cpc r21,__zero_reg__
 4524 0b2a 01F0      	 breq .L309
GAS LISTING  			page 164


 4525 0b2c 80E0      	 ldi r24,0
 4526               	.L309:
 4527               	.LVL307:
 4528               	.LBB707:
 4529               	.LBB708:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4530               	 .loc 2 456 0
 4531 0b2e 9091 E800 	 lds r25,232
 4532 0b32 9E77      	 andi r25,lo8(126)
 4533 0b34 9093 E800 	 sts 232,r25
 4534 0b38 B901      	 movw r22,r18
 4535 0b3a 00C0      	 rjmp .L305
 4536               	.LVL308:
 4537               	.L324:
 4538               	.LBE708:
 4539               	.LBE707:
 4540               	.LBE715:
 4541               	.LBE719:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4542               	 .loc 4 44 0 discriminator 2
 4543 0b3c 8111      	 cpse r24,__zero_reg__
 4544 0b3e 00C0      	 rjmp .L310
 4545 0b40 00C0      	 rjmp .L312
 4546               	.LVL309:
 4547               	.L303:
 4548               	.LBB720:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4549               	 .loc 4 76 0
 4550 0b42 8091 0000 	 lds r24,USB_DeviceState
 4551               	.LVL310:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4552               	 .loc 4 78 0
 4553 0b46 8823      	 tst r24
 4554 0b48 01F0      	 breq .L318
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4555               	 .loc 4 80 0
 4556 0b4a 8530      	 cpi r24,lo8(5)
 4557 0b4c 01F0      	 breq .L319
 4558               	.LBB721:
 4559               	.LBB722:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4560               	 .loc 2 431 0
 4561 0b4e 8091 E800 	 lds r24,232
 4562               	.LVL311:
 4563               	.LBE722:
 4564               	.LBE721:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4565               	 .loc 4 82 0
 4566 0b52 83FF      	 sbrs r24,3
 4567 0b54 00C0      	 rjmp .L312
 4568 0b56 00C0      	 rjmp .L320
 4569               	.L318:
 4570               	.LBE720:
 4571               	.LBB723:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 4572               	 .loc 4 49 0
 4573 0b58 82E0      	 ldi r24,lo8(2)
GAS LISTING  			page 165


 4574 0b5a 0895      	 ret
 4575               	.L319:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 4576               	 .loc 4 51 0
 4577 0b5c 83E0      	 ldi r24,lo8(3)
 4578 0b5e 0895      	 ret
 4579               	.L320:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 4580               	 .loc 4 53 0
 4581 0b60 81E0      	 ldi r24,lo8(1)
 4582               	.LBE723:
 4583               	 .loc 4 87 0
 4584 0b62 0895      	 ret
 4585               	 .cfi_endproc
 4586               	.LFE97:
 4588               	.global Endpoint_Write_Control_EStream_LE
 4590               	Endpoint_Write_Control_EStream_LE:
 4591               	.LFB98:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 4592               	 .loc 4 35 0
 4593               	 .cfi_startproc
 4594               	.LVL312:
 4595 0b64 EF92      	 push r14
 4596               	.LCFI92:
 4597               	 .cfi_def_cfa_offset 3
 4598               	 .cfi_offset 14,-2
 4599 0b66 FF92      	 push r15
 4600               	.LCFI93:
 4601               	 .cfi_def_cfa_offset 4
 4602               	 .cfi_offset 15,-3
 4603 0b68 0F93      	 push r16
 4604               	.LCFI94:
 4605               	 .cfi_def_cfa_offset 5
 4606               	 .cfi_offset 16,-4
 4607 0b6a 1F93      	 push r17
 4608               	.LCFI95:
 4609               	 .cfi_def_cfa_offset 6
 4610               	 .cfi_offset 17,-5
 4611 0b6c CF93      	 push r28
 4612               	.LCFI96:
 4613               	 .cfi_def_cfa_offset 7
 4614               	 .cfi_offset 28,-6
 4615 0b6e DF93      	 push r29
 4616               	.LCFI97:
 4617               	 .cfi_def_cfa_offset 8
 4618               	 .cfi_offset 29,-7
 4619               	 
 4620               	 
 4621               	 
 4622               	.L__stack_usage =6
 4623 0b70 8B01      	 movw r16,r22
 4624               	.LVL313:
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 4625               	 .loc 4 39 0
 4626 0b72 2091 0000 	 lds r18,USB_ControlRequest+6
 4627 0b76 3091 0000 	 lds r19,USB_ControlRequest+6+1
 4628 0b7a 2617      	 cp r18,r22
GAS LISTING  			page 166


 4629 0b7c 3707      	 cpc r19,r23
 4630 0b7e 00F0      	 brlo .L340
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 4631               	 .loc 4 41 0
 4632 0b80 6115      	 cp r22,__zero_reg__
 4633 0b82 7105      	 cpc r23,__zero_reg__
 4634 0b84 01F4      	 brne .L326
 4635               	.LBB724:
 4636               	.LBB725:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4637               	 .loc 2 456 0
 4638 0b86 2091 E800 	 lds r18,232
 4639 0b8a 2E77      	 andi r18,lo8(126)
 4640 0b8c 2093 E800 	 sts 232,r18
 4641 0b90 00C0      	 rjmp .L326
 4642               	.L340:
 4643               	.LBE725:
 4644               	.LBE724:
 4645 0b92 8901      	 movw r16,r18
 4646               	.L326:
 4647               	.LBB726:
 4648               	.LBB727:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4649               	 .loc 4 61 0 discriminator 1
 4650 0b94 20E0      	 ldi r18,0
 4651               	.LVL314:
 4652               	.L332:
 4653               	.LBE727:
 4654               	.LBE726:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4655               	 .loc 4 44 0 discriminator 1
 4656 0b96 0115      	 cp r16,__zero_reg__
 4657 0b98 1105      	 cpc r17,__zero_reg__
 4658 0b9a 01F0      	 breq .L353
 4659               	.L337:
 4660               	.LBB741:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4661               	 .loc 4 46 0
 4662 0b9c 3091 0000 	 lds r19,USB_DeviceState
 4663               	.LVL315:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4664               	 .loc 4 48 0
 4665 0ba0 3323      	 tst r19
 4666 0ba2 01F4      	 brne .+2
 4667 0ba4 00C0      	 rjmp .L344
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4668               	 .loc 4 50 0
 4669 0ba6 3530      	 cpi r19,lo8(5)
 4670 0ba8 01F4      	 brne .+2
 4671 0baa 00C0      	 rjmp .L345
 4672               	.LBB734:
 4673               	.LBB735:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4674               	 .loc 2 431 0
 4675 0bac 3091 E800 	 lds r19,232
 4676               	.LVL316:
 4677               	.LBE735:
GAS LISTING  			page 167


 4678               	.LBE734:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4679               	 .loc 4 52 0
 4680 0bb0 33FD      	 sbrc r19,3
 4681 0bb2 00C0      	 rjmp .L346
 4682               	.LBB736:
 4683               	.LBB737:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4684               	 .loc 2 419 0
 4685 0bb4 3091 E800 	 lds r19,232
 4686               	.LBE737:
 4687               	.LBE736:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 4688               	 .loc 4 54 0
 4689 0bb8 32FF      	 sbrs r19,2
 4690 0bba 00C0      	 rjmp .L329
 4691               	.L339:
 4692               	.LBE741:
 4693               	.LBB742:
 4694               	.LBB743:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4695               	 .loc 2 419 0 discriminator 1
 4696 0bbc 8091 E800 	 lds r24,232
 4697               	.LBE743:
 4698               	.LBE742:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 4699               	 .loc 4 74 0 discriminator 1
 4700 0bc0 82FF      	 sbrs r24,2
 4701 0bc2 00C0      	 rjmp .L330
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 4702               	 .loc 4 86 0
 4703 0bc4 80E0      	 ldi r24,0
 4704 0bc6 00C0      	 rjmp .L328
 4705               	.L329:
 4706               	.LBB744:
 4707               	.LBB738:
 4708               	.LBB739:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 4709               	 .loc 2 407 0
 4710 0bc8 3091 E800 	 lds r19,232
 4711               	.LBE739:
 4712               	.LBE738:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 4713               	 .loc 4 57 0
 4714 0bcc 30FF      	 sbrs r19,0
 4715 0bce 00C0      	 rjmp .L332
 4716               	.LBB740:
 4717               	.LBB728:
 4718               	.LBB729:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 4719               	 .loc 2 229 0
 4720 0bd0 E090 F200 	 lds r14,242
 4721 0bd4 F12C      	 mov r15,__zero_reg__
 4722               	.LBE729:
 4723               	.LBE728:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4724               	 .loc 4 61 0
GAS LISTING  			page 168


 4725 0bd6 EC01      	 movw r28,r24
 4726 0bd8 E81A      	 sub r14,r24
 4727 0bda F90A      	 sbc r15,r25
 4728               	.LVL317:
 4729               	.L333:
 4730 0bdc CE01      	 movw r24,r28
 4731 0bde 8E0D      	 add r24,r14
 4732 0be0 9F1D      	 adc r25,r15
 4733               	.LVL318:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4734               	 .loc 4 61 0 is_stmt 0 discriminator 1
 4735 0be2 0115      	 cp r16,__zero_reg__
 4736 0be4 1105      	 cpc r17,__zero_reg__
 4737 0be6 01F0      	 breq .L334
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4738               	 .loc 4 61 0 discriminator 2
 4739 0be8 8830      	 cpi r24,8
 4740 0bea 9105      	 cpc r25,__zero_reg__
 4741 0bec 00F4      	 brsh .L334
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 4742               	 .loc 4 63 0 is_stmt 1
 4743 0bee CE01      	 movw r24,r28
 4744               	.LVL319:
 4745 0bf0 0E94 0000 	 call __eerd_byte_m32u2
 4746               	.LVL320:
 4747               	.LBB730:
 4748               	.LBB731:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 4749               	 .loc 2 554 0
 4750 0bf4 8093 F100 	 sts 241,r24
 4751               	.LBE731:
 4752               	.LBE730:
  64:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 4753               	 .loc 4 64 0
 4754 0bf8 2196      	 adiw r28,1
 4755               	.LVL321:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				Length--;
 4756               	 .loc 4 65 0
 4757 0bfa 0150      	 subi r16,1
 4758 0bfc 1109      	 sbc r17,__zero_reg__
 4759               	.LVL322:
 4760 0bfe 00C0      	 rjmp .L333
 4761               	.LVL323:
 4762               	.L334:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 4763               	 .loc 4 69 0
 4764 0c00 21E0      	 ldi r18,lo8(1)
 4765 0c02 0897      	 sbiw r24,8
 4766 0c04 01F0      	 breq .L336
 4767 0c06 20E0      	 ldi r18,0
 4768               	.L336:
 4769               	.LVL324:
 4770               	.LBB732:
 4771               	.LBB733:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4772               	 .loc 2 456 0
 4773 0c08 8091 E800 	 lds r24,232
GAS LISTING  			page 169


 4774               	.LVL325:
 4775 0c0c 8E77      	 andi r24,lo8(126)
 4776 0c0e 8093 E800 	 sts 232,r24
 4777 0c12 CE01      	 movw r24,r28
 4778 0c14 00C0      	 rjmp .L332
 4779               	.LVL326:
 4780               	.L353:
 4781               	.LBE733:
 4782               	.LBE732:
 4783               	.LBE740:
 4784               	.LBE744:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4785               	 .loc 4 44 0 discriminator 2
 4786 0c16 2111      	 cpse r18,__zero_reg__
 4787 0c18 00C0      	 rjmp .L337
 4788 0c1a 00C0      	 rjmp .L339
 4789               	.L330:
 4790               	.LBB745:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4791               	 .loc 4 76 0
 4792 0c1c 8091 0000 	 lds r24,USB_DeviceState
 4793               	.LVL327:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4794               	 .loc 4 78 0
 4795 0c20 8823      	 tst r24
 4796 0c22 01F0      	 breq .L344
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4797               	 .loc 4 80 0
 4798 0c24 8530      	 cpi r24,lo8(5)
 4799 0c26 01F0      	 breq .L345
 4800               	.LBB746:
 4801               	.LBB747:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4802               	 .loc 2 431 0
 4803 0c28 8091 E800 	 lds r24,232
 4804               	.LVL328:
 4805               	.LBE747:
 4806               	.LBE746:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4807               	 .loc 4 82 0
 4808 0c2c 83FF      	 sbrs r24,3
 4809 0c2e 00C0      	 rjmp .L339
 4810 0c30 00C0      	 rjmp .L346
 4811               	.L344:
 4812               	.LBE745:
 4813               	.LBB748:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 4814               	 .loc 4 49 0
 4815 0c32 82E0      	 ldi r24,lo8(2)
 4816 0c34 00C0      	 rjmp .L328
 4817               	.L345:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 4818               	 .loc 4 51 0
 4819 0c36 83E0      	 ldi r24,lo8(3)
 4820 0c38 00C0      	 rjmp .L328
 4821               	.L346:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
GAS LISTING  			page 170


 4822               	 .loc 4 53 0
 4823 0c3a 81E0      	 ldi r24,lo8(1)
 4824               	.L328:
 4825               	 
 4826               	.LBE748:
 4827               	 .loc 4 87 0
 4828 0c3c DF91      	 pop r29
 4829 0c3e CF91      	 pop r28
 4830 0c40 1F91      	 pop r17
 4831 0c42 0F91      	 pop r16
 4832               	.LVL329:
 4833 0c44 FF90      	 pop r15
 4834 0c46 EF90      	 pop r14
 4835 0c48 0895      	 ret
 4836               	 .cfi_endproc
 4837               	.LFE98:
 4839               	.global Endpoint_Write_Control_EStream_BE
 4841               	Endpoint_Write_Control_EStream_BE:
 4842               	.LFB99:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** {
 4843               	 .loc 4 35 0
 4844               	 .cfi_startproc
 4845               	.LVL330:
 4846 0c4a CF92      	 push r12
 4847               	.LCFI98:
 4848               	 .cfi_def_cfa_offset 3
 4849               	 .cfi_offset 12,-2
 4850 0c4c DF92      	 push r13
 4851               	.LCFI99:
 4852               	 .cfi_def_cfa_offset 4
 4853               	 .cfi_offset 13,-3
 4854 0c4e EF92      	 push r14
 4855               	.LCFI100:
 4856               	 .cfi_def_cfa_offset 5
 4857               	 .cfi_offset 14,-4
 4858 0c50 FF92      	 push r15
 4859               	.LCFI101:
 4860               	 .cfi_def_cfa_offset 6
 4861               	 .cfi_offset 15,-5
 4862 0c52 0F93      	 push r16
 4863               	.LCFI102:
 4864               	 .cfi_def_cfa_offset 7
 4865               	 .cfi_offset 16,-6
 4866 0c54 1F93      	 push r17
 4867               	.LCFI103:
 4868               	 .cfi_def_cfa_offset 8
 4869               	 .cfi_offset 17,-7
 4870 0c56 CF93      	 push r28
 4871               	.LCFI104:
 4872               	 .cfi_def_cfa_offset 9
 4873               	 .cfi_offset 28,-8
 4874 0c58 DF93      	 push r29
 4875               	.LCFI105:
 4876               	 .cfi_def_cfa_offset 10
 4877               	 .cfi_offset 29,-9
 4878               	 
 4879               	 
GAS LISTING  			page 171


 4880               	 
 4881               	.L__stack_usage =8
 4882 0c5a EB01      	 movw r28,r22
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	uint8_t* DataStream     = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 4883               	 .loc 4 36 0
 4884 0c5c 7B01      	 movw r14,r22
 4885 0c5e 21E0      	 ldi r18,1
 4886 0c60 E21A      	 sub r14,r18
 4887 0c62 F108      	 sbc r15,__zero_reg__
 4888 0c64 E80E      	 add r14,r24
 4889 0c66 F91E      	 adc r15,r25
 4890               	.LVL331:
  39:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	if (Length > USB_ControlRequest.wLength)
 4891               	 .loc 4 39 0
 4892 0c68 8091 0000 	 lds r24,USB_ControlRequest+6
 4893 0c6c 9091 0000 	 lds r25,USB_ControlRequest+6+1
 4894               	.LVL332:
 4895 0c70 8617      	 cp r24,r22
 4896 0c72 9707      	 cpc r25,r23
 4897 0c74 00F0      	 brlo .L369
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	else if (!(Length))
 4898               	 .loc 4 41 0
 4899 0c76 2097      	 sbiw r28,0
 4900 0c78 01F4      	 brne .L355
 4901               	.LBB749:
 4902               	.LBB750:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 4903               	 .loc 2 456 0
 4904 0c7a 8091 E800 	 lds r24,232
 4905 0c7e 8E77      	 andi r24,lo8(126)
 4906 0c80 8093 E800 	 sts 232,r24
 4907 0c84 00C0      	 rjmp .L355
 4908               	.L369:
 4909               	.LBE750:
 4910               	.LBE749:
 4911 0c86 EC01      	 movw r28,r24
 4912               	.L355:
 4913               	.LBB751:
 4914               	.LBB752:
 4915 0c88 60E0      	 ldi r22,0
 4916               	.LVL333:
 4917               	.L361:
 4918               	.LBE752:
 4919               	.LBE751:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 4920               	 .loc 4 44 0 discriminator 1
 4921 0c8a 2097      	 sbiw r28,0
 4922 0c8c 01F4      	 brne .+2
 4923 0c8e 00C0      	 rjmp .L380
 4924               	.L366:
 4925               	.LBB766:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 4926               	 .loc 4 46 0
 4927 0c90 8091 0000 	 lds r24,USB_DeviceState
 4928               	.LVL334:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 4929               	 .loc 4 48 0
GAS LISTING  			page 172


 4930 0c94 8823      	 tst r24
 4931 0c96 01F4      	 brne .+2
 4932 0c98 00C0      	 rjmp .L374
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 4933               	 .loc 4 50 0
 4934 0c9a 8530      	 cpi r24,lo8(5)
 4935 0c9c 01F4      	 brne .+2
 4936 0c9e 00C0      	 rjmp .L375
 4937               	.LBB759:
 4938               	.LBB760:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 4939               	 .loc 2 431 0
 4940 0ca0 8091 E800 	 lds r24,232
 4941               	.LVL335:
 4942               	.LBE760:
 4943               	.LBE759:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 4944               	 .loc 4 52 0
 4945 0ca4 83FD      	 sbrc r24,3
 4946 0ca6 00C0      	 rjmp .L376
 4947               	.LBB761:
 4948               	.LBB762:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4949               	 .loc 2 419 0
 4950 0ca8 8091 E800 	 lds r24,232
 4951               	.LBE762:
 4952               	.LBE761:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsOUTReceived())
 4953               	 .loc 4 54 0
 4954 0cac 82FF      	 sbrs r24,2
 4955 0cae 00C0      	 rjmp .L358
 4956               	.L368:
 4957               	.LBE766:
 4958               	.LBB767:
 4959               	.LBB768:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 4960               	 .loc 2 419 0 discriminator 1
 4961 0cb0 8091 E800 	 lds r24,232
 4962               	.LBE768:
 4963               	.LBE767:
  74:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (!(Endpoint_IsOUTReceived()))
 4964               	 .loc 4 74 0 discriminator 1
 4965 0cb4 82FF      	 sbrs r24,2
 4966 0cb6 00C0      	 rjmp .L359
  86:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 4967               	 .loc 4 86 0
 4968 0cb8 80E0      	 ldi r24,0
 4969 0cba 00C0      	 rjmp .L357
 4970               	.L358:
 4971               	.LBB769:
 4972               	.LBB763:
 4973               	.LBB764:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 4974               	 .loc 2 407 0
 4975 0cbc 8091 E800 	 lds r24,232
 4976               	.LBE764:
 4977               	.LBE763:
GAS LISTING  			page 173


  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (Endpoint_IsINReady())
 4978               	 .loc 4 57 0
 4979 0cc0 80FF      	 sbrs r24,0
 4980 0cc2 00C0      	 rjmp .L361
 4981               	.LBB765:
 4982               	.LBB753:
 4983               	.LBB754:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 4984               	 .loc 2 229 0
 4985 0cc4 C090 F200 	 lds r12,242
 4986 0cc8 D12C      	 mov r13,__zero_reg__
 4987               	.LBE754:
 4988               	.LBE753:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 4989               	 .loc 4 61 0
 4990 0cca 00E0      	 ldi r16,0
 4991 0ccc 10E0      	 ldi r17,0
 4992               	.LVL336:
 4993               	.L362:
 4994 0cce 9E01      	 movw r18,r28
 4995 0cd0 201B      	 sub r18,r16
 4996 0cd2 310B      	 sbc r19,r17
 4997 0cd4 A801      	 movw r20,r16
 4998 0cd6 4C0D      	 add r20,r12
 4999 0cd8 5D1D      	 adc r21,r13
 5000 0cda C701      	 movw r24,r14
 5001 0cdc 801B      	 sub r24,r16
 5002 0cde 910B      	 sbc r25,r17
 5003               	.LVL337:
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 5004               	 .loc 4 61 0 is_stmt 0 discriminator 1
 5005 0ce0 0C17      	 cp r16,r28
 5006 0ce2 1D07      	 cpc r17,r29
 5007 0ce4 01F0      	 breq .L373
  61:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			while (Length && (BytesInEndpoint < USB_Device_ControlEndpointSize))
 5008               	 .loc 4 61 0 discriminator 2
 5009 0ce6 4830      	 cpi r20,8
 5010 0ce8 5105      	 cpc r21,__zero_reg__
 5011 0cea 00F4      	 brsh .L363
  63:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 5012               	 .loc 4 63 0 is_stmt 1
 5013 0cec 0E94 0000 	 call __eerd_byte_m32u2
 5014               	.LVL338:
 5015               	.LBB755:
 5016               	.LBB756:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 5017               	 .loc 2 554 0
 5018 0cf0 8093 F100 	 sts 241,r24
 5019               	.LVL339:
 5020 0cf4 0F5F      	 subi r16,-1
 5021 0cf6 1F4F      	 sbci r17,-1
 5022               	.LVL340:
 5023 0cf8 00C0      	 rjmp .L362
 5024               	.LVL341:
 5025               	.L373:
 5026               	.LBE756:
 5027               	.LBE755:
GAS LISTING  			page 174


 5028 0cfa 20E0      	 ldi r18,0
 5029 0cfc 30E0      	 ldi r19,0
 5030               	.LVL342:
 5031               	.L363:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 			LastPacketFull = (BytesInEndpoint == USB_Device_ControlEndpointSize);
 5032               	 .loc 4 69 0
 5033 0cfe 61E0      	 ldi r22,lo8(1)
 5034 0d00 4830      	 cpi r20,8
 5035 0d02 5105      	 cpc r21,__zero_reg__
 5036 0d04 01F0      	 breq .L365
 5037 0d06 60E0      	 ldi r22,0
 5038               	.L365:
 5039               	.LVL343:
 5040               	.LBB757:
 5041               	.LBB758:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 5042               	 .loc 2 456 0
 5043 0d08 4091 E800 	 lds r20,232
 5044               	.LVL344:
 5045 0d0c 4E77      	 andi r20,lo8(126)
 5046 0d0e 4093 E800 	 sts 232,r20
 5047 0d12 7C01      	 movw r14,r24
 5048 0d14 E901      	 movw r28,r18
 5049               	.LVL345:
 5050 0d16 00C0      	 rjmp .L361
 5051               	.LVL346:
 5052               	.L380:
 5053               	.LBE758:
 5054               	.LBE757:
 5055               	.LBE765:
 5056               	.LBE769:
  44:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 	while (Length || LastPacketFull)
 5057               	 .loc 4 44 0 discriminator 2
 5058 0d18 6111      	 cpse r22,__zero_reg__
 5059 0d1a 00C0      	 rjmp .L366
 5060 0d1c 00C0      	 rjmp .L368
 5061               	.L359:
 5062               	.LBB770:
  76:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 5063               	 .loc 4 76 0
 5064 0d1e 8091 0000 	 lds r24,USB_DeviceState
 5065               	.LVL347:
  78:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 5066               	 .loc 4 78 0
 5067 0d22 8823      	 tst r24
 5068 0d24 01F0      	 breq .L374
  80:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 5069               	 .loc 4 80 0
 5070 0d26 8530      	 cpi r24,lo8(5)
 5071 0d28 01F0      	 breq .L375
 5072               	.LBB771:
 5073               	.LBB772:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 5074               	 .loc 2 431 0
 5075 0d2a 8091 E800 	 lds r24,232
 5076               	.LVL348:
 5077               	.LBE772:
GAS LISTING  			page 175


 5078               	.LBE771:
  82:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		else if (Endpoint_IsSETUPReceived())
 5079               	 .loc 4 82 0
 5080 0d2e 83FF      	 sbrs r24,3
 5081 0d30 00C0      	 rjmp .L368
 5082 0d32 00C0      	 rjmp .L376
 5083               	.L374:
 5084               	.LBE770:
 5085               	.LBB773:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 5086               	 .loc 4 49 0
 5087 0d34 82E0      	 ldi r24,lo8(2)
 5088 0d36 00C0      	 rjmp .L357
 5089               	.L375:
  51:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 5090               	 .loc 4 51 0
 5091 0d38 83E0      	 ldi r24,lo8(3)
 5092 0d3a 00C0      	 rjmp .L357
 5093               	.L376:
  53:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_W.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 5094               	 .loc 4 53 0
 5095 0d3c 81E0      	 ldi r24,lo8(1)
 5096               	.L357:
 5097               	 
 5098               	.LBE773:
 5099               	 .loc 4 87 0
 5100 0d3e DF91      	 pop r29
 5101 0d40 CF91      	 pop r28
 5102               	.LVL349:
 5103 0d42 1F91      	 pop r17
 5104 0d44 0F91      	 pop r16
 5105 0d46 FF90      	 pop r15
 5106 0d48 EF90      	 pop r14
 5107               	.LVL350:
 5108 0d4a DF90      	 pop r13
 5109 0d4c CF90      	 pop r12
 5110 0d4e 0895      	 ret
 5111               	 .cfi_endproc
 5112               	.LFE99:
 5114               	.global Endpoint_Read_Control_EStream_LE
 5116               	Endpoint_Read_Control_EStream_LE:
 5117               	.LFB100:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** {
 5118               	 .loc 5 35 0
 5119               	 .cfi_startproc
 5120               	.LVL351:
 5121 0d50 0F93      	 push r16
 5122               	.LCFI106:
 5123               	 .cfi_def_cfa_offset 3
 5124               	 .cfi_offset 16,-2
 5125 0d52 1F93      	 push r17
 5126               	.LCFI107:
 5127               	 .cfi_def_cfa_offset 4
 5128               	 .cfi_offset 17,-3
 5129 0d54 CF93      	 push r28
 5130               	.LCFI108:
 5131               	 .cfi_def_cfa_offset 5
GAS LISTING  			page 176


 5132               	 .cfi_offset 28,-4
 5133 0d56 DF93      	 push r29
 5134               	.LCFI109:
 5135               	 .cfi_def_cfa_offset 6
 5136               	 .cfi_offset 29,-5
 5137               	 
 5138               	 
 5139               	 
 5140               	.L__stack_usage =4
 5141 0d58 EB01      	 movw r28,r22
 5142               	.LVL352:
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	if (!(Length))
 5143               	 .loc 5 38 0
 5144 0d5a 2097      	 sbiw r28,0
 5145 0d5c 01F4      	 brne .L382
 5146               	.LBB805:
 5147               	.LBB806:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 5148               	 .loc 2 471 0
 5149 0d5e 2091 E800 	 lds r18,232
 5150 0d62 2B77      	 andi r18,lo8(123)
 5151 0d64 2093 E800 	 sts 232,r18
 5152               	.L382:
 5153               	.LBE806:
 5154               	.LBE805:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** {
 5155               	 .loc 5 35 0 discriminator 1
 5156 0d68 8C01      	 movw r16,r24
 5157               	.LVL353:
 5158               	.L383:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (Length)
 5159               	 .loc 5 41 0 discriminator 1
 5160 0d6a 2097      	 sbiw r28,0
 5161 0d6c 01F0      	 breq .L392
 5162               	.L386:
 5163               	.LBB807:
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 5164               	 .loc 5 43 0
 5165 0d6e 8091 0000 	 lds r24,USB_DeviceState
 5166               	.LVL354:
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 5167               	 .loc 5 45 0
 5168 0d72 8823      	 tst r24
 5169 0d74 01F0      	 breq .L393
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 5170               	 .loc 5 47 0
 5171 0d76 8530      	 cpi r24,lo8(5)
 5172 0d78 01F0      	 breq .L394
 5173               	.LBB808:
 5174               	.LBB809:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 5175               	 .loc 2 431 0
 5176 0d7a 8091 E800 	 lds r24,232
 5177               	.LVL355:
 5178               	.LBE809:
 5179               	.LBE808:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (Endpoint_IsSETUPReceived())
GAS LISTING  			page 177


 5180               	 .loc 5 49 0
 5181 0d7e 83FD      	 sbrc r24,3
 5182 0d80 00C0      	 rjmp .L395
 5183               	.LBB810:
 5184               	.LBB811:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 5185               	 .loc 2 419 0
 5186 0d82 8091 E800 	 lds r24,232
 5187               	.LBE811:
 5188               	.LBE810:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (Endpoint_IsOUTReceived())
 5189               	 .loc 5 52 0
 5190 0d86 82FF      	 sbrs r24,2
 5191 0d88 00C0      	 rjmp .L386
 5192               	.L387:
 5193               	.LBB812:
 5194               	.LBB813:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 5195               	 .loc 2 229 0
 5196 0d8a 8091 F200 	 lds r24,242
 5197               	.LBE813:
 5198               	.LBE812:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 5199               	 .loc 5 54 0
 5200 0d8e 8823      	 tst r24
 5201 0d90 01F0      	 breq .L388
 5202               	.LBB814:
 5203               	.LBB815:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 5204               	 .loc 2 542 0
 5205 0d92 6091 F100 	 lds r22,241
 5206               	.LBE815:
 5207               	.LBE814:
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 5208               	 .loc 5 56 0
 5209 0d96 C801      	 movw r24,r16
 5210 0d98 0E94 0000 	 call __eeupd_byte_m32u2
 5211               	.LVL356:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 5212               	 .loc 5 57 0
 5213 0d9c 0F5F      	 subi r16,-1
 5214 0d9e 1F4F      	 sbci r17,-1
 5215               	.LVL357:
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				Length--;
 5216               	 .loc 5 58 0
 5217 0da0 2197      	 sbiw r28,1
 5218               	.LVL358:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 5219               	 .loc 5 54 0
 5220 0da2 2097      	 sbiw r28,0
 5221 0da4 01F4      	 brne .L387
 5222               	.L388:
 5223               	.LBB816:
 5224               	.LBB817:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 5225               	 .loc 2 471 0
 5226 0da6 8091 E800 	 lds r24,232
GAS LISTING  			page 178


 5227 0daa 8B77      	 andi r24,lo8(123)
 5228 0dac 8093 E800 	 sts 232,r24
 5229 0db0 00C0      	 rjmp .L383
 5230               	.L402:
 5231               	.LBE817:
 5232               	.LBE816:
 5233               	.LBE807:
 5234               	.LBB818:
 5235               	.LBB819:
 5236               	.LBB820:
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 5237               	 .loc 5 67 0
 5238 0db2 8091 0000 	 lds r24,USB_DeviceState
 5239               	.LVL359:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 5240               	 .loc 5 69 0
 5241 0db6 8823      	 tst r24
 5242 0db8 01F0      	 breq .L393
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 5243               	 .loc 5 71 0
 5244 0dba 8530      	 cpi r24,lo8(5)
 5245 0dbc 01F0      	 breq .L394
 5246               	.LVL360:
 5247               	.L392:
 5248               	.LBE820:
 5249               	.LBB821:
 5250               	.LBB822:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 5251               	 .loc 2 407 0
 5252 0dbe 8091 E800 	 lds r24,232
 5253               	.LBE822:
 5254               	.LBE821:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (!(Endpoint_IsINReady()))
 5255               	 .loc 5 65 0
 5256 0dc2 80FF      	 sbrs r24,0
 5257 0dc4 00C0      	 rjmp .L402
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 5258               	 .loc 5 75 0
 5259 0dc6 80E0      	 ldi r24,0
 5260 0dc8 00C0      	 rjmp .L384
 5261               	.L393:
 5262               	.LBE819:
 5263               	.LBE818:
 5264               	.LBB823:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 5265               	 .loc 5 46 0
 5266 0dca 82E0      	 ldi r24,lo8(2)
 5267 0dcc 00C0      	 rjmp .L384
 5268               	.L394:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 5269               	 .loc 5 48 0
 5270 0dce 83E0      	 ldi r24,lo8(3)
 5271 0dd0 00C0      	 rjmp .L384
 5272               	.L395:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 5273               	 .loc 5 50 0
 5274 0dd2 81E0      	 ldi r24,lo8(1)
GAS LISTING  			page 179


 5275               	.L384:
 5276               	 
 5277               	.LBE823:
 5278               	 .loc 5 76 0
 5279 0dd4 DF91      	 pop r29
 5280 0dd6 CF91      	 pop r28
 5281               	.LVL361:
 5282 0dd8 1F91      	 pop r17
 5283 0dda 0F91      	 pop r16
 5284               	.LVL362:
 5285 0ddc 0895      	 ret
 5286               	 .cfi_endproc
 5287               	.LFE100:
 5289               	.global Endpoint_Read_Control_EStream_BE
 5291               	Endpoint_Read_Control_EStream_BE:
 5292               	.LFB101:
  35:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** {
 5293               	 .loc 5 35 0
 5294               	 .cfi_startproc
 5295               	.LVL363:
 5296 0dde 0F93      	 push r16
 5297               	.LCFI110:
 5298               	 .cfi_def_cfa_offset 3
 5299               	 .cfi_offset 16,-2
 5300 0de0 1F93      	 push r17
 5301               	.LCFI111:
 5302               	 .cfi_def_cfa_offset 4
 5303               	 .cfi_offset 17,-3
 5304 0de2 CF93      	 push r28
 5305               	.LCFI112:
 5306               	 .cfi_def_cfa_offset 5
 5307               	 .cfi_offset 28,-4
 5308 0de4 DF93      	 push r29
 5309               	.LCFI113:
 5310               	 .cfi_def_cfa_offset 6
 5311               	 .cfi_offset 29,-5
 5312               	 
 5313               	 
 5314               	 
 5315               	.L__stack_usage =4
 5316 0de6 EB01      	 movw r28,r22
  36:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	uint8_t* DataStream = ((uint8_t*)Buffer + TEMPLATE_BUFFER_OFFSET(Length));
 5317               	 .loc 5 36 0
 5318 0de8 8B01      	 movw r16,r22
 5319 0dea 0150      	 subi r16,1
 5320 0dec 1109      	 sbc r17,__zero_reg__
 5321 0dee 080F      	 add r16,r24
 5322 0df0 191F      	 adc r17,r25
 5323               	.LVL364:
  38:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	if (!(Length))
 5324               	 .loc 5 38 0
 5325 0df2 2097      	 sbiw r28,0
 5326 0df4 01F4      	 brne .L405
 5327               	.LVL365:
 5328               	.L410:
 5329               	.LBB855:
 5330               	.LBB856:
GAS LISTING  			page 180


 5331               	.LBB857:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 5332               	 .loc 2 471 0
 5333 0df6 8091 E800 	 lds r24,232
 5334 0dfa 8B77      	 andi r24,lo8(123)
 5335 0dfc 8093 E800 	 sts 232,r24
 5336               	.L405:
 5337               	.LBE857:
 5338               	.LBE856:
 5339               	.LBE855:
  41:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (Length)
 5340               	 .loc 5 41 0 discriminator 1
 5341 0e00 2097      	 sbiw r28,0
 5342 0e02 01F0      	 breq .L414
 5343               	.L408:
 5344               	.LBB866:
  43:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 5345               	 .loc 5 43 0
 5346 0e04 8091 0000 	 lds r24,USB_DeviceState
 5347               	.LVL366:
  45:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 5348               	 .loc 5 45 0
 5349 0e08 8823      	 tst r24
 5350 0e0a 01F0      	 breq .L415
  47:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 5351               	 .loc 5 47 0
 5352 0e0c 8530      	 cpi r24,lo8(5)
 5353 0e0e 01F0      	 breq .L416
 5354               	.LBB858:
 5355               	.LBB859:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 5356               	 .loc 2 431 0
 5357 0e10 8091 E800 	 lds r24,232
 5358               	.LVL367:
 5359               	.LBE859:
 5360               	.LBE858:
  49:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (Endpoint_IsSETUPReceived())
 5361               	 .loc 5 49 0
 5362 0e14 83FD      	 sbrc r24,3
 5363 0e16 00C0      	 rjmp .L417
 5364               	.LBB860:
 5365               	.LBB861:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 5366               	 .loc 2 419 0
 5367 0e18 8091 E800 	 lds r24,232
 5368               	.LBE861:
 5369               	.LBE860:
  52:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (Endpoint_IsOUTReceived())
 5370               	 .loc 5 52 0
 5371 0e1c 82FF      	 sbrs r24,2
 5372 0e1e 00C0      	 rjmp .L408
 5373               	.L409:
 5374               	.LBB862:
 5375               	.LBB863:
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 5376               	 .loc 2 229 0
 5377 0e20 8091 F200 	 lds r24,242
GAS LISTING  			page 181


 5378               	.LBE863:
 5379               	.LBE862:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 5380               	 .loc 5 54 0
 5381 0e24 8823      	 tst r24
 5382 0e26 01F0      	 breq .L410
 5383               	.LBB864:
 5384               	.LBB865:
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 5385               	 .loc 2 542 0
 5386 0e28 6091 F100 	 lds r22,241
 5387               	.LBE865:
 5388               	.LBE864:
  56:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_TRANSFER_BYTE(DataStream);
 5389               	 .loc 5 56 0
 5390 0e2c C801      	 movw r24,r16
 5391 0e2e 0E94 0000 	 call __eeupd_byte_m32u2
 5392               	.LVL368:
  57:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				TEMPLATE_BUFFER_MOVE(DataStream, 1);
 5393               	 .loc 5 57 0
 5394 0e32 0150      	 subi r16,1
 5395 0e34 1109      	 sbc r17,__zero_reg__
 5396               	.LVL369:
  58:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 				Length--;
 5397               	 .loc 5 58 0
 5398 0e36 2197      	 sbiw r28,1
 5399               	.LVL370:
  54:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 			while (Length && Endpoint_BytesInEndpoint())
 5400               	 .loc 5 54 0
 5401 0e38 2097      	 sbiw r28,0
 5402 0e3a 01F4      	 brne .L409
 5403 0e3c 00C0      	 rjmp .L410
 5404               	.L424:
 5405               	.LBE866:
 5406               	.LBB867:
 5407               	.LBB868:
 5408               	.LBB869:
  67:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 5409               	 .loc 5 67 0
 5410 0e3e 8091 0000 	 lds r24,USB_DeviceState
 5411               	.LVL371:
  69:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 5412               	 .loc 5 69 0
 5413 0e42 8823      	 tst r24
 5414 0e44 01F0      	 breq .L415
  71:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 5415               	 .loc 5 71 0
 5416 0e46 8530      	 cpi r24,lo8(5)
 5417 0e48 01F0      	 breq .L416
 5418               	.LVL372:
 5419               	.L414:
 5420               	.LBE869:
 5421               	.LBB870:
 5422               	.LBB871:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 5423               	 .loc 2 407 0
 5424 0e4a 8091 E800 	 lds r24,232
GAS LISTING  			page 182


 5425               	.LBE871:
 5426               	.LBE870:
  65:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	while (!(Endpoint_IsINReady()))
 5427               	 .loc 5 65 0
 5428 0e4e 80FF      	 sbrs r24,0
 5429 0e50 00C0      	 rjmp .L424
  75:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 	return ENDPOINT_RWCSTREAM_NoError;
 5430               	 .loc 5 75 0
 5431 0e52 80E0      	 ldi r24,0
 5432 0e54 00C0      	 rjmp .L406
 5433               	.L415:
 5434               	.LBE868:
 5435               	.LBE867:
 5436               	.LBB872:
  46:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_DeviceDisconnected;
 5437               	 .loc 5 46 0
 5438 0e56 82E0      	 ldi r24,lo8(2)
 5439 0e58 00C0      	 rjmp .L406
 5440               	.L416:
  48:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_BusSuspended;
 5441               	 .loc 5 48 0
 5442 0e5a 83E0      	 ldi r24,lo8(3)
 5443 0e5c 00C0      	 rjmp .L406
 5444               	.L417:
  50:LUFA/Drivers/USB/Core/AVR8/Template/Template_Endpoint_Control_R.c **** 		  return ENDPOINT_RWCSTREAM_HostAborted;
 5445               	 .loc 5 50 0
 5446 0e5e 81E0      	 ldi r24,lo8(1)
 5447               	.L406:
 5448               	 
 5449               	.LBE872:
 5450               	 .loc 5 76 0
 5451 0e60 DF91      	 pop r29
 5452 0e62 CF91      	 pop r28
 5453               	.LVL373:
 5454 0e64 1F91      	 pop r17
 5455 0e66 0F91      	 pop r16
 5456               	.LVL374:
 5457 0e68 0895      	 ret
 5458               	 .cfi_endproc
 5459               	.LFE101:
 5461               	.Letext0:
 5462               	 .file 6 "/usr/lib/avr/include/stdint.h"
 5463               	 .file 7 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../StdRequestType.h"
 5464               	 .file 8 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../Device.h"
 5465               	 .file 9 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../EndpointStream.h"
 5466               	 .file 10 "LUFA/Drivers/USB/Core/AVR8/../USBTask.h"
 5467               	 .file 11 "/usr/lib/avr/include/avr/eeprom.h"
GAS LISTING  			page 183


DEFINED SYMBOLS
                            *ABS*:0000000000000000 EndpointStream_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:1381   .text:0000000000000000 Endpoint_Discard_Stream
    {standard input}:1528   .text:000000000000007e Endpoint_Null_Stream
    {standard input}:1674   .text:00000000000000fc Endpoint_Write_Stream_LE
    {standard input}:1841   .text:0000000000000192 Endpoint_Write_Stream_BE
    {standard input}:2014   .text:0000000000000236 Endpoint_Read_Stream_LE
    {standard input}:2178   .text:00000000000002cc Endpoint_Read_Stream_BE
    {standard input}:2349   .text:0000000000000370 Endpoint_Write_PStream_LE
    {standard input}:2525   .text:000000000000040a Endpoint_Write_PStream_BE
    {standard input}:2706   .text:00000000000004b0 Endpoint_Write_EStream_LE
    {standard input}:2875   .text:000000000000054c Endpoint_Write_EStream_BE
    {standard input}:3049   .text:00000000000005f4 Endpoint_Read_EStream_LE
    {standard input}:3219   .text:0000000000000694 Endpoint_Read_EStream_BE
    {standard input}:3392   .text:000000000000073c Endpoint_Write_Control_Stream_LE
    {standard input}:3606   .text:0000000000000802 Endpoint_Write_Control_Stream_BE
    {standard input}:3830   .text:00000000000008d2 Endpoint_Read_Control_Stream_LE
    {standard input}:3983   .text:0000000000000948 Endpoint_Read_Control_Stream_BE
    {standard input}:4130   .text:00000000000009c2 Endpoint_Write_Control_PStream_LE
    {standard input}:4353   .text:0000000000000a8a Endpoint_Write_Control_PStream_BE
    {standard input}:4590   .text:0000000000000b64 Endpoint_Write_Control_EStream_LE
    {standard input}:4841   .text:0000000000000c4a Endpoint_Write_Control_EStream_BE
    {standard input}:5116   .text:0000000000000d50 Endpoint_Read_Control_EStream_LE
    {standard input}:5291   .text:0000000000000dde Endpoint_Read_Control_EStream_BE
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
Endpoint_WaitUntilReady
USB_USBTask
__eerd_byte_m32u2
__eeupd_byte_m32u2
USB_ControlRequest
USB_DeviceState
GAS LISTING  			page 1


   1               	 .file "Endpoint_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.462cc1691dd85764,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\304\2404\033\003\003#;\02333\204\307\314\300\302\300\300\316\300"
  10      6062 C006 
  10      C4A0 341B 
  10      0303 233B 
  10      1333 3384 
  11 001d 00        	 .string ""
  12 001e 0577 00   	 .string "\005w"
  13 0021 3F        	 .ascii "?"
  14               	 .text
  15               	 .section .gnu.lto_.inline.462cc1691dd85764,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b\300\006\346Ai6 bed`b\373\240\307\300\266@\036\254\230\221Aq>\023##\220f``\266\372pU\t\"\303t\202\213\205\201\005(\306\304\240|\226\205\021\b@l\2637{m \362 )V>F\006\346\t~ \310\314\300o\0034X\342K';\334d\026\006\211k@c\2314\2565s!\254\343\002\022\354\f\212-L@\031\233i\207\345\3412\f"
  16      6062 C006 
  16      E641 6936 
  16      2062 6564 
  16      6062 FBA0 
  17 007a 3731 16F4 	 .ascii "71\026\364"
  18               	 .text
  19               	 .section .gnu.lto_.pureconst.462cc1691dd85764,"",@progbits
  20 0000 789C 6362 	 .string "x\234cb`b\340e\200"
  20      6062 E065 
  20      8000 
  21 000a 3606 2946 	 .string "6\006)F)&Kf)\026)v)"
  21      2926 4B66 
  21      2916 2976 
  21      2900 
  22 0018 06A3 00   	 .string "\006\243"
  23 001b E4        	 .ascii "\344"
  24               	 .text
  25               	 .section .gnu.lto_Endpoint_ClearStatusStage.part.0.462cc1691dd85764,"",@progbits
  26 0000 789C 8D51 	 .string "x\234\215QMKBA\024\275w\336<\262]-\333E\333\340\275EP\355\312\262 h\225\230B\201\204>I\021\r\023\267\216\245 B \341B,\202\202Hp\241mk#F\2530\210\376\200\355\372\013mz\335\231\027}c\016\314\234;\367\3169s\356\f\003\006?\307$\315'\004(\020\242\016\310\313\367\024pd\n\031j\022s.\rQ\006\200\220\345L\303\354&J2\237\200S!j\275\363\263K^h\211\242\260\355l\\V\"\b\033\030Gt)`\370\375N\207%\212\2256\226\305\253m\343\240\234\303\366c\351\370\313M\032\003\003\007#\236\224\366\364\252\310\267m{N\361\346\377\3435\231\350\331\366KcXGP\fZ(\255C^\210\362\270\262K\303O\253|\030?r\211Z"
  26      4D4B 4241 
  26      14BD 77DE 
  26      3CB2 5D2D 
  26      DB45 DBE0 
  27 00d7 99C2 2E74 	 .ascii "\231\302.t\256n\033\007\315\346\320\007\301\t\332w\335\216\016"
  27      AE6E 1B07 
  27      CDE6 D007 
  27      C109 DA77 
  27      DD8E 0E
  28 00ea 10C6 0B7A 	 .ascii "\020\306\013z\355\b*\221\030\342\021\324r\225\334H\034\271\364"
  28      ED08 2A91 
  28      18E2 11D4 
  28      7295 DC48 
  28      1CB9 F4
  29 00fd A23F 3BD6 	 .ascii "\242?;\326\364w/]\330\277\276Qja\254S6\206\2148cP\025u\321\242"
  29      F477 2F5D 
  29      D8BF BE51 
  29      6A61 AC53 
GAS LISTING  			page 2


  29      3686 8C38 
  30 0117 7EB8 3AD3 	 .ascii "~\270:\323Yq\252\375\264\210\351H\006\250\033i\364\201>\367\263"
  30      5971 AAFD 
  30      B488 E948 
  30      06A8 1B69 
  30      F481 3EF7 
  31 012c 693F 19A2 	 .ascii "i?\031\242\254<3\271\352[v\233\236T4c\245vM\237w\301\\L\246,"
  31      AC3C 33B9 
  31      EA5B 769B 
  31      9E54 3463 
  31      A576 4D9F 
  32 0146 D3BD BE36 	 .ascii "\323\275\2766k.%\302;\311h\"\035\224;#\004\243T\016z\254L4dy"
  32      6B2E 25C2 
  32      3BC9 6822 
  32      1D94 3B23 
  32      04A3 540E 
  33 0160 D35B 69CB 	 .ascii "\323[i\313\230\371\225\231\236\352\243g\030\177\351n\303\033"
  33      98F9 9599 
  33      9EEA A367 
  33      187F E96E 
  33      C31B 
  34 0172 25DD A0A2 	 .ascii "%\335\240\242"
  35               	 .text
  36               	 .section .gnu.lto_Endpoint_ConfigureEndpoint_Prv.462cc1691dd85764,"",@progbits
  37 0000 789C 8D56 	 .string "x\234\215V]h\034U\024>\347\316\314\316\354O\222%\211OK\332\374\211\212\230m\321\322\274i\254[)\224\"\352\332@\005\037\234\004\273\364'$\352kf\233\255\244\230-1\370\320V\220\006-\241\376\305B\025\263\365a\233d51\032\024\372`\241`\2126jb\332\210R#\304\216\347\336;3\273\331nv;\260\347\3369\367|\337=\347\334s\317,\003\006\305\317\t\372\2357"
  37      5D68 1C55 
  37      143E E7CE 
  37      CCCE EC4F 
  37      9225 894F 
  38 0079 4668 C410 	 .string "Fh\304\020 \033\236\007H\032\f\375r\2420m\365>\260\002\352\331v\260B*jR\2551\337\340\003\244\326\271\f\371\320\220j\235\005'\025R\033\363\337"
  38      201B 9E07 
  38      481A 0CFD 
  38      72A2 306D 
  38      F53E B002 
  39 00ab E90D C972 	 .string "\351\r\311r\331\3603Eh\002\001\276\034\n`P\332\007\021\371\004\020\372\231\242j>\335\360\007\202\330\377\"r\327\324f\030\265\254\221\205\334\342\032\246\254\005k\330\272c\367\343!\244(\332\020\272\021\016\320\013\032b`\2701,\t\315N|\225V\255O\255A\313\266\373\005\360\261{\004f\336`\247\254T\326\266\037\027\260'\356\021\366\345F\330\336J\260q\226]\260\355\365\361\357\377\306\207\020L\034\305f\202\231\370\036\215\n\215\347hTi\034\243Q\203C\250\370\261\007!D\002\253H\260j\307\266\306\261\r;\266\265d\013u$\324z.\"\016u\003\177\331\302\305V.\032\271h\342\242\231\213\026\022Z+\237\221g\032\244,k\270\021x"
  39      D9F0 3345 
  39      6802 01BE 
  39      1C0A 6050 
  39      DA07 11F9 
  40 0173 F4EC 2779 	 .string "\364\354'yZ\203Nd4(\263pl\341\314\317\272c#\271\201\3668\217\032\210\tW$\320/\203\354D\005\350\3649\312\220\231\032\036\311\376{:\237)\037\343\374\3453\225@R|\007\003\227\246\354\364\273't\317=9\311\276yeT7\361C\341\207\347\026\317\214\314\213\314\n\367\354\003\351b7\242dm b\276\237^\003\234\177rv\375\326\352l\273\211\037\223\335;p&\371v2L\213\334\302\370]:h8\3764"
  40      5A83 4E64 
  40      3428 B370 
  40      6CE1 CCCF 
  40      BA63 23B9 
  41 01f9 CCC0 F4AF 	 .string "\314\300\364\257\327sK\333L\034'sb\362b\226q\253pm\207B\244\231\343\313\351\007]\243jN\233JZq\227\367\217B^"
  41      D773 4BDB 
  41      4C1C 2773 
  41      62F2 6296 
  41      71AB 706D 
  42 0223 4A53 D631 	 .ascii "JS\3261\226!\020D\270\2269\276R\345\222\324\024\223\254\224!"
  42      9621 1044 
  42      B896 39BE 
  42      52E5 92D4 
  42      1493 AC94 
  43 0238 3927 486A 	 .ascii "9'Hj\034\222?=\222p1\311j\031\2221A\022vC\323\n\216\324]T\005"
  43      1C92 3F3D 
  43      9270 31C9 
GAS LISTING  			page 3


  43      6A19 9231 
  43      4112 7643 
  44 0253 4428 E496 	 .ascii "D(\344\226J^!\003a\362\f\007\354\364#\256\023\265dv@\336j\231"
  44      4A5E 2103 
  44      61F2 0C07 
  44      ECF4 23AE 
  44      13B5 6476 
  45 026b D0A4 E75F 	 .ascii "\320\244\347_\255\320\347\237\253\300\022\030R\276\375\354,%"
  45      ADD0 E79F 
  45      ABC0 1218 
  45      52BE FDEC 
  45      2C25 
  46 027d BA5A 7D7F 	 .ascii "\272Z}\177\347UP\022X\245\\\331A\321\251\027\351Uu\020\312/\244"
  46      E755 5012 
  46      58A5 5CD9 
  46      41D1 A917 
  46      E955 7510 
  47 0294 0AAB D33B 	 .ascii "\n\253\323;\271\253>\030\273_Y\002khh\242^R\273A\350|\205'%g"
  47      B9AB 3E18 
  47      BB5F 5902 
  47      6B68 68A2 
  47      5E52 BB41 
  48 02ae A77F 2A51 	 .ascii "\247\177*QT7.\350\334w\016\351F&\217}KQU,o\314\231S\242\304f"
  48      5437 2EE8 
  48      DC77 0EE9 
  48      4626 8F7D 
  48      4B51 552C 
  49 02c9 E245 11C5 	 .ascii "\342E\021\305V\302\210\n\273\203\262\304\366\310\225r<\204\222"
  49      56C2 880A 
  49      BB83 B2C4 
  49      F6C8 9572 
  49      3C84 92
  50 02dc A795 9BBB 	 .ascii "\247\225\233\273qAq\363Q'\316\01379r\276\263gZO\326b\323\377"
  50      7141 71F3 
  50      5127 CE0B 
  50      3739 72BE 
  50      B367 5A4F 
  51 02f4 F29B 8E3B 	 .ascii "\362\233\216;\233n\302@ gO;=\177w2\346\026G\013\222\241HDc\305"
  51      9B6E C240 
  51      2067 4F3B 
  51      3D7F 7732 
  51      E616 470B 
  52 030e 644C 4C09 	 .ascii "dLL\t6\0233\302\257&\302p\0135\357V\246b.\232\344\315\274\366"
  52      3613 33C2 
  52      AF26 C270 
  52      0B35 EF56 
  52      A662 2E9A 
  53 0326 C5C9 4841 	 .ascii "\305\311HA\024IK/y\203\234*\233\234]\373\353G,m_\024\267\"\355"
  53      1449 4B2F 
  53      7983 9C2A 
  53      9B9C 5DFB 
  53      EB47 2C6D 
  54 033f 4FDD DECC 	 .ascii "O\335\336\314~u\243\275\352\345ii\356\356\242Y\271^\220'U\"\232"
  54      7E75 A3BD 
  54      EAE5 6969 
  54      EEEE A259 
  54      B95E 9027 
GAS LISTING  			page 4


  55 0356 8B02 BC59 	 .ascii "\213\002\274Y\234\247c7\2478[\235\211\227E\236Z\022\274_\315"
  55      9CA7 6337 
  55      A738 5B9D 
  55      8997 459E 
  55      5A12 BC5F 
  56 036b 408A FACB 	 .ascii "@\212\372\313m\257\277\264p\220[\276N\r\033\360\317\fP\021\017"
  56      6DAF BFB4 
  56      7090 5BBE 
  56      4E0D 1BF0 
  56      CF0C 5011 
  57 0380 0C0E 2C0F 	 .ascii "\f\016,\017\235Td\207K`\304\351k\200\342\"3\251w;s\304E\373\201"
  57      9D54 6487 
  57      4B60 C4E9 
  57      6B80 E222 
  57      33A9 773B 
  58 0399 BEBF DE35 	 .ascii "\276\277\3365\226\213(6^Lj.\227$R\013\356!otl\215._\304\370m"
  58      968B 2836 
  58      5E4C 6A2E 
  58      9724 520B 
  58      EE21 6F74 
  59 03b4 3BE7 09C0 	 .ascii ";\347\t\300\244R\246\301\233\370\021\235J\245\016\357/\333\341"
  59      A452 A6C1 
  59      9BF8 119D 
  59      4AA5 0EEF 
  59      2FDB E1
  60 03c7 6FBD 4555 	 .ascii "o\275EU4]\360\245\361zx+AK\365\360\\\305\036\336\352\346!\310"
  60      345D F0A5 
  60      F17A 782B 
  60      414B F5F0 
  60      5CC5 1EDE 
  61 03df 3F6B 3FD0 	 .ascii "?k?\320?\022\256\325d\220\032\267\244\332\320?\371\374k&\346"
  61      3F12 AED5 
  61      6490 1AB7 
  61      A4DA D03F 
  61      F9FC 6B26 
  62 03f4 0881 F54B 	 .ascii "\b\201\365K\006\377\032\"\331\363\206\360\360\336\370\356\216"
  62      06FF 1A22 
  62      D9F3 86F0 
  62      F0DE F8EE 
  62      8E
  63 0405 E853 BD07 	 .ascii "\350S\275\007_\357\352\355\213\306\237{2\272\353hoW\264\343\205"
  63      5FEF EAED 
  63      8BC6 9F7B 
  63      32BA EB68 
  63      6F57 B4E3 
  64 041a 67DB A3B1 	 .ascii "g\333\243\261#f\317\321\203G^}\211\277\265\275\fZ\354\231}\257"
  64      2366 CFD1 
  64      8347 5E7D 
  64      89BF B5BD 
  64      0C5A EC99 
  65 0430 1D0E C663 	 .ascii "\035\016\306c\273v?\275\255\363\371\256\303=r\276]\314\003\361"
  65      BB76 3FBD 
  65      ADF3 F9AE 
  65      C33D 72BE 
  65      5DCC 03F1 
  66 0444 D89E D83E 	 .ascii "\330\236\330>1\325;L\263\267\253\257\357\3212\344mm\2456y\005"
  66      31D5 3B4C 
GAS LISTING  			page 5


  66      B3B7 ABAF 
  66      EFD1 32E4 
  66      6D6D A536 
  67 045a FE07 3FFE 	 .ascii "\376\007?\376J\307"
  67      4AC7 
  68               	 .text
  69               	 .section .gnu.lto_Endpoint_ConfigureEndpointTable.462cc1691dd85764,"",@progbits
  70 0000 789C 8D56 	 .ascii "x\234\215Vkl\024U\024>\347\316\314\316\314\356\316n\241\017\336"
  70      6B6C 1455 
  70      143E E7CE 
  70      CCCE CCEE 
  70      CE6E A10F 
  71 0015 AF02 5143 	 .ascii "\257\002QCl\243\376\021\0235\200\372G\324D\004\03211\310nC\227"
  71      6CA3 FE11 
  71      1335 80FA 
  71      47D4 4404 
  71      1A31 31C8 
  72 002c 059A B63E 	 .ascii "\005\232\266>\320\304N\351b\032\300\2651F@\350\017\254\r*\264"
  72      D0C4 4EE9 
  72      621A C0B5 
  72      3146 40E8 
  72      0FAC 0D2A 
  73 0041 607C 968A 	 .ascii "`|\226\212\335Z\223\362\b5\230\020\003FS\177\250\004\320\020"
  73      DD5A 93F2 
  73      0835 9810 
  73      0346 537F 
  73      A804 D010 
  74 0055 0991 18E3 	 .ascii "\t\221\030\343z\316\2753\263m\251\260\233\364>\3169\337w\036"
  74      7ACE BD33 
  74      B36D A9B0 
  74      9BF4 3ECE 
  74      39DF 771E 
  75 0069 F7DC 3B15 	 .ascii "\367\334;\025 `\374\357\030\375\235\261\001\272i\306\022@\321"
  75      2060 FCEF 
  75      18FD 9DB1 
  75      01BA 69C6 
  75      1240 D1
  76 007c 3E0C D062 	 .ascii ">\f\320b\t\214\251\205&\364\266\333\300\r\033<Fut\224\330\020"
  76      098C A985 
  76      26F4 B6DB 
  76      C00D 1B3C 
  76      4675 7494 
  77 0092 D18C 49E2 	 .ascii "\321\214I\342\320\316! yHX\231\305\2645w\226\323\316DKYY\030"
  77      D0CE 2120 
  77      7948 5899 
  77      C5B4 3577 
  77      96D3 CE44 
  78 00aa 560B 5B2D 	 .ascii "V\013[-\006\254\260\260%\"\034ax4\202Qe\020\025\361\2575\022"
  78      06AC B0B0 
  78      2522 1C61 
  78      7834 8251 
  78      6510 15F1 
  79 00c1 38C3 2759 	 .ascii "8\303'Y\353(\367\003VLhJ\242\324qD\226\003B\263\320t#dZv8\022"
  79      EB28 F703 
  79      564C 684A 
  79      A2D4 7144 
  79      9603 42B3 
GAS LISTING  			page 6


  80 00dd 7562 716C 	 .ascii "ubql~\0069\235P%\354w\3357G\266\235\177Cw\217\270mn>\337\234"
  80      7E06 399D 
  80      5025 EC77 
  80      DD37 47B6 
  80      9D7F 4377 
  81 00f8 46CA BB0A 	 .ascii "F\312\273\n\241\026a\r\246\021-9\t\034[\b\017x\246+;;\343\216"
  81      A116 610D 
  81      A611 2D39 
  81      091C 5B08 
  81      0F78 A62B 
  82 0110 B8ED EEBF 	 .ascii "\270\355\356\277\371f\224\320Dq\320\334[Cb\267\233\311\345\363"
  82      F966 94D0 
  82      4471 D0DC 
  82      5B43 62B7 
  82      9BC9 E5F3 
  83 0124 0FA6 5113 	 .ascii "\017\246Q\023\220.\300J\024LL\b\353\033\316\216\r\365\305\242"
  83      902E C04A 
  83      144C 4C08 
  83      EB1B CE8E 
  83      0DF5 C5A2 
  84 0138 FCB5 E7BE 	 .ascii "\374\265\347\276\037\376\t3\333\013\241\352\002^-\022z6\333\255"
  84      1FFE 0933 
  84      DB0B A1EA 
  84      025E 2D12 
  84      7A36 DBAD 
  85 014c 6F0B 7C12 	 .ascii "o\013|\022\260\ro\205<,r#\371|\317W\333\2763oG\252\311~\254\004"
  85      B00D 6F85 
  85      3C2C 7223 
  85      F97C CF57 
  85      DBBE 336F 
  86 0166 4ED2 30B1 	 .ascii "N\3220\261\036\301\242U\310\346!L[\214\320\312\214\322`9<\304"
  86      1EC1 A255 
  86      C8E6 214C 
  86      5B8C D0CA 
  86      8CD2 6039 
  87 017c 5811 E7D5 	 .ascii "X\021\347\325$\0179\231\346\0034\227\322\334Is\2317\227\323\334"
  87      240F 3999 
  87      E603 3497 
  87      D2DC 4973 
  87      9937 97D3 
  88 0191 4573 8537 	 .ascii "Es\2057O\3412N\245A\237F\222\203$\231\316\233\031\3145\223\006"
  88      4FE1 324E 
  88      A541 9F46 
  88      9283 2499 
  88      CE9B 19CC 
  89 01a8 7B16 0FB3 	 .ascii "{\026\017\263Y6\207\f> \203\271\034\324<\226T\3620\237M\027\260"
  89      5936 870C 
  89      3E20 83B9 
  89      1CD4 3C96 
  89      54F2 309F 
  90 01bf 6C21 0F94 	 .ascii "l!\017\224\211\001\031\252\301\\\340\204\351\267\232\306\355"
  90      8901 19AA 
  90      C15C E084 
  90      E9B7 9AC6 
  90      ED
  91 01d0 0835 2868 	 .ascii "\b5(h\322N\300\326\221\013\017x&*V \342n\211\364\202\347\362"
  91      D24E C0D6 
GAS LISTING  			page 7


  91      910B 0F78 
  91      262A 5620 
  91      E26E 89F4 
  92 01e7 0475 A941 	 .ascii "\004u\251A\r\216\306\265\323\260\365\217\326\203W1\201=d\232"
  92      0D8E C6B5 
  92      D3B0 F58F 
  92      D683 5731 
  92      813D 649A 
  93 01fb 422B 4515 	 .ascii "B+E\025\205\323\320\272]\363E6I\031\032b*\322\354\b4\221\024"
  93      85D3 D0BA 
  93      5DF3 4536 
  93      4919 1A62 
  93      2AD2 EC08 
  94 0212 8649 CFD2 	 .ascii "\206I\317\322\255\347\217\204}qt\021|\350\226\2441\274\027\336"
  94      ADE7 8F84 
  94      7D71 7411 
  94      7CE8 96A4 
  94      31BC 17DE 
  95 0226 6971 5DF7 	 .ascii "iq]\367\3764[F\230#*}'\2030\216\3037\277\2658\001\220M\254\321"
  95      FE34 5B46 
  95      9823 2A7D 
  95      2783 308E 
  95      C337 BFB5 
  96 0240 A757 833A 	 .ascii "\247W\203:\374hj\027\301\335\371e"
  96      FC68 6A17 
  96      C1DD F965 
  97 024c B717 A4AF 	 .string "\267\027\244\2571X\303\236\277\370a\241\317\340\214s}5t\243o\3379C\257L\366\2211\017\351x\310O'@\212\t\221\361q>\377\302\033\221\232\207\244c\312=\252\200\334\322\355t\215\366\024n_X@\373-\033:\305\244|\334\277\277\2157c\332]\004S\374\177\230\316\025\230\034\001\035x\253'\201\312WTL\357\026\021\223#\233\254o\260\363R\357}A?\037\220\375\254\266\271S\237Q\t\217\221$\201}r\354\225\343\347^\317\263\373Zu\312)\234\354u\025\304U\365\257\\8:\034K`?\331(V2\221m\370\353@\1776\252\024$\222\020}L#\206 cj\322\360l\366N\337\320\221\035;:\207\325h\302U\324j(?\262'\217\026\370\305\370hx\227Qx1\251\260\357\027_\330\023\203fP\214N\231n\327\250\222\270\037w\\\247[9\340U\240_V@R)\353\340\3463\325\311A3\201\203\262"
  97      3158 C39E 
  97      BFF8 61A1 
  97      CFE0 8C73 
  97      7D35 74A3 
  98 034d 5D9E 4E53 	 .ascii "]\236NS\227\356\034L\343\235\036\202\320\241k\027\304\032\365"
  98      97EE 1C4C 
  98      E39D 1E82 
  98      D0A1 6B17 
  98      C41A F5
  99 0360 389B 327D 	 .ascii "8\2332}\033\350\003H\327\255\265\255\265/;K\021\244\260,\205"
  99      1BE8 0348 
  99      D7AD B5AD 
  99      B52F 3B4B 
  99      11A4 B02C 
 100 0375 A592 1C25 	 .ascii "\245\222\034%\271\360\211;ee\313\344Qv\267\366g\357\360\001\025"
 100      B9F0 893B 
 100      6565 CBE4 
 100      5176 B7F6 
 100      67EF F001 
 101 038a 292C 6780 	 .ascii "),g\200=\016\320%\001\025~\261\303@\337K\257z\276\262\\\206o"
 101      3D0E D025 
 101      0115 7EB1 
 101      C340 DF4B 
 101      AF7A BEB2 
 102 03a1 4140 5F2A 	 .ascii "A@_*\017\356\227\201=C\216O_.\013\006^6\245^\336\326\276\336"
 102      0FEE 9781 
 102      3D43 8E4F 
 102      5F2E 0B06 
 102      5E36 A55E 
 103 03b9 9728 1AFB 	 .ascii "\227(\032\373ro\3239(\367\022\266\016\261\260\302\376\247\367"
GAS LISTING  			page 8


 103      726F D339 
 103      28F7 12B6 
 103      0EB1 B0C2 
 103      FEA7 F7
 104 03cc 3D64 9711 	 .ascii "=d\227\021>/\031\356\245\254\341\363M\361\363\323\325\265\247"
 104      3E2F 19EE 
 104      A5AC E1F3 
 104      4DF1 F3D3 
 104      D5B5 A7
 105 03df B7B2 E369 	 .ascii "\267\262\343i\377\360\247\222^f\330\253\371\242\351)\234F\ne"
 105      FFF0 A792 
 105      5E66 D8AB 
 105      F9A2 E929 
 105      9C46 0A65 
 106 03f3 1B48 6790 	 .ascii "\033Hg\220\302\203\037\356H\371\322\231\362\376\261\307\300p"
 106      C283 1FEE 
 106      48F9 D299 
 106      F2FE B1C7 
 106      C070 
 107 0405 1649 6575 	 .ascii "\026IeuB\312\335\245\321\356f\223>`9\026`\346\310\007\201hN\265"
 107      42CA DDA5 
 107      D1EE 6693 
 107      3E60 3916 
 107      60E6 C807 
 108 041d FE19 F385 	 .ascii "\376\031\363\205sI.\217\317{\256\n\261\314#\245\nz4w\245\244"
 108      7349 2E8F 
 108      CF7B AE0A 
 108      B1CC 23A5 
 108      0A7A 3477 
 109 0433 9F37 CE76 	 .ascii "\2377\316v~\212\033\352[x-g\370\242\005\257\300\337\324\301\364"
 109      7E8A 1BEA 
 109      5B78 2D67 
 109      F8A2 05AF 
 109      C0DF D4C1 
 110 0448 DCC5 6A   	 .ascii "\334\305j"
 111 044b 910C 73EA 	 .string "\221\fs\352A\226\027\215\314g\2449'u\206Q~\237\217C\346\362\317]{\203O\306B\216\312\177\303\345!\371\022#\373\372\305\305\344 r\350Z\031\303\035\310\306e\277\r\356\370d\271\017\237D\237\247\261\375\326#\333g\277l\210I\276\353\030\354*\t\272G\351P5K\213\341Sa\n\315B\024\350\265\212\270\256\021\217s\334f\2328\177Y\317\320\277y\234\240P\206\302\0137z\271[b\f\204\330\276'\370\336#Y\263\321\242\345+\037YR\375PC\335\013\311\206\306\352\225+\226V/\333\334\220\254^\262\352\311{\253\037\336\224\250\337\\\267\251\351Y\336U\255\003\254\273\347&\326UU\023\241\326\203\371\330\332\306\r\253\326\246\303\313\326'\327mX\272\245)\331\030z\374\371\215\317%\033\354%\211DC\262\261\261\352n\263\256\266ic}\325]\246'\321\237\332R\237\324W\324\275\2344\226\256\335\264\241\321\220\260\377"
 111      4196 178D 
 111      CC67 A439 
 111      2775 8651 
 111      7E9F 8F43 
 112 054c F773 820F 	 .ascii "\367s\202\017"
 113               	 .text
 114               	 .section .gnu.lto_Endpoint_ClearEndpoints.462cc1691dd85764,"",@progbits
 115 0000 789C 8553 	 .string "x\234\205SAh\023A\024\375\177v\247\033\322\004{\367\240\330\243\220\245\350\241\027\017Q+\b\"\242T\013\n\036\334\024\033bS\022\3555\263f\301^\304X<\024\025$\210\342I\361\026\024a\333*\030j\024O*xX\020\245ED!\202\301H\326?;\273\261\326\244.d\346\357\237y\357\277\377\367\205\001\203\215\317\036\372\315i"
 115      4168 1341 
 115      14FD 7F76 
 115      A71B D204 
 115      7BF7 A0D8 
 116 0069 79DA 7100 	 .string "y\332q"
 117 006d 9055 5E02 	 .ascii "\220U^\002\3301\206\272\n4\025,\306t\246]^\004\020q^N\202HpD"
 117      D831 86BA 
 117      0A34 152C 
 117      C674 A65D 
 117      5E04 1071 
 118 0087 9907 8412 	 .ascii "\231\007\204\022\323t\216\245S(\351p\007T\205\230\367>\266[\350"
 118      D374 8EA5 
 118      5328 E970 
GAS LISTING  			page 9


 118      0754 8598 
 118      F73E B65B 
 119 009c 084F 5444 	 .ascii "\bOTD\307/a\016\251r\na\022\341$\275`,\330\030\376-\345\001s"
 119      C72F 610E 
 119      A972 0A61 
 119      12E1 24BD 
 119      602C D818 
 120 00b5 3DDF 7FF1 	 .ascii "=\337\177\361\304\371\271m\b\301\302*\221\305"
 120      C4F9 B96D 
 120      08C1 C22A 
 120      91C5 
 121 00c3 C37D 1072 	 .string "\303}\020r\250%\344\222\224\013\335\346\340\bQ\331\016\222\224\236\023\264\222\260\td\264i\rX\252\325\332.Zx\0339\334\200\353\266c\013\236C]\326\345\337\225\f\036T\225\221.\203:\\\364\276~0B^U\026@1\004\201L\310\333]\301\023$\204f\242\0212\006 ;\257\314\273o.\r\213\262+Z\276o\344p\200\301\356\377\265\235EJ4\240\374x\271\331\254\217v\333R\201\273\362\253jXx7\324r\207\264L\"*\330 !\003\365[@\022,\325o\336z\365T\263\360^\330\3625{(\352xm}\307\204\f\356\327\336\257^\331\2528\303\t\031\321\375o='$1\255\316[\354\215Y\355\213Y\360\373a\276\364\303<z\326l7\376\035F\347\241\361g\fL5\223\330\320\353\347\365\234\321d\211\314\302\373\224\314b\222 A\251\016\252Z\007\325\311f4\204\n\230\346\226W~\\\035Q\002\262\030\017?"
 121      A825 E492 
 121      940B DDE6 
 121      E008 51D9 
 121      0E92 949E 
 122 01c4 6060 1FA6 	 .ascii "``\037\246\362\312(t\032\231D\007\372\247\204&\211\016\t\361"
 122      F2CA 2874 
 122      1A99 4407 
 122      FAA7 8426 
 122      890E 09F1 
 123 01d8 1C9C 4F36 	 .ascii "\034\234O6\217\270\024\221\336u\305;\300\320k\254\245\021\231"
 123      8FB8 1491 
 123      DE75 C53B 
 123      C0D0 6BAC 
 123      A511 99
 124 01eb B630 22B9 	 .ascii "\2660\"\271\270t\367k\260=\177\270\353LP\376G:\222#\331yh\374"
 124      B874 F76B 
 124      B03D 7FB8 
 124      EB4C 50FE 
 124      473A 9223 
 125 0203 40DA DC5F 	 .ascii "@\332\334_\230\232\315\024\212\346\370\261\275\346\276|!c\246"
 125      989A CD14 
 125      8AE6 F8B1 
 125      BDE6 BE7C 
 125      2163 A6
 126 0216 8F1F 1D35 	 .ascii "\217\037\0355\307\246\255\231\374\324\364\371\323\362-u\006\370"
 126      C7A6 AD99 
 126      FCD4 F4F9 
 126      D3F2 2D75 
 126      06F8 
 127 0228 D891 C317 	 .ascii "\330\221\303\027\316\031i\313*d\212\305]\233 S\251^\fg\3417\325"
 127      CE19 69CB 
 127      2A64 8AC5 
 127      5D9B 2053 
 127      A95E 0C67 
 128 023f 3801 8D   	 .ascii "8\001\215"
 129               	 .text
 130               	 .section .gnu.lto_Endpoint_ClearStatusStage.462cc1691dd85764,"",@progbits
 131 0000 789C 9D54 	 .string "x\234\235TMHTQ\024>\347\276\367\346\375\315L\315\240D\326\"\\*\314,\202~VeY\020\264J\314\201\004\tg$cP1q\323\302;:AH\201D\013\251E\351`E&CQ\020\265\031\247\254\314Tl\321\242\325\024\f\265\212\240\215\270h:\367\276\367f4\007\223.\3149\367\336s\277\363}\367\233\271\303\200\301\337\343\016}\332U\200+\2241\b\310\306\226"
 131      4D48 5451 
 131      143E E7BE 
 131      F7E6 FDCD 
 131      4CCD A044 
 132 0076 5206 63EA 	 .string "R\006c\352\265Z\340\226\221>\f\334\2570;\257\320\312\277\364\036h\351GM\234B\325\315\032Sd\301\362\211S~\037\332r[wQ\001\007\025@Sn\033n6\231\356\240,\211\262\034T\312\260\021\305\004\020\206\230\342W5\237\0360L\313\306\241v\024\202Y=Lp~\243P\314\314*\351\321\002\037\343\277KC\230D\272[\004\241\013\341\034-\320\220\211\341\306\313:\320\334\307\321am\234\247s\245\322\021\211;\372/\\\226\345\n\245\322\243\225\364Z\303.\025\b\243QPt\210\343\004\326\203M9C9 *A\021B\"\204E\250\021\241V\004\032\032\2449\037\333\007\202\215F\033\305g&\304\220QR\026a\370\363\352\344\254\022\307)\324\340\"\252\215\320\220D\3656\334Jq\2763\211\332eX\343W\305\314\327'\341B\250O\312K\224\345R\223\037#u^\013\215\272"
 132      B55A E096 
 132      913E 0CDC 
GAS LISTING  			page 10


 132      AF30 3BAF 
 132      D0CA BFF4 
 133 0169 BC83 D7C5 	 .string "\274\203\327\305\224]\336\0230e\375\345b\264\374\260\207\370\363\363\253\231\n\277.\231S\304\247\227\231\215>D\227\331p\321\324\375[jG\031$J\033\254kC?\314\324a\214\224\3141\305\341\323\340\327^\301\367bn\372\372\302\242^\266\305\231\344\026\336L\232"
 133      945D DE13 
 133      3065 FDE5 
 133      62B4 FCB0 
 133      87F8 F3F3 
 134 01bb 4ECB 2E49 	 .string "N\313.IH\235\003B\316M)G\322\177\307\r2\026a\344\345+\3526C\027\235\226R\202\204\221jTW\345\227\251\314<zB\203\233\204\306\310\314{\250,\303\210\341\034\002(\337\333\354B\347\345$\321\362N\353@\277^\351\332\363\207\025\327\354\377q\315\256\342Z"
 134      489D 0342 
 134      CE4D 2947 
 134      D27F C70D 
 134      3216 61E4 
 135 0210 EEBE 05B2 	 .ascii "\356\276\005\262\315\200\237>\3276\023\350]x\276e\253\370\266"
 135      CD80 9F3E 
 135      D736 13E8 
 135      5D78 BE65 
 135      ABF8 B6
 136 0223 FC55 AFF8 	 .ascii "\374U\257\370\2468\276\205\266\345[V\370\366X\212\t\023F\352"
 136      A638 BE85 
 136      B6E5 5B56 
 136      F8F6 588A 
 136      0913 46EA 
 137 0237 41CF B7E2 	 .ascii "A\317\267\342\375\212o\341*\276Y\220W<Y\343\331\315\262>=\321"
 137      FD8A 6FE1 
 137      2ABE 5990 
 137      573C 59E3 
 137      D9CD B23E 
 138 024d 2AB2 5447 	 .ascii "*\262TGV\315\266dQ\2678>\225\304\265\204\331\r\343\374\001/\320"
 138      56CD B664 
 138      51B7 383E 
 138      95C4 B584 
 138      D90D E3FC 
 139 0264 A3D5 E599 	 .ascii "\243\325\345\231\374)\247\272U/Bz:m\361\314V\350\037f\275\317"
 139      FC29 A7BA 
 139      552F 427A 
 139      3A6D F1CC 
 139      56E8 1F66 
 140 027a 489B E2BB 	 .ascii "H\233\342\273m<\335z\262)\332\334\337=\230\350\277\024mm9\026"
 140      6D3C DD7A 
 140      B229 DADC 
 140      DF3D 98E8 
 140      BF14 6D6D 
 141 0290 3DDE DB9F 	 .ascii "=\336\333\237\2106\235=s(z\242'\336\327\333\3353\320!V\221N\b"
 141      8836 9D3D 
 141      7328 7AA2 
 141      27DE D7DB 
 141      DD33 D021 
 142 02a8 51B9 A339 	 .ascii "Q\271\24391\330\335\231h\0318?\220\210\034\330\264sp\377\026"
 142      31D8 DD99 
 142      6819 383F 
 142      9088 1CD8 
 142      B473 70FF 
 143 02bd FD22 916A 	 .ascii "\375\"\221j}/\300\037\322dDZ"
 143      7D2F C01F 
 143      D264 445A 
 144               	 .text
 145               	 .section .gnu.lto_Endpoint_WaitUntilReady.462cc1691dd85764,"",@progbits
GAS LISTING  			page 11


 146 0000 789C 8D55 	 .ascii "x\234\215U]h\\U\020\2369\367\356\336\273w\367n\266I\323\374\b"
 146      5D68 5C55 
 146      109E 39F7 
 146      EEDE BB77 
 146      F76E B649 
 147 0017 52FA D207 	 .ascii "R\372\322\007a\363\320\227\024\037$\246\366)\376\320X\215D\t"
 147      61F3 D097 
 147      141F 24A6 
 147      F629 FED0 
 147      588D 4409 
 148 002b B5BB C12C 	 .ascii "\265\273\301,\331$l7E\360!w\315\006SSK\220JE#&\326P|h\267\365"
 148      D924 6C37 
 148      45F0 2177 
 148      CD06 5353 
 148      4B90 4A45 
 149 0047 A7D6 0635 	 .ascii "\247\326\0065M+&\335F\320\027Y\212\270\225\204\026\f\322\340"
 149      4D2B 26DD 
 149      46D0 1759 
 149      8AB8 9584 
 149      160C D2E0 
 150 005b 1F16 EC3A 	 .ascii "\037\026\354:\347\347v\177\262\330\\\330s\316\31493\363\3157"
 150      E7E7 767F 
 150      B2D8 5CD8 
 150      73CE CC39 
 150      33F3 CD37 
 151 006f E7CC 3260 	 .ascii "\347\3142`P\371]\246\337\200\001\360;\315X\003\310&\277\003H"
 151      50F9 5DA6 
 151      DF80 01F0 
 151      3BCD 5803 
 151      C826 BF03 
 152 0084 990C 75B9 	 .ascii "\231\fu\271\320\344\242Mg\336\361\235\340X\036>\006<\350\225"
 152      D0E4 A24D 
 152      67DE F19D 
 152      E058 1E3E 
 152      063C E895 
 153 0098 DB5E 66DC 	 .ascii "\333^f\334\256'\2659\335Jj\203\005\027\221$\337\3425 \321,\027"
 153      AE27 B539 
 153      DD4A 6A83 
 153      0517 9124 
 153      DFE2 3520 
 154 00af 7D4A B4A4 	 .ascii "}J\264\244h)\321/E\277\022\003R\f0\233\273\2644\356>`\253MMn"
 154      6829 D12F 
 154      45BF 1203 
 154      520C 309B 
 154      BBB4 34EE 
 155 00c9 0611 7978 	 .ascii "\006\021yx@\030a\232\356\361\032\246\317\362\007\354 \216<"
 155      4018 619A 
 155      EEF1 1AA6 
 155      CFF2 07EC 
 155      208E 3C
 156 00dc 8F3C 297D 	 .string "\217<)}\007\3148\316\233\371\331L\016\323N\336\231t\356\026F\260\037)\3770B/B7\th\212\211a9!\322t\376x\226\275\355\244\347\013\205G\372Qc\360p\321,$\315XU\263\037&\212f\024\355\311\315E\313\237x\355\217\316\364\353e@O\340\375l3l>_(\234\371\353\352\364Q\324\036@\210\340\f\356 \313\b\236\244Y\003rc\2210K\202\255\224Au\250F\315!:\244m\241A\257\345C\035\251O\221z+\027\352\371\260\215\017\r|h\344C\023\037\232\271\021\305\367@\332q&\267KO\322?p\310\364=K\343\033\006t!\243I[\202W\363_\256z#\370\021zT`\236\017D\350\3442,\\\374\246\360\326\362,*w\256\337\371\211\325\217)\2124\352E\3416\206\241w\341\235\324\361T\250\037=\334\205wE2\344U\224,\001s\243H8\362\353\"\274\243\337\022%\220\203\232\030b"
 156      07CC 38CE 
 156      9BF9 D94C 
 156      0ED3 4EDE 
 156      9974 EE16 
 157 01dd 6318 B48F 	 .ascii "c\030\264\217\256_\300\034\3301d\\n\266\327~\316#?\253\003]."
 157      AE5F C01C 
GAS LISTING  			page 12


 157      D831 645C 
 157      6EB6 D77E 
 157      CE23 3FAB 
 158 01f4 24D0 2628 	 .ascii "$\320&(?t\204\373\226\212\031\241@\005=s\354\326)c\003\364\233"
 158      3F74 84FB 
 158      968A 19A1 
 158      4005 3D73 
 158      ECD6 2963 
 159 020b 0BBE 127E 	 .ascii "\013\276\022~x\005\324\375\370s\342\230\3079\353\214;\205\302"
 159      7805 D4FD 
 159      F873 E298 
 159      C739 EB8C 
 159      3B85 C2
 160 021e 88B8 5837 	 .ascii "\210\270X7\360~7\313\345@\220\313$\r[\356\321`p\023sMz0\225\301"
 160      F07E 37CB 
 160      E540 90CB 
 160      240D 5BEE 
 160      D160 7013 
 161 0238 328C CE5D 	 .ascii "2\214\316]\346\310\374\021<M\2461\254%\033~B\347<.Bz-U\334\022"
 161      E6C8 FC11 
 161      3C4D A631 
 161      AC25 1B7E 
 161      42E7 3C2E 
 162 0252 FA62 B41C 	 .ascii "\372b\264\034\020\0335\032\252\022\2613w\256\3329`1\2645\332"
 162      101B 351A 
 162      AA12 B133 
 162      77AE DA39 
 162      6031 B435 
 163 0267 08B1 0F9F 	 .ascii "\b\261\017\237\343\365\365\300\370N\255\213\210'\256\264E\270"
 163      E3F5 F5C0 
 163      F84E AD8B 
 163      8827 AEB4 
 163      45B8 
 164 0279 72F3 D27B 	 .ascii "r\363\322{\023Z\0043\302e\235p\351`\211O\241\002R\351_}1\375"
 164      135A 0433 
 164      C265 9D70 
 164      E960 894F 
 164      A102 52E9 
 165 0291 BE28 9EB8 	 .ascii "\276(\236\270B\234p\003n\327k\234\315\261\257?{p\003\227k\037"
 165      429C 7003 
 165      6ED7 6B9C 
 165      CDB1 AF3F 
 165      7B70 0397 
 166 02a7 189C 828C 	 .ascii "\030\234\202\214\270\006\232\314\177kE\376\267\252\346\2379M"
 166      B806 9ACC 
 166      7F6B 45FE 
 166      B7AA E69F 
 166      394D 
 167 02b9 497E 2210 	 .ascii "I~\"\020\325\223MY\3767\306\316\357v\341\326W0\3001\2310\335"
 167      D593 4D59 
 167      FE37 C6CE 
 167      EF76 E1D6 
 167      5730 C031 
 168 02d0 AAA9 0A67 	 .ascii "\252\251\ng\2277T8\373\333/%\250t\211j\333\246Pe9\252\363\"p"
 168      9737 5438 
 168      FBDB 2F25 
 168      A874 896A 
GAS LISTING  			page 13


 168      DBA6 5065 
 169 02e9 03D9 88D8 	 .ascii "\003\331\210\330\272\213j\366\363{\250\032\252\240\362\0015@"
 169      BA8B 6AF6 
 169      F37B A81A 
 169      AAA0 F201 
 169      3540 
 170 02fb 0E6B E9C2 	 .ascii "\016k\351\302\305\034\272'-\036\327\021q_\201;t\271he\016\t\366"
 170      C51C BA27 
 170      2D1E D711 
 170      715F 813B 
 170      74B9 6865 
 171 0312 4BE3 8BC7 	 .ascii "K\343\213\307\221\021\217cV\334a\213\007\245\312\375X\254\234"
 171      9111 8F63 
 171      56DC 618B 
 171      07A5 CAFD 
 171      58AC 9C
 172 0325 5525 A805 	 .ascii "U%\250\005\351\254\252\361\365\254]~\322Sv\322\017W\226\300e"
 172      E9AC AAF1 
 172      F5AC 5D7E 
 172      D253 76D2 
 172      0F57 96C0 
 173 033a EDC8 B997 	 .ascii "\355\310\271\2277\260\366w)k\036\311Zc\005k\277Ve\355\310\271"
 173      37B0 F677 
 173      296B 1EC9 
 173      5A63 056B 
 173      BF56 65ED 
 174 0350 4F29 DF39 	 .ascii "O)\3379\021\272\211\214D\364\355.m\253sE6\232\252\244\020\200"
 174      11BA 898C 
 174      44F4 ED2E 
 174      6DAB 7345 
 174      369A AAA4 
 175 0366 F145 05AC 	 .ascii "\361E\005\254z\257\371wA+\002S\275\246y\023\275F\322yV\365\032"
 175      7AAF F977 
 175      412B 0253 
 175      BDA6 7913 
 175      BD46 D279 
 176 037d 8EE5 D23F 	 .ascii "\216\345\322?E6\233c\310Ja\330\260\276Kt\303\273cA\327V\366\227"
 176      4536 9B63 
 176      C84A 61D8 
 176      B0BE 4B74 
 176      C3BB 6341 
 177 0395 6691 E8F8 	 .ascii "f\221\350\370\350\311\251\260k\034\244&#\236I\001\313\243\311"
 177      E8C9 A9B0 
 177      6B1C A426 
 177      239E 4901 
 177      CBA3 C9
 178 03a8 0614 94C5 	 .ascii "\006\024\224\305K\325\270\347\261J\336A\336~\277\247\377i\236"
 178      4BD5 B8E7 
 178      B14A DE41 
 178      DE7E BFA7 
 178      FF69 9E
 179 03bb 8F26 5FA2 	 .ascii "\217&_\242\246\336\2361u\275Q-\315\225\356n\371\257\343\273\366"
 179      A6DE 9E31 
 179      75BD 512D 
 179      CD95 EE6E 
 179      F9AF E3BB 
 180 03d0 9378 27D4 	 .ascii "\223x'\324+\255\225\027\304\n\301\237\356\021+\035\354\251\365"
GAS LISTING  			page 14


 180      2BAD 9517 
 180      C40A C19F 
 180      EE11 2B1D 
 180      ECA9 F5
 181 03e3 46FE FA91 	 .ascii "F\376\372\221\374\362\314\036\352\330\277\267\255eO\242\357p"
 181      FCF2 CC1E 
 181      EAD8 BFB7 
 181      AD65 4FA2 
 181      EF70 
 182 03f5 3471 A865 	 .ascii "4q\250e\177\347\243-\355\203\211hK\3333\373Z[\036\033\210\f\r"
 182      7FE7 A32D 
 182      ED83 8968 
 182      4BDB 33FB 
 182      5A5B 1E1B 
 183 040c F60D 247B 	 .ascii "\366\r${\270\024>\b\201\247\373\342\321\301\341\344\343\235\373"
 183      B814 3E08 
 183      81A7 FBE2 
 183      D1C1 E1E4 
 183      E39D FB
 184 041f A2F1 BAA7 	 .ascii "\242\361\272\247\022\321\303}\203\303\207\366&\016\304\243O\f"
 184      12D1 C37D 
 184      83C3 87F6 
 184      260E C4A3 
 184      4F0C 
 185 0431 C75F 8C26 	 .ascii "\307_\214&\352\310\276g\017\251\017F;\223\007\222\321\236\216"
 185      EAC8 BE67 
 185      0FA9 0F46 
 185      3B93 0792 
 185      D19E 8E
 186 0444 F68E 5DFF 	 .ascii "\366\216]\377\023 \034\256\026\350%0\372z\223\361\241\360\356"
 186      1320 1CAE 
 186      16E8 2530 
 186      FA7A 93F1 
 186      A1F0 EE
 187 0457 B64D D856 	 .ascii "\266M\330V\3162\274\353\251\266}8\221\210\016$K@\376\007\355"
 187      CE32 BCEB 
 187      A9B6 7D38 
 187      9188 0E24 
 187      4B40 FE07 
 188 046c 5E28 E3   	 .ascii "^(\343"
 189               	 .text
 190               	 .section .gnu.lto_.symbol_nodes.462cc1691dd85764,"",@progbits
 191 0000 789C 4DCC 	 .ascii "x\234M\314=\n\2000\030\203\341\267_\333S;\004:9z\001=\216\223"
 191      3D0A 8030 
 191      1883 E1B7 
 191      5FDB 533B 
 191      043A 397A 
 192 0018 8AFF 9347 	 .ascii "\212\377\223Gq\260\203\320f\t\017\201\030F\303\037{\020t\013"
 192      71B0 83D0 
 192      6609 0F81 
 192      1846 C31F 
 192      7B10 740B 
 193 002c 487D EB6C 	 .ascii "H}\353lC\356\347\220\271\"\253\270#_\361@\2410^\371O\304\033"
 193      43EE E790 
 193      B922 ABB8 
 193      235F F140 
 193      A130 5EF9 
GAS LISTING  			page 15


 194 0043 97CB 4E14 	 .ascii "\227\313N\024\313\350\315\221\356w\366>@\032'\343\003^\374%\227"
 194      CBE8 CD91 
 194      EE77 F63E 
 194      401A 27E3 
 194      035E FC25 
 195               	 .text
 196               	 .section .gnu.lto_.refs.462cc1691dd85764,"",@progbits
 197 0000 789C 6362 	 .string "x\234cb`b\340e\200"
 197      6062 E065 
 197      8000 
 198 000a 6616 0656 	 .string "f\026\006V\0066\0066Fv \t"
 198      0636 0636 
 198      4676 2009 
 198      00
 199 0017 0294 00   	 .string "\002\224"
 200 001a 38        	 .ascii "8"
 201               	 .text
 202               	 .section .gnu.lto_.decls.462cc1691dd85764,"",@progbits
 203 0000 789C 9D58 	 .string "x\234\235X{pTW\031?\347\356#\211\320\024c\241\25136\240\255c\253\223\r\343\350\324?\3123\001\231V\354\220\004\235\351\037\353&\367\n;,\033\330\275K\244\376\301I\200\300"
 203      7B70 5457 
 203      193F E7EE 
 203      2389 D014 
 203      63A1 A933 
 204 003b 1392 509A 	 .string "\023\222P\232\264ZLR\240\251S\247\t\230v\f\r]\n\004\r\210\b\035\251`a\013\332b}L,R\241\320\254\3379\367\334\347\236\273\271\341\316|w\317=\367|\277\357\375\235sWB\022\332$!\224\205\353\221R\204\252\374\b\025 \204\346 \363\n\002\365"
 204      B45A 4C52 
 204      A0A9 53A7 
 204      0998 760C 
 204      0D5D 0A04 
 205 008e ED07 1A02 	 .ascii "\355\007\032\002:\017t\021\350\022\020\260\242+@7\220\375\352"
 205      3A0F 7411 
 205      E812 10B0 
 205      A22B 4037 
 205      90FD EA
 206 00a1 E17C 7D40 	 .ascii "\341|}@\305@S\2010\320'@7\371\032\211\257\273\205r/*\253\b\350"
 206      C540 5381 
 206      30D0 2740 
 206      37F9 1A89 
 206      AFBB 8572 
 207 00ba 550B 7F1F 	 .ascii "U\013\177\037\307\030\007:\350\300\np\236,\225\013\213>\007T"
 207      C718 073A 
 207      E8C0 0A70 
 207      9E2C 950B 
 207      8B3E 0754 
 208 00ce 0CE4 83E7 	 .ascii "\f\344\203\347\003@\203@o8dP[\2469d\214p\374>\2169\314e\372\271"
 208      0340 8340 
 208      6F38 6450 
 208      5BA6 3964 
 208      8C70 FC3E 
 209 00e8 CCC3 4067 	 .ascii "\314\303@g\201\246\303\344\f\240\227\371\273\243@\247\200\216"
 209      81A6 C3E4 
 209      0CA0 97F9 
 209      BBA3 40A7 
 209      808E 
 210 00fa 038D F239 	 .ascii "\003\215\3629\212\177?\254y\bk\272Q{\337\001\372\243C\017\352"
 210      8A7F 3FAC 
 210      7908 6BBA 
 210      517B DF01 
GAS LISTING  			page 16


 210      FAA3 430F 
 211 010f CF02 871E 	 .ascii "\317\002\207\036V_\035\344\353||\255n\243\363\2421\231\302yu"
 211      565F 1DE4 
 211      EB7C 7CAD 
 211      6EA3 F3A2 
 211      3199 C279 
 212 0124 9C71 8E7B 	 .ascii "\234q\216{\025(\204M\314\n\030\367\362\265\037q[)\377l\254\305"
 212      1528 844D 
 212      CC0A 18F7 
 212      F2B5 1F71 
 212      5B29 FF6C 
 213 013a E45B F0FB 	 .ascii "\344[\360\373\035\354\036_\032{g|F8\336\343p\233\203\355\361"
 213      1DEC 1E5F 
 213      1A7B 677C 
 213      4638 DEE3 
 213      709B 83ED 
 214 014f 0972 9EB9 	 .ascii "\tr\236\2710_\2055|*\353\t\254\3618\361\313\320\036\222\316d"
 214      305F 8535 
 214      7C2A EB09 
 214      ACF1 38F1 
 214      CBD0 1E92 
 215 0165 F6F5 0E04 	 .ascii "\366\365\016\0046\365\223L6[\206f\240\335\204^Md\336Z\031\317"
 215      36F5 934C 
 215      365B 8666 
 215      A0DD 845E 
 215      4D64 DE5A 
 216 017b 998E 9EC6 	 .ascii "\231\216\236\3062..B\205l0\265\bi.\221q/\236\301G\265>\rMB\345"
 216      322E 2E42 
 216      856C 30B5 
 216      0869 2E91 
 216      712F 9EC1 
 217 0196 183D 8A5E 	 .ascii "\030=\212^\001\3566B\376\363\005\201\363\340\372*\332\307\336"
 217      01EE 3642 
 217      FEF3 0581 
 217      F3E0 FA2A 
 217      DAC7 DE
 218 01a9 3F9B C6   	 .ascii "?\233\306"
 219 01ac 0C9F 22F4 	 .string "\f\237\"\364\3402\353\022\031\277\204%\247\236\2313\351\233\240\032n\"\331\354\006\253\226\205h\013!\3150N\317[\213\204\352>\214\366j:\301T\037.\004E\227\213uC\332{z=\215\365\261>\302bp\312\3642\367\205\217E\022B\266\225i\324N\246v\025\347Q\251-s\253\345\263\367q3\231'\343Wq\0210\377\024\003\332^\374\250\241\016.\262\253\007\317\372\002\212\306^\363A\026\033\nhp(\367\331\f\026\213\327Fl\227\367\020z\211\264ud6_\036\364\223\n\303\212nW+d\374+\374\360\304ZI\250\227\t\332\017a\026\303\034\244,\232\364\364\247\355\020(\254\315I\350\225Ip\336\261q\016z\341\344\371\330\234\276\365|s\240T\017\271;\033\017\303@n~vg\322C\302\374\324@\335R\347\220=u\246\240m\324\351\335M\344\276\256\342\022\324NA\272I\232`3\265\277\246C\004\314<\352h\375"
 219      E032 EB12 
 219      19BF 8425 
 219      A79E 9933 
 219      E99B A01A 
 220 02ad 13E2 3718 	 .ascii "\023\3427\030\210+\203\214\337\202\220yXH\227\036\301%<\260Z"
 220      882B 838C 
 220      DF82 9079 
 220      5848 971E 
 220      C125 3CB0 
 221 02c2 09A5 3F6B 	 .ascii "\t\245?k)&\2226\217l\231c\273f\241n\352\322\366-;\375\244\277"
 221      2926 9236 
 221      8F6C 9963 
 221      BB66 A16E 
 221      EAD2 F62D 
 222 02da 42CF ED7F 	 .ascii "B\317\355\177\260xPV\221/\370\020\031\305W\\\344\200\3538!u\225"
 222      B078 5056 
 222      912F F810 
 222      19C5 575C 
 222      E480 EB38 
GAS LISTING  			page 17


 223 02f1 F2A4 D4FC 	 .ascii "\362\244\324\374c,\234\246\263K\326\322\032\347\2455\302\304"
 223      632C 9CA6 
 223      B34B D6D2 
 223      1AE7 A535 
 223      C2C4 
 224 0303 5FC7 CEDA 	 .ascii "_\307\316\332\n8j+`\317\342@\2219\310f}4\215\3578M\260\t\266"
 224      0A38 6A2B 
 224      60CF E240 
 224      9139 C866 
 224      7D34 8DEF 
 225 031c 4556 6442 	 .ascii "EVdBfW\353\337\336\307G\b\3311UwJ\223\344\301)>w\247<\267\005"
 225      6657 EBDF 
 225      DEC7 4708 
 225      D931 5577 
 225      4A93 E4C1 
 226 0337 9CA2 83B5 	 .ascii "\234\242\203\265x\001\363\013\300,N\240\366\313\370mV\326G\361"
 226      7801 F30B 
 226      C02C 4EA0 
 226      F6CB F86D 
 226      56D6 47F1 
 227 034b 2CB8 1F67 	 .ascii ",\270\037g\367Qv?\005w\343\222\320\016\311\351S-3,xf\n\241\211"
 227      F751 763F 
 227      0577 E392 
 227      D00E C9E9 
 227      532D 332C 
 228 0364 1145 5EA5 	 .ascii "\021E^\245l\303x\212\276d\202\216\326#\t;\332\276\316Sx3\371"
 228      6CC3 788A 
 228      BE64 828E 
 228      D623 093B 
 228      DABE CE53 
 229 037b 9151 5DDD 	 .ascii "\221Q]\335\220=2>\354\022H\207H\t\035a\250CfO\260-\227\361Y\272"
 229      903D 323E 
 229      EC12 4887 
 229      4809 1D61 
 229      A843 664F 
 230 0395 9837 A1E1 	 .ascii "\2307\241\341\201\257\020\237\336\203N8\031\363\366\240C\366"
 230      81AF 109F 
 230      DE83 4E38 
 230      19F3 F6A0 
 230      43F6 
 231 03a7 1EE4 C6C6 	 .ascii "\036\344\306\3065<#\354A\177\202*!c\331\354\275\2367\362w\005"
 231      353C 23EC 
 231      417F 822A 
 231      2163 D9EC 
 231      BD9E 37F2 
 232 03bd 1BF9 1F1C 	 .ascii "\033\371\037\034n\344*\022\373\266}\336\271m\377Y\250R\307\250"
 232      6EE4 2A12 
 232      FBB6 7DDE 
 232      B96D FF59 
 232      A852 C7A8 
 233 03d1 A6D2 CE99 	 .ascii "\246\322\316\231\2320\t}\350\t\376\242\023\376/B\370\033\243"
 233      9A30 097D 
 233      E809 FEA2 
 233      13FE 2F42 
 233      F81B A3
 234 03e4 3B02 4478 	 .ascii ";\002Dxz\241)\342f\365e\201\325M>\241Z\315d+SK\3138\031_\312"
 234      7AA1 29E2 
GAS LISTING  			page 18


 234      66F5 6581 
 234      D54D 3EA1 
 234      5ACD 642B 
 235 03ff 1F97 8C5D 	 .ascii "\037\227\214]\313/\243\036\322\335\226\271~\341\275v\374,i\333"
 235      CB2F A31E 
 235      D2DD 96B9 
 235      7EE1 BD76 
 235      FC2C 69DB 
 236 0413 D10D 9A6E 	 .ascii "\321\r\232n(3\032p\263\265\001\317\323\341\n\265<\227\320\250"
 236      2833 1A70 
 236      B3B5 01CF 
 236      D3E1 0AB5 
 236      3C97 D0A8 
 237 0427 8F23 F3AE 	 .ascii "\217#\363\256vn\317\277z\265\256v\025\222WB\355~\273\312\023"
 237      766E CFBF 
 237      7AB5 AE76 
 237      1592 5742 
 237      ED7E BBCA 
 238 043c E2CA F8AF 	 .ascii "\342\312\370\257\330\307\364\274\346l\356\235\333Ys\277\346\251"
 238      D8C7 F4BC 
 238      E66C EE9D 
 238      DB59 73BF 
 238      E6A9 
 239 044e B9FF 6CBB 	 .ascii "\271\377l\273\255\271\357gz\\\273\353\346\376\363\355\226>\366"
 239      ADB9 EF67 
 239      7A5C BBEB 
 239      E6FE F3ED 
 239      963E F6
 240 0461 6B2F 60EE 	 .ascii "k/`\356m6\275\347$\003\323\372\376\260\023L\324\263%w\260~+\330"
 240      6D36 BDE7 
 240      2403 D3FA 
 240      FEB0 134C 
 240      D4B3 2577 
 241 0479 312F 60A2 	 .ascii "1/`\242\016\313\301\016X\301Nz\001\013\n\300D\2275\2362\376;"
 241      0ECB C10E 
 241      58C1 4E7A 
 241      010B 0AC0 
 241      4497 359E 
 242 0490 EBDF 1FB1 	 .ascii "\353\337\037\261\016\373Ov\3777\273\217\261\373\307\366.~\316"
 242      0EFB 4F76 
 242      FF37 BB8F 
 242      B1FB C7F6 
 242      2E7E CE
 243 04a3 C8A1 DC74 	 .ascii "\310\241\334t\321\240\377k\2464M\347\275\2732\327_x\347\n>j\244"
 243      D1A0 FF6B 
 243      A634 4DE7 
 243      BDBB 32D7 
 243      5F78 E70A 
 244 04ba 33DB 9637 	 .ascii "3\333\2267\346=\361z>+~\340T'\247v\377g\252c;/\311\370\023\263"
 244      E63D F17A 
 244      3E2B 7EE0 
 244      5427 A776 
 244      FF67 AA63 
 245 04d4 E273 3AFA 	 .ascii "\342s:\372M\263\243\263\357\236\261\314{\037f\236ym\033I\323"
 245      4DB3 A3B3 
 245      EF9E B1CC 
 245      7B1F 669E 
GAS LISTING  			page 19


 245      796D 1B49 
 246 04e9 23DB DCA6 	 .ascii "#\333\334\246M\263\364\366\364\313\200\265\250x%\276\0310j\\"
 246      4DB3 F4F6 
 246      F4CB 80B5 
 246      A878 25BE 
 246      1930 6A5C 
 247 04fd D4AC 6E39 	 .ascii "\324\254n9\233\325\247\3666\300<\304:\223\253\207(\3278?\360"
 247      9BD5 A7F6 
 247      36C0 3CC4 
 247      3A93 AB87 
 247      28D7 383F 
 248 0512 D369 3A26 	 .ascii "\323i:&Y~\341\r\372\324\006]\377\364\353gyc\355\336*yn\367D\262"
 248      597E E10D 
 248      FAD4 065D 
 248      FFF4 EB67 
 248      7963 EDDE 
 249 052c 1D38 B59A 	 .ascii "\0358\265\232s\354\242\243\271\016\220\361\035\335 m\243#\267"
 249      73EC A2A3 
 249      B90E 90F1 
 249      1DDD 206D 
 249      A323 B7
 250 053f 2DA7 6D19 	 .ascii "-\247m\031\037\203\2672\316z\332\351\b\271L\372\030/w^\326\351"
 250      1F83 B732 
 250      CE7A DAE9 
 250      08B9 4CFA 
 250      182F 775E 
 251 0555 BC66 29A7 	 .ascii "\274f)\247\323\203\275C\347L{\365X]\311\253\2528V-\222C\334\026"
 251      D383 BD43 
 251      E74C 7BF5 
 251      585D C9AB 
 251      AA38 562D 
 252 056d A1B8 2E81 	 .ascii "\241\270.\201\270\333w!n\233S\334v\241\2703\347\335\242)\376"
 252      B8DB 7721 
 252      6E9B 53DC 
 252      76A1 B833 
 252      E7DD A229 
 253 0582 7EE0 79B9 	 .ascii "~\340y\271+h\331{vJ\271\273\332\376\240\007\225\365=N?{\264J"
 253      2B68 D97B 
 253      764A B9BB 
 253      DAFE A007 
 253      95F5 3D4E 
 254 059a 79F7 B80E 	 .ascii "y\367\270\016)7\271\365s\225\370\030'\343\023\254\374':d;\n\232"
 254      2937 B9F5 
 254      7395 F818 
 254      27E3 13AC 
 254      FC27 3A64 
 255 05b1 7E59 BB15 	 .ascii "~Y\273\025\364s\222\243\240\323\375\247'\347B\r\247KT\021\256"
 255      F473 92A3 
 255      A0D3 FDA7 
 255      27E7 420D 
 255      A74B 5411 
 256 05c6 5FD2 239E 	 .ascii "_\322#\236\276\254\337\314\353t^A\355-R\251\275~:]\334n\377\316"
 256      BEAC DFCC 
 256      EB74 5E41 
 256      ED2D 52A9 
 256      BD7E 3A5D 
 257 05de 3DD0 6AF2 	 .ascii "=\320j\362\235\234\004\337\340\351c\364\024,\343\335\022e\375"
GAS LISTING  			page 20


 257      9D9C 04DF 
 257      E0E9 63F4 
 257      142C E3DD 
 257      1265 FD
 258 05f1 9D93 D511 	 .ascii "\235\223\325\0210\272Jg}\243\365\030\336DY5\251\277\367\"\325"
 258      30BA 4A67 
 258      7DA3 F518 
 258      DE44 5935 
 258      A9BF F722 
 259 0606 38D7 0E9C 	 .ascii "8\327\016\234\356\364o\2560\223\313\215\217\307\343\305\334\362"
 259      EEF4 6FAE 
 259      3093 CB8D 
 259      8FC7 E3C5 
 259      DCF2 
 260 0618 3833 96CE 	 .ascii "83\226\316\266\274\310\217y\277HO\223\274\034\364\270\327\333"
 260      B6BC C88F 
 260      79BF 484F 
 260      93BC 1CF4 
 260      B8D7 DB
 261 062b 4D38 19EF 	 .ascii "M8\031\357s\306z$\267\373\235w\217\035\257\271\217-\177\f\362"
 261      73C6 7A24 
 261      B7FB 9D77 
 261      8F1D AFB9 
 261      8F2D 7F0C 
 262 0640 583E 3F42 	 .ascii "X>?BcB]&\241\233\032@~\307\032\205w\243M\353\205\372\361ro~\357"
 262      6342 5D26 
 262      A19B 1A40 
 262      7EC7 1A85 
 262      77A3 4DEB 
 263 065b F4D9 BDE3 	 .ascii "\364\331\275\343\250\227\253y>i^3\353\305\301\325\233\247\312"
 263      A897 AB79 
 263      3E69 5E33 
 263      EBC5 C1D5 
 263      9BA7 CA
 264 066e FA73      	 .ascii "\372s"
 265 0670 AA6C D7C5 	 .string "\252l\327\305NK$\264\246#\241\361\273i3\003\371m= l\224\027.X\373\262&}w\301]H\037\314/\375u\241\364\027.\345\356\n}^\244;v\205\3378w\205!AO\335\230\367\237\216\273\354\251\303\222\373!\351\2603\332\231\353\267\337\375\306!\313!\311^y#\236+/-\330\232n{\213\3326\346\267\021^\037o\271\324\025G\177[\02458\352\215=>\344j\205\367\3761\"\260bw\341$rO\257\362\343\371s\357\267\302\334\313^\026U\336\301\311\310\327s\377d~\371\247\354\362\321\327\237\254]4?T\231\210\256S\022\311Pm\365\202\320\302\206\204\022\232\277|\331c\241\252\270\274\246!\032W\303\364\251\274\036\3154&\026\306\224H\242Z\215\250\251$\334W(\345k\"\t\265\274\"\270xi\355\314\205(\020^\320\320\020{0\224J&B\261h](\262.\021\212\306\353c)Y\t%U\031"
 265      4E4B 24B4 
 265      A623 A1F1 
 265      BB69 3303 
 265      F96D 3D20 
 266 0771 CA57 A282 	 .ascii "\312W\242\202\024\374>\026V\0374A\033\342?\216\256H%\024c\346"
 266      14FC 3E16 
 266      561F 3441 
 266      1BE2 3F8E 
 266      AE48 2514 
 267 0787 A9C4 BAE0 	 .ascii "\251\304\272\340\322\324\352:%1\245\266j\341\242\305\025?\254"
 267      D2D4 EA3A 
 267      2531 A5B6 
 267      6AE1 A2C5 
 267      153F AC
 268 079a 8CA8 116D 	 .ascii "\214\250\021m<\233\215\037\311\243~y\271a\001\2257_\226\023J"
 268      3C9B 8D1F 
 268      C9A3 7E79 
 268      B961 0195 
 268      375F 9613 
 269 07af 3259 48E5 	 .ascii "2YH\345\316\376vX\365WG\237Q\3745\353\327(\201\005\221\370\252"
 269      CEFE 7658 
GAS LISTING  			page 21


 269      F557 479F 
 269      51FC 35EB 
 269      D728 8105 
 270 07c6 E47D C01D 	 .ascii "\344}\300\0356D\327D\352b"
 270      3644 D744 
 270      EA62 
 271 07d0 4A58 2D73 	 .ascii "JX-s\327\216\255\b\260{AU\\MD\225\344\375v\007\351O\311\007\\"
 271      D78E AD08 
 271      B07B 4155 
 271      5C4D 4495 
 271      E4FD 7607 
 272 07e9 1D67 72FC 	 .ascii "\035gr\374 \022Uk\343j4\266L\211\310\353+\362\333\245\377\302"
 272      2012 556B 
 272      E36A 34B6 
 272      4C89 C8EB 
 272      2BF2 DBA5 
 273 07ff 8B9A 4872 	 .ascii "\213\232Hr\025\230\027\\\023\251_\245\310s\275\361\351\277\325"
 273      1598 175C 
 273      13A9 5FA5 
 273      C873 BDF1 
 273      E9BF D5
 274 0812 AABC 4C59 	 .ascii "\252\274LY\233R\222*\365\003\3000'\360\251\360wA\023%\021V\357"
 274      9B52 922A 
 274      F503 C030 
 274      27F0 A9F0 
 274      7741 1325 
 275 0829 A95B 6D59 	 .ascii "\251[mYUX\307\037\202\215\313#\261\224\022l\\\022\227\225\237"
 275      5558 C71F 
 275      828D CB23 
 275      B194 126C 
 275      5C12 9795 
 276 083e 1434 3EA9 	 .ascii "\0244>\251\304W\250+K(\0028KM4\304\370\302{\351T\245\262.Z\257"
 276      C457 A82B 
 276      4B28 0238 
 276      4B4D 34C4 
 276      F8C2 7BE9 
 277 0858 50D3 956F 	 .ascii "P\323\225ozP\322\236{+\321\347\355.\374~m\315=\221Xcd}2\034\215"
 277      7A50 D29E 
 277      7B2B D1E7 
 277      ED2E FC7E 
 277      6DCD 3D91 
 278 0873 C7A2 718B 	 .ascii "\307\242q\213#\253\225\230R\257\352\217\245\306|e4Ic\245?\233"
 278      23AB 9598 
 278      52AF EA8F 
 278      A5C6 7C65 
 278      3449 63A5 
 279 0889 0C55 71EB 	 .ascii "\fUq\353|Ic$\021\017\247\342\251\244\"\207!aR1u\272\261tI\322"
 279      7C49 6324 
 279      110F A7E2 
 279      A9A4 2287 
 279      2161 5231 
 280 08a3 4803 F98B 	 .ascii "H\003\371\213\356\251a\276Z\260^U\2225\rUO\321d\373\036\204*"
 280      EEA9 61BE 
 280      5AB0 5E55 
 280      9235 0D55 
 280      4FD1 64FB 
 281 08ba 50DF 104F 	 .ascii "P\337\020O\252\0016?\303\202\013\006-S\352\025p\211\\b\231^\262"
GAS LISTING  			page 22


 281      AA01 363F 
 281      C382 0B06 
 281      2D53 EA15 
 281      7089 5C62 
 282 08d1 94A5 C334 	 .ascii "\224\245\3034\273\365K\226\316\237\\\234\331\257\026\001\335"
 282      BBF5 4B96 
 282      CE9F 5C9C 
 282      D9AF 1601 
 282      DD
 283 08e2 A10F 9841 	 .ascii "\241\017\230A\t/V\324E\211\310jE\253\265/\031\302`^\037WF\023"
 283      092F 56D4 
 283      4589 C86A 
 283      45AB B52F 
 283      19C2 605E 
 284 08fa E0D5 6843 	 .ascii "\340\325hC\334\252\035D3\026S\344\377\003Ha:3"
 284      DCAA 1D44 
 284      3316 53E4 
 284      FF03 4861 
 284      3A33 
 285               	 .text
 286               	 .section .gnu.lto_.symtab.462cc1691dd85764,"",@progbits
 287 0000 456E 6470 	 .string "Endpoint_ConfigureEndpoint_Prv"
 287      6F69 6E74 
 287      5F43 6F6E 
 287      6669 6775 
 287      7265 456E 
 288 001f 00        	 .string ""
 289 0020 00        	 .string ""
 290 0021 00        	 .string ""
 291 0022 00        	 .string ""
 292 0023 00        	 .string ""
 293 0024 00        	 .string ""
 294 0025 00        	 .string ""
 295 0026 00        	 .string ""
 296 0027 00        	 .string ""
 297 0028 00        	 .string ""
 298 0029 00        	 .string ""
 299 002a A600      	 .string "\246"
 300 002c 00        	 .string ""
 301 002d 00        	 .string ""
 302 002e 456E 6470 	 .string "Endpoint_ConfigureEndpointTable"
 302      6F69 6E74 
 302      5F43 6F6E 
 302      6669 6775 
 302      7265 456E 
 303 004e 00        	 .string ""
 304 004f 00        	 .string ""
 305 0050 00        	 .string ""
 306 0051 00        	 .string ""
 307 0052 00        	 .string ""
 308 0053 00        	 .string ""
 309 0054 00        	 .string ""
 310 0055 00        	 .string ""
 311 0056 00        	 .string ""
 312 0057 00        	 .string ""
 313 0058 00        	 .string ""
 314 0059 BA00      	 .string "\272"
GAS LISTING  			page 23


 315 005b 00        	 .string ""
 316 005c 00        	 .string ""
 317 005d 456E 6470 	 .string "Endpoint_ClearEndpoints"
 317      6F69 6E74 
 317      5F43 6C65 
 317      6172 456E 
 317      6470 6F69 
 318 0075 00        	 .string ""
 319 0076 00        	 .string ""
 320 0077 00        	 .string ""
 321 0078 00        	 .string ""
 322 0079 00        	 .string ""
 323 007a 00        	 .string ""
 324 007b 00        	 .string ""
 325 007c 00        	 .string ""
 326 007d 00        	 .string ""
 327 007e 00        	 .string ""
 328 007f 00        	 .string ""
 329 0080 D700      	 .string "\327"
 330 0082 00        	 .string ""
 331 0083 00        	 .string ""
 332 0084 456E 6470 	 .string "Endpoint_ClearStatusStage"
 332      6F69 6E74 
 332      5F43 6C65 
 332      6172 5374 
 332      6174 7573 
 333 009e 00        	 .string ""
 334 009f 00        	 .string ""
 335 00a0 00        	 .string ""
 336 00a1 00        	 .string ""
 337 00a2 00        	 .string ""
 338 00a3 00        	 .string ""
 339 00a4 00        	 .string ""
 340 00a5 00        	 .string ""
 341 00a6 00        	 .string ""
 342 00a7 00        	 .string ""
 343 00a8 00        	 .string ""
 344 00a9 DB00      	 .string "\333"
 345 00ab 00        	 .string ""
 346 00ac 00        	 .string ""
 347 00ad 456E 6470 	 .string "Endpoint_WaitUntilReady"
 347      6F69 6E74 
 347      5F57 6169 
 347      7455 6E74 
 347      696C 5265 
 348 00c5 00        	 .string ""
 349 00c6 00        	 .string ""
 350 00c7 00        	 .string ""
 351 00c8 00        	 .string ""
 352 00c9 00        	 .string ""
 353 00ca 00        	 .string ""
 354 00cb 00        	 .string ""
 355 00cc 00        	 .string ""
 356 00cd 00        	 .string ""
 357 00ce 00        	 .string ""
 358 00cf 00        	 .string ""
 359 00d0 DE00      	 .string "\336"
GAS LISTING  			page 24


 360 00d2 00        	 .string ""
 361 00d3 00        	 .string ""
 362 00d4 5553 425F 	 .string "USB_ControlRequest"
 362      436F 6E74 
 362      726F 6C52 
 362      6571 7565 
 362      7374 00
 363 00e7 00        	 .string ""
 364 00e8 0200      	 .string "\002"
 365 00ea 00        	 .string ""
 366 00eb 00        	 .string ""
 367 00ec 00        	 .string ""
 368 00ed 00        	 .string ""
 369 00ee 00        	 .string ""
 370 00ef 00        	 .string ""
 371 00f0 00        	 .string ""
 372 00f1 00        	 .string ""
 373 00f2 E200      	 .string "\342"
 374 00f4 00        	 .string ""
 375 00f5 00        	 .string ""
 376 00f6 5553 425F 	 .string "USB_DeviceState"
 376      4465 7669 
 376      6365 5374 
 376      6174 6500 
 377 0106 00        	 .string ""
 378 0107 0200      	 .string "\002"
 379 0109 00        	 .string ""
 380 010a 00        	 .string ""
 381 010b 00        	 .string ""
 382 010c 00        	 .string ""
 383 010d 00        	 .string ""
 384 010e 00        	 .string ""
 385 010f 00        	 .string ""
 386 0110 00        	 .string ""
 387 0111 F500      	 .string "\365"
 388 0113 00        	 .string ""
 389 0114 00        	 .string ""
 390               	 .text
 391               	 .section .gnu.lto_.opts,"",@progbits
 392 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 392      6375 3D61 
 392      746D 6567 
 392      6133 3275 
 392      3227 2027 
 393               	 .text
 394               	 .cfi_sections .debug_frame
 395               	.global Endpoint_ConfigureEndpoint_Prv
 397               	Endpoint_ConfigureEndpoint_Prv:
 398               	.LFB81:
 399               	 .file 1 "LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c"
   1:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** */
GAS LISTING  			page 25


   8:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #include "../../../../Common/Common.h"
  32:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  34:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
  35:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #include "../USBMode.h"
  36:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  37:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #if defined(USB_CAN_BE_DEVICE)
  38:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  39:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #include "../Endpoint.h"
  40:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  41:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #if !defined(FIXED_CONTROL_ENDPOINT_SIZE)
  42:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** uint8_t USB_Device_ControlEndpointSize = ENDPOINT_CONTROLEP_DEFAULT_SIZE;
  43:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #endif
  44:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  45:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** bool Endpoint_ConfigureEndpointTable(const USB_Endpoint_Table_t* const Table,
  46:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****                                      const uint8_t Entries)
  47:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
  48:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t i = 0; i < Entries; i++)
  49:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
  50:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Table[i].Address))
  51:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  continue;
  52:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  53:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Endpoint_ConfigureEndpoint(Table[i].Address, Table[i].Type, Table[i].Size, Table[i].Banks))
  54:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return false;
  55:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	}
  56:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  57:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	return true;
  58:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** }
  59:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  60:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
  61:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****                                     const uint8_t UECFG0XData,
  62:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c ****                                     const uint8_t UECFG1XData)
  63:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
 400               	 .loc 1 63 0
GAS LISTING  			page 26


 401               	 .cfi_startproc
 402               	.LVL0:
 403               	 
 404               	 
 405               	 
 406               	.L__stack_usage =0
 407               	.LBB55:
  64:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #if defined(CONTROL_ONLY_DEVICE) || defined(ORDERED_EP_CONFIG)
  65:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	Endpoint_SelectEndpoint(Number);
  66:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	Endpoint_EnableEndpoint();
  67:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  68:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	UECFG1X = 0;
  69:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	UECFG0X = UECFG0XData;
  70:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	UECFG1X = UECFG1XData;
  71:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  72:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	return Endpoint_IsConfigured();
  73:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #else
  74:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t EPNum = Number; EPNum < ENDPOINT_TOTAL_ENDPOINTS; EPNum++)
 408               	 .loc 1 74 0
 409 0000 982F      	 mov r25,r24
 410               	.LVL1:
 411               	.L2:
 412               	 .loc 1 74 0 is_stmt 0 discriminator 1
 413 0002 9530      	 cpi r25,lo8(5)
 414 0004 00F4      	 brsh .L12
 415               	.LVL2:
 416               	.LBB56:
 417               	.LBB57:
 418               	.LBB58:
 419               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
GAS LISTING  			page 27


  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
GAS LISTING  			page 28


  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
GAS LISTING  			page 29


 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
GAS LISTING  			page 30


 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
GAS LISTING  			page 31


 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 420               	 .loc 2 270 0 is_stmt 1
 421 0006 9093 E900 	 sts 233,r25
 422               	.LBE58:
 423               	.LBE57:
  75:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
  76:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		uint8_t UECFG0XTemp;
  77:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		uint8_t UECFG1XTemp;
  78:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		uint8_t UEIENXTemp;
  79:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  80:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_SelectEndpoint(EPNum);
  81:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  82:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (EPNum == Number)
 424               	 .loc 1 82 0
 425 000a 9817      	 cp r25,r24
 426 000c 01F0      	 breq .L9
  83:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
  84:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG0XTemp = UECFG0XData;
  85:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG1XTemp = UECFG1XData;
  86:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UEIENXTemp  = 0;
  87:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
  88:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		else
  89:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
  90:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG0XTemp = UECFG0X;
 427               	 .loc 1 90 0
 428 000e 7091 EC00 	 lds r23,236
 429               	.LVL3:
  91:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG1XTemp = UECFG1X;
 430               	 .loc 1 91 0
 431 0012 2091 ED00 	 lds r18,237
 432               	.LVL4:
  92:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UEIENXTemp  = UEIENX;
 433               	 .loc 1 92 0
 434 0016 5091 F000 	 lds r21,240
 435               	.LVL5:
 436 001a 00C0      	 rjmp .L3
 437               	.LVL6:
 438               	.L9:
  85:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG1XTemp = UECFG1XData;
 439               	 .loc 1 85 0
 440 001c 242F      	 mov r18,r20
  84:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UECFG0XTemp = UECFG0XData;
 441               	 .loc 1 84 0
GAS LISTING  			page 32


 442 001e 762F      	 mov r23,r22
  86:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			UEIENXTemp  = 0;
 443               	 .loc 1 86 0
 444 0020 50E0      	 ldi r21,0
 445               	.L3:
 446               	.LVL7:
  93:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
  94:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  95:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(UECFG1XTemp & (1 << ALLOC)))
 447               	 .loc 1 95 0
 448 0022 21FF      	 sbrs r18,1
 449 0024 00C0      	 rjmp .L5
 450               	.LBB59:
 451               	.LBB60:
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 452               	 .loc 2 303 0
 453 0026 3091 EB00 	 lds r19,235
 454 002a 3E7F      	 andi r19,lo8(-2)
 455 002c 3093 EB00 	 sts 235,r19
 456               	.LBE60:
 457               	.LBE59:
  96:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  continue;
  97:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
  98:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_DisableEndpoint();
  99:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UECFG1X &= ~(1 << ALLOC);
GAS LISTING  			page 33


 458               	 .loc 1 99 0
 459 0030 3091 ED00 	 lds r19,237
 460 0034 3D7F      	 andi r19,lo8(-3)
 461 0036 3093 ED00 	 sts 237,r19
 462               	.LBB61:
 463               	.LBB62:
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 464               	 .loc 2 294 0
 465 003a 3091 EB00 	 lds r19,235
 466 003e 3160      	 ori r19,lo8(1)
 467 0040 3093 EB00 	 sts 235,r19
 468               	.LBE62:
 469               	.LBE61:
 100:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 101:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_EnableEndpoint();
 102:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UECFG0X = UECFG0XTemp;
 470               	 .loc 1 102 0
 471 0044 7093 EC00 	 sts 236,r23
 103:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UECFG1X = UECFG1XTemp;
 472               	 .loc 1 103 0
 473 0048 2093 ED00 	 sts 237,r18
 104:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UEIENX  = UEIENXTemp;
 474               	 .loc 1 104 0
 475 004c 5093 F000 	 sts 240,r21
 476               	.LBB63:
 477               	.LBB64:
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 34


 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 478               	 .loc 2 370 0
 479 0050 2091 EE00 	 lds r18,238
 480               	.LVL8:
 481               	.LBE64:
 482               	.LBE63:
 105:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 106:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Endpoint_IsConfigured()))
 483               	 .loc 1 106 0
 484 0054 27FF      	 sbrs r18,7
 485 0056 00C0      	 rjmp .L10
 486               	.L5:
 487               	.LBE56:
  74:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t EPNum = Number; EPNum < ENDPOINT_TOTAL_ENDPOINTS; EPNum++)
 488               	 .loc 1 74 0
 489 0058 9F5F      	 subi r25,lo8(-(1))
 490               	.LVL9:
 491 005a 00C0      	 rjmp .L2
 492               	.LVL10:
 493               	.L12:
 494               	.LBE55:
 495               	.LBB66:
GAS LISTING  			page 35


 496               	.LBB67:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 497               	 .loc 2 270 0
 498 005c 8F70      	 andi r24,lo8(15)
 499               	.LVL11:
 500 005e 8093 E900 	 sts 233,r24
 501               	.LBE67:
 502               	.LBE66:
 107:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return false;
 108:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	}
 109:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 110:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	Endpoint_SelectEndpoint(Number);
 111:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	return true;
 503               	 .loc 1 111 0
 504 0062 81E0      	 ldi r24,lo8(1)
 505 0064 0895      	 ret
 506               	.LVL12:
 507               	.L10:
 508               	.LBB68:
 509               	.LBB65:
 107:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return false;
 510               	 .loc 1 107 0
 511 0066 80E0      	 ldi r24,0
 512               	.LVL13:
 513               	.LBE65:
 514               	.LBE68:
 112:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #endif
 113:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** }
 515               	 .loc 1 113 0
 516 0068 0895      	 ret
 517               	 .cfi_endproc
 518               	.LFE81:
 520               	.global Endpoint_ConfigureEndpointTable
 522               	Endpoint_ConfigureEndpointTable:
 523               	.LFB80:
  47:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
 524               	 .loc 1 47 0
 525               	 .cfi_startproc
 526               	.LVL14:
 527 006a 0F93      	 push r16
 528               	.LCFI0:
 529               	 .cfi_def_cfa_offset 3
 530               	 .cfi_offset 16,-2
 531 006c 1F93      	 push r17
 532               	.LCFI1:
 533               	 .cfi_def_cfa_offset 4
 534               	 .cfi_offset 17,-3
 535 006e CF93      	 push r28
 536               	.LCFI2:
 537               	 .cfi_def_cfa_offset 5
 538               	 .cfi_offset 28,-4
 539 0070 DF93      	 push r29
 540               	.LCFI3:
 541               	 .cfi_def_cfa_offset 6
 542               	 .cfi_offset 29,-5
 543               	 
 544               	 
GAS LISTING  			page 36


 545               	 
 546               	.L__stack_usage =4
 547 0072 062F      	 mov r16,r22
 548               	.LVL15:
 549 0074 EC01      	 movw r28,r24
 550               	.LBB69:
  48:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t i = 0; i < Entries; i++)
 551               	 .loc 1 48 0
 552 0076 10E0      	 ldi r17,0
 553               	.LVL16:
 554               	.L14:
  48:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t i = 0; i < Entries; i++)
 555               	 .loc 1 48 0 is_stmt 0 discriminator 1
 556 0078 1017      	 cp r17,r16
 557 007a 01F0      	 breq .L26
  50:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Table[i].Address))
 558               	 .loc 1 50 0 is_stmt 1
 559 007c 9881      	 ld r25,Y
 560 007e 9923      	 tst r25
 561 0080 01F0      	 breq .L16
  53:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Endpoint_ConfigureEndpoint(Table[i].Address, Table[i].Type, Table[i].Size, Table[i].Banks))
 562               	 .loc 1 53 0
 563 0082 2C81      	 ldd r18,Y+4
 564 0084 E981      	 ldd r30,Y+1
 565 0086 FA81      	 ldd r31,Y+2
 566 0088 6B81      	 ldd r22,Y+3
 567               	.LVL17:
 568               	.LBB70:
 569               	.LBB71:
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 570               	 .loc 2 205 0
 571 008a 892F      	 mov r24,r25
 572 008c 8F70      	 andi r24,lo8(15)
 573               	.LVL18:
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 574               	 .loc 2 207 0
 575 008e 8530      	 cpi r24,lo8(5)
 576 0090 00F0      	 brlo .L17
 577               	.LVL19:
 578               	.L23:
 579               	.LBE71:
 580               	.LBE70:
  54:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return false;
 581               	 .loc 1 54 0
 582 0092 80E0      	 ldi r24,0
 583 0094 00C0      	 rjmp .L18
 584               	.LVL20:
 585               	.L17:
 586               	.LBB75:
 587               	.LBB74:
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 588               	 .loc 2 210 0
 589 0096 2230      	 cpi r18,lo8(2)
 590 0098 00F0      	 brlo .L25
 591 009a 56E0      	 ldi r21,lo8(6)
 592 009c 00C0      	 rjmp .L19
 593               	.L25:
GAS LISTING  			page 37


 594 009e 52E0      	 ldi r21,lo8(2)
 595               	.L19:
 596               	.LVL21:
 597               	.LBB72:
 598               	.LBB73:
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
 599               	 .loc 2 98 0
 600 00a0 28E0      	 ldi r18,lo8(8)
 601 00a2 30E0      	 ldi r19,0
 602               	.LVL22:
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
 603               	 .loc 2 97 0
 604 00a4 40E0      	 ldi r20,0
 605               	.LVL23:
 606               	.L20:
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 607               	 .loc 2 100 0
 608 00a6 2E17      	 cp r18,r30
 609 00a8 3F07      	 cpc r19,r31
 610 00aa 00F4      	 brsh .L27
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 611               	 .loc 2 102 0
 612 00ac 4F5F      	 subi r20,lo8(-(1))
 613               	.LVL24:
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 614               	 .loc 2 103 0
 615 00ae 220F      	 lsl r18
 616 00b0 331F      	 rol r19
 617               	.LVL25:
 618 00b2 00C0      	 rjmp .L20
 619               	.L27:
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 620               	 .loc 2 106 0
 621 00b4 4295      	 swap r20
 622               	.LVL26:
 623 00b6 407F      	 andi r20,lo8(-16)
 624               	.LBE73:
 625               	.LBE72:
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 626               	 .loc 2 210 0
 627 00b8 452B      	 or r20,r21
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 628               	 .loc 2 211 0
 629 00ba 991F      	 rol r25
 630 00bc 9927      	 clr r25
 631 00be 991F      	 rol r25
 632               	.LVL27:
 633 00c0 6295      	 swap r22
 634               	.LVL28:
 635 00c2 660F      	 lsl r22
 636 00c4 660F      	 lsl r22
 637 00c6 607C      	 andi r22,lo8(-64)
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 638               	 .loc 2 210 0
 639 00c8 692B      	 or r22,r25
 640 00ca 0E94 0000 	 call Endpoint_ConfigureEndpoint_Prv
 641               	.LVL29:
GAS LISTING  			page 38


 642               	.LBE74:
 643               	.LBE75:
  53:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (!(Endpoint_ConfigureEndpoint(Table[i].Address, Table[i].Type, Table[i].Size, Table[i].Banks))
 644               	 .loc 1 53 0
 645 00ce 8823      	 tst r24
 646 00d0 01F0      	 breq .L23
 647               	.L16:
  48:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t i = 0; i < Entries; i++)
 648               	 .loc 1 48 0
 649 00d2 1F5F      	 subi r17,lo8(-(1))
 650               	.LVL30:
 651 00d4 2596      	 adiw r28,5
 652 00d6 00C0      	 rjmp .L14
 653               	.L26:
 654               	.LBE69:
  57:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	return true;
 655               	 .loc 1 57 0
 656 00d8 81E0      	 ldi r24,lo8(1)
 657               	.L18:
 658               	 
  58:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** }
 659               	 .loc 1 58 0
 660 00da DF91      	 pop r29
 661 00dc CF91      	 pop r28
 662 00de 1F91      	 pop r17
 663               	.LVL31:
 664 00e0 0F91      	 pop r16
 665               	.LVL32:
 666 00e2 0895      	 ret
 667               	 .cfi_endproc
 668               	.LFE80:
 670               	.global Endpoint_ClearEndpoints
 672               	Endpoint_ClearEndpoints:
 673               	.LFB82:
 114:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 115:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** void Endpoint_ClearEndpoints(void)
 116:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
 674               	 .loc 1 116 0
 675               	 .cfi_startproc
 676               	 
 677               	 
 678               	 
 679               	.L__stack_usage =0
 117:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	UEINT = 0;
 680               	 .loc 1 117 0
 681 00e4 1092 F400 	 sts 244,__zero_reg__
 682               	.LVL33:
 683               	.LBB76:
 118:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 119:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t EPNum = 0; EPNum < ENDPOINT_TOTAL_ENDPOINTS; EPNum++)
 684               	 .loc 1 119 0
 685 00e8 80E0      	 ldi r24,0
 686               	.LVL34:
 687               	.L30:
 688               	.LBB77:
 689               	.LBB78:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
GAS LISTING  			page 39


 690               	 .loc 2 270 0
 691 00ea 8093 E900 	 sts 233,r24
 692               	.LBE78:
 693               	.LBE77:
 120:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
 121:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_SelectEndpoint(EPNum);
 122:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UEIENX  = 0;
 694               	 .loc 1 122 0
 695 00ee 1092 F000 	 sts 240,__zero_reg__
 123:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UEINTX  = 0;
 696               	 .loc 1 123 0
 697 00f2 1092 E800 	 sts 232,__zero_reg__
 124:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		UECFG1X = 0;
 698               	 .loc 1 124 0
 699 00f6 1092 ED00 	 sts 237,__zero_reg__
 700               	.LBB79:
 701               	.LBB80:
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 702               	 .loc 2 303 0
 703 00fa 9091 EB00 	 lds r25,235
 704 00fe 9E7F      	 andi r25,lo8(-2)
 705 0100 9093 EB00 	 sts 235,r25
 706               	.LBE80:
 707               	.LBE79:
 119:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (uint8_t EPNum = 0; EPNum < ENDPOINT_TOTAL_ENDPOINTS; EPNum++)
 708               	 .loc 1 119 0
 709 0104 8F5F      	 subi r24,lo8(-(1))
 710               	.LVL35:
 711 0106 8530      	 cpi r24,lo8(5)
 712 0108 01F4      	 brne .L30
 713               	 
 714               	.LBE76:
 125:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_DisableEndpoint();
 126:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	}
 127:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** }
 715               	 .loc 1 127 0
 716 010a 0895      	 ret
 717               	 .cfi_endproc
 718               	.LFE82:
 720               	.global Endpoint_ClearStatusStage
 722               	Endpoint_ClearStatusStage:
 723               	.LFB83:
 128:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 129:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** void Endpoint_ClearStatusStage(void)
 130:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
 724               	 .loc 1 130 0
 725               	 .cfi_startproc
 726               	 
 727               	 
 728               	 
 729               	.L__stack_usage =0
 131:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	if (USB_ControlRequest.bmRequestType & REQDIR_DEVICETOHOST)
 730               	 .loc 1 131 0
 731 010c 8091 0000 	 lds r24,USB_ControlRequest
 732 0110 87FD      	 sbrc r24,7
 733 0112 00C0      	 rjmp .L37
 734               	.L38:
GAS LISTING  			page 40


 735               	.LBB97:
 736               	.LBB98:
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 737               	 .loc 2 407 0
 738 0114 8091 E800 	 lds r24,232
 739               	.LBE98:
 740               	.LBE97:
 132:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
 133:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		while (!(Endpoint_IsOUTReceived()))
 134:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
 135:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 136:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return;
 137:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
 138:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 139:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_ClearOUT();
 140:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	}
 141:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	else
 142:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
 143:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		while (!(Endpoint_IsINReady()))
 741               	 .loc 1 143 0
 742 0118 80FF      	 sbrs r24,0
GAS LISTING  			page 41


 743 011a 00C0      	 rjmp .L33
 744 011c 00C0      	 rjmp .L47
 745               	.L37:
 746               	.LBB99:
 747               	.LBB100:
 408:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 748               	 .loc 2 419 0
 749 011e 8091 E800 	 lds r24,232
 750               	.LBE100:
 751               	.LBE99:
 133:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		while (!(Endpoint_IsOUTReceived()))
 752               	 .loc 1 133 0
 753 0122 82FD      	 sbrc r24,2
 754 0124 00C0      	 rjmp .L35
 135:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 755               	 .loc 1 135 0
 756 0126 8091 0000 	 lds r24,USB_DeviceState
 757 012a 8111      	 cpse r24,__zero_reg__
 758 012c 00C0      	 rjmp .L37
 759 012e 0895      	 ret
 760               	.L35:
 761               	.LBB101:
 762               	.LBB102:
 420:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
GAS LISTING  			page 42


 443:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 763               	 .loc 2 471 0
 764 0130 8091 E800 	 lds r24,232
 765 0134 8B77      	 andi r24,lo8(123)
 766 0136 00C0      	 rjmp .L46
 767               	.L33:
 768               	.LBE102:
 769               	.LBE101:
 144:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
 145:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (USB_DeviceState == DEVICE_STATE_Unattached)
 770               	 .loc 1 145 0
 771 0138 8091 0000 	 lds r24,USB_DeviceState
 772 013c 8111      	 cpse r24,__zero_reg__
 773 013e 00C0      	 rjmp .L38
 774 0140 0895      	 ret
 775               	.L47:
 776               	.LBB103:
 777               	.LBB104:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 778               	 .loc 2 456 0
 779 0142 8091 E800 	 lds r24,232
 780 0146 8E77      	 andi r24,lo8(126)
 781               	.L46:
 782 0148 8093 E800 	 sts 232,r24
 783 014c 0895      	 ret
 784               	.LBE104:
 785               	.LBE103:
 786               	 .cfi_endproc
 787               	.LFE83:
GAS LISTING  			page 43


 789               	.global Endpoint_WaitUntilReady
 791               	Endpoint_WaitUntilReady:
 792               	.LFB84:
 146:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return;
 147:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
 148:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 149:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		Endpoint_ClearIN();
 150:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	}
 151:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** }
 152:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 153:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** #if !defined(CONTROL_ONLY_DEVICE)
 154:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** uint8_t Endpoint_WaitUntilReady(void)
 155:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** {
 793               	 .loc 1 155 0
 794               	 .cfi_startproc
 795               	 
 796               	 
 797               	 
 798               	.L__stack_usage =0
 799               	.LVL36:
 800               	.LBB105:
 801               	.LBB106:
 802               	 .file 3 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
GAS LISTING  			page 44


  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
GAS LISTING  			page 45


  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
GAS LISTING  			page 46


 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 803               	 .loc 3 165 0
 804 014e 8091 E400 	 lds r24,228
 805 0152 9091 E500 	 lds r25,228+1
 806 0156 45E6      	 ldi r20,lo8(101)
 807               	.LVL37:
 808               	.L53:
 809               	.LBE106:
 810               	.LBE105:
 811               	.LBB107:
 812               	.LBB108:
 813               	.LBB109:
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 814               	 .loc 2 240 0
 815 0158 2091 EC00 	 lds r18,236
 816 015c 20FF      	 sbrs r18,0
 817 015e 00C0      	 rjmp .L64
 818               	.LBE109:
 819               	.LBE108:
 820               	.LBB110:
 821               	.LBB111:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 822               	 .loc 2 407 0
 823 0160 2091 E800 	 lds r18,232
 824               	.LBE111:
 825               	.LBE110:
 156:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	#if (USB_STREAM_TIMEOUT_MS < 0xFF)
 157:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	uint8_t  TimeoutMSRem = USB_STREAM_TIMEOUT_MS;
 158:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	#else
 159:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	uint16_t TimeoutMSRem = USB_STREAM_TIMEOUT_MS;
 160:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	#endif
 161:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 162:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	uint16_t PreviousFrameNumber = USB_Device_GetFrameNumber();
 163:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 164:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	for (;;)
 165:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 	{
 166:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (Endpoint_GetEndpointDirection() == ENDPOINT_DIR_IN)
 167:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
 168:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (Endpoint_IsINReady())
 826               	 .loc 1 168 0
 827 0164 20FD      	 sbrc r18,0
GAS LISTING  			page 47


 828 0166 00C0      	 rjmp .L61
 829               	.L55:
 169:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return ENDPOINT_READYWAIT_NoError;
 170:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
 171:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		else
 172:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
 173:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (Endpoint_IsOUTReceived())
 174:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return ENDPOINT_READYWAIT_NoError;
 175:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		}
 176:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 177:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		uint8_t USB_DeviceState_LCL = USB_DeviceState;
 830               	 .loc 1 177 0
 831 0168 2091 0000 	 lds r18,USB_DeviceState
 832               	.LVL38:
 178:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 179:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (USB_DeviceState_LCL == DEVICE_STATE_Unattached)
 833               	 .loc 1 179 0
 834 016c 2223      	 tst r18
 835 016e 01F0      	 breq .L56
 180:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_DeviceDisconnected;
 181:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		else if (USB_DeviceState_LCL == DEVICE_STATE_Suspended)
 836               	 .loc 1 181 0
 837 0170 2530      	 cpi r18,lo8(5)
 838 0172 01F0      	 breq .L57
 839               	.LBB112:
 840               	.LBB113:
 472:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
GAS LISTING  			page 48


 503:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 841               	 .loc 2 513 0
 842 0174 2091 EB00 	 lds r18,235
 843               	.LVL39:
 844               	.LBE113:
 845               	.LBE112:
 182:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_BusSuspended;
 183:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		else if (Endpoint_IsStalled())
 846               	 .loc 1 183 0
 847 0178 25FD      	 sbrc r18,5
 848 017a 00C0      	 rjmp .L58
 849               	.LBB114:
 850               	.LBB115:
 851               	 .loc 3 165 0
 852 017c 2091 E400 	 lds r18,228
 853 0180 3091 E500 	 lds r19,228+1
 854               	.LVL40:
 855               	.LBE115:
 856               	.LBE114:
 184:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_EndpointStalled;
 185:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 186:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		uint16_t CurrentFrameNumber = USB_Device_GetFrameNumber();
 187:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 188:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		if (CurrentFrameNumber != PreviousFrameNumber)
 857               	 .loc 1 188 0
 858 0184 2817      	 cp r18,r24
 859 0186 3907      	 cpc r19,r25
 860 0188 01F0      	 breq .L53
 861               	.LVL41:
 862 018a 4150      	 subi r20,lo8(-(-1))
 863               	.LVL42:
 189:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		{
 190:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			PreviousFrameNumber = CurrentFrameNumber;
 191:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 
 192:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (!(TimeoutMSRem--))
 864               	 .loc 1 192 0
 865 018c 01F0      	 breq .L59
 866               	.LBB117:
 867               	.LBB116:
 868               	 .loc 3 165 0
 869 018e C901      	 movw r24,r18
 870 0190 00C0      	 rjmp .L53
 871               	.LVL43:
 872               	.L56:
 873               	.LBE116:
 874               	.LBE117:
 180:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_DeviceDisconnected;
GAS LISTING  			page 49


 875               	 .loc 1 180 0
 876 0192 82E0      	 ldi r24,lo8(2)
 877               	.LVL44:
 878 0194 0895      	 ret
 879               	.LVL45:
 880               	.L57:
 182:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_BusSuspended;
 881               	 .loc 1 182 0
 882 0196 83E0      	 ldi r24,lo8(3)
 883               	.LVL46:
 884 0198 0895      	 ret
 885               	.LVL47:
 886               	.L58:
 184:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 		  return ENDPOINT_READYWAIT_EndpointStalled;
 887               	 .loc 1 184 0
 888 019a 81E0      	 ldi r24,lo8(1)
 889               	.LVL48:
 890 019c 0895      	 ret
 891               	.LVL49:
 892               	.L59:
 193:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return ENDPOINT_READYWAIT_Timeout;
 893               	 .loc 1 193 0
 894 019e 84E0      	 ldi r24,lo8(4)
 895 01a0 0895      	 ret
 896               	.LVL50:
 897               	.L64:
 898               	.LBB118:
 899               	.LBB119:
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 900               	 .loc 2 419 0
 901 01a2 2091 E800 	 lds r18,232
 902               	.LBE119:
 903               	.LBE118:
 173:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			if (Endpoint_IsOUTReceived())
 904               	 .loc 1 173 0
 905 01a6 22FF      	 sbrs r18,2
 906 01a8 00C0      	 rjmp .L55
 907               	.L61:
 169:LUFA/Drivers/USB/Core/AVR8/Endpoint_AVR8.c **** 			  return ENDPOINT_READYWAIT_NoError;
 908               	 .loc 1 169 0
 909 01aa 80E0      	 ldi r24,0
 910               	.LVL51:
 911 01ac 0895      	 ret
 912               	.LBE107:
 913               	 .cfi_endproc
 914               	.LFE84:
 916               	.Letext0:
 917               	 .file 4 "/usr/lib/avr/include/stdint.h"
 918               	 .file 5 "LUFA/Drivers/USB/Core/AVR8/../Endpoint.h"
 919               	 .file 6 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../StdRequestType.h"
 920               	 .file 7 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../Device.h"
 921               	 .file 8 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../USBTask.h"
GAS LISTING  			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Endpoint_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:397    .text:0000000000000000 Endpoint_ConfigureEndpoint_Prv
    {standard input}:522    .text:000000000000006a Endpoint_ConfigureEndpointTable
    {standard input}:672    .text:00000000000000e4 Endpoint_ClearEndpoints
    {standard input}:722    .text:000000000000010c Endpoint_ClearStatusStage
    {standard input}:791    .text:000000000000014e Endpoint_WaitUntilReady
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
USB_ControlRequest
USB_DeviceState
GAS LISTING  			page 1


   1               	 .file "Host_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.inline.5c456def8b4d59e8,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\020\242"
  10      6062 C006 
  10      10A2 00
  11 000b 00        	 .string ""
  12 000c BA00      	 .string "\272"
  13 000e 07        	 .ascii "\007"
  14               	 .text
  15               	 .section .gnu.lto_.pureconst.5c456def8b4d59e8,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  16      6062 6064 
  16      8002 00
  17 000b 00        	 .string ""
  18 000c 4600      	 .string "F"
  19 000e 06        	 .ascii "\006"
  20               	 .text
  21               	 .section .gnu.lto_.symbol_nodes.5c456def8b4d59e8,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`\002B\030"
  22      6002 4218 
  22      00
  23 0009 00        	 .string ""
  24 000a 00        	 .string ""
  25 000b 5600      	 .string "V"
  26 000d 07        	 .ascii "\007"
  27               	 .text
  28               	 .section .gnu.lto_.refs.5c456def8b4d59e8,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  29      6062 6064 
  29      8002 00
  30 000b 00        	 .string ""
  31 000c 4600      	 .string "F"
  32 000e 06        	 .ascii "\006"
  33               	 .text
  34               	 .section .gnu.lto_.decls.5c456def8b4d59e8,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`bPa``\370\017\004@\212\201\021\212\355\030\b"
  35      6062 5061 
  35      6060 F80F 
  35      0440 8A81 
  35      118A ED18 
  36 0016 00        	 .string ""
  37 0017 CE1B 0465 	 .ascii "\316\033\004e"
  38               	 .text
  39               	 .section .gnu.lto_.symtab.5c456def8b4d59e8,"",@progbits
  40               	 .text
  41               	 .section .gnu.lto_.opts,"",@progbits
  42 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  42      6375 3D61 
  42      746D 6567 
  42      6133 3275 
GAS LISTING  			page 2


  42      3227 2027 
  43               	 .text
  44               	 .cfi_sections .debug_frame
  45               	.Letext0:
GAS LISTING  			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Host_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "PipeStream_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.inline.dedf228b7671bd8f,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\020\242"
  10      6062 C006 
  10      10A2 00
  11 000b 00        	 .string ""
  12 000c BA00      	 .string "\272"
  13 000e 07        	 .ascii "\007"
  14               	 .text
  15               	 .section .gnu.lto_.pureconst.dedf228b7671bd8f,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  16      6062 6064 
  16      8002 00
  17 000b 00        	 .string ""
  18 000c 4600      	 .string "F"
  19 000e 06        	 .ascii "\006"
  20               	 .text
  21               	 .section .gnu.lto_.symbol_nodes.dedf228b7671bd8f,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`\002B\030"
  22      6002 4218 
  22      00
  23 0009 00        	 .string ""
  24 000a 00        	 .string ""
  25 000b 5600      	 .string "V"
  26 000d 07        	 .ascii "\007"
  27               	 .text
  28               	 .section .gnu.lto_.refs.dedf228b7671bd8f,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  29      6062 6064 
  29      8002 00
  30 000b 00        	 .string ""
  31 000c 4600      	 .string "F"
  32 000e 06        	 .ascii "\006"
  33               	 .text
  34               	 .section .gnu.lto_.decls.dedf228b7671bd8f,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`bPa``\370\017\004@\212\201\021\212\355\030\b"
  35      6062 5061 
  35      6060 F80F 
  35      0440 8A81 
  35      118A ED18 
  36 0016 00        	 .string ""
  37 0017 CE1B 0465 	 .ascii "\316\033\004e"
  38               	 .text
  39               	 .section .gnu.lto_.symtab.dedf228b7671bd8f,"",@progbits
  40               	 .text
  41               	 .section .gnu.lto_.opts,"",@progbits
  42 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  42      6375 3D61 
  42      746D 6567 
  42      6133 3275 
GAS LISTING  			page 2


  42      3227 2027 
  43               	 .text
  44               	 .cfi_sections .debug_frame
  45               	.Letext0:
GAS LISTING  			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 PipeStream_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "Pipe_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.inline.b1d355ac20c180ba,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\020\242"
  10      6062 C006 
  10      10A2 00
  11 000b 00        	 .string ""
  12 000c BA00      	 .string "\272"
  13 000e 07        	 .ascii "\007"
  14               	 .text
  15               	 .section .gnu.lto_.pureconst.b1d355ac20c180ba,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  16      6062 6064 
  16      8002 00
  17 000b 00        	 .string ""
  18 000c 4600      	 .string "F"
  19 000e 06        	 .ascii "\006"
  20               	 .text
  21               	 .section .gnu.lto_.symbol_nodes.b1d355ac20c180ba,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`\002B\030"
  22      6002 4218 
  22      00
  23 0009 00        	 .string ""
  24 000a 00        	 .string ""
  25 000b 5600      	 .string "V"
  26 000d 07        	 .ascii "\007"
  27               	 .text
  28               	 .section .gnu.lto_.refs.b1d355ac20c180ba,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  29      6062 6064 
  29      8002 00
  30 000b 00        	 .string ""
  31 000c 4600      	 .string "F"
  32 000e 06        	 .ascii "\006"
  33               	 .text
  34               	 .section .gnu.lto_.decls.b1d355ac20c180ba,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`bPa``\370\017\004@\212\201\021\212\355\030\b"
  35      6062 5061 
  35      6060 F80F 
  35      0440 8A81 
  35      118A ED18 
  36 0016 00        	 .string ""
  37 0017 CE1B 0465 	 .ascii "\316\033\004e"
  38               	 .text
  39               	 .section .gnu.lto_.symtab.b1d355ac20c180ba,"",@progbits
  40               	 .text
  41               	 .section .gnu.lto_.opts,"",@progbits
  42 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  42      6375 3D61 
  42      746D 6567 
  42      6133 3275 
GAS LISTING  			page 2


  42      3227 2027 
  43               	 .text
  44               	 .cfi_sections .debug_frame
  45               	.Letext0:
GAS LISTING  			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Pipe_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "USBController_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.741e2decdff82cc9,"",@progbits
  10 0000 789C 6362 	 .ascii "x\234cb`b\300\006t\2404\013\003\0033S4c\016#\210\003f0\302\031"
  10      6062 C006 
  10      74A0 340B 
  10      0303 3353 
  10      3463 0E23 
  11 001a 409D AC40 	 .ascii "@\235\254@\016;H\212\003\210\001QN\002\261"
  11      0E3B 488A 
  11      0388 0151 
  11      4E02 B1
  12               	 .text
  13               	 .section .gnu.lto_.inline.741e2decdff82cc9,"",@progbits
  14 0000 789C 6362 	 .string "x\234cb`b\300\006*\2404\013\003\203\270<#\003\223B\303/F\006\266\005\362`\325,\274\f\f\314@\232\225A@\021('\366a5B\216\221\013F\2603\210^g"
  14      6062 C006 
  14      2AA0 340B 
  14      0383 B83C 
  14      2303 9342 
  15 0038 4ACB AD78 	 .string "J\313\255x\304\206E\032Lp0p\b"
  15      C486 451A 
  15      4C70 3070 
  15      0800 
  16 0046 9570 1CB0 	 .string "\225p\034\260CU\301"
  16      4355 C100 
  17 004e 00        	 .string ""
  18 004f 1E03 0B7F 	 .ascii "\036\003\013\177"
  19               	 .text
  20               	 .section .gnu.lto_.pureconst.741e2decdff82cc9,"",@progbits
  21 0000 789C 6362 	 .string "x\234cb`b\340d\200"
  21      6062 E064 
  21      8000 
  22 000a 1606 2956 	 .string "\026\006)V)v)\016)"
  22      2976 290E 
  22      2900 
  23 0014 030C 00   	 .string "\003\f"
  24 0017 8E        	 .ascii "\216"
  25               	 .text
  26               	 .section .gnu.lto_USB_Init_Device.741e2decdff82cc9,"",@progbits
  27 0000 789C AD55 	 .string "x\234\255U]H\024Q\024>gf\307Y\377 \374\255\247\302\267^\334\240\027\301\207R3\020\252\207L\r\n\302\234\021\177\266\335ev\r\254\207\235UQ\311\220E\204$\005\265\bC\302\244\210\314(\245Ul\333\266\260\327@\266\r\212\336\002\251@\312\355\336;\273\263\277\354\256\324\300\234{\347\316\371\276\373}\367\236\271\303\001\007\211\327\001r\257\211"
  27      5D48 1451 
  27      143E 6766 
  27      C759 FF20 
  27      FCAD A7C2 
  28 006e 8711 00   	 .string "\207\021"
  29 0071 7940 CEFD 	 .ascii "y@\316\375\016\300e\344\020i\007\020"
  29      0EC0 65E4 
  29      1069 0710 
  30 007d 9C1C 3A2F 	 .string "\234\034:/\"\313}\310\255\006B\241\205]\337\314\016\362\373\013\300\214PHC\021\r\3054\224\320PJC\031\r\3454\220K\200\001Uu\037\002hg\217-$R\366\363\310\321\226\367\303\253\245\211\340\246A\302Y\024`\022n\273T\327>3\342u\330Q\207U\322\343l\fw\001I\027\"=6\344\207\276\245\373A\214A\322|^G\032l,\217\346\033t$\037A\016\177ND\n:2\307\306\346\242\3719:R\320\221_\322\"\371\324H/p\032\252\002fU\367\330\352\037\337\250A]$\250P\310iF\221\203\243H\227\210\346\033\215\254\311\305\370\355\242c\242F\325\027\230\330(JOW\375\257tB\224.\217\203\343Q\272}\032\035\227L\227g\314V]}V\352P\243[\234\274\373\025\303uD\t\3251\302\264\212nu7\024\242[\312\301\020f\342\213\024\342\352\310\017\217(\341\"V\200\204\013,>`q\236D"
  30      22CB 7DC8 
  30      AD06 42A1 
GAS LISTING  			page 2


  30      855D DFCC 
  30      0EF2 FB0B 
  31 017e 4D75 BB56 	 .ascii "Mu\273V`\022>&\203z\325\020%\304\237\346(\360t\360\3556~P\325"
  31      6012 3E26 
  31      837A D510 
  31      25C4 9FE6 
  31      28F0 74F0 
  32 0197 9B6A 5F20 	 .ascii "\233j_ \344<\310\326h\024\367\264H^\217\250\321%\373\031\317"
  32      E43C C8D6 
  32      6814 F7B4 
  32      485E 8FA8 
  32      D125 FB19 
  33 01ac E827 56D5 	 .ascii "\350'V\325\314\033^'\272\021C\224\317\301TV\222\362\215\272="
  33      CC1B 5E27 
  33      BA11 4394 
  33      CFC1 5456 
  33      92F2 8DBA 
  34 01c1 0997 C39E 	 .ascii "\t\227\303\236\343\006\227b\027\342=\f\006\346\347\310G\360\210"
  34      E306 9762 
  34      17E2 3D0C 
  34      06E6 E7C8 
  34      47F0 88
  35 01d4 95B6 5EFC 	 .ascii "\225\266^\374\005\355Hj\374\211V\357\341l\332\204\237\310\td"
  35      05ED 486A 
  35      FC89 56EF 
  35      E16C DA84 
  35      9FC8 0964 
  36 01e8 C6C2 8475 	 .ascii "\306\302\204u\\_\371\206\003j@\245\232\235\310jc.+\363\"\225"
  36      5C5F F986 
  36      036A 40A5 
  36      9A9D C86A 
  36      632E 2BF3 
  37 01fe 424E 8FE5 	 .ascii "BN\217\345\365\271[\276\rQ?f\302\333\354\373\271\315K\370\"n"
  37      F5B9 5BBE 
  37      0D51 3F66 
  37      C2DB ECFB 
  37      B9CD 4BF8 
  38 0214 5399 F82E 	 .ascii "S\231\370.,\240\337\3558;e\330\251\362\tcN\027\312\331\377\334"
  38      2CA0 DFED 
  38      383B 65D8 
  38      A9F2 0963 
  38      4E17 CAD9 
  39 022a C338 255C 	 .ascii "\3038%\\!\270.,$\030v\352\354\2426g\203\366&\035OWf\247\022\276"
  39      21B8 2E2C 
  39      2418 76EA 
  39      ECA2 3667 
  39      83F6 261D 
  40 0244 24C9 7B73 	 .ascii "$\311{s\372\321\223\344t\344W\277 \241'\316\251A\223P\224\240"
  40      FAD1 93E4 
  40      74E4 57BF 
  40      20A1 27CE 
  40      A941 9350 
  41 025a 3098 E4F4 	 .ascii "0\230\344\364\231\207qJ\270\306\234\026\023\f\333\252\250\321"
  41      9987 714A 
  41      B8C6 9C16 
  41      130C DBAA 
  41      A8D1 
GAS LISTING  			page 3


  42 026c B564 A3C1 	 .ascii "\265d\243\301x\243\305\377\315\250!jt+\331\250\217\031}\235\312"
  42      78A3 C5FF 
  42      CDA8 216A 
  42      742B D9A8 
  42      8F19 7D9D 
  43 0281 6849 5646 	 .ascii "hIVF\267\250Q/3ZJ0\314\250Q7\352\315h\2644\242nzj(I\235\3677"
  43      B7A8 512F 
  43      335A 4A30 
  43      CCA8 5137 
  43      EACD 68B4 
  44 029f 1F95 2568 	 .ascii "\037\225%h\200\262\004\276@\212J\2737=ET\371\231\252r\002I,4"
  44      80B2 04BE 
  44      408A 4ABB 
  44      373D 4554 
  44      F999 AA72 
  45 02b7 7FB2 AC40 	 .ascii "\177\262\254@\274\254r\200Mp}\277\023\n\377D#W\013\371\216\310"
  45      BCAC 7280 
  45      4D70 7DBF 
  45      130A FF44 
  45      2357 0BF9 
  46 02cd 2F96 A61D 	 .ascii "/\226\246\0359\325t\262\306tB\351\274*+vSSc\255\251\316\252\310"
  46      39D5 74B2 
  46      C674 42E9 
  46      BC2A 2B76 
  46      5353 63AD 
  47 02e5 A69A E6B3 	 .ascii "\246\232\346\263U\364\251\316jq(V\263YV.\321\241\3126\020k$I"
  47      55F4 A9CE 
  47      6A71 2856 
  47      B359 562E 
  47      D1A1 CA36 
  48 02fd 91ED 76C3 	 .ascii "\221\355v\303\271^\233lh\354\274&\013\265\255\226n{u\032\242"
  48      B95E 9B6C 
  48      68EC BC26 
  48      0BB5 AD96 
  48      6E7B 751A 
  49 0312 CACA F8B6 	 .ascii "\312\312\370\266\336\"\331\254\235\026\207\306\331\0019gz\256"
  49      DE22 D9AC 
  49      9D16 87C6 
  49      D901 3967 
  49      7AAE 
  50 0324 5C96 15A1 	 .ascii "\\\226\025\241\266\327!\333\305\323\255\366\356\346Vs^]\207\334"
  50      B6D7 21DB 
  50      C5D3 ADF6 
  50      EEE6 5673 
  50      5E5D 87DC 
  51 0338 D6CD 8672 	 .ascii "\326\315\206r\033,\016YQzl\216c{\230\205\274\325q\221\231\252"
  51      1B2C 0E59 
  51      517A 6C8E 
  51      637B 9885 
  51      BCD5 7191 
  52 034e B2C0 A7B0 	 .ascii "\262\300\247\260\335\001\177\001\200F3\354"
  52      DD01 7F01 
  52      8046 33EC 
  53               	 .text
  54               	 .section .gnu.lto_USB_Disable.741e2decdff82cc9,"",@progbits
  55 0000 789C 6362 	 .ascii "x\234cb`b@\007\222@\314\311\314\300\220\r\244\031\231\031\030"
  55      6062 4007 
GAS LISTING  			page 4


  55      9240 CCC9 
  55      CCC0 900D 
  55      A419 9919 
  56 0015 9926 9C63 	 .ascii "\231&\234c`h\344`bd\0041\030\030\031\352\231\030\353c\030\301"
  56      6068 E460 
  56      6264 0431 
  56      1818 19EA 
  56      9918 EB63 
  57 002b 6AD7 331D 	 .ascii "j\3273\035x\360\377\377\272M\307\027\374gd\024\346d\310ad\340"
  57      78F0 FFFF 
  57      BA4D C717 
  57      FC67 6414 
  57      E664 C861 
  58 0041 0211 DC20 	 .ascii "\002\021\334 \202\007D\360\202\b>\020\001\004\254\f-\r\r\023"
  58      8207 44F0 
  58      8208 3E10 
  58      0104 AC0C 
  58      2D0D 0D13 
  59 0055 14        	 .ascii "\024"
  60 0056 1818 D2C0 	 .string "\030\030\322\300\334p \t23\202\221\tD3\237gh~p\3530\177\n\343BFV\240t5\303\257\206\216\006\201\034F\3064F\210u9@\205\f U\267\233\261\252bB\250:\313ph\327\321\365\237\327[\300\355\2040\016\234|\0074\013\2429\r\350= \310b\344\234\3150\253qJ#\320\020\346h\306\034F\226\007\214\f`\032\032\"g\031\232w\036^\373Y?\205q\tPW\026#\027P\007H\236\201\021,y\310\023\"\201\317\020\240&\210\233Z\227\232\242\273\250\373}#;\302I,\020\345\334h\246\335\300p\322\356\303\353O\277\262Ha\\\001v\023\017P\213$\303\214\206\025\r\037\354s\300\376\2028l\005\246\303n\240:\214\007\254t\307\212WL\350\016;\375\345#3\302a\240\300F7\312\023\311$\020\213\031\3426P\320_\276\213\021\364\335\337\220\315c\203X\317\213fd2f\320\203\314Ja\334"
  60      DC70 2009 
  60      3233 8291 
  60      0944 339F 
  60      6768 7E70 
  61 0157 F627 1F50 	 .string "\366'\037P\007Z\330o\300\364b2\212\017\371 >\274\363\243_\007b9Hu\003H5+<\365\260\0250\302<\301\006\367\016\330\313\027\031\032\037\374W\206%7\b\b\007&H`\212\005\2457\003\237P7G}\227\242\314\262\324\242b\375\320`'}\347\374\242T}\307\260 \013\020\3179?\257\244(?''\265(\036$\244\227\314`\201G\203\236\036N\215\031\f"
  61      075A D86F 
  61      C0F4 6232 
  61      8A0F F920 
  61      3EBC F3A3 
  62 01cc 447B E2BE 	 .ascii "D{\342\276"
  63               	 .text
  64               	 .section .gnu.lto_USB_ResetInterface.741e2decdff82cc9,"",@progbits
  65 0000 789C 6362 	 .string "x\234cb`b@\0076@\274\203\231\201!\033H3\262102M8\307\300\320\310\301\304\310\fa03\261\366\034g`h\340biagh\340a\205\210;\26202\202h\006F\206z&fV\026\306\372\030F\260q\353\231\016<\370\377\177\335\224S\013~32\211s1\34402p\203\b\036\020\301\013\"\370@\004?\210\020"
  65      6062 4007 
  65      3640 BC83 
  65      9981 211B 
  65      4833 B231 
  66 006a 1182 2002 	 .string "\021\202 \002\bX\031Z\032\032&(00\244\201\271\341@\022ha\004#\023\220b>\317\320\374\240\377(\177\n\343BFV\240d5\303\257\206\216\006\201\034F\3064F\210\2659@u\f U3Z\261\252bB\250:\313ph\327\321\365\277_Y\300m\2040\016t\237}\004\324\006\321\235\306\310\f\322\220\305\3105\233aV\343\224F\240)\314\321\2149\214,7\030\031\30044\364\31624\357>\f2,\205q\tP[\026#7P\213$\303\214\206\025\r\037\354s\300\206"
  66      0858 195A 
  66      1A1A 2628 
  66      3030 A481 
  66      B9E1 4012 
  67 0101 EDF3 84C8 	 .string "\355\363\204\310\3423\n\250\023\342\264\326\207\2460\263x\b\332\275\223\031\246\226\027\250\034$\311\320\300H\202\235\274P;\267\232\240\007\306\351+\213\220\002\203\005\242\234\217\230\300x\375\002\030\030\253\301\216\342\007j\001)`\276\217p\324j\202\216\342\007+\335q\342\031\023\206\243\356=bF8\n\024\307\350Fy\"\231\004\266\231\005b\361\216?\267\316\036\005\006\326zL\3331\264\260A\275\023\001\214>`\032g\006\207\320\376\265r\030\351\345\376!v\204k\330 \216\027\300c:<\271\334\212Ja\334\f\016!A\240\016p\264\201\002\350\004\303\221\347\017\217\256\277\310\b1\023(\013\226B\006\341@q`vd\214"
  67      E233 0AA8 
  67      13E2 B4D6 
  67      87A6 30B3 
  67      7808 DABD 
  68 01c0 1A09 CD17 	 .string "\032\t\315\027g\216raK\361\354\210\024\177\221\241\361\301oU\230\"\230A\214@\003@\331\302\300'\324\315Q\337\245(\263,\265\250X?4\330I\3379\277(U\3371,\310\002\304s\316\317+)\312\317\311I-\212\007\t\351%3X\340\321\240\247\207Sc\006\003"
  68      678E 7261 
  68      4BF1 EC88 
  68      147F 91A1 
  68      F1C1 6F55 
  69 0215 5BCE 0E6F 	 .ascii "[\316\016o"
  70               	 .text
  71               	 .section .gnu.lto_USB_Init.741e2decdff82cc9,"",@progbits
  72 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\304\310\300\220\r\244\031\231\031\030\231&\234c`h\344`bd\0041\030\030\031\352\231\030\353c\030\301j\3273\035x\360\377\377\272_\255\237d8X\031r\030\031\330@\004\020\2602\26444LP``H\003s\303\201$Hw\004#\023\210f>\313ph\327\321\365\207\357X\300\325A\030\007\272\317>df`Ha\\\310\310\n\324\n\326\233\305\310:\233aV\343\224F\201\034F\306h\306\034F\246d\0060\005u\357Y\206\346\335\207Af\2450.\002\352\312bd\003\352"
  72      6062 4007 
GAS LISTING  			page 5


  72      9240 1CC4 
  72      C8C0 900D 
  72      A419 9919 
  73 00a1 2960 FCC7 	 .string ")`\374\307\b\226>\344\t\221\301c\nP\023X\345\216;k\372t \266\203T7\200T3W3\374j\350h"
  73      0896 3EE4 
  73      0991 C163 
  73      0A50 1358 
  73      E58E 3B6B 
  74 00c6 B258 0AC0 	 .string "\262X\n\300\016\002ica\200\261\230Ab\347\031\232\027\234e\206hd`\200k`M\203\232\237\0032\377\"C\343\203s\3120E\020\020\016\364#0@@\252\f|B\335\034\365]\2122\313R\213\212\365C\203\235\364\235\363\213R\365\035\303\202,@<\347\374\274\222\242\374\234\234\324\242x\220\220^2\203\005\036\rzz85f0"
  74      0E02 6963 
  74      6180 B198 
  74      4162 E719 
  74      9A17 9C65 
  75 0130 00        	 .string ""
  76 0131 F06E 77B7 	 .ascii "\360nw\267"
  77               	 .text
  78               	 .section .gnu.lto_.symbol_nodes.741e2decdff82cc9,"",@progbits
  79 0000 789C 458A 	 .string "x\234E\212\271\r\302@\024\005\347\357\372\263\034EP\033\225|\313\004XD4"
  79      B90D C240 
  79      1405 E7EF 
  79      FAB3 1C45 
  79      501B 957C 
  80 001a 09A5 3847 	 .ascii "\t\2458G\334g\00295X\354\212\005\277d4\243\347p4\344\271\003"
  80      DC67 0239 
  80      3558 EC8A 
  80      05BF 6434 
  80      A3E7 7034 
  81 0031 068B 0D98 	 .ascii "\006\213\r\230-\353\211^b3\364\212$\334\3425\342\216\217p;L\362"
  81      2DEB 895E 
  81      6233 F48A 
  81      24DC E235 
  81      E28E 8F70 
  82 0048 7555 8B1E 	 .ascii "uU\213\036)R\335c\256\253n\213\371N\345\201\025_-K\2213\246\235"
  82      2952 DD63 
  82      AEAB 6E8B 
  82      F94E E581 
  82      155F 2D4B 
  83 0060 9DB0 DEDF 	 .ascii "\235\260\336\337<\003\232\331{\354u\304\364\331\212\327!\353"
  83      3C03 9AD9 
  83      7BEC 75C4 
  83      F4D9 8AD7 
  83      21EB 
  84 0072 C490 3DFC 	 .ascii "\304\220=\374\034\252y\374\365\003\325\253\025>r\3759\022"
  84      1CAA 79FC 
  84      F503 D5AB 
  84      153E 72FD 
  84      3912 
  85               	 .text
  86               	 .section .gnu.lto_.refs.741e2decdff82cc9,"",@progbits
  87 0000 789C 6362 	 .string "x\234cb`b\020f\200"
  87      6062 1066 
  87      8000 
  88 000a 1606 4646 	 .string "\026\006FFF&FfF\026FVF6F\016F6\006"
  88      4626 4666 
  88      4616 4656 
  88      4636 460E 
  88      4636 0600 
GAS LISTING  			page 6


  89 001e 0424 00   	 .string "\004$"
  90 0021 47        	 .ascii "G"
  91               	 .text
  92               	 .section .gnu.lto_.decls.741e2decdff82cc9,"",@progbits
  93 0000 789C A557 	 .string "x\234\245Wkl\024E\034\237\331\336\365\t\345\021 \206 U#~\300\244\207_\fj\002\264\005\t\261A\322R\375\300\207s\351N\355\205c\257\335\333+)\211aZ,T\"\320\226W}@\256\274\244Z\303[\023\344\261\274\005JK\245\265\212FN>@LLiR\"\305\204\2563\273\263\327\335\275\275\353qN\362O\347v\346\367\373\375_;\263\345"
  93      6B6C 1445 
  93      1C9F D9DE 
  93      F509 E511 
  93      2086 2055 
  94 0070 077E 8100 	 .string "\007~\201"
  95 0074 A864 CC9B 	 .string "\250d\314\233\b\3007i"
  95      08C0 3769 
  95      00
  96 007d B801 00   	 .string "\270\001"
  97 0080 F388 71C4 	 .ascii "\363\210q\304\332\210\221emd\020;@\254\235X\007\261\303\304\216"
  97      DA88 9165 
  97      6D64 103B 
  97      40AC 9D58 
  97      07B1 C3C4 
  98 0095 11FB 81D8 	 .ascii "\021\373\201\330\031\240\343\316\021\273@\354\022\261+\304~\004"
  98      19A0 E3CE 
  98      11BB 40EC 
  98      12B1 2BC4 
  98      7E04 
  99 00a7 D641 F1B9 	 .ascii "\326A\361\271\214S!v\203it\022;A\354&\261.\266g\034\261nb=\304"
  99      8C53 2176 
  99      8369 7412 
  99      3B41 EC26 
  99      B12E B667 
 100 00c1 6E13 3BCE 	 .ascii "n\023;\3168\322\031O/\323\277Ol\200\330\0201\227\203\017\346"
 100      38D2 194F 
 100      2FD3 BF4F 
 100      6C80 D810 
 100      3197 830F 
 101 00d6 D1CE E2A0 	 .ascii "\321\316\342\240\372\217\211\0354\371q\215\330\260)\326v\026"
 101      FA8F 891D 
 101      34F9 718D 
 101      D8B0 29D6 
 101      7616 
 102 00e8 178D EF09 	 .ascii "\027\215\357\t\261\247\024G\200n\250\343\355\261u\260\0348q\323"
 102      B1A7 1447 
 102      806E A8E3 
 102      EDB1 75B0 
 102      1C38 71D3 
 103 00fc 91C9 F618 	 .ascii "\221\311\366\030\234Yd\343xb\223\210M\205zL\366q\330\344\257"
 103      9C59 64E3 
 103      7862 9388 
 103      4D85 7A4C 
 103      F671 D8E4 
 104 0111 DD4F 4383 	 .ascii "\335OC\203\2164\266w\006\3245\234\374\313\002\215\030\327c\334"
 104      8E34 B677 
 104      06D4 359C 
 104      FCCB 028D 
 104      18D7 63DC 
 105 0125 8CC7 B592 	 .ascii "\214\307\265\222\374\256\200\002\314\315\"^\321\311\270,\r2\013"
 105      FCAE 8002 
 105      CCCD 225E 
GAS LISTING  			page 7


 105      D1C9 B82C 
 105      0D32 0B
 106 0138 ECC7 B829 	 .ascii "\354\307\270)ryd\220\303\330%\3006\230E\332\340E\bf\203vLV\b"
 106      7279 6490 
 106      C3D8 25C0 
 106      3698 45DA 
 106      E045 0866 
 107 0151 38C7 C14B 	 .ascii "8\307\301K\001\222}\366\337\002\334\017g\003]G[f\023\225\b\345"
 107      0192 7DF6 
 107      DF02 DC0F 
 107      6703 5D47 
 107      5B66 1395 
 108 0167 813D 5819 	 .ascii "\201=X\031\214\364<\331\365|\003\216`EU\347\203i`\007\246\243"
 108      8CF4 3CD9 
 108      F57C 038E 
 108      6045 55E7 
 108      8369 6007 
 109 017d 0E2F A816 	 .ascii "\016/\250\026\340\274\251\216\016R\356\203p\032\233\225\245\351"
 109      E0BC A98E 
 109      0E52 EE83 
 109      701A 9B95 
 109      A5E9 
 110 018f 7A1C E061 	 .ascii "z\034\340aTO\037\257\200\003\032\333v\005jdt\373\001\230g\365"
 110      544F 1FAF 
 110      8003 1ADB 
 110      7605 6A64 
 110      74FB 0198 
 111 01a5 F22B C899 	 .ascii "\362+\310\231\037P\257\302\021\345\350\306W\361z<\242\252P\327"
 111      1F50 AFC2 
 111      11E5 E8C6 
 111      57F1 7A3C 
 111      A2AA 50D7 
 112 01b9 E240 7532 	 .ascii "\342@u2\354\355v\366\257c\331#\203J\313u\256\025\017\252\352"
 112      ECED 76F6 
 112      AF63 D923 
 112      834A CB75 
 112      AE15 0FAA 
 113 01ce 0483 FCA3 	 .ascii "\004\203\374\243d\310;\354\344\337:\272~\232\244\020\326aU]g"
 113      64C8 3BEC 
 113      E4DF 3ABA 
 113      7E9A A410 
 113      D661 555D 
 114 01e3 B037 C164 	 .ascii "\2607\301d\350\017\333\351\2178\370\336\024\031\272\376\260\031"
 114      E80F DBE9 
 114      8F38 F8DE 
 114      1419 BAFE 
 114      B019 
 115 01f5 F6E0 A64F 	 .ascii "\366\340\246O\361\260\252fX*\226\t6j\315U\247,\250N\320[\264"
 115      F1B0 AA66 
 115      582A 9609 
 115      366A CD55 
 115      A72C A84E 
 116 020c 85C8 A313 	 .ascii "\205\310\243\0230\223\370\326\007!p\034\372\006:V@cn\314\240"
 116      3093 F8D6 
 116      0721 701C 
 116      FA06 3A56 
 116      4063 6ECC 
GAS LISTING  			page 8


 117 0221 333B 051D 	 .ascii "3;\005\035g\215\221\246\035]@o_\313\017\373\"0w\021\240\215\364"
 117      678D 91A6 
 117      1D5D 406F 
 117      5FCB 0FFB 
 117      2230 7711 
 118 0238 5B4C BEF4 	 .ascii "[L\276\364M\247\034\023\362\250{\300\335\200\377\324\033\330"
 118      4DA7 1C13 
 118      F2A8 7BC0 
 118      DD80 FFD4 
 118      1BD8 
 119 024a 48F9 29CE 	 .ascii "H\371)\316\231\342\264\023\205r\272\277~\201\265!\372\342\340"
 119      99E2 B413 
 119      8572 BABF 
 119      7E81 B521 
 119      FAE2 E0
 120 025d CF5A F12F 	 .ascii "\317Z\361/\2016\274\177[\244oW\357=x\221\324$\214#\352\272<\355"
 120      8136 BC7F 
 120      5BA4 6F57 
 120      EF3D 7891 
 120      D424 8C23 
 121 0275 255F 9FF0 	 .ascii "%_\237\360%\027\340^8k\354w\224\003\373\322\fG\342e"
 121      2517 E05E 
 121      386B EC77 
 121      9403 FBD2 
 121      0C47 E265 
 122 0289 FCFC A84B 	 .string "\374\374\250K\324\235pK\244\377\213\273G\341\205\250;\306\02120&\325E;\225r\346\352v\227r\004\263v\326[f\263k,\236\3131<\203\033I\206\025\255F\006M\307\2304W\25544\321\375\275\315\246Dk\r\277>Q\303\013\360\244\226\347\204\275\314\201\3161}\271>\352K\016\330D_\263p\035\236\322\232+@\205$\227\241&\032(\216\241n\300\2348\250\266\004\250\316\270(\352p<\324\315QT\364\226\t\377\337\006dL\341\272\360\024\023\223E\233\335W\r\252v_E\0018.@\200\2674i\267U\332\2355:Q\3254Z\226?\\\326\267\220m2\275\217cq\330\362GO\247x\371\273=\232?v5\016m\352\034\202?a\254\037\265\215\205\326\333\321T\213\230n\351{\246S\260'\251S\361\201%\031\332f\016\324\273\331\361\3752\330\207\233Zp\363\006\3569\001vi\357{\223\233\002z\311\265\342\334"
 122      D49D 704B 
 122      A4FF 8BBB 
 122      47E1 85A8 
 122      3BC6 1132 
 123 038a 7417 C329 	 .ascii "t\027\303)\307\266\214\342Z\237\001w\262\353\022l\300\037\b\260"
 123      C7B6 8CE2 
 123      5A9F 0177 
 123      B2EB 126C 
 123      C01F 08B0 
 124 039e 5B83 EEB6 	 .ascii "[\203\356\266Cm\205\3576A\277\337r\t~L\241\272\352\336dT\331"
 124      436D 85EF 
 124      3641 BFDF 
 124      7209 7E4C 
 124      A1BA EADE 
 125 03b5 CD59 AF1C 	 .ascii "\315Y\257\034\355\332\345j\230c\274\313\361q\254\036wb\217}R"
 125      EDDA E56A 
 125      9863 BCCB 
 125      F171 AC1E 
 125      7762 8F7D 
 126 03ca DF47 5B7B 	 .ascii "\337G[{\323\330\247\3179\f\233\\I\177\375<p*\257\255\\\207\334"
 126      D3D8 A7CF 
 126      390C 9B5C 
 126      497F FD3C 
 126      702A AFAD 
 127 03e1 31E5 12E0 	 .ascii "1\345\022\340\357\206\037\254\\\375\315\344*\206F\n\276\323 "
 127      EF86 1FAC 
 127      5CFD CDE4 
 127      2A86 460A 
 127      BED3 20
 128 03f4 F793 4A01 	 .ascii "\367\223J\001\306w\361!\r\313>\037\356\333?\037\376r\212Y\031"
 128      C677 F121 
GAS LISTING  			page 9


 128      0DCB 3E1F 
 128      EEDB 3F1F 
 128      FE72 8A59 
 129 0409 BCA2 7FFA 	 .ascii "\274\242\177\372l\r7rz \034P\222q\365W\223\253\002\374\233\254"
 129      6C0D 3772 
 129      7A20 1C50 
 129      9271 F557 
 129      93AB 02FC 
 130 041f 0A70 2035 	 .ascii "\np 5W\007\354\256>t,\317\331\201[o\230\313c\334\315\215\351"
 130      5707 ECAE 
 130      3E74 2CCF 
 130      D981 5B6F 
 130      98CB 63DC 
 131 0436 89DC 75FE 	 .ascii "\211\334u\376\270\032\262K>\262J\332\316\211\203\t\316\211\307"
 131      B81A B24B 
 131      3EB2 4ADA 
 131      CE89 8309 
 131      CE89 C7
 132 0449 714F E76B 	 .ascii "qO\347k\tN\347a\373\351\242\f\3370WB\017m[\n\241=\261\207\366"
 132      094E E761 
 132      FBE9 A20C 
 132      DF30 5742 
 132      0F6D 5B0A 
 133 0462 AF63 E1CF 	 .ascii "\257c\341\317\336\211\225\333\223\202\334S\273\334\210\263\334"
 133      DE89 95DB 
 133      9382 DC53 
 133      BBDC 88B3 
 133      DC
 134 0473 CFB1 7227 	 .ascii "\317\261r'S\220\253\343lr\365\234\223\334\347\375\261r\347S\220"
 134      5390 ABE3 
 134      6C72 F59C 
 134      93DC E7FD 
 134      B172 E753 
 135 0488 6BB0 CB6D 	 .ascii "k\260\313mp\224\273\343\220\314\233)\310}b\227\333\344(\267\323"
 135      7094 BBE3 
 135      90CC 9B29 
 135      C87D 6297 
 135      DBE4 28B7 
 136 049d 41EE 5E0A 	 .ascii "A\356^\nr\233\355r[\034\345\2168\324n(\005\271f\273\\\213s2M"
 136      729B ED72 
 136      5B1C E58E 
 136      38D4 6E28 
 136      05B9 66BB 
 137 04b6 72C9 5CB1 	 .ascii "r\311\\\261\354\352\033I7\035\360;\271\330\377G\2333\222p\271"
 137      ECEA 1B49 
 137      371D F03B 
 137      B9D8 FF47 
 137      9B33 9270 
 138 04cb 1E37 6A2E 	 .ascii "\0367j.\033\027\311\016.\341E\362\231c\004\3778$\254-\031u[\302"
 138      1B17 C90E 
 138      2EE1 45F2 
 138      9963 04FF 
 138      3824 AC2D 
 139 04e3 BEB4 276C 	 .ascii "\276\264'l\267U\016\314\364\204\202\222\307\357[\351\341k$\217"
 139      B755 0ECC 
 139      F484 8292 
 139      C7EF 5BE9 
GAS LISTING  			page 10


 139      E16B 248F 
 140 04f7 4F2C F787 	 .ascii "O,\367\207\004\344\t\312\202O\224\363+AF\210\374\235\353\225"
 140      04E4 09CA 
 140      824F 94F3 
 140      2B41 4688 
 140      FC9D EB95 
 141 050b D317 2F2D 	 .ascii "\323\027/-{\241\b\314).{\273\300\263P\362\325 )\350)+-\364\024"
 141      7BA1 08CC 
 141      292E 7BBB 
 141      C0B3 50F2 
 141      D520 29E8 
 142 0524 0524 E429 	 .ascii "\005$\344)x\257d.\375U\024\020e)\340\367#\311K\037\345\227\203"
 142      78AF 642E 
 142      FD55 1410 
 142      6529 E0F7 
 142      23C9 4B1F 
 143 053b 09E4 A977 	 .ascii "\t\344\251w\211\350\223\275\013Q\215\257\034\345\320\337\013"
 143      89E8 93BD 
 143      0B51 8DAF 
 143      1CE5 D0DF 
 143      0B
 144 054c 7D41 7EA5 	 .ascii "}A~\245\037M\246\363\022\024D\362\022QFR\005_\2162\215\355o%"
 144      1F4D A6F3 
 144      1214 44F2 
 144      1251 4652 
 144      055F 8E32 
 145 0564 10CA CFB7 	 .ascii "\020\312\317\267\376]$\nU\001\342\246\256Y\t\334\336\302@\300"
 145      FE5D 240A 
 145      5501 E2A6 
 145      AE59 09DC 
 145      DEC2 40C0 
 146 0578 3F33 FA98 	 .ascii "?3\372\230xU\341\3730$\241\350\223eR\315\374g\020 \253\232\207"
 146      7855 E1FB 
 146      3024 A1E8 
 146      9365 52CD 
 146      FC67 1020 
 147 058f 52A8 2A2A 	 .ascii "R\250**2]\363t\351ro\221\037\361R\201\337\037\335\021\234a,\261"
 147      325D F374 
 147      E972 6F91 
 147      1FF1 5281 
 147      DF1F DD11 
 148 05a7 382D 8B89 	 .ascii "8-\213\2112h\322%\013\313\371\340*\"\244ePO^\251\314\313\350"
 148      3268 D225 
 148      0BCB F9E0 
 148      2A22 A465 
 148      504F 5EA9 
 149 05be CDE4 08A2 	 .ascii "\315\344\b\242\bQ\340%\241\004U\023\252\231\243T\321\244\360"
 149      0851 E025 
 149      A104 5513 
 149      AA99 A354 
 149      D1A4 F0
 150 05d1 B22F 202E 	 .ascii "\262/ .\r\255^\211$\363r\tZ\035\220\321\373\374*\024\252Z$\322"
 150      0DAD 5E89 
 150      24F3 7209 
 150      5A1D 90D1 
 150      FBFC 2A14 
 151 05e9 2884 3C33 	 .ascii "(\204<3:$IH\224\375\265\245\310_\261,\260\006IH\230\244\205\035"
GAS LISTING  			page 11


 151      3A24 4948 
 151      94FD B5A5 
 151      C85F B12C 
 151      B006 4948 
 152 0601 A4D5 F3F1 	 .ascii "\244\325\363\361~\337Z$d\322\346y\355u\257<=~-\306\363\3765|"
 152      7EDF 5A24 
 152      64D2 E679 
 152      ED75 AF3C 
 152      3D7E 2DC6 
 153 0619 6DD0 EB13 	 .ascii "m\320\353\023\375>\021e\024\b\202\204\202A\327\362\332*\344*"
 153      FD3E 1165 
 153      1408 8284 
 153      8241 D7F2 
 153      DA2A E42A 
 154 062d 2524 EE42 	 .ascii "%$\356B^\\\025\034o\311vV4\235\271\306s\335\307\271I\344\306"
 154      5E5C 151C 
 154      6FC9 7656 
 154      349D B9C6 
 154      73DD C7B9 
 155 0644 A14D 2B41 	 .ascii "\241M+A6\345)\220e\276\2742[\017\223N\247\321\251i3\253\247\326"
 155      36E5 2990 
 155      65BE BC32 
 155      5B0F 934E 
 155      A7D1 A969 
 156 065c C3CB 8A8B 	 .ascii "\303\313\212\213\275\357VTh\363\222E\213\351|\212m\273\326\332"
 156      BDEF 5654 
 156      68F3 9245 
 156      8BE9 7C8A 
 156      6DBB D6DA 
 157 0670 13B5 87C5 	 .ascii "\023\265\207\305\357x\313\304\n\t\241\265(;\212\026'\257\341"
 157      EF78 CBC4 
 157      0A09 A1B5 
 157      283B 8A16 
 157      27AF E1
 158 0683 25D1 1B12 	 .ascii "%\321\033\022CA$xI\330!\277<\301X]\022,A\274P\233\035\345\027"
 158      4341 2478 
 158      49D8 21BF 
 158      3CC1 585D 
 158      122C 41BC 
 159 069c FF03 F260 	 .ascii "\377\003\362`\250\021"
 159      A811 
 160               	 .text
 161               	 .section .gnu.lto_.symtab.741e2decdff82cc9,"",@progbits
 162 0000 5553 425F 	 .string "USB_Disable"
 162      4469 7361 
 162      626C 6500 
 163 000c 00        	 .string ""
 164 000d 00        	 .string ""
 165 000e 00        	 .string ""
 166 000f 00        	 .string ""
 167 0010 00        	 .string ""
 168 0011 00        	 .string ""
 169 0012 00        	 .string ""
 170 0013 00        	 .string ""
 171 0014 00        	 .string ""
 172 0015 00        	 .string ""
 173 0016 00        	 .string ""
GAS LISTING  			page 12


 174 0017 A900      	 .string "\251"
 175 0019 00        	 .string ""
 176 001a 00        	 .string ""
 177 001b 5553 425F 	 .string "USB_ResetInterface"
 177      5265 7365 
 177      7449 6E74 
 177      6572 6661 
 177      6365 00
 178 002e 00        	 .string ""
 179 002f 00        	 .string ""
 180 0030 00        	 .string ""
 181 0031 00        	 .string ""
 182 0032 00        	 .string ""
 183 0033 00        	 .string ""
 184 0034 00        	 .string ""
 185 0035 00        	 .string ""
 186 0036 00        	 .string ""
 187 0037 00        	 .string ""
 188 0038 00        	 .string ""
 189 0039 AC00      	 .string "\254"
 190 003b 00        	 .string ""
 191 003c 00        	 .string ""
 192 003d 5553 425F 	 .string "USB_Init"
 192      496E 6974 
 192      00
 193 0046 00        	 .string ""
 194 0047 00        	 .string ""
 195 0048 00        	 .string ""
 196 0049 00        	 .string ""
 197 004a 00        	 .string ""
 198 004b 00        	 .string ""
 199 004c 00        	 .string ""
 200 004d 00        	 .string ""
 201 004e 00        	 .string ""
 202 004f 00        	 .string ""
 203 0050 00        	 .string ""
 204 0051 AF00      	 .string "\257"
 205 0053 00        	 .string ""
 206 0054 00        	 .string ""
 207 0055 5553 425F 	 .string "USB_DeviceState"
 207      4465 7669 
 207      6365 5374 
 207      6174 6500 
 208 0065 00        	 .string ""
 209 0066 0200      	 .string "\002"
 210 0068 00        	 .string ""
 211 0069 00        	 .string ""
 212 006a 00        	 .string ""
 213 006b 00        	 .string ""
 214 006c 00        	 .string ""
 215 006d 00        	 .string ""
 216 006e 00        	 .string ""
 217 006f 00        	 .string ""
 218 0070 BF00      	 .string "\277"
 219 0072 00        	 .string ""
 220 0073 00        	 .string ""
 221 0074 5553 425F 	 .string "USB_Device_ConfigurationNumber"
GAS LISTING  			page 13


 221      4465 7669 
 221      6365 5F43 
 221      6F6E 6669 
 221      6775 7261 
 222 0093 00        	 .string ""
 223 0094 0200      	 .string "\002"
 224 0096 00        	 .string ""
 225 0097 00        	 .string ""
 226 0098 00        	 .string ""
 227 0099 00        	 .string ""
 228 009a 00        	 .string ""
 229 009b 00        	 .string ""
 230 009c 00        	 .string ""
 231 009d 00        	 .string ""
 232 009e C200      	 .string "\302"
 233 00a0 00        	 .string ""
 234 00a1 00        	 .string ""
 235 00a2 5553 425F 	 .string "USB_Device_RemoteWakeupEnabled"
 235      4465 7669 
 235      6365 5F52 
 235      656D 6F74 
 235      6557 616B 
 236 00c1 00        	 .string ""
 237 00c2 0200      	 .string "\002"
 238 00c4 00        	 .string ""
 239 00c5 00        	 .string ""
 240 00c6 00        	 .string ""
 241 00c7 00        	 .string ""
 242 00c8 00        	 .string ""
 243 00c9 00        	 .string ""
 244 00ca 00        	 .string ""
 245 00cb 00        	 .string ""
 246 00cc C400      	 .string "\304"
 247 00ce 00        	 .string ""
 248 00cf 00        	 .string ""
 249 00d0 5553 425F 	 .string "USB_Device_CurrentlySelfPowered"
 249      4465 7669 
 249      6365 5F43 
 249      7572 7265 
 249      6E74 6C79 
 250 00f0 00        	 .string ""
 251 00f1 0200      	 .string "\002"
 252 00f3 00        	 .string ""
 253 00f4 00        	 .string ""
 254 00f5 00        	 .string ""
 255 00f6 00        	 .string ""
 256 00f7 00        	 .string ""
 257 00f8 00        	 .string ""
 258 00f9 00        	 .string ""
 259 00fa 00        	 .string ""
 260 00fb C600      	 .string "\306"
 261 00fd 00        	 .string ""
 262 00fe 00        	 .string ""
 263 00ff 5553 425F 	 .string "USB_IsInitialized"
 263      4973 496E 
 263      6974 6961 
 263      6C69 7A65 
GAS LISTING  			page 14


 263      6400 
 264 0111 00        	 .string ""
 265 0112 0200      	 .string "\002"
 266 0114 00        	 .string ""
 267 0115 00        	 .string ""
 268 0116 00        	 .string ""
 269 0117 00        	 .string ""
 270 0118 00        	 .string ""
 271 0119 00        	 .string ""
 272 011a 00        	 .string ""
 273 011b 00        	 .string ""
 274 011c C800      	 .string "\310"
 275 011e 00        	 .string ""
 276 011f 00        	 .string ""
 277 0120 456E 6470 	 .string "Endpoint_ConfigureEndpoint_Prv"
 277      6F69 6E74 
 277      5F43 6F6E 
 277      6669 6775 
 277      7265 456E 
 278 013f 00        	 .string ""
 279 0140 0200      	 .string "\002"
 280 0142 00        	 .string ""
 281 0143 00        	 .string ""
 282 0144 00        	 .string ""
 283 0145 00        	 .string ""
 284 0146 00        	 .string ""
 285 0147 00        	 .string ""
 286 0148 00        	 .string ""
 287 0149 00        	 .string ""
 288 014a B200      	 .string "\262"
 289 014c 00        	 .string ""
 290 014d 00        	 .string ""
 291 014e 5553 425F 	 .string "USB_INT_ClearAllInterrupts"
 291      494E 545F 
 291      436C 6561 
 291      7241 6C6C 
 291      496E 7465 
 292 0169 00        	 .string ""
 293 016a 0200      	 .string "\002"
 294 016c 00        	 .string ""
 295 016d 00        	 .string ""
 296 016e 00        	 .string ""
 297 016f 00        	 .string ""
 298 0170 00        	 .string ""
 299 0171 00        	 .string ""
 300 0172 00        	 .string ""
 301 0173 00        	 .string ""
 302 0174 BB00      	 .string "\273"
 303 0176 00        	 .string ""
 304 0177 00        	 .string ""
 305 0178 5553 425F 	 .string "USB_INT_DisableAllInterrupts"
 305      494E 545F 
 305      4469 7361 
 305      626C 6541 
 305      6C6C 496E 
 306 0195 00        	 .string ""
 307 0196 0200      	 .string "\002"
GAS LISTING  			page 15


 308 0198 00        	 .string ""
 309 0199 00        	 .string ""
 310 019a 00        	 .string ""
 311 019b 00        	 .string ""
 312 019c 00        	 .string ""
 313 019d 00        	 .string ""
 314 019e 00        	 .string ""
 315 019f 00        	 .string ""
 316 01a0 BD00      	 .string "\275"
 317 01a2 00        	 .string ""
 318 01a3 00        	 .string ""
 319               	 .text
 320               	 .section .gnu.lto_.opts,"",@progbits
 321 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 321      6375 3D61 
 321      746D 6567 
 321      6133 3275 
 321      3227 2027 
 322               	 .text
 323               	 .cfi_sections .debug_frame
 324               	.global USB_Disable
 326               	USB_Disable:
 327               	.LFB81:
 328               	 .file 1 "LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c"
   1:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #include "../../../../Common/Common.h"
  32:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
GAS LISTING  			page 16


  34:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
  35:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #define  __INCLUDE_FROM_USB_CONTROLLER_C
  36:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #include "../USBController.h"
  37:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  38:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #if defined(USB_CAN_BE_BOTH)
  39:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** volatile uint8_t USB_CurrentMode = USB_MODE_None;
  40:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #endif
  41:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  42:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #if !defined(USE_STATIC_OPTIONS)
  43:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** volatile uint8_t USB_Options;
  44:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #endif
  45:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  46:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** void USB_Init(
  47:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #if defined(USB_CAN_BE_BOTH)
  48:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                const uint8_t Mode
  49:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #endif
  50:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  51:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #if (defined(USB_CAN_BE_BOTH) && !defined(USE_STATIC_OPTIONS))
  52:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                ,
  53:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #elif (!defined(USB_CAN_BE_BOTH) && defined(USE_STATIC_OPTIONS))
  54:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                void
  55:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #endif
  56:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  57:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #if !defined(USE_STATIC_OPTIONS)
  58:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                const uint8_t Options
  59:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                #endif
  60:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c ****                )
  61:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** {
  62:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if !defined(USE_STATIC_OPTIONS)
  63:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Options = Options;
  64:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
  65:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  66:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  67:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	/* Workaround for AVR8 bootloaders that fail to turn off the OTG pad before running
  68:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	 * the loaded application. This causes VBUS detection to fail unless we first force
  69:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	 * it off to reset it. */
  70:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_OTGPAD_Off();
  71:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
  72:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  73:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (!(USB_Options & USB_OPT_REG_DISABLED))
  74:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	  USB_REG_On();
  75:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	else
  76:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	  USB_REG_Off();
  77:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  78:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (!(USB_Options & USB_OPT_MANUAL_PLL))
  79:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	{
  80:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#if defined(USB_SERIES_4_AVR)
  81:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		PLLFRQ = (1 << PDIV2);
  82:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#endif
  83:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	}
  84:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  85:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
  86:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (Mode == USB_MODE_UID)
  87:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	{
  88:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		UHWCON |=  (1 << UIDE);
  89:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		USB_INT_Enable(USB_INT_IDTI);
  90:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		USB_CurrentMode = USB_GetUSBModeFromUID();
GAS LISTING  			page 17


  91:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	}
  92:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	else
  93:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	{
  94:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		UHWCON &= ~(1 << UIDE);
  95:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		USB_CurrentMode = Mode;
  96:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	}
  97:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
  98:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
  99:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_IsInitialized = true;
 100:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 101:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_ResetInterface();
 102:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** }
 103:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 104:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** void USB_Disable(void)
 105:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** {
 329               	 .loc 1 105 0
 330               	 .cfi_startproc
 331               	 
 332               	 
 333               	 
 334               	.L__stack_usage =0
 106:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_INT_DisableAllInterrupts();
 335               	 .loc 1 106 0
 336 0000 0E94 0000 	 call USB_INT_DisableAllInterrupts
 337               	.LVL0:
 107:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_INT_ClearAllInterrupts();
 338               	 .loc 1 107 0
 339 0004 0E94 0000 	 call USB_INT_ClearAllInterrupts
 340               	.LVL1:
 341               	.LBB34:
 342               	.LBB35:
 343               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
GAS LISTING  			page 18


  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			extern "C" {
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
GAS LISTING  			page 19


  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__))
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			//@{
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Option mask for \ref USB_Init() to keep regulator enabled at all times. Indicates that \ref 
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  should not disable the regulator as it would otherwise. Has no effect if regulator is disabl
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \ref USB_OPT_REG_DISABLED.
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
GAS LISTING  			page 20


 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_KEEP_ENABLED           (1 << 3)
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			//@}
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 */
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				{
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				}
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 344               	 .loc 2 190 0
 345 0008 E0EE      	 ldi r30,lo8(-32)
 346 000a F0E0      	 ldi r31,0
 347 000c 8081      	 ld r24,Z
 348 000e 8160      	 ori r24,lo8(1)
 349 0010 8083      	 st Z,r24
GAS LISTING  			page 21


 350               	.LBE35:
 351               	.LBE34:
 352               	.LBB36:
 353               	.LBB37:
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Attaches the device to the USB bus. This announces the device's presence to any attached
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  USB host, starting the enumeration process. If no host is present, attaching the device
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  will allow for enumeration once a host is connected to the device.
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  This is inexplicably also required for proper operation while in host mode, to enable the
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  attachment of a device to the host. This is despite the bit being located in the device-mode
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  register and despite the datasheet making no mention of its requirement in host mode.
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void)
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  &= ~(1 << DETACH);
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Main function to initialize and start the USB interface. Once active, the USB interface will
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  allow for device connection to a host when in device mode, or for device enumeration while i
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  host mode.
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  As the USB library relies on interrupts for the device and host mode enumeration processes,
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  the user must enable global interrupts before or shortly after this function is called. In
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  device mode, interrupts must be enabled within 500ms of this function being called to ensure
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the host does not time out whilst enumerating the device. In host mode, interrupts may 
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  enabled at the application's leisure however enumeration will not begin of an attached devic
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  until after this has occurred.
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  Calling this function when the USB interface is already initialized will cause a complete US
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  interface reset and re-enumeration.
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Mode     Mask indicating what mode the USB interface is to be initialized to, a v
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      from the \ref USB_Modes_t enum.
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      \note This parameter does not exist on devices with only one supported U
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                            mode (device or host).
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Options  Mask indicating the options which should be used when initializing the U
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      interface to control the USB interface's behavior. This should be compri
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      a \c USB_OPT_REG_* mask to control the regulator, a \c USB_OPT_*_PLL mas
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      PLL, and a \c USB_DEVICE_OPT_* mask (when the device mode is enabled) to
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *                      mode speed.
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only device or host mode is require
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        the mode can be statically set in the project makefile by defining the token \c USB_DE
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        (for device mode) or \c USB_HOST_ONLY (for host mode), passing the token to the compil
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        via the -D switch. If the mode is statically set, this parameter does not exist in the
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        function prototype.
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only fixed settings are required,
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        the options may be set statically in the same manner as the mode (see the Mode paramet
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        this function). To statically set the USB options, pass in the \c USE_STATIC_OPTIONS t
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        defined to the appropriate options masks. When the options are statically set, this
GAS LISTING  			page 22


 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        parameter does not exist in the function prototype.
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note The mode parameter does not exist on devices where only one mode is possible, such as 
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *        AVR models which only implement the USB device mode in hardware.
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  \see \ref Group_Device for the \c USB_DEVICE_OPT_* masks.
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Init(
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Mode
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #if (defined(USB_CAN_BE_BOTH) && !defined(USE_STATIC_OPTIONS)) || defined(__DOXYG
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               ,
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #elif (!defined(USB_CAN_BE_BOTH) && defined(USE_STATIC_OPTIONS))
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               void
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Options
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			               );
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Shuts down the USB interface. This turns off the USB interface after deallocating all USB FI
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  memory, endpoints and pipes. When turned off, no USB functionality can be used until the int
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  is restarted with the \ref USB_Init() function.
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Disable(void);
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			/** Resets the interface, when already initialized. This will re-enumerate the device if already
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 *  to a host, or re-enumerate an already attached device when in host mode.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			 */
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			void USB_ResetInterface(void);
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Global Variables: */
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the mode that the USB interface is currently initialized to, a value from the
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_Modes_t enum.
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note When the controller is initialized into UID auto-detection mode, this variable will h
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *        currently selected USB mode (i.e. \ref USB_MODE_Device or \ref USB_MODE_Host). If the
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *        is fixed into a specific mode (either through the \c USB_DEVICE_ONLY or \c USB_HOST_O
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *        options, or a limitation of the USB controller in the chosen device model) this will 
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *        a constant of the appropriate value and will never evaluate to \ref USB_MODE_None eve
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *        USB interface is not initialized.
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 */
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_CurrentMode;
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_HOST)
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Host
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_DEVICE)
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Device
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
GAS LISTING  			page 23


 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the current USB options that the USB interface was initialized with when \ref USB
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  was called. This value will be one of the \c USB_MODE_* masks defined elsewhere in this mod
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				 */
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_Options;
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USE_STATIC_OPTIONS)
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_Options USE_STATIC_OPTIONS
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	/* Private Interface - For use in library only: */
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 	#if !defined(__DOXYGEN__)
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(__INCLUDE_FROM_USB_CONTROLLER_C)
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_DEVICE)
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Device(void);
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_HOST)
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Host(void);
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void)
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void)
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void)
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				return ((PLLCSR & (1 << PLOCK)) ? true : false);
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void)
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON |=  (1 << UVREGE);
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#else
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  &= ~(1 << REGDIS);
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void) ATTR_ALWAYS_INLINE;
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void)
GAS LISTING  			page 24


 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON &= ~(1 << UVREGE);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#else
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  |=  (1 << REGDIS);
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << OTGPADE);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void)
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << OTGPADE);
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void)
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << FRZCLK);
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void)
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << FRZCLK);
 390:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 391:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 392:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Enable(void) ATTR_ALWAYS_INLINE;
 393:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Enable(void)
 394:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 395:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << USBE);
 396:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 397:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 398:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Disable(void) ATTR_ALWAYS_INLINE;
 399:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Disable(void)
 400:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 401:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << USBE);
 354               	 .loc 2 401 0
 355 0012 E8ED      	 ldi r30,lo8(-40)
 356 0014 F0E0      	 ldi r31,0
 357 0016 8081      	 ld r24,Z
 358 0018 8F77      	 andi r24,lo8(127)
 359 001a 8083      	 st Z,r24
 360               	.LBE37:
 361               	.LBE36:
 362               	.LBB38:
 363               	.LBB39:
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 364               	 .loc 2 337 0
 365 001c 19BC      	 out 0x29,__zero_reg__
GAS LISTING  			page 25


 366               	.LBE39:
 367               	.LBE38:
 368               	.LBB40:
 369               	.LBB41:
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  |=  (1 << REGDIS);
 370               	 .loc 2 362 0
 371 001e E3E6      	 ldi r30,lo8(99)
 372 0020 F0E0      	 ldi r31,0
 373 0022 8081      	 ld r24,Z
 374 0024 8160      	 ori r24,lo8(1)
 375 0026 8083      	 st Z,r24
 376               	.LBE41:
 377               	.LBE40:
 108:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 109:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Detach();
 110:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Controller_Disable();
 111:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 112:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (!(USB_Options & USB_OPT_MANUAL_PLL))
 113:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	  USB_PLL_Off();
 114:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 115:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (!(USB_Options & USB_OPT_REG_KEEP_ENABLED))
 116:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	  USB_REG_Off();
 117:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 118:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 119:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_OTGPAD_Off();
 120:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 121:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 122:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
 123:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_CurrentMode = USB_MODE_None;
 124:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 125:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 126:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_IsInitialized = false;
 378               	 .loc 1 126 0
 379 0028 1092 0000 	 sts USB_IsInitialized,__zero_reg__
 380 002c 0895      	 ret
 381               	 .cfi_endproc
 382               	.LFE81:
 384               	.global USB_ResetInterface
 386               	USB_ResetInterface:
 387               	.LFB82:
 127:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** }
 128:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 129:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** void USB_ResetInterface(void)
 130:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** {
 388               	 .loc 1 130 0
 389               	 .cfi_startproc
 390               	 
 391               	 
 392               	 
 393               	.L__stack_usage =0
 131:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
 132:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	bool UIDModeSelectEnabled = ((UHWCON & (1 << UIDE)) != 0);
 133:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 134:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 135:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_INT_DisableAllInterrupts();
 394               	 .loc 1 135 0
 395 002e 0E94 0000 	 call USB_INT_DisableAllInterrupts
GAS LISTING  			page 26


 396               	.LVL2:
 136:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_INT_ClearAllInterrupts();
 397               	 .loc 1 136 0
 398 0032 0E94 0000 	 call USB_INT_ClearAllInterrupts
 399               	.LVL3:
 400               	.LBB62:
 401               	.LBB63:
 402:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			}
 403:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 
 404:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Reset(void) ATTR_ALWAYS_INLINE;
 405:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Controller_Reset(void)
 406:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 			{
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << USBE);
 402               	 .loc 2 407 0
 403 0036 8091 D800 	 lds r24,216
 404 003a 8F77      	 andi r24,lo8(127)
 405 003c 8093 D800 	 sts 216,r24
 408:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << USBE);
 406               	 .loc 2 408 0
 407 0040 8091 D800 	 lds r24,216
 408 0044 8068      	 ori r24,lo8(-128)
 409 0046 8093 D800 	 sts 216,r24
 410               	.LBE63:
 411               	.LBE62:
 412               	.LBB64:
 413               	.LBB65:
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << FRZCLK);
 414               	 .loc 2 389 0
 415 004a 8091 D800 	 lds r24,216
 416 004e 8F7D      	 andi r24,lo8(-33)
 417 0050 8093 D800 	 sts 216,r24
 418               	.LBE65:
 419               	.LBE64:
 420               	.LBB66:
 421               	.LBB67:
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 422               	 .loc 2 330 0
 423 0054 84E0      	 ldi r24,lo8(4)
 424 0056 89BD      	 out 0x29,r24
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 425               	 .loc 2 331 0
 426 0058 86E0      	 ldi r24,lo8(6)
 427 005a 89BD      	 out 0x29,r24
 428               	.L4:
 429               	.LBE67:
 430               	.LBE66:
 137:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 138:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Controller_Reset();
 139:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 140:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
 141:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (UIDModeSelectEnabled)
 142:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	  USB_INT_Enable(USB_INT_IDTI);
 143:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 144:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 145:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_CLK_Unfreeze();
 146:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 147:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	if (USB_CurrentMode == USB_MODE_Device)
GAS LISTING  			page 27


 148:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	{
 149:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#if defined(USB_CAN_BE_DEVICE)
 150:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 151:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		UHWCON |=  (1 << UIMOD);
 152:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#endif
 153:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 154:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 155:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		{
 156:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			#if defined(USB_SERIES_2_AVR)
 157:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			USB_PLL_On();
 158:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			while (!(USB_PLL_IsReady()));
 431               	 .loc 1 158 0 discriminator 1
 432 005c 09B4      	 in __tmp_reg__,0x29
 433 005e 00FE      	 sbrs __tmp_reg__,0
 434 0060 00C0      	 rjmp .L4
 435               	.LBB68:
 436               	.LBB69:
 159:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			#else
 160:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			USB_PLL_Off();
 161:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			#endif
 162:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		}
 163:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 164:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		USB_Init_Device();
 165:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#endif
 166:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	}
 167:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	else if (USB_CurrentMode == USB_MODE_Host)
 168:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	{
 169:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#if defined(USB_CAN_BE_HOST)
 170:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		UHWCON &= ~(1 << UIMOD);
 171:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 172:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 173:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		{
 174:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			#if defined(USB_CAN_BE_HOST)
 175:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			USB_PLL_On();
 176:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			while (!(USB_PLL_IsReady()));
 177:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 			#endif
 178:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		}
 179:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 180:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		USB_Init_Host();
 181:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 		#endif
 182:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	}
 183:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 184:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 185:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_OTGPAD_On();
 186:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 187:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** }
 188:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 189:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** #if defined(USB_CAN_BE_DEVICE)
 190:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** static void USB_Init_Device(void)
 191:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** {
 192:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_DeviceState                 = DEVICE_STATE_Unattached;
 437               	 .loc 1 192 0
 438 0062 1092 0000 	 sts USB_DeviceState,__zero_reg__
 193:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Device_ConfigurationNumber  = 0;
 439               	 .loc 1 193 0
 440 0066 1092 0000 	 sts USB_Device_ConfigurationNumber,__zero_reg__
 194:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
GAS LISTING  			page 28


 195:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 196:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Device_RemoteWakeupEnabled  = false;
 441               	 .loc 1 196 0
 442 006a 1092 0000 	 sts USB_Device_RemoteWakeupEnabled,__zero_reg__
 197:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#endif
 198:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 
 199:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	#if !defined(NO_DEVICE_SELF_POWER)
 200:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_Device_CurrentlySelfPowered = false;
 443               	 .loc 1 200 0
 444 006e 1092 0000 	 sts USB_Device_CurrentlySelfPowered,__zero_reg__
 445               	.LVL4:
 446               	.LBB70:
 447               	.LBB71:
 448               	 .file 3 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
GAS LISTING  			page 29


  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
GAS LISTING  			page 30


 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
GAS LISTING  			page 31


 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 449               	 .loc 3 210 0
 450 0072 42E0      	 ldi r20,lo8(2)
 451 0074 60E0      	 ldi r22,0
 452 0076 80E0      	 ldi r24,0
GAS LISTING  			page 32


 453 0078 0E94 0000 	 call Endpoint_ConfigureEndpoint_Prv
 454               	.LVL5:
 455               	.LBE71:
 456               	.LBE70:
 457               	.LBB72:
 458               	.LBB73:
 459               	 .file 4 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
GAS LISTING  			page 33


  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
GAS LISTING  			page 34


 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX |= (1 << RXSTPE);
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << HSOFE);
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DCONNE);
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DDISCE);
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << RSTE);
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << BCERRE);
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << VBERRE);
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << SRPE);
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt)
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << VBUSTE);
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << IDTE);
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << WAKEUPE);
GAS LISTING  			page 35


 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SUSPE);
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << EORSTE);
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SOFE);
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX &= ~(1 << RXSTPE);
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << HSOFE);
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DCONNE);
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DDISCE);
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << RSTE);
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << BCERRE);
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << VBERRE);
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << SRPE);
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt)
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << VBUSTI);
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << IDTI);
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
GAS LISTING  			page 36


 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << WAKEUPI);
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SUSPI);
 460               	 .loc 4 227 0
 461 007c 8091 E100 	 lds r24,225
 462 0080 8E7F      	 andi r24,lo8(-2)
 463 0082 8093 E100 	 sts 225,r24
 464               	.LVL6:
 465               	.LBE73:
 466               	.LBE72:
 467               	.LBB74:
 468               	.LBB75:
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 469               	 .loc 4 107 0
 470 0086 8091 E200 	 lds r24,226
 471 008a 8160      	 ori r24,lo8(1)
 472 008c 8093 E200 	 sts 226,r24
 473               	.LVL7:
 474               	.LBE75:
 475               	.LBE74:
 476               	.LBB76:
 477               	.LBB77:
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 478               	 .loc 4 110 0
 479 0090 8091 E200 	 lds r24,226
 480 0094 8860      	 ori r24,lo8(8)
 481 0096 8093 E200 	 sts 226,r24
 482               	.LBE77:
 483               	.LBE76:
 484               	.LBB78:
 485               	.LBB79:
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  &= ~(1 << DETACH);
 486               	 .loc 2 204 0
 487 009a 8091 E000 	 lds r24,224
 488 009e 8E7F      	 andi r24,lo8(-2)
 489 00a0 8093 E000 	 sts 224,r24
 490 00a4 0895      	 ret
 491               	.LBE79:
 492               	.LBE78:
 493               	.LBE69:
 494               	.LBE68:
 495               	 .cfi_endproc
 496               	.LFE82:
 498               	.global USB_Init
 500               	USB_Init:
 501               	.LFB80:
  61:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** {
 502               	 .loc 1 61 0
 503               	 .cfi_startproc
 504               	 
 505               	 
 506               	 
 507               	.L__stack_usage =0
 508               	.LBB80:
GAS LISTING  			page 37


 509               	.LBB81:
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  &= ~(1 << REGDIS);
 510               	 .loc 2 352 0
 511 00a6 E3E6      	 ldi r30,lo8(99)
 512 00a8 F0E0      	 ldi r31,0
 513 00aa 8081      	 ld r24,Z
 514 00ac 8E7F      	 andi r24,lo8(-2)
 515 00ae 8083      	 st Z,r24
 516               	.LBE81:
 517               	.LBE80:
  99:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_IsInitialized = true;
 518               	 .loc 1 99 0
 519 00b0 81E0      	 ldi r24,lo8(1)
 520 00b2 8093 0000 	 sts USB_IsInitialized,r24
 101:LUFA/Drivers/USB/Core/AVR8/USBController_AVR8.c **** 	USB_ResetInterface();
 521               	 .loc 1 101 0
 522 00b6 0C94 0000 	 jmp USB_ResetInterface
 523               	.LVL8:
 524               	 .cfi_endproc
 525               	.LFE80:
 527               	.Letext0:
 528               	 .file 5 "/usr/lib/avr/include/stdint.h"
 529               	 .file 6 "LUFA/Drivers/USB/Core/AVR8/../USBController.h"
 530               	 .file 7 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../Device.h"
 531               	 .file 8 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../DeviceStandardReq.h"
 532               	 .file 9 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../USBTask.h"
GAS LISTING  			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 USBController_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:326    .text:0000000000000000 USB_Disable
    {standard input}:386    .text:000000000000002e USB_ResetInterface
    {standard input}:500    .text:00000000000000a6 USB_Init
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
USB_INT_DisableAllInterrupts
USB_INT_ClearAllInterrupts
USB_IsInitialized
USB_DeviceState
USB_Device_ConfigurationNumber
USB_Device_RemoteWakeupEnabled
USB_Device_CurrentlySelfPowered
Endpoint_ConfigureEndpoint_Prv
GAS LISTING  			page 1


   1               	 .file "USBInterrupt_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.6f3b794f07e41c3b,"",@progbits
  10 0000 789C 6362 	 .ascii "x\234cb`b\300\0064\24043\003\003#H\t3S4c\016#H\004\314`\2043"
  10      6062 C006 
  10      34A0 3433 
  10      0303 2348 
  10      0933 5334 
  11 001d A0DA 0139 	 .ascii "\240\332\0019\265\002\233"
  11      B502 9B
  12               	 .text
  13               	 .section .gnu.lto_.inline.6f3b794f07e41c3b,"",@progbits
  14 0000 789C 6362 	 .string "x\234cb`b\300\006\242\24043\003\003\0133#\003\023\323\005~\006\266\005\362`\305\214\230BL\f\217\030\254\201\324:\306\tgY\021\n\271\200\004\013/\330\024\b\007A0"
  14      6062 C006 
  14      A2A0 3433 
  14      0303 0B33 
  14      2303 13D3 
  15 0039 00        	 .string ""
  16 003a BEB1 0800 	 .string "\276\261\b"
  17               	 .text
  18               	 .section .gnu.lto_.pureconst.6f3b794f07e41c3b,"",@progbits
  19 0000 789C 6362 	 .string "x\234cb`b`g\200"
  19      6062 6067 
  19      8000 
  20 000a 6606 2946 	 .string "f\006)F)&)"
  20      2926 2900 
  21 0012 01CB 00   	 .string "\001\313"
  22 0015 60        	 .ascii "`"
  23               	 .text
  24               	 .section .gnu.lto_USB_INT_DisableAllInterrupts.6f3b794f07e41c3b,"",@progbits
  25 0000 789C 6362 	 .string "x\234cb`b@\007\222@\334\006\304\206@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\315i=\304\316\f\344\2622\26444LP``H\003K\207\003I\220\236\bF&\020\315|\226\341\320\216\033\263yS\030\0272\2622\314f\230\325\330\322\330\300\232\303\310\020\315\230\303\310\370\bJ\203\315\005\261\300\214\213\f\215\017~0At\300@8P\021\3208\220\313\365}B\335\034\365]\2122\313R\213\212\365C\203\235\364\235\363\213R\365\035\303\202,@<\317\274\222\324\242\242\322\202\222x\220\210^2\003"
  25      6062 4007 
  25      9240 DC06 
  25      C486 40CC 
  25      C8CC C0C8 
  26 00b4 AF86 33AE 	 .ascii "\257\2063\256"
  27               	 .text
  28               	 .section .gnu.lto_USB_INT_ClearAllInterrupts.6f3b794f07e41c3b,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b@\007\222@\334\016\304\206@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327}k\275%\311\f\344\2622\26444LP``H\003K\207\003I\220\236\bF&\020\315|\226\341\320\216\035\317N0\2460.dde\230\3150\253\261\245\261\2015\207\221!\2321\207\221\361!\224\006\033\fb\201\031\027\031\032\037\314V\206\350\200\201p\240\"\240y \247\353\373\204\2729\352\273\024e\226\245\026\025\353\207\006;\351;\347\027\245\352;\206\005Y\200x\236y%\251EE\245\005%\361 \021\275d\006"
  29      6062 4007 
  29      9240 DC0E 
  29      C486 40CC 
  29      C8CC C0C8 
  30 00b5 7CB2 34DD 	 .ascii "|\2624\335"
  31               	 .text
  32               	 .section .gnu.lto___vector_11.6f3b794f07e41c3b,"",@progbits
  33 0000 789C BD59 	 .ascii "x\234\275Y}lS\327\025\277\367>?\333\261\363\341\004\222MS\313"
  33      7D6C 53D7 
  33      15BF F73E 
  33      3FDB B1F3 
  33      E104 924D 
GAS LISTING  			page 2


  34 0016 10FF AC9D 	 .ascii "\020\377\254\235\332\230\217\322\204R\nI`\032+\320j\220\202\004"
  34      DA98 8FD2 
  34      8452 0A49 
  34      601A 2BD0 
  34      6A90 8204 
  35 002a 2530 9E13 	 .ascii "%0\236\023\002i\0229\241R\267?p\276\332\fJ\t\024\020\245\355"
  35      0269 1239 
  35      A152 B73F 
  35      70BE DA0C 
  35      4A09 1410 
  36 0040 0643 296C 	 .ascii "\006C)l\021\313\006\352\026B\272F\311\262\204\246\020%\242]\242"
  36      11CB 06EA 
  36      1642 BA46 
  36      C9B2 84A6 
  36      1025 A25D 
  37 0055 52CD B046 	 .ascii "R\315\260F\fFK\327J\r*\035\3369\367\372}\330\357\021\277T\326"
  37      0C46 4BD7 
  37      4A0D 2A1D 
  37      DE39 F7FA 
  37      7DD8 EF11 
  38 006c FCC7 EFD9 	 .ascii "\374\307\357\331\367\235s|~\347\236{\316y6#\214\304\277\276K"
  38      F79D 737C 
  38      7EE7 9E7B 
  38      CE79 3623 
  38      8CC4 BFBE 
  39 0081 09E9 FF1E 	 .ascii "\t\351\377\036!\257\303\225~\207P\326r\221\220:7cR\363\017H\310"
  39      21AF C395 
  39      7E87 50D6 
  39      7291 903A 
  39      3763 52F3 
  40 0098 2323 A64A 	 .ascii "##\246J\314q)\007?u\345\301'\007\225\205\220\314\234\\\310\315"
  40      CC71 2907 
  40      3F75 E5C1 
  40      2707 9585 
  40      90CC 9C5C 
  41 00ae 859C CCC5 	 .ascii "\205\234\314\305\205\334\\\310E\335B\310\315R\270P\026\027Ja"
  41      85DC 5CC8 
  41      45DD 42C8 
  41      CD52 B850 
  41      1617 4A61 
  42 00c2 1EC3 270F 	 .ascii "\036\303'\017\365\n!/\313y\271\237\300zj\243\013\326s\304zA*"
  42      F50A 212F 
  42      CB79 B99F 
  42      C07A 6AA3 
  42      0BD6 73C4 
  43 00d9 4BE3 D2E9 	 .ascii "K\343\322\351\\:\215f\n\351t\346\343\313\031|9\203\372\304\262"
  43      5C3A 8D66 
  43      0AE9 74E6 
  43      E3CB 197C 
  43      3983 FAC4 
  44 00ee 4FBD 9F49 	 .ascii "O\275\237I\263\304\233,6\355\222\037\004\263\273f\200\34046\275"
  44      B3C4 9B2C 
  44      36ED 921F 
  44      04B3 BB66 
  44      80E0 3436 
  45 0103 7306 7EFA 	 .ascii "s\006~\372\020\326R\247\323l!\224M)\276!\224\354d\222Cv\272\334"
  45      10D6 52A7 
GAS LISTING  			page 3


  45      D36C 2194 
  45      4D29 BE21 
  45      94EC 6492 
  46 011b 291E 6F4E 	 .ascii ")\036oNjZz\206/3k\332\364l\272s\003\305H\261Y\344X(\264?\334"
  46      6A5A 7A86 
  46      2F33 6BDA 
  46      F46C BA73 
  46      03C5 48B1 
  47 0136 D776 D6D1 	 .ascii "\327v\326\321\364\207Ps(\022\331YA!\244s))\245d=\255\240\324"
  47      F487 5073 
  47      2812 D959 
  47      4121 A473 
  47      2929 A564 
  48 014e CD2F 8CC6 	 .ascii "\315/\214\306\306X(v\177\371\336!"
  48      C658 2876 
  48      7FF9 DE21 
  49 015a 47AB A628 	 .string "G\253\246(1\262\332R\261\332\240\335\316\272\303\221\310\3153\215#?\336J\211B\217\323Y\344~\270\036\203\353C\004\276\375a\204\\\004?\302l\2049\bs\021\346!<\2020\037\341Q\204<\204|\204\005\b\217!,Dx\034a\021\302\023\b\213\021\226 \024 \024\"\024!,EX\206\360$\302\n\204\225\b\253\020\236Bx\032a\rB1\302z\204\r\b\317\"lD(A\330\204\240 \004\020J\021\312\020\340%\223\306P\250e&\301\020\301k-`\313}d\035ep\221\316\223z\267\210k\313\376\356\316\027\331\341Pcw$\262\270\202:\030\0042\301v\340\232C\2067\027HOg\337\237_\371\325\277]\332\227\2117\335\203\227\366\271\024\372\026D\231@\264[\251\f&\271\225m\364\241\327\311\221\272\003u>\330A4$_\021\337%G\215_ \r\347z\301\346\240W\241'au\033}\030tP\2028\340\366"
  49      31B2 DA52 
  49      B1DA A0DD 
  49      CEBA C391 
  49      C8CD 338D 
  50 025b 69BC 79A5 	 .ascii "i\274y\245\365\306\003\302(\334\344w\214\257uT\"\315\351\322"
  50      F5C6 03C2 
  50      28DC E477 
  50      8CAF 7554 
  50      22CD E9D2 
  51 026f 209E AF58 	 .ascii " \236\257X\257B_HQ\306\347\37663\324\320\035\272\035\211\270"
  51      AF42 5F48 
  51      51C6 E7FE 
  51      3633 D4D0 
  51      1DBA 1D89 
  52 0284 808A 424F 	 .ascii "\200\212BO@T&\347\254\323\340%\240\f\331\210 *\364\024\320\214"
  52      4054 26E7 
  52      ACD3 E025 
  52      A00C D988 
  52      202A F414 
  53 029a 8FC9 C075 	 .ascii "\217\311\300u\340\337\306]\314\215#|\325L\270\241\223\252\322"
  53      E0DF C65D 
  53      CC8D 237C 
  53      D54C B8A1 
  53      93AA D2
  54 02ad 7E50 8867 	 .ascii "~P\210g\333-\253t\375\026"
  54      DB2D AB74 
  54      FD16 
  55 02b7 741D 6497 	 .string "t\035d\227\303\222n\373\236\007\222\300W\022|\231\316\367\217\026|\307\372\201o;\367qv\342\r\226T\3319 \2167\245;T\330Z.\356Lf\002\264\b\031\"\r\237\217\274}\224\t/\t\371\005\371\032\n\003(8K\251\203\213UP\227\032!\331\224\362S\017\b',\351\204\217\230\223~\367W\230\364o[%\375\\[I\177\004\223\376O<0\363@\207\3575U\323\240\351\216\226\364\363,\262\300y\257\244\377*\211I/\351IpNM\002CL\2720\351\317r\027\037\261\231\364Bz>(\304\263\035\320\222~\276\005]\327\275\222\376\334\336\037&\201\257,\370:t\276\357Z\360\035\352\003\276\357p\037\037M\314WRe\363@\234'\375]=\351\3371'\375\325\330\244\317S}\021\364\302\255\327\232\035!\255\033\332\317a\246\373?\332k.\334\023\373 \356=19\354\024\016\344'\244x\266\227\333Th/\347\271"
  55      C392 6EFB 
  55      9E07 92C0 
  55      5712 7C99 
  55      CEF7 8F16 
  56 03b8 74F8 D6F9 	 .ascii "t\370\326\3714\232\275\ti.\210z7q0\262\333"
  56      349A BD09 
  56      692E 887A 
  56      3771 30B2 
  56      DB
  57 03c9 ECDD 37FB 	 .string "\354\3357\373d\335/\227\320x,\316\340\250\205_\334\232B\373\271_\013A\207\3735S\363\253\337\354\327h\254_\013\271h\307\311\033\314t\354\357\326\031\234r\243x\234\251\345\006K|\343\205_=\035\267#\243\321\n\206\032!\256\241U2Y\f2\026\252P\374\302\315}\031V\265/\205K\032j\237;Y\265\317\2207\207-\032~\377~\210\357\260U\355{\334V\355;\214\265o\204\357\317\"\320\321\362\206W\203\361\343\017\252\305`\221E1H\271W\355\273\233\304\332'\353\265\340\357j-0\304\244\023k\337\007\334\305'l\326>!\275\030\024\342\331\216i\265o\261\005]\017itI\230>]\355\303c\371\246\235\270pU\322\235\367\330IGG4\035\273\332\307\306\362\025:f>\f&\025\247\346\215\227\300\364\217\356t6\275{j\206\351p\\\354q\351\336xEF,\231\304z4!&\016\266\267AB|\314\203P"
  57      64DD 2F97 
  57      D078 2CCE 
GAS LISTING  			page 4


  57      E0A8 855F 
  57      DC9A 42FB 
  58 04ca 2A86 F6F0 	 .ascii "*\206\366\360\327kW\232N\fS5D\005\246\020\255\2459\004\036\207"
  58      D76B 579A 
  58      4E0C 5335 
  58      4405 A610 
  58      ADA5 3904 
  59 04e0 E83A 9A1A 	 .ascii "\350:\232\032\r\025\326\223={\314Y;t\332ptS\205w\205\t\353\t"
  59      0D15 D693 
  59      3D7B CC59 
  59      3B74 DA70 
  59      7453 8577 
  60 04f8 BA07 D614 	 .ascii "\272\007\326\024\032\346\016\024\201\016\017\312?\364z\036NX"
  60      1AE6 0E14 
  60      810E 0FCA 
  60      3FF4 7A1E 
  60      4E58 
  61 050a 508A 925F 	 .ascii "P\212\222_\317\007\372-\006\361z\310\245Ob\316\245$\034Xj\353"
  61      CF07 FA2D 
  61      06F1 7AC8 
  61      A54F 62CE 
  61      A524 1C58 
  62 0520 5C0E E060 	 .ascii "\\\016\340`7\316y.\003\035\316\363\226\316s<\341\260\266,\371"
  62      37CE 792E 
  62      031D CEF3 
  62      96CE 733C 
  62      E1B0 B62C 
  63 0535 3CDF EF33 	 .ascii "<\337\3573\363\374\3407\300\363z\fOY8\360d\342\343\330\313m*"
  63      F3FC E037 
  63      C0F3 7A0C 
  63      4F59 38F0 
  63      64E2 E3D8 
  64 054c F406 E7B9 	 .ascii "\364\006\347\271\002t\342y\336H\330\270V$\211\247a\276\370\310"
  64      0274 E279 
  64      DE48 D8B8 
  64      5624 89A7 
  64      61BE F8C8 
  65 0560 DC9F 777F 	 .ascii "\334\237w\177\270\037x~f\325\237W\332\352\317\037a\177\276\305"
  65      B81F 787E 
  65      66D5 9F57 
  65      DAEA CF1F 
  65      617F BEC5 
  66 0574 79AE 021D 	 .ascii "y\256\002\035\355X\t\232\267\022\322\\\205\242\365\347/w\034"
  66      ED58 099A 
  66      B712 D25C 
  66      85A2 F5E7 
  66      2F77 1C
  67 0587 74A9 07F0 	 .string "t\251\007\360~\336\274\260\001\271\265V\224R\315\335B\315\224\250\003X\333\352\3224%\213\302\226Fz$^\330n\267]\237j_thV\322\243V:\373\356\2749x\302\234)\227\277\360\352\261K\023\254\236\212#\375O\213\034\001k/AI\232\340\356?\r:\234AH\033Y[\177\257:\r\267-jR\006\271B\245u\324\027uo\271}\202\333D+\035#\224S\225H\272\340LI\006g\234\211U\016\207\202\256\361t\253\241 \235[1\f\005Y\311\032\n\034z\262\276a\361@4\216C\301\177\255\206\2025\266\212\317\0338\024\334\345\021-\006\035\036T\267\032\357\276\323\332PPl\221L\323\310\201L\313\241\340\353$\016\005.}(h`\263L1\371\013\016\005u\f]\\os(\020\322\033@!\236\355\2606\024l\260\240;\235\214:-\351\2369\224\304_\001\334:\337\227,\370^\304f\321\304\031<k\353W"
  67      7EDE BCB0 
  67      01B9 B556 
  67      9452 CDDD 
  67      42CD 94A8 
  68 0688 21BB 11C4 	 .ascii "!\273\021\304yBO\350\225\b\357L\336X6\212\241\345r\307\241\237"
  68      7942 4FE8 
  68      9508 EF4C 
  68      DE58 368A 
  68      A1E5 72C7 
GAS LISTING  			page 5


  69 069e 4CB1 5688 	 .ascii "L\261V\210VR\337\361\2573\324\240\231\240\200\341;>\334\237'"
  69      5652 DFF1 
  69      AF33 D4A0 
  69      99A0 80E1 
  69      3B3E DC9F 
  70 06b3 D163 9EB4 	 .ascii "\321c\236\264\337\022\006-\372\366M\354\333\2570\213\276]b\353"
  70      DF12 062D 
  70      FAF6 4DEC 
  70      DBAF 308B 
  70      BE5D 62EB 
  71 06c7 E80C E256 	 .ascii "\350\f\342V\354\345\341\335\004:\361\317\233{\023\206wS\362\373"
  71      ECE5 E1DD 
  71      043A F1CF 
  71      9B7B 1386 
  71      7753 F2FB 
  72 06db D990 B96F 	 .ascii "\331\220\271o\357\376\024\373\366\253\314\242o+\266\3726\177"
  72      EFFE 14FB 
  72      F6AB CCA2 
  72      6F2B B6FA 
  72      367F 
  73 06ed 063F C079 	 .ascii "\006?\300y\006@'\236\347\0013\317\270\206\026\370\377<W\177\212"
  73      0640 279E 
  73      E701 33CF 
  73      B886 16F8 
  73      FF3C 577F 
  74 0702 7DFB 30B3 	 .ascii "}\3730\263\350\333\245\366\237\253_\343<\313@'\356\271\372\265"
  74      E8DB A5F6 
  74      9FAB 5FE3 
  74      3CCB 4027 
  74      EEB9 FAB5 
  75 0716 8434 CB26 	 .ascii "\2044\313&\247\311\310Qf\353w_q\002tC`\241\233\302\223V$\"\202"
  75      A7C9 C851 
  75      66EB 775F 
  75      7102 7443 
  75      60A1 9BC2 
  76 072f 70F2 5B9A 	 .ascii "p\362[\232\331e0\343a\344\224\301\214O\230af3\036w\002oN\333"
  76      D965 30E3 
  76      61E4 94C1 
  76      8C4F 9861 
  76      6633 1E77 
  77 0747 F386 0A33 	 .ascii "\363\206\n3\237\337\376\355\265\3534\272u\342O\207\030\203nF"
  77      9FDF FEED 
  77      B5EB 34BA 
  77      75E2 4F87 
  77      1883 6E46 
  78 075b BE49 6850 	 .ascii "\276IhP\337\362\317F`\313\216\303\226+\364\030\307_s|3&\t\260"
  78      DFF2 CF46 
  78      60CB 8EC3 
  78      962B F418 
  78      C75F 737C 
  79 0773 83C3 87B7 	 .ascii "\203\303\207\267\242\325\324\035\037\230\360\177^}\377K:\022"
  79      A2D5 D41D 
  79      1F98 F07F 
  79      5E7D FF4B 
  79      3A12 
  80 0785 0ABD 1CAA 	 .ascii "\n\275\034\252\017Gv~\237G\247A\232Jt\302\347{]\352\237(\361"
  80      0F47 767E 
GAS LISTING  			page 6


  80      9F47 A741 
  80      9A4A 74C2 
  80      E77B 5DEA 
  81 079c 7C7E 29D9 	 .ascii "|~)\331\t\220\352\325\321\367$\315\220q\303\274\214\354\263\345"
  81      0990 EAD5 
  81      D1F7 24CD 
  81      9071 C3BC 
  81      8CEC B3E5 
  82 07b0 9257 DF30 	 .ascii "\222W\3370\205\236\212r\216Yl3\006b\210\274\030\376\335\t,\322"
  82      859E 8A72 
  82      8E59 6C33 
  82      0662 88BC 
  82      18FE DD09 
  83 07c6 2C66 A649 	 .ascii ",f\246I-\245>\205\236\344"
  83      2DA5 3E85 
  83      9EE4 
  84 07d0 8BAA 74B4 	 .ascii "\213\252t\264'\362\013\203a'M\374H\334\363\361'\324j&\312\344"
  84      27F2 0B83 
  84      6127 4DFC 
  84      48DC F3F1 
  84      27D4 6A26 
  85 07e6 3E19 66A2 	 .ascii ">\031f\242l\234\211\206I]x\327\203\252\274x\255\205\231\245\345"
  85      6C9C 8986 
  85      495D 78D7 
  85      83AA BC78 
  85      AD85 99A5 
  86 07fb 3E24 E35F 	 .ascii ">$\343_Q\374\243\002\377\322`\371\363\201`\215\277xu\241\277"
  86      51FC A302 
  86      FFD2 60F9 
  86      F381 608D 
  86      BF78 75A1 
  87 0810 A82A 18F0 	 .ascii "\250*\030\360\027<\363\323|\374\264\274\2626\020\f\356\250\256"
  87      173C F3D3 
  87      7CFC B4BC 
  87      B236 100C 
  87      EEA8 AE
  88 0823 2DC1 95DC 	 .ascii "-\301\225\334-d&,\226,\r<_\276%PRTUYZ^\266#\270\271\266\274\252"
  88      2D64 262C 
  88      962C 0D3C 
  88      5FBE 2550 
  88      5254 5559 
  89 0840 72D5 8EE7 	 .ascii "r\325\216\347~\026\b\346\316v\225\227\326>W\235;'ES\315\233\344"
  89      7E16 08E6 
  89      CE76 9597 
  89      D63E 579D 
  89      3B27 4553 
  90 0857 2B72 73EF 	 .ascii "+rs\357\365U[\311\022\033z\006}\360\2466XUQ\021\b\252\006\n\246"
  90      F555 5BC9 
  90      121B 7A06 
  90      7DF0 A636 
  90      5855 5111 
  91 0870 6040 BD46 	 .ascii "`@\275F\251E-\270\n\024%\030\250\251q\254y\241:\340X]\376\363"
  91      A945 2DB8 
  91      0A14 2518 
  91      A8A9 71AC 
  91      79A1 3AE0 
  92 0888 805C B8B9 	 .ascii "\200\\\270\271r{M\321\267\260\274\254R\251\256*\257\324\3509"
GAS LISTING  			page 7


  92      727B 4DD1 
  92      B7B0 BCAC 
  92      52A9 AE2A 
  92      AFD4 E839 
  93 089c 45C4 E4C2 	 .ascii "E\304\344\302\027j\0035\256\225\233k\266?\263\271\302S\2645\260"
  93      176A 0335 
  93      AE95 9B6B 
  93      B63F B3B9 
  93      C253 B435 
  94 08b1 653B 5FFA 	 .ascii "e;_\372\037t\355\372\r"
  94      1F74 EDFA 
  94      0D
  95               	 .text
  96               	 .section .gnu.lto_.symbol_nodes.6f3b794f07e41c3b,"",@progbits
  97 0000 789C 4DCB 	 .ascii "x\234M\313\273\r\302@\020E\321;\263\254\rE!J{\016\035R\001\r"
  97      BB0D C240 
  97      1045 D13B 
  97      B3AC 0D45 
  97      214A 7B0E 
  98 0018 50C6 0664 	 .ascii "P\306\006d\310`\363KH,!j b\021\026\313$WGO\3438[\246\363\016"
  98      C860 F34B 
  98      482C 216A 
  98      2062 1116 
  98      CB24 5747 
  99 0033 C17A 0FD2 	 .ascii "\301z\017\322\2465? \373\343\021\371\304{kq\310\037\"\236\261"
  99      A635 3F20 
  99      FBE3 11F9 
  99      C47B 6B71 
  99      C81F 229E 
 100 0048 1CBB A2F0 	 .ascii "\034\273\242\360\035\233\306\354\206fE\027\024\213N\250*\352"
 100      1D9B C6EC 
 100      8666 4517 
 100      148B 4EA8 
 100      2AEA 
 101 005a 51FD 53F0 	 .ascii "Q\375S\360\005i7x\3609\251\377\264f|t\253\340\025\351\365\\\006"
 101      0569 3778 
 101      F039 A9FF 
 101      B466 7C74 
 101      ABE0 15E9 
 102 0071 8F8C B9BC 	 .ascii "\217\214\271\274\001\214)5\b"
 102      018C 2935 
 102      08
 103               	 .text
 104               	 .section .gnu.lto_.refs.6f3b794f07e41c3b,"",@progbits
 105 0000 789C 6362 	 .string "x\234cb`b\340g\200"
 105      6062 E067 
 105      8000 
 106 000a 3626 4666 	 .string "6&Ff\006\026Ff0da"
 106      0616 4666 
 106      3064 6100 
 107 0016 00        	 .string ""
 108 0017 0301 00   	 .string "\003\001"
 109 001a 35        	 .ascii "5"
 110               	 .text
 111               	 .section .gnu.lto_.decls.6f3b794f07e41c3b,"",@progbits
 112 0000 789C A557 	 .ascii "x\234\245Wkl\024U\024\276w\272\245\255\205\026\021\221\200R@"
 112      6B6C 1455 
GAS LISTING  			page 8


 112      14BE 77BA 
 112      A5AD 8516 
 112      1191 8052 
 113 0015 2086 1FAC 	 .ascii " \206\037\254\374Q~\030hi\21364\224\024\312\037~\fKg\n\033\226"
 113      FC51 7E18 
 113      6869 8B36 
 113      3494 14CA 
 113      1F7E 0C4B 
 114 002d 29CC EC16 	 .ascii ")\314\354\026Kb\270[Zh\240\201\266\362h\214\342VyU!\"\241R\037"
 114      4B62 B85B 
 114      5A68 A081 
 114      B6F2 688C 
 114      E256 7955 
 115 0046 B12B 6F79 	 .ascii "\261+oy,OA \246+\201`\202\211\213\b\002J\307"
 115      2C4F 4120 
 115      A62B 8160 
 115      8289 8B08 
 115      024A C7
 116 0059 7367 EEEC 	 .string "sg\356\354cvv\273\2557=\231\231{\317w\316w\036{f\312!\016\255\300\b\251\260\216\017E\250\310\206\020\374\241\351 \034H;\b\034k+\023d\027H\007\310>\220N\220\303 ~\220# \307\030\346\004\310\217(v\355bg'A\316\260=\314\366\315\253#\201n\207\205.\345\221\303\316\351u0\303\235e\330s \273Y\034\001\220\363 \027A.\203t1\033\303\230\235+ = \267Y,\367@B \017A\236\260\030\237Q_\340,\003$\033\353\261\347b=\0174\037Y,\376\261\2607\016d<\310\253 \023\260\236\223\211p\235d$\224\255,\324HH\035!-dp\033\304\260\020\0138'\013\262Mo\006gi\241MD;\ti\016\036\357\rq\204\330\004\334\216\263 E\340`2\352 p\002\340l\213\354\b\030g\305=\013x'\236\214t?\3321\273Q\301Q\036\332A|\301\340\305\316\203\351\344"
 116      6376 76BB 
 116      AD37 3D99 
 116      997B CF77 
 116      CE77 1E7B 
 117 015a 09AA 6A1E 	 .string "\t\252j\036\032\201\266\022\272\274$\177\245\200\247\277h\311\217\232\336\215G\260\273\2124\335\035\207\026\341\260;}MB\2734k[\374X3F\325w\341\274X\222{0\027\275\241\223\362\377\005<\260\227\250\352\032\335\027\207\336K\305z\207\331\372g\026\326C\376oO\274\346]KzU\325\313\031\346\333p\264\3754\332\223\034\332I\253o<\034\306\254\224\354\371;\034]Z+6\373\314l\366\307\263\t6\007\267\007\376\336\202/\222\346&\362XU3\220\301\350\0016G\254\033\371\312\322\310\241K\177\340\006\362+\361\253\352\214\2302f\242\365Z\303y\375\371+\223\364\033m+\330\372\032g\202\353"
 117      1A81 B612 
 117      BABC 247F 
 117      A580 A7BF 
 117      68C9 8F9A 
 118 0214 67EA DA88 	 .ascii "g\352\332\210w\252@\327Bl\334\033w\330\332:\005u\261n\3212G7"
 118      77AA 40D7 
 118      426C DC1B 
 118      77D8 DA3A 
 118      0575 B16E 
 119 022c 684B C73C 	 .ascii "hK\307<\230\017Qtk!\232\356+\234u:\272-\323\261-\020H\013\247"
 119      980F 5174 
 119      6B21 9AEE 
 119      2B9C 753A 
 119      BA2D D3B1 
 120 0245 239C D104 	 .ascii "#\234\321\004&~\2602\341\357\r\324\345\267\221\220\252\346\032"
 120      267E B032 
 120      E1EF 0DD4 
 120      E5B7 9190 
 120      AAE6 1A
 121 0258 F8A6 346B 	 .ascii "\370\2464k\374QK\374\216\253f\374\336\004\370\343\261\370\361"
 121      FC51 4BFC 
 121      8EAB 66FC 
 121      DE04 F8E3 
 121      B1F8 F1
 122 026b A89D EC7C 	 .ascii "\250\235\354|?\370\321\216+\267\360Qh\013\037\3746\327\344i\203"
 122      3FF8 D18E 
 122      2BB7 F051 
 122      680B 1FFC 
 122      36D7 E469 
 123 0280 636D D2C1 	 .ascii "cm\322\301!\340O\360\304\276\177\367\034R\303D\022U\354T\204"
 123      21E0 4FF0 
 123      C4BE 7FF7 
 123      1C52 C344 
GAS LISTING  			page 9


 123      1255 EC54 
 124 0295 12A5 E36B 	 .ascii "\022\245\343k\rv\337\n\215\376\274\221\034\361\326\223\177\327"
 124      0D76 DF0A 
 124      8DFE BC91 
 124      1CF1 D693 
 124      7FD7 
 125 02a7 A869 C658 	 .ascii "\250i\306X\272d\353\313\324\351\210\251l\264\201\366\242\317"
 125      BA64 EBCB 
 125      D4E9 88A9 
 125      6CB4 81F6 
 125      A2CF 
 126 02b9 4B86 B7E5 	 .ascii "K\206\267\345\b\370$X`\250\241\006\212c\25038<\343\302#\323\367"
 126      08F8 2458 
 126      60A8 A106 
 126      8A63 A833 
 126      383C E3C2 
 127 02d0 7F23 37F9 	 .ascii "\177#7\371\247UI\344\377\\\304\277\t\325\236\204u \216\265\317"
 127      A755 49E4 
 127      FF5C C4BF 
 127      09D5 9E84 
 127      7520 8EB5 
 128 02e5 EB1B 1EC5 	 .ascii "\353\033\036\305:\006\301\006}\203\252\r\3720\200$\004\b\370"
 128      3A06 C106 
 128      7D83 AA0D 
 128      FA30 8024 
 128      0408 F8
 129 02f8 8216 667A 	 .ascii "\202\026fzl\230\351Y\221\033UM\243\025\276o\213m5\246\024\325"
 129      6C98 E959 
 129      911B 554D 
 129      A315 BE6F 
 129      8B6D 35A6 
 130 030e 747D D930 	 .ascii "t}\3310E\335\225$W\227#Q\323\336\367\207\202\017\357^(\373b\003"
 130      45DD 9524 
 130      5797 2351 
 130      D3DE F787 
 130      820F EF5E 
 131 0326 F1D3 093E 	 .ascii "\361\323\t>\303[?.\366\275B\247E|\025\331X=\230\216#$\177\262"
 131      C35B 3F2E 
 131      F6BD 42A7 
 131      457C 15D9 
 131      583D 988E 
 132 033e 1A1C A6C1 	 .ascii "\032\034\246\301p<\335br_7\254L@\237\222\346V\362\240\005\306"
 132      703C DD62 
 132      725F 37AC 
 132      4C40 9F92 
 132      E656 F2A0 
 133 0354 1B78 3AAB 	 .ascii "\033x:\2535\355]\rr\005\306\263u3\235\325'\2206\323\353HO\363"
 133      35ED 5D0D 
 133      7205 C6B3 
 133      7533 9DD5 
 133      2790 36D3 
 134 036c 5E0D AB8F 	 .ascii "^\r\253\217\273\3048\306\371z\3744\360\207\374]\2278m\030l\366"
 134      BBC4 38C6 
 134      F97A FC34 
 134      F087 FC5D 
 134      9738 6D18 
 135 0382 3572 7A5C 	 .ascii "5rz\\P\244x\346\002\276i\300\031\363\236(\346\002\376\005N\005"
GAS LISTING  			page 10


 135      50A4 78E6 
 135      02BE 69C0 
 135      19F3 9E28 
 135      E602 FE05 
 136 0398 DC33 40E6 	 .ascii "\3343@\346\211p\214y\320\222\371\205@\204y\312\337\007wR(\334"
 136      8970 8C79 
 136      D092 F985 
 136      4084 79CA 
 136      DF07 7752 
 137 03ae DA41 2984 	 .ascii "\332A)\204\177\315\"\374\333)\205OH\017\321\303g\257\343\333"
 137      7FCD 22FC 
 137      DB29 854F 
 137      480F D1C3 
 137      67AF E3DB 
 138 03c2 E6D7 F15D 	 .ascii "\346\327\361]\313x\177>\035]\251;Z\245ZR\241z\323\202\352\275"
 138      CB78 7F3E 
 138      1D5D A93B 
 138      5AA5 5A52 
 138      A17A D382 
 139 03d8 8151 BD67 	 .ascii "\201Q\275g\246\372\273%\325\320\211x\252\355\251P\275nA540\252"
 139      A6FA BB25 
 139      D5D0 8978 
 139      AAED A950 
 139      BD6E 4135 
 140 03ef 2133 D5FB 	 .ascii "!3\325\373VT\203\027\036\374\3067\220 }!w\023\334l3\336\211\367"
 140      5654 8317 
 140      1EFC C637 
 140      9020 7D21 
 140      7713 DC6C 
 141 0407 93D2 B5FE 	 .ascii "\223\322\265\376\256zhv\371\3102;\337_\215\316\216\356\216d\364"
 141      AE7A 6876 
 141      F9C8 323B 
 141      DF5F 8DCE 
 141      8EEE 8E64 
 142 041c DFDD 13B3 	 .ascii "\337\335\023\263\273\247\226\356\016X\270k\032\200\273gfw\275"
 142      BBA7 96EE 
 142      0E58 B86B 
 142      1A80 BB67 
 142      6677 BD
 143 042f 96EE 6E5C 	 .ascii "\226\356n\\M\364\263L2^\005|-bL\300u\\\374W\374\366T(\327\221"
 143      4DF4 B34C 
 143      325E 057C 
 143      2D62 4CC0 
 143      755C FC57 
 144 0449 468D B231 	 .ascii "F\215\2621X\274\\\322\301R\317YE\260\355F|\302\366\f a\3539S"
 144      58BC 5CD2 
 144      C152 CF59 
 144      45B0 ED46 
 144      7CC2 F60C 
 145 0462 C21A ADDC 	 .ascii "\302\032\255\334\005C\377\234z+\266\003i\370\034z:\220\2007&"
 145      0543 FF9C 
 145      7A2B B603 
 145      69F8 1C7A 
 145      3A90 8037 
 146 0477 0FB8 C992 	 .ascii "\017\270\311\222\301\241\326\263i\321\fR)\233n\257\231\353\317"
 146      C1A1 D6B3 
 146      69D1 0C52 
GAS LISTING  			page 11


 146      299B 6EAF 
 146      99EB CF
 147 048a 07F4 C594 	 .ascii "\007\364\305\224>\250[3S\030\024-\353\270\221\306[s\277\006\330"
 147      3EA8 5B33 
 147      5318 142D 
 147      EBB8 91C6 
 147      5B73 BF06 
 148 049f 9C20 7236 	 .ascii "\234 r6&t\234\377\340\246\b\256\263\037\270\316\3001\3707f\221"
 148      2674 9CFF 
 148      E0A6 08AE 
 148      B31F B8CE 
 148      C031 F837 
 149 04b5 80CF 6BD0 	 .ascii "\200\317k\320o\314P\323\347\320\371(\350\341M\307p=\205\352^"
 149      6FCC 50D3 
 149      E7D0 F928 
 149      E8E1 4DC7 
 149      703D 85EA 
 150 04ca BB53 F16A 	 .ascii "\273S\361jT\327\377e`\273\255\341\365H}\023\341X=\266\306\326"
 150      54D7 FF65 
 150      60BB ADE1 
 150      F548 7D13 
 150      E158 3DB6 
 151 04e0 772C FA98 	 .ascii "w,\372\230~\310=\274\373x\366:_\201"
 151      7EC8 3DBC 
 151      FB78 F63A 
 151      5F81 
 152 04ee F5FF 7FBA 	 .string "\365\377\177\272\216\377\300f\222\236\340?D\246\361\250\265/\215\0177\366\245\361g\2376\236\366\251\361Ab\246h\214\335\243\310v\227s\261\335Q#\333\235R\245\313#\210v\305-8%\367\224\245(\303\003\327i\274{\320\333s*\306\026\"{i\305\254\002{\221\354\254\021e\305^1o\246\275\260Z\026\355\005\013\312\247\321\247\022\311-\312\262g\205\233\247;S*\321\313\260\311\227\314\231\317\0279\025\307b\227X\340r\205u\224Q\306a\241Kt\3101G\331<_#V\272\253e~\352\324a\342\273\260-9\\\256Z\276\306\2518\301\214\315\243\210\302 \305\271\004v\223Q\2322%|-\256\021%\267\002\021\215(^P\f>\251\357\"\261\306Y)\362\345\242\"\272\013S3\023s-\226\204\025\325\220\037=\332\245(\235\237Y]\355\032\023\336.\254\226\252\234K<\262\030\336\231+\327\214\214\363\017j\022\004;:\356"
 152      8EFF C066 
 152      929E E03F 
 152      44A6 F1A8 
 152      B52F 8D0F 
 153 05ef 9256 A99F 	 .string "\222V\251\237\275\022w6\317\355\220\335eU\263d\307rqZ\377\270\203\302|\207\262\f\b\347F\f\202=\2678\263\177\206\302HIp\310B\271\270\022L\216\211\rL\213\337\341vVKs<\313\027\213r&\355\247\251o\360\3567Sp\025\337QK\321\260U\016Y\342=\022\355"
 153      BD12 7736 
 153      CFED 90DD 
 153      6555 B364 
 153      C772 715A 
 154 0648 5E16 158F 	 .ascii "^\026\025\217\313\375\202\321G\3578\224\262\312J\217,\213\302"
 154      CBFD 82D1 
 154      47EF 3894 
 154      B2CA 4A8F 
 154      2C8B C2
 155 065b 1087 6B95 	 .ascii "\020\207k\225\243V\341\235\222\313)\211Ya3\317\033\272%J\261"
 155      A356 E19D 
 155      92CB 2989 
 155      5961 33CF 
 155      1BBA 254A 
 156 0670 443B 5218 	 .ascii "D;R\030\022\323\205\271\246\206\3151\236u\355\374~$\bN!\001n"
 156      12D3 85B9 
 156      A686 CD31 
 156      9E75 EDFC 
 156      7E24 084E 
 157 0687 B9DA E512 	 .ascii "\271\332\345\022e\203\276f\257\260t6?K\026\305\325b6}\234[Z\312"
 157      6583 BE66 
 157      AFB0 7436 
 157      3F4B 16C5 
 157      D562 367D 
 158 069f 9755 553D 	 .ascii "\227UU=\027\276\227r\215\333\022\245\\t\b\265C\rT\205T\245\341"
GAS LISTING  			page 12


 158      17BE 9772 
 158      8DDB 12A5 
 158      5C74 08B5 
 158      430D 5485 
 159 06b6 0A06 D0AD 	 .ascii "\n\006\320\255\254(\214\310KQu*Q\n\004\001r\251\314\023\335\243"
 159      AC28 8CC8 
 159      4B51 752A 
 159      510A 0401 
 159      72A9 CC13 
 160 06cc 1277 6F06 	 .ascii "\022wo\006\323\262\315\257]!\332\3469W\213\3513\035\3222\345"
 160      D3B2 CDAF 
 160      5D21 DAE6 
 160      3957 8BE9 
 160      331D D232 
 161 06e1 3FE5 24D6 	 .ascii "?\345$\326\235"
 161      9D
 162               	 .text
 163               	 .section .gnu.lto_.symtab.6f3b794f07e41c3b,"",@progbits
 164 0000 5553 425F 	 .string "USB_INT_DisableAllInterrupts"
 164      494E 545F 
 164      4469 7361 
 164      626C 6541 
 164      6C6C 496E 
 165 001d 00        	 .string ""
 166 001e 00        	 .string ""
 167 001f 00        	 .string ""
 168 0020 00        	 .string ""
 169 0021 00        	 .string ""
 170 0022 00        	 .string ""
 171 0023 00        	 .string ""
 172 0024 00        	 .string ""
 173 0025 00        	 .string ""
 174 0026 00        	 .string ""
 175 0027 00        	 .string ""
 176 0028 A500      	 .string "\245"
 177 002a 00        	 .string ""
 178 002b 00        	 .string ""
 179 002c 5553 425F 	 .string "USB_INT_ClearAllInterrupts"
 179      494E 545F 
 179      436C 6561 
 179      7241 6C6C 
 179      496E 7465 
 180 0047 00        	 .string ""
 181 0048 00        	 .string ""
 182 0049 00        	 .string ""
 183 004a 00        	 .string ""
 184 004b 00        	 .string ""
 185 004c 00        	 .string ""
 186 004d 00        	 .string ""
 187 004e 00        	 .string ""
 188 004f 00        	 .string ""
 189 0050 00        	 .string ""
 190 0051 00        	 .string ""
 191 0052 A900      	 .string "\251"
 192 0054 00        	 .string ""
 193 0055 00        	 .string ""
 194 0056 5F5F 7665 	 .string "__vector_11"
GAS LISTING  			page 13


 194      6374 6F72 
 194      5F31 3100 
 195 0062 00        	 .string ""
 196 0063 00        	 .string ""
 197 0064 00        	 .string ""
 198 0065 00        	 .string ""
 199 0066 00        	 .string ""
 200 0067 00        	 .string ""
 201 0068 00        	 .string ""
 202 0069 00        	 .string ""
 203 006a 00        	 .string ""
 204 006b 00        	 .string ""
 205 006c 00        	 .string ""
 206 006d AC00      	 .string "\254"
 207 006f 00        	 .string ""
 208 0070 00        	 .string ""
 209 0071 5553 425F 	 .string "USB_DeviceState"
 209      4465 7669 
 209      6365 5374 
 209      6174 6500 
 210 0081 00        	 .string ""
 211 0082 0200      	 .string "\002"
 212 0084 00        	 .string ""
 213 0085 00        	 .string ""
 214 0086 00        	 .string ""
 215 0087 00        	 .string ""
 216 0088 00        	 .string ""
 217 0089 00        	 .string ""
 218 008a 00        	 .string ""
 219 008b 00        	 .string ""
 220 008c C600      	 .string "\306"
 221 008e 00        	 .string ""
 222 008f 00        	 .string ""
 223 0090 5553 425F 	 .string "USB_Device_ConfigurationNumber"
 223      4465 7669 
 223      6365 5F43 
 223      6F6E 6669 
 223      6775 7261 
 224 00af 00        	 .string ""
 225 00b0 0200      	 .string "\002"
 226 00b2 00        	 .string ""
 227 00b3 00        	 .string ""
 228 00b4 00        	 .string ""
 229 00b5 00        	 .string ""
 230 00b6 00        	 .string ""
 231 00b7 00        	 .string ""
 232 00b8 00        	 .string ""
 233 00b9 00        	 .string ""
 234 00ba C900      	 .string "\311"
 235 00bc 00        	 .string ""
 236 00bd 00        	 .string ""
 237 00be 4556 454E 	 .string "EVENT_USB_Device_Reset"
 237      545F 5553 
 237      425F 4465 
 237      7669 6365 
 237      5F52 6573 
 238 00d5 00        	 .string ""
GAS LISTING  			page 14


 239 00d6 0200      	 .string "\002"
 240 00d8 00        	 .string ""
 241 00d9 00        	 .string ""
 242 00da 00        	 .string ""
 243 00db 00        	 .string ""
 244 00dc 00        	 .string ""
 245 00dd 00        	 .string ""
 246 00de 00        	 .string ""
 247 00df 00        	 .string ""
 248 00e0 B500      	 .string "\265"
 249 00e2 00        	 .string ""
 250 00e3 00        	 .string ""
 251 00e4 456E 6470 	 .string "Endpoint_ConfigureEndpoint_Prv"
 251      6F69 6E74 
 251      5F43 6F6E 
 251      6669 6775 
 251      7265 456E 
 252 0103 00        	 .string ""
 253 0104 0200      	 .string "\002"
 254 0106 00        	 .string ""
 255 0107 00        	 .string ""
 256 0108 00        	 .string ""
 257 0109 00        	 .string ""
 258 010a 00        	 .string ""
 259 010b 00        	 .string ""
 260 010c 00        	 .string ""
 261 010d 00        	 .string ""
 262 010e B700      	 .string "\267"
 263 0110 00        	 .string ""
 264 0111 00        	 .string ""
 265 0112 4556 454E 	 .string "EVENT_USB_Device_Connect"
 265      545F 5553 
 265      425F 4465 
 265      7669 6365 
 265      5F43 6F6E 
 266 012b 00        	 .string ""
 267 012c 0200      	 .string "\002"
 268 012e 00        	 .string ""
 269 012f 00        	 .string ""
 270 0130 00        	 .string ""
 271 0131 00        	 .string ""
 272 0132 00        	 .string ""
 273 0133 00        	 .string ""
 274 0134 00        	 .string ""
 275 0135 00        	 .string ""
 276 0136 C000      	 .string "\300"
 277 0138 00        	 .string ""
 278 0139 00        	 .string ""
 279 013a 4556 454E 	 .string "EVENT_USB_Device_Disconnect"
 279      545F 5553 
 279      425F 4465 
 279      7669 6365 
 279      5F44 6973 
 280 0156 00        	 .string ""
 281 0157 0200      	 .string "\002"
 282 0159 00        	 .string ""
 283 015a 00        	 .string ""
GAS LISTING  			page 15


 284 015b 00        	 .string ""
 285 015c 00        	 .string ""
 286 015d 00        	 .string ""
 287 015e 00        	 .string ""
 288 015f 00        	 .string ""
 289 0160 00        	 .string ""
 290 0161 C200      	 .string "\302"
 291 0163 00        	 .string ""
 292 0164 00        	 .string ""
 293 0165 4556 454E 	 .string "EVENT_USB_Device_StartOfFrame"
 293      545F 5553 
 293      425F 4465 
 293      7669 6365 
 293      5F53 7461 
 294 0183 00        	 .string ""
 295 0184 0200      	 .string "\002"
 296 0186 00        	 .string ""
 297 0187 00        	 .string ""
 298 0188 00        	 .string ""
 299 0189 00        	 .string ""
 300 018a 00        	 .string ""
 301 018b 00        	 .string ""
 302 018c 00        	 .string ""
 303 018d 00        	 .string ""
 304 018e C400      	 .string "\304"
 305 0190 00        	 .string ""
 306 0191 00        	 .string ""
 307               	 .text
 308               	 .section .gnu.lto_.opts,"",@progbits
 309 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 309      6375 3D61 
 309      746D 6567 
 309      6133 3275 
 309      3227 2027 
 310               	 .text
 311               	 .cfi_sections .debug_frame
 312               	.global USB_INT_DisableAllInterrupts
 314               	USB_INT_DisableAllInterrupts:
 315               	.LFB80:
 316               	 .file 1 "LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c"
   1:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** /*
   2:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
   5:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** */
   8:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
   9:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** /*
  10:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  12:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   documentation, and that the name of the author not be used in
GAS LISTING  			page 16


  18:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  21:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** */
  30:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  31:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #include "../../../../Common/Common.h"
  32:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  34:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #define  __INCLUDE_FROM_USB_DRIVER
  35:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** #include "../USBInterrupt.h"
  36:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  37:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** void USB_INT_DisableAllInterrupts(void)
  38:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
 317               	 .loc 1 38 0
 318               	 .cfi_startproc
 319               	 
 320               	 
 321               	 
 322               	.L__stack_usage =0
  39:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  40:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBCON &= ~((1 << VBUSTE) | (1 << IDTE));
  41:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#elif defined(USB_SERIES_4_AVR)
  42:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBCON &= ~(1 << VBUSTE);
  43:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  44:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  45:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
  46:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	OTGIEN  = 0;
  47:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  48:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  49:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
  50:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UHIEN   = 0;
  51:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  52:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  53:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  54:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UDIEN   = 0;
 323               	 .loc 1 54 0
 324 0000 1092 E200 	 sts 226,__zero_reg__
 325 0004 0895      	 ret
 326               	 .cfi_endproc
 327               	.LFE80:
 329               	.global USB_INT_ClearAllInterrupts
 331               	USB_INT_ClearAllInterrupts:
 332               	.LFB81:
  55:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  56:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
  57:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  58:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** void USB_INT_ClearAllInterrupts(void)
  59:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
 333               	 .loc 1 59 0
GAS LISTING  			page 17


 334               	 .cfi_startproc
 335               	 
 336               	 
 337               	 
 338               	.L__stack_usage =0
  60:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  61:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	USBINT = 0;
  62:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  63:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  64:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
  65:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	OTGINT = 0;
  66:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  67:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  68:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
  69:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UHINT  = 0;
  70:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  71:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  72:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  73:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	UDINT  = 0;
 339               	 .loc 1 73 0
 340 0006 1092 E100 	 sts 225,__zero_reg__
 341 000a 0895      	 ret
 342               	 .cfi_endproc
 343               	.LFE81:
 345               	.global __vector_11
 347               	__vector_11:
 348               	.LFB82:
  74:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  75:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
  76:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  77:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** ISR(USB_GEN_vect, ISR_BLOCK)
  78:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** {
 349               	 .loc 1 78 0
 350               	 .cfi_startproc
 351 000c 1F92      	 push r1
 352               	.LCFI0:
 353               	 .cfi_def_cfa_offset 3
 354               	 .cfi_offset 1,-2
 355 000e 0F92      	 push r0
 356               	.LCFI1:
 357               	 .cfi_def_cfa_offset 4
 358               	 .cfi_offset 0,-3
 359 0010 0FB6      	 in r0,__SREG__
 360 0012 0F92      	 push r0
 361 0014 1124      	 clr __zero_reg__
 362 0016 2F93      	 push r18
 363               	.LCFI2:
 364               	 .cfi_def_cfa_offset 5
 365               	 .cfi_offset 18,-4
 366 0018 3F93      	 push r19
 367               	.LCFI3:
 368               	 .cfi_def_cfa_offset 6
 369               	 .cfi_offset 19,-5
 370 001a 4F93      	 push r20
 371               	.LCFI4:
 372               	 .cfi_def_cfa_offset 7
 373               	 .cfi_offset 20,-6
GAS LISTING  			page 18


 374 001c 5F93      	 push r21
 375               	.LCFI5:
 376               	 .cfi_def_cfa_offset 8
 377               	 .cfi_offset 21,-7
 378 001e 6F93      	 push r22
 379               	.LCFI6:
 380               	 .cfi_def_cfa_offset 9
 381               	 .cfi_offset 22,-8
 382 0020 7F93      	 push r23
 383               	.LCFI7:
 384               	 .cfi_def_cfa_offset 10
 385               	 .cfi_offset 23,-9
 386 0022 8F93      	 push r24
 387               	.LCFI8:
 388               	 .cfi_def_cfa_offset 11
 389               	 .cfi_offset 24,-10
 390 0024 9F93      	 push r25
 391               	.LCFI9:
 392               	 .cfi_def_cfa_offset 12
 393               	 .cfi_offset 25,-11
 394 0026 AF93      	 push r26
 395               	.LCFI10:
 396               	 .cfi_def_cfa_offset 13
 397               	 .cfi_offset 26,-12
 398 0028 BF93      	 push r27
 399               	.LCFI11:
 400               	 .cfi_def_cfa_offset 14
 401               	 .cfi_offset 27,-13
 402 002a EF93      	 push r30
 403               	.LCFI12:
 404               	 .cfi_def_cfa_offset 15
 405               	 .cfi_offset 30,-14
 406 002c FF93      	 push r31
 407               	.LCFI13:
 408               	 .cfi_def_cfa_offset 16
 409               	 .cfi_offset 31,-15
 410               	 
 411               	 
 412               	 
 413               	.L__stack_usage =15
 414               	.LVL0:
 415               	.LBB56:
 416               	.LBB57:
 417               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software and its documentation for any purpose is hereby granted
GAS LISTING  			page 19


  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \brief USB Controller Interrupt definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  This file contains definitions required for the correct handling of low level USB service routi
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  from the USB controller.
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h ****  */
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #ifndef __USBINTERRUPT_AVR8_H__
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** #define __USBINTERRUPT_AVR8_H__
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Includes: */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#include "../../../../Common/Common.h"
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if defined(__cplusplus)
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			extern "C" {
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Preprocessor Checks: */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		#endif
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	/* Private Interface - For use in library only: */
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 	#if !defined(__DOXYGEN__)
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Enums: */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			enum USB_Interrupts_t
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || def
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBUSTI  = 0,
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__))
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_IDTI    = 1,
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__))
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_WAKEUPI = 2,
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SUSPI   = 3,
GAS LISTING  			page 20


  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_EORSTI  = 4,
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SOFI    = 5,
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RXSTPI  = 6,
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#if (defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__))
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_HSOFI   = 7,
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DCONNI  = 8,
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_DDISCI  = 9,
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_RSTI    = 10,
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_BCERRI  = 11,
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_VBERRI  = 12,
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				USB_INT_SRPI    = 13,
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			};
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 		/* Inline Functions: */
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Enable(const uint8_t Interrupt)
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << VBUSTE);
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON |= (1 << IDTE);
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << EORSTE);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SOFE);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX |= (1 << RXSTPE);
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << HSOFE);
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DCONNE);
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << DDISCE);
GAS LISTING  			page 21


 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  |= (1 << RSTE);
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << BCERRE);
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << VBERRE);
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN |= (1 << SRPE);
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Disable(const uint8_t Interrupt)
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << VBUSTE);
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBCON &= ~(1 << IDTE);
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << WAKEUPE);
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SUSPE);
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << EORSTE);
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SOFE);
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEIENX &= ~(1 << RXSTPE);
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << HSOFE);
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DCONNE);
GAS LISTING  			page 22


 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << DDISCE);
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHIEN  &= ~(1 << RSTE);
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << BCERRE);
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << VBERRE);
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGIEN &= ~(1 << SRPE);
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt) ATTR_ALWAYS_INLINE;
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline void USB_INT_Clear(const uint8_t Interrupt)
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << VBUSTI);
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						USBINT &= ~(1 << IDTI);
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << WAKEUPI);
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SUSPI);
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << EORSTI);
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SOFI);
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UEINTX &= ~(1 << RXSTPI);
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << HSOFI);
GAS LISTING  			page 23


 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << DCONNI);
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << DDISCI);
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UHINT  &= ~(1 << RSTI);
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << BCERRI);
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << VBERRI);
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						OTGINT &= ~(1 << SRPI);
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						break;
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_IsEnabled(const uint8_t Interrupt) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSE
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_IsEnabled(const uint8_t Interrupt)
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBCON & (1 << VBUSTE));
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBCON & (1 << IDTE));
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << WAKEUPE));
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SUSPE));
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << EORSTE));
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SOFE));
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RXSTPI:
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UEIENX & (1 << RXSTPE));
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_HOST)
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_HSOFI:
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << HSOFE));
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DCONNI:
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << DCONNE));
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_DDISCI:
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << DDISCE));
GAS LISTING  			page 24


 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_RSTI:
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UHIEN  & (1 << RSTE));
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_BCERRI:
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << BCERRE));
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBERRI:
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << VBERRE));
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SRPI:
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (OTGIEN & (1 << SRPE));
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					default:
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return false;
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				}
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			}
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_HasOccurred(const uint8_t Interrupt) ATTR_ALWAYS_INLINE ATTR_WARN_UNU
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			static inline bool USB_INT_HasOccurred(const uint8_t Interrupt)
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 			{
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				switch (Interrupt)
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 				{
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if (defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_VBUSTI:
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBINT & (1 << VBUSTI));
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_BOTH)
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_IDTI:
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (USBINT & (1 << IDTI));
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#endif
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					#if defined(USB_CAN_BE_DEVICE)
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_WAKEUPI:
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << WAKEUPI));
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SUSPI:
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << SUSPI));
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_EORSTI:
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << EORSTI));
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 					case USB_INT_SOFI:
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << SOFI));
 418               	 .loc 2 334 0
 419 002e 8091 E100 	 lds r24,225
 420               	.LBE57:
 421               	.LBE56:
  79:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_DEVICE)
  80:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if !defined(NO_SOF_EVENTS)
  81:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SOFI) && USB_INT_IsEnabled(USB_INT_SOFI))
 422               	 .loc 1 81 0
 423 0032 82FF      	 sbrs r24,2
 424 0034 00C0      	 rjmp .L4
 425               	.LVL1:
 426               	.LBB58:
 427               	.LBB59:
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SOFE));
 428               	 .loc 2 288 0
 429 0036 8091 E200 	 lds r24,226
 430               	.LBE59:
 431               	.LBE58:
 432               	 .loc 1 81 0
 433 003a 82FF      	 sbrs r24,2
 434 003c 00C0      	 rjmp .L4
GAS LISTING  			page 25


 435               	.LVL2:
 436               	.LBB60:
 437               	.LBB61:
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SOFI);
 438               	 .loc 2 233 0
 439 003e 8091 E100 	 lds r24,225
 440 0042 8B7F      	 andi r24,lo8(-5)
 441 0044 8093 E100 	 sts 225,r24
 442               	.LBE61:
 443               	.LBE60:
  82:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
  83:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SOFI);
  84:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  85:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_StartOfFrame();
 444               	 .loc 1 85 0
 445 0048 0E94 0000 	 call EVENT_USB_Device_StartOfFrame
 446               	.LVL3:
 447               	.L4:
 448               	.LBB62:
 449               	.LBB63:
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << SUSPI));
 450               	 .loc 2 330 0
 451 004c 8091 E100 	 lds r24,225
 452               	.LBE63:
 453               	.LBE62:
  86:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
  87:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
  88:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  89:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
  90:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_VBUSTI) && USB_INT_IsEnabled(USB_INT_VBUSTI))
  91:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
  92:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_VBUSTI);
  93:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
  94:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_VBUS_GetStatus())
  95:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
  96:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			if (!(USB_Options & USB_OPT_MANUAL_PLL))
  97:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			{
  98:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 				USB_PLL_On();
  99:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 				while (!(USB_PLL_IsReady()));
 100:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			}
 101:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 102:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_DeviceState = DEVICE_STATE_Powered;
 103:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Connect();
 104:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 105:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		else
 106:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
 107:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			if (!(USB_Options & USB_OPT_MANUAL_PLL))
 108:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			  USB_PLL_Off();
 109:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 110:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_DeviceState = DEVICE_STATE_Unattached;
 111:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			EVENT_USB_Device_Disconnect();
 112:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 113:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 114:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 115:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 116:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SUSPI) && USB_INT_IsEnabled(USB_INT_SUSPI))
 454               	 .loc 1 116 0
GAS LISTING  			page 26


 455 0050 80FF      	 sbrs r24,0
 456 0052 00C0      	 rjmp .L5
 457               	.LVL4:
 458               	.LBB64:
 459               	.LBB65:
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << SUSPE));
 460               	 .loc 2 284 0
 461 0054 8091 E200 	 lds r24,226
 462               	.LBE65:
 463               	.LBE64:
 464               	 .loc 1 116 0
 465 0058 80FF      	 sbrs r24,0
 466 005a 00C0      	 rjmp .L5
 467               	.LVL5:
 468               	.LBB66:
 469               	.LBB67:
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SUSPE);
 470               	 .loc 2 167 0
 471 005c 8091 E200 	 lds r24,226
 472 0060 8E7F      	 andi r24,lo8(-2)
 473 0062 8093 E200 	 sts 226,r24
 474               	.LVL6:
 475               	.LBE67:
 476               	.LBE66:
 477               	.LBB68:
 478               	.LBB69:
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 479               	 .loc 2 104 0
 480 0066 8091 E200 	 lds r24,226
 481 006a 8061      	 ori r24,lo8(16)
 482 006c 8093 E200 	 sts 226,r24
 483               	.LBE69:
 484               	.LBE68:
 485               	.LBB70:
 486               	.LBB71:
 487               	 .file 3 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   The author disclaims all warranties with regard to this
GAS LISTING  			page 27


  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \copydetails Group_USBManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** /** \ingroup Group_USBManagement
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \defgroup Group_USBManagement_AVR8 USB Interface Management (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  \brief USB Controller definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  Functions, macros, variables, enums and types related to the setup and management of the USB in
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #ifndef __USBCONTROLLER_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** #define __USBCONTROLLER_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBMode.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../Events.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBTask.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#include "../USBInterrupt.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_HOST) || defined(__DOXYGEN__)
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Host.h"
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../OTG.h"
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Pipe.h"
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../HostStandardReq.h"
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../PipeStream.h"
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(USB_CAN_BE_DEVICE) || defined(__DOXYGEN__)
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Device.h"
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../Endpoint.h"
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../DeviceStandardReq.h"
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#include "../EndpointStream.h"
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if defined(__cplusplus)
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			extern "C" {
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Preprocessor Checks and Defines: */
GAS LISTING  			page 28


  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(F_USB)
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error F_USB is not defined. You must define F_USB to the frequency of the unprescaled USB contr
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if (F_USB == 8000000)
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                0
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__)  || defined(__AVR_AT90USB1286__))
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB647__)  || defined(__AVR_AT90USB1287__))
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP1) | (1 << PLLP0))
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#elif (F_USB == 16000000)
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if (defined(__AVR_AT90USB82__) || defined(__AVR_AT90USB162__) || \
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega8U2__) || defined(__AVR_ATmega16U2__) || \
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			     defined(__AVR_ATmega32U2__))
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PLLP0)
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_ATmega16U4__) || defined(__AVR_ATmega32U4__))
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                (1 << PINDIV)
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB646__) || defined(__AVR_AT90USB647__))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP1))
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif (defined(__AVR_AT90USB1286__) || defined(__AVR_AT90USB1287__))
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_PLL_PSC                ((1 << PLLP2) | (1 << PLLP0))
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#if !defined(USB_PLL_PSC)
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#error No PLL prescale value available for chosen F_USB value and AVR model.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** \name USB Controller Option Masks */
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@{
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator disable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be disabled and the AVR's VCC level used for the data pads.
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_DISABLED               (1 << 1)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Regulator enable option mask for \ref USB_Init(). This indicates that the internal 3.3V USB 
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  regulator should be enabled to regulate the data pin voltages from the VBUS level down to a 
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the range allowable by the USB standard.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_ENABLED                (0 << 1)
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
GAS LISTING  			page 29


 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Option mask for \ref USB_Init() to keep regulator enabled at all times. Indicates that \ref 
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  should not disable the regulator as it would otherwise. Has no effect if regulator is disabl
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \ref USB_OPT_REG_DISABLED.
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note See USB AVR data sheet for more information on the internal pad regulator.
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_REG_KEEP_ENABLED           (1 << 3)
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Manual PLL control option mask for \ref USB_Init(). This indicates to the library that the u
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will take full responsibility for controlling the AVR's PLL (used to generate the high frequ
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_MANUAL_PLL                 (1 << 2)
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Automatic PLL control option mask for \ref USB_Init(). This indicates to the library that th
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  take full responsibility for controlling the AVR's PLL (used to generate the high frequency 
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the USB controller requires) and ensuring that it is locked at the correct frequency fo
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#define USB_OPT_AUTO_PLL                   (0 << 2)
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			//@}
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USB_STREAM_TIMEOUT_MS) || defined(__DOXYGEN__)
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Constant for the maximum software timeout period of the USB data stream transfer functions
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  (both control and standard) when in either device or host mode. If the next packet of a str
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  is not received or acknowledged within this time period, the stream function will fail.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  This value may be overridden in the user project makefile as the value of the
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_STREAM_TIMEOUT_MS token, and passed to the compiler using the -D switch.
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_STREAM_TIMEOUT_MS       100
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Determines if the VBUS line is currently high (i.e. the USB host is supplying power).
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note This function is not available on some AVR models which do not support hardware VBUS 
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \return Boolean \c true if the VBUS line is currently detecting power from a host, \c false
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static inline bool USB_VBUS_GetStatus(void)
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				{
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 					return ((USBSTA & (1 << VBUS)) ? true : false);
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				}
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Detaches the device from the USB bus. This has the effect of removing the device from any
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attached host, ceasing USB communications. If no host is present, this prevents any host fro
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enumerating the device once attached until \ref USB_Attach() is called.
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void) ATTR_ALWAYS_INLINE;
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Detach(void)
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  |=  (1 << DETACH);
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
GAS LISTING  			page 30


 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Attaches the device to the USB bus. This announces the device's presence to any attached
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  USB host, starting the enumeration process. If no host is present, attaching the device
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  will allow for enumeration once a host is connected to the device.
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  This is inexplicably also required for proper operation while in host mode, to enable the
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  attachment of a device to the host. This is despite the bit being located in the device-mode
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  register and despite the datasheet making no mention of its requirement in host mode.
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void) ATTR_ALWAYS_INLINE;
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_Attach(void)
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UDCON  &= ~(1 << DETACH);
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Main function to initialize and start the USB interface. Once active, the USB interface will
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  allow for device connection to a host when in device mode, or for device enumeration while i
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  host mode.
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  As the USB library relies on interrupts for the device and host mode enumeration processes,
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  the user must enable global interrupts before or shortly after this function is called. In
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  device mode, interrupts must be enabled within 500ms of this function being called to ensure
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  that the host does not time out whilst enumerating the device. In host mode, interrupts may 
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  enabled at the application's leisure however enumeration will not begin of an attached devic
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  until after this has occurred.
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  Calling this function when the USB interface is already initialized will cause a complete US
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  interface reset and re-enumeration.
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Mode     Mask indicating what mode the USB interface is to be initialized to, a v
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      from the \ref USB_Modes_t enum.
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      \note This parameter does not exist on devices with only one supported U
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                            mode (device or host).
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \param[in] Options  Mask indicating the options which should be used when initializing the U
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      interface to control the USB interface's behavior. This should be compri
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      a \c USB_OPT_REG_* mask to control the regulator, a \c USB_OPT_*_PLL mas
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      PLL, and a \c USB_DEVICE_OPT_* mask (when the device mode is enabled) to
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *                      mode speed.
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only device or host mode is require
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the mode can be statically set in the project makefile by defining the token \c USB_DE
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        (for device mode) or \c USB_HOST_ONLY (for host mode), passing the token to the compil
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        via the -D switch. If the mode is statically set, this parameter does not exist in the
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        function prototype.
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note To reduce the FLASH requirements of the library if only fixed settings are required,
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        the options may be set statically in the same manner as the mode (see the Mode paramet
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        this function). To statically set the USB options, pass in the \c USE_STATIC_OPTIONS t
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        defined to the appropriate options masks. When the options are statically set, this
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        parameter does not exist in the function prototype.
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        \n\n
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \note The mode parameter does not exist on devices where only one mode is possible, such as 
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *        AVR models which only implement the USB device mode in hardware.
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *
GAS LISTING  			page 31


 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  \see \ref Group_Device for the \c USB_DEVICE_OPT_* masks.
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Init(
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Mode
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if (defined(USB_CAN_BE_BOTH) && !defined(USE_STATIC_OPTIONS)) || defined(__DOXYG
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               ,
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #elif (!defined(USB_CAN_BE_BOTH) && defined(USE_STATIC_OPTIONS))
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               void
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               const uint8_t Options
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               #endif
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			               );
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Shuts down the USB interface. This turns off the USB interface after deallocating all USB FI
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  memory, endpoints and pipes. When turned off, no USB functionality can be used until the int
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  is restarted with the \ref USB_Init() function.
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_Disable(void);
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			/** Resets the interface, when already initialized. This will re-enumerate the device if already
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 *  to a host, or re-enumerate an already attached device when in host mode.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			 */
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			void USB_ResetInterface(void);
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Global Variables: */
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_CAN_BE_BOTH) || defined(__DOXYGEN__)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the mode that the USB interface is currently initialized to, a value from the
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \ref USB_Modes_t enum.
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \note When the controller is initialized into UID auto-detection mode, this variable will h
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        currently selected USB mode (i.e. \ref USB_MODE_Device or \ref USB_MODE_Host). If the
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        is fixed into a specific mode (either through the \c USB_DEVICE_ONLY or \c USB_HOST_O
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        options, or a limitation of the USB controller in the chosen device model) this will 
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        a constant of the appropriate value and will never evaluate to \ref USB_MODE_None eve
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *        USB interface is not initialized.
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_CurrentMode;
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_HOST)
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Host
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USB_CAN_BE_DEVICE)
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_CurrentMode USB_MODE_Device
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if !defined(USE_STATIC_OPTIONS) || defined(__DOXYGEN__)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				/** Indicates the current USB options that the USB interface was initialized with when \ref USB
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  was called. This value will be one of the \c USB_MODE_* masks defined elsewhere in this mod
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *  \attention This variable should be treated as read-only in the user application, and never 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 *             changed in value.
GAS LISTING  			page 32


 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				 */
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				extern volatile uint8_t USB_Options;
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#elif defined(USE_STATIC_OPTIONS)
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#define USB_Options USE_STATIC_OPTIONS
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	/* Private Interface - For use in library only: */
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 	#if !defined(__DOXYGEN__)
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Function Prototypes: */
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(__INCLUDE_FROM_USB_CONTROLLER_C)
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_DEVICE)
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Device(void);
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#if defined(USB_CAN_BE_HOST)
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				static void USB_Init_Host(void);
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				#endif
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 		/* Inline Functions: */
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void) ATTR_ALWAYS_INLINE;
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_On(void)
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void) ATTR_ALWAYS_INLINE;
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_PLL_Off(void)
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline bool USB_PLL_IsReady(void)
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				return ((PLLCSR & (1 << PLOCK)) ? true : false);
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void) ATTR_ALWAYS_INLINE;
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_On(void)
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON |=  (1 << UVREGE);
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  &= ~(1 << REGDIS);
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void) ATTR_ALWAYS_INLINE;
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_REG_Off(void)
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				UHWCON &= ~(1 << UVREGE);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#else
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				REGCR  |=  (1 << REGDIS);
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
GAS LISTING  			page 33


 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR)
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void) ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_On(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << OTGPADE);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void) ATTR_ALWAYS_INLINE;
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_OTGPAD_Off(void)
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << OTGPADE);
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			#endif
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void) ATTR_ALWAYS_INLINE;
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Freeze(void)
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON |=  (1 << FRZCLK);
 488               	 .loc 3 383 0
 489 0070 8091 D800 	 lds r24,216
 490 0074 8062      	 ori r24,lo8(32)
 491 0076 8093 D800 	 sts 216,r24
 492               	.LBE71:
 493               	.LBE70:
 494               	.LBB72:
 495               	.LBB73:
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = 0;
 496               	 .loc 3 337 0
 497 007a 19BC      	 out 0x29,__zero_reg__
 498               	.LBE73:
 499               	.LBE72:
 117:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 118:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SUSPI);
 119:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_WAKEUPI);
 120:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 121:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CLK_Freeze();
 122:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 123:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 124:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_PLL_Off();
 125:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 126:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
 127:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState = DEVICE_STATE_Unattached;
 500               	 .loc 1 127 0
 501 007c 1092 0000 	 sts USB_DeviceState,__zero_reg__
 128:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Disconnect();
 502               	 .loc 1 128 0
 503 0080 0E94 0000 	 call EVENT_USB_Device_Disconnect
 504               	.LVL7:
 505               	.L5:
 506               	.LBB74:
 507               	.LBB75:
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << WAKEUPI));
 508               	 .loc 2 328 0
 509 0084 8091 E100 	 lds r24,225
 510               	.LBE75:
GAS LISTING  			page 34


 511               	.LBE74:
 129:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#else
 130:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState = DEVICE_STATE_Suspended;
 131:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Suspend();
 132:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 133:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 134:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 135:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_WAKEUPI) && USB_INT_IsEnabled(USB_INT_WAKEUPI))
 512               	 .loc 1 135 0
 513 0088 84FF      	 sbrs r24,4
 514 008a 00C0      	 rjmp .L6
 515               	.LVL8:
 516               	.LBB76:
 517               	.LBB77:
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << WAKEUPE));
 518               	 .loc 2 282 0
 519 008c 8091 E200 	 lds r24,226
 520               	.LBE77:
 521               	.LBE76:
 522               	 .loc 1 135 0
 523 0090 84FF      	 sbrs r24,4
 524 0092 00C0      	 rjmp .L6
 525               	.LBB78:
 526               	.LBB79:
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = USB_PLL_PSC;
 527               	 .loc 3 330 0
 528 0094 84E0      	 ldi r24,lo8(4)
 529 0096 89BD      	 out 0x29,r24
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				PLLCSR = (USB_PLL_PSC | (1 << PLLE));
 530               	 .loc 3 331 0
 531 0098 86E0      	 ldi r24,lo8(6)
 532 009a 89BD      	 out 0x29,r24
 533               	.L8:
 534               	.LBE79:
 535               	.LBE78:
 136:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 137:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (!(USB_Options & USB_OPT_MANUAL_PLL))
 138:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		{
 139:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			USB_PLL_On();
 140:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 			while (!(USB_PLL_IsReady()));
 536               	 .loc 1 140 0 discriminator 1
 537 009c 09B4      	 in __tmp_reg__,0x29
 538 009e 00FE      	 sbrs __tmp_reg__,0
 539 00a0 00C0      	 rjmp .L8
 540               	.LBB80:
 541               	.LBB81:
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			}
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void) ATTR_ALWAYS_INLINE;
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			static inline void USB_CLK_Unfreeze(void)
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 			{
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/USBController_AVR8.h **** 				USBCON &= ~(1 << FRZCLK);
 542               	 .loc 3 389 0
 543 00a2 8091 D800 	 lds r24,216
 544 00a6 8F7D      	 andi r24,lo8(-33)
 545 00a8 8093 D800 	 sts 216,r24
 546               	.LVL9:
GAS LISTING  			page 35


 547               	.LBE81:
 548               	.LBE80:
 549               	.LBB82:
 550               	.LBB83:
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << WAKEUPI);
 551               	 .loc 2 224 0
 552 00ac 8091 E100 	 lds r24,225
 553 00b0 8F7E      	 andi r24,lo8(-17)
 554 00b2 8093 E100 	 sts 225,r24
 555               	.LVL10:
 556               	.LBE83:
 557               	.LBE82:
 558               	.LBB84:
 559               	.LBB85:
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << WAKEUPE);
 560               	 .loc 2 164 0
 561 00b6 8091 E200 	 lds r24,226
 562 00ba 8F7E      	 andi r24,lo8(-17)
 563 00bc 8093 E200 	 sts 226,r24
 564               	.LVL11:
 565               	.LBE85:
 566               	.LBE84:
 567               	.LBB86:
 568               	.LBB87:
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << SUSPE);
 569               	 .loc 2 107 0
 570 00c0 8091 E200 	 lds r24,226
 571 00c4 8160      	 ori r24,lo8(1)
 572 00c6 8093 E200 	 sts 226,r24
 573               	.LBE87:
 574               	.LBE86:
 141:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		}
 142:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 143:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CLK_Unfreeze();
 144:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 145:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_WAKEUPI);
 146:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 147:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_WAKEUPI);
 148:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_SUSPI);
 149:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 150:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_Device_ConfigurationNumber)
 575               	 .loc 1 150 0
 576 00ca 8091 0000 	 lds r24,USB_Device_ConfigurationNumber
 577 00ce 8823      	 tst r24
 578 00d0 01F0      	 breq .L9
 151:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_DeviceState = DEVICE_STATE_Configured;
 579               	 .loc 1 151 0
 580 00d2 84E0      	 ldi r24,lo8(4)
 581 00d4 00C0      	 rjmp .L11
 582               	.L9:
 583               	.LBB88:
 584               	.LBB89:
 585               	 .file 4 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
GAS LISTING  			page 36


   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
GAS LISTING  			page 37


  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
GAS LISTING  			page 38


 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
GAS LISTING  			page 39


 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				{
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				}
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				/** Disables the device mode Start Of Frame events. When disabled, this stops the firing of the
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event when enumerated in device mode.
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				 */
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void) ATTR_ALWAYS_INLINE;
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void)
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				{
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Disable(USB_INT_SOFI);
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				}
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	/* Private Interface - For use in library only: */
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 	#if !defined(__DOXYGEN__)
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_DEVICE_OPT_LOWSPEED)
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void) ATTR_ALWAYS_INLINE;
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void)
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDCON |=  (1 << LSM);
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void)
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDCON &= ~(1 << LSM);
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			#endif
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				(void)Address;
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				UDADDR |= (1 << ADDEN);
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			}
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void)
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 			{
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Device_AVR8.h **** 				return (UDADDR & (1 << ADDEN));
 586               	 .loc 4 227 0
 587 00d6 8091 E300 	 lds r24,227
 588               	.LBE89:
 589               	.LBE88:
 152:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		else
GAS LISTING  			page 40


 153:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Addressed : DEVICE_STATE_Powered;
 590               	 .loc 1 153 0
 591 00da 87FF      	 sbrs r24,7
 592 00dc 00C0      	 rjmp .L13
 593 00de 83E0      	 ldi r24,lo8(3)
 594 00e0 00C0      	 rjmp .L11
 595               	.L13:
 596 00e2 81E0      	 ldi r24,lo8(1)
 597               	.L11:
 598               	 .loc 1 153 0 is_stmt 0 discriminator 3
 599 00e4 8093 0000 	 sts USB_DeviceState,r24
 154:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 155:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(USB_SERIES_2_AVR) && !defined(NO_LIMITED_CONTROLLER_CONNECT)
 156:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Connect();
 600               	 .loc 1 156 0 is_stmt 1 discriminator 3
 601 00e8 0E94 0000 	 call EVENT_USB_Device_Connect
 602               	.LVL12:
 603               	.L6:
 604               	.LBB90:
 605               	.LBB91:
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDINT  & (1 << EORSTI));
 606               	 .loc 2 332 0
 607 00ec 8091 E100 	 lds r24,225
 608               	.LBE91:
 609               	.LBE90:
 157:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#else
 158:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_WakeUp();
 159:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 160:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 161:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 162:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_EORSTI) && USB_INT_IsEnabled(USB_INT_EORSTI))
 610               	 .loc 1 162 0
 611 00f0 83FF      	 sbrs r24,3
 612 00f2 00C0      	 rjmp .L3
 613               	.LVL13:
 614               	.LBB92:
 615               	.LBB93:
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						return (UDIEN  & (1 << EORSTE));
 616               	 .loc 2 286 0
 617 00f4 8091 E200 	 lds r24,226
 618               	.LBE93:
 619               	.LBE92:
 620               	 .loc 1 162 0
 621 00f8 83FF      	 sbrs r24,3
 622 00fa 00C0      	 rjmp .L3
 623               	.LVL14:
 624               	.LBB94:
 625               	.LBB95:
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << EORSTI);
 626               	 .loc 2 230 0
 627 00fc 8091 E100 	 lds r24,225
 628 0100 877F      	 andi r24,lo8(-9)
 629 0102 8093 E100 	 sts 225,r24
 630               	.LBE95:
 631               	.LBE94:
 163:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 164:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_EORSTI);
GAS LISTING  			page 41


 165:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 166:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_DeviceState                = DEVICE_STATE_Default;
 632               	 .loc 1 166 0
 633 0106 82E0      	 ldi r24,lo8(2)
 634 0108 8093 0000 	 sts USB_DeviceState,r24
 167:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Device_ConfigurationNumber = 0;
 635               	 .loc 1 167 0
 636 010c 1092 0000 	 sts USB_Device_ConfigurationNumber,__zero_reg__
 637               	.LVL15:
 638               	.LBB96:
 639               	.LBB97:
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDINT  &= ~(1 << SUSPI);
 640               	 .loc 2 227 0
 641 0110 8091 E100 	 lds r24,225
 642 0114 8E7F      	 andi r24,lo8(-2)
 643 0116 8093 E100 	 sts 225,r24
 644               	.LVL16:
 645               	.LBE97:
 646               	.LBE96:
 647               	.LBB98:
 648               	.LBB99:
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  &= ~(1 << SUSPE);
 649               	 .loc 2 167 0
 650 011a 8091 E200 	 lds r24,226
 651 011e 8E7F      	 andi r24,lo8(-2)
 652 0120 8093 E200 	 sts 226,r24
 653               	.LVL17:
 654               	.LBE99:
 655               	.LBE98:
 656               	.LBB100:
 657               	.LBB101:
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/USBInterrupt_AVR8.h **** 						UDIEN  |= (1 << WAKEUPE);
 658               	 .loc 2 104 0
 659 0124 8091 E200 	 lds r24,226
 660 0128 8061      	 ori r24,lo8(16)
 661 012a 8093 E200 	 sts 226,r24
 662               	.LVL18:
 663               	.LBE101:
 664               	.LBE100:
 665               	.LBB102:
 666               	.LBB103:
 667               	 .file 5 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
GAS LISTING  			page 42


  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
GAS LISTING  			page 43


  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
GAS LISTING  			page 44


 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 45


 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 668               	 .loc 5 210 0
 669 012e 42E0      	 ldi r20,lo8(2)
 670 0130 60E0      	 ldi r22,0
 671 0132 80E0      	 ldi r24,0
 672 0134 0E94 0000 	 call Endpoint_ConfigureEndpoint_Prv
 673               	.LVL19:
 674               	.LBE103:
 675               	.LBE102:
 168:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 169:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SUSPI);
 170:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SUSPI);
 171:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_WAKEUPI);
 172:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 173:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		Endpoint_ConfigureEndpoint(ENDPOINT_CONTROLEP, EP_TYPE_CONTROL,
 174:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		                           USB_Device_ControlEndpointSize, 1);
 175:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 176:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#if defined(INTERRUPT_CONTROL_ENDPOINT)
 177:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_RXSTPI);
 178:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		#endif
 179:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 180:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Device_Reset();
 676               	 .loc 1 180 0
 677 0138 0E94 0000 	 call EVENT_USB_Device_Reset
 678               	.LVL20:
 679               	.L3:
 680               	 
 181:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 182:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 183:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 184:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_HOST)
 185:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if !defined(NO_SOF_EVENTS)
 186:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_HSOFI) && USB_INT_IsEnabled(USB_INT_HSOFI))
 187:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
GAS LISTING  			page 46


 188:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_HSOFI);
 189:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 190:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_StartOfFrame();
 191:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 192:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 193:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 194:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_DDISCI) && USB_INT_IsEnabled(USB_INT_DDISCI))
 195:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 196:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_DDISCI);
 197:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_DCONNI);
 198:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_DDISCI);
 199:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 200:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 201:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 202:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 203:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 204:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 205:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_VBERRI) && USB_INT_IsEnabled(USB_INT_VBERRI))
 206:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 207:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_VBERRI);
 208:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 209:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Host_VBUS_Manual_Off();
 210:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_Host_VBUS_Auto_Off();
 211:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 212:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_HostError(HOST_ERROR_VBusVoltageDip);
 213:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 214:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 215:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_HostState = HOST_STATE_Unattached;
 216:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 217:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 218:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_SRPI) && USB_INT_IsEnabled(USB_INT_SRPI))
 219:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 220:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_SRPI);
 221:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Disable(USB_INT_SRPI);
 222:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 223:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceAttached();
 224:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 225:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Enable(USB_INT_DDISCI);
 226:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 227:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_HostState = HOST_STATE_Powered;
 228:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 229:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 230:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_BCERRI) && USB_INT_IsEnabled(USB_INT_BCERRI))
 231:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 232:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_BCERRI);
 233:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 234:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceEnumerationFailed(HOST_ENUMERROR_NoDeviceDetected, 0);
 235:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_Host_DeviceUnattached();
 236:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 237:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 238:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 239:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 240:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 241:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#if defined(USB_CAN_BE_BOTH)
 242:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	if (USB_INT_HasOccurred(USB_INT_IDTI) && USB_INT_IsEnabled(USB_INT_IDTI))
 243:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	{
 244:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_INT_Clear(USB_INT_IDTI);
GAS LISTING  			page 47


 245:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 246:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_DeviceState != DEVICE_STATE_Unattached)
 247:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  EVENT_USB_Device_Disconnect();
 248:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 249:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		if (USB_HostState != HOST_STATE_Unattached)
 250:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		  EVENT_USB_Host_DeviceUnattached();
 251:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 252:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_CurrentMode = USB_GetUSBModeFromUID();
 253:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		USB_ResetInterface();
 254:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 
 255:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 		EVENT_USB_UIDChange();
 256:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	}
 257:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** 	#endif
 258:LUFA/Drivers/USB/Core/AVR8/USBInterrupt_AVR8.c **** }
 681               	 .loc 1 258 0
 682 013c FF91      	 pop r31
 683 013e EF91      	 pop r30
 684 0140 BF91      	 pop r27
 685 0142 AF91      	 pop r26
 686 0144 9F91      	 pop r25
 687 0146 8F91      	 pop r24
 688 0148 7F91      	 pop r23
 689 014a 6F91      	 pop r22
 690 014c 5F91      	 pop r21
 691 014e 4F91      	 pop r20
 692 0150 3F91      	 pop r19
 693 0152 2F91      	 pop r18
 694 0154 0F90      	 pop r0
 695 0156 0FBE      	 out __SREG__,r0
 696 0158 0F90      	 pop r0
 697 015a 1F90      	 pop r1
 698 015c 1895      	 reti
 699               	 .cfi_endproc
 700               	.LFE82:
 702               	.Letext0:
 703               	 .file 6 "/usr/lib/avr/include/stdint.h"
 704               	 .file 7 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../Device.h"
 705               	 .file 8 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../DeviceStandardReq.h"
 706               	 .file 9 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../AVR8/../USBTask.h"
 707               	 .file 10 "LUFA/Drivers/USB/Core/AVR8/../AVR8/../Events.h"
GAS LISTING  			page 48


DEFINED SYMBOLS
                            *ABS*:0000000000000000 USBInterrupt_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:314    .text:0000000000000000 USB_INT_DisableAllInterrupts
    {standard input}:331    .text:0000000000000006 USB_INT_ClearAllInterrupts
    {standard input}:347    .text:000000000000000c __vector_11
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
EVENT_USB_Device_StartOfFrame
USB_DeviceState
EVENT_USB_Device_Disconnect
USB_Device_ConfigurationNumber
EVENT_USB_Device_Connect
Endpoint_ConfigureEndpoint_Prv
EVENT_USB_Device_Reset
GAS LISTING  			page 1


   1               	 .file "ConfigDescriptors.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.a885b549cd95d2e,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\262\2414+\0033#;\0233\220U\306\300"
  10      6062 C006 
  10      B2A1 342B 
  10      0333 233B 
  10      1333 9055 
  11 0017 A418 8114 	 .string "\244\030\201\024\023?\232"
  11      133F 9A00 
  12 001f 333F 339A 	 .string "3?3\232"
  12      00
  13 0024 5011 88C2 	 .string "P\021\210\302\020e\006R,\350\34612\200\035\001"
  13      1065 0652 
  13      2CE8 E631 
  13      3280 1D01 
  13      00
  14 0035 7764 0673 	 .ascii "wd\006s"
  15               	 .text
  16               	 .section .gnu.lto_.inline.a885b549cd95d2e,"",@progbits
  17 0000 789C 6362 	 .string "x\234cb`b\300\006\216@iV\006\006\036nF&FF\006\006f\006\0060\311\306\363 \226\201\343\203\036\023\003\343\013v\026\b\t\"8\300L\016\220.F\006\336K@-L<\253{9\0308\236\237a\004[\302\314\003\024\232\311>\223\235\211A\340\rHZp\335'.\006\316\216KH\322-\354-\354\314\f|\342@&k\207:\003{\207:X\216\205\027(?\301\017\004\221\231\fb=\314 sn\236bg\340\336\273\204\t\325\032VAF\006\306\t~\f"
  17      6062 C006 
  17      8E40 6956 
  17      0606 1E6E 
  17      4626 4646 
  18 0093 5CB5 1EE1 	 .ascii "\\\265\036\341"
  19               	 .text
  20               	 .section .gnu.lto_.pureconst.a885b549cd95d2e,"",@progbits
  21 0000 789C 6362 	 .string "x\234cb`b\340f\200"
  21      6062 E066 
  21      8000 
  22 000a 5606 2946 	 .string "V\006)FK&)fI\026)"
  22      4B26 2966 
  22      4916 2900 
  23 0016 04FF 00   	 .string "\004\377"
  24 0019 BF        	 .ascii "\277"
  25               	 .text
  26               	 .section .gnu.lto_USB_GetNextDescriptor.a885b549cd95d2e,"",@progbits
  27 0000 789C 6552 	 .ascii "x\234eRMk\024A\020\255\327=\263;\273k4x\363\"\3421~\f"
  27      4D6B 1441 
  27      10AD D73D 
  27      B33B BB6B 
  27      3478 F322 
  28 0018 FA07 8249 	 .string "\372\007\202I\020\214\336BP\320\233\231\230\035\226$\314\252\220\\\2667c\300\334V\023\021\324K\210\213x\220\b\336D\304\203\202{P\b\344\242x\230\213\202\037\210x\025\\\253f\246\263\270i\230\352\2367\257^\275\252\036E\212\372\327I~\326\030\036\346\035.A\265\336\0235=\245\364\266O\246\354\2748Hf\217\206\223\301\016 \007\0025\224v\320\270\004\321\300aZ7\346v\362\346\321o,\233\304\264\314\337n\0035p\271c\240i\320E~\301`\272\251>\013\233\352U\322\355~Z\275\365m|\037h\n\353,\2461\017r\250\006\355rp\n9\\d\030\036#nIBYBEX\003rb-\227n\030\323:\224\261I\n\363:\317Q<_\200\222]\277\243\245\347\313\177\036\236\235\302\006'\205p\356\323=\366\245Ch\361W\310}1\355\343\257YKr\217\320P\rE\2466\2151w\231\347q\246\360K);"
  28      108C DE42 
  28      50D0 9B99 
  28      981D 9624 
  28      CCAA 905C 
  29 0119 F5F2 7EC6 	 .ascii "\365\362~\306\2136\257\020\212\261\016\251\f\310\234\205R$\265"
  29      8B36 AF10 
  29      8AB1 0EA9 
GAS LISTING  			page 2


  29      0CC8 9C85 
  29      5224 B5
  30 012c B1D1 3E60 	 .ascii "\261\321>`\231\236h\017\362\314B\024E\267\234\353\275\245\327"
  30      999E 680F 
  30      F2CC 4214 
  30      45B7 9CEB 
  30      BDA5 D7
  31 013f 9F9B 2776 	 .ascii "\237\233'vX\341\216A\222\2264m\373\272CK\311\343\316\336\377"
  31      58E1 8E41 
  31      9296 346D 
  31      FBBA 434B 
  31      C9E3 CEDE 
  32 0154 4B78 96E2 	 .ascii "Kx\226\342\244]3\207\021\373\021\271\317\315\366\260U.q?\202"
  32      A45D 3387 
  32      11FB 11B9 
  32      CFCD F6B0 
  32      552E 713F 
  33 0169 C637 E32F 	 .ascii "\3067\343/\332\202\345\024\317\330\337\343\227\260x%\024\177"
  33      DA82 E514 
  33      CFD8 DFE3 
  33      97B0 7825 
  33      147F 
  34 017b 0C76 9E56 	 .ascii "\fv\236V2,\237L\245\177\220\314MUW\342g\355\2436} m$\223=\323"
  34      322C 9F4C 
  34      A57F 90CC 
  34      4D55 57E2 
  34      67ED A336 
  35 0196 CBDF D53D 	 .ascii "\313\337\325=3\211\266\250\231<Y\311Kg\353\003\201\347\240~\254"
  35      3389 B6A8 
  35      993C 59C9 
  35      4B67 EB03 
  35      81E7 A07E 
  36 01ab 2EB0 907E 	 .ascii ".\260\220~p\347+\344\232!\215\312\3375tn\362\364)\177,\252^\017"
  36      70E7 2BE4 
  36      9A21 8DCA 
  36      DF35 746E 
  36      F2F4 297F 
  37 01c3 A2BA 3F39 	 .ascii "\242\272?91\342\217\316E\001\207\331\351\352\225\261\240~9\252"
  37      31E2 8FCE 
  37      4501 87D9 
  37      E9EA 95B1 
  37      A07E 39AA 
  38 01d7 CE5F 9D8B 	 .ascii "\316_\235\213\352\307gh\377\350\265(\352A\023\325\305\340\037"
  38      EAC7 6768 
  38      FFE8 B528 
  38      EA41 13D5 
  38      C5E0 1F
  39 01ea 0C7F AFA1 	 .ascii "\f\177\257\241"
  40               	 .text
  41               	 .section .gnu.lto_USB_GetNextDescriptorOfType.a885b549cd95d2e,"",@progbits
  42 0000 789C 5D91 	 .string "x\234]\221\277K\303P\020\307\357\373^\362\232\306*\256n\316U,\376\t\325\342\344&\245E\335j*\r\301\226T\004qh\242-8(t\326\245\342\"\024u\357$\"*\202\025\377\203n.\016\316:\324Kb\252\370 w\367\356>\367\343]\004\t\372\177\226\371\333\005\321,k$\b\242\335'\362\r\001-2\244\320o%y\246\352?\021y)\025\371\263\232\220\241\303\f\243)\035\b\334\004j\b\2514\035\215u\204\345\257\305\315`8\274\352\335w.\2011\r5\220N\016H\261\005\203-$Y\b\223\257\301l:5=\257=MT\016\323\013,?\024+\301J\026!\211\233\312\027j\r.\016&6p\006\235\241=\372\364\016\275I\007\262\214\250\251\r\315\206r\240\021=\323~\257\325=ND\260\r\343\224N|f\301\300\032\234\260@p\230[\215\231\344\f\245\035(&\031HpN"
  42      BF4B C350 
  42      10C7 EFFB 
  42      5EF2 9AC6 
  42      2AAE 6ECE 
  43 00f7 1A21 6621 	 .ascii "\032!f!\336\333#\335\275\371\343\243\024\033\346\357N\013P\324"
  43      DEDB 23DD 
GAS LISTING  			page 3


  43      BDF9 E3A3 
  43      141B E6EF 
  43      4E0B 50D4 
  44 010b 7920 1479 	 .ascii "y \024y\002^\213\f\207\370:\232\212i\375g\b\316\322\202\332\346"
  44      025E 8B0C 
  44      87F8 3A9A 
  44      8A69 FD67 
  44      08CE D282 
  45 0121 A866 F3DD 	 .ascii "\250f\363\335\237\037QA(\371\367_\025\331\317{x%\177\320=G\374"
  45      9F1F 5141 
  45      28F9 F75F 
  45      15D9 CF7B 
  45      7825 7FD0 
  46 0138 FEB8 2738 	 .ascii "\376\270'8\026\3540\275\234_\312frne\307r\353\231\374\312Bf\261"
  46      16EC 30BD 
  46      9C5F CA66 
  46      726E 65C7 
  46      72EB 99FC 
  47 0150 EA5A 2CB6 	 .ascii "\352Z,\266\312\225\315\234U/\271\225\332v\325\255\317\225\350"
  47      CA95 CD9C 
  47      552F B995 
  47      DA76 D5AD 
  47      CF95 E8
  48 0163 1B49 D468 	 .ascii "\033I\324h\322"
  48      D2
  49               	 .text
  50               	 .section .gnu.lto_USB_GetNextDescriptorOfTypeBefore.a885b549cd95d2e,"",@progbits
  51 0000 789C 5D92 	 .ascii "x\234]\222\277/\004Q\020\307\347\373\336\356\333\275\343D\253"
  51      BF2F 0451 
  51      10C7 E7FB 
  51      DEEE DBBD 
  51      E344 AB
  52 0013 531F 71F1 	 .ascii "S\037q\361'\370\021\225N.wA\307\235\334f\203\354\211Fa\217\273"
  52      27F8 1195 
  52      4E2E 7741 
  52      C79D DC66 
  52      83EC 8946 
  53 002a 4443 AE45 	 .ascii "DC\256EC\024\032\241\025\205\270D\374\210 *\242RHD\242\220H\024"
  53      4314 1AA1 
  53      1585 B844 
  53      FC88 202A 
  53      A252 4844 
  54 0042 1AE6 ED73 	 .ascii "\032\346\355s\034/\33173o?3\337y\263+H\320\377\225\347\347\026"
  54      1C2F D937 
  54      336F 3F33 
  54      DF79 B32B 
  54      48D0 FF95 
  55 0059 449D 6C11 	 .ascii "D\235l\021#\210\352\025Q\311\025P\306\221\302\331\021\024\306"
  55      2388 EA15 
  55      51C9 1550 
  55      C691 C2D9 
  55      1114 C6
  56 006c ADC7 0BA2 	 .ascii "\255\307\013\242\260\331\022v\024\272&\264\341\030\3145|\217"
  56      B0D9 1276 
  56      14BA 26B4 
  56      E118 CC35 
  56      7C8F 
GAS LISTING  			page 4


  57 007e 1232 7A13 	 .ascii "\0222z\023\217\262\232\035@\037\023h^H\313v\225\203\371QD\302"
  57      8FB2 9A1D 
  57      401F 1368 
  57      5E48 CB76 
  57      9583 F951 
  58 0094 7BE2 E8E1 	 .ascii "{\342\350\341\363s\367\375d\343\036HX\230\006\331\344\203\024"
  58      F373 F7FD 
  58      64E3 1E48 
  58      5898 06D9 
  58      E483 14
  59 00a7 7B70 D9E3 	 .ascii "{p\331\343n|\2108\207\242\2117\31196\225\303\260\332\316]G52"
  59      6E7C 8838 
  59      87A2 8937 
  59      C939 3695 
  59      C3B0 DACE 
  60 00bf BC3F 2B36 	 .ascii "\274?+6\202\215\3142\302\332\362\232*\017\207\213-\343\330\204"
  60      828D CC32 
  60      C2DA F29A 
  60      2A0F 878B 
  60      2DE3 D884 
  61 00d3 CDD0 1C7D 	 .ascii "\315\320\034}\204Ka\253\017\231\207Q\366`yP>,\242KZ8\250l\255"
  61      844B 61AB 
  61      0F99 8751 
  61      F660 7950 
  61      3E2C A24B 
  62 00ec 3806 F6E0 	 .ascii "8\006\366\340\256\323Z\211Y00\002?*\240\027s\303u&\326AI\037"
  62      AED3 5A89 
  62      5930 3002 
  62      3F2A A017 
  62      73C3 7526 
  63 0104 8A49 061C 	 .ascii "\212I\006\034\316\321\240\033a9\324\307zF\307O\245\304O\212\207"
  63      CED1 A01B 
  63      6139 D4C7 
  63      7A46 C74F 
  63      A5C4 4F8A 
  64 0119 F8EF C8B3 	 .ascii "\370\357\310\263\254\\;'\251\231\332\352i#\325\324H\331\264&"
  64      AC5C 3B27 
  64      A999 DAEA 
  64      6923 D5D4 
  64      48D9 B426 
  65 012d 242B EFDF 	 .ascii "$+\357\337\275\275\302@\272\275j\030\306|\r[Z\330\324\325^\254"
  65      BDBD C240 
  65      BABD 6A18 
  65      C67C 0D5B 
  65      5AD8 D4D5 
  66 0143 9E99 E16E 	 .ascii "\236\231\341n\266O\tY(\342\351\313\350\222o\313mu\035\373\373"
  66      B64F 0959 
  66      28E2 E9CB 
  66      E892 6FCB 
  66      6D75 1DFB 
  67 0158 927F 4BE8 	 .ascii "\222\177K\350\236\313/\245\356\037\352OM\323\221\243\347|\303"
  67      9ECB 2FA5 
  67      EE1F EA4F 
  67      4DD3 91A3 
  67      E77C C3
  68 016b 9FFB F730 	 .ascii "\237\373\3670\303C}V\372\277J\016\246\007zR\375Aa6\027\024S\351"
  68      C343 7D56 
GAS LISTING  			page 5


  68      FABF 4A0E 
  68      A607 7A52 
  68      FD41 6136 
  69 0183 A1DE 54DF 	 .ascii "\241\336T\337T\220\343m2_\230\350\317\025\307\202\302\364\314"
  69      5490 E36D 
  69      325F 98E8 
  69      CF15 C782 
  69      C2F4 CC
  70 0196 5450 EC1A 	 .ascii "TP\354\032\243/h\202\201\317"
  70      A32F 6882 
  70      81CF 
  71               	 .text
  72               	 .section .gnu.lto_USB_GetNextDescriptorOfTypeAfter.a885b549cd95d2e,"",@progbits
  73 0000 789C 8D50 	 .string "x\234\215P=K\003A\024\234\331\3353G\024\364\027\004\301B\020\361\300\177\240\006+;\t\th\027\357$\307a\302El,r'Q\354L\255\215bo\372Tv\332\370\325X\037X\t\311\037\260\211\357\356T\304\312\205\235\367v\337\314\233\267\253\240\360w-\313\236'\260(\221\026\250z\217@l+\245\007%DE\363\352 \232\3224\371\265!\323\004DGi\303\3166\263&}u\233\214\3077\317w\227#\262\250\331\"\214"
  73      3D4B 0341 
  73      149C D9DD 
  73      3347 14F4 
  73      1704 C142 
  74 0086 2D01 5540 	 .ascii "-\001U@@\330\222iaZ\350FQo\026\3602eU0mX\243J\243~\302I\362~"
  74      40D8 9269 
  74      615A E846 
  74      516F 16F0 
  74      3265 5530 
  75 00a4 3DBD C32B 	 .ascii "=\275\303+\231\0058\304Gt\032\315\004\244\307\334\311\247\366"
  75      9905 38C4 
  75      4774 1ACD 
  75      04A4 C7DC 
  75      C9A7 F6
  76 00b7 697C 5A81 	 .ascii "i|Z\201(\360\200\243\301q\377l\"\347\373,\\\340<\026\272p\364"
  76      28F0 80A3 
  76      C171 FF6C 
  76      22E7 FB2C 
  76      5CE0 3C16 
  77 00ce 1603 9AAF 	 .ascii "\026\003\232\257G\336\243;\214'\177XiI\377\376\204\232\034\007"
  77      47DE A33B 
  77      8C27 7F58 
  77      6949 FFFE 
  77      849A 1C07 
  78 00e2 A5CC 7DF8 	 .ascii "\245\314}\370\366\017w;s\317\225&\033\374\005q2\232\373V\346"
  78      F60F 773B 
  78      73CF 9526 
  78      1BFC 0571 
  78      329A FB56 
  79 00f7 AB2A 2AA9 	 .ascii "\253**\251\245\314\205\215\312\372\212S\016\033\007n\330v*\233"
  79      A5CC 858D 
  79      CAFA 8A53 
  79      0E1B 076E 
  79      D876 2A9B 
  80 010b ABCE 5A33 	 .ascii "\253\316Z3t\005\366\274\306n\331m\327\303Fk\277\031\266\227\352"
  80      7405 F6BC 
  80      C66E D96D 
  80      D7C3 466B 
  80      BF19 B697 
  81 0120 F804 508E 	 .ascii "\370\004P\216U\247"
  81      55A7 
  82               	 .text
  83               	 .section .gnu.lto_USB_GetNextDescriptorComp.a885b549cd95d2e,"",@progbits
GAS LISTING  			page 6


  84 0000 789C 8553 	 .string "x\234\205SAh\023A\024\375\177&;\273\233,!\036\205\026\244\307\202FO\036\245M\025\204\212\242\024\003\365\226l$K4eS\n\305C&%\301\"b\203x(\212\320P\254\027Q\301\213xq\025\261M\320V\021\017\336\342A\274x\360&x\350\372g'\251&\n.\354\316\237?\357\375y\357\317,\003\006\303O\231\336\223\034\3404\215\030\007d\315m\200\232\305\320\324\001g\261\227\034d\334\336\356"
  84      4168 1341 
  84      14FD 7F26 
  84      3BBB 9B2C 
  84      211E 8516 
  85 007f 4827 C68C 	 .string "H'\306\214\327\2434\025\235\30343Ph\224@K\007\266\346M\230\214G\204\270\245\330\216\205\250\322\200Pe<f\b\333\264\260z\001\225"
  85      D7A3 3415 
  85      9DC3 3433 
  85      5068 9440 
  85      4B07 B6E6 
  86 00ac 3606 2D29 	 .ascii "6\006-)ov\277\354\276\303\272\354\312\246\334\r\253XB\322z\020"
  86      6F76 BFEC 
  86      BEC3 BAEC 
  86      CAA6 DC0D 
  86      AB58 42D2 
  87 00c2 A180      	 .ascii "\241\200"
  88 00c4 304B 13B4 	 .string "0K\023\264\242\201\341\240xM\r\302\2537\f\371X.\3130\254\226\22038\372\233\230\322\304!\343\217X\320\r\303\007\317\353\235\361}\b\264\231\3009\004\223\242\230E\021\332\220\307u\034\203\004e\f\2072,I\231\026e\3501\240.e\363@\177^\210D\235\247\357wA\003\243\201g\221\003\371\347oa\351Y#\\\031\331\243\250\242=\325\315\016[\225\365 \f\217\225P0\310\374O3\220\202{h\250\300C\373\016\334\2565e\020n\216\222B\017-\3050{\2706,\005#y\334 \260\336\221\360Qvm\331\350\247\357Gib\354@\243{\255\221\324y\200+\360\223\032\231*\241U@\335m\017\005\325/\251\022\221\235'\267Ni\260\207\t\245\"\365\267\200\035\250\007\242\017Jz\350\250*\211\022\335/R\301\372\022Z\221\204$\300\026\324\277\341\036\\\025J\374\351=\2131x\310\371\026\274\372\372\342n\207\017\002q"
  88      A281 E1A0 
  88      784D 0DC2 
  88      AB37 0CF9 
  88      582E CB30 
  89 01c5 68C0 3AAA 	 .ascii "h\300:\252\246\267W7>\367\366\321\215\222\211a\225^\317P\373"
  89      A6B7 5737 
  89      3EF7 F6D1 
  89      8D92 8961 
  89      955E CF50 
  90 01da E93F A0E4 	 .ascii "\351?\240\344X(\250\323\203\232\375\r\204R\242\317\333\206\265"
  90      5828 A8D3 
  90      839A FD0D 
  90      8452 A2CF 
  90      DB86 B5
  91 01ed 4DC0 2CAD 	 .ascii "M\300,\255\321\325\326'\375ce\277>#b\364Z3XI{\255\035\331C\251"
  91      D1D5 D627 
  91      FD63 65BF 
  91      3E23 62F4 
  91      5A33 5849 
  92 0207 2501 031E 	 .ascii "%\001\003\036,u\201\336\323\277\2446\216\354}\002$\273\342\315"
  92      2C75 81DE 
  92      D3BF A436 
  92      8EEC 7D02 
  92      24BB E2CD 
  93 021b 87D4 ACFE 	 .ascii "\207\324\254\3761\314\353\037-%\001\t\252:5>=sb\"=\345\027\027"
  93      31CC EB1F 
  93      2D25 0109 
  93      AA3A 353E 
  93      3D73 6222 
  94 0233 5CBF 929E 	 .ascii "\\\277\222\23697\231\316\224}\227>\227\013\305\213Sn%\347\027"
  94      3937 99CE 
  94      947D 973E 
  94      970B C58B 
  94      536E 25E7 
  95 0248 E7E6 CB7E 	 .ascii "\347\346\313~\345P\016\354\343\276_\3663\345\274\2338\343\273"
  95      E550 0EEC 
  95      E3BE 5FF6 
  95      33E5 BC9B 
  95      38E3 BB
  96 025b 0B6A 71BA 	 .ascii "\013jq\272\234sT<\2718\357V\316\272\227~\001\264\377\344\374"
GAS LISTING  			page 7


  96      9C73 543C 
  96      B938 EF56 
  96      CEBA 977E 
  96      01B4 FFE4 
  97               	 .text
  98               	 .section .gnu.lto_.symbol_nodes.a885b549cd95d2e,"",@progbits
  99 0000 789C 6362 	 .string "x\234cb`b\250f\200\002\246K\f\365\f\f\023\31610\324\327\367v$2]f\250g\204r\373:\030\231\2560\3243!q\2572\3243#q\2571\324\263 \270\314\214\f\fM\033\316\35123\001\351=\357t\231\201\002M\017\3761\202\350G[L\230Y\030\030\036\001\245YX\0306o<\247\313"
  99      6062 A866 
  99      8002 A64B 
  99      0CF5 0C0C 
  99      13CE 3130 
 100 0061 00        	 .string ""
 101 0062 836B 2694 	 .ascii "\203k&\224"
 102               	 .text
 103               	 .section .gnu.lto_.refs.a885b549cd95d2e,"",@progbits
 104 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
 104      6062 6064 
 104      8002 00
 105 000b 00        	 .string ""
 106 000c 4600      	 .string "F"
 107 000e 06        	 .ascii "\006"
 108               	 .text
 109               	 .section .gnu.lto_.decls.a885b549cd95d2e,"",@progbits
 110 0000 789C BD56 	 .ascii "x\234\275V[L\034U\030>\377\331]`\005j%\245\324\230HI\254\017"
 110      5B4C 1C55 
 110      183E FFD9 
 110      5D60 056A 
 110      25A5 D498 
 111 0018 24B2 F862 	 .ascii "$\262\370b\372T\n4\326\207\2466P|\361\001\221\031t#]\350\356"
 111      FA54 0A34 
 111      D687 A636 
 111      507C F101 
 111      9119 7423 
 112 002f 6C63 FB74 	 .ascii "lc\373t\200\300\326\306(]c\344E\003\210&%1\320\026XH\255\256"
 112      80C0 D6C6 
 112      285D 63E4 
 112      4503 8826 
 112      2531 D016 
 113 0047 B15D AA78 	 .ascii "\261]\252x\211\020"
 113      8910 
 114 004d EB6D 2D6B 	 .string "\353m-k\002\017\232\030A\253\255M\315\372\237\231\263;\227\235\275\020\023O\362\317\314\231s\376\377\373/\337\271PB\311\016JH\022\333\227\345\204,\003!E\204\220}Do.\2241\224\b\312\022J\034e\215d6>\247\024e\022e\033J\031J\003\n\b\033S(Q\224\273(E\370\363\202\030s\200\366\346\372\350\n\231A9o\261\035\021\266]\006\233\305\370\030\307w\314b\227\343\247l\273@\263\031\021\366\035(WP\256\242,Z0\226\376#\306\222\300p\242\\G\371\006\345[\224\357,8q\201\301\245\004u\347\211n\217\210\034\304\205\317\334\326\r\224U\224\237P\022\026[\274\016\345\302\267T\316\335\240\3070)|O\305\261!|6b\255\031r\363\027\312-\224\333\026\234j\362\026\213n$\326\337\275C\007Y\202E\223\311\206\355;\311\353\214\267>\266\377\270\004\373*\311\323 \30167)Q?\312\334\b\344\340"
 114      020F 9A18 
 114      41AB AD4D 
 114      CDFA 9F99 
 114      B33B 979D 
 115 014e 943C 22BE 	 .string "\224<\"\276\210:\342tk\337\352/\t&\200ZF\301\210,\3018\354$\351\371\274Dg\030\353g\243}l\307\b\242\235\326;$\345\301\366\224\007\\a\017\231`l8\361\303\346\253u\2149%\230\004\376\377(\220Zr\016\275\037f\354\253*\023b\032\330\345\316\350K\360\036\324\nO\325a\361\221L:\354\321\271\3369(M\031\261\213A\202\206\322\254\272S\272\256\332os\244;\024\273i\207x{\210\274\315\206\303X\244_\212\007\3313i\214Q\025\203\207]\200\203\224\234\342F\307\240\332v\266\004\027\370\\\216\304\302\321\205\360\234\213\325kNR2"
 115      883A E274 
 115      6BDF EA2F 
 115      0926 805A 
 115      46C1 882C 
 116 01fc B935 4528 	 .string "\2715E(\017\223w0\355\321\310r\325`\275J\033\"\264LqN\003\265\362/\261\221X9\363yG\212\177\244P\376\331QlK\004\2347\023P\313W\272#\302\022}AHv\226\225\031\bipI'\344\317\202\220Q\225\220\357\203\271\230\022\200\205~`\246\037\270\365\217$\330\321\343\n\330\362\003\2238\006\327\031+\323\212)\301E\340T\212\344/\371p8\032\211Ma\311-\334*\214\277\022\314\346\001\212\031\200\026\206f\234\254>\235\316\321\254\351\224\340#\330\223?=\224$\324t\030\320-f\256i\t\027\374\234\035\0328\302\034i\202F\254\004\3758\223\240\243\211\350\215\030\035a\033\311\344\275\377\0339?\333\00295\256\331\364-\304Y\267%\016\333\304\220"
 116      0F93 7730 
 116      EDD1 C872 
 116      D560 BD4A 
 116      1B22 B44C 
 117 02cc CCAC 592A 	 .string "\314\254Y*\2105\2331m\243\210\251\232\263y4\2154\370c(\342\344\232\327\324\362~b\325\264+\241\320\2749Dwi\177(\tQ\310\257\227.\375\252\271\364K\326\322\177m[\372\371EQz\255&\224\204\251m\026Wm\262\030/(\213\227B\231Y\314\256i\314\342\345\305\271\214,\306\013\312\342\007!=\213\027\325\200\362\350\245\263\270\0202e1n\315\342\217\266Y\\]|\331\305\246Y\"\231\254\266l\360Q\375"
 117      8835 9B31 
GAS LISTING  			page 8


 117      6DA3 88A9 
 117      9AB3 7934 
 117      8D34 F863 
 118 0350 2B64 1139 	 .ascii "+d\0219r.\242\024t\241\253l}\013\253\314t\270\027\022\203fd\303"
 118      722E A214 
 118      74A1 AB6C 
 118      7D0B ABCC 
 118      74B8 1712 
 119 0368 0AD1 506A 	 .ascii "\n\321Pj^\2279.7W\357\334\246\352Y\362\233z\022_\2660\317r\335"
 119      5E97 392E 
 119      3757 EFDC 
 119      A6EA 59F2 
 119      9B7A 125F 
 120 0381 E048 D9F6 	 .ascii "\340H\331\366\353\233*\267tUc\0222\307,\373\306\212-\343\023"
 120      EB9B 2AB7 
 120      7455 6312 
 120      32C7 2CFB 
 120      C68A 2DE3 
 121 0396 2B9F DE3A 	 .ascii "+\237\336:os\340\254\025\266u\204f2H\237]\323\264u,~\230yTe\213"
 121      6F73 E0AC 
 121      15B6 7584 
 121      6632 489F 
 121      5DD3 B475 
 122 03b1 5D82 DFD5 	 .ascii "]\202\337\325S\304\022#%\277\2521eG\374\333p\253\351\347\364"
 122      53C4 1223 
 122      25BF AA31 
 122      6547 FCDB 
 122      70AB E9E7 
 123 03c6 75F2 6B8D 	 .ascii "u\362k\215\266\257\232\364,\005W\207\3774\257\201\nr\226se\264"
 123      B6AF 9AF4 
 123      2C05 5787 
 123      FF34 AF81 
 123      0A72 9673 
 124 03dc AF9F C171 	 .ascii "\257\237\301q\273\202\213\373t\222\n\033\242\374o~\2778\001\375"
 124      BB82 8BFB 
 124      7492 0A1B 
 124      A2FC 6F7E 
 124      BF38 01FD 
 125 03f0 6CBF 0477 	 .ascii "l\277\004w\241\002\307\347\034\346:\344\265+\301?\340P=\352\243"
 125      A102 C7E7 
 125      1CE6 3AE4 
 125      B52B C13F 
 125      E050 3DEA 
 126 0405 1542 55B5 	 .ascii "\025BU\265\315\242\257\205\2671\252\375'Y\230\201\255\206\214"
 126      CDA2 AF85 
 126      B731 AAFD 
 126      2759 9881 
 126      AD86 8C
 127 0418 F2F0 DF58 	 .ascii "\362\360\337X~\305\311\246\353Sw\232/T?\270\252]\016\304\247"
 127      7EC5 C9A6 
 127      EB53 779A 
 127      2F54 3FB8 
 127      AA5D 0EC4 
 128 042d 89DC 6673 	 .ascii "\211\334fs#a:\262K3\226\332\265\362\030\003\033cv\315\030\250"
 128      2361 3AB2 
 128      4B33 96DA 
 128      B5F2 1803 
GAS LISTING  			page 9


 128      1B63 76CD 
 129 0443 04FD 9497 	 .ascii "\004\375\224\227~\200\326\340s\020\237\351fY8<\273\331\026\316"
 129      7E80 D6E0 
 129      7310 9FE9 
 129      6659 383C 
 129      BBD9 16CE 
 130 0457 102D CDA2 	 .ascii "\020-\315\2425\236c\271\205\262j\315\347\320:\235U+\232\343\226"
 130      359E 63B9 
 130      85B2 6ACD 
 130      E7D0 3A9D 
 130      552B 9AE3 
 131 046c FF92 AE45 	 .ascii "\377\222\256Ej\017\265=\336\3509\340\367\236\220\375\001O[k\223"
 131      6A0F B53D 
 131      DEE8 39E0 
 131      F79E 90FD 
 131      014F 5B6B 
 132 0481 A7B9 C72F 	 .ascii "\247\271\307/\343\303\327\345}\356\200\034\350\364{{\225\036"
 132      E3C3 D7E5 
 132      7DEE 801C 
 132      E8F4 7B7B 
 132      951E 
 133 0493 7FA0 EE79 	 .ascii "\177\240\356yR\354\353\361\371\202\335\335\017z\202\001\277\247"
 133      52EC EBF1 
 133      F982 DDDD 
 133      0F7A 8201 
 133      BFA7 
 134 04a5 DBFB ACA7 	 .ascii "\333\373\254\247\343\204\337\343\365uv\007%\331\023P$\257O\301"
 134      E384 DFE3 
 134      F575 7607 
 134      25D9 1350 
 134      24AF 4FC1 
 135 04b9 6925 417C 	 .ascii "i%A|?\372X\273Rt\360p\333\356fR\211F\333\017\312\312a\371EE7"
 135      3FFA 58BB 
 135      5274 F070 
 135      DBEE 6652 
 135      8946 DB0F 
 136 04d4 58D2 7452 	 .ascii "X\322tR\221\003-\362\261\362\346\240\337\257\301\035\352\351"
 136      9103 2DF2 
 136      B1F2 E6A0 
 136      DFAF C11D 
 136      EAE9 
 137 04e6 2CD8 9D4E 	 .ascii ",\330\235NR\314q\366\266+\017\330\332\177\262\353\350\311^\331"
 137      52CC 71F6 
 137      B62B 0FD8 
 137      DA7F B2EB 
 137      E8C9 5ED9 
 138 04fa C91F 3539 	 .ascii "\311\03759&4\311]h\377\036\355\305\177\354\3161\271\261K\221"
 138      2634 C95D 
 138      68FF 1EED 
 138      C57F ECCE 
 138      31B9 B14B 
 139 050f FD6E F5C9 	 .ascii "\375n\365\311\273\225\232W\315=\307z;\374\0358\353\210\342oW"
 139      BB95 9A57 
 139      CD3D C77A 
 139      3BFC 1D38 
 139      EB88 E26F 
 140 0524 EEB7 35C0 	 .ascii "\356\2675\300'\335\247\317l\351\t*^\237\\\324\333\321\371\202"
GAS LISTING  			page 10


 140      27DD A7CF 
 140      6CE9 092A 
 140      5E9F 5CD4 
 140      DBD1 F982 
 141 0538 2C79 EC83 	 .ascii ",y\354\203n|\252e\257\247\256\316\323\252H\346BTq\b\375W\373"
 141      6E7C AA65 
 141      AFA7 AECE 
 141      D3AA 48E6 
 141      4254 7108 
 142 054f 1372 8724 	 .ascii "\023r\207$#\264\263\325{J\376\027#\323F{"
 142      23B4 B3D5 
 142      7B4A FE17 
 142      23D3 467B 
 143               	 .text
 144               	 .section .gnu.lto_.symtab.a885b549cd95d2e,"",@progbits
 145 0000 5553 425F 	 .string "USB_GetNextDescriptorOfType"
 145      4765 744E 
 145      6578 7444 
 145      6573 6372 
 145      6970 746F 
 146 001c 00        	 .string ""
 147 001d 00        	 .string ""
 148 001e 00        	 .string ""
 149 001f 00        	 .string ""
 150 0020 00        	 .string ""
 151 0021 00        	 .string ""
 152 0022 00        	 .string ""
 153 0023 00        	 .string ""
 154 0024 00        	 .string ""
 155 0025 00        	 .string ""
 156 0026 00        	 .string ""
 157 0027 B700      	 .string "\267"
 158 0029 00        	 .string ""
 159 002a 00        	 .string ""
 160 002b 5553 425F 	 .string "USB_GetNextDescriptorOfTypeBefore"
 160      4765 744E 
 160      6578 7444 
 160      6573 6372 
 160      6970 746F 
 161 004d 00        	 .string ""
 162 004e 00        	 .string ""
 163 004f 00        	 .string ""
 164 0050 00        	 .string ""
 165 0051 00        	 .string ""
 166 0052 00        	 .string ""
 167 0053 00        	 .string ""
 168 0054 00        	 .string ""
 169 0055 00        	 .string ""
 170 0056 00        	 .string ""
 171 0057 00        	 .string ""
 172 0058 CB00      	 .string "\313"
 173 005a 00        	 .string ""
 174 005b 00        	 .string ""
 175 005c 5553 425F 	 .string "USB_GetNextDescriptorOfTypeAfter"
 175      4765 744E 
 175      6578 7444 
 175      6573 6372 
GAS LISTING  			page 11


 175      6970 746F 
 176 007d 00        	 .string ""
 177 007e 00        	 .string ""
 178 007f 00        	 .string ""
 179 0080 00        	 .string ""
 180 0081 00        	 .string ""
 181 0082 00        	 .string ""
 182 0083 00        	 .string ""
 183 0084 00        	 .string ""
 184 0085 00        	 .string ""
 185 0086 00        	 .string ""
 186 0087 00        	 .string ""
 187 0088 DC00      	 .string "\334"
 188 008a 00        	 .string ""
 189 008b 00        	 .string ""
 190 008c 5553 425F 	 .string "USB_GetNextDescriptorComp"
 190      4765 744E 
 190      6578 7444 
 190      6573 6372 
 190      6970 746F 
 191 00a6 00        	 .string ""
 192 00a7 00        	 .string ""
 193 00a8 00        	 .string ""
 194 00a9 00        	 .string ""
 195 00aa 00        	 .string ""
 196 00ab 00        	 .string ""
 197 00ac 00        	 .string ""
 198 00ad 00        	 .string ""
 199 00ae 00        	 .string ""
 200 00af 00        	 .string ""
 201 00b0 00        	 .string ""
 202 00b1 E400      	 .string "\344"
 203 00b3 00        	 .string ""
 204 00b4 00        	 .string ""
 205               	 .text
 206               	 .section .gnu.lto_.opts,"",@progbits
 207 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 207      6375 3D61 
 207      746D 6567 
 207      6133 3275 
 207      3227 2027 
 208               	 .text
 209               	 .cfi_sections .debug_frame
 210               	.global USB_GetNextDescriptorOfType
 212               	USB_GetNextDescriptorOfType:
 213               	.LFB83:
 214               	 .file 1 "LUFA/Drivers/USB/Core/ConfigDescriptors.c"
   1:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** /*
   2:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
   5:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** */
   8:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
   9:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** /*
  10:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
GAS LISTING  			page 12


  11:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  12:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  21:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****   this software.
  29:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** */
  30:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  31:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** #include "ConfigDescriptors.h"
  33:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  34:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** #if defined(USB_CAN_BE_HOST)
  35:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** uint8_t USB_Host_GetDeviceConfigDescriptor(const uint8_t ConfigNumber,
  36:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                            uint16_t* const ConfigSizePtr,
  37:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                            void* const BufferPtr,
  38:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                            const uint16_t BufferSize)
  39:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** {
  40:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	uint8_t ErrorCode;
  41:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	uint8_t ConfigHeader[sizeof(USB_Descriptor_Configuration_Header_t)];
  42:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  43:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	USB_ControlRequest = (USB_Request_Header_t)
  44:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		{
  45:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE),
  46:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			.bRequest      = REQ_GetDescriptor,
  47:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			.wValue        = ((DTYPE_Configuration << 8) | (ConfigNumber - 1)),
  48:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			.wIndex        = 0,
  49:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			.wLength       = sizeof(USB_Descriptor_Configuration_Header_t),
  50:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		};
  51:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  52:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	Pipe_SelectPipe(PIPE_CONTROLPIPE);
  53:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  54:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	if ((ErrorCode = USB_Host_SendControlRequest(ConfigHeader)) != HOST_SENDCONTROL_Successful)
  55:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  return ErrorCode;
  56:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  57:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	*ConfigSizePtr = le16_to_cpu(DESCRIPTOR_PCAST(ConfigHeader, USB_Descriptor_Configuration_Header_t)
  58:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  59:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	if (*ConfigSizePtr > BufferSize)
  60:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  return HOST_GETCONFIG_BuffOverflow;
  61:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  62:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	USB_ControlRequest.wLength = *ConfigSizePtr;
  63:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  64:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	if ((ErrorCode = USB_Host_SendControlRequest(BufferPtr)) != HOST_SENDCONTROL_Successful)
  65:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  return ErrorCode;
  66:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  67:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	if (DESCRIPTOR_TYPE(BufferPtr) != DTYPE_Configuration)
GAS LISTING  			page 13


  68:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  return HOST_GETCONFIG_InvalidData;
  69:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  70:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	return HOST_GETCONFIG_Successful;
  71:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** }
  72:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** #endif
  73:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  74:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** void USB_GetNextDescriptorOfType(uint16_t* const BytesRem,
  75:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                  void** const CurrConfigLoc,
  76:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                  const uint8_t Type)
  77:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** {
 215               	 .loc 1 77 0
 216               	 .cfi_startproc
 217               	.LVL0:
 218 0000 CF93      	 push r28
 219               	.LCFI0:
 220               	 .cfi_def_cfa_offset 3
 221               	 .cfi_offset 28,-2
 222 0002 DF93      	 push r29
 223               	.LCFI1:
 224               	 .cfi_def_cfa_offset 4
 225               	 .cfi_offset 29,-3
 226               	 
 227               	 
 228               	 
 229               	.L__stack_usage =2
 230               	.L2:
  78:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	while (*BytesRem)
 231               	 .loc 1 78 0 discriminator 1
 232 0004 EC01      	 movw r28,r24
 233 0006 2881      	 ld r18,Y
 234 0008 3981      	 ldd r19,Y+1
 235 000a 2115      	 cp r18,__zero_reg__
 236 000c 3105      	 cpc r19,__zero_reg__
 237 000e 01F0      	 breq .L1
 238               	.LVL1:
 239               	.LBB4:
 240               	.LBB5:
 241               	 .file 2 "LUFA/Drivers/USB/Core/ConfigDescriptors.h"
   1:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** /*
   2:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
   5:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** */
   8:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
   9:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** /*
  10:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  12:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   software without specific, written prior permission.
GAS LISTING  			page 14


  20:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  21:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****   this software.
  29:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** */
  30:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  31:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** /** \file
  32:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  \brief USB Configuration Descriptor definitions.
  33:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  \copydetails Group_ConfigDescriptorParser
  34:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *
  35:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  */
  38:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  39:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** /** \ingroup Group_StdDescriptors
  40:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  \defgroup Group_ConfigDescriptorParser Configuration Descriptor Parser
  41:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  \brief USB Configuration Descriptor definitions.
  42:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *
  43:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  This section of the library gives a friendly API which can be used in host applications to easi
  44:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  parse an attached device's configuration descriptor so that endpoint, interface and other descr
  45:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  data can be extracted and used as needed.
  46:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *
  47:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  *  @{
  48:LUFA/Drivers/USB/Core/ConfigDescriptors.h ****  */
  49:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  50:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** #ifndef __CONFIGDESCRIPTORS_H__
  51:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** #define __CONFIGDESCRIPTORS_H__
  52:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  53:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 	/* Includes: */
  54:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#include "../../../Common/Common.h"
  55:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#include "USBMode.h"
  56:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#include "HostStandardReq.h"
  57:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#include "StdDescriptors.h"
  58:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  59:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 	/* Enable C linkage for C++ Compilers: */
  60:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#if defined(__cplusplus)
  61:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			extern "C" {
  62:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#endif
  63:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  64:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 	/* Preprocessor Checks: */
  65:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  66:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  67:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		#endif
  68:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  69:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 	/* Public Interface - May be used in end-application: */
  70:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		/* Macros: */
  71:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Casts a pointer to a descriptor inside the configuration descriptor into a pointer to the gi
  72:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  descriptor type.
  73:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
  74:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  Usage Example:
  75:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \code
  76:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  uint8_t* CurrDescriptor = &ConfigDescriptor[0]; // Pointing to the configuration header
GAS LISTING  			page 15


  77:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  USB_Descriptor_Configuration_Header_t* ConfigHeaderPtr = DESCRIPTOR_PCAST(CurrDescriptor,
  78:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *                                                           USB_Descriptor_Configuration_Header
  79:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
  80:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  // Can now access elements of the configuration header struct using the -> indirection opera
  81:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \endcode
  82:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
  83:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			#define DESCRIPTOR_PCAST(DescriptorPtr, Type) ((Type*)(DescriptorPtr))
  84:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  85:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Casts a pointer to a descriptor inside the configuration descriptor into the given descripto
  86:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  type (as an actual struct instance rather than a pointer to a struct).
  87:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
  88:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  Usage Example:
  89:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \code
  90:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  uint8_t* CurrDescriptor = &ConfigDescriptor[0]; // Pointing to the configuration header
  91:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  USB_Descriptor_Configuration_Header_t ConfigHeader = DESCRIPTOR_CAST(CurrDescriptor,
  92:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *                                                       USB_Descriptor_Configuration_Header_t);
  93:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
  94:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  // Can now access elements of the configuration header struct using the . operator
  95:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \endcode
  96:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
  97:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			#define DESCRIPTOR_CAST(DescriptorPtr, Type)  (*DESCRIPTOR_PCAST(DescriptorPtr, Type))
  98:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
  99:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Returns the descriptor's type, expressed as the 8-bit type value in the header of the descri
 100:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  This value's meaning depends on the descriptor's placement in the descriptor, but standard t
 101:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  values can be accessed in the \ref USB_DescriptorTypes_t enum.
 102:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 103:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			#define DESCRIPTOR_TYPE(DescriptorPtr)    DESCRIPTOR_PCAST(DescriptorPtr, USB_Descriptor_Header_
 104:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 105:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Returns the descriptor's size, expressed as the 8-bit value indicating the number of bytes. 
 106:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			#define DESCRIPTOR_SIZE(DescriptorPtr)    DESCRIPTOR_PCAST(DescriptorPtr, USB_Descriptor_Header_
 107:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 108:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		/* Type Defines: */
 109:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Type define for a Configuration Descriptor comparator function (function taking a pointer to
 110:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  of type void, returning a uint8_t value).
 111:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 112:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \see \ref USB_GetNextDescriptorComp function for more details.
 113:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 114:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			typedef uint8_t (* ConfigComparatorPtr_t)(void*);
 115:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 116:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		/* Enums: */
 117:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Enum for the possible return codes of the \ref USB_Host_GetDeviceConfigDescriptor() function
 118:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			enum USB_Host_GetConfigDescriptor_ErrorCodes_t
 119:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			{
 120:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_Successful       = 0, /**< No error occurred while retrieving the configuration 
 121:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_DeviceDisconnect = 1, /**< The attached device was disconnected while retrieving
 122:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      *   descriptor.
 123:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      */
 124:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_PipeError        = 2, /**< An error occurred in the pipe while sending the reque
 125:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_SetupStalled     = 3, /**< The attached device stalled the request to retrieve t
 126:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      *   descriptor.
 127:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      */
 128:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_SoftwareTimeOut  = 4, /**< The request or data transfer timed out. */
 129:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_BuffOverflow     = 5, /**< The device's configuration descriptor is too large to
 130:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      *   buffer.
 131:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                      */
 132:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				HOST_GETCONFIG_InvalidData      = 6, /**< The device returned invalid configuration descriptor 
 133:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			};
GAS LISTING  			page 16


 134:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 135:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Enum for return values of a descriptor comparator function. */
 136:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			enum DSearch_Return_ErrorCodes_t
 137:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			{
 138:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_Found                = 0, /**< Current descriptor matches comparator criteria
 139:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_Fail                 = 1, /**< No further descriptor could possibly match cri
 140:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_NotFound             = 2, /**< Current descriptor does not match comparator c
 141:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			};
 142:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 143:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Enum for return values of \ref USB_GetNextDescriptorComp(). */
 144:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			enum DSearch_Comp_Return_ErrorCodes_t
 145:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			{
 146:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_COMP_Found           = 0, /**< Configuration descriptor now points to descrip
 147:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				                                             *   search criteria of the given comparator functi
 148:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_COMP_Fail            = 1, /**< Comparator function returned \ref DESCRIPTOR_S
 149:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				DESCRIPTOR_SEARCH_COMP_EndOfDescriptor = 2, /**< End of configuration descriptor reached before
 150:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			};
 151:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 152:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		/* Function Prototypes: */
 153:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Retrieves the configuration descriptor data from an attached device via a standard request i
 154:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  including validity and size checking to prevent a buffer overflow.
 155:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 156:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[in]     ConfigNumber   Device configuration descriptor number to fetch from the devic
 157:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *                                single configuration devices).
 158:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[in,out] ConfigSizePtr  Pointer to a location for storing the retrieved configuration 
 159:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[out]    BufferPtr      Pointer to the buffer for storing the configuration descriptor
 160:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[out]    BufferSize     Size of the allocated buffer where the configuration descripto
 161:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 162:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \return A value from the \ref USB_Host_GetConfigDescriptor_ErrorCodes_t enum.
 163:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 164:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			uint8_t USB_Host_GetDeviceConfigDescriptor(const uint8_t ConfigNumber,
 165:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                           uint16_t* const ConfigSizePtr,
 166:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                           void* const BufferPtr,
 167:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                           const uint16_t BufferSize) ATTR_NON_NULL_PTR_ARG(2) A
 168:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 169:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 170:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  The bytes remaining value is automatically decremented.
 171:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 172:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 173:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 174:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 175:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 176:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			void USB_GetNextDescriptorOfType(uint16_t* const BytesRem,
 177:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                 void** const CurrConfigLoc,
 178:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                 const uint8_t Type)
 179:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                 ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 180:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 181:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 182:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  which must come before a descriptor of the second given type value. If the BeforeType type
 183:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  descriptor is reached first, the number of bytes remaining to process is set to zero and the
 184:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  function exits. The bytes remaining value is automatically decremented.
 185:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 186:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 187:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 188:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 189:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in]     BeforeType     Descriptor type value which must not be reached before the give
 190:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
GAS LISTING  			page 17


 191:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			void USB_GetNextDescriptorOfTypeBefore(uint16_t* const BytesRem,
 192:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                       void** const CurrConfigLoc,
 193:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                       const uint8_t Type,
 194:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                       const uint8_t BeforeType)
 195:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                       ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 196:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 197:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Skips to the next sub-descriptor inside the configuration descriptor of the specified type v
 198:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  which must come after a descriptor of the second given type value. The bytes remaining value
 199:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  automatically decremented.
 200:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 201:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 202:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 203:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in]     Type           Descriptor type value to search for.
 204:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in]     AfterType      Descriptor type value which must be reached before the given Ty
 205:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 206:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			void USB_GetNextDescriptorOfTypeAfter(uint16_t* const BytesRem,
 207:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                      void** const CurrConfigLoc,
 208:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                      const uint8_t Type,
 209:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                      const uint8_t AfterType)
 210:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                      ATTR_NON_NULL_PTR_ARG(1) ATTR_NON_NULL_PTR_ARG(2);
 211:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 212:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Searches for the next descriptor in the given configuration descriptor using a pre-made comp
 213:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  function. The routine updates the position and remaining configuration descriptor bytes valu
 214:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  automatically. If a comparator routine fails a search, the descriptor pointer is retreated b
 215:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  so that the next descriptor search invocation will start from the descriptor which first cau
 216:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  original search to fail. This behavior allows for one comparator to be used immediately afte
 217:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  has failed, starting the second search from the descriptor which failed the first.
 218:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 219:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  Comparator functions should be standard functions which accept a pointer to the header of th
 220:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  descriptor inside the configuration descriptor which is being compared, and should return a 
 221:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  the \ref DSearch_Return_ErrorCodes_t enum as a uint8_t value.
 222:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 223:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \note This function is available in USB Host mode only.
 224:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 225:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[in,out] BytesRem           Pointer to an int storing the remaining bytes in the confi
 226:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[in,out] CurrConfigLoc      Pointer to the current position in the configuration descr
 227:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \param[in]     ComparatorRoutine  Name of the comparator search function to use on the confi
 228:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 229:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \return Value of one of the members of the \ref DSearch_Comp_Return_ErrorCodes_t enum.
 230:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 231:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  Usage Example:
 232:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \code
 233:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  uint8_t EndpointSearcher(void* CurrentDescriptor); // Comparator Prototype
 234:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 235:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  uint8_t EndpointSearcher(void* CurrentDescriptor)
 236:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  {
 237:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *     if (DESCRIPTOR_TYPE(CurrentDescriptor) == DTYPE_Endpoint)
 238:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *         return DESCRIPTOR_SEARCH_Found;
 239:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *     else
 240:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *         return DESCRIPTOR_SEARCH_NotFound;
 241:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  }
 242:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 243:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  //...
 244:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 245:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  // After retrieving configuration descriptor:
 246:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  if (USB_Host_GetNextDescriptorComp(&BytesRemaining, &CurrentConfigLoc, EndpointSearcher) ==
 247:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *      Descriptor_Search_Comp_Found)
GAS LISTING  			page 18


 248:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  {
 249:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *      // Do something with the endpoint descriptor
 250:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  }
 251:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *  \endcode
 252:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 253:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			uint8_t USB_GetNextDescriptorComp(uint16_t* const BytesRem,
 254:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                  void** const CurrConfigLoc,
 255:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                  ConfigComparatorPtr_t const ComparatorRoutine) ATTR_NON_NULL_P
 256:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                  ATTR_NON_NULL_PTR_ARG(2) ATTR_NON_NULL_PTR_ARG(3);
 257:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 258:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 		/* Inline Functions: */
 259:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			/** Skips over the current sub-descriptor inside the configuration descriptor, so that the point
 260:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			    points to the next sub-descriptor. The bytes remaining value is automatically decremented.
 261:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 *
 262:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] BytesRem       Pointer to the number of bytes remaining of the configuration d
 263:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 * \param[in,out] CurrConfigLoc  Pointer to the current descriptor inside the configuration desc
 264:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			 */
 265:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			static inline void USB_GetNextDescriptor(uint16_t* const BytesRem,
 266:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                         void** CurrConfigLoc) ATTR_NON_NULL_PTR_ARG(1) ATTR_NON
 267:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			static inline void USB_GetNextDescriptor(uint16_t* const BytesRem,
 268:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			                                         void** CurrConfigLoc)
 269:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 			{
 270:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				uint16_t CurrDescriptorSize = DESCRIPTOR_CAST(*CurrConfigLoc, USB_Descriptor_Header_t).Size;
 242               	 .loc 2 270 0
 243 0010 EB01      	 movw r28,r22
 244 0012 A881      	 ld r26,Y
 245 0014 B981      	 ldd r27,Y+1
 246 0016 CC91      	 ld r28,X
 247 0018 D0E0      	 ldi r29,0
 248               	.LVL2:
 249 001a F901      	 movw r30,r18
 250 001c C217      	 cp r28,r18
 251 001e D307      	 cpc r29,r19
 252 0020 00F4      	 brsh .L3
 253 0022 FE01      	 movw r30,r28
 254               	.L3:
 255               	.LVL3:
 271:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 272:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				if (*BytesRem < CurrDescriptorSize)
 273:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				  CurrDescriptorSize = *BytesRem;
 274:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 
 275:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				*CurrConfigLoc  = (void*)((uintptr_t)*CurrConfigLoc + CurrDescriptorSize);
 256               	 .loc 2 275 0
 257 0024 AE0F      	 add r26,r30
 258 0026 BF1F      	 adc r27,r31
 259 0028 EB01      	 movw r28,r22
 260 002a B983      	 std Y+1,r27
 261 002c A883      	 st Y,r26
 276:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				*BytesRem      -= CurrDescriptorSize;
 262               	 .loc 2 276 0
 263 002e 2E1B      	 sub r18,r30
 264 0030 3F0B      	 sbc r19,r31
 265 0032 FC01      	 movw r30,r24
 266               	.LVL4:
 267 0034 3183      	 std Z+1,r19
 268 0036 2083      	 st Z,r18
 269               	.LBE5:
GAS LISTING  			page 19


 270               	.LBE4:
  79:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	{
  80:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
  81:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  82:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		if (DESCRIPTOR_TYPE(*CurrConfigLoc) == Type)
 271               	 .loc 1 82 0
 272 0038 1196      	 adiw r26,1
 273 003a 2C91      	 ld r18,X
 274 003c 2413      	 cpse r18,r20
 275 003e 00C0      	 rjmp .L2
 276               	.LVL5:
 277               	.L1:
 278               	 
  83:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		  return;
  84:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	}
  85:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** }
 279               	 .loc 1 85 0
 280 0040 DF91      	 pop r29
 281 0042 CF91      	 pop r28
 282 0044 0895      	 ret
 283               	 .cfi_endproc
 284               	.LFE83:
 286               	.global USB_GetNextDescriptorOfTypeBefore
 288               	USB_GetNextDescriptorOfTypeBefore:
 289               	.LFB84:
  86:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  87:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** void USB_GetNextDescriptorOfTypeBefore(uint16_t* const BytesRem,
  88:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                        void** const CurrConfigLoc,
  89:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                        const uint8_t Type,
  90:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                        const uint8_t BeforeType)
  91:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** {
 290               	 .loc 1 91 0
 291               	 .cfi_startproc
 292               	.LVL6:
 293 0046 EF92      	 push r14
 294               	.LCFI2:
 295               	 .cfi_def_cfa_offset 3
 296               	 .cfi_offset 14,-2
 297 0048 FF92      	 push r15
 298               	.LCFI3:
 299               	 .cfi_def_cfa_offset 4
 300               	 .cfi_offset 15,-3
 301 004a 0F93      	 push r16
 302               	.LCFI4:
 303               	 .cfi_def_cfa_offset 5
 304               	 .cfi_offset 16,-4
 305 004c 1F93      	 push r17
 306               	.LCFI5:
 307               	 .cfi_def_cfa_offset 6
 308               	 .cfi_offset 17,-5
 309 004e CF93      	 push r28
 310               	.LCFI6:
 311               	 .cfi_def_cfa_offset 7
 312               	 .cfi_offset 28,-6
 313 0050 DF93      	 push r29
 314               	.LCFI7:
 315               	 .cfi_def_cfa_offset 8
GAS LISTING  			page 20


 316               	 .cfi_offset 29,-7
 317               	 
 318               	 
 319               	 
 320               	.L__stack_usage =6
 321 0052 DC01      	 movw r26,r24
 322               	.LVL7:
 323               	.L9:
  92:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	while (*BytesRem)
 324               	 .loc 1 92 0 discriminator 1
 325 0054 ED91      	 ld r30,X+
 326 0056 FC91      	 ld r31,X
 327 0058 1197      	 sbiw r26,1
 328 005a 3097      	 sbiw r30,0
 329 005c 01F0      	 breq .L8
 330               	.LVL8:
 331               	.LBB8:
 332               	.LBB9:
 270:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				uint16_t CurrDescriptorSize = DESCRIPTOR_CAST(*CurrConfigLoc, USB_Descriptor_Header_t).Size;
 333               	 .loc 2 270 0
 334 005e EB01      	 movw r28,r22
 335 0060 E880      	 ld r14,Y
 336 0062 F980      	 ldd r15,Y+1
 337 0064 E701      	 movw r28,r14
 338 0066 0881      	 ld r16,Y
 339 0068 10E0      	 ldi r17,0
 340               	.LVL9:
 341 006a CF01      	 movw r24,r30
 342 006c 0E17      	 cp r16,r30
 343 006e 1F07      	 cpc r17,r31
 344 0070 00F4      	 brsh .L10
 345 0072 C801      	 movw r24,r16
 346               	.L10:
 347               	.LVL10:
 275:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				*CurrConfigLoc  = (void*)((uintptr_t)*CurrConfigLoc + CurrDescriptorSize);
 348               	 .loc 2 275 0
 349 0074 E80E      	 add r14,r24
 350 0076 F91E      	 adc r15,r25
 351 0078 EB01      	 movw r28,r22
 352 007a F982      	 std Y+1,r15
 353 007c E882      	 st Y,r14
 354               	 .loc 2 276 0
 355 007e E81B      	 sub r30,r24
 356 0080 F90B      	 sbc r31,r25
 357 0082 1196      	 adiw r26,1
 358 0084 FC93      	 st X,r31
 359 0086 EE93      	 st -X,r30
 360               	.LBE9:
 361               	.LBE8:
  93:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	{
  94:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
  95:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
  96:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		if (DESCRIPTOR_TYPE(*CurrConfigLoc) == Type)
 362               	 .loc 1 96 0
 363 0088 F701      	 movw r30,r14
 364 008a 8181      	 ldd r24,Z+1
 365               	.LVL11:
GAS LISTING  			page 21


 366 008c 8417      	 cp r24,r20
 367 008e 01F0      	 breq .L8
  97:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		{
  98:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			return;
  99:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		}
 100:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		else if (DESCRIPTOR_TYPE(*CurrConfigLoc) == BeforeType)
 368               	 .loc 1 100 0
 369 0090 8213      	 cpse r24,r18
 370 0092 00C0      	 rjmp .L9
 101:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		{
 102:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			*BytesRem = 0;
 371               	 .loc 1 102 0
 372 0094 1D92      	 st X+,__zero_reg__
 373 0096 1C92      	 st X,__zero_reg__
 374               	.LVL12:
 375               	.L8:
 376               	 
 103:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			return;
 104:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		}
 105:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	}
 106:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** }
 377               	 .loc 1 106 0
 378 0098 DF91      	 pop r29
 379 009a CF91      	 pop r28
 380 009c 1F91      	 pop r17
 381 009e 0F91      	 pop r16
 382 00a0 FF90      	 pop r15
 383 00a2 EF90      	 pop r14
 384 00a4 0895      	 ret
 385               	 .cfi_endproc
 386               	.LFE84:
 388               	.global USB_GetNextDescriptorOfTypeAfter
 390               	USB_GetNextDescriptorOfTypeAfter:
 391               	.LFB85:
 107:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 108:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** void USB_GetNextDescriptorOfTypeAfter(uint16_t* const BytesRem,
 109:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                       void** const CurrConfigLoc,
 110:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                       const uint8_t Type,
 111:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                       const uint8_t AfterType)
 112:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** {
 392               	 .loc 1 112 0
 393               	 .cfi_startproc
 394               	.LVL13:
 395 00a6 FF92      	 push r15
 396               	.LCFI8:
 397               	 .cfi_def_cfa_offset 3
 398               	 .cfi_offset 15,-2
 399 00a8 0F93      	 push r16
 400               	.LCFI9:
 401               	 .cfi_def_cfa_offset 4
 402               	 .cfi_offset 16,-3
 403 00aa 1F93      	 push r17
 404               	.LCFI10:
 405               	 .cfi_def_cfa_offset 5
 406               	 .cfi_offset 17,-4
 407 00ac CF93      	 push r28
 408               	.LCFI11:
GAS LISTING  			page 22


 409               	 .cfi_def_cfa_offset 6
 410               	 .cfi_offset 28,-5
 411 00ae DF93      	 push r29
 412               	.LCFI12:
 413               	 .cfi_def_cfa_offset 7
 414               	 .cfi_offset 29,-6
 415               	 
 416               	 
 417               	 
 418               	.L__stack_usage =5
 419 00b0 EC01      	 movw r28,r24
 420 00b2 8B01      	 movw r16,r22
 421 00b4 F42E      	 mov r15,r20
 113:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, AfterType);
 422               	 .loc 1 113 0
 423 00b6 422F      	 mov r20,r18
 424               	.LVL14:
 425 00b8 0E94 0000 	 call USB_GetNextDescriptorOfType
 426               	.LVL15:
 114:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 115:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	if (*BytesRem)
 427               	 .loc 1 115 0
 428 00bc 8881      	 ld r24,Y
 429 00be 9981      	 ldd r25,Y+1
 430 00c0 892B      	 or r24,r25
 431 00c2 01F0      	 breq .L16
 116:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, Type);
 432               	 .loc 1 116 0
 433 00c4 4F2D      	 mov r20,r15
 434 00c6 B801      	 movw r22,r16
 435 00c8 CE01      	 movw r24,r28
 436               	 
 117:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** }
 437               	 .loc 1 117 0
 438 00ca DF91      	 pop r29
 439 00cc CF91      	 pop r28
 440               	.LVL16:
 441 00ce 1F91      	 pop r17
 442 00d0 0F91      	 pop r16
 443               	.LVL17:
 444 00d2 FF90      	 pop r15
 445               	.LVL18:
 116:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	  USB_GetNextDescriptorOfType(BytesRem, CurrConfigLoc, Type);
 446               	 .loc 1 116 0
 447 00d4 0C94 0000 	 jmp USB_GetNextDescriptorOfType
 448               	.LVL19:
 449               	.L16:
 450               	 
 451               	 .loc 1 117 0
 452 00d8 DF91      	 pop r29
 453 00da CF91      	 pop r28
 454               	.LVL20:
 455 00dc 1F91      	 pop r17
 456 00de 0F91      	 pop r16
 457               	.LVL21:
 458 00e0 FF90      	 pop r15
 459               	.LVL22:
GAS LISTING  			page 23


 460 00e2 0895      	 ret
 461               	 .cfi_endproc
 462               	.LFE85:
 464               	.global USB_GetNextDescriptorComp
 466               	USB_GetNextDescriptorComp:
 467               	.LFB86:
 118:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 119:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** uint8_t USB_GetNextDescriptorComp(uint16_t* const BytesRem,
 120:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                   void** const CurrConfigLoc,
 121:LUFA/Drivers/USB/Core/ConfigDescriptors.c ****                                   ConfigComparatorPtr_t const ComparatorRoutine)
 122:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** {
 468               	 .loc 1 122 0
 469               	 .cfi_startproc
 470               	.LVL23:
 471 00e4 AF92      	 push r10
 472               	.LCFI13:
 473               	 .cfi_def_cfa_offset 3
 474               	 .cfi_offset 10,-2
 475 00e6 BF92      	 push r11
 476               	.LCFI14:
 477               	 .cfi_def_cfa_offset 4
 478               	 .cfi_offset 11,-3
 479 00e8 CF92      	 push r12
 480               	.LCFI15:
 481               	 .cfi_def_cfa_offset 5
 482               	 .cfi_offset 12,-4
 483 00ea DF92      	 push r13
 484               	.LCFI16:
 485               	 .cfi_def_cfa_offset 6
 486               	 .cfi_offset 13,-5
 487 00ec EF92      	 push r14
 488               	.LCFI17:
 489               	 .cfi_def_cfa_offset 7
 490               	 .cfi_offset 14,-6
 491 00ee FF92      	 push r15
 492               	.LCFI18:
 493               	 .cfi_def_cfa_offset 8
 494               	 .cfi_offset 15,-7
 495 00f0 0F93      	 push r16
 496               	.LCFI19:
 497               	 .cfi_def_cfa_offset 9
 498               	 .cfi_offset 16,-8
 499 00f2 1F93      	 push r17
 500               	.LCFI20:
 501               	 .cfi_def_cfa_offset 10
 502               	 .cfi_offset 17,-9
 503 00f4 CF93      	 push r28
 504               	.LCFI21:
 505               	 .cfi_def_cfa_offset 11
 506               	 .cfi_offset 28,-10
 507 00f6 DF93      	 push r29
 508               	.LCFI22:
 509               	 .cfi_def_cfa_offset 12
 510               	 .cfi_offset 29,-11
 511               	 
 512               	 
 513               	 
GAS LISTING  			page 24


 514               	.L__stack_usage =10
 515 00f8 8C01      	 movw r16,r24
 516 00fa 7B01      	 movw r14,r22
 517 00fc 5A01      	 movw r10,r20
 518               	.LVL24:
 519               	.L19:
 123:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	uint8_t ErrorCode;
 124:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 125:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	while (*BytesRem)
 520               	 .loc 1 125 0 discriminator 1
 521 00fe F801      	 movw r30,r16
 522 0100 C081      	 ld r28,Z
 523 0102 D181      	 ldd r29,Z+1
 524 0104 2097      	 sbiw r28,0
 525 0106 01F0      	 breq .L26
 526               	.LBB13:
 126:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	{
 127:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		uint8_t* PrevDescLoc  = *CurrConfigLoc;
 527               	 .loc 1 127 0
 528 0108 F701      	 movw r30,r14
 529 010a C080      	 ld r12,Z
 530 010c D180      	 ldd r13,Z+1
 531               	.LVL25:
 532               	.LBB14:
 533               	.LBB15:
 270:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				uint16_t CurrDescriptorSize = DESCRIPTOR_CAST(*CurrConfigLoc, USB_Descriptor_Header_t).Size;
 534               	 .loc 2 270 0
 535 010e F601      	 movw r30,r12
 536               	.LVL26:
 537 0110 8081      	 ld r24,Z
 538 0112 90E0      	 ldi r25,0
 539               	.LVL27:
 540 0114 9E01      	 movw r18,r28
 541 0116 8C17      	 cp r24,r28
 542 0118 9D07      	 cpc r25,r29
 543 011a 00F4      	 brsh .L20
 544 011c 9C01      	 movw r18,r24
 545               	.L20:
 546               	.LVL28:
 275:LUFA/Drivers/USB/Core/ConfigDescriptors.h **** 				*CurrConfigLoc  = (void*)((uintptr_t)*CurrConfigLoc + CurrDescriptorSize);
 547               	 .loc 2 275 0
 548 011e C601      	 movw r24,r12
 549 0120 820F      	 add r24,r18
 550 0122 931F      	 adc r25,r19
 551 0124 F701      	 movw r30,r14
 552 0126 9183      	 std Z+1,r25
 553 0128 8083      	 st Z,r24
 554               	 .loc 2 276 0
 555 012a AE01      	 movw r20,r28
 556 012c 421B      	 sub r20,r18
 557 012e 530B      	 sbc r21,r19
 558 0130 F801      	 movw r30,r16
 559 0132 5183      	 std Z+1,r21
 560 0134 4083      	 st Z,r20
 561               	.LBE15:
 562               	.LBE14:
 128:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		uint16_t PrevBytesRem = *BytesRem;
GAS LISTING  			page 25


 129:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 130:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		USB_GetNextDescriptor(BytesRem, CurrConfigLoc);
 131:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 132:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		if ((ErrorCode = ComparatorRoutine(*CurrConfigLoc)) != DESCRIPTOR_SEARCH_NotFound)
 563               	 .loc 1 132 0
 564 0136 F501      	 movw r30,r10
 565 0138 0995      	 icall
 566               	.LVL29:
 567 013a 8230      	 cpi r24,lo8(2)
 568 013c 01F0      	 breq .L19
 133:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		{
 134:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			if (ErrorCode == DESCRIPTOR_SEARCH_Fail)
 569               	 .loc 1 134 0
 570 013e 8130      	 cpi r24,lo8(1)
 571 0140 01F4      	 brne .L22
 135:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			{
 136:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 				*CurrConfigLoc = PrevDescLoc;
 572               	 .loc 1 136 0
 573 0142 F701      	 movw r30,r14
 574 0144 D182      	 std Z+1,r13
 575 0146 C082      	 st Z,r12
 137:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 				*BytesRem      = PrevBytesRem;
 576               	 .loc 1 137 0
 577 0148 F801      	 movw r30,r16
 578 014a D183      	 std Z+1,r29
 579 014c C083      	 st Z,r28
 580 014e 00C0      	 rjmp .L22
 581               	.LVL30:
 582               	.L26:
 583               	.LBE13:
 138:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			}
 139:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 140:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 			return ErrorCode;
 141:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 		}
 142:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	}
 143:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 
 144:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** 	return DESCRIPTOR_SEARCH_COMP_EndOfDescriptor;
 584               	 .loc 1 144 0
 585 0150 82E0      	 ldi r24,lo8(2)
 586               	.L22:
 587               	 
 145:LUFA/Drivers/USB/Core/ConfigDescriptors.c **** }
 588               	 .loc 1 145 0
 589 0152 DF91      	 pop r29
 590 0154 CF91      	 pop r28
 591 0156 1F91      	 pop r17
 592 0158 0F91      	 pop r16
 593               	.LVL31:
 594 015a FF90      	 pop r15
 595 015c EF90      	 pop r14
 596               	.LVL32:
 597 015e DF90      	 pop r13
 598 0160 CF90      	 pop r12
 599 0162 BF90      	 pop r11
 600 0164 AF90      	 pop r10
 601               	.LVL33:
 602 0166 0895      	 ret
GAS LISTING  			page 26


 603               	 .cfi_endproc
 604               	.LFE86:
 606               	.Letext0:
 607               	 .file 3 "/usr/lib/avr/include/stdint.h"
 608               	 .file 4 "LUFA/Drivers/USB/Core/AVR8/../StdDescriptors.h"
GAS LISTING  			page 27


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ConfigDescriptors.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:212    .text:0000000000000000 USB_GetNextDescriptorOfType
    {standard input}:288    .text:0000000000000046 USB_GetNextDescriptorOfTypeBefore
    {standard input}:390    .text:00000000000000a6 USB_GetNextDescriptorOfTypeAfter
    {standard input}:466    .text:00000000000000e4 USB_GetNextDescriptorComp
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "DeviceStandardReq.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.baf1f11f548d495,"",@progbits
  10 0000 789C 6362 	 .ascii "x\234cb`b\300\006\374\2414'\003##\003\003+\003\003\033\003\003"
  10      6062 C006 
  10      FCA1 3427 
  10      0323 2303 
  10      032B 0303 
  11 0017 0703 0317 	 .ascii "\007\003\003\027H9S4c\016#\203\026\003\003#P\362\307\177(`\004"
  11      4839 5334 
  11      630E 2383 
  11      1603 0323 
  11      50F2 C77F 
  12 002e 8932 3233 	 .ascii "\211223pCLd\206\032\300\003\304\274pc\001\365*\013]"
  12      7043 4C64 
  12      861A C003 
  12      C4BC 7063 
  12      01F5 2A0B 
  13               	 .text
  14               	 .section .gnu.lto_.inline.baf1f11f548d495,"",@progbits
  15 0000 789C 6362 	 .string "x\234cb`b\300\006d\030!4'\003\203\344m&F\006&\235\007\023\264\030\330\026\310\203\22532(\212\002\305\254\326\235`d`\233\003\025\343\002\022\254\f\206\002@\211\250S\323\320$\330\030$N"
  15      6062 C006 
  15      6418 2134 
  15      2703 83E4 
  15      6D26 4606 
  16 0041 B531 69EC 	 .string "\2651i\354\330\300\2160\006$\303\301\300#\002\224\020h\250E\025\347\322\022PD\023g\346a"
  16      D8C0 8E30 
  16      0624 C3C1 
  16      C023 0294 
  16      1068 A845 
  17 0060 3997 891B 	 .string "9\227\211\033\344\002n&Iq\240\274\324\267\004T\371\t~\023\374X\371\200\034\020\003b\024\017\203\0307P\251\322\025\177T+\300\004/\303A\206\013 \247\345\275\232\314\201E\036'\301"
  17      E402 6E26 
  17      4971 A0BC 
  17      D4B7 0454 
  17      F909 7E13 
  18 009b 00        	 .string ""
  19 009c C976 1E0E 	 .ascii "\311v\036\016"
  20               	 .text
  21               	 .section .gnu.lto_.pureconst.baf1f11f548d495,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`b\020f\200"
  22      6062 1066 
  22      8000 
  23 000a 4E06 2B46 	 .string "N\006+F)V)6)\016).)n)\036)^)"
  23      2956 2936 
  23      290E 292E 
  23      296E 291E 
  23      295E 2900 
  24 001e 0F67 016D 	 .ascii "\017g\001m"
  25               	 .text
  26               	 .section .gnu.lto_USB_Device_GetSerialString.baf1f11f548d495,"",@progbits
  27 0000 789C 8D55 	 .string "x\234\215UoL[U\024?\347\276\327\366\265@\371\267\r\311\222\0057\211\021'\005]\342\214Y\"c\231.\321}\030A\026gB\220\026\327\246\005R\312\"~\341\225bBX\"\270`f\346\024\347\2620\262\005\\\230\032\307\224n\321L]\200\250_$!\261Fe\211\031s&~\353\340y\356\275\357=\312\237\255{i\357y\357\334\363\273\277s~\347\276\373\0300X{u\321\377?\r M\026s"
GAS LISTING  			page 2


  27      6F4C 5B55 
  27      143F E7BE 
  27      D7F6 B540 
  27      F9B7 0DC9 
  28 007f D9E0 0C40 	 .ascii "\331\340\f@\\c\350\2267\nS\373\036\007\335\343\340c\256\212\016"
  28      5C63 E896 
  28      370A 53FB 
  28      1E07 DDE3 
  28      E063 AE8A 
  29 0094 E976 30A7 	 .ascii "\351v0\247p\273\204\333\211\232t\273\254\033M\342\257in\246\\"
  29      70BB 84DB 
  29      899A 74BB 
  29      AC1B 4DE2 
  29      AF69 6EA6 
  30 00a9 FE11 28D2 	 .ascii "\376\021(\3223\257P\244\007\221\373\001\241\233)\252\303\351"
  30      33AF 50A4 
  30      0791 FB01 
  30      A19B 29AA 
  30      C3E9 
  31 00bb D2DC 1EEC 	 .ascii "\322\334\036\354~\035y*\216\355pF\327\007S\177-\317\251\357\364"
  31      7E1D 792A 
  31      8EED 7046 
  31      D707 537F 
  31      2DCF A9EF 
  32 00d0 A7F4 417D 	 .ascii "\247\364A}\331\350\3060R\326\273\020Z\020\216\320\003\026\b\303"
  32      D9E8 C630 
  32      52D6 BB10 
  32      5A10 8ED0 
  32      0316 08C3 
  33 00e4 D654 22A0 	 .ascii "\326T\"\240'\364\376\241$r\230A!\n\203=\017\007KN\316\276\253"
  33      27F4 FEA1 
  33      2472 9841 
  33      210A 833D 
  33      0F07 4B4E 
  34 00fb EA9F E97D 	 .ascii "\352\237\351}\272at\207Qe\260\177\005\250I n\b\234\032x\1775"
  34      BA61 7487 
  34      5165 B07F 
  34      05A8 4920 
  34      6E08 9C1A 
  35 0112 B0FE 2181 	 .ascii "\260\376!\201\277\f\f\254\0066g\003\216\263d\3120N\247\007\257"
  35      BF0C 0CAC 
  35      0636 6703 
  35      8EB3 64CA 
  35      304E A707 
  36 0127 BFF4 1882 	 .ascii "\277\364\030\202\037\317\341v\022FZ\205\354\bY\225\354(Y\007"
  36      1FCF E176 
  36      1246 5A85 
  36      EC08 5995 
  36      EC28 5907 
  37 013b D933 643D 	 .ascii "\3313d=@2\344\230\316\\\323\346\231 \257\371\234\317\203\n\370"
  37      4032 E498 
  37      CE5C D3E6 
  37      9920 AFF9 
  37      9CCF 830A 
  38 0150 5088 ED08 	 .ascii "P\210\355\bEt\347(\246\0016\231\253l\346\017[\314\207\022\262"
  38      4574 E728 
  38      A601 3699 
GAS LISTING  			page 3


  38      AB6C E60F 
  38      5BCC 8712 
  39 0165 67C9 969A 	 .ascii "g\311\226\232\224[i\322\271\203\006\225w\020z\251\201ef\215\237"
  39      945B 69D2 
  39      B983 0695 
  39      7710 7AA9 
  39      8165 668D 
  40 017a 0F0C 65D4 	 .ascii "\017\fe\324\350d\320\232\255F\231\030\360(\272\032h\244Ms\030"
  40      E864 D09A 
  40      AD46 9918 
  40      F028 BA1A 
  40      68A4 4D73 
  41 018f 1919 6506 	 .ascii "\031\031e\006\342\377\032\177\\\25109,\262\344\361\305\204\203"
  41      E2FF 1A7F 
  41      5CA9 3039 
  41      2CB2 E4F1 
  41      C584 83
  42 01a2 232F A083 	 .ascii "#/\240\203p\346\202\b\343\250\310\335\276\r.\341G\372\007/\204"
  42      70E6 8208 
  42      E3A8 C8DD 
  42      BE0D 2EE1 
  42      47FA 072F 
  43 01b7 D125 E7A6 	 .ascii "\321%\347\246\341\372\225\357\214\201;\243\350\3071\002\205p"
  43      E1FA 95EF 
  43      8C81 3BA3 
  43      E8C7 3102 
  43      8570 
  44 01c9 EB87 702A 	 .ascii "\353\207p*>\024/\b\243\306\263r7\212\344\334fR?@\317\335O\323"
  44      3E14 2F08 
  44      A3C6 B372 
  44      378A E4DC 
  44      6652 3F40 
  45 01e1 9FA0 A4F0 	 .ascii "\237\240\244\360\343E\221\"\200H(\221^\227\320\315\305\t\327"
  45      E345 9122 
  45      8048 2891 
  45      5E97 D0CD 
  45      C509 D7
  46 01f4 4A42 2C7B 	 .ascii "JB,{B\262\262t\205\037'\b\302c\277zP\354\231\345\234\225\310"
  46      42B2 B274 
  46      851F 2708 
  46      C263 BF7A 
  46      50EC 99E5 
  47 020b FBAF CAD3 	 .ascii "\373\257\312\323\3769\035\263\262\346\302\362\252T\257\234K\375"
  47      FE39 1DB3 
  47      B2E6 C2F2 
  47      AA54 AF9C 
  47      4BFD 
  48 021d 76C3 6366 	 .ascii "v\303cf.\033i\245,nF\254h\2533\207\211\207\336ce\032z\356$F\206"
  48      2E1B 69A5 
  48      2C6E 46AC 
  48      68AB 3387 
  48      8987 DE63 
  49 0238 9F5F D569 	 .ascii "\237_\325ij\361\312kG{\371\033\314\326h{\253\310-\310)'%7]!\364"
  49      6AF1 CA6B 
  49      477B F91B 
  49      CCD6 687B 
  49      ABC8 2DC8 
GAS LISTING  			page 4


  50 0253 84B8 6E33 	 .ascii "\204\270n3\320K\242_%\277B\360\033\262R\273\334\224Y\256GBr\300"
  50      D04B A25F 
  50      25BF 42F0 
  50      1BB2 52BB 
  50      DC94 59AE 
  51 026b 9CB3 03FE 	 .ascii "\234\263\003\3764\003\370\214HBi\200uA\267\326\006\345>\272>"
  51      3403 F88C 
  51      4842 6980 
  51      7541 B7D6 
  51      06E5 3EBA 
  52 0280 E8EF CCA0 	 .ascii "\350\357\314\240\220d$\r\231L\316\217_S\t\"\003\3225\271\315"
  52      9064 240D 
  52      994C CE8F 
  52      5F53 0922 
  52      03D2 35B9 
  53 0295 8F53 C23B 	 .ascii "\217S\302;jy\247!1\231\030\037\336-'B\270#\204\212\020\227\213"
  53      6A79 A721 
  53      3199 181F 
  53      DE2D 2742 
  53      B823 848A 
  54 02ac F23D F4DE 	 .ascii "\362=\364\336\216?cO\255\022]\n\257\302\251r\322=1\226\370r\270"
  54      8E3F 634F 
  54      AD12 5D0A 
  54      AFC2 A972 
  54      D23D 3196 
  55 02c3 C20A CCA5 	 .ascii "\302\n\314\245\225y,\250V*\231\244\271\202\264/19\374\224\005"
  55      9579 2CA8 
  55      562A 99A4 
  55      B982 B42F 
  55      3139 FC94 
  56 02d8 C823 496D 	 .ascii "\310#Im\322\f\3009\001\310\263\310\034\242\313T\207\006\366j"
  56      D20C C039 
  56      01C8 B3C8 
  56      1CA2 CB54 
  56      8706 F66A 
  57 02ec AA28 4C03 	 .ascii "\252(L\003;\032\315\232n\r?a-\357\2450\261|\376F\371x9\2006\316"
  57      3B1A CD9A 
  57      6E0D 3F61 
  57      2DEF A530 
  57      B17C FE46 
  58 0306 3FC3 4F5A 	 .ascii "?\303OZ\200|\022A,\323\257X\256\002\362\036\221\007\267\2309"
  58      807C 1241 
  58      2CD3 AF58 
  58      AE02 F21E 
  58      9107 B798 
  59 031b 6ECF 1485 	 .ascii "n\317\024\205\260\220\346\271Z\337.\304O\242\315*(\335\266Xs"
  59      B090 E6B9 
  59      5ADF 2EC4 
  59      4FA2 CD2A 
  59      28DD B658 
  60 0330 8054 A642 	 .ascii "\200T\246BC\236z{\3512\316\201J:)\247\227\336\"M\324\371\245"
  60      439E 7A7B 
  60      E932 CE81 
  60      4A3A 29A7 
  60      97DE 224D 
  61 0347 F3C8 6B74 	 .ascii "\363\310ktJAE>\257XK\025\233Y\222jc\314rn\"\277P\371Y\273\033"
  61      4A41 453E 
GAS LISTING  			page 5


  61      AF58 4B15 
  61      9B59 926A 
  61      63CC 726E 
  62 0362 2E1B FC85 	 .ascii ".\033\374\205\035\266y#\354\026\362\013l\225\215\325\354W\310"
  62      1DB6 7923 
  62      EC16 F20B 
  62      6C95 8DD5 
  62      EC57 C8
  63 0375 AEAC 24C4 	 .ascii "\256\254$\304\267=\271\016H\017?\211t]o\b\363\206\025q\274\327"
  63      B73D B90E 
  63      480F 3F89 
  63      745D 6F08 
  63      F386 1571 
  64 038b 7C27 4A4C 	 .ascii "|'JL\006\343\343iE\276-!,\315\334IB\365I\241\372\210P\275TJ\342"
  64      06E3 E369 
  64      45BE 2D21 
  64      2CCD DC49 
  64      42F5 49A1 
  65 03a6 A03A 9C57 	 .ascii "\240:\234W\215\213\214rr\211<\334@\337`\273\3112XY\333d&\366"
  65      8D8B 8C72 
  65      7289 3CDC 
  65      40DF 60BB 
  65      C932 5859 
  66 03be E6C2 B5A9 	 .ascii "\346\302\265\251Yf\321I\256\342\f\271\231y\244\260\371t\214\366"
  66      5966 D149 
  66      AEE2 0CB9 
  66      9979 A4B0 
  66      F974 8CF6 
  67 03d2 8546 8A2B 	 .ascii "\205F\212+\346\026f\367\322\347\251\021\245\332\257\317qN\017"
  67      E616 66F7 
  67      D2E7 A911 
  67      A5DA AFCF 
  67      714E 0F
  68 03e5 3FC3 2503 	 .ascii "?\303%\003?4\006O$/\315\236\314\370<\3443X\314zl\320Qm\036\227"
  68      3F34 064F 
  68      242F CD9E 
  68      CCF8 3CE4 
  68      3358 CC7A 
  69 03ff 6717 D69F 	 .ascii "g\027\326\237\273\306\204\313\217\323\031GY\013\257\n\262\234"
  69      BBC6 84CB 
  69      8FD3 1947 
  69      590B AF0A 
  69      B29C 
  70 0411 93F4 39B8 	 .ascii "\223\3649\270y\317H\315\355\362\343\254\331\200\373|\n,\366\337"
  70      79CF 48CD 
  70      EDF2 E3AC 
  70      D980 FB7C 
  70      0A2C F6DF 
  71 0425 C72E A00C 	 .ascii "\307.\240\f~\360\312?A\374n\317{\205\366\261*\256\006*r^\354"
  71      7EF0 CA3F 
  71      41FC 6ECF 
  71      7B85 F6B1 
  71      2AAE 062A 
  72 043c F0EA 97EB 	 .ascii "\360\352\227\353\367\327\370\366E\203\307\002\321\016_}\335^"
  72      F7D7 F8F6 
  72      4583 C702 
  72      D10E 5F7D 
GAS LISTING  			page 6


  72      DD5E 
  73 044e 5F6D 5B34 	 .ascii "_m[4\340\253y\365\320n_e\245\264\373\002\307\202\315\201F~_y"
  73      E0AB 79F5 
  73      D06E 5F65 
  73      A5B4 FB02 
  73      C782 CD81 
  74 0466 14B4 604B 	 .ascii "\024\264`K,\322^Y]e\335T{\353\202o\036\n4\371k\374\376h\240\243"
  74      2CD2 5E59 
  74      5D65 DD54 
  74      7BEB 826F 
  74      1E0A 34F9 
  75 0480 23AF 2E10 	 .ascii "#\257.\020\r6\205k\2176E\017vF<\362ioW,PP\333\031\215\006Zc/"
  75      0D36 856B 
  75      8F36 450F 
  75      7646 3CF2 
  75      696F 572C 
  76 049d 86DB DE68 	 .ascii "\206\333\336h\n\037h\215\3716&'^\371\253m\213D\332ZMC\324\b\256"
  76      0A1F 688D 
  76      F936 2627 
  76      5EF9 AB6D 
  76      8B44 DA5A 
  77 04b6 4820 D216 	 .ascii "H \322\026\355\002\2659\034\004\255\261\221\370:\303\261G:b\035"
  77      ED02 B539 
  77      1C04 ADB1 
  77      91F8 3AC3 
  77      B147 3A62 
  78 04cb 65E5 D53B 	 .ascii "e\345\325;\313\312\237\366\270\303\355\221\262\362\252\235e\257"
  78      CBCA 9FF6 
  78      B8C3 ED91 
  78      B2F2 AA9D 
  78      65AF 
  79 04dd 79DC A0EC 	 .ascii "y\334\240\354\211\002\013\002\243\361m\360\332\274u\261\246X"
  79      8902 0B02 
  79      A3F1 6DF0 
  79      DABC 75B1 
  79      A658 
  80 04ef E07F 1323 	 .ascii "\340\177\023#Q9"
  80      5139 
  81               	 .text
  82               	 .section .gnu.lto_USB_Device_GetStatus.baf1f11f548d495,"",@progbits
  83 0000 789C 8D55 	 .string "x\234\215Ukh\034U\024>gfggv7\217\202m\322$\024b~(T\334\200\365G\321\037\022\233\n\202\240$\324,X\bkg\242\211\353f\335lZD0\263/h\324hL\242lm,\224Z\252 \324`\033\333D\312\222\266\342\032\243\324\bZ\355\217\365\005>\2524\202\211\226\302z\356\2753\223\315\356\222d`\356\275s\317\353;\3379\367\216\004\022\224>1z\317j"
  83      6B68 1C55 
  83      143E 6766 
  83      6767 7637 
  83      8F82 6DD2 
  84 0079 1768 462F 	 .string "\027hF/\2404\372\005@\\\223dO\272\021LM\346\243*\326\222\353\360\235`z\0256V\271P\021\252\212\344\346\333\032\337v\243&\266U{\241\241G,<\210l\001\bC\222\354R\334*\355\f\355G\206Bn\201\343\2469\226OO\317\270\322\037\230\207\315Ba(\204\004\367n\204\036\204'0\204\250\361I\302\265\370\205avf<\241d\314T\266Px\200\333=\272I\2737\306G\\\246\023P\226 \262\221\341i)\233/\024&\217\244\177\017\264 \350x\022[(\236\230\335\020B\227J\037\307\351C\243\371\004\315\036K\350%\241\342c\0325\326\316V\366\261\215\rul\250\247\001\266\263U\003\033\032\331\320\304\006\212\252@\3124G\233\205\0350\210\364t\321\310\030\r\240\304f9\007\211\374g9\267\216\247P\261B\260\fd\246\273"
  84      A034 FA05 
  84      405C 9364 
  84      4FBA 114C 
  84      4DE6 A32A 
  85 0161 89EF 321F 	 .ascii "\211\3572\037\376(\013a\037\272\357\202\235$:\no\305MsK\b\335"
  85      FE28 0B61 
  85      1FBA EF82 
  85      9D24 3A0A 
  85      6FC5 4D73 
  86 0178 2FC0 4DA2 	 .ascii "/\300M\242\201Vj\204;g\226*\317\330p\030\370\034RY\311\3610\002"
  86      8156 6A84 
GAS LISTING  			page 7


  86      3B67 962A 
  86      CFD8 7018 
  86      F81C 5259 
  87 0190 AFC4 5366 	 .ascii "\257\304Sfve\22145&~\n\205\246%\230\274\215\366\231\033\227\211"
  87      7665 9134 
  87      3526 7E0A 
  87      85A6 2598 
  87      BC8D F699 
  88 01a7 5C2A 154B 	 .ascii "\\*\025K\277r\244\t!\225\213H\016\320W\272Q\236\247\256\021\341"
  88      BF72 A409 
  88      2195 8B48 
  88      0ED0 57BA 
  88      519E A7AE 
  89 01bd B831 E590 	 .ascii "\2701\345\220\313L\337g\003P\035\360\340\200\367D8]\314\257\307"
  89      CB4C DF67 
  89      0350 1DF0 
  89      E080 F744 
  89      385D CCAF 
  90 01d2 F2F5 29A4 	 .ascii "\362\365)\244\256\243c\303$k\352\031 \203D5\347\356\352\260\257"
  90      AEA3 63C3 
  90      246B EA19 
  90      2083 4435 
  90      E7EE EAB0 
  91 01e7 8C3B 74D4 	 .ascii "\214;t\324\024\206\210\324(U!\357c\3512L\347>r0i\2251)\353a\322"
  91      1486 88D4 
  91      2855 21EF 
  91      63E9 324C 
  91      E73E 7230 
  92 0202 4A30 5D05 	 .ascii "J0]\005\264\312&\277\177\244\327B\341\232<:\205\f\206\233\241"
  92      B4CA 26BF 
  92      7FA4 D742 
  92      E19A 3C3A 
  92      850C 869B 
  93 0217 5D80 E4F9 	 .ascii "]\200\344\371\344\177w\330\036<\004\205S\311\030\316\201T\234"
  93      E47F 77D8 
  93      1E3C 0485 
  93      53C9 18CE 
  93      8154 9C
  94 022a 459F 1D34 	 .ascii "E\237\0354@\345,\341T\026}\361\357\314M\267\355\312\313\373\302"
  94      40E5 2CE1 
  94      5416 7DF1 
  94      EFCC 4DB7 
  94      EDCA CBFB 
  95 023f BBB9 BEB0 	 .ascii "\273\271\276\260Q\223\223\277\222\177;\t\371\310\r\303\221\310"
  95      5193 93BF 
  95      927F 3B09 
  95      F9C8 0DC3 
  95      91C8 
  96 0251 DE2F B6D8 	 .ascii "\336/\266\330a\033\035\313\276\276\370j\321a\363I\360\342F\207"
  96      611B 1DCB 
  96      BEBE F86A 
  96      D161 F349 
  96      F0E2 4687 
  97 0265 6D3F 7C6F 	 .ascii "m?|o\232f\366\233\305\035\224\0349f:\276Z\020^y\340\344\354\305"
  97      9A66 F69B 
  97      C51D 941C 
  97      3966 3ABE 
GAS LISTING  			page 8


  97      5A10 5E79 
  98 027d D989 63C3 	 .ascii "\331\211c\303\252u@\354\223\222\235\377\347\214\252\343Y~Z\204"
  98      AA75 40EC 
  98      9392 9DFF 
  98      E78C AAE3 
  98      597E 5A84 
  99 0291 7A8F 80DB 	 .ascii "z\217\200\333\207[-GU\265\334\303\\\356\332\211\245\334n\035"
  99      875B 2D47 
  99      55B5 DCC3 
  99      5CEE DA89 
  99      A5DC 6E1D 
 100 02a5 CF91 12CB 	 .ascii "\317\221\022\313{"
 100      7B
 101 02aa 224E D956 	 .string "\"N\331V1\215\352\337\004\272j\260,\271\376L\372\324\245\037\344\262\200\313?{VCI\302`[\211\277?\212\3759\360\207\247\316\020w\263\234\273:2\342\245l\026\362o\223u\266\250\236\244\\dS~q~\371\035\305&\275\206\024*\024\277\246h\257r\031t\234&\270\353\327\201\363\016\305t\225\245\277\302\370\276P\316\367z\214:\331\210\376\324\340\245{KN\230$\030\277<;qk\244\274\306\205\257\225\325h\262\240|{I\300_+RN\336t\234\343\3045\220\ro\207\025\024\t>,$\353\371!+\336\3407\306\246\316c)\271\312*\2715\022\314\340j\223o\021\344\226\374\205\017\3012k\362\3617\353\351\007A)\027u7#;w,Y\236\371\245_\250\360\237\254a\333U\201\355\245\265\240%\333\347\025\362\251c\256<\313\245\212\345\341M\377\323\307;Ja\274|\371dQ\001\024\021\244qS\005\310\234&"
 101      318D EADF 
 101      04BA 6AB0 
 101      2CB9 FE4C 
 101      FAD4 A51F 
 102 03ab 0BBC 00   	 .string "\013\274"
 103 03ae 4D64 D300 	 .string "Md\323"
 104 03b2 19F3 5D33 	 .ascii "\031\363]3O?\357*\247\b\013\033\026\241\t\340KH\336\230\233\372"
 104      4F3F EF2A 
 104      A708 0B1B 
 104      16A1 09E0 
 104      4B48 DE98 
 105 03c8 136D D29C 	 .ascii "\023m\322\234\353\252\266\207\256J\366\204\210v`\267\252DW\241"
 105      EBAA B687 
 105      AE4A F684 
 105      8876 60B7 
 105      AA44 57A1 
 106 03dc FB3A 5DA3 	 .ascii "\373:]\243t*\324ko\277G3*\374N\365\300k\364\373d7\243\365\023"
 106      742A D46B 
 106      6FBF 4733 
 106      2AFC 4EF5 
 106      C06B F4FB 
 107 03f5 BB02 F1FC 	 .ascii "\273\002\361\374\255a\307\251x\272HBz\254z;\037\331\367P[k{\264"
 107      AD61 C7A9 
 107      78BA 4842 
 107      7AAC 7A3B 
 107      1FD9 F750 
 108 040d F7A0 111D 	 .ascii "\367\240\021\035h\335\327\371`\353\236\376\250\321\332n\034\354"
 108      68DD D7F9 
 108      60EB 9EFE 
 108      A8D1 DA6E 
 108      1CEC 
 109 041f 3D60 74C6 	 .ascii "=`t\306\202a=\030\325;\214\347\374\007\340v\222v\013A\367\236"
 109      8261 3D18 
 109      D53B 8CE7 
 109      FC07 E076 
 109      9276 0B41 
 110 0435 C168 D408 	 .ascii "\301h\324\b\307B\317w\032\241\236\307\372\017\031QC\367\337\323"
 110      C742 CF77 
 110      1AA1 9EC7 
 110      FA0F 1951 
 110      43F7 DFD3 
 111 0449 5CA4 D161 	 .ascii "\\\244\321a<\333\0373\272\202\317\030\203\221\275\341\340\223"
 111      3CDB 1F33 
GAS LISTING  			page 9


 111      BA82 CF18 
 111      8391 BDE1 
 111      E093 
 112 045b 2152 D855 	 .ascii "!R\330Um\331\221\343\330\340\200\332\246\353Qc``We\fm\217w\354"
 112      6DD9 91E3 
 112      D8E0 80DA 
 112      A6EB 5163 
 112      6060 5765 
 113 0474 6EF5 FBC5 	 .ascii "n\365\373\305\2747\254G\372{\303\261n\366\345\177\032\\\355\301"
 113      BC37 AC47 
 113      FA7B C3B1 
 113      6EF6 E57F 
 113      1A5C EDC1 
 114 0488 58F0 7FB3 	 .ascii "X\360\177\2635^\216"
 114      355E 8E
 115               	 .text
 116               	 .section .gnu.lto_USB_Device_ClearSetFeature.baf1f11f548d495,"",@progbits
 117 0000 789C A556 	 .string "x\234\245V]l\024U\024>\367\316\354\316\354\356l[b4Rh\331\266P\023\214]\023|\350\233\251\202\t\211\361\241\004K\"IS\230\251\026\327mmkc\342C\247\273\333\004S(\rQ$j\242\215\341\301\007\025%\304\n$.\205\022v\2614\210\bi\023\255\220\332J\177\254\032$\020b=\367\336\371\331\277\330\"\223\354\231{\357\271\347;\347|\347\3363K\201B\3563\210\277C~\200\367\360M\202@\350\300E\200\036\225JZo)\230\252\304\245G\214\251|\256\fL\277\226~\022LM&\001\261\325C\275{\037\303\345"
 117      5D6C 1455 
 117      143E F7CE 
 117      ECCE ECEE 
 117      6C5B 6234 
 118 00a7 939A 976A 	 .string "\223\232\227j\247\312q\246\374\020\306\231B\325\f\235J}\213\017\343\314\377q-\316|6\200\337\036\004\210&\006\032!l"
 118      A7CA 71A6 
 118      FC10 C699 
 118      42D5 0C9D 
 118      4A7D 8B0F 
 119 00ce 04BA A924 	 .ascii "\004\272\251${\274\212\352\363\0074\322\275\223\260\220i%\f\232"
 119      7BBC 8AEA 
 119      F307 34D2 
 119      BD93 B090 
 119      6925 0C9A 
 120 00e2 E6C1 C991 	 .ascii "\346\301\311\221\351\353\217&\322\223\346\200\371\317R7\211\020"
 120      E9EB 8F26 
 120      D293 E680 
 120      F9CF 5237 
 120      8910 
 121 00f4 CCEE 0902 	 .ascii "\314\356\t\002\315\004^\302\tQ\371\2132\2136\342\346+l\223\177"
 121      CD04 5EC2 
 121      0951 F98B 
 121      328B 36E2 
 121      E62B 6C93 
 122 0109 FCD8 2F9B 	 .ascii "\374\330/\233G\315\275\346\322Rw\204H\024^(h\231\361|A\223\223"
 122      47CD BDE6 
 122      D252 7784 
 122      4814 5E28 
 122      6899 F17C 
 123 0120 4B4B FB8E 	 .ascii "KK\373\216\365\246\033\3032D\210\354A\341\361\262\221\302\204"
 123      F5A6 1BC3 
 123      3244 88EC 
 123      41E1 F1B2 
 123      91C2 84
 124 0133 0A3A 1924 	 .ascii "\n:\031$\225\340g\313\001\266\242\261Q\220\215\212P\367\t\352"
 124      95E0 67CB 
 124      01B6 A2B1 
 124      5190 8D8A 
 124      50F7 09EA 
GAS LISTING  			page 10


 125 0147 56B1 C96A 	 .ascii "V\261\311j&J\231X\303\304Z&\312\230(gb\035\no\210\211\n6\255"
 125      264A 9958 
 125      C3C4 5A26 
 125      CA98 2867 
 125      621D 0A6F 
 126 0160 64A2 8A89 	 .ascii "d\242\212\211\365Ll`\242\232\t"
 126      F54C 6C60 
 126      A29A 09
 127 016b 8CC8 0309 	 .string "\214\310\003\t\323\034\b\001\013\034\237\006\224\214\265\035\204\262\2674\n\261\361\241_\257K:9B<\260\207\310\217\303FL\365\003x\277\3074K\"Dy\013\356\"\0018R\333\bC`Y\253<W\303\311}\024\342'\343\013\324\306X\2170l\033\206\t\360\035$\222\256f?\354\353I\230\311KWQ\355c\246/\023q\332,\305\320#\270\316m\205R\312T\216;J\312\225r\006\361;pko\251t\001\317\205p\306myv\323\343\262\355\337\303\263\363\257,;\342d\027\233\215\357\262!\274\210\002p\036\316N\367\024;k<(\222\025\216\f\363>\316\356\265\351\357\025{\243r?\354R\307\177|,\376\225fc\250\b\303\375I\"\266\324\321\207\204\312A\005\0075 \0165\333\036\340X{,t\f\320\223\313\227,\370\2726\353\362\345\177p\276\002\210\222\313W\300\251\260\313\227\027bA\316\327\341\205\264b\035Zq\037"
 127      D31C 0801 
 127      0B1C 9F06 
 127      948C B51D 
 127      84B2 B734 
 128 026c 841D 0F5F 	 .ascii "\204\035\017_\273\237\210$7\242\205\370]\242\223\257\271\373"
 128      BB9F 8824 
 128      37A2 85F8 
 128      5DA2 93AF 
 128      B9FB 
 129 027e 20C2 5887 	 .ascii " \302X\207\266\313^+\302ef*\025\343\376\024P\261.\002@\255\310"
 129      B6CB 5E2B 
 129      C265 662A 
 129      15E3 FE14 
 129      50B1 2E02 
 130 0295 E0F4 AD43 	 .ascii "\340\364\255C\232cP \007\005\356(R\nb\252\350 \003\007\223\037"
 130      9A63 5020 
 130      0705 EE28 
 130      520A 62AA 
 130      E820 0307 
 131 02ab 6575 108D 	 .ascii "eu\020\215\302\316\345:\bw6\n\303\251\017\377ZL\325:\267W\f\222"
 131      C2CE E53A 
 131      0877 360A 
 131      C3A9 0FFF 
 131      5A4C D53A 
 132 02c3 177E 1AC1 	 .ascii "\027~\032\301\303t\322b\205E\322,xg\204\274\323\2034\360,\212"
 132      C374 D262 
 132      8545 D22C 
 132      7867 84BC 
 132      D383 34F0 
 133 02d9 7E13 3E8A 	 .ascii "~\023>\212\262 O\214\034\353\277\223R\3620\177>\256\270hTX\254"
 133      B220 4F8C 
 133      1CEB BF93 
 133      52F2 307F 
 133      3EAE B868 
 134 02f0 CE01 9CCD 	 .ascii "\316\001\234\315\004\024\344\235A\264O\003:Ir>J\321\306\271\006"
 134      0414 E49D 
 134      41B4 4F03 
 134      3A49 723E 
 134      4AD1 C6B9 
 135 0305 E721 31F7 	 .ascii "\347!1\367\313\324\357\303\016\345\245\005\330R\341\236$\372"
 135      CBD4 EFC3 
 135      0EE5 A505 
 135      D852 E19E 
 135      24FA 
 136 0317 CF9F ACFF 	 .ascii "\317\237\254\377\210\215\253\376\317\r\341\247k\223\003\341\334"
 136      888D ABFE 
 136      CF0D E1A7 
 136      6B93 03E1 
GAS LISTING  			page 11


 136      DC
 137 0328 0ED7 970F 	 .ascii "\016\327\227\017\372\211dQ0q \237\202\251^\237K\201$(X\263,\005"
 137      FA89 6451 
 137      3071 209F 
 137      82A9 5E9F 
 137      4B81 2428 
 138 0340 DF9C E168 	 .ascii "\337\234\341h:9\307\035\257E\033\356;\304\325\303[\205\342\277"
 138      3A39 C71D 
 138      AF45 1BEE 
 138      3BC4 D5C3 
 138      5B85 E2BF 
 139 0354 60D0 C80E 	 .ascii "`\320\310\016\321\017\013\224\207\330{\374\351\274\370\246\217"
 139      D10F 0B94 
 139      87D8 7BFC 
 139      E9BC F8A6 
 139      8F
 140 0365 6494 4816 	 .ascii "d\224H\026\226e+\212o\236\305\227\346\361\225\243\r\217\257\304"
 140      9665 2B8A 
 140      6F9E C597 
 140      E6F1 95A3 
 140      0D8F AFC4 
 141 0379 892F BD6C 	 .ascii "\211/\275l|\345\354:\270'zr\352\306M\2220\335\357)^\210SX\210"
 141      7CE5 EC3A 
 141      B827 7A72 
 141      EAC6 4D92 
 141      30DD EF29 
 142 0392 151D EAD8 	 .ascii "\025\035\352\330\002\006t\342\355\342\334\364\372\346\256`\220"
 142      0206 74E2 
 142      EDE2 DCF4 
 142      FAE6 AE60 
 142      90
 143 03a3 17B3 4EB5 	 .ascii "\027\263N\265u\337\327Y\246\361\317\270\251_'c<\227\020s\343"
 143      75DF D759 
 143      A6F1 CFB8 
 143      A95F 2763 
 143      3C97 1073 
 144 03b8 256C 87D5 	 .ascii "%l\207\325q\242\266\252\002\265v~c\371\371\335\314\316\257\202"
 144      71A2 B6AA 
 144      02B5 767E 
 144      63F9 F9DD 
 144      CCCE AF82 
 145 03cc 6F1D 9AF9 	 .ascii "o\035\232\371\234.\277\233\215\202\202[,\323\215\263\247\245"
 145      9C2E BF9B 
 145      8D82 825B 
 145      2CD3 8DB3 
 145      A7A5 
 146 03de BC42 CDDD 	 .ascii "\274B\315\335\312(\224W\270\250\\Q\241\016\177\331\246\223\313"
 146      CA28 9457 
 146      B8A8 5C51 
 146      A10E 7FD9 
 146      A693 CB
 147 03f1 3C83 2AB4 	 .ascii "<\203*\264\341\205R\235B]^\266PU\366A\n\300L\271\364\3405ck\232"
 147      E185 529D 
 147      425D 5EB6 
 147      5055 F641 
 147      0AC0 4CB9 
 148 040b 956C E166 	 .ascii "\225l\341f\324\367\367\273X\266\253\031-z\005\315\310i\004\326"
GAS LISTING  			page 12


 148      D4F7 F7BB 
 148      58B6 AB19 
 148      2D7A 05CD 
 148      C869 04D6 
 149 041f 6DBC B73F 	 .ascii "m\274\267?\3576\366\335\276\342q\021\025\221\336\206\034\320"
 149      EF36 F6DD 
 149      BEE2 7111 
 149      1591 DE86 
 149      1CD0 
 150 0431 9982 0D09 	 .ascii "\231\202\r\t\321t2\301I\254F\033^\260\333\304aq\"\237\305\231"
 150      D174 32C1 
 150      49AC 461B 
 150      5EB0 DBC4 
 150      6171 229F 
 151 0447 6C16 AB01 	 .ascii "l\026\253\001\306 \276\030\373v\236\330_\035\247\003\0257[\235"
 151      C620 BE18 
 151      FB76 9ED8 
 151      5F1D A703 
 151      1537 5B9D 
 152 045b 2742 4A6C 	 .ascii "'BJl\26258\200\377\242\330g\324\372/s\211\017\355\247\001\t\301"
 152      B235 3880 
 152      FFA2 D867 
 152      D4FA 2F73 
 152      890F EDA7 
 153 0472 0DAC 516D 	 .ascii "\r\254Qm|~\373su\341\315\355-]F{Gx\373\266g\302\317\266\266\033"
 153      7C7E FB73 
 153      75E1 CDED 
 153      2D5D 467B 
 153      4778 FBB6 
 154 048c E1CD 4657 	 .ascii "\341\315FW\313nc[gSToj\327\353\215\327kvC\b\265\215B\321Xo\274"
 154      CB6E 635B 
 154      6753 546F 
 154      6AD7 EB8D 
 154      D76B 7643 
 155 04a8 D6DA 6934 	 .ascii "\326\332i44\275j\274\321\266%\332\264+b\3505O\005\267D\365\266"
 155      34BD 6ABC 
 155      D1B6 25DA 
 155      B42B 62E8 
 155      354F 05B7 
 156 04bf D696 68E7 	 .ascii "\326\226h\347\326\250n\274\251\324\351z\273\321\321\261\251\260"
 156      D6A8 6EBC 
 156      A9D4 E97A 
 156      BBD1 D1B1 
 156      A9B0 
 157 04d1 87BA 17EB 	 .ascii "\207\272\027\353k\30355\342m\0336\262Y\315+\360/\304\366\302"
 157      6BC3 3535 
 157      E26D 1B36 
 157      B259 CD2B 
 157      F02F C4F6 
 158 04e6 DD        	 .ascii "\335"
 159               	 .text
 160               	 .section .gnu.lto_USB_Device_SetAddress.baf1f11f548d495,"",@progbits
 161 0000 789C 8D54 	 .string "x\234\215T]HTQ\020\2369\367\317\237,\265\314\204\376\bz)\332%\242\350\325\376 \350\251\260\204\202\210\356J\312f\333j\275\364\260gw\215z\260\222\020\372\207\"\372\2012\243\227H\213,+\373\263\320\"(z\330\210H(\"\350\241(\3516s\316\335\273\266Jv`\347\234\373\335\371f\346\233;{\004\b\310_5\364\013\331"
 161      5D48 5451 
 161      109E 39F7 
 161      CF9F 2CB5 
 161      CC84 FE08 
GAS LISTING  			page 13


 162 006a 5DB4 6301 	 .string "]\264c\001\240h{\006\220,\020h\350\203!\234\326>"
 162      A068 7B06 
 162      902C 1068 
 162      E883 219C 
 162      D63E 00
 163 007d 5964 B638 	 .ascii "Yd\2668 '8\032\2576\205}s&\241\326\3130\241\026\332\332\333F"
 163      2027 381A 
 163      AF36 857D 
 163      7326 A1D6 
 163      CB30 A116 
 164 0095 E403 2024 	 .ascii "\344\003 $\204\341\230\226\215\211M\310i\2149pF\312\303\231\017"
 164      84E1 9896 
 164      8D89 4DC8 
 164      698C 3970 
 164      46CA C399 
 165 00aa E707 44CB 	 .ascii "\347\007D\313\343\214l\223\277\275\004F\221*Z\200P\207\260\221"
 165      E38C 6C93 
 165      BFBD 0446 
 165      912A 5A80 
 165      5087 B091 
 166 00be 1E28 3F6F 	 .ascii "\036(?o\202\0311\314\325\250\271=\336\276\003\246\274*\367K\317"
 166      8219 31CC 
 166      D5A8 B93D 
 166      DEBE 03A6 
 166      BC2A F74B 
 167 00d3 4B44 D110 	 .ascii "KD\321\020\260xL&\344\021\3332G\036\274\352\305;\247\223\255"
 167      B078 4C26 
 167      E411 DB32 
 167      471E BCEA 
 167      C53B A793 
 168 00e8 3295 F112 	 .ascii "2\225\361\022\263\242h\n\3305\036\267S\364d<\357\312p\337\351"
 168      B3A2 680A 
 168      D835 1EB7 
 168      53F4 643C 
 168      EFCA 70DF 
 169 00fd 9328 6620 	 .ascii "\223(f \270x\006\347\200\tQ\264,2\266M\310YBJ\370a\"\031s\022"
 169      B878 06E7 
 169      8009 51B4 
 169      2C32 B64D 
 169      C859 424A 
 170 0117 9B52 82CF 	 .ascii "\233R\202\317\021\\\306\017\345l&\263\303\0246\025l\246\262\251"
 170      115C C60F 
 170      E56C 26B3 
 170      C314 3615 
 170      6CA6 B2A9 
 171 012b 6433 8D4D 	 .ascii "d3\215M\025\033JgA\013\225:[\307\004\256\215\326\006\262\324"
 171      151B 4A67 
 171      410B 953A 
 171      5BC7 04AE 
 171      8DD6 06B2 
 172 0140 F65A 14B4 	 .ascii "\366Z\024\264\031\375\220z\363\303\033\262\\\274\200"
 172      19FD 907A 
 172      F3C3 1BB2 
 172      5CBC 80
 173 014f 1634 A039 	 .string "\0264\2409\037\346E\3219\001\307\223R\226F\261`\017\374\244\356\320\2510\206\314gY\205JL$\020GA>\245\033\262!,\212\302X\272\333\310B6\241L4\022\344\375\b\204\306u]\r\\j\200qw\333\016\367\374\352;8\342\263\024\tH\214\327Z\025\246\037\356v\335\357l\355\370\350\370\322\263=\350yro\320q\361\222\352\203\316T\247\344\020\257\204\305\266'I\242\n\\\374\336\337s\342\276\364R\314}\304\357Pj&\022'\020\250\241I\204V\301QyQ\312\001\317\363\320\323\353\220\023\345^\250\030\201o\251_\352\bz\031\241\234\323L(\347\364\215\340M\271\212]\226\027b2\275PjWk\344_\n\310\333o\314\255\366\341\222Q}\271?h\345:\"4aJ^\274\241\374\216\244\273{o\267\017\037\240\216\\S\365T\020\207=\340;B\266\256k\243\353\032\372\273\256\n\200\347\220\376:8\360\031u\001"
 173      1FE6 45D1 
 173      3901 C793 
GAS LISTING  			page 14


 173      5296 46B1 
 173      600F FCA4 
 174 0250 C1B4 4DA8 	 .string "\301\264M\250CC\271E\271\327\274j\t\240{\300PRn\267w\366\217\376\306}\203NN\213\251\223L\375/-\235\035\305.^WZ*\211\303\0366Ky\b\367>\276\373p\366\016f'\271R\275\0329x\033\320\001\272\315\260\2262\322\037\352\021\2442\307\366\226k\377\030\n\177\274S\005\340\3176\335\034o\277\341])\203\233\243\310\305\313\324\372\177\317w\214?\016k\337\373\375\324\364Q\312\237\246\n]\354\372k\272-\255\177\332x\323\235\276A\323}\213\247\273[)\254\"\216\022)s\337\262{\334\031\253\342^\265|~\307wq\360\257\037\243W\026\2343\215ZB\325\335\303\261/\370\261\245\212\035\f@\261\276\254G\346 `"
 174      4343 B945 
 174      B9D7 BC6A 
 174      09A0 7BC0 
 174      5052 6EB7 
 175 0316 9299 9373 	 .string "\222\231\223s\263\323\302\3535\240\232<\003\314\233/.\352\263"
 175      B3D3 C2EB 
 175      35A0 9A3C 
 175      03CC 9B2F 
 175      2EEA B300 
 176 032a 4B25 43CA 	 .ascii "K%C\312\302#=oM\315\252\352\360\212x\375\356H\274)\\\263nYx\371"
 176      C223 3D6F 
 176      4DCD AAEA 
 176      F08A 78FD 
 176      EE48 BC29 
 177 0344 8E78 24BC 	 .ascii "\216x$\274\"\262\273~kd]\363\226FwK\334]\033\331\031\332\nN}"
 177      22B2 BB7E 
 177      6B64 5DF3 
 177      9646 774B 
 177      DC5D 1BD9 
 178 035d 5DF3 F658 	 .ascii "]\363\366Xhq\211~Y\355\272\361HS\323\302\261\003T\257_\2734\034"
 178      6871 897E 
 178      59ED BAF1 
 178      4853 D3C2 
 178      B103 54AF 
 179 0375 0AE9 5D13 	 .ascii "\n\351]\0236\3639\264\r\n}fh\211\343\237\026\375G\214\225\215"
 179      36F3 39B4 
 179      0D0A 7D66 
 179      6889 E39F 
 179      16FD 478C 
 180 038b 6E6C 477D 	 .ascii "nlG}cs6\312\037C\320\302\320"
 180      6373 36CA 
 180      1F43 D0C2 
 180      D0
 181               	 .text
 182               	 .section .gnu.lto_USB_Device_GetConfiguration.baf1f11f548d495,"",@progbits
 183 0000 789C 8D52 	 .ascii "x\234\215R=h\024Q\020\236y{\233\333\273Bl\323\251\215\020p\027"
 183      3D68 1451 
 183      109E 797B 
 183      9BDB BB42 
 183      6CD3 A98D 
 184 0017 4923 5848 	 .ascii "I#XH\314)\bb\221\020#(\034kvO\367X\367\342zIcq\357\274\023E\215"
 184      CC29 0862 
 184      9110 2328 
 184      1C6B 764F 
 184      F758 F7E2 
 185 0034 1CC1 22F8 	 .ascii "\034\301\"\370S\204X\210\315\245\024m\216\023\213\020\022=D\013"
 185      5384 5888 
 185      CDA5 146D 
 185      8E13 8B10 
 185      123D 440B 
 186 0048 B1D8 4E41 	 .ascii "\261\330NA\013\025\202 !\353\314\2763!\211\030\007v\346\275\235"
 186      0B15 8220 
 186      21EB CCBE 
 186      3321 8918 
GAS LISTING  			page 15


 186      0776 E6BD 
 187 005d F9BE F7BD 	 .ascii "\371\276\367\275\217'@\300\326\350\245\357\003\375\276A\0255"
 187      8F27 40C0 
 187      D6E8 A5EF 
 187      03FD BE41 
 187      1535 
 188 006f 40D1 5806 	 .ascii "@\321X\006\250\032\002\221\027\200P\021X9\207<\212\373`V\312"
 188      A81A 0291 
 188      1780 5011 
 188      5839 873C 
 188      8AFB 6056 
 189 0084 E9E8 FA97 	 .ascii "\351\350\372\227\216\250\337\212dC\256\305\025\364\221X\017 "
 189      8EA8 DF8A 
 189      6443 AEC5 
 189      15F4 9158 
 189      0F20 
 190 0096 1410 CE   	 .ascii "\024\020\316"
 191 0099 D206 8DA4 	 .string "\322\006\215\244\b\334|LS\264\2428~\270Ro\037\336\245\201\203\263D\226\006\302\032\2342\234\262\234(t\250K\331\330\003\314H1J\231\245\234A\301U[\202\366\363W\361\235\325\251\364\372\240Z\264n\277{\253\003q\317\241N\330\004\\\304\364\003\270_\275W\335\355\243\306\272R\237\225\314TW\327\022\324^\274L\330\034|L\270\"\032\204\341\t\355'&\375\366\t\325\371\027\017\241x\364\332\302\307\371G}J@\0215FHI\b\375*\374\2227y\3253\236\310bdOW\301\002\b\205`w\033\323\255\316\362\335\224\234\247\3618\256\370\230\026P\303\235\314\245\263\022\245\213\253\237\336L\325\266\373\362~Nw\360)9\276\341N\362\020\266\\\351\373\346+)N\366z\246\271\215s\22187\3304\205\310\374\227\327\304\346`3\261(K\230^\230\221Odt\304OX\224\337\315\035\375\316\002\274\206\332\267\037+_Q\211"
 191      08DC 7C4C 
 191      53B4 A238 
 191      7EB8 526F 
 191      1FDE A581 
 192 019a 5837 D928 	 .string "X7\331(t\307|\314"
 192      74C7 7CCC 
 192      00
 193 01a3 74A0 1A3D 	 .ascii "t\240\032=\333\377gH\305(YJo\211M\350;9r|\300\312\205\336\244"
 193      DBFF 6748 
 193      C528 594A 
 193      6F89 4DE8 
 193      3B39 727C 
 194 01bc 1B5E B146 	 .ascii "\033^\261F\206\217Z\203\245\320\265r\356\2447\346\016\227\355"
 194      868F 5A83 
 194      A5D0 B572 
 194      EEA4 37E6 
 194      0E97 ED
 195 01cf C0B1 4367 	 .ascii "\300\261Cg\310\275l\216\301^\352\346U#?X\n\n\336\205\211\320"
 195      C8BD 6C8E 
 195      C15E EAE6 
 195      5523 3F58 
 195      0A0A DE85 
 196 01e5 2E7B A5E0 	 .ascii ".{\245\340\324\304\245\363nh\036\354\357\377;\331\300\351\241"
 196      D4C4 A5F3 
 196      6E68 1EEC 
 196      EFFF 3BD9 
 196      C0E9 A1
 197 01f8 4396 69AA 	 .ascii "C\226i\252z,p\306K^P\316\363\316\274\b\251\234]\266\177\003\202"
 197      7A2C 70C6 
 197      4B5E 50CE 
 197      F3CE BC08 
 197      A99C 5DB6 
 198 020f 3AE7 2A   	 .ascii ":\347*"
 199               	 .text
 200               	 .section .gnu.lto_USB_Device_GetInternalSerialDescriptor.baf1f11f548d495,"",@progbits
 201 0000 789C 9592 	 .string "x\234\225\222\317k\023A\024\307\337\233\335\330\346\207F\360\324\203 \036#f\017z\360\"\322\032\005\301SC\255PABv\243[\227\244n\327B\351!\023\215XP!\007\301\242\247(b\321CZz\021\275\204\210'm5\370\017\004O\202\n\245\036*V\210\357\355L\374U\361\307\203\235\231\335\371\276\357{\237\231\025 \340\327\030\240g\247\001\020\320\214\006\240\250\255"
 201      CF6B 1341 
 201      14C7 DF9B 
 201      DDD8 E687 
GAS LISTING  			page 16


 201      46F0 D483 
 202 0073 54FA 0522 	 .string "T\372\005\"/"
 202      2F00 
 203 0079 A12C B07C 	 .string "\241,\260|\nY\212\273\241.\233\265\316\275\265:\312\0059+\273\335\262\207\344\271\027\241\2000\206\036\342+\021\316\"\365s\225\206hv\272\335\027\353\3257\007\223Q\360\320\210\361\020\347!\301\003I\"P\225\262\266\353\034\202\215u*\005\354I1J#\267r\022\005\317\3062\\|\364i\255m\332x\027#\260\007\036H\212i\017M\275\034\3630\242\034\034T\305\035T\013n\314\344Rl1\367\361\377,\304w\013f{\t\325\316\312\225\244r"
 203      0A59 8ABB 
 203      A12E 9BB5 
 203      CEBD B53A 
 203      CA05 392B 
 204 0104 9881 CF74 	 .string "\230\201\317t\036\333=\334R\320\305\370\013\305\214\207}\332\265M\271\375=[#\024\351t\017\243\334T\353\361\263\373\327\276\\\357\323'\321;\222\346\325\367\257#=mA52\216\321\333p\253r\243B%c\334T\374\255\272\200\270>\360e\270\364\344i\350f\343C\312\033\307\030\345\260\"\266\216\341~\353\230\332\371\223\017e1\352\345\325;\033\363b\023k\242\24014\353M\312\333\252"
 204      1EDB 3DDC 
 204      52D0 C5F8 
 204      0BC5 8C87 
 204      7DDA B54D 
 205 017d B596 9DB6 	 .string "\265\226\235\266\245\210/\371\215\257\321\330\304\367\374\303\322\017|\246*\034\377'>r\263q1\344KP\316"
 205      A588 2FF9 
 205      8DAF D1D8 
 205      C4F7 FCC3 
 205      D20F 7CA6 
 206 019f CCC9 79B9 	 .string "\314\311y\271p\310\343\2765\343\342_\031\023\241\364\235\006T"
 206      70C8 E3BE 
 206      35E3 E25F 
 206      1913 A1F4 
 206      9D06 5400 
 207 01b3 FB61 49CE 	 .ascii "\373aI\316\222\206\025m\250\254\2666\314\036\277\212Q\272g\372"
 207      9286 156D 
 207      A8AC B636 
 207      CC1E BF8A 
 207      51BA 67FA 
 208 01c7 1DF9 3652 	 .ascii "\035\3716R\307G\216\016Z\031\337\235r\374Ik$;d\035.\371\216\225"
 208      C747 8E0E 
 208      5A19 DF9D 
 208      72FC 496B 
 208      243B 641D 
 209 01df 71A6 DCBC 	 .ascii "q\246\334\274\223\rrE;\347\333\303\316\371t\036vd\3353\305\\"
 209      930D 7245 
 209      3BE7 DBC3 
 209      CEF9 741E 
 209      7664 DD33 
 210 01f5 70C1 7732 	 .ascii "p\301w2\316d\336w'\202\222\277\357\367\351\203'\206\017X\351"
 210      CE64 DE77 
 210      2782 92BF 
 210      EFF7 E983 
 210      2786 0F58 
 211 020a B49A 8F14 	 .ascii "\264\232\217\024\355\211\222[\fN\363[\372,|\005\231\215\360-"
 211      ED89 925B 
 211      0C4E F35B 
 211      FA2C 7C05 
 211      998D F02D 
 212               	 .text
 213               	 .section .gnu.lto_USB_Device_GetDescriptor.baf1f11f548d495,"",@progbits
 214 0000 789C 9554 	 .ascii "x\234\225T]H\024Q\024>g~\325U[]\024\202\036\302G\243\335\207"
 214      5D48 1451 
 214      143E 677E 
 214      D555 5B5D 
 214      1482 1EC2 
 215 0018 827C 89B0 	 .ascii "\202|\211\260,\b"
 215      2C08 
GAS LISTING  			page 17


 216 001e 7B08 1753 	 .string "{\b\027S(\bqfieQ\033\305\207|\330\273j!\375)R$\365\220\026bX\240QH\024\301\264\025$\221\022\032\204H\354K\024\370\"\021DaN\347\316uF\323P\2730\367\316\2349\337w\277\357\234;#\201\004kG5]\355\n\300uZ1\013P\352\235\004HeI\222\274P\004,G\031(\003\226+\243&\302\212\244\375\334Oa\365F\220\302*\352\"\254y7:\"\277\001\204\244$+\252\246c\362\024\362m\344\022\030d\254/\363ydV9\1771\303z\331\222\223\304\004\222\242\335\b1\204\223\364\200Aw\221\326\250\344P\273\317\236\356\351Q\331\030\353f\216\223t\201\345[\001\262>{fJ\352g]\266\343\034H\240,At3\330\250dg\034\347\362\357\256o\225\305\n$P\321\370\244\323\244f\203\201CX\002\001Z\007i\r\362`\001\237\n\371\024\342\0231\250\320\305X\357N\003\357R\216@"
 216      2808 7166 
 216      6965 511B 
 216      C587 7CD8 
 216      BB6A 21FD 
 217 011f DF94 460D 	 .string "\337\224F\r\315\274D\265(\361U~\007\035\263\037\227^\310\006\016\023\264\001\225]PJ2o\301\315\024c\301\004j\355\360\213<\323\235\336\354\022p\305\272\253\323DO\361\033x\365%\025\360)x\212<\247\257\262T\2132,\024\311S\320\231Y\034.\026\211\324w\217:+\206\202+\201\331\036@\201\2012W\335\223;\351\035\036\265\366?\352<yD2\3379\342;\324\211\006`\n.\330\252\027\312\366irb(\272A6(\225\307i| \326\200WMW{\002s\001&\240\303\343\020En\340\362y1\320gvk\001\177\225B\205\351"
 217      CDBC 44B5 
 217      28F1 557E 
 217      071D B31F 
 217      975E C806 
 218 01c9 394B 3F7D 	 .ascii "9K?}}\377\352\342\025}\271Y^\327\354K"
 218      7DFF EAE2 
 218      157D B959 
 218      5ED7 EC4B 
 219 01d9 9333 B481 	 .string "\2233\264\201 \210\tl\003\006\271\345k)R\230\307\031\363\277\212\023\224\357[\354|\366\322e3\360\241\273q\001axF\336\017t\337\247\217\2127\033\361\020\312\255\326\304\334\203\241J\317\301\262o^1u]\343\266\305\250O\002\032 \263\t:\321\260\354ltt\235\263\267\237\036\257r\246\n\\\341\226\234\021\233\201\343\256\240\020a\266C?\273\307\306\350\203\312\363\335\215o\352.\344\246\316K^\313\270\257\275\360\210u\363\037\201\337\036\r\236\247\371w\221\236\237\373~[\3368Ww\277\241\367\364\347Yip\r\035<\212\362cTz\254\372Hy\244\302\212\267\231VK\244:z0r\250\3112#\025f[\274\336\214\266\3265\032u\226Qe\236\r\327C\250\302l\251\267\342\315\255M\326\361\246xc\253i\205\367\025\254\213\345\257D\242\361s\346\236\177\363\227\237\250*\213\204\303b=\334h4s\360i\376\024>\003\177"
 219      2088 096C 
 219      0306 B9E5 
 219      6B29 5298 
 219      C719 F3BF 
 220 02da AE7F 4AAF 	 .ascii "\256\177J\257"
 221               	 .text
 222               	 .section .gnu.lto_USB_Device_SetConfiguration.baf1f11f548d495,"",@progbits
 223 0000 789C 9D53 	 .string "x\234\235S]HSa\030~\337\363\177\346\220\374\241\213\256\312\233\300hc\364C]\211i\201\020\005\2129(\020s[m\314m\256\351M\220g\272H\210L\"\304\376.$D0\250u\225\351\315\260\204D,\312\253$jb\314\300\256\272\021JX\337\3179gCWI\037\234\357\347}\277\367y\237\367}\276#\200"
 223      5D48 5361 
 223      187E DFF3 
 223      7FE6 90FC 
 223      A18B AECA 
 224 0064 5B47 847C 	 .string "[G\204|\037$\200/dE\007\2400\374\026 \251\t\202~\257\016\f\207\270Q\016\206S\024\244\301\375\344$\323\331)\241\306/\311\202\312\314\n3+\250r\263j\3715\324\371FG\244\033@\350\023DIVTb\351\273\2004\277X\003c\206q';>\371\\\032O\033\203F>\337\027FB\364 B"
 224      1F24 802F 
 224      6445 07A0 
 224      30FC 1620 
 224      A909 827E 
 225 00c5 E13C 8611 	 .ascii "\341<\206\0215\266\b\364~\f\013\324yd&=\324/\217\032\251L>_\307"
 225      35B6 08F4 
 225      7E0C 0BD4 
 225      7964 263D 
 225      D42F 8F1A 
 226 00de 02CF 960C 	 .ascii "\002\317\226\f\204mq/\206"
 226      846D 712F 
 226      86
 227 00e7 468A 328A 	 .string "F\2122\212\002t\377!c!\374\231\220\311\346\363\233K\251\037\307w#\370p\034k@\2060J\n9\214\221\203F\017\272yp\222\3651Y+\210\021*\351TE\247j:\221!C\3120\206\367\002MJF\033\231i\223\274(\320U\\\204\376\345\251\311y\311\207\023(C\b\345\003P\033F\371\001\334O\032\306\2560*W\341'!Ovj\f\251\256\224\261\312h\372m\306\004d}`\217\005\241\020\024\2007\360:\227,\263m4\f\212;\344E\0216\312I\376\331\351\271\365\333\233\267T\233(\337dn\316-\021\030\016\020\340\335\ta\005%v7I\350\210\024Q\373\306;\251\331D\006f^14\037>a\211+I\f\275!n \363\3176q\317\337pH\024\253i\371S\372\3415\253\002\355\277\033\363T\2600\364\020\315@\214\363\351Jn\263\341t\033\316\301\037\037\205s\230tt\200w0\220\035Z+\347Q"
 227      0274 FF21 
 227      6321 FC99 
 227      90C9 E6F3 
 227      9B4B A91F 
 228 01e8 F6ED B200 	 .string "\366\355\262"
 229 01ec F2BF 2D8C 	 .ascii "\362\277-\214N\016=\232\363X\371\234;\201\247R\245\276\027\244"
 229      4E0E 3D9A 
 229      F358 F99C 
 229      3B81 A752 
 229      A5BE 17A4 
 230 0200 7232 A98A 	 .ascii "r2\251\212\207\027%\230Q\251TSS\271\025\241\2109k\240\r\255\361"
 230      8717 2598 
 230      51A9 5453 
 230      53B9 15A1 
 230      8839 6BA0 
 231 0217 475C 6824 	 .ascii "G\\h$k\274d\243\310&\312\364\334\257\221\205\211m\202/,\256\226"
GAS LISTING  			page 18


 231      6BBC 64A3 
 231      C826 CAF4 
 231      DCAF 9185 
 231      896D 822F 
 232 022e 1504 1779 	 .ascii "\025\004\027y\351U[\204Z-!8A\273A\350\277d\364\253I\f\253\300"
 232      E955 5B84 
 232      5A2D 2138 
 232      41BB 41E8 
 232      BF64 F4AB 
 233 0246 40B3 B495 	 .ascii "@\263\264\225\2579\264\212\253\336V\\\033*\360Y\024\275D;\316"
 233      AF39 B48A 
 233      ABDE 565C 
 233      1B2A F059 
 233      14BD 443B 
 234 025b AE69 E7F5 	 .ascii "\256i\347\365\205\370\263\374\bhV*\363\222\021\024V\260F_8U\356"
 234      85F8 B3FC 
 234      0868 562A 
 234      F392 1114 
 234      56B0 465F 
 235 0272 D15A 5529 	 .ascii "\321ZU)\345\244\202r\274C:\373'\337C2;y\035\255\b\213'R'\025"
 235      E5A4 8272 
 235      BC43 3AFB 
 235      27DF 4332 
 235      3B79 1DAD 
 236 028c BBF6 74EB 	 .ascii "\273\366t\353\251zwc<\330\353\217_q\267\266\234p7D\343~w\243"
 236      A97A 7763 
 236      3CD8 EB8F 
 236      5F71 B7B6 
 236      9C70 3744 
 237 02a4 BF37 D8E9 	 .ascii "\2777\330\351oItD|\035q_\263\277\333\325\t\373\210\267\235;\332"
 237      6F49 7444 
 237      7C1D 715F 
 237      B3BF DBD5 
 237      09FB 88B7 
 238 02bb 1BA2 9140 	 .ascii "\033\242\221@\360RO\274#\021\214F\316\364t]\364\307]\236\303"
 238      F052 4FBC 
 238      2311 8C46 
 238      CEF4 745D 
 238      F4C7 5D9E 
 239 02d0 FFBC 7144 	 .ascii "\377\274qD\013\006\022]1\227\347\350\241\322y\353\3175\037s\273"
 239      0B06 125D 
 239      3197 E7E8 
 239      A1D2 79EB 
 239      CF35 1F73 
 240 02e5 5C7C 3D19 	 .ascii "\\|=\031\361\305\242\301H\242\235\236\\\227\301\263\203\0303"
 240      F1C5 A2C1 
 240      48A2 9D9E 
 240      5C97 C1B3 
 240      8318 33
 241 02f8 BB19 F11B 	 .ascii "\273\031\361\033I\302vT"
 241      49C2 7654 
 242               	 .text
 243               	 .section .gnu.lto_USB_Device_ProcessControlRequest.baf1f11f548d495,"",@progbits
 244 0000 789C 8D55 	 .string "x\234\215Ukl\024U\024>\347\316\314\316\354\354\243\333m\267+\217\226BL0\020\2731&\332\204\204\004D#\t\376\001\221&\232\230\312n\221\315Z\260T\022\342\017f\273(M\260J\214& $B\232j44\240\004#BpK\251\001K-*\206G}\024I\224\004\rUCP,Y\317\275wfvw\272\251\354\2173w\316w\036\337y\314]\006\f\274\277\345\b\260\302\004x\235\316x\017 \333\371\025@\326`\250\312\203\"\017\003\206\312\224\243C"
 244      6B6C 1455 
 244      143E E7CE 
 244      CCCE ECEC 
GAS LISTING  			page 19


 244      A3DB 6DB7 
 245 0090 96A9 5D30 	 .string "\226\251]0\300\nj\314\327=\237\336b\\\006}z\354\355"
 245      C00A 6ACC 
 245      D73D 9FDE 
 245      625C 067D 
 245      7AEC ED00 
 246 00a4 5886 2EA4 	 .ascii "X\206.\244)dH\310*!\253\205\254\2216\314?f\222\247qd\220\302"
 246      2964 48C8 
 246      2A21 AB85 
 246      AC91 36CC 
 246      3F66 92A7 
 247 00bc 050D E69F 	 .ascii "\005\r\346\237\210\361@\373\232\351\315\2171\231\327d\301\363"
 247      88F1 40FB 
 247      9AE9 CD8F 
 247      3199 D764 
 247      C1F3 
 248 00ce 75A4 0E1C 	 .ascii "u\244\016\034\177\230\324\001\026,1\n:F!\026\026F1a\024v\324"
 248      7F98 D401 
 248      162C 310A 
 248      3A46 2116 
 248      1646 3161 
 249 00e5 552C B28F 	 .ascii "U,\262\217g\210M\210\f\021G_\315\242\"sLf\216:\372\032V[\022"
 249      6788 4D88 
 249      0C11 475F 
 249      CDA2 2273 
 249      4C66 8E3A 
 250 00fe A6D6 51C7 	 .ascii "\246\326Q\307X\335\371\004\251\343\307\033H]\207q\251\216#\362"
 250      58DD F904 
 250      A9E3 C71B 
 250      485D 8771 
 250      A98E 23F2 
 251 0112 0320 6C65 	 .ascii "\003 le\212\252\371t\303o\006\202\241pU\244:ZS\033\253\213\343"
 251      8AAA F974 
 251      C36F 0682 
 251      A170 55A4 
 251      3A5A 531B 
 252 0129 D667 90B7 	 .ascii "\326g\220\267V\231\007\373-\353\315\361\241\037{4\353\220\325"
 252      5699 07FB 
 252      2DEB CDF1 
 252      A11F 7B34 
 252      EB90 D5
 253 013c 6D15 0A5B 	 .ascii "m\025\n[3H3\270\037\241\r\341i\314 F\304\203y\346\"\035\363\377"
 253      3348 33B8 
 253      1FA1 0DE1 
 253      69CC 2046 
 253      C483 79E6 
 254 0154 DC69 B472 	 .ascii "\334i\264ry\353\357BA\317\240\302`Q\321\317\220~X\321o\367\027"
 254      79EB EF42 
 254      41CF A0C2 
 254      6051 D1CF 
 254      907E 58D1 
 255 016b 3D6A 3121 	 .ascii "=j1!9>\361\177\216\007Y~\274P8\320\177\356\016\336\213\220\304"
 255      393E F17F 
 255      8E07 597E 
 255      BC50 38D0 
 255      7FEE 0EDE 
 256 0182 FD38 8F78 	 .ascii "\3758\217x&\261\227\236\272\375n\332\357!z\366\3213\f\031T\243"
GAS LISTING  			page 20


 256      26B1 979E 
 256      BAFD 6EDA 
 256      EF21 7AF6 
 256      D133 0C19 
 257 0198 5CCC 20A1 	 .ascii "\\\314 \241\314\344\247Y\\\314\346\242\236\213\006.\346p\321"
 257      CCE4 A759 
 257      5CCC E6A2 
 257      9E8B 062E 
 257      E670 D1
 258 01ab C8C5 5C2E 	 .ascii "\310\305\\.(\233\006\333,kg\243\f\013\234\032\375\326\220\244"
 258      289B 06DB 
 258      2C6B 67A3 
 258      0C0B 9C1A 
 258      FDD6 90A4 
 259 01bf CD6A 4146 	 .ascii "\315jAF\017\345\ft\215\337~(\211\357\243f\247\177\031nSE\326"
 259      0FE5 0C74 
 259      8DDF 7E28 
 259      89EF A366 
 259      A77F 196E 
 260 01d6 1E62 AF6D 	 .ascii "\036b\257m\264\351s\253\311\305n\270^\021N:\211\003W\360r\025"
 260      B4E9 73AB 
 260      C9C5 6EB8 
 260      5E11 4E3A 
 260      8903 57F0 
 261 01ec A7CE 163A 	 .ascii "\247\316\026:\322\026+#\220\333\221\2735\306\222\370\001\331"
 261      D216 2B23 
 261      90DB 91BB 
 261      35C6 92F8 
 261      01D9 
 262 01fe A651 4F23 	 .ascii "\246QO#\272}9\003\266^&&\024`\004N~6t\243\347\304G\265v6\247"
 262      BA7D 3903 
 262      B65E 2626 
 262      1460 044E 
 262      7E36 74A3 
 263 0219 8AFC F089 	 .ascii "\212\374\360\211\026\236\212\333\267\241\340\225\306\031{\340"
 263      169E 8ADB 
 263      B7A1 E095 
 263      C619 7BE0 
 264 0229 9DEC 5BD9 	 .ascii "\235\354[\331H\006}<\252\376\207l\276n\263\030\201\2563\023\001"
 264      4806 7D3C 
 264      AAFE 876C 
 264      BE6E B318 
 264      81AE 3313 
 265 023e E9C3 2D2D 	 .ascii "\351\303--\313\362\023I\233\203\264\241 \3340\327\235\373k\270"
 265      CBF2 1349 
 265      9B83 B4A1 
 265      20DC 30D7 
 265      9DFB 6BB8 
 266 0252 DEA1 69A6 	 .ascii "\336\241i\246\221\211z<4{"
 266      9189 7A3C 
 266      347B 
 267 025c 054D D3A9 	 .string "\005M\323\251Q\005ZP\336B\003\\\220\211n\t\205,\212B\234\206m\277d5'\270\214\354p\004\270\004({\236\277y\204\271Mg\237\022O]\371\376\206y\t\230\335[v\366\0065\320Tv-\342\3315>\277Q\310\215w\367F\235Y\310@\324\017\243\r\345\256g\320\357v\365\247\021\335\333\325\035CWtg\224mr~i\234\351i\3535o[s\307\006)Z?\265\366\220(i\026\371p\013\225\352\346\325\376ve\350\347\373dP\002\005R\372\025\264\240\017\016\250\264\034]\227w]\275\210\356^\365\225\357U\032C\013\341C\032\232u\214\327/'H\244L\267J\273W<\201\360\200\224\373\275\321\020\362\263\222xX\314\255OL\"$6\342\362\305\253\327\024\t\2441\274\020\026\334uh'\366Y\330m5\273\021z\340\265\3546+\377\355v\232]\200\303\353lC\0338\344#\275\333\202u\366Xl\360\234\013\242"
 267      5105 5A50 
 267      DE42 035C 
 267      9089 6E09 
 267      852C 8A42 
 268 035d 9552 F01B 	 .string "\225R\360\033\027T\246\202\177\272\240&@\265\024\234tA\237"
GAS LISTING  			page 21


 268      1754 A682 
 268      7FBA A026 
 268      40B5 149C 
 268      7441 9F00 
 269 0371 B552 70AF 	 .string "\265Rp\257\356\200\206"
 269      EE80 8600 
 270 0379 7DA5 E027 	 .ascii "}\245\340'.\350\027`qM\371\330t\030\005e\230\356fY\275(\3464"
 270      2EE8 1760 
 270      714D F9D8 
 270      7418 0565 
 270      98EE 6659 
 271 0391 9CFA 75E0 	 .ascii "\234\372u\340\360\253A\247!!\341ma\231\243\001\247@\341\226\331"
 271      F0AB 41A7 
 271      2121 E16D 
 271      6199 A301 
 271      A740 E196 
 272 03a6 315F B961 	 .ascii "1_\271aW\271\241\037\032\304N\357\035\fK\273\362\235V\213;-\355"
 272      57B9 A11F 
 272      1AC4 4EEF 
 272      1D0C 4BBB 
 272      F29D 568B 
 273 03bd 4D2F 23C5 	 .ascii "M/#\305f\364\235\227Q\371\002\006\240\2712\037Vf\026\204\371"
 273      66F4 9D97 
 273      51F9 0206 
 273      A0B9 321F 
 273      5666 1684 
 274 03d2 824E 7F2E 	 .ascii "\202N\177.Z\211\216\346\245\023\362\322Qm:7\247\247\023\206\270"
 274      5A89 8EE6 
 274      A513 F2D2 
 274      516D 3A37 
 274      A7A7 1386 
 275 03e7 C873 2C57 	 .ascii "\310s,WU)\217\317\233\247\312\233G\263/\261BO\277\273\334Q;\227"
 275      5529 8FCF 
 275      9BA7 CA9B 
 275      47B3 2FB1 
 275      424F BFBB 
 276 03ff 2286 212E 	 .ascii "\"\206!.\241\007\\\314\275\336\212$\"`\n\022_\016V$\241{IT{I"
 276      A107 5CCC 
 276      BDDE 8A24 
 276      2260 0A12 
 276      5F0E 5624 
 277 0419 F8EC 62DF 	 .ascii "\370\354b\337\335>\3756D! \022]\034\254\330U\303\233\250\306"
 277      DD3E FD36 
 277      4421 2012 
 277      5D1C ACD8 
 277      55C3 9BA8 
 278 042e 9B48 B713 	 .ascii "\233H\267\023\035\365&*\357j\255\335\325\037*\347\361{\363\304"
 278      1DF5 262A 
 278      EF6A ADDD 
 278      D51F 2AE7 
 278      F17B F3C4 
 279 0442 F88D CAF3 	 .ascii "\370\215\312\363\330\037\3614\327\346\255\n\327\346\354\273\277"
 279      D81F F134 
 279      D7E6 AD0A 
 279      D7E6 ECBB 
 279      BF
 280 0453 364F 0BCE 	 .ascii "6O\013\316\365\344\343\2716\377u\257\315\372\n\005\325\301{\232"
GAS LISTING  			page 22


 280      F5E4 E3B9 
 280      36FF 75AF 
 280      CDFA 0A05 
 280      D5C1 7B9A 
 281 0467 62B3 9AEC 	 .ascii "b\263\232\354\231\312j\362\212VdeJV\rw\305\212\242%qX$\236C>"
 281      99CA 6AF2 
 281      8A56 6465 
 281      4A56 0D77 
 281      C58A A225 
 282 0481 DCC2 770B 	 .ascii "\334\302w\013\005~r\271D\246\213C^\262]\257\374\276x\312\037"
 282      057E 72B9 
 282      44A6 8B43 
 282      5EB2 5DAF 
 282      FCBE 78CA 
 283 0496 F7E4 4049 	 .ascii "\367\344@I\257\002\322\274\321\023\355\372\024VG\211\325\330"
 283      AF02 D2BC 
 283      D113 EDFA 
 283      1456 4789 
 283      D5D8 
 284 04a8 1BC4 6A54 	 .ascii "\033\304jT\260\232K>\242#\215.\251\321\251\244\256\227\223\232"
 284      B09A 4B3E 
 284      A223 8D2E 
 284      A9D1 A9A4 
 284      AE97 939A 
 285 04bc EB34 2ECE 	 .ascii "\3534.\316'\3735d'>\376\\u\377_\304o\r\r\372\202\301\277\372"
 285      27FB 3564 
 285      273E FE5C 
 285      75FF 5FC4 
 285      6F0D 0DFA 
 286 04d4 052B 563F 	 .ascii "\005+V?\266$\261\254c\375\346T\307\246\304\352UK\023\217l\350"
 286      B624 B1AC 
 286      63FD E654 
 286      C7A6 C4EA 
 286      554B 138F 
 287 04ea 4825 96A5 	 .ascii "H%\226\2456\257_\233Z\325\331\332\236l\355H\256L\275\330\264"
 287      36AF 5F9B 
 287      5AD5 D9DA 
 287      9E6C ED48 
 287      AE4C BDD8 
 288 04ff 1642 F478 	 .ascii "\026B\364x)\265\251\363\361Tk2\325Q]\366\266tKg*\364\334\013"
 288      29B5 A9F3 
 288      F154 6B32 
 288      D551 5DF6 
 288      B674 4B67 
 289 0517 B6EE C92D 	 .ascii "\266\356\311-\033S\017V\016\274\344\251\225\315\211\246&\371"
 289      1B53 0F56 
 289      0EBC E4A9 
 289      95CD 89A6 
 289      26F9 
 290 0529 7CB4 3DB9 	 .ascii "|\264=\271q\303\372\366\316g\371[\323\363\360\037Q]\274\244"
 290      71C3 FAF6 
 290      CE67 F95B 
 290      D3F3 F01F 
 290      515D BCA4 
 291               	 .text
 292               	 .section .gnu.lto_.symbol_nodes.baf1f11f548d495,"",@progbits
 293 0000 789C 4DCB 	 .string "x\234M\313\315J\303@\024\206\341o\346tbL2cU\350B\020W\275\260^\311)\026$\nE\321\205+\005\233;I@A\261h\253U\253\321\376l\275\006\365\224\026'\263yy\206\363ih\034*,\237.\300\300I\037`\356\246-\375\006V+^\244-\363.'\f\363\be$\003h\211\036\203\265\277\321O`\252L>A2\321#p\255\362\373\200\332b\372\0026\225\351+8\250\360\031\274V\341\020\034\256x\231*U\202\327\227l\267\225\232\202#\257\t8\366\372\002'^3\260\365\372"
GAS LISTING  			page 23


 293      CD4A C340 
 293      1486 E16F 
 293      E674 624C 
 293      3263 55E8 
 294 009c BB7F 9172 	 .ascii "\273\177\221r\230\237\226;d\034\212\363\373\200\002\207\316\321"
 294      989F 963B 
 294      641C 8AF3 
 294      FB80 0287 
 294      CED1 
 295 00ae F71E 850E 	 .ascii "\367\036\205\016\331\2014\002\362\311\217\242h\003\305T\032G"
 295      D981 3402 
 295      F2C9 8FA2 
 295      6803 C554 
 295      1A47 
 296 00c0 E226 C59B 	 .ascii "\342&\305\233\310\256Ja\035\235\233\221\246D\316\257\177\245"
 296      C8AE 4A61 
 296      1D9D 9B91 
 296      A644 CEAF 
 296      7FA5 
 297 00d2 5BC8 6EA5 	 .ascii "[\310n\245v\033\363\305\334*\344w\273d\r\362~\223l\200\336q\203"
 297      761B F3C5 
 297      DC2A E477 
 297      BB64 0DF2 
 297      7E93 6C80 
 298 00e9 6C8C DE20 	 .ascii "l\214\336 !\033b\177(I0;k\340\017\200Rv\027"
 298      211B 627F 
 298      2849 303B 
 298      6BE0 0F80 
 298      5276 17
 299               	 .text
 300               	 .section .gnu.lto_.refs.baf1f11f548d495,"",@progbits
 301 0000 789C 254A 	 .string "x\234%J\331\025"
 301      D915 00
 302 0007 100C 4BA3 	 .string "\020\fK\243T\037\206\262\377R\202\344#'Al|\270)\0248\030UN4\377\312&\037\326\221\0347\267\371\326D\252\215\262\370^8(T"
 302      541F 86B2 
 302      FF52 82E4 
 302      2327 416C 
 302      7CB8 2914 
 303 0035 F9        	 .ascii "\371"
 304               	 .text
 305               	 .section .gnu.lto_.decls.baf1f11f548d495,"",@progbits
 306 0000 789C 9D59 	 .string "x\234\235Y{t\024\325\031\277wv\363\202\360\0241\212G\240UA\332\022=\265=\264\177(!D\245FJI\242\247\247\347t\317&3\206-\313.\354\003J_LB\b1\274\302K\300\020\222(\341\241\241 \025\245\342\t\253'\226\212\005b\250\221@\205\370\200\240U\001\025\020\261l\277;sgv\346\316\235\335I\346\344\333\314\316\275\367\367}\337\357\373\276;\367\336\025\220\200\n\323\020\212\303\025\274\023\241#\351\b\r@\b="
 306      7B74 14D5 
 306      19BF 7776 
 306      F382 F014 
 306      318A 47A0 
 307 0088 2280 4013 	 .string "\"\200@\023jF\3525\004\244\005\344%\220\375 \007@\332@^\007i\0079\004r\030\344\b\3101\220.\220\023 \037\201\234\245X\275 \337\202\304A0F\310\215\221\351\"\370CA\334 \203A\262\r6\274"
 307      6A46 EA35 
 307      04A4 05E4 
 307      2590 FD20 
 307      0740 DA40 
 308 00cb 920E FDB3 	 .ascii "\222\016\375\263@\004\220\301 C@\206\201\020\230V\220\027An\242"
 308      4004 90C1 
 308      2043 4086 
 308      8110 9856 
 308      9017 416E 
 309 00e0 986E 8A37 	 .ascii "\230n\2127\002\276\217\002\031M\373\3551\253T\374\031\006r\335"
GAS LISTING  			page 24


 309      02BE 8F02 
 309      194D FBED 
 309      31AB 54FC 
 309      1906 72DD 
 310 00f4 A093 E8C3 	 .ascii "\240\223\350\303T\367y\220qX\345d<V\365\334c\260a\002\310\017"
 310      54F7 7990 
 310      7158 E564 
 310      3C56 F5DC 
 310      63B0 6102 
 311 010a 40F6 51CE 	 .ascii "@\366Q\316.\200\\\006\311\240\330?\204\266\373A~N0@\036\302*"
 311      2E80 5C06 
 311      C9A0 D83F 
 311      84B6 FB41 
 311      7E4E 3040 
 312 0121 47E9 948F 	 .ascii "G\351\224\217_\300\367GA\nq\202\033\343\265?\205}n\306\306Vj"
 312      5FC0 F747 
 312      410A 7182 
 312      1BE3 B53F 
 312      857D 6EC6 
 313 0138 A7D1 46CD 	 .ascii "\247\321F\315>7\265\357+\220K\324\316,\252\203\330\371\030\310"
 313      3E37 B5EF 
 313      2B90 4BD4 
 313      CE2C AA83 
 313      D8F9 18C8 
 314 014c AF40 4A40 	 .ascii "\257@J@~\r\362[j\367\021\252+Nm.\205ge \"\023\277\003\324FE\257"
 314      7E0D F25B 
 314      6AF7 11AA 
 314      2B4E 6D2E 
 314      8567 6520 
 315 0168 C156 09AB 	 .ascii "\301V\t\253\343\2658i\366\336\303\330\207\251m\351\024\353I\203"
 315      E3B5 3869 
 315      F6DE C3D8 
 315      87A9 6DE9 
 315      14EB 4983 
 316 017c FED9 F03F 	 .ascii "\376\331\360?\b\342Bj\356\020;\"\214~\222\217\003(\216\246_\343"
 316      08E2 426A 
 316      EE10 3B22 
 316      8C7E 928F 
 316      0328 8EA6 
 317 0192 80D8 11A5 	 .ascii "\200\330\021\245:5}\210\372E\306\021=\363\r\361!\030l~\222\\"
 317      3A35 7D88 
 317      FA45 C611 
 317      3DF3 0DF1 
 317      2118 6C7E 
 318 01a8 27F9 F947 	 .ascii "'\371\371G\203\177\230\372\370\027\270Y\016\262\002\244\026d"
 318      837F 98FA 
 318      F817 B859 
 318      0EB2 02A4 
 318      1664 
 319 01ba 9B41 F74A 	 .ascii "\233A\367J\220U\224\203\016\032\207?\303\367j\220*\220\247h\033"
 319      9055 9483 
 319      0E1A 873F 
 319      C3F7 6A90 
 319      2A90 A768 
 320 01cf C16F A1B6 	 .ascii "\301o\241\266\220\032\252\243\372\311\277?\031li\2479\221g\360"
 320      901A AAA3 
 320      FAC9 BF3F 
GAS LISTING  			page 25


 320      196C 69A7 
 320      3991 67F0 
 321 01e3 B315 2538 	 .ascii "\263\025%8\326\370\325\374\\\007\377?\200\377\335\214M\304\026"
 321      D6F8 D5FC 
 321      5C07 FF3F 
 321      80FF DD8C 
 321      4DC4 16
 322 01f6 8172 7E99 	 .ascii "\201r~\231\362\336N\3558A\355\350\242v`\032{\343Ej~\020\207\357"
 322      F2DE 4EED 
 322      3841 EDE8 
 322      A276 601A 
 322      7BE3 456A 
 323 020e 3426 CE46 	 .ascii "4&\316F\376\331X\247Q\034-\316\353\261:g\270(\377Z\254\215\327"
 323      FED9 58A7 
 323      511C 2DCE 
 323      EBB1 3A67 
 323      B828 FF5A 
 324 0225 61AA 2B8A 	 .ascii "a\252+\212\25551\216\223\367\304\016mN#\371"
 324      AD35 318E 
 324      93F7 C40E 
 324      6D4E 23F9 
 325 0235 7F89 8E21 	 .string "\177\211\216!8\233\260:?5b\363\334\326N\363B\263\215\324E&\345\3409\270\337\n\322B\342\f\262\035d\007\310N&_\262P\215,W\312\362j9{#\330\371\033,\342\301Y\200Bn\262\263\024s\357B[e\271\256\347\315\033\027\005Yv\213\270\031g\201\231c1\232\200v\312\320\002\203\007\"\353%b\234e\371.\342\255x\002R\365(\315\364&\016\212F\243-r\354b\317;\037l\311]\"\367\310\261x\374\301\241#\321z\231\\\025\362\344y\"~\340f\216\201.\302\231@\n^\271S!\335\252\351\232\346mx\244rG{\fD\265\304\351\246\ny\304\306\301\224\001\365\213\316\300PM\201\220``I\2342\320\2520\360;\254\273\243jIc\374M3\373\233\226\225\270\211\307]|Ud\334\013x`\002\244\304\245#\n(lVy'zN\256[C\030\253\305\357\310r\266\356W\023\270\242\232\351@\207"
 325      389B B03A 
 325      3F35 62F3 
 325      DCD6 4EF3 
 325      42B3 8DD4 
 326 0336 8546 705B 	 .string "\205Fp[\360hnw\021\277\250v\276\033\265\220X\234\221w\310\030+\321@t\230\311\355\335X0>\240a\275V\373\361\277\211\221\313\345o\342\361\f\344 \260*\332>\032\272\004\023\002:\204\315<\350\246\311\353b\t\303^b\r{\231gXlK\227\260Q\276\030\217\017Qu\t\350?\216\320\367\263\350\177\347\242\177{\210A\277\352\b\375"
 326      F068 6E77 
 326      11BF A876 
 326      BE1B B590 
 326      589C 9177 
 327 03a2 8BFE 1A17 	 .string "\213\376\032\027\275\343(\203\276Bp\202\336\306\242\037\344\242_a\321w:B\177\235E\177\203\213\336v\214A\357p\204\336\316\242\277\311E\177\3550\203\376\211#\364C,\372?\255\350M=\261\343\335\f\372\022\227\023\364\303,\372\333V\364\236\272\236\206\3723\267o\252\225\337\250\220a\n\304\232\212\223\026\025*\306Q.F\367\231soB\271\325q\313\255911\260\023\251\210w"
 327      BDE3 2883 
 327      BE42 7082 
 327      DEC6 A21F 
 327      E4A2 5F61 
 328 0419 9EFD 4CDA 	 .string "\236\375L\332a\236IE\23470q\337\252\316\370\314\244\365W7\337\360wy\206\307\332z\307W-\226o\304\343XU&\240c6\343\337\343:~\274\367\374\370\006\235<\263\337\255}\363\333\245;*\240Mi\330\244\274\233\345\201`\353_\232U\"x\257\033\2051\273Y\371\003<\320\244\305\304ck\032\237\207\017\271<4~\361\315#\326$\352\265\301\370\230\033\213/\217UNf\346\227t\376\370s\346\361\337C\315\304\206\003_\235\030\365V%\330P%\177\267(\356\032\216V\223X4\001\027x\236\376\372\233\254\221\220\251q}4\235rM\337\273\247\256t\374\350yY\316\024\361y<\034\332\377\307\030\221\022W\304\237`\227b\347\347"
 328      619E 4945 
 328      9C37 3071 
 328      DFAA CEF8 
 328      CCA4 F557 
 329 04e0 A00E 55B0 	 .ascii "\240\016U\260\345\330\206e\203eA}\2168\236\321k,j\202\b\306\352"
 329      E5D8 8665 
 329      8365 417D 
 329      8E38 9ED1 
 329      6B2C 6A82 
 330 04f7 97AD 72CB 	 .ascii "\227\255r\313{\356\325\226@k20\205\344\275\274\350\255z\321\016"
 330      7BEE D596 
 330      406B 3230 
 330      85E4 BDBC 
 330      E8AD 7AD1 
 331 050c 66B8 CDCB 	 .ascii "f\270\315\313\204\2159\032X\223\0230l\017\266\345m\005L]\232"
 331      848D 391A 
 331      5893 1330 
 331      6C0F B6E5 
 331      6D05 4C5D 
 332 0521 EC64 C14C 	 .ascii "\354d\301L\231fJ:.\330\036#\330\036'`n{\260\275F\260W\234\200"
GAS LISTING  			page 26


 332      9966 4A3A 
 332      2ED8 1E23 
 332      D81E 2760 
 332      6E7B B0BD 
 333 053a A573 C078 	 .ascii "\245s\300x\2271\236\"\376\002\337\005\237\027\360X\370\274\244"
 333      9731 9E22 
 333      FE02 DF05 
 333      9F17 F058 
 333      F8BC A4
 334 054d 7C7E A57C 	 .ascii "|~\245|^V>\257\302\247~\t\350`\206\226C\326tQ\241\257%R\232\244"
 334      5E56 3EAF 
 334      C2A7 7E09 
 334      E860 8696 
 334      43D6 7451 
 335 0567 7353 272C 	 .ascii "sS',av\335Z\005+\323J\230\236\026\341L\264TY9W\304&\317K\262"
 335      6176 DD5A 
 335      052B D34A 
 335      989E 16E1 
 335      4CB4 5459 
 336 0582 7026 EB63 	 .ascii "p&\353cxt\035\372\013\2503\003\263>h\236\220\016\232\327\352"
 336      7874 1DFA 
 336      0BA8 3303 
 336      B33E 689E 
 336      900E 9AD7 
 337 0597 BD76 4776 	 .ascii "\275vGv\013\350\004k\257e\241t\203\2657\366\032\224\005&\265"
 337      0BE8 046B 
 337      AF65 A174 
 337      83B5 37F6 
 337      1A94 0526 
 338 05ac 07AB 4DCD 	 .ascii "\007\253M\315\202oR\342\310\202\tg\353Z(\343\330\204\266\032"
 338      826F 52E2 
 338      C882 0967 
 338      EB5A 28E3 
 338      D884 B61A 
 339 05c0 BD8C 9505 	 .ascii "\275\214\225\005\363\342\244[\006\021?\253\004#\305\212_"
 339      F3E2 A45B 
 339      0611 3FAB 
 339      0423 C58A 
 339      5F
 340 05d1 401B 3253 	 .string "@\0332S\231\263X\260\204\341\360vC\030\264\372\331\236\022iI\002\311\371\256\247a\333\245\333[\225\271\247Z j\256d\262\253\376\346>ns\206\241:u\266\202\340\314S\f\221\025CrR'Q\255bBE\226m\022\221\016Z\022\221{9N/\274H{\264HW3IS\223AG?%\fK\260#\353\357\253l\373]\304\n\203\276\354,\304\024\260\345\315W)\330C\255\024\364W\037e(VA\030R\255\246\243r\264Q.:jU\237M\256\2631Y0+o\262*\267@\255\356\263\36256\312\265\200\352y\331\224\244\264\226\n\016J\213.\203\217\037\337\222&\357\221{\342\361\306\330P\301\274\032\252\026\222\254\206\336O\314&\"^/X\367`\325Y\306B\240o\356\206Dj*\353\337J\271FY\377V+~\213x\2350\232\353\024E\337 XV!\340\303\273\357m0\370\240\255D^\260\352\027\361\246\004"
 340      99B3 58B0 
 340      84E1 F076 
 340      4318 B4FA 
 340      D99E 1269 
 341 06d2 6FFD 5D2F 	 .ascii "o\375]/0\353\357\315\\\205\332\216pUS\215\340x\237\332$0\013"
 341      30EB EFCD 
 341      5C85 DA8E 
 341      7055 538D 
 341      E078 9FDA 
 342 06e9 42E2 33B3 	 .ascii "B\3423\263\202{#\251\315\352n^\216\223Y\033\260\327*\305\336"
 342      827B 23A9 
 342      CDEA 6E5E 
 342      8E93 591B 
 342      B0D7 2AC5 
 343 06fe AD0C 69B4 	 .ascii "\255\fi\264\341M\355\205\354\266\346\215\254\277\317\232\375"
 343      E14D ED85 
 343      ECB6 E68D 
GAS LISTING  			page 27


 343      ACBF CF9A 
 343      FD
 344 070f 65CA F3BC 	 .ascii "e\312\363\274\315[\231\214\334\236(Of\024y\257\330\215\332\221"
 344      CD5B 998C 
 344      DC9E 284F 
 344      6614 79AF 
 344      D88D DA91 
 345 0723 18E5 28B5 	 .ascii "\030\345(\265\035\2755\364\003\233&\333\003\033\021\357R\220"
 345      1DBD 35F4 
 345      039B 26DB 
 345      031B 11EF 
 345      5290 
 346 0735 529D C030 	 .ascii "R\235\3000\256\220\314\262=0I\270BO46\237:\342\246\007U\007e"
 346      AE90 CCB2 
 346      3D30 49B8 
 346      424F 3436 
 346      9F3A E2A6 
 347 074d 5CE7 769C 	 .ascii "\\\347v\234*\273\330Ti\306\226T9\357$U\256\323T\331\251\244\212"
 347      2ABB D854 
 347      69C6 9654 
 347      39EF 2455 
 347      AED3 54D9 
 348 0764 3C80 0C69 	 .ascii "<\200\fi\265M\225\235\311R\245\225M\225\335\334\322\270q\306"
 348      B54D 959D 
 348      C952 A595 
 348      4D95 DDDC 
 348      D2B8 71C6 
 349 0778 AE34 0C69 	 .ascii "\2564\fi\220b6\331\307\231Mj\0068\250fm6Q\227G\"~)\371l\362\n"
 349      9062 36D9 
 349      C799 4D6A 
 349      0638 A866 
 349      6D36 5197 
 350 0794 D783 AF4F 	 .ascii "\327\203\257O%<\320\346\222z'\332\231\271\344U\226\260\003\\"
 350      253C D0E6 
 350      927A 27DA 
 350      99B9 E455 
 350      96B0 035C 
 351 07a8 75B0 9D95 	 .ascii "u\260\235\225\225\355lE\325X\307\tr\220M\220Vk\202\354Nj3M\220"
 351      95ED 6C45 
 351      D558 C709 
 351      7290 4D90 
 351      566B 82EC 
 352 07c1 ABEB D504 	 .ascii "\253\353\325\004y^I\220veH\233`w\314"
 352      795E 4990 
 352      7665 489B 
 352      6077 CC
 353 07d0 F77C B204 	 .ascii "\367|\262\004ic\375}\235\353\3573\247\255\364\276\325\017z\377"
 353      6963 FD7D 
 353      9DEB EF33 
 353      A7AD F4BE 
 353      D50F 7AFF 
 354 07e4 C1AA 3B64 	 .ascii "\301\252;dV7\0065\302\252\250.V\211\371\347}j;,\331{\357\227"
 354      5637 0635 
 354      C2AA A82E 
 354      5689 F9E7 
 354      7D6A 3B2C 
 355 07fc 6BDD C9FA 	 .ascii "k\335\311\372\304:\327\312i6(\264\322\033N]\375\032wjg\2275S"
GAS LISTING  			page 28


 355      C43A D7CA 
 355      6936 28B4 
 355      D21B 4E5D 
 355      FD1A 776A 
 356 0814 D41C 16D0 	 .ascii "\324\034\026\320\311\376d\355\221\344Y{\224K\353\3363VZ?\357"
 356      C9FE 64ED 
 356      91E4 597B 
 356      944B EBDE 
 356      3356 5A3F 
 357 0829 07AD EFB0 	 .ascii "\007\255\357\260\264vr\325uq\324-\035\330wu\357\262\352\272\270"
 357      B476 72D5 
 357      7571 D42D 
 357      1DD8 7775 
 357      EFB2 EABA 
 358 083e EA2E 761A 	 .ascii "\352.v\032\325\355R\270\255O\252\216\346\3675\303\004(\342\275"
 358      D5ED 52B8 
 358      AD4F AA8E 
 358      E6F7 35C3 
 358      0428 E2BD 
 359 0852 D02A E2EE 	 .ascii "\320*\342\356\376M\200\335\254\251'\271\246n\3760Q\317\0323{"
 359      FE4D 80DD 
 359      ACA9 27B9 
 359      A66E FE30 
 359      51CF 1A33 
 360 0867 FBC1 CC69 	 .ascii "\373\301\314iV\335\231\224\371\275\237\233\337G\177b\314oN\237"
 360      56DD 9994 
 360      F9BD 9F9B 
 360      DF47 7F62 
 360      CC6F 4E9F 
 361 087b D8C9 A78D 	 .ascii "\330\311\247\215\371m\352\241m?*\354\367Ad\314Y\303\262\365\254"
 361      F96D EAA1 
 361      6D3F 2AEC 
 361      F741 64CC 
 361      59C3 B2F5 
 362 0890 755B 7156 	 .ascii "u[qV\335Vh\277\337\354j\3105\276\026\265\200\276\355$\240k\253"
 362      DD56 68BF 
 362      DFEC 6AC8 
 362      35BE 16B5 
 362      80BE ED24 
 363 08a7 851C 7338 	 .ascii "\205\034s8\317\365/\234\347X~{y\341\204wxW\272\331X\265\262{"
 363      CFF5 2F9C 
 363      E758 7E7B 
 363      79E1 8477 
 363      7857 BAD9 
 364 08bf 9D84 94AD 	 .ascii "\235\204\224\255\354\377&\257\354\3178\026t\364t\234m0\255nU"
 364      ECFF 26AF 
 364      ECCF 3816 
 364      74F4 749C 
 364      6D30 AD6E 
 365 08d4 B2BE 7542 	 .ascii "\262\276uB\326&\013Y\027\372G\326\005\226\254\213fS\307\241m"
 365      D626 0B59 
 365      17FA 47D6 
 365      0596 AC8B 
 365      6653 C7A1 
 366 08e9 3008 36DE 	 .ascii "0\b6\336\337\335\\U\343\326\301\022\027\263\216jN\362\303\323"
 366      DFDD 5C55 
 366      E3D6 C112 
GAS LISTING  			page 29


 366      17B3 8E6A 
 366      4EF2 C3D3 
 367 08fd 65CB 3AAA 	 .ascii "e\313:\252\241\376\263\234\335\265d\273\027\217?\250\224\225"
 367      A1FE B39C 
 367      DDB5 64BB 
 367      178F 3FA8 
 367      9495 
 368 090f CAC1 A66C 	 .ascii "\312\301\246l\007\034\274o\232\001\332\025\026\256\364\217\205"
 368      071C BC6F 
 368      9A01 DA15 
 368      16AE F48F 
 368      85
 369 0920 2B2C 0B57 	 .ascii "+,\013W\315,\350\307\214\262\361\230\261C\320TL\240\303\256\013"
 369      CD2C E8C7 
 369      8CB2 F198 
 369      B143 D054 
 369      4CA0 C3AE 
 370 0935 E44C 8AFC 	 .ascii "\344L\212\374\n\242\356\335\201\267\323\337W~7$-\bY~!\321.\345"
 370      0AA2 EEDD 
 370      81B7 D3DF 
 370      577E 3724 
 370      2D08 597E 
 371 094d BC0C 52F1 	 .ascii "\274\fR\361(\311\210{5u\025\246SM\003\237\224\221O\265\265\025"
 371      28C9 887B 
 371      3575 15A6 
 371      534D 039F 
 371      9491 4FB5 
 372 0963 3DB1 D8F7 	 .ascii "=\261\330\367\321\265G\324\323\322\033\0029-\355\3146\237X\244"
 372      D1B5 47D4 
 372      D3D2 1B02 
 372      392D EDCC 
 372      369F 58A4 
 373 0977 C415 715C 	 .ascii "\304\025q\\POK+]\314i\351\3325\312i)y\236\372\264tC\347J\343"
 373      504F 4B2B 
 373      5DCC 69E9 
 373      DA35 CA69 
 373      2979 9EFA 
 374 0991 69E9 A78A 	 .ascii "i\351\247\212\035dh\377NK7\2561\234\226^p\002\306;-\345]FGE\274"
 374      1D64 68FF 
 374      4E4B 37AE 
 374      319C 965E 
 374      7002 C63B 
 375 09ac D845 760E 	 .ascii "\330Ev\016U.rhX\3552\035\032~\255h%QLrxi\353\202L~\003\375\033"
 375      552E 7268 
 375      58ED 321D 
 375      1A7E AD68 
 375      2551 4C72 
 376 09c9 5E0B EB88 	 .ascii "^\013\353\210l\323!\220\351\207\211\230\236O\343\251q\265\256"
 376      6CD3 2190 
 376      E987 8998 
 376      9E4F E3A9 
 376      71B5 AE
 377 09dc BE1E 332C 	 .ascii "\276\0363,s\361\217\031n\322\035\336\213\005\263'f\265&<\033"
 377      73F1 8F19 
 377      6ED2 1DDE 
 377      8B05 B327 
 377      66B5 263C 
GAS LISTING  			page 30


 378 09f1 0299 9ADF 	 .ascii "\002\231\232\337\226d\357\264\334e"
 378      9664 EFB4 
 378      DC65 
 379 09fb B779 24BE 	 .string "\267y$\276\331\036.\331\216\352H\242k\245\355(\273\270)\347H.\353\254\324u\225Y\363)/\373\353Ig%\376\313\276\316\305\314,\253]\311\366\341\335I\334[g1\264\243e\213\371xD\231<W\f\352\307\013l\275+\351\013\354i\027\357\025\332P\177:\347U\303\364\335\207\237\032M\333\302g\\\326maK_\274P\017b\241=\271\027\233y^\304\016\234\332\300aq_\177XlL\256\277\311\254\237\263\320;\314]\350\375+\317\270\320\343\364\211uT\033\027z\274\036_\246\354\361]\312\036\233\227\246\352\361\262}\017tGn4\034\312\365\373Js\275\363C\271\276@\231?*J\271\341\210\350\013D&\316B\031Q\370?\311\023I\177xz\311\230|t_a\311Cy\271SC\276\371R(\234[R4%7?\030\222r\363\036\2379)w\342D\365\377Ti\276\257L\362\220{\002\020\b\006\002Q\277?\223"
 379      D91E 2ED9 
 379      8EEA 48A2 
 379      6BA5 ED28 
 379      BBB8 29E7 
 380 0afc DDF7 534F 	 .ascii "\335\367SO\3446\030\345\241}\036\226\"ER\310\347\365\027EB\276"
 380      E436 18E5 
 380      A17D 1E96 
 380      2245 52C8 
 380      E7F5 1745 
 381 0b12 40F9 A092 	 .ascii "@\371\240\222\200\257,(J\352\267\t|]\352\320\242\2107 zC\342"
 381      80AF 2C28 
 381      4AEA B709 
 381      7C5D EAD0 
 381      A288 3720 
 382 0b29 4C69 DEC4 	 .ascii "Li\336\30424\202\301\214x#\321\260QQ\276_\362\206\212\244\310"
 382      3234 82C1 
 382      8C78 23D1 
 382      B051 51BE 
 382      5FF2 868A 
 383 0b3f 4312 B484 	 .ascii "C\022\264\204\244\233\rM\3604O\024CR8<\312\214\222\037\f<\351"
 383      A49B 0D4D 
 383      F034 4F14 
 383      4352 383C 
 383      CA8C 921F 
 384 0b56 2B8F 86BC 	 .ascii "+\217\206\274\021_0p\267\271mZ \"\205\002`\267b\375T)\\\026\362"
 384      115F 3070 
 384      B7B9 6D5A 
 384      2022 8502 
 384      60B7 62FD 
 385 0b6f CD8D 0443 	 .ascii "\315\215\004C9\346n\211\206Qf\215&\3541\206\266\031\241`\031"
 385      39E6 6E89 
 385      8651 668D 
 385      26EC 3186 
 385      B619 A160 
 386 0b84 9802 ED91 	 .ascii "\230\002\355\221P\320\017\336E\245p\344\307\016X/\b\210s\203"
 386      50D0 0FDE 
 386      45A5 70E4 
 386      C70E 582F 
 386      0888 7383 
 387 0b98 40B1 C6FB 	 .ascii "@\261\306\373\255\372\003\325w\205\022\370,\227~\326\007"
 387      ADFA 03D5 
 387      7785 12F8 
 387      2C97 7ED6 
 387      07
 388 0ba9 3488 84E4 	 .string "4\210\204\344\235\243a\216\3211\237\b\371\"\300\252j\245\207\366*,\030k\323a\206\336c\\r\345*\013\240j\370\002o(\340\211\006\242aI\364@p\242\376\310m\371y\205\205S\362\362\037\365\020\276L\354\216\346\243\026\314\227\002\2210\240\335U\360x\301\364b\2171!\214\001\310\237\345\r\224K\342h^/C\030\306\360\265\300M\2617<\033\324\244\317\365\226\315\226D\033\037\213\"\"\005*^8\227\370\250d-}\344yD\362\212R\310\023\031T:\307\320+\263\224~I_\360\270\327\037\225\322\027L\013\210\322\3573\026\024J\201\362\310\254\341\004\301ld\232gJ0\350\037mt\"\032\n\001\017\376\205E\222\377\311\031\301\005RH\022\3570\264\317\224\346\004#\322\023\336\331RtnA\300[\352\227\304!\211f\2228\322\035v\314M\217\316)\225B\271|\207!\236\352_~p\316\234`\200\376\003\307\007\220\271"
 388      9DA3 618E 
 388      D131 9F08 
 388      F922 C0AA 
 388      6AA5 87F6 
 389 0caa A25A EE89 	 .ascii "\242Z\356\211\270\313fyC#!\230\017\373\203\245^\277RW\241\350"
 389      B8CB 6679 
 389      4323 2198 
 389      0FFB 83A5 
GAS LISTING  			page 31


 389      5EBF 5257 
 390 0cc0 DCC8 63C0 	 .ascii "\334\310c\300\350 \257\177\201wa\330\343\013\370}\001i$\323c"
 390      E820 AF7F 
 390      8177 61D8 
 390      E30B F87D 
 390      0169 24D3 
 391 0cd5 AA2F 4C6C 	 .ascii "\252/Ll\035Y\304\035;X\177\2468p\213\236\230@\202T\026\321\276"
 391      1D59 C41D 
 391      3B58 7FA6 
 391      3870 8B9E 
 391      9840 8254 
 392 0cec 66D0 D21F 	 .ascii "f\320\322\037\256\267O#E\342\007\016nb\n\250\240\270d\306\b&"
 392      AEB7 4F23 
 392      45E2 070E 
 392      6E62 0AA8 
 392      A0B8 64C6 
 393 0d02 BF61 3E2B 	 .ascii "\277a>+,pO\365F\274C\315\275\247M7\"RV\023%\251\250(\016y\003"
 393      2C70 4FF5 
 393      46BC 43CD 
 393      BDA7 4D37 
 393      2252 5613 
 394 0d1d 616F 19A1 	 .ascii "ao\031\241\221\325E\232G\352\317fJaI\2678\307\374\230\350.\016"
 394      91D5 459A 
 394      47EA CF66 
 394      4A61 49B7 
 394      38C7 FC98 
 395 0d34 9697 FB25 	 .ascii "\226\227\373%f\206Q\3578\356M\233>\023Rm\2411\244\252}\246\021"
 395      6686 51EF 
 395      38EE 4D9B 
 395      3E13 526D 
 395      A131 A4AA 
 396 0d4b 4319 4F27 	 .ascii "C\031O'\331'u\242\fI\251\335\242\342j\217\364\274v\027\371\376"
 396      D927 75A2 
 396      0C49 A9DD 
 396      A2E2 6A8F 
 396      F4BC 7617 
 397 0d61 20B9 494E 	 .ascii " \271IN\247\253\217\206\231}\376eI\361-\006\223\246\205\251!"
 397      A7AB 8F86 
 397      997D FE65 
 397      49F1 2D06 
 397      93A6 85A9 
 398 0d76 E0CA 1083 	 .ascii "\340\312\020\203\313^\3213)\307\030,\022\226\231R\231\004v\211"
 398      CB5E D133 
 398      29C7 182C 
 398      1296 9952 
 398      9904 7689 
 399 0d8a FF07 289D 	 .ascii "\377\007(\235\345\307"
 399      E5C7 
 400               	 .text
 401               	 .section .gnu.lto_.symtab.baf1f11f548d495,"",@progbits
 402 0000 5553 425F 	 .string "USB_Device_CurrentlySelfPowered"
 402      4465 7669 
 402      6365 5F43 
 402      7572 7265 
 402      6E74 6C79 
 403 0020 00        	 .string ""
 404 0021 0400      	 .string "\004"
GAS LISTING  			page 32


 405 0023 0100      	 .string "\001"
 406 0025 00        	 .string ""
 407 0026 00        	 .string ""
 408 0027 00        	 .string ""
 409 0028 00        	 .string ""
 410 0029 00        	 .string ""
 411 002a 00        	 .string ""
 412 002b FA00      	 .string "\372"
 413 002d 00        	 .string ""
 414 002e 00        	 .string ""
 415 002f 5553 425F 	 .string "USB_Device_RemoteWakeupEnabled"
 415      4465 7669 
 415      6365 5F52 
 415      656D 6F74 
 415      6557 616B 
 416 004e 00        	 .string ""
 417 004f 0400      	 .string "\004"
 418 0051 0100      	 .string "\001"
 419 0053 00        	 .string ""
 420 0054 00        	 .string ""
 421 0055 00        	 .string ""
 422 0056 00        	 .string ""
 423 0057 00        	 .string ""
 424 0058 00        	 .string ""
 425 0059 FF00      	 .string "\377"
 426 005b 00        	 .string ""
 427 005c 00        	 .string ""
 428 005d 5553 425F 	 .string "USB_Device_ConfigurationNumber"
 428      4465 7669 
 428      6365 5F43 
 428      6F6E 6669 
 428      6775 7261 
 429 007c 00        	 .string ""
 430 007d 0400      	 .string "\004"
 431 007f 0100      	 .string "\001"
 432 0081 00        	 .string ""
 433 0082 00        	 .string ""
 434 0083 00        	 .string ""
 435 0084 00        	 .string ""
 436 0085 00        	 .string ""
 437 0086 00        	 .string ""
 438 0087 0401 00   	 .string "\004\001"
 439 008a 00        	 .string ""
 440 008b 5553 425F 	 .string "USB_Device_ProcessControlRequest"
 440      4465 7669 
 440      6365 5F50 
 440      726F 6365 
 440      7373 436F 
 441 00ac 00        	 .string ""
 442 00ad 00        	 .string ""
 443 00ae 00        	 .string ""
 444 00af 00        	 .string ""
 445 00b0 00        	 .string ""
 446 00b1 00        	 .string ""
 447 00b2 00        	 .string ""
 448 00b3 00        	 .string ""
 449 00b4 00        	 .string ""
GAS LISTING  			page 33


 450 00b5 00        	 .string ""
 451 00b6 00        	 .string ""
 452 00b7 CA00      	 .string "\312"
 453 00b9 00        	 .string ""
 454 00ba 00        	 .string ""
 455 00bb 5553 425F 	 .string "USB_ControlRequest"
 455      436F 6E74 
 455      726F 6C52 
 455      6571 7565 
 455      7374 00
 456 00ce 00        	 .string ""
 457 00cf 0200      	 .string "\002"
 458 00d1 00        	 .string ""
 459 00d2 00        	 .string ""
 460 00d3 00        	 .string ""
 461 00d4 00        	 .string ""
 462 00d5 00        	 .string ""
 463 00d6 00        	 .string ""
 464 00d7 00        	 .string ""
 465 00d8 00        	 .string ""
 466 00d9 E700      	 .string "\347"
 467 00db 00        	 .string ""
 468 00dc 00        	 .string ""
 469 00dd 5553 425F 	 .string "USB_DeviceState"
 469      4465 7669 
 469      6365 5374 
 469      6174 6500 
 470 00ed 00        	 .string ""
 471 00ee 0200      	 .string "\002"
 472 00f0 00        	 .string ""
 473 00f1 00        	 .string ""
 474 00f2 00        	 .string ""
 475 00f3 00        	 .string ""
 476 00f4 00        	 .string ""
 477 00f5 00        	 .string ""
 478 00f6 00        	 .string ""
 479 00f7 00        	 .string ""
 480 00f8 0101 00   	 .string "\001\001"
 481 00fb 00        	 .string ""
 482 00fc 456E 6470 	 .string "Endpoint_ClearStatusStage"
 482      6F69 6E74 
 482      5F43 6C65 
 482      6172 5374 
 482      6174 7573 
 483 0116 00        	 .string ""
 484 0117 0200      	 .string "\002"
 485 0119 00        	 .string ""
 486 011a 00        	 .string ""
 487 011b 00        	 .string ""
 488 011c 00        	 .string ""
 489 011d 00        	 .string ""
 490 011e 00        	 .string ""
 491 011f 00        	 .string ""
 492 0120 00        	 .string ""
 493 0121 CD00      	 .string "\315"
 494 0123 00        	 .string ""
 495 0124 00        	 .string ""
GAS LISTING  			page 34


 496 0125 456E 6470 	 .string "Endpoint_Write_Control_Stream_LE"
 496      6F69 6E74 
 496      5F57 7269 
 496      7465 5F43 
 496      6F6E 7472 
 497 0146 00        	 .string ""
 498 0147 0200      	 .string "\002"
 499 0149 00        	 .string ""
 500 014a 00        	 .string ""
 501 014b 00        	 .string ""
 502 014c 00        	 .string ""
 503 014d 00        	 .string ""
 504 014e 00        	 .string ""
 505 014f 00        	 .string ""
 506 0150 00        	 .string ""
 507 0151 CF00      	 .string "\317"
 508 0153 00        	 .string ""
 509 0154 00        	 .string ""
 510 0155 456E 6470 	 .string "Endpoint_Write_Control_PStream_LE"
 510      6F69 6E74 
 510      5F57 7269 
 510      7465 5F43 
 510      6F6E 7472 
 511 0177 00        	 .string ""
 512 0178 0200      	 .string "\002"
 513 017a 00        	 .string ""
 514 017b 00        	 .string ""
 515 017c 00        	 .string ""
 516 017d 00        	 .string ""
 517 017e 00        	 .string ""
 518 017f 00        	 .string ""
 519 0180 00        	 .string ""
 520 0181 00        	 .string ""
 521 0182 D600      	 .string "\326"
 522 0184 00        	 .string ""
 523 0185 00        	 .string ""
 524 0186 4341 4C4C 	 .string "CALLBACK_USB_GetDescriptor"
 524      4241 434B 
 524      5F55 5342 
 524      5F47 6574 
 524      4465 7363 
 525 01a1 00        	 .string ""
 526 01a2 0200      	 .string "\002"
 527 01a4 00        	 .string ""
 528 01a5 00        	 .string ""
 529 01a6 00        	 .string ""
 530 01a7 00        	 .string ""
 531 01a8 00        	 .string ""
 532 01a9 00        	 .string ""
 533 01aa 00        	 .string ""
 534 01ab 00        	 .string ""
 535 01ac D800      	 .string "\330"
 536 01ae 00        	 .string ""
 537 01af 00        	 .string ""
 538 01b0 4556 454E 	 .string "EVENT_USB_Device_ConfigurationChanged"
 538      545F 5553 
 538      425F 4465 
GAS LISTING  			page 35


 538      7669 6365 
 538      5F43 6F6E 
 539 01d6 00        	 .string ""
 540 01d7 0200      	 .string "\002"
 541 01d9 00        	 .string ""
 542 01da 00        	 .string ""
 543 01db 00        	 .string ""
 544 01dc 00        	 .string ""
 545 01dd 00        	 .string ""
 546 01de 00        	 .string ""
 547 01df 00        	 .string ""
 548 01e0 00        	 .string ""
 549 01e1 E300      	 .string "\343"
 550 01e3 00        	 .string ""
 551 01e4 00        	 .string ""
 552 01e5 4556 454E 	 .string "EVENT_USB_Device_ControlRequest"
 552      545F 5553 
 552      425F 4465 
 552      7669 6365 
 552      5F43 6F6E 
 553 0205 00        	 .string ""
 554 0206 0200      	 .string "\002"
 555 0208 00        	 .string ""
 556 0209 00        	 .string ""
 557 020a 00        	 .string ""
 558 020b 00        	 .string ""
 559 020c 00        	 .string ""
 560 020d 00        	 .string ""
 561 020e 00        	 .string ""
 562 020f 00        	 .string ""
 563 0210 E500      	 .string "\345"
 564 0212 00        	 .string ""
 565 0213 00        	 .string ""
 566               	 .text
 567               	 .section .gnu.lto_.opts,"",@progbits
 568 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 568      6375 3D61 
 568      746D 6567 
 568      6133 3275 
 568      3227 2027 
 569               	 .text
 570               	 .cfi_sections .debug_frame
 571               	.global USB_Device_ProcessControlRequest
 573               	USB_Device_ProcessControlRequest:
 574               	.LFB80:
 575               	 .file 1 "LUFA/Drivers/USB/Core/DeviceStandardReq.c"
   1:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** /*
   2:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
   5:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** */
   8:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
   9:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** /*
  10:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
GAS LISTING  			page 36


  12:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  21:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/DeviceStandardReq.c ****   this software.
  29:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** */
  30:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  31:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_USB_DRIVER
  32:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #include "USBMode.h"
  33:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  34:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if defined(USB_CAN_BE_DEVICE)
  35:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  36:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #define  __INCLUDE_FROM_DEVICESTDREQ_C
  37:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #include "DeviceStandardReq.h"
  38:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  39:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** uint8_t USB_Device_ConfigurationNumber;
  40:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  41:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_SELF_POWER)
  42:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_CurrentlySelfPowered;
  43:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
  44:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  45:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_DEVICE_REMOTE_WAKEUP)
  46:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** bool    USB_Device_RemoteWakeupEnabled;
  47:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
  48:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  49:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** void USB_Device_ProcessControlRequest(void)
  50:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 576               	 .loc 1 50 0
 577               	 .cfi_startproc
 578 0000 1F93      	 push r17
 579               	.LCFI0:
 580               	 .cfi_def_cfa_offset 3
 581               	 .cfi_offset 17,-2
 582 0002 CF93      	 push r28
 583               	.LCFI1:
 584               	 .cfi_def_cfa_offset 4
 585               	 .cfi_offset 28,-3
 586 0004 DF93      	 push r29
 587               	.LCFI2:
 588               	 .cfi_def_cfa_offset 5
 589               	 .cfi_offset 29,-4
 590 0006 CDB7      	 in r28,__SP_L__
 591 0008 DEB7      	 in r29,__SP_H__
 592               	.LCFI3:
 593               	 .cfi_def_cfa_register 28
GAS LISTING  			page 37


 594 000a AA97      	 sbiw r28,42
 595               	.LCFI4:
 596               	 .cfi_def_cfa_offset 47
 597 000c 0FB6      	 in __tmp_reg__,__SREG__
 598 000e F894      	 cli
 599 0010 DEBF      	 out __SP_H__,r29
 600 0012 0FBE      	 out __SREG__,__tmp_reg__
 601 0014 CDBF      	 out __SP_L__,r28
 602               	 
 603               	 
 604               	 
 605               	.L__stack_usage =45
 606               	.LVL0:
 607 0016 E0E0      	 ldi r30,lo8(USB_ControlRequest)
 608 0018 F0E0      	 ldi r31,hi8(USB_ControlRequest)
 609               	.LVL1:
 610               	.L3:
 611               	.LBB170:
 612               	.LBB171:
 613               	.LBB172:
 614               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
GAS LISTING  			page 38


  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
GAS LISTING  			page 39


  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
GAS LISTING  			page 40


 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
GAS LISTING  			page 41


 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
GAS LISTING  			page 42


 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 43


 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
GAS LISTING  			page 44


 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
GAS LISTING  			page 45


 436:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
 464:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 472:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
 485:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
GAS LISTING  			page 46


 493:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 542:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 615               	 .loc 2 542 0 discriminator 2
 616 001a 8091 F100 	 lds r24,241
 617               	.LBE172:
 618               	.LBE171:
  51:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_BIG_ENDIAN)
  52:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bmRequestType = Endpoint_Read_8();
  53:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.bRequest      = Endpoint_Read_8();
GAS LISTING  			page 47


  54:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wValue        = Endpoint_Read_16_LE();
  55:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wIndex        = Endpoint_Read_16_LE();
  56:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_ControlRequest.wLength       = Endpoint_Read_16_LE();
  57:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
  58:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t* RequestHeader = (uint8_t*)&USB_ControlRequest;
  59:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  60:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeade
  61:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  *(RequestHeader++) = Endpoint_Read_8();
 619               	 .loc 1 61 0 discriminator 2
 620 001e 8193      	 st Z+,r24
 621               	.LVL2:
  60:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	for (uint8_t RequestHeaderByte = 0; RequestHeaderByte < sizeof(USB_Request_Header_t); RequestHeade
 622               	 .loc 1 60 0 discriminator 2
 623 0020 20E0      	 ldi r18,hi8(USB_ControlRequest+8)
 624 0022 E030      	 cpi r30,lo8(USB_ControlRequest+8)
 625 0024 F207      	 cpc r31,r18
 626 0026 01F4      	 brne .L3
 627               	.LBE170:
  62:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
  63:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  64:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ControlRequest();
 628               	 .loc 1 64 0
 629 0028 0E94 0000 	 call EVENT_USB_Device_ControlRequest
 630               	.LVL3:
 631               	.LBB173:
 632               	.LBB174:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 633               	 .loc 2 431 0
 634 002c 8091 E800 	 lds r24,232
 635               	.LBE174:
 636               	.LBE173:
  65:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  66:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
 637               	 .loc 1 66 0
 638 0030 83FF      	 sbrs r24,3
 639 0032 00C0      	 rjmp .L4
 640               	.LBB175:
  67:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
  68:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		uint8_t bmRequestType = USB_ControlRequest.bmRequestType;
 641               	 .loc 1 68 0
 642 0034 2091 0000 	 lds r18,USB_ControlRequest
 643               	.LVL4:
  69:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  70:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		switch (USB_ControlRequest.bRequest)
 644               	 .loc 1 70 0
 645 0038 3091 0000 	 lds r19,USB_ControlRequest+1
 646 003c 832F      	 mov r24,r19
 647 003e 90E0      	 ldi r25,0
 648 0040 8A30      	 cpi r24,10
 649 0042 9105      	 cpc r25,__zero_reg__
 650 0044 00F0      	 brlo .+2
 651 0046 00C0      	 rjmp .L4
 652 0048 FC01      	 movw r30,r24
 653 004a E050      	 subi r30,lo8(-(gs(.L6)))
 654 004c F040      	 sbci r31,hi8(-(gs(.L6)))
 655 004e 0C94 0000 	 jmp __tablejump2__
 656               	 .section .progmem.gcc_sw_table,"a",@progbits
GAS LISTING  			page 48


 657               	 .p2align 1
 658               	.L6:
 659 0000 0000      	 .word gs(.L5)
 660 0002 0000      	 .word gs(.L7)
 661 0004 0000      	 .word gs(.L4)
 662 0006 0000      	 .word gs(.L7)
 663 0008 0000      	 .word gs(.L4)
 664 000a 0000      	 .word gs(.L8)
 665 000c 0000      	 .word gs(.L9)
 666 000e 0000      	 .word gs(.L4)
 667 0010 0000      	 .word gs(.L10)
 668 0012 0000      	 .word gs(.L11)
 669               	 .text
 670               	.L5:
  71:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		{
  72:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetStatus:
  73:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 671               	 .loc 1 73 0
 672 0052 2038      	 cpi r18,lo8(-128)
 673 0054 01F0      	 breq .L12
 674               	 .loc 1 73 0 is_stmt 0 discriminator 1
 675 0056 2238      	 cpi r18,lo8(-126)
 676 0058 01F0      	 breq .+2
 677 005a 00C0      	 rjmp .L4
 678               	.LVL5:
 679               	.LBB176:
 680               	.LBB177:
 681               	.LBB178:
 682               	.LBB179:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 683               	 .loc 2 270 0 is_stmt 1
 684 005c 8091 0000 	 lds r24,USB_ControlRequest+4
 685 0060 8F70      	 andi r24,lo8(15)
 686               	.LVL6:
 687 0062 8093 E900 	 sts 233,r24
 688               	.LBE179:
 689               	.LBE178:
 690               	.LBB180:
 691               	.LBB181:
 513:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 692               	 .loc 2 513 0
 693 0066 8091 EB00 	 lds r24,235
 694               	.LVL7:
 695 006a 85FB      	 bst r24,5
 696 006c 8827      	 clr r24
 697 006e 80F9      	 bld r24,0
 698               	.LVL8:
 699               	.LBE181:
 700               	.LBE180:
 701               	.LBB182:
 702               	.LBB183:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 703               	 .loc 2 270 0
 704 0070 1092 E900 	 sts 233,__zero_reg__
 705               	.LVL9:
 706 0074 00C0      	 rjmp .L14
 707               	.LVL10:
GAS LISTING  			page 49


 708               	.L12:
 709               	.LBE183:
 710               	.LBE182:
  74:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  75:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  76:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetStatus();
  77:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
  78:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  79:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  80:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_ClearFeature:
  81:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetFeature:
  82:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  83:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_ENDPOINT)))
  84:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  85:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_ClearSetFeature();
  86:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
  87:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  88:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  89:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetAddress:
  90:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
  91:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetAddress();
  92:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
  93:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
  94:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetDescriptor:
  95:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
  96:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					(bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_INTERFACE)))
  97:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
  98:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					USB_Device_GetDescriptor();
  99:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				}
 100:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 101:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 102:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_GetConfiguration:
 103:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
 104:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_GetConfiguration();
 105:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 106:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 107:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			case REQ_SetConfiguration:
 108:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 109:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  USB_Device_SetConfiguration();
 110:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 111:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 112:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 113:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			default:
 114:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				break;
 115:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		}
 116:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 117:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 118:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
 119:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 120:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_ClearSETUP();
 121:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		Endpoint_StallTransaction();
 122:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 123:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 124:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 125:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetAddress(void)
 126:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 127:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
GAS LISTING  			page 50


 128:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 129:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_SetDeviceAddress(DeviceAddress);
 130:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 131:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 132:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 133:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 134:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 135:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	while (!(Endpoint_IsINReady()));
 136:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 137:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_EnableDeviceAddress(DeviceAddress);
 138:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 139:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
 140:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 141:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 142:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_SetConfiguration(void)
 143:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 144:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(FIXED_NUM_CONFIGURATIONS)
 145:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
 146:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 147:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 148:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Descriptor_Device_t* DevDescriptorPtr;
 149:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 150:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 151:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if defined(USE_FLASH_DESCRIPTORS)
 152:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_FLASH
 153:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_EEPROM_DESCRIPTORS)
 154:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_EEPROM
 155:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#elif defined(USE_SRAM_DESCRIPTORS)
 156:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#define MemoryAddressSpace  MEMSPACE_SRAM
 157:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#else
 158:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			uint8_t MemoryAddressSpace;
 159:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 160:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 161:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 162:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (CALLBACK_USB_GetDescriptor((DTYPE_Device << 8), 0, (void*)&DevDescriptorPtr
 163:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 164:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 165:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                               , &MemoryAddressSpace
 166:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 167:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                               ) == NO_DESCRIPTOR)
 168:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 169:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 170:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 171:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 172:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 173:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (MemoryAddressSpace == MEMSPACE_FLASH)
 174:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 175:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > pgm_read_byte(&DevDescriptorPtr->NumberOfConfigurations
 176:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 177:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 178:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else if (MemoryAddressSpace == MEMSPACE_EEPROM)
 179:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 180:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if (((uint8_t)USB_ControlRequest.wValue > eeprom_read_byte(&DevDescriptorPtr->NumberOfConfigurati
 181:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 182:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 183:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 184:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
GAS LISTING  			page 51


 185:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 186:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		  return;
 187:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 188:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 189:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > DevDescriptorPtr->NumberOfConfigurations)
 190:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  return;
 191:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 192:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 193:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 194:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 195:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 196:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
 197:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 198:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 199:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 200:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_Device_ConfigurationNumber)
 201:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = DEVICE_STATE_Configured;
 202:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 203:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
 204:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 205:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ConfigurationChanged();
 206:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 207:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 208:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetConfiguration(void)
 209:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 210:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 211:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 212:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_8(USB_Device_ConfigurationNumber);
 213:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 214:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 215:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 216:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 217:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 218:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 219:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetInternalSerialDescriptor(void)
 220:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 221:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	struct
 222:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 223:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Descriptor_Header_t Header;
 224:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		uint16_t                UnicodeString[INTERNAL_SERIAL_LENGTH_BITS / 4];
 225:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	} SignatureDescriptor;
 226:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 227:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Type = DTYPE_String;
 228:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 229:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 230:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_GetSerialString(SignatureDescriptor.UnicodeString);
 231:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 232:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 233:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 234:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
 235:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 236:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 237:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** #endif
 238:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 239:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetDescriptor(void)
 240:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 241:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	const void* DescriptorPointer;
GAS LISTING  			page 52


 242:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint16_t    DescriptorSize;
 243:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 244:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 245:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 246:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DescriptorAddressSpace;
 247:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 248:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 249:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if !defined(NO_INTERNAL_SERIAL) && (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 250:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
 251:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 252:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		USB_Device_GetInternalSerialDescriptor();
 253:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 254:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 255:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 256:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 257:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIn
 258:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 &DescriptorPointer
 259:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(ARCH_HAS_MULTI_ADDRESS_SPACE) && \
 260:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	    !(defined(USE_FLASH_DESCRIPTORS) || defined(USE_EEPROM_DESCRIPTORS) || defined(USE_RAM_DESCRIP
 261:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	                                                 , &DescriptorAddressSpace
 262:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 263:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 													 )) == NO_DESCRIPTOR)
 264:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 265:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		return;
 266:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 267:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 268:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 269:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 270:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#if defined(USE_RAM_DESCRIPTORS) || !defined(ARCH_HAS_MULTI_ADDRESS_SPACE)
 271:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 272:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_EEPROM_DESCRIPTORS)
 273:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 274:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#elif defined(USE_FLASH_DESCRIPTORS)
 275:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 276:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#else
 277:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (DescriptorAddressSpace == MEMSPACE_FLASH)
 278:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 279:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else if (DescriptorAddressSpace == MEMSPACE_EEPROM)
 280:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_EStream_LE(DescriptorPointer, DescriptorSize);
 281:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	else
 282:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  Endpoint_Write_Control_Stream_LE(DescriptorPointer, DescriptorSize);
 283:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	#endif
 284:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 285:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearOUT();
 286:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 287:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 288:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_GetStatus(void)
 289:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 290:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t CurrentStatus = 0;
 711               	 .loc 1 290 0
 712 0076 8091 0000 	 lds r24,USB_Device_CurrentlySelfPowered
 713               	.LVL11:
 291:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 292:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType)
 293:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 294:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE):
 295:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_SELF_POWER)
GAS LISTING  			page 53


 296:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_CurrentlySelfPowered)
 297:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_SELFPOWERED_ENABLED;
 298:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 299:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 300:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 301:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if (USB_Device_RemoteWakeupEnabled)
 714               	 .loc 1 301 0
 715 007a 9091 0000 	 lds r25,USB_Device_RemoteWakeupEnabled
 716 007e 9111      	 cpse r25,__zero_reg__
 302:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  CurrentStatus |= FEATURE_REMOTE_WAKEUP_ENABLED;
 717               	 .loc 1 302 0
 718 0080 8260      	 ori r24,lo8(2)
 719               	.LVL12:
 720               	.L14:
 721               	.LBB184:
 722               	.LBB185:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 723               	 .loc 2 444 0
 724 0082 9091 E800 	 lds r25,232
 725 0086 977F      	 andi r25,lo8(-9)
 726 0088 9093 E800 	 sts 232,r25
 727               	.LVL13:
 728               	.LBE185:
 729               	.LBE184:
 730               	.LBB186:
 731               	.LBB187:
 543:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 544:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 545:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes one byte to the currently selected endpoint's bank, for IN direction endpoints.
 546:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 547:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 548:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 549:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write into the the currently selected endpoint's FIFO buffer.
 550:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 551:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data) ATTR_ALWAYS_INLINE;
 552:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_8(const uint8_t Data)
 553:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 555:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 556:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 557:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Discards one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 558:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 559:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 560:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 561:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void) ATTR_ALWAYS_INLINE;
 562:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Discard_8(void)
 563:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 564:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Dummy;
 565:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 566:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Dummy = UEDATX;
 567:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 568:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				(void)Dummy;
 569:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 570:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 571:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads two bytes from the currently selected endpoint's bank in little endian format, for OUT
 572:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 573:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 54


 574:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 575:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 576:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next two bytes in the currently selected endpoint's FIFO buffer.
 577:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 578:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_LE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 579:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_LE(void)
 580:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 581:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				union
 582:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 583:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint16_t Value;
 584:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint8_t  Bytes[2];
 585:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				} Data;
 586:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 587:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[0] = UEDATX;
 588:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[1] = UEDATX;
 589:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 590:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Data.Value;
 591:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 592:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 593:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads two bytes from the currently selected endpoint's bank in big endian format, for OUT
 594:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 595:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 596:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 597:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 598:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next two bytes in the currently selected endpoint's FIFO buffer.
 599:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 600:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_BE(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 601:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_Read_16_BE(void)
 602:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 603:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				union
 604:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 605:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint16_t Value;
 606:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					uint8_t  Bytes[2];
 607:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				} Data;
 608:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 609:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[1] = UEDATX;
 610:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				Data.Bytes[0] = UEDATX;
 611:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 612:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Data.Value;
 613:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 614:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 615:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Writes two bytes to the currently selected endpoint's bank in little endian format, for IN
 616:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction endpoints.
 617:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 618:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 619:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 620:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Data  Data to write to the currently selected endpoint's FIFO buffer.
 621:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 622:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_16_LE(const uint16_t Data) ATTR_ALWAYS_INLINE;
 623:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_Write_16_LE(const uint16_t Data)
 624:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 625:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = (Data & 0xFF);
 732               	 .loc 2 625 0
 733 008c 8093 F100 	 sts 241,r24
 626:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = (Data >> 8);
 734               	 .loc 2 626 0
 735 0090 1092 F100 	 sts 241,__zero_reg__
GAS LISTING  			page 55


 736 0094 00C0      	 rjmp .L65
 737               	.LVL14:
 738               	.L7:
 739               	.LBE187:
 740               	.LBE186:
 741               	.LBE177:
 742               	.LBE176:
  82:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 743               	 .loc 1 82 0
 744 0096 822F      	 mov r24,r18
 745 0098 8D7F      	 andi r24,lo8(-3)
 746 009a 01F0      	 breq .+2
 747 009c 00C0      	 rjmp .L4
 748               	.LBB188:
 749               	.LBB189:
 303:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 304:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 305:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_ENDPOINT):
 306:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#if !defined(CONTROL_ONLY_DEVICE)
 307:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 308:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 309:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			CurrentStatus = Endpoint_IsStalled();
 310:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 311:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
 312:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			#endif
 313:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 314:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 315:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		default:
 316:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			return;
 317:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	}
 318:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 319:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearSETUP();
 320:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 321:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_16_LE(CurrentStatus);
 322:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearIN();
 323:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 324:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 325:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 326:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 327:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** static void USB_Device_ClearSetFeature(void)
 328:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** {
 329:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	switch (USB_ControlRequest.bmRequestType & CONTROL_REQTYPE_RECIPIENT)
 750               	 .loc 1 329 0
 751 009e 2223      	 tst r18
 752 00a0 01F0      	 breq .L15
 753 00a2 2230      	 cpi r18,lo8(2)
 754 00a4 01F0      	 breq .L16
 755 00a6 00C0      	 rjmp .L4
 756               	.L15:
 330:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	{
 331:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(NO_DEVICE_REMOTE_WAKEUP)
 332:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_DEVICE:
 333:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_DeviceRemoteWakeup)
 757               	 .loc 1 333 0
 758 00a8 8091 0000 	 lds r24,USB_ControlRequest+2
 759 00ac 8130      	 cpi r24,lo8(1)
 760 00ae 01F0      	 breq .+2
GAS LISTING  			page 56


 761 00b0 00C0      	 rjmp .L4
 334:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  USB_Device_RemoteWakeupEnabled = (USB_ControlRequest.bRequest == REQ_SetFeature);
 762               	 .loc 1 334 0
 763 00b2 3330      	 cpi r19,lo8(3)
 764 00b4 01F0      	 breq .L17
 765 00b6 80E0      	 ldi r24,0
 766               	.L17:
 767 00b8 8093 0000 	 sts USB_Device_RemoteWakeupEnabled,r24
 768 00bc 00C0      	 rjmp .L18
 769               	.L16:
 335:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			else
 336:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			  return;
 337:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 338:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			break;
 339:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#endif
 340:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		#if !defined(CONTROL_ONLY_DEVICE)
 341:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 		case REQREC_ENDPOINT:
 342:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			if ((uint8_t)USB_ControlRequest.wValue == FEATURE_SEL_EndpointHalt)
 770               	 .loc 1 342 0
 771 00be 8091 0000 	 lds r24,USB_ControlRequest+2
 772 00c2 8111      	 cpse r24,__zero_reg__
 773 00c4 00C0      	 rjmp .L18
 774               	.LBB190:
 343:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 			{
 344:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				uint8_t EndpointIndex = ((uint8_t)USB_ControlRequest.wIndex & ENDPOINT_EPNUM_MASK);
 775               	 .loc 1 344 0
 776 00c6 2091 0000 	 lds r18,USB_ControlRequest+4
 777               	.LVL15:
 778 00ca 2F70      	 andi r18,lo8(15)
 779               	.LVL16:
 345:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 346:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (EndpointIndex == ENDPOINT_CONTROLEP)
 780               	 .loc 1 346 0
 781 00cc 01F4      	 brne .+2
 782 00ce 00C0      	 rjmp .L4
 783               	.LVL17:
 784               	.LBB191:
 785               	.LBB192:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 786               	 .loc 2 270 0
 787 00d0 2093 E900 	 sts 233,r18
 788               	.LVL18:
 789               	.LBE192:
 790               	.LBE191:
 791               	.LBB193:
 792               	.LBB194:
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 793               	 .loc 2 313 0
 794 00d4 8091 EB00 	 lds r24,235
 795               	.LBE194:
 796               	.LBE193:
 347:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				  return;
 348:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 349:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				Endpoint_SelectEndpoint(EndpointIndex);
 350:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 
 351:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (Endpoint_IsEnabled())
 797               	 .loc 1 351 0
GAS LISTING  			page 57


 798 00d8 80FF      	 sbrs r24,0
 799 00da 00C0      	 rjmp .L18
 800               	.LBB195:
 801               	.LBB196:
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 802               	 .loc 2 491 0
 803 00dc 8091 EB00 	 lds r24,235
 804               	.LBE196:
 805               	.LBE195:
 352:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				{
 353:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 					if (USB_ControlRequest.bRequest == REQ_SetFeature)
 806               	 .loc 1 353 0
 807 00e0 3330      	 cpi r19,lo8(3)
 808 00e2 01F4      	 brne .L21
 809               	.LBB198:
 810               	.LBB197:
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 811               	 .loc 2 491 0
 812 00e4 8062      	 ori r24,lo8(32)
 813 00e6 00C0      	 rjmp .L62
 814               	.L21:
 815               	.LBE197:
 816               	.LBE198:
 817               	.LBB199:
 818               	.LBB200:
 501:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 819               	 .loc 2 501 0
 820 00e8 8061      	 ori r24,lo8(16)
 821 00ea 8093 EB00 	 sts 235,r24
 822               	.LVL19:
 823               	.LBE200:
 824               	.LBE199:
 825               	.LBB201:
 826               	.LBB202:
 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 827               	 .loc 2 282 0
 828 00ee 81E0      	 ldi r24,lo8(1)
 829 00f0 90E0      	 ldi r25,0
 830 00f2 022E      	 mov r0,r18
 831 00f4 00C0      	 rjmp 2f
 832               	 1:
 833 00f6 880F      	 lsl r24
 834               	 2:
 835 00f8 0A94      	 dec r0
 836 00fa 02F4      	 brpl 1b
 837 00fc 8093 EA00 	 sts 234,r24
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 838               	 .loc 2 283 0
 839 0100 1092 EA00 	 sts 234,__zero_reg__
 840               	.LBE202:
 841               	.LBE201:
 842               	.LBB203:
 843               	.LBB204:
 520:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 844               	 .loc 2 520 0
 845 0104 8091 EB00 	 lds r24,235
 846 0108 8860      	 ori r24,lo8(8)
GAS LISTING  			page 58


 847               	.LVL20:
 848               	.L62:
 849 010a 8093 EB00 	 sts 235,r24
 850               	.LVL21:
 851               	.L18:
 852               	.LBE204:
 853               	.LBE203:
 854               	.LBE190:
 855               	.LBB205:
 856               	.LBB206:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 857               	 .loc 2 270 0
 858 010e 1092 E900 	 sts 233,__zero_reg__
 859               	.LBE206:
 860               	.LBE205:
 861               	.LBB207:
 862               	.LBB208:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 863               	 .loc 2 444 0
 864 0112 8091 E800 	 lds r24,232
 865 0116 877F      	 andi r24,lo8(-9)
 866 0118 00C0      	 rjmp .L63
 867               	.LVL22:
 868               	.L8:
 869               	.LBE208:
 870               	.LBE207:
 871               	.LBE189:
 872               	.LBE188:
  90:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 873               	 .loc 1 90 0
 874 011a 2111      	 cpse r18,__zero_reg__
 875 011c 00C0      	 rjmp .L4
 876               	.LBB209:
 877               	.LBB210:
 127:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	uint8_t DeviceAddress = (USB_ControlRequest.wValue & 0x7F);
 878               	 .loc 1 127 0
 879 011e 1091 0000 	 lds r17,USB_ControlRequest+2
 880 0122 1F77      	 andi r17,lo8(127)
 881               	.LVL23:
 882               	.LBB211:
 883               	.LBB212:
 884               	 .file 3 "LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   all copies and that both that the copyright notice and this
GAS LISTING  			page 59


  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \copydetails Group_Device_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** /** \ingroup Group_Device
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \defgroup Group_Device_AVR8 Device Management (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  \brief USB Device definitions for the AVR8 microcontrollers.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  Architecture specific USB Device definitions for the Atmel 8-bit AVR microcontrollers.
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  *  @{
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h ****  */
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #ifndef __USBDEVICE_AVR8_H__
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** #define __USBDEVICE_AVR8_H__
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Includes: */
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../../../../Common/Common.h"
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBController.h"
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../StdDescriptors.h"
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../USBInterrupt.h"
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#include "../Endpoint.h"
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if defined(__cplusplus)
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			extern "C" {
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Preprocessor Checks: */
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_RAM_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_RAM_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_EEPROM_DESCRIPTORS))
GAS LISTING  			page 60


  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_EEPROM_DESCRIPTORS are mutually exclusive.
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#if (defined(USE_FLASH_DESCRIPTORS) && defined(USE_RAM_DESCRIPTORS))
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#error USE_FLASH_DESCRIPTORS and USE_RAM_DESCRIPTORS are mutually exclusive.
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		#endif
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Public Interface - May be used in end-application: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Macros: */
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** \name USB Device Mode Option Masks */
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@{
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defin
  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  USB interface should be initialized in low speed (1.5Mb/s) mode.
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Low Speed mode is not available on all USB AVR models.
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        \n
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note Restrictions apply on the number, size and type of endpoints which can be used
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *        when running in low speed mode - please refer to the USB 2.0 specification.
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USB_DEVICE_OPT_LOWSPEED            (1 << 0)
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Mask for the Options parameter of the \ref USB_Init() function. This indicates that the
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  USB interface should be initialized in full speed (12Mb/s) mode.
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#define USB_DEVICE_OPT_FULLSPEED               (0 << 0)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			//@}
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (!defined(NO_INTERNAL_SERIAL) && \
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			     (defined(USB_SERIES_7_AVR) || defined(USB_SERIES_6_AVR) || \
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			      defined(USB_SERIES_4_AVR) || defined(USB_SERIES_2_AVR) || \
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				  defined(__DOXYGEN__)))
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** String descriptor index for the device's unique serial number string descriptor within the 
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  This unique serial number is used by the host to associate resources to the device (such as
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number allocations) to a device regardless of the port it is plugged in to on the host. Som
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  a unique serial number internally, and setting the device descriptors serial number string 
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  will cause it to use the internal serial number.
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  On unsupported devices, this will evaluate to \ref NO_DESCRIPTOR and so will force the host
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  number for the device.
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            0xDC
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Length of the device's unique internal serial number, in bits, if present on the selected m
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    80
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Start address of the internal serial number, in the appropriate address space, if present o
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  model.
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0x0E
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#else
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define USE_INTERNAL_SERIAL            NO_DESCRIPTOR
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
GAS LISTING  			page 61


 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_LENGTH_BITS    0
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				#define INTERNAL_SERIAL_START_ADDRESS  0
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Function Prototypes: */
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Sends a Remote Wakeup request to the host. This signals to the host that the device should
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  be taken out of suspended mode, and communications should resume.
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  Typically, this is implemented so that HID devices (mice, keyboards, etc.) can wake up the
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  host computer when the host has suspended all USB devices to enter a low power state.
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention This function should only be used if the device has indicated to the host that it
 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             supports the Remote Wakeup feature in the device descriptors, and should only be
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             issued if the host is currently allowing remote wakeup events from the device (i.
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_Device_RemoteWakeupEnabled flag is set). When the \c NO_DEVICE_REMOT
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             compile time option is used, this function is unavailable.
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             \n\n
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \attention The USB clock must be running for this function to operate. If the stack is initi
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             the \ref USB_OPT_MANUAL_PLL option enabled, the user must ensure that the PLL is 
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *             before attempting to call this function.
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \see \ref Group_StdDescriptors for more information on the RMWAKEUP feature and device descr
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			void USB_Device_SendRemoteWakeup(void);
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			/** Returns the current USB frame number, when in device mode. Every millisecond the USB bus is 
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  the frame number is incremented by one.
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 *  \return Current USB frame number from the USB controller.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESUL
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline uint16_t USB_Device_GetFrameNumber(void)
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return UDFNUM;
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if !defined(NO_SOF_EVENTS)
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Enables the device mode Start Of Frame events. When enabled, this causes the
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event to fire once per millisecond, synchronized to th
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  at the start of each USB frame when enumerated in device mode.
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void) ATTR_ALWAYS_INLINE;
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_EnableSOFEvents(void)
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Enable(USB_INT_SOFI);
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				}
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				/** Disables the device mode Start Of Frame events. When disabled, this stops the firing of the
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \ref EVENT_USB_Device_StartOfFrame() event when enumerated in device mode.
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 *  \note This function is not available when the \c NO_SOF_EVENTS compile time token is define
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				 */
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void) ATTR_ALWAYS_INLINE;
GAS LISTING  			page 62


 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				static inline void USB_Device_DisableSOFEvents(void)
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					USB_INT_Disable(USB_INT_SOFI);
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				}
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	/* Private Interface - For use in library only: */
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 	#if !defined(__DOXYGEN__)
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 		/* Inline Functions: */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if defined(USB_DEVICE_OPT_LOWSPEED)
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void) ATTR_ALWAYS_INLINE;
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetLowSpeed(void)
 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDCON |=  (1 << LSM);
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void) ATTR_ALWAYS_INLINE;
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetFullSpeed(void)
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDCON &= ~(1 << LSM);
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#endif
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_SetDeviceAddress(const uint8_t Address)
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDADDR = (UDADDR & (1 << ADDEN)) | (Address & 0x7F);
 885               	 .loc 3 213 0
 886 0124 8091 E300 	 lds r24,227
 887 0128 8078      	 andi r24,lo8(-128)
 888 012a 812B      	 or r24,r17
 889 012c 8093 E300 	 sts 227,r24
 890               	.LBE212:
 891               	.LBE211:
 892               	.LBB213:
 893               	.LBB214:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 894               	 .loc 2 444 0
 895 0130 8091 E800 	 lds r24,232
 896 0134 877F      	 andi r24,lo8(-9)
 897 0136 8093 E800 	 sts 232,r24
 898               	.LBE214:
 899               	.LBE213:
 133:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 900               	 .loc 1 133 0
 901 013a 0E94 0000 	 call Endpoint_ClearStatusStage
 902               	.LVL24:
 903               	.L23:
 904               	.LBB215:
 905               	.LBB216:
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 906               	 .loc 2 407 0
 907 013e 8091 E800 	 lds r24,232
 908               	.LBE216:
 909               	.LBE215:
 135:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	while (!(Endpoint_IsINReady()));
 910               	 .loc 1 135 0
GAS LISTING  			page 63


 911 0142 80FF      	 sbrs r24,0
 912 0144 00C0      	 rjmp .L23
 913               	.LVL25:
 914               	.LBB217:
 915               	.LBB218:
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address) ATTR_ALWAYS_INLINE;
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_EnableDeviceAddress(const uint8_t Address)
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				(void)Address;
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				UDADDR |= (1 << ADDEN);
 916               	 .loc 3 221 0
 917 0146 8091 E300 	 lds r24,227
 918 014a 8068      	 ori r24,lo8(-128)
 919 014c 8093 E300 	 sts 227,r24
 920               	.LBE218:
 921               	.LBE217:
 139:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_DeviceState = (DeviceAddress) ? DEVICE_STATE_Addressed : DEVICE_STATE_Default;
 922               	 .loc 1 139 0
 923 0150 1123      	 tst r17
 924 0152 01F0      	 breq .L36
 925 0154 83E0      	 ldi r24,lo8(3)
 926 0156 00C0      	 rjmp .L24
 927               	.L36:
 928 0158 82E0      	 ldi r24,lo8(2)
 929               	.L24:
 930 015a 8093 0000 	 sts USB_DeviceState,r24
 931 015e 00C0      	 rjmp .L4
 932               	.LVL26:
 933               	.L9:
 934               	.LBE210:
 935               	.LBE209:
  95:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if ((bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE)) ||
 936               	 .loc 1 95 0
 937 0160 2058      	 subi r18,lo8(-(-128))
 938               	.LVL27:
 939 0162 2230      	 cpi r18,lo8(2)
 940 0164 00F0      	 brlo .+2
 941 0166 00C0      	 rjmp .L4
 942               	.LBB219:
 943               	.LBB220:
 250:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_ControlRequest.wValue == ((DTYPE_String << 8) | USE_INTERNAL_SERIAL))
 944               	 .loc 1 250 0
 945 0168 8091 0000 	 lds r24,USB_ControlRequest+2
 946 016c 9091 0000 	 lds r25,USB_ControlRequest+2+1
 947 0170 8C3D      	 cpi r24,-36
 948 0172 23E0      	 ldi r18,3
 949 0174 9207      	 cpc r25,r18
 950 0176 01F4      	 brne .L25
 951               	.LBB221:
 952               	.LBB222:
 227:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Type = DTYPE_String;
 953               	 .loc 1 227 0
 954 0178 83E0      	 ldi r24,lo8(3)
 955 017a 8A83      	 std Y+2,r24
GAS LISTING  			page 64


 228:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	SignatureDescriptor.Header.Size = USB_STRING_LEN(INTERNAL_SERIAL_LENGTH_BITS / 4);
 956               	 .loc 1 228 0
 957 017c 8AE2      	 ldi r24,lo8(42)
 958 017e 8983      	 std Y+1,r24
 959               	.LVL28:
 960               	.LBB223:
 961               	.LBB224:
 962               	.LBB225:
 963               	.LBB226:
 964               	 .file 4 "LUFA/Drivers/USB/Core/../../../Common/Common.h"
   1:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /*
   2:LUFA/Drivers/USB/Core/../../../Common/Common.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/../../../Common/Common.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
   5:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/../../../Common/Common.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/../../../Common/Common.h **** */
   8:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
   9:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /*
  10:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  12:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  21:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/../../../Common/Common.h ****   this software.
  29:LUFA/Drivers/USB/Core/../../../Common/Common.h **** */
  30:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  31:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \dir
  32:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library header files.
  33:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  34:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  This folder contains header files which are common to all parts of the LUFA library. They may b
  35:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  user applications.
  36:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  37:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  38:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \file
  39:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  40:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  41:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \copydetails Group_Common
  42:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  43:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  44:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_Common Common Utility Headers - LUFA/Drivers/Common/Common.h
  45:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Common library convenience headers, macros and functions.
  46:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  47:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  Common utility headers containing macros, functions, enums and types which are common to all
GAS LISTING  			page 65


  48:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  aspects of the library.
  49:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  50:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  @{
  51:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  52:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  53:LUFA/Drivers/USB/Core/../../../Common/Common.h **** /** \defgroup Group_GlobalInt Global Interrupt Macros
  54:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  \brief Convenience macros for the management of interrupts globally within the device.
  55:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *
  56:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  *  Macros and functions to create and control global interrupts within the device.
  57:LUFA/Drivers/USB/Core/../../../Common/Common.h ****  */
  58:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  59:LUFA/Drivers/USB/Core/../../../Common/Common.h **** #ifndef __LUFA_COMMON_H__
  60:LUFA/Drivers/USB/Core/../../../Common/Common.h **** #define __LUFA_COMMON_H__
  61:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  62:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Macros: */
  63:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#define __INCLUDE_FROM_COMMON_H
  64:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  65:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Includes: */
  66:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdint.h>
  67:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stdbool.h>
  68:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <string.h>
  69:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include <stddef.h>
  70:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  71:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "Architectures.h"
  72:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "BoardTypes.h"
  73:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "ArchitectureSpecific.h"
  74:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "CompilerSpecific.h"
  75:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#include "Attributes.h"
  76:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  77:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(USE_LUFA_CONFIG_HEADER)
  78:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "LUFAConfig.h"
  79:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  80:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  81:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Enable C linkage for C++ Compilers: */
  82:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__cplusplus)
  83:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			extern "C" {
  84:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
  85:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
  86:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Architecture specific utility includes: */
  87:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#if defined(__DOXYGEN__)
  88:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Type define for an unsigned integer the same width as the selected architecture's machine re
  89:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  This is distinct from the non-specific standard int data type, whose width is machine depend
  90:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  which may not reflect the actual machine register width on some targets (e.g. AVR8).
  91:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
  92:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef MACHINE_REG_t uint_reg_t;
  93:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_AVR8)
  94:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
  95:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
  96:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
  97:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
  98:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/boot.h>
  99:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 100:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 101:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 102:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 103:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 104:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
GAS LISTING  			page 66


 105:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 106:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 107:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 108:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 109:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 110:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_UC3)
 111:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr32/io.h>
 112:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 113:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 114:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			// === TODO: Find abstracted way to handle these ===
 115:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define PROGMEM
 116:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define pgm_read_byte(x)         *x
 117:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define memcmp_P(...)            memcmp(__VA_ARGS__)
 118:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define memcpy_P(...)            memcpy(__VA_ARGS__)
 119:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			// =================================================
 120:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 121:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint32_t uint_reg_t;
 122:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 123:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_BIG_ENDIAN
 124:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 125:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 126:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#elif (ARCH == ARCH_XMEGA)
 127:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/io.h>
 128:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/interrupt.h>
 129:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/pgmspace.h>
 130:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <avr/eeprom.h>
 131:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <math.h>
 132:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include <util/delay.h>
 133:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 134:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			typedef uint8_t uint_reg_t;
 135:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 136:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_EEPROM_ADDRESS_SPACE
 137:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_FLASH_ADDRESS_SPACE
 138:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_HAS_MULTI_ADDRESS_SPACE
 139:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#define ARCH_LITTLE_ENDIAN
 140:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 141:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#include "Endianness.h"
 142:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#else
 143:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#error Unknown device architecture specified.
 144:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		#endif
 145:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 146:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 	/* Public Interface - May be used in end-application: */
 147:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		/* Macros: */
 148:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(__DOXYGEN__)
 149:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				// Obsolete, retained for compatibility with user code
 150:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MACROS                  do
 151:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MACROE                  while (0)
 152:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 153:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 154:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the larger of two values.
 155:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 156:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 157:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 158:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 159:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare
 160:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare
 161:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
GAS LISTING  			page 67


 162:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The larger of the two input parameters
 163:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 164:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MAX) || defined(__DOXYGEN__)
 165:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MAX(x, y)               (((x) > (y)) ? (x) : (y))
 166:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 167:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 168:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Convenience macro to determine the smaller of two values.
 169:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 170:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \attention This macro should only be used with operands that do not have side effects from b
 171:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *             multiple times.
 172:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 173:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] x  First value to compare.
 174:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] y  First value to compare.
 175:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 176:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return The smaller of the two input parameters
 177:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 178:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(MIN) || defined(__DOXYGEN__)
 179:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define MIN(x, y)               (((x) < (y)) ? (x) : (y))
 180:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 181:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 182:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(STRINGIFY) || defined(__DOXYGEN__)
 183:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string, via the C Preprocessor. This macro puts literal quo
 184:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  marks around the input, converting the source into a string literal.
 185:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 186:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to convert into a string literal.
 187:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 188:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the input.
 189:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 190:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY(x)            #x
 191:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 192:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Converts the given input into a string after macro expansion, via the C Preprocessor. This 
 193:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  literal quotation marks around the expanded input, converting the source into a string lite
 194:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 195:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  Input to expand and convert into a string literal.
 196:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 197:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return String version of the expanded input.
 198:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 199:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define STRINGIFY_EXPANDED(x)   STRINGIFY(x)
 200:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 201:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 202:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(CONCAT) || defined(__DOXYGEN__)
 203:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Concatenates the given input into a single token, via the C Preprocessor.
 204:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 205:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
 206:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 207:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 208:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return Concatenated version of the input.
 209:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 210:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define CONCAT(x, y)            x ## y
 211:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 212:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** CConcatenates the given input into a single token after macro expansion, via the C Preproce
 213:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 214:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] x  First item to concatenate.
 215:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] y  Second item to concatenate.
 216:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 217:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \return Concatenated version of the expanded input.
 218:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
GAS LISTING  			page 68


 219:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define CONCAT_EXPANDED(x, y)   CONCAT(x, y)
 220:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 221:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 222:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#if !defined(ISR) || defined(__DOXYGEN__)
 223:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				/** Macro for the definition of interrupt service routines, so that the compiler can insert the
 224:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  prologue and epilogue code to properly manage the interrupt routine without affecting the m
 225:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  state with unintentional side-effects.
 226:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 227:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt handlers written using this macro may still need to be registered with the microc
 228:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  Interrupt Controller (if present) before they will properly handle incoming interrupt event
 229:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 230:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \note This macro is only supplied on some architectures, where the standard library does no
 231:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *        definition. If an existing definition exists, the alternative definition here will be
 232:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 233:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \ingroup Group_GlobalInt
 234:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *
 235:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 *  \param[in] Name  Unique name of the interrupt service routine.
 236:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				 */
 237:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#define ISR(Name, ...)          void Name (void) __attribute__((__interrupt__)) __VA_ARGS__; vo
 238:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			#endif
 239:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 240:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 		/* Inline Functions: */
 241:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to reverse the individual bits in a byte - i.e. bit 7 is moved to bit 0, bit 6 to b
 242:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  etc.
 243:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 244:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Byte  Byte of data whose bits are to be reversed.
 245:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 246:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return Input data with the individual bits reversed (mirrored).
 247:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 248:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte) ATTR_WARN_UNUSED_RESULT ATTR_CONST;
 249:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint8_t BitReverse(uint8_t Byte)
 250:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 251:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xF0) >> 4) | ((Byte & 0x0F) << 4));
 252:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xCC) >> 2) | ((Byte & 0x33) << 2));
 253:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				Byte = (((Byte & 0xAA) >> 1) | ((Byte & 0x55) << 1));
 254:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 255:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return Byte;
 256:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 257:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 258:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Function to perform a blocking delay for a specified number of milliseconds. The actual dela
 259:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  at a minimum the specified number of milliseconds, however due to loop overhead and internal
 260:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  may be slightly higher.
 261:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 262:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] Milliseconds  Number of milliseconds to delay
 263:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 264:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds) ATTR_ALWAYS_INLINE;
 265:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void Delay_MS(uint16_t Milliseconds)
 266:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 267:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 268:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 269:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 270:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 271:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 272:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 273:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 274:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 275:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
GAS LISTING  			page 69


 276:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 277:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 278:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				while (Milliseconds--)
 279:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 280:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					__builtin_mtsr(AVR32_COUNT, 0);
 281:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while ((uint32_t)__builtin_mfsr(AVR32_COUNT) < (F_CPU / 1000));
 282:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 283:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 284:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GCC_IS_COMPILE_CONST(Milliseconds))
 285:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 286:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					_delay_ms(Milliseconds);
 287:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 288:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 289:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				{
 290:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					while (Milliseconds--)
 291:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 					  _delay_ms(1);
 292:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				}
 293:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 294:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 295:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 296:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Retrieves a mask which contains the current state of the global interrupts for the device. T
 297:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  value can be stored before altering the global interrupt enable state, before restoring the
 298:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  flag(s) back to their previous values after a critical section using \ref SetGlobalInterrupt
 299:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 300:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 301:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 302:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \return  Mask containing the current Global Interrupt Enable Mask bit(s).
 303:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 304:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT
 305:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline uint_reg_t GetGlobalInterruptMask(void)
 306:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 307:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 965               	 .loc 4 307 0
 308:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 309:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 310:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 966               	 .loc 4 310 0
 967 0180 4FB7      	 in r20,__SREG__
 968               	.LBE226:
 969               	.LBE225:
 970               	.LBB227:
 971               	.LBB228:
 311:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 312:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return __builtin_mfsr(AVR32_SR);
 313:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 314:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				return SREG;
 315:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 316:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 317:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 318:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Sets the global interrupt enable state of the microcontroller to the mask passed into the fu
 319:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  This can be combined with \ref GetGlobalInterruptMask() to save and restore the Global Inter
 320:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  Mask bit(s) of the device after a critical section has completed.
 321:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 322:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 323:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 324:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \param[in] GlobalIntState  Global Interrupt Enable Mask value to use
 325:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
GAS LISTING  			page 70


 326:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState) ATTR_ALWAYS_INLINE;
 327:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void SetGlobalInterruptMask(const uint_reg_t GlobalIntState)
 328:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 329:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 330:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 331:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 332:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 333:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 334:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				if (GlobalIntState & AVR32_SR_GM)
 335:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_ssrf(AVR32_SR_GM_OFFSET);
 336:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				else
 337:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				  __builtin_csrf(AVR32_SR_GM_OFFSET);
 338:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 339:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 340:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 341:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 342:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 343:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 344:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 345:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Enables global interrupt handling for the device, allowing interrupts to be handled.
 346:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 347:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 348:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 349:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void) ATTR_ALWAYS_INLINE;
 350:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptEnable(void)
 351:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 352:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 353:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 354:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 355:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 356:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
 357:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_csrf(AVR32_SR_GM_OFFSET);
 358:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 359:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				sei();
 360:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 361:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 362:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 363:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			}
 364:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 365:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			/** Disabled global interrupt handling for the device, preventing interrupts from being handled.
 366:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *
 367:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 *  \ingroup Group_GlobalInt
 368:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			 */
 369:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void) ATTR_ALWAYS_INLINE;
 370:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			static inline void GlobalInterruptDisable(void)
 371:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 			{
 372:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 972               	 .loc 4 372 0
 373:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 374:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#if (ARCH == ARCH_AVR8)
 375:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 973               	 .loc 4 375 0
 974               	 
 975               	 
 976 0182 F894      	 cli
 977               	 
 376:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_UC3)
GAS LISTING  			page 71


 377:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				__builtin_ssrf(AVR32_SR_GM_OFFSET);
 378:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#elif (ARCH == ARCH_XMEGA)
 379:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				cli();
 380:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				#endif
 381:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 
 382:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 978               	 .loc 4 382 0
 979               	.LVL29:
 980               	 
 981 0184 DE01      	 movw r26,r28
 982 0186 1396      	 adiw r26,3
 983               	.LBE228:
 984               	.LBE227:
 985               	.LBB229:
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline bool USB_Device_IsAddressSet(void)
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return (UDADDR & (1 << ADDEN));
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			}
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			#if (USE_INTERNAL_SERIAL != NO_DESCRIPTOR)
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString) ATTR_NON_NULL_PTR_A
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			static inline void USB_Device_GetSerialString(uint16_t* const UnicodeString)
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 			{
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				uint_reg_t CurrentGlobalInt = GetGlobalInterruptMask();
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				GlobalInterruptDisable();
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNu
 986               	 .loc 3 239 0
 987 0188 20E0      	 ldi r18,0
 988               	.LBE229:
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				uint8_t SigReadAddress = INTERNAL_SERIAL_START_ADDRESS;
 989               	 .loc 3 237 0
 990 018a 3EE0      	 ldi r19,lo8(14)
 991               	.LBB232:
 992               	.LBB230:
 993               	.LBB231:
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				{
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					uint8_t SerialByte = boot_signature_byte_get(SigReadAddress);
 994               	 .loc 3 241 0
 995 018c 51E2      	 ldi r21,lo8(33)
 996               	.LVL30:
 997               	.L30:
 998 018e E32F      	 mov r30,r19
 999 0190 F0E0      	 ldi r31,0
 1000               	 
 1001               	 
 1002 0192 5093 5700 	 sts 87,r21
 1003 0196 E491      	 lpm r30,Z
 1004               	 
 1005               	 
 1006               	.LVL31:
 1007               	 
GAS LISTING  			page 72


 1008               	.LBE231:
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					if (SerialCharNum & 0x01)
 1009               	 .loc 3 243 0
 1010 0198 20FF      	 sbrs r18,0
 1011 019a 00C0      	 rjmp .L26
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					{
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 						SerialByte >>= 4;
 1012               	 .loc 3 245 0
 1013 019c E295      	 swap r30
 1014               	.LVL32:
 1015 019e EF70      	 andi r30,lo8(15)
 1016               	.LVL33:
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 						SigReadAddress++;
 1017               	 .loc 3 246 0
 1018 01a0 3F5F      	 subi r19,lo8(-(1))
 1019               	.LVL34:
 1020               	.L26:
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					}
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					SerialByte &= 0x0F;
 1021               	 .loc 3 249 0
 1022 01a2 EF70      	 andi r30,lo8(15)
 1023               	.LVL35:
 1024 01a4 8E2F      	 mov r24,r30
 1025 01a6 90E0      	 ldi r25,0
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 					UnicodeString[SerialCharNum] = cpu_to_le16((SerialByte >= 10) ?
 1026               	 .loc 3 251 0
 1027 01a8 EA30      	 cpi r30,lo8(10)
 1028 01aa 00F0      	 brlo .L27
 1029 01ac C796      	 adiw r24,55
 1030 01ae 00C0      	 rjmp .L28
 1031               	.LVL36:
 1032               	.L27:
 1033 01b0 C096      	 adiw r24,48
 1034               	.LVL37:
 1035               	.L28:
 1036 01b2 8D93      	 st X+,r24
 1037 01b4 9D93      	 st X+,r25
 1038               	.LBE230:
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				for (uint8_t SerialCharNum = 0; SerialCharNum < (INTERNAL_SERIAL_LENGTH_BITS / 4); SerialCharNu
 1039               	 .loc 3 239 0
 1040 01b6 2F5F      	 subi r18,lo8(-(1))
 1041               	.LVL38:
 1042 01b8 2431      	 cpi r18,lo8(20)
 1043 01ba 01F4      	 brne .L30
 1044               	.LVL39:
 1045               	.LBE232:
 1046               	.LBB233:
 1047               	.LBB234:
 329:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 1048               	 .loc 4 329 0
 332:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				SREG = GlobalIntState;
 1049               	 .loc 4 332 0
 1050 01bc 4FBF      	 out __SREG__,r20
 1051               	.LVL40:
GAS LISTING  			page 73


 342:LUFA/Drivers/USB/Core/../../../Common/Common.h **** 				GCC_MEMORY_BARRIER();
 1052               	 .loc 4 342 0
 1053               	.LBE234:
 1054               	.LBE233:
 1055               	.LBE224:
 1056               	.LBE223:
 1057               	.LBB235:
 1058               	.LBB236:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1059               	 .loc 2 444 0
 1060 01be 8091 E800 	 lds r24,232
 1061 01c2 877F      	 andi r24,lo8(-9)
 1062 01c4 8093 E800 	 sts 232,r24
 1063               	.LBE236:
 1064               	.LBE235:
 234:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_Stream_LE(&SignatureDescriptor, sizeof(SignatureDescriptor));
 1065               	 .loc 1 234 0
 1066 01c8 6AE2      	 ldi r22,lo8(42)
 1067 01ca 70E0      	 ldi r23,0
 1068 01cc CE01      	 movw r24,r28
 1069 01ce 0196      	 adiw r24,1
 1070 01d0 0E94 0000 	 call Endpoint_Write_Control_Stream_LE
 1071               	.LVL41:
 1072 01d4 00C0      	 rjmp .L64
 1073               	.LVL42:
 1074               	.L25:
 1075               	.LBE222:
 1076               	.LBE221:
 257:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((DescriptorSize = CALLBACK_USB_GetDescriptor(USB_ControlRequest.wValue, USB_ControlRequest.wIn
 1077               	 .loc 1 257 0
 1078 01d6 AE01      	 movw r20,r28
 1079 01d8 4F5F      	 subi r20,-1
 1080 01da 5F4F      	 sbci r21,-1
 1081 01dc 6091 0000 	 lds r22,USB_ControlRequest+4
 1082 01e0 0E94 0000 	 call CALLBACK_USB_GetDescriptor
 1083               	.LVL43:
 1084 01e4 0097      	 sbiw r24,0
 1085 01e6 01F4      	 brne .+2
 1086 01e8 00C0      	 rjmp .L4
 1087               	.LBB237:
 1088               	.LBB238:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1089               	 .loc 2 444 0
 1090 01ea 2091 E800 	 lds r18,232
 1091 01ee 277F      	 andi r18,lo8(-9)
 1092 01f0 2093 E800 	 sts 232,r18
 1093               	.LBE238:
 1094               	.LBE237:
 275:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_Control_PStream_LE(DescriptorPointer, DescriptorSize);
 1095               	 .loc 1 275 0
 1096 01f4 BC01      	 movw r22,r24
 1097 01f6 8981      	 ldd r24,Y+1
 1098 01f8 9A81      	 ldd r25,Y+2
 1099               	.LVL44:
 1100 01fa 0E94 0000 	 call Endpoint_Write_Control_PStream_LE
 1101               	.LVL45:
 1102               	.L64:
GAS LISTING  			page 74


 1103               	.LBB239:
 1104               	.LBB240:
 471:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1105               	 .loc 2 471 0
 1106 01fe 8091 E800 	 lds r24,232
 1107 0202 8B77      	 andi r24,lo8(123)
 1108 0204 8093 E800 	 sts 232,r24
 1109 0208 00C0      	 rjmp .L4
 1110               	.LVL46:
 1111               	.L10:
 1112               	.LBE240:
 1113               	.LBE239:
 1114               	.LBE220:
 1115               	.LBE219:
 103:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_DEVICETOHOST | REQTYPE_STANDARD | REQREC_DEVICE))
 1116               	 .loc 1 103 0
 1117 020a 2038      	 cpi r18,lo8(-128)
 1118 020c 01F4      	 brne .L4
 1119               	.LBB241:
 1120               	.LBB242:
 1121               	.LBB243:
 1122               	.LBB244:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1123               	 .loc 2 444 0
 1124 020e 8091 E800 	 lds r24,232
 1125 0212 877F      	 andi r24,lo8(-9)
 1126 0214 8093 E800 	 sts 232,r24
 1127               	.LBE244:
 1128               	.LBE243:
 212:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_Write_8(USB_Device_ConfigurationNumber);
 1129               	 .loc 1 212 0
 1130 0218 8091 0000 	 lds r24,USB_Device_ConfigurationNumber
 1131               	.LVL47:
 1132               	.LBB245:
 1133               	.LBB246:
 554:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEDATX = Data;
 1134               	 .loc 2 554 0
 1135 021c 8093 F100 	 sts 241,r24
 1136               	.LVL48:
 1137               	.L65:
 1138               	.LBE246:
 1139               	.LBE245:
 1140               	.LBB247:
 1141               	.LBB248:
 456:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1142               	 .loc 2 456 0
 1143 0220 8091 E800 	 lds r24,232
 1144 0224 8E77      	 andi r24,lo8(126)
 1145               	.LVL49:
 1146               	.L63:
 1147 0226 8093 E800 	 sts 232,r24
 1148               	.LBE248:
 1149               	.LBE247:
 215:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 1150               	 .loc 1 215 0
 1151 022a 0E94 0000 	 call Endpoint_ClearStatusStage
 1152               	.LVL50:
GAS LISTING  			page 75


 1153 022e 00C0      	 rjmp .L4
 1154               	.LVL51:
 1155               	.L11:
 1156               	.LBE242:
 1157               	.LBE241:
 108:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 				if (bmRequestType == (REQDIR_HOSTTODEVICE | REQTYPE_STANDARD | REQREC_DEVICE))
 1158               	 .loc 1 108 0
 1159 0230 2111      	 cpse r18,__zero_reg__
 1160 0232 00C0      	 rjmp .L4
 1161               	.LBB249:
 1162               	.LBB250:
 145:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if ((uint8_t)USB_ControlRequest.wValue > FIXED_NUM_CONFIGURATIONS)
 1163               	 .loc 1 145 0
 1164 0234 9091 0000 	 lds r25,USB_ControlRequest+2
 1165 0238 9230      	 cpi r25,lo8(2)
 1166 023a 00F4      	 brsh .L4
 1167               	.LBB251:
 1168               	.LBB252:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1169               	 .loc 2 444 0
 1170 023c 8091 E800 	 lds r24,232
 1171 0240 877F      	 andi r24,lo8(-9)
 1172 0242 8093 E800 	 sts 232,r24
 1173               	.LBE252:
 1174               	.LBE251:
 196:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	USB_Device_ConfigurationNumber = (uint8_t)USB_ControlRequest.wValue;
 1175               	 .loc 1 196 0
 1176 0246 9093 0000 	 sts USB_Device_ConfigurationNumber,r25
 198:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	Endpoint_ClearStatusStage();
 1177               	 .loc 1 198 0
 1178 024a 0E94 0000 	 call Endpoint_ClearStatusStage
 1179               	.LVL52:
 200:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (USB_Device_ConfigurationNumber)
 1180               	 .loc 1 200 0
 1181 024e 8091 0000 	 lds r24,USB_Device_ConfigurationNumber
 1182 0252 8111      	 cpse r24,__zero_reg__
 1183 0254 00C0      	 rjmp .L66
 1184               	.LBB253:
 1185               	.LBB254:
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/Device_AVR8.h **** 				return (UDADDR & (1 << ADDEN));
 1186               	 .loc 3 227 0
 1187 0256 8091 E300 	 lds r24,227
 1188               	.LBE254:
 1189               	.LBE253:
 203:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	  USB_DeviceState = (USB_Device_IsAddressSet()) ? DEVICE_STATE_Configured : DEVICE_STATE_Powered;
 1190               	 .loc 1 203 0
 1191 025a 87FF      	 sbrs r24,7
 1192 025c 00C0      	 rjmp .L37
 1193               	.L66:
 1194 025e 84E0      	 ldi r24,lo8(4)
 1195 0260 00C0      	 rjmp .L34
 1196               	.L37:
 1197 0262 81E0      	 ldi r24,lo8(1)
 1198               	.L34:
 1199 0264 8093 0000 	 sts USB_DeviceState,r24
 205:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	EVENT_USB_Device_ConfigurationChanged();
 1200               	 .loc 1 205 0
GAS LISTING  			page 76


 1201 0268 0E94 0000 	 call EVENT_USB_Device_ConfigurationChanged
 1202               	.LVL53:
 1203               	.L4:
 1204               	.LBE250:
 1205               	.LBE249:
 1206               	.LBE175:
 1207               	.LBB255:
 1208               	.LBB256:
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 1209               	 .loc 2 431 0
 1210 026c 8091 E800 	 lds r24,232
 1211               	.LBE256:
 1212               	.LBE255:
 118:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** 	if (Endpoint_IsSETUPReceived())
 1213               	 .loc 1 118 0
 1214 0270 83FF      	 sbrs r24,3
 1215 0272 00C0      	 rjmp .L1
 1216               	.LBB257:
 1217               	.LBB258:
 444:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 1218               	 .loc 2 444 0
 1219 0274 8091 E800 	 lds r24,232
 1220 0278 877F      	 andi r24,lo8(-9)
 1221 027a 8093 E800 	 sts 232,r24
 1222               	.LBE258:
 1223               	.LBE257:
 1224               	.LBB259:
 1225               	.LBB260:
 491:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 1226               	 .loc 2 491 0
 1227 027e 8091 EB00 	 lds r24,235
 1228 0282 8062      	 ori r24,lo8(32)
 1229 0284 8093 EB00 	 sts 235,r24
 1230               	.L1:
 1231               	 
 1232               	.LBE260:
 1233               	.LBE259:
 123:LUFA/Drivers/USB/Core/DeviceStandardReq.c **** }
 1234               	 .loc 1 123 0
 1235 0288 AA96      	 adiw r28,42
 1236 028a 0FB6      	 in __tmp_reg__,__SREG__
 1237 028c F894      	 cli
 1238 028e DEBF      	 out __SP_H__,r29
 1239 0290 0FBE      	 out __SREG__,__tmp_reg__
 1240 0292 CDBF      	 out __SP_L__,r28
 1241 0294 DF91      	 pop r29
 1242 0296 CF91      	 pop r28
 1243 0298 1F91      	 pop r17
 1244 029a 0895      	 ret
 1245               	 .cfi_endproc
 1246               	.LFE80:
 1248               	 .comm USB_Device_RemoteWakeupEnabled,1,1
 1249               	 .comm USB_Device_CurrentlySelfPowered,1,1
 1250               	 .comm USB_Device_ConfigurationNumber,1,1
 1251               	.Letext0:
 1252               	 .file 5 "/usr/lib/avr/include/stdint.h"
 1253               	 .file 6 "LUFA/Drivers/USB/Core/StdDescriptors.h"
GAS LISTING  			page 77


 1254               	 .file 7 "LUFA/Drivers/USB/Core/StdRequestType.h"
 1255               	 .file 8 "LUFA/Drivers/USB/Core/AVR8/../Device.h"
 1256               	 .file 9 "LUFA/Drivers/USB/Core/USBTask.h"
 1257               	 .file 10 "LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
 1258               	 .file 11 "LUFA/Drivers/USB/Core/Events.h"
GAS LISTING  			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 DeviceStandardReq.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:573    .text:0000000000000000 USB_Device_ProcessControlRequest
                            *COM*:0000000000000001 USB_Device_CurrentlySelfPowered
                            *COM*:0000000000000001 USB_Device_RemoteWakeupEnabled
                            *COM*:0000000000000001 USB_Device_ConfigurationNumber
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
USB_ControlRequest
EVENT_USB_Device_ControlRequest
__tablejump2__
Endpoint_ClearStatusStage
USB_DeviceState
Endpoint_Write_Control_Stream_LE
CALLBACK_USB_GetDescriptor
Endpoint_Write_Control_PStream_LE
EVENT_USB_Device_ConfigurationChanged
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "Events.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.e54a1d68c5c37339,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006X\2404#\020\003"
  10      6062 C006 
  10      58A0 3423 
  10      1003 00
  11 000f 00        	 .string ""
  12 0010 E400      	 .string "\344"
  13 0012 0A        	 .ascii "\n"
  14               	 .text
  15               	 .section .gnu.lto_.inline.e54a1d68c5c37339,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b\300\006R\2404'\003\0033\023#X\021\333\002y\260ZF\270\"\204Vf8\213\005\316b\205\263\330\340,v8\213\003a\027"
  16      6062 C006 
  16      52A0 3427 
  16      0303 3313 
  16      2358 11DB 
  17 002f 7C5F 0165 	 .ascii "|_\001e"
  18               	 .text
  19               	 .section .gnu.lto_.pureconst.e54a1d68c5c37339,"",@progbits
  20 0000 789C 6362 	 .string "x\234cb`b\020f\200"
  20      6062 1066 
  20      8000 
  21 000a 4E06 0646 	 .string "N\006\006F\t&\tf\t\026\tV\t6\tv\t\016\t"
  21      0926 0966 
  21      0916 0956 
  21      0936 0976 
  21      090E 0900 
  22 001e 0A33 0105 	 .ascii "\n3\001\005"
  23               	 .text
  24               	 .section .gnu.lto_USB_Event_Stub.e54a1d68c5c37339,"",@progbits
  25 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034"
  25      6062 4007 
  25      9240 1C00 
  26 000c C48A 40CC 	 .string "\304\212@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\315h\375\304\0022\210\225\241\245\241a\202\002\003C\032X:\034H\202\364D02\201h\346\213\f\214)\214\013\031Y\341V\20532\202$@Z\345}B\335\034\365]\2122\313R\213\212\365C\203\235\364\235\363\213R\365]\313R\363J\212\365\222\031"
  26      C8CC C0C8 
  26      34E1 1C03 
  26      4323 0713 
  26      2323 88C1 
  27 0081 8943 2054 	 .ascii "\211C T"
  28               	 .text
  29               	 .section .gnu.lto_.symbol_nodes.e54a1d68c5c37339,"",@progbits
  30 0000 789C 55C7 	 .ascii "x\234U\307\271\021\2000\020\003@\2350O\210\371\273U\306\020\272"
  30      B911 8030 
  30      1003 409D 
  30      304F 88F9 
  30      BB55 C610 
  31 0015 0286 8AA8 	 .ascii "\002\206\212\250\211\304\001\332l\t\242\240\342!\240\274\200"
  31      89C4 01DA 
  31      6C09 A2A0 
  31      E221 A0BC 
GAS LISTING  			page 2


  31      80
  32 0026 745F C15D 	 .ascii "t_\301]Qw>\021\340&\332W5\366E\311>\253\265O\352\354Y\275}\324"
  32      5177 3E11 
  32      E026 DA57 
  32      35F6 45C9 
  32      3EAB B54F 
  33 0040 F03F 3EEB 	 .ascii "\360?>\353$%\231"
  33      2425 99
  34               	 .text
  35               	 .section .gnu.lto_.refs.e54a1d68c5c37339,"",@progbits
  36 0000 789C 25C3 	 .string "x\234%\303\207\t"
  36      8709 00
  37 0007 2000      	 .string " "
  38 0009 04B1 2FB6 	 .string "\004\261/\2665\334\177I\017\f$\212\256>\273rX\016N.n\236J\017\n6"
  38      35DC 7F49 
  38      0F0C 248A 
  38      AE3E BB72 
  38      580E 4E2E 
  39 0024 6A        	 .ascii "j"
  40               	 .text
  41               	 .section .gnu.lto_.decls.e54a1d68c5c37339,"",@progbits
  42 0000 789C AD90 	 .string "x\234\255\220\317k\023Q\020\307g\266\215\270\020\223\026\264\026\212F\204z\250`\256^\254\325$\365\"\025Z\243\207\202a\315\2766K\323M\263\273\211\036\204\276(\202xJC\325 U\022\255`\025\252\370\353\242B\353A\005\251\027\005\321S\016z\357?\240\353\333_&\335]<\355\300\027\346\315\233\231\317\314p\300A\036"
  42      CF6B 1351 
  42      10C7 67B6 
  42      8DB8 1093 
  42      16B4 168A 
  43 0065 7466 4742 	 .string "tfGB"
  43      00
  44 006a E710 5804 	 .string "\347\020X\004`\030\332\30635\231\0362\275dz\315\264\316\364\201i\203\351\013\323w\360Z\263\303G\327\333\261\030\334\245O[\255_\265\203\364\n\375\243\353\330\0077\250a\025:R\024qx\027L\242\210\021\036\266\233N\2307;\001\210x\217\245Z^\272\313\352\305\301\376\n\245=0\004+\254A\225\322\205\035\036^\227\261\035\007\207\321\t\034\200\007&oq\rM\234\321\260\211\261\316\032\021\357#\347\036\272Qm\375~\273:p\225\266\350\272\256\037\265\007\342\214\003\212\270\214C\235\264Khy"
  44      6018 DAC6 
  44      3335 991E 
  44      32BD 647A 
  44      CDB4 CEF4 
  45 0105 7BE1 32DE 	 .ascii "{\3412\336\241\365\221^\250\032\320\006\023\026y\270f\216\260"
  45      A1F5 915E 
  45      A81A D006 
  45      1316 79B8 
  45      668E B0
  46 0118 40C3 FDE0 	 .ascii "@\303\375\340\273\357 ,[\033\261\320\023\344Y\257\032\"\370\232"
  46      BBEF 202C 
  46      5B1B B1D0 
  46      13E4 59AF 
  46      1A22 F89A 
  47 012c 9560 D8A4 	 .ascii "\225`\330\244\235Lu\333p\336\t\315\377\303\\t0Q\273z\025{M\317"
  47      9D4C 75DB 
  47      70DE 09CD 
  47      FFC3 5C74 
  47      3051 BB7A 
  48 0144 1EAA 51A1 	 .ascii "\036\252Q\241;\353\0213\303\256\350q*8\273\342Y\007/\314\267"
  48      3BEB 1133 
  48      C3AE E871 
  48      2A38 BBE2 
  48      5907 2FCC 
  49 0159 9D88 F7EC 	 .ascii "\235\210\367\354\267<S\213\270\342w\333\265\245o\\\275\261\251"
  49      B73C 538B 
  49      B8E2 77DB 
  49      B5A5 6F5C 
GAS LISTING  			page 3


  49      BDB1 A9
  50 016c EB51 E7AE 	 .ascii "\353Q\347\256K\3509\254\210\217Y\255\353\262\355\r\354\234\027"
  50      4BE8 39AC 
  50      888F 59AD 
  50      EBB2 ED0D 
  50      EC9C 17
  51 017f 5BFB 9BCC 	 .ascii "[\373\233\314W\276\314\333n\346\363 \231o|\231u7\363S\220\314"
  51      57BE CCDB 
  51      6EE6 F320 
  51      996F 7C99 
  51      7537 F353 
  52 0195 77BE CC9B 	 .ascii "w\276\314\233n\346\317 \231\037}\231\213n\346u.@\346g_f\315\315"
  52      6EE6 CF20 
  52      991F 7D99 
  52      8B6E E675 
  52      2E40 E667 
  53 01ad 7C14 24F3 	 .ascii "|\024$\363\253/\263\352f\276\017\222\371\303\025\213\235L\217"
  53      AB2F B3EA 
  53      66BE 0F92 
  53      F9C3 158B 
  53      9D4C 8F
  54 01c0 1E8B 2715 	 .ascii "\036\213'\025\251L\0245\236\2368\036O\024\024\022O\225\211\254"
  54      A94C 1435 
  54      9E9E 381E 
  54      4F14 1412 
  54      4F95 89AC 
  55 01d4 A987 B210 	 .ascii "\251\207\262\020a\241\214\371\312Lh\245\363\333N\214\245\367"
  55      61A1 8CF9 
  55      CA4C 68A5 
  55      F3DB 4E8C 
  55      A5F7 
  56 01e6 2520 942D 	 .ascii "% \224-\310\252\366\377\332\034\354I\235I\215\235\316\030\035"
  56      C8AA F6FF 
  56      DA1C EC49 
  56      9D49 8D9D 
  56      CE18 1D
  57 01f9 92A4 2C65 	 .ascii "\222\244,e\tk!(\332\251\251QE\230%!!/\tjtk\177\350\316\346\004"
  57      096B 2128 
  57      DAA9 A951 
  57      4598 2521 
  57      212F 096A 
  58 0214 A5FB 0211 	 .ascii "\245\373\002\021f\372<\325\343D%\332nO\370\2540C\322s\375^XI"
  58      66FA 3CD5 
  58      E344 25DA 
  58      6E4F F8AC 
  58      3043 D273 
  59 022c 9D23 B238 	 .ascii "\235#\2628\350\371H\024\344)i\272\244\b\232T\220\0239A\236&b"
  59      E8F9 4814 
  59      E429 69BA 
  59      A408 9A54 
  59      9013 3941 
  60 0243 CC2F 4B53 	 .ascii "\314/KS\n\371qR,\021U\033\360\374'%\225]A&Y\315\213NX\037\177"
  60      0AF9 7152 
  60      2C11 551B 
  60      F0FC 2725 
  60      955D 4126 
  61 025e 014F 6E6A 	 .ascii "\001Onj@"
GAS LISTING  			page 4


  61      40
  62               	 .text
  63               	 .section .gnu.lto_.symtab.e54a1d68c5c37339,"",@progbits
  64 0000 5553 425F 	 .string "USB_Event_Stub"
  64      4576 656E 
  64      745F 5374 
  64      7562 00
  65 000f 00        	 .string ""
  66 0010 00        	 .string ""
  67 0011 00        	 .string ""
  68 0012 00        	 .string ""
  69 0013 00        	 .string ""
  70 0014 00        	 .string ""
  71 0015 00        	 .string ""
  72 0016 00        	 .string ""
  73 0017 00        	 .string ""
  74 0018 00        	 .string ""
  75 0019 00        	 .string ""
  76 001a A100      	 .string "\241"
  77 001c 00        	 .string ""
  78 001d 00        	 .string ""
  79 001e 4556 454E 	 .string "EVENT_USB_Device_StartOfFrame"
  79      545F 5553 
  79      425F 4465 
  79      7669 6365 
  79      5F53 7461 
  80 003c 00        	 .string ""
  81 003d 0100      	 .string "\001"
  82 003f 00        	 .string ""
  83 0040 00        	 .string ""
  84 0041 00        	 .string ""
  85 0042 00        	 .string ""
  86 0043 00        	 .string ""
  87 0044 00        	 .string ""
  88 0045 00        	 .string ""
  89 0046 00        	 .string ""
  90 0047 A800      	 .string "\250"
  91 0049 00        	 .string ""
  92 004a 00        	 .string ""
  93 004b 4556 454E 	 .string "EVENT_USB_Device_Reset"
  93      545F 5553 
  93      425F 4465 
  93      7669 6365 
  93      5F52 6573 
  94 0062 00        	 .string ""
  95 0063 0100      	 .string "\001"
  96 0065 00        	 .string ""
  97 0066 00        	 .string ""
  98 0067 00        	 .string ""
  99 0068 00        	 .string ""
 100 0069 00        	 .string ""
 101 006a 00        	 .string ""
 102 006b 00        	 .string ""
 103 006c 00        	 .string ""
 104 006d B500      	 .string "\265"
 105 006f 00        	 .string ""
 106 0070 00        	 .string ""
GAS LISTING  			page 5


 107 0071 4556 454E 	 .string "EVENT_USB_Device_WakeUp"
 107      545F 5553 
 107      425F 4465 
 107      7669 6365 
 107      5F57 616B 
 108 0089 00        	 .string ""
 109 008a 0100      	 .string "\001"
 110 008c 00        	 .string ""
 111 008d 00        	 .string ""
 112 008e 00        	 .string ""
 113 008f 00        	 .string ""
 114 0090 00        	 .string ""
 115 0091 00        	 .string ""
 116 0092 00        	 .string ""
 117 0093 00        	 .string ""
 118 0094 BB00      	 .string "\273"
 119 0096 00        	 .string ""
 120 0097 00        	 .string ""
 121 0098 4556 454E 	 .string "EVENT_USB_Device_Suspend"
 121      545F 5553 
 121      425F 4465 
 121      7669 6365 
 121      5F53 7573 
 122 00b1 00        	 .string ""
 123 00b2 0100      	 .string "\001"
 124 00b4 00        	 .string ""
 125 00b5 00        	 .string ""
 126 00b6 00        	 .string ""
 127 00b7 00        	 .string ""
 128 00b8 00        	 .string ""
 129 00b9 00        	 .string ""
 130 00ba 00        	 .string ""
 131 00bb 00        	 .string ""
 132 00bc C100      	 .string "\301"
 133 00be 00        	 .string ""
 134 00bf 00        	 .string ""
 135 00c0 4556 454E 	 .string "EVENT_USB_Device_ConfigurationChanged"
 135      545F 5553 
 135      425F 4465 
 135      7669 6365 
 135      5F43 6F6E 
 136 00e6 00        	 .string ""
 137 00e7 0100      	 .string "\001"
 138 00e9 00        	 .string ""
 139 00ea 00        	 .string ""
 140 00eb 00        	 .string ""
 141 00ec 00        	 .string ""
 142 00ed 00        	 .string ""
 143 00ee 00        	 .string ""
 144 00ef 00        	 .string ""
 145 00f0 00        	 .string ""
 146 00f1 C700      	 .string "\307"
 147 00f3 00        	 .string ""
 148 00f4 00        	 .string ""
 149 00f5 4556 454E 	 .string "EVENT_USB_Device_ControlRequest"
 149      545F 5553 
 149      425F 4465 
GAS LISTING  			page 6


 149      7669 6365 
 149      5F43 6F6E 
 150 0115 00        	 .string ""
 151 0116 0100      	 .string "\001"
 152 0118 00        	 .string ""
 153 0119 00        	 .string ""
 154 011a 00        	 .string ""
 155 011b 00        	 .string ""
 156 011c 00        	 .string ""
 157 011d 00        	 .string ""
 158 011e 00        	 .string ""
 159 011f 00        	 .string ""
 160 0120 CD00      	 .string "\315"
 161 0122 00        	 .string ""
 162 0123 00        	 .string ""
 163 0124 4556 454E 	 .string "EVENT_USB_Device_Disconnect"
 163      545F 5553 
 163      425F 4465 
 163      7669 6365 
 163      5F44 6973 
 164 0140 00        	 .string ""
 165 0141 0100      	 .string "\001"
 166 0143 00        	 .string ""
 167 0144 00        	 .string ""
 168 0145 00        	 .string ""
 169 0146 00        	 .string ""
 170 0147 00        	 .string ""
 171 0148 00        	 .string ""
 172 0149 00        	 .string ""
 173 014a 00        	 .string ""
 174 014b D300      	 .string "\323"
 175 014d 00        	 .string ""
 176 014e 00        	 .string ""
 177 014f 4556 454E 	 .string "EVENT_USB_Device_Connect"
 177      545F 5553 
 177      425F 4465 
 177      7669 6365 
 177      5F43 6F6E 
 178 0168 00        	 .string ""
 179 0169 0100      	 .string "\001"
 180 016b 00        	 .string ""
 181 016c 00        	 .string ""
 182 016d 00        	 .string ""
 183 016e 00        	 .string ""
 184 016f 00        	 .string ""
 185 0170 00        	 .string ""
 186 0171 00        	 .string ""
 187 0172 00        	 .string ""
 188 0173 D900      	 .string "\331"
 189 0175 00        	 .string ""
 190 0176 00        	 .string ""
 191               	 .text
 192               	 .section .gnu.lto_.opts,"",@progbits
 193 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 193      6375 3D61 
 193      746D 6567 
 193      6133 3275 
GAS LISTING  			page 7


 193      3227 2027 
 194               	 .text
 195               	 .cfi_sections .debug_frame
 196               	.global USB_Event_Stub
 198               	USB_Event_Stub:
 199               	.LFB16:
 200               	 .file 1 "LUFA/Drivers/USB/Core/Events.c"
   1:LUFA/Drivers/USB/Core/Events.c **** /*
   2:LUFA/Drivers/USB/Core/Events.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/Events.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/Events.c **** 
   5:LUFA/Drivers/USB/Core/Events.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/Events.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/Events.c **** */
   8:LUFA/Drivers/USB/Core/Events.c **** 
   9:LUFA/Drivers/USB/Core/Events.c **** /*
  10:LUFA/Drivers/USB/Core/Events.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/Events.c **** 
  12:LUFA/Drivers/USB/Core/Events.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/Events.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/Events.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/Events.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/Events.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/Events.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/Events.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/Events.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/Events.c **** 
  21:LUFA/Drivers/USB/Core/Events.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/Events.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/Events.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/Events.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/Events.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/Events.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/Events.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/Events.c ****   this software.
  29:LUFA/Drivers/USB/Core/Events.c **** */
  30:LUFA/Drivers/USB/Core/Events.c **** 
  31:LUFA/Drivers/USB/Core/Events.c **** #define  __INCLUDE_FROM_EVENTS_C
  32:LUFA/Drivers/USB/Core/Events.c **** #define  __INCLUDE_FROM_USB_DRIVER
  33:LUFA/Drivers/USB/Core/Events.c **** #include "Events.h"
  34:LUFA/Drivers/USB/Core/Events.c **** 
  35:LUFA/Drivers/USB/Core/Events.c **** void USB_Event_Stub(void)
  36:LUFA/Drivers/USB/Core/Events.c **** {
 201               	 .loc 1 36 0
 202               	 .cfi_startproc
 203               	 
 204               	 
 205               	 
 206               	.L__stack_usage =0
 207 0000 0895      	 ret
 208               	 .cfi_endproc
 209               	.LFE16:
 211               	 .weak EVENT_USB_Device_Connect
 212               	 .set EVENT_USB_Device_Connect,USB_Event_Stub
 213               	 .weak EVENT_USB_Device_Disconnect
 214               	 .set EVENT_USB_Device_Disconnect,USB_Event_Stub
 215               	 .weak EVENT_USB_Device_ControlRequest
GAS LISTING  			page 8


 216               	 .set EVENT_USB_Device_ControlRequest,USB_Event_Stub
 217               	 .weak EVENT_USB_Device_ConfigurationChanged
 218               	 .set EVENT_USB_Device_ConfigurationChanged,USB_Event_Stub
 219               	 .weak EVENT_USB_Device_Suspend
 220               	 .set EVENT_USB_Device_Suspend,USB_Event_Stub
 221               	 .weak EVENT_USB_Device_WakeUp
 222               	 .set EVENT_USB_Device_WakeUp,USB_Event_Stub
 223               	 .weak EVENT_USB_Device_Reset
 224               	 .set EVENT_USB_Device_Reset,USB_Event_Stub
 225               	 .weak EVENT_USB_Device_StartOfFrame
 226               	 .set EVENT_USB_Device_StartOfFrame,USB_Event_Stub
 227               	.Letext0:
GAS LISTING  			page 9


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Events.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:198    .text:0000000000000000 USB_Event_Stub
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_Connect
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_Disconnect
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_ControlRequest
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_ConfigurationChanged
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_Suspend
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_WakeUp
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_Reset
    {standard input}:198    .text:0000000000000000 EVENT_USB_Device_StartOfFrame
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "HostStandardReq.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.inline.b676b827bd8320f6,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\020\242"
  10      6062 C006 
  10      10A2 00
  11 000b 00        	 .string ""
  12 000c BA00      	 .string "\272"
  13 000e 07        	 .ascii "\007"
  14               	 .text
  15               	 .section .gnu.lto_.pureconst.b676b827bd8320f6,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  16      6062 6064 
  16      8002 00
  17 000b 00        	 .string ""
  18 000c 4600      	 .string "F"
  19 000e 06        	 .ascii "\006"
  20               	 .text
  21               	 .section .gnu.lto_.symbol_nodes.b676b827bd8320f6,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`\002B\030"
  22      6002 4218 
  22      00
  23 0009 00        	 .string ""
  24 000a 00        	 .string ""
  25 000b 5600      	 .string "V"
  26 000d 07        	 .ascii "\007"
  27               	 .text
  28               	 .section .gnu.lto_.refs.b676b827bd8320f6,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  29      6062 6064 
  29      8002 00
  30 000b 00        	 .string ""
  31 000c 4600      	 .string "F"
  32 000e 06        	 .ascii "\006"
  33               	 .text
  34               	 .section .gnu.lto_.decls.b676b827bd8320f6,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`bPa``\370\017\004@\212\201\021\212\355\030\b"
  35      6062 5061 
  35      6060 F80F 
  35      0440 8A81 
  35      118A ED18 
  36 0016 00        	 .string ""
  37 0017 CE1B 0465 	 .ascii "\316\033\004e"
  38               	 .text
  39               	 .section .gnu.lto_.symtab.b676b827bd8320f6,"",@progbits
  40               	 .text
  41               	 .section .gnu.lto_.opts,"",@progbits
  42 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  42      6375 3D61 
  42      746D 6567 
  42      6133 3275 
GAS LISTING  			page 2


  42      3227 2027 
  43               	 .text
  44               	 .cfi_sections .debug_frame
  45               	.Letext0:
GAS LISTING  			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 HostStandardReq.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "USBTask.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.88eb45aea7863ec5,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\0068\2404\023\024\003"
  10      6062 C006 
  10      38A0 3413 
  10      1403 00
  11 000f 015C 00   	 .string "\001\\"
  12 0012 11        	 .ascii "\021"
  13               	 .text
  14               	 .section .gnu.lto_.inline.88eb45aea7863ec5,"",@progbits
  15 0000 789C 6362 	 .string "x\234cb`b\300\006\214\2404PV\224\237\221\201Ii\305\026F\006\266\005\362`\325\214\\`\031\026\036F\260n\024a\006"
  15      6062 C006 
  15      8CA0 3450 
  15      5694 9F91 
  15      8149 69C5 
  16 0029 7A27 0398 	 .ascii "z'\003\230"
  17               	 .text
  18               	 .section .gnu.lto_.pureconst.88eb45aea7863ec5,"",@progbits
  19 0000 789C 6362 	 .string "x\234cb`b`e\200"
  19      6062 6065 
  19      8000 
  20 000a 2606 2926 	 .string "&\006)&\t"
  20      0900 
  21 0010 0106 00   	 .string "\001\006"
  22 0013 40        	 .ascii "@"
  23               	 .text
  24               	 .section .gnu.lto_USB_DeviceTask.88eb45aea7863ec5,"",@progbits
  25 0000 789C 8554 	 .ascii "x\234\205TMHTQ\024>\347\375\314{\352\350\214iY\213BlQ\233f\212"
  25      4D48 5451 
  25      143E E7FD 
  25      CC7B EAE8 
  25      8C69 598B 
  26 001a 16B9 88C0 	 .ascii "\026\271\210\300\262V-*3\245\002\021\337\210c\2266\212\233 \337"
  26      B256 2D2A 
  26      33A5 0211 
  26      DF88 6396 
  26      368A 9B20 
  27 002f 381A 5108 	 .ascii "8\032Q\b&E\220\213\301\244\026B\245\213\b\177\240\301\237j(\223"
  27      2645 908B 
  27      C1A4 1642 
  27      A58B 087F 
  27      A0C1 9F6A 
  28 0045 4282 68A3 	 .ascii "B\202h\243D\364g\"E\024\026M\347\3347o\312\031\321\013s\356\275"
  28      44F4 6722 
  28      4514 164D 
  28      E7DC 376F 
  28      CA19 D10B 
  29 005c E7DC EF7C 	 .ascii "\347\334\357|\347\357\215\004\022$/\203~\207U\200v\3321\rP\352"
  29      E7EF 8D04 
  29      1224 2F83 
GAS LISTING  			page 2


  29      7E87 5580 
  29      76DA 310D 
  30 0072 7C0E 10D4 	 .ascii "|\016\020\324%I\037\331\004f\272<\355\005\323)K\352\305-tSX:"
  30      2549 1FD9 
  30      0466 BA3C 
  30      ED05 D329 
  30      4BEA C52D 
  31 008a 1554 AD47 	 .ascii "\025T\255G\252\344\230^Gjmd\027\251\035\250Yj\ru\353\240#\362"
  31      AAE4 985E 
  31      476A 6D64 
  31      17A9 1DA8 
  31      596A 0D75 
  32 00a2 0110 5A24 	 .ascii "\001\020Z$Y"
  32      59
  33 00a7 511D 9A8E 	 .string "Q\035\232\216-'\221Y\245\002\3501\315\256\231w\341\353J{\277y\321\214\305Z\352\220\302\333\214P\215p\002\353\020u\261I\2704\3368\360MOXm\2734cv\232\177b-\364L\226\300\277\032\364\236\024\231\211\305\356\376n\177\271a\275\002\006\366`\001\244\003\321f\220P\234,2\371\232\305\302E\017z\351\201\233\325\331,\326\220\220s\330\226\313b-\013Z*\264\231fg\276\025W\344\332\205\016\305L$DQ\235]-*`;\2552\222\\\255r\224x\227'a4\3723\234g\340-T\241\026\225n\270\0214\203\356:T\317\301\"\021\320\311\321 \220\354\325\021\367\365\004\306\337\0073\022 6-\341*G\031\246\275\354|h\342\301\347\207{\342\321\333iD.O\364\3104\024\002_\215\002[\213\351\314}Up\013\256\217\270\204s\022Z\347\307\310\231\323\300>A\233A\020V\207\206e[\345$-c\024\227"
  33      2D27 9159 
  33      A502 E831 
  33      CDAE 9977 
  33      E1EB 4A7B 
  34 01a8 8C0E B5F7 	 .string "\214\016\265\367\2067&\221\233?\302\335\202\274O\220K\026yf\022\371\\2yh8\324\033\336f\340\035A\224E\b\2215\212j\264\315q5\342\246\224j\224\241\002\237\362\344r2\213\242\264\316\207~\204\035v\314\356Zt\t\202\301D\032\331\"\023\267\225sB\273\206\f"
  34      8637 2691 
  34      9B3F C2DD 
  34      82BC 4F90 
  34      4B16 7966 
  35 01fe 5168 5DB8 	 .string "Qh]\2709Pc\325\316\300\3334<\274\242 Y*\236\220\316\256\310\257\357\371f(b\376\214\305\264:\324$8\277\332\200\260N\263R\035\215\216tO\215\313)M{tE3\260_\020\332\255\223\031\261R\337\022\305\260f\341\327\227\335)n\037\317j\377\034*V;r\222|~Hm\307\0309;n\340}Q\233\\\202\b*=\336\217\331\211\267[\355\371\314M\352\310kp\261F6\021\344W\035\213(."
  35      3950 63D5 
  35      CEC0 DB34 
  35      3CBC A220 
  35      592A 9E90 
  36 0280 8A18 5C07 	 .ascii "\212\030\\\007|\314\224\247 \264\360u\240?^R\200\304\267\240"
  36      7CCC 94A7 
  36      20B4 F075 
  36      A03F 5E52 
  36      80C4 B7A0 
  37 0294 578B 3BD0 	 .ascii "W\213;\320W\231f\217\272\306]\245\266\350\260|\361\r\034\240"
  37      5799 668F 
  37      BAC6 5DA5 
  37      B6E8 B07C 
  37      F10D 1CA0 
  38 02a8 295B B9FA 	 .ascii ")[\271\372\324];\253o\321\302\344\022=}\306\225\037L\255|-\256"
  38      D45D 3BAB 
  38      6FD1 C2E4 
  38      123D 7DC6 
  38      951F 4CAD 
  39 02bf 2524 3B54 	 .ascii "%$;T]\377\267\316\300!z\264R_\bi\307\257\213?\202\027\020\\h"
  39      5DFF B7CE 
  39      C021 7AB4 
  39      525F 0869 
  39      C7AF 8B3F 
  40 02d8 1D70 DB19 	 .ascii "\035p\333\031\333\223\213l\344o$\377`\351\201\"oq\300\337\354"
  40      DB93 8B6C 
  40      E46F 24FF 
  40      60E9 8122 
  40      6F71 C0DF 
  41 02ed 0B34 7A4B 	 .ascii "\0134zKK\366z\367\325\007||8Z\331x\312S\005\331t\254(\3665\373"
  41      4BF6 7AF7 
  41      D507 7C7C 
GAS LISTING  			page 3


  41      385A D978 
  41      CA53 05D9 
  42 0307 AB7C 254D 	 .ascii "\253|%M\225M>\317\366\235\313C\212\216\035)\364z<\326\276\377"
  42      954D 3ECF 
  42      F69D CB43 
  42      8A8E 1D29 
  42      F47A 3CD6 
  43 031d 8CD1 50EF 	 .ascii "\214\321P\357?\323T\3017O\rh\376\352\246\323\r\236\035\316C\001"
  43      3FD3 54C1 
  43      374F 0D68 
  43      FEEA A6D3 
  43      0D9E 1DCE 
  44 0333 5FB3 6DD4 	 .ascii "_\263m\324\212\f#\340kl\374\013>/{\260"
  44      8A0C 23E0 
  44      6B6C FC0B 
  44      3E2F 7BB0 
  45               	 .text
  46               	 .section .gnu.lto_USB_USBTask.88eb45aea7863ec5,"",@progbits
  47 0000 789C 6362 	 .string "x\234cb`b@\007\222@\\\001\304J@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\355k\275\304\316\f\344\2622\26444LP``H\003K\207\003I\220\236\bF&\020\315|\236\241\371\301\217\240\024\306\205\214\254@\331j\206_\r\035\r\0029\214@\325\020\323r@\364E\206\306\007\277\230`\212  \034(\0014"
  47      6062 4007 
  47      9240 5C01 
  47      C44A 40CC 
  47      C8CC C0C8 
  48 007c E456 059F 	 .string "\344V\005\237P7G}\227\242\314\262\324\242b\375\320`'}\347\374\242T\020#$\2618[/\231\001"
  48      5037 477D 
  48      97A2 CCB2 
  48      D4A2 62FD 
  48      D060 277D 
  49 009e 5603 2BC4 	 .ascii "V\003+\304"
  50               	 .text
  51               	 .section .gnu.lto_.symbol_nodes.88eb45aea7863ec5,"",@progbits
  52 0000 789C 2DC9 	 .ascii "x\234-\311\273\t\200P\020\005\321\331+\213\005Z\201\225\254\030"
  52      BB09 8050 
  52      1005 D1D9 
  52      2B8B 055A 
  52      8195 AC18 
  53 0014 3D8C 6C40 	 .ascii "=\214l@\023\373\021\277\271E\030\213\202o\3029BT\344t\020\320"
  53      13FB 11BF 
  53      B945 188B 
  53      826F C239 
  53      4254 E474 
  54 002a CF10 31A4 	 .ascii "\317\0201\244\3327(\003\355\204\345;&\363\025\363\300\027\364"
  54      DA37 2803 
  54      ED84 E53B 
  54      26F3 15F3 
  54      C017 F4
  55 003d A19D 847E 	 .ascii "\241\235\204~l\032+p\246\356V!h\257\307x\001\353\311\027B"
  55      6C1A 2B70 
  55      A6EE 5621 
  55      68AF C778 
  55      01EB C917 
  56               	 .text
  57               	 .section .gnu.lto_.refs.88eb45aea7863ec5,"",@progbits
  58 0000 789C 6362 	 .string "x\234cb`b`e\200"
  58      6062 6065 
  58      8000 
  59 000a 4610 0200 	 .string "F\020\002"
GAS LISTING  			page 4


  60 000e 00        	 .string ""
  61 000f 9900      	 .string "\231"
  62 0011 0C        	 .ascii "\f"
  63               	 .text
  64               	 .section .gnu.lto_.decls.88eb45aea7863ec5,"",@progbits
  65 0000 789C A556 	 .ascii "x\234\245V[h\034U\030>g6\331l\314\2455\324Z\020M\252\326\207"
  65      5B68 1C55 
  65      183E 6736 
  65      D96C CCA5 
  65      35D4 5A10 
  66 0018 3E64 BD80 	 .ascii ">d\275\200\324\227\232[\255\201\"%\227\276\370\260l\366\034\354"
  66      D497 9A5B 
  66      AD81 2225 
  66      97BE F8B0 
  66      6CF6 1CEC 
  67 002c D075 3699 	 .ascii "\320u6\231\231MZ_r\022\305\206$\264iP\023h\251\233K\253\2551"
  67      994D 5A5F 
  67      7212 C586 
  67      24B4 6950 
  67      1368 A99B 
  68 0044 F4F2 D0AA 	 .ascii "\364\362\320\252\255\f\266(\366\226K\025\211\022\263\n\021\301"
  68      AD0C B628 
  68      F696 4B15 
  68      8912 B30A 
  68      11C1 
  69 0056 0B41 5F84 	 .ascii "\013A_\204R\307\377\234\231\335\331\331\314n\002\036\370\317"
  69      52C7 FF9C 
  69      99DD D9D9 
  69      CC6E 021E 
  69      F8CF 
  70 0068 9CCB FF7F 	 .ascii "\234\313\377\177\377\355\234\363\217\204$4\213\0202\241u>\200"
  70      FFED 9CF3 
  70      8F84 2434 
  70      8B10 32A1 
  70      753E 80
  71 007b 5083 8490 	 .ascii "P\203\204\220\017\346;\221\323"
  71      0FE6 3B91 
  71      D3
  72 0084 F87C 0CE8 	 .string "\370|\f\3504\320\031{\376\021\320y\240\257\220\273q>\200A\030\250\034\250\024h\032\3506\320\024\320\035\240\031 \256s\334\226\361\333rs@\013@\213@\313\266.l\353\312l\334\016)\013C\262\327\307\320\352V\211N2c%yj\351H!;\307\222\246Y\2116\243w\031o=\254\246\203\340\235\017\241W1\301\345\305( \006\245\305B/B\004\217\343\315\366\250\325\227\322\364\004F\333\321\031\220\036bl\254\314C!BO\241S\002\377\035\003\013x\0160\206+3Y\b\236\300R\266\231\211\244quA\032e+\246\271\301R.\241\0270\360N\342\355y\301Og\203\177\260\032<9\224<\376\366\255a<\307\206\006\331?\246Y\204R*\016f\253\2600\316\2721\036Gcl\362nr\371\275\221\002\210c\0173\315\356b\324\307\330\233\214\035c\245\243\220n\257(nC\223\020\251\344_\375\3671c\005B\2407\257"
  72      34D0 197B 
  72      FE11 D079 
  72      A0AF 90BB 
  72      713E 8041 
  73 0185 C11F E36D 	 .string "\301\037\343m\320\343\342\264Q|\027\246\351\201\211y\036.c\267\3316O\206\003kB\030i\210\\\007\340\234\023\003\356\177\302H\276\325<j0\3034_\254@\307x\032\022\340\017\356H\373R\223B\b\300E\221\270\222Yl\201\245B\261t\344\217q\334\313j\b\276\200+`\377\260\344\366cM\\\202/b\237\260\356\022"
  73      D0E3 E2B4 
  73      517C 17A6 
  73      E981 8979 
  73      1E2E 63B7 
  74 01ea 58A2 029B 	 .ascii "X\242\002\233\031#\003\345L\262\326\221GN\355\266\025% \013\306"
  74      1923 03E5 
  74      4CB2 D691 
  74      474E EDB6 
  74      1525 200B 
  75 01ff F181 A390 	 .ascii "\361\201\243\220\311\247\t\236\206\200H\350\204\260\203\213z"
  75      C9A7 099E 
  75      8680 48E8 
  75      84B0 838B 
GAS LISTING  			page 5


  75      7A
  76 0210 05C3 1E5A 	 .ascii "\005\303\036Z\315fp\303\235\030\220F\267\244\300\316\256\007"
  76      CD66 70C3 
  76      9D18 9046 
  76      B7A4 C0CE 
  76      AE07 
  77 0222 0CE7 063B 	 .ascii "\f\347\006;y\023\300\354\323\222\350a\2332N\313\306\224\270\344"
  77      7913 C0EC 
  77      D392 E861 
  77      9B32 4ECB 
  77      C694 B8E4 
  78 0236 C4F4 EFFE 	 .ascii "\304\364\357\376\177\177\262b\372\271P\177Q\312>\033\205Yg\243"
  78      7F7F B262 
  78      FAB9 507F 
  78      51CA 3E1B 
  78      8559 67A3 
  79 024a D07D 360A 	 .ascii "\320}6\n\213\235\201i\372x\336\256d\273\340R\2341\364v\001\362"
  79      8B9D 8169 
  79      FA78 DEAE 
  79      64BB E052 
  79      9C31 F476 
  80 0260 FCFB CF70 	 .ascii "\374\373\317p\331\330`i\312\252k\353A,\310\035\224\0137E\204"
  80      D9D8 6069 
  80      CAAA 6BEB 
  80      412C C81D 
  80      940B 3745 
  81 0275 2DB0 1BEB 	 .ascii "-\260\033\353\001\363{\200y\265\314\243D\360eq\001?\301[\241"
  81      01F3 7B80 
  81      79B5 CCA3 
  81      44F0 6571 
  81      013F C15B 
  82 028a FF4C F457 	 .ascii "\377L\364WE\377\205\350\257C\237n\022\232\227\262\356P\306I\265"
  82      45FF 85E8 
  82      AF43 9F6E 
  82      129A 97B2 
  82      EE50 C649 
  83 029f A0BF 74DF 	 .ascii "\240\277t\337\241\311k\311\345a\347\r\t\240\303\342\r\3511j:"
  83      A1C9 6BC9 
  83      E561 E70D 
  83      09A0 C3E2 
  83      0DE9 316A 
  84 02b4 F23C 21FC 	 .ascii "\362<!\374\265\305\202\2677\037/\301_\013\343o\340@\332uk\234"
  84      B5C5 82B7 
  84      371F 2FC1 
  84      5F0B E36F 
  84      E040 DA75 
  85 02ca 1A89 8BBF 	 .ascii "\032\211\213\277,\341\\\201XC\362\267lwW=\031\267\034w\305\001"
  85      2CE1 5C81 
  85      5843 F2B7 
  85      6C77 573D 
  85      19B7 1C77 
  86 02e0 1675 26E7 	 .ascii "\026u&\347s\307%n\333\017\027_\346cf\332\rw\247\226\272\021*"
  86      73C7 256E 
  86      DB0F 175F 
  86      E663 66DA 
  86      0D77 A796 
  87 02f7 41FD CE6D 	 .ascii "A\375\316m x\nV\2752\317\001\357\340\022\227\t\374\305M\374\337"
GAS LISTING  			page 6


  87      2078 0A56 
  87      BD32 CF01 
  87      EFE0 1297 
  87      09FC C54D 
  88 030d 1737 4B3F 	 .ascii "\0277K?/\035\271\364\317:\372\355\352{o\344\376\004\276\013\227"
  88      2F1D B9F4 
  88      CF3A FAED 
  88      EA7B 6FE4 
  88      FE04 BE0B 
  89 0322 4154 9EBE 	 .ascii "AT\236\276:w\005\236v|\311\260\314~?\317\373\322\271\"x\336\243"
  89      3A77 059E 
  89      767C C9B0 
  89      CC7E 3FCF 
  89      FBD2 B922 
  90 0339 205F F765 	 .ascii " _\367e^v[*\351H\211\202\331\313\372D\301\234\026n\021<\007\025"
  90      5E76 5B2A 
  90      E948 8982 
  90      D9CB FA44 
  90      C19C 166E 
  91 0351 D33B 1F62 	 .ascii "\323;\037b\373\333\325\365\323X1\256\314X\305\371h\242O\262l"
  91      FBDB D5F5 
  91      D358 31AE 
  91      CC58 C5F9 
  91      68A2 4FB2 
  92 0366 91D0 9FAB 	 .ascii "\221\320\237\253\265\023\374\235#\356\251}!\277\366\357=\265"
  92      B513 FC9D 
  92      23EE A97D 
  92      21BF F6EF 
  92      3DB5 
  93 0378 5F9A 1FB1 	 .ascii "_\232\037\261\377`\33676J\353\376\207\371\321\016\231\317J\217"
  93      FF60 DE37 
  93      364A EBFE 
  93      87F9 D10E 
  93      99CF 4A8F 
  94 038c 6584 133F 	 .ascii "e\204\023?\021\302\301\202|N<\211&\330\3200\273\007u\t\003\366"
  94      11C2 C182 
  94      7C4E 3C89 
  94      26D8 D030 
  94      BB07 7509 
  95 03a2 8C78 7F26 	 .ascii "\214x\177&\205\310b\016G,.\224\376[Yb\037\nY\373\177e1\373\177"
  95      85C8 620E 
  95      472C 2E94 
  95      FE5B 5962 
  95      1F0A 59FB 
  96 03bb 25E9 E9F1 	 .ascii "%\351\351\361\247?8\361v\373\313\357c\216\023C\3607\016\030\301"
  96      A73F 38F1 
  96      76FB CBEF 
  96      638E 1343 
  96      F037 0E18 
  97 03d0 BF78 9C98 	 .ascii "\277x\234\230\251\274\356f\345\314z\004\b^\316\237\263_\335\036"
  97      A9BC EE66 
  97      E5CC 7A04 
  97      085E CE9F 
  97      B35F DD1E 
  98 03e4 A0AA 3DAD 	 .ascii "\240\252=\255/\325\006\033T\271\223\252Z\260\265\271.X\037S)"
  98      2FD5 061B 
  98      54B9 93AA 
GAS LISTING  			page 7


  98      5AB0 B5B9 
  98      2E58 1F53 
  99 03f9 1FB4 84B5 	 .ascii "\037\264\204\265\003\325\021T\016\303P\003\355\224#\224\257\370"
  99      03D5 1154 
  99      0EC3 5003 
  99      ED94 2394 
  99      AFF8 
 100 040b 77BF D25A 	 .ascii "w\277\322ZU\217J\370\252\315\364\2547D\355\276\246\035\301\352"
 100      558F 4AF8 
 100      AACD F4AC 
 100      3744 EDBE 
 100      A61D C1EA 
 101 041f EAA0 25DB 	 .ascii "\352\240%\333"
 102 0423 AC87 1512 	 .string "\254\207\025\022VI\023\355\250\336\217\252\034\320\320^5\026\241\232V\037St5\026\205\3758\325\364\307\202qM\rF\345\266`\270S\r\312J$\032'4\250\351DVt\220/\212\303wGH\337\340\340\200\002\235\372\333\303\221\003\224\004\363[\324\254\023[M\313\241v\np\2338\214\275\024z\231\206\tUCzY\333\353\031\\\2016{\022\340\252\237y>\244\373\273\366\205\243q\352\357jT\b=X\324\265\207*\257\351\373+8\224\333\227\302P],\026}\220o4j\215\212\254\313\341\250\374\006%\317\345\267R|w)\244=\006\nC|\006\226Vt\205U%\024W\342\032%!\225j\361\250\376H\232g7\325\353\343\252J\025=\265T\026\216v\205\017i!Y\211\312\n}4\22335n\220U\032\321\345\230\362pz\267\231Fa)5-\252%\0044i[\322\373\215Z\363\256\226\326\275M4B\301v\362\037"
 102      5649 13ED 
 102      A8DE 8FAA 
 102      1CD0 D05E 
 102      3516 A19A 
 103 0524 9DD7 5E   	 .ascii "\235\327^"
 104               	 .text
 105               	 .section .gnu.lto_.symtab.88eb45aea7863ec5,"",@progbits
 106 0000 5553 425F 	 .string "USB_DeviceState"
 106      4465 7669 
 106      6365 5374 
 106      6174 6500 
 107 0010 00        	 .string ""
 108 0011 0400      	 .string "\004"
 109 0013 0100      	 .string "\001"
 110 0015 00        	 .string ""
 111 0016 00        	 .string ""
 112 0017 00        	 .string ""
 113 0018 00        	 .string ""
 114 0019 00        	 .string ""
 115 001a 00        	 .string ""
 116 001b AB00      	 .string "\253"
 117 001d 00        	 .string ""
 118 001e 00        	 .string ""
 119 001f 5553 425F 	 .string "USB_USBTask"
 119      5553 4254 
 119      6173 6B00 
 120 002b 00        	 .string ""
 121 002c 00        	 .string ""
 122 002d 00        	 .string ""
 123 002e 00        	 .string ""
 124 002f 00        	 .string ""
 125 0030 00        	 .string ""
 126 0031 00        	 .string ""
 127 0032 00        	 .string ""
 128 0033 00        	 .string ""
 129 0034 00        	 .string ""
 130 0035 00        	 .string ""
 131 0036 A600      	 .string "\246"
 132 0038 00        	 .string ""
 133 0039 00        	 .string ""
 134 003a 5553 425F 	 .string "USB_ControlRequest"
 134      436F 6E74 
 134      726F 6C52 
GAS LISTING  			page 8


 134      6571 7565 
 134      7374 00
 135 004d 00        	 .string ""
 136 004e 0400      	 .string "\004"
 137 0050 0800      	 .string "\b"
 138 0052 00        	 .string ""
 139 0053 00        	 .string ""
 140 0054 00        	 .string ""
 141 0055 00        	 .string ""
 142 0056 00        	 .string ""
 143 0057 00        	 .string ""
 144 0058 B100      	 .string "\261"
 145 005a 00        	 .string ""
 146 005b 00        	 .string ""
 147 005c 5553 425F 	 .string "USB_IsInitialized"
 147      4973 496E 
 147      6974 6961 
 147      6C69 7A65 
 147      6400 
 148 006e 00        	 .string ""
 149 006f 0400      	 .string "\004"
 150 0071 0100      	 .string "\001"
 151 0073 00        	 .string ""
 152 0074 00        	 .string ""
 153 0075 00        	 .string ""
 154 0076 00        	 .string ""
 155 0077 00        	 .string ""
 156 0078 00        	 .string ""
 157 0079 C700      	 .string "\307"
 158 007b 00        	 .string ""
 159 007c 00        	 .string ""
 160 007d 5553 425F 	 .string "USB_Device_ProcessControlRequest"
 160      4465 7669 
 160      6365 5F50 
 160      726F 6365 
 160      7373 436F 
 161 009e 00        	 .string ""
 162 009f 0200      	 .string "\002"
 163 00a1 00        	 .string ""
 164 00a2 00        	 .string ""
 165 00a3 00        	 .string ""
 166 00a4 00        	 .string ""
 167 00a5 00        	 .string ""
 168 00a6 00        	 .string ""
 169 00a7 00        	 .string ""
 170 00a8 00        	 .string ""
 171 00a9 A900      	 .string "\251"
 172 00ab 00        	 .string ""
 173 00ac 00        	 .string ""
 174               	 .text
 175               	 .section .gnu.lto_.opts,"",@progbits
 176 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 176      6375 3D61 
 176      746D 6567 
 176      6133 3275 
 176      3227 2027 
 177               	 .text
GAS LISTING  			page 9


 178               	 .cfi_sections .debug_frame
 179               	.global USB_USBTask
 181               	USB_USBTask:
 182               	.LFB80:
 183               	 .file 1 "LUFA/Drivers/USB/Core/USBTask.c"
   1:LUFA/Drivers/USB/Core/USBTask.c **** /*
   2:LUFA/Drivers/USB/Core/USBTask.c ****              LUFA Library
   3:LUFA/Drivers/USB/Core/USBTask.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/USBTask.c **** 
   5:LUFA/Drivers/USB/Core/USBTask.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/USBTask.c ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/USBTask.c **** */
   8:LUFA/Drivers/USB/Core/USBTask.c **** 
   9:LUFA/Drivers/USB/Core/USBTask.c **** /*
  10:LUFA/Drivers/USB/Core/USBTask.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/USBTask.c **** 
  12:LUFA/Drivers/USB/Core/USBTask.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/USBTask.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/USBTask.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/USBTask.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/USBTask.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/USBTask.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/USBTask.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/USBTask.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/USBTask.c **** 
  21:LUFA/Drivers/USB/Core/USBTask.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/USBTask.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/USBTask.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/USBTask.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/USBTask.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/USBTask.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/USBTask.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/USB/Core/USBTask.c ****   this software.
  29:LUFA/Drivers/USB/Core/USBTask.c **** */
  30:LUFA/Drivers/USB/Core/USBTask.c **** 
  31:LUFA/Drivers/USB/Core/USBTask.c **** #define  __INCLUDE_FROM_USBTASK_C
  32:LUFA/Drivers/USB/Core/USBTask.c **** #define  __INCLUDE_FROM_USB_DRIVER
  33:LUFA/Drivers/USB/Core/USBTask.c **** #include "USBTask.h"
  34:LUFA/Drivers/USB/Core/USBTask.c **** 
  35:LUFA/Drivers/USB/Core/USBTask.c **** volatile bool        USB_IsInitialized;
  36:LUFA/Drivers/USB/Core/USBTask.c **** USB_Request_Header_t USB_ControlRequest;
  37:LUFA/Drivers/USB/Core/USBTask.c **** 
  38:LUFA/Drivers/USB/Core/USBTask.c **** #if defined(USB_CAN_BE_HOST) && !defined(HOST_STATE_AS_GPIOR)
  39:LUFA/Drivers/USB/Core/USBTask.c **** volatile uint8_t     USB_HostState;
  40:LUFA/Drivers/USB/Core/USBTask.c **** #endif
  41:LUFA/Drivers/USB/Core/USBTask.c **** 
  42:LUFA/Drivers/USB/Core/USBTask.c **** #if defined(USB_CAN_BE_DEVICE) && !defined(DEVICE_STATE_AS_GPIOR)
  43:LUFA/Drivers/USB/Core/USBTask.c **** volatile uint8_t     USB_DeviceState;
  44:LUFA/Drivers/USB/Core/USBTask.c **** #endif
  45:LUFA/Drivers/USB/Core/USBTask.c **** 
  46:LUFA/Drivers/USB/Core/USBTask.c **** void USB_USBTask(void)
  47:LUFA/Drivers/USB/Core/USBTask.c **** {
 184               	 .loc 1 47 0
 185               	 .cfi_startproc
 186 0000 CF93      	 push r28
 187               	.LCFI0:
 188               	 .cfi_def_cfa_offset 3
GAS LISTING  			page 10


 189               	 .cfi_offset 28,-2
 190               	 
 191               	 
 192               	 
 193               	.L__stack_usage =1
 194               	.LBB26:
 195               	.LBB27:
  48:LUFA/Drivers/USB/Core/USBTask.c **** 	#if defined(USB_CAN_BE_BOTH)
  49:LUFA/Drivers/USB/Core/USBTask.c **** 		if (USB_CurrentMode == USB_MODE_Device)
  50:LUFA/Drivers/USB/Core/USBTask.c **** 		  USB_DeviceTask();
  51:LUFA/Drivers/USB/Core/USBTask.c **** 		else if (USB_CurrentMode == USB_MODE_Host)
  52:LUFA/Drivers/USB/Core/USBTask.c **** 		  USB_HostTask();
  53:LUFA/Drivers/USB/Core/USBTask.c **** 	#elif defined(USB_CAN_BE_HOST)
  54:LUFA/Drivers/USB/Core/USBTask.c **** 		USB_HostTask();
  55:LUFA/Drivers/USB/Core/USBTask.c **** 	#elif defined(USB_CAN_BE_DEVICE)
  56:LUFA/Drivers/USB/Core/USBTask.c **** 		USB_DeviceTask();
  57:LUFA/Drivers/USB/Core/USBTask.c **** 	#endif
  58:LUFA/Drivers/USB/Core/USBTask.c **** }
  59:LUFA/Drivers/USB/Core/USBTask.c **** 
  60:LUFA/Drivers/USB/Core/USBTask.c **** #if defined(USB_CAN_BE_DEVICE)
  61:LUFA/Drivers/USB/Core/USBTask.c **** static void USB_DeviceTask(void)
  62:LUFA/Drivers/USB/Core/USBTask.c **** {
  63:LUFA/Drivers/USB/Core/USBTask.c **** 	if (USB_DeviceState == DEVICE_STATE_Unattached)
 196               	 .loc 1 63 0
 197 0002 8091 0000 	 lds r24,USB_DeviceState
 198 0006 8823      	 tst r24
 199 0008 01F0      	 breq .L1
 200               	.LBB28:
 201               	.LBB29:
 202               	 .file 2 "LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
GAS LISTING  			page 11


  28:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
  76:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
GAS LISTING  			page 12


  85:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
 133:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
GAS LISTING  			page 13


 142:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 190:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
GAS LISTING  			page 14


 199:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 247:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 203               	 .loc 2 253 0
 204 000a 8091 E900 	 lds r24,233
GAS LISTING  			page 15


 205 000e 8F70      	 andi r24,lo8(15)
 206               	.LBB30:
 207               	.LBB31:
 240:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 208               	 .loc 2 240 0
 209 0010 9091 EC00 	 lds r25,236
 210 0014 90FF      	 sbrs r25,0
 211 0016 00C0      	 rjmp .L5
 212 0018 90E8      	 ldi r25,lo8(-128)
 213 001a 00C0      	 rjmp .L3
 214               	.L5:
 215 001c 90E0      	 ldi r25,0
 216               	.L3:
 217               	.LBE31:
 218               	.LBE30:
 219               	 .loc 2 253 0
 220 001e C92F      	 mov r28,r25
 221 0020 C82B      	 or r28,r24
 222               	.LVL0:
 223               	.LBE29:
 224               	.LBE28:
 225               	.LBB32:
 226               	.LBB33:
 254:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 227               	 .loc 2 270 0
 228 0022 1092 E900 	 sts 233,__zero_reg__
 229               	.LBE33:
 230               	.LBE32:
 231               	.LBB34:
 232               	.LBB35:
 271:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 16


 282:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
 304:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 17


 339:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
 361:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
GAS LISTING  			page 18


 396:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 407:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 233               	 .loc 2 431 0
 234 0026 8091 E800 	 lds r24,232
 235               	.LBE35:
 236               	.LBE34:
  64:LUFA/Drivers/USB/Core/USBTask.c **** 	  return;
  65:LUFA/Drivers/USB/Core/USBTask.c **** 
  66:LUFA/Drivers/USB/Core/USBTask.c **** 	uint8_t PrevEndpoint = Endpoint_GetCurrentEndpoint();
  67:LUFA/Drivers/USB/Core/USBTask.c **** 
  68:LUFA/Drivers/USB/Core/USBTask.c **** 	Endpoint_SelectEndpoint(ENDPOINT_CONTROLEP);
  69:LUFA/Drivers/USB/Core/USBTask.c **** 
  70:LUFA/Drivers/USB/Core/USBTask.c **** 	if (Endpoint_IsSETUPReceived())
 237               	 .loc 1 70 0
 238 002a 83FD      	 sbrc r24,3
  71:LUFA/Drivers/USB/Core/USBTask.c **** 	  USB_Device_ProcessControlRequest();
 239               	 .loc 1 71 0
 240 002c 0E94 0000 	 call USB_Device_ProcessControlRequest
 241               	.LVL1:
 242               	.L4:
 243               	.LBB36:
 244               	.LBB37:
 270:LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
GAS LISTING  			page 19


 245               	 .loc 2 270 0
 246 0030 CF70      	 andi r28,lo8(15)
 247               	.LVL2:
 248 0032 C093 E900 	 sts 233,r28
 249               	.LVL3:
 250               	.L1:
 251               	 
 252               	.LBE37:
 253               	.LBE36:
 254               	.LBE27:
 255               	.LBE26:
  58:LUFA/Drivers/USB/Core/USBTask.c **** }
 256               	 .loc 1 58 0
 257 0036 CF91      	 pop r28
 258 0038 0895      	 ret
 259               	 .cfi_endproc
 260               	.LFE80:
 262               	 .comm USB_DeviceState,1,1
 263               	 .comm USB_ControlRequest,8,1
 264               	 .comm USB_IsInitialized,1,1
 265               	.Letext0:
 266               	 .file 3 "/usr/lib/avr/include/stdint.h"
 267               	 .file 4 "LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 268               	 .file 5 "LUFA/Drivers/USB/Core/AVR8/../Device.h"
 269               	 .file 6 "LUFA/Drivers/USB/Core/AVR8/../DeviceStandardReq.h"
GAS LISTING  			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 USBTask.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:181    .text:0000000000000000 USB_USBTask
                            *COM*:0000000000000001 USB_DeviceState
                            *COM*:0000000000000008 USB_ControlRequest
                            *COM*:0000000000000001 USB_IsInitialized
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
USB_Device_ProcessControlRequest
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "Serial_AVR8.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.83f2503d4f9f0ed7,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\204\2404\007\003##P\t3#\013#+3\033#'#\003"
  10      6062 C006 
  10      84A0 3407 
  10      0323 2350 
  10      0933 230B 
  11 001d 045E 00   	 .string "\004^"
  12 0020 45        	 .ascii "E"
  13               	 .text
  14               	 .section .gnu.lto_.inline.83f2503d4f9f0ed7,"",@progbits
  15 0000 789C 6362 	 .string "x\234cb`b\300\006>Ci\016 \322gdd`\004\262\231\270:\216\2612\260-\220\007kad\340\342`d`\342{\020\003\027bb\340R\007\t\335;\312\002\027cf\340\275\314\f\024\0249p\307\002.\310\302\300s\002$(\364a\2359\\\220\225\201\367\0223#\020\200L\022\371p\006\252\234\005\310ec\340\343fdfH\217f\314a\004;+\003\316\002\221,|\033r\241\212\027\310\0130\260<`\003ib\340$K\027\003"
  15      6062 C006 
  15      3E43 690E 
  15      20D2 6764 
  15      6460 04B2 
  16 008a A8A3 1F98 	 .ascii "\250\243\037\230"
  17               	 .text
  18               	 .section .gnu.lto_.pureconst.83f2503d4f9f0ed7,"",@progbits
  19 0000 789C 6362 	 .string "x\234cb`b\020d\200"
  19      6062 1064 
  19      8000 
  20 000a 0E06 2946 	 .string "\016\006)F)&)f)\026)V)6)N)"
  20      2926 2966 
  20      2916 2956 
  20      2936 294E 
  20      2900 
  21 001c 09EA 010C 	 .ascii "\t\352\001\f"
  22               	 .text
  23               	 .section .gnu.lto_Serial_putchar.83f2503d4f9f0ed7,"",@progbits
  24 0000 789C 8591 	 .string "x\234\205\221OHTQ\024\306\277\357\276w\247A\022\242e\253h+\314\004A\264\bdB\242\240E$\345@B\f\276\021\035\236 \223\006\255\346\216\316\246\301\305#\024\303\240A\214j'\255\002\335L\177$C\306\020\227\205\f$\264\213\266\021\364<\367]\255\321\205\035x\367\234w\356=\347\373\235{\025\024\216\332e\371~\021\230\024\317\024\250\242M\240\232V\364\\\340)=\363\0210]~\355\004\314I\355\3629\237\264\036DEy\332ge\220\266\033\317a\321\230\307\355\265\337[\254\325\333&2\177\342\nC\212\360Eb\230\270+?L'N\3610\311\262j\266\343\370\331\353\335\372.\265"
  24      4F48 5451 
  24      14C6 BFEF 
  24      BE77 A741 
  24      12A2 65AB 
  25 00b9 8C13 3EA4 	 .ascii "\214\023>\244T\333%\205\200\213\322]L\243fLt\026\266\235\330"
  25      54DB 2585 
  25      808B D25D 
  25      4CA3 664C 
  25      7416 B69D 
  26 00ce 80AC 8296 	 .ascii "\200\254\202\226\247\022\347}\302T\032\260\024Q\324l\314\251"
  26      A712 E77D 
  26      C254 1AB0 
  26      1451 D46C 
  26      CCA9 
  27 00e0 27A6 D68C 	 .ascii "'\246\326\214\343\336\220\236\302\330\377\bJ\334\277\237<=\310"
  27      E3DE 909E 
  27      C2D8 FF08 
  27      4ADC BF9F 
  27      3C3D C8
GAS LISTING  			page 2


  28 00f3 785E 0BEF 	 .ascii "x^\013\357V\3266v\276y\1775]`\3364\256u\200\270\240\371r\346"
  28      56D6 3676 
  28      BE79 7F35 
  28      5D60 DE34 
  28      AE75 80B8 
  29 010b EB69 15F0 	 .ascii "\353i\025\360y\202\031p\211Z\364\022\211a\327\270D\377)\026\252"
  29      7982 1970 
  29      895A F412 
  29      8961 D7B8 
  29      44FF 2916 
  30 0120 B3D5 5321 	 .ascii "\263\325S!}\013\240\327\035\217\336\007haz\365\375\306\316\266"
  30      7D0B A0D7 
  30      1D8F DE07 
  30      6861 7AF5 
  30      FDC6 CEB6 
  31 0134 0EF8 4292 	 .ascii "\016\370B\222%\352\222;\bQ\301:>|\177\373\345sw\300Wn3\331\351"
  31      25EA 923B 
  31      0851 C13A 
  31      3E7C 7FFB 
  31      E573 77C0 
  32 014d B401 C9CB 	 .ascii "\264\001\311\313k1O\337^F\013S?\246W\033g\016\nR\311\2002\324"
  32      6B31 4FDF 
  32      5E46 0B53 
  32      3FA6 571B 
  32      670E 0A52 
  33 0165 7597 3902 	 .ascii "u\2279\002\263\331\t#\247\201-T\177>Z\232\247\033\306n\246\376"
  33      B3D9 0923 
  33      A781 2D54 
  33      7F3E 5A9A 
  33      A71B C66E 
  34 017b 4951 24EC 	 .ascii "IQ$\354X\027n\334\276\232\313\366\225G\037\024\313\367\2637\213"
  34      5817 6EDC 
  34      BE9A CBF6 
  34      9547 1F14 
  34      CBF7 B337 
  35 0190 E5D1 F191 	 .ascii "\345\321\361\221b\271\020fswn]\312f2\316\367K\276\020\336\263"
  35      62B9 1066 
  35      7377 6E5D 
  35      CA66 32CE 
  35      F74B BE10 
  36 01a6 7166 045D 	 .ascii "qf\004]}\205\211\302\225\207\023\305\314\371\236c\313;\313\206"
  36      7D85 89C2 
  36      9587 13C5 
  36      CCF9 9E63 
  36      CB3B CB86 
  37 01ba 903E 28DB 	 .ascii "\220>(\333\003\254\310\243\256"
  37      03AC C8A3 
  37      AE
  38               	 .text
  39               	 .section .gnu.lto_Serial_getchar.83f2503d4f9f0ed7,"",@progbits
  40 0000 789C 8D52 	 .string "x\234\215R;H\003A\020\235\331\273\275\313\257PA+\005{!)l\024\264\020E,\024D\361\003\n\022LD\303\025\022\3016\027M*-\022\261\020\265\361\207]\322)\210ET\024A\024L\027m\264\262\263\262S\2143{\306\277\342\302\315\316\316\275\367\366\315\356\n\020\360ut\322\327J\345 \315h\002\212\324\005@\334%\204\361`\202\355\321VO"
  40      3B48 0341 
  40      109D D9BB 
  40      BDCB AF50 
  40      412B 057B 
  41 006f 6C9F 2664 	 .string "l\237&d\242\221\226\372|%\255t\224\016J\242\341$\006\"'\200\020\023\232.\r\214\r\243\222\317\212\334M\261\230\311'\017M\037\202\205 )\240AA\230\234\2718ss\346\241\240y9\020MB\302\266S\265"
  41      A291 96FA 
GAS LISTING  			page 3


  41      7C25 AD74 
  41      940E 4AA2 
  41      E124 0622 
  42 00b3 634A 6680 	 .string "cJf\200\"\353\017\242\340Y;\207\303\275\343\307\374^\323\033\316Irs;\315"
  42      22EB 0FA2 
  42      E059 3B87 
  42      C3BD E3C7 
  42      FC5E D31B 
  43 00ce 215C 4349 	 .ascii "!\\CILE\215\240\\\201\345\370b\274\314B}\b-\224\247\bj~=\200"
  43      4C45 8DA0 
  43      5C81 E5F8 
  43      62BC CC42 
  43      7D08 2D94 
  44 00e8 7398 B93F 	 .ascii "s\230\271?\"\255%\f\341:U#hD\370\347)$\356n\223\327\302Q\243"
  44      22AD 250C 
  44      E13A 5523 
  44      6844 F8E7 
  44      2924 EE6E 
  45 0101 2A93 3E9D 	 .ascii "*\223>\235\337 Y\245\343\371\325\215\275\261\331\361\241\225"
  45      DF20 59A5 
  45      E3F9 D58D 
  45      BDB1 D9F1 
  45      A195 
  46 0113 578B 67BB 	 .ascii "W\213g\273\342\335\242\322{sj\376\337\351\226\362\344\"\216\343"
  46      E2DD A2D2 
  46      7B73 6AFE 
  46      DFE9 96F2 
  46      E422 8EE3 
  47 0127 F420 BDE0 	 .ascii "\364 \275\340\013\341\266S\375\301\251\016\217\025\312h2\273"
  47      0BE1 B653 
  47      FDC1 A90E 
  47      8F15 CA68 
  47      32BB 
  48 0139 595D 02BA 	 .ascii "Y]\002\272\277\354w\361}\277\331\252\022\330C\370\222\232T}\003"
  48      BFEC 77F1 
  48      7DBF D9AA 
  48      12D8 43F8 
  48      929A 547D 
  49 014e 14C0 CB04 	 .ascii "\024\300\313\004\255X\032\030\323V\3235\004\326\367\323\225\214"
  49      AD58 1A18 
  49      D356 D335 
  49      04D6 F7D3 
  49      958C 
  50 0160 34D4 7D5D 	 .ascii "4\324}]\322\023\341\006U\237\005@&\301\363;Id\256\312#\350\225"
  50      D213 E106 
  50      559F 0540 
  50      26C1 F33B 
  50      4964 AECA 
  51 0177 4F5D 7CD7 	 .ascii "O]|\327\310\034\366_\327\331\327\336\022h\213NL\207\243S\201"
  51      C81C F65F 
  51      D7D9 D7DE 
  51      1268 8B4E 
  51      4C87 A353 
  52 018c EE70 7462 	 .ascii "\356ptbr<\034\rZ\201\226\376\236\206@/\255\203\326\b\347\376"
  52      723C 1C0D 
  52      5A81 96FE 
  52      9E86 402F 
GAS LISTING  			page 4


  52      AD83 D608 
  53 01a2 51A8 FF13 	 .ascii "Q\250\377\023\353\367\177\347\214\303\013.Q\302\343"
  53      EBF7 7FE7 
  53      8CC3 0B2E 
  53      51C2 E3
  54               	 .text
  55               	 .section .gnu.lto_Serial_getchar_Blocking.83f2503d4f9f0ed7,"",@progbits
  56 0000 789C 8D51 	 .string "x\234\215Q=HBQ\024>\347\276?\377\206\226\242\241\241\255!\360\r-\021-B\204CP\024\251P\020\222\206\312\033\302\240\325g\351T\203FCT\020\231\021\021\344.A\177TB(\324\326VS\233DDK\203\235\373\236\317D)\272\360\316=\367\234\363}\347;\3471`\320z|\364\365Q8H7\332"
  56      3D48 4251 
  56      143E E7BE 
  56      3FFF 8696 
  56      A2A1 A1AD 
  57 0062 59A6 0290 	 .string "Y\246\002\220\2641\024LG`\312\372\035\200\356\020S\n\350.\305\214{D&\177\320\333!\355\336R\322%\241l\226\313\210\334\001\204\004\023\024Q\22211\213F\243\002\273x\256\325N?\323W\335.\t4\004\231\f*\334\263q\317\316=\007\031\346\344\206\020\022\244t=\323\013\260`0\370\311\222\006?\345R\212\020@\001\250\223P\206\253\342\315\327cq\270Qm:\027k\347^\200\020\356\243Dx\203 \206\322\016l'7\223\035\032\n3\250\241XB0\356\372.\312\260R\275&\256-\fa\216p1\224\t\003P\202\324\353\313\315\236\313d\243(\007a\363\026\3754\b\255\t\003\304E\342~\023\245\037\344\275Ms\325\225\336\237\263\037\245\306\037j\bV\376/\370\320\220f#\214)\3702\273A\202\217\314h\233\340"
  57      B431 144C 
  57      4760 CAFA 
  57      1D80 EE10 
  57      530A E82E 
  58 0143 C58F 6543 	 .ascii "\305\217eCh\272\220\357\261\n\355-\375*\355\375V\273\254b\007"
  58      68BA 90EF 
  58      B10A ED2D 
  58      FD2A EDFD 
  58      56BB AC62 
  59 0158 D55B 6C32 	 .ascii "\325[l2\037\373\001\222o\357\343\326\226\234<\363\004NN\300j"
  59      1FFB 0192 
  59      6FEF E3D6 
  59      969C 3CF3 
  59      044E 4EC0 
  60 016d D6C1 8458 	 .ascii "\326\301\204X=\311\r\021Z:\313v\362\315!A\371\324\375c\323\243"
  60      3DC9 0D11 
  60      5A3A CB76 
  60      F2CD 2141 
  60      F9D4 FD63 
  61 0183 1E75 241E 	 .ascii "\036u$\036]\016\307\227\324\211p<\272\030\t\307\203\232\352\361"
  61      5D0E C797 
  61      D489 703C 
  61      BA18 09C7 
  61      839A EAF1 
  62 0197 4D0E AA53 	 .ascii "M\016\252S\364\016js\334w\317\303\300\237\265nw;&\002\337\252"
  62      F40E 6A73 
  62      DC77 CFC3 
  62      C09F B56E 
  62      773B 2602 
  63 01ad F4B8 04   	 .ascii "\364\270\004"
  64               	 .text
  65               	 .section .gnu.lto_Serial_SendString_P.83f2503d4f9f0ed7,"",@progbits
  66 0000 789C 8D53 	 .ascii "x\234\215SMh\023A\024~o\36671B\257^\244\264x\252&\026A\275\b"
  66      4D68 1341 
  66      147E 6FF6 
  66      3731 42AF 
  66      5EA4 B478 
  67 001a 568B 78F0 	 .ascii "V\213x\360 \2126\250\020\202Ii\227\025\3126\025\024$\2236\026"
  67      208A 36A8 
  67      1082 4969 
  67      9715 CA36 
  67      1514 2493 
  68 0030 A13D C4FA 	 .ascii "\241=\304\372o-\022\352\337\311*\036\004\253\260\265jS\354\217"
  68      6F2D 12EA 
GAS LISTING  			page 5


  68      DFC9 2A1E 
  68      04AB B0B5 
  68      6A53 EC8F 
  69 0044 BD59 4508 	 .ascii "\275YE\bx\360\"\236\005\301\365\315L\022\323\b\352\302\316\233"
  69      78F0 229E 
  69      05C1 F5CD 
  69      4C12 D308 
  69      EAC2 CE9B 
  70 0058 797F DFF7 	 .ascii "y\177\337\367\346\275a\300\240\361K\320?\246\001\334 \211!@V"
  70      E6BD 61C0 
  70      A0F1 4BD0 
  70      3FA6 01DC 
  70      2089 2140 
  71 006d 5802 C8D9 	 .ascii "X\002\310\331\f\r\265\321\320\022\033\264\230=:\007\300\303z"
  71      0C0D B5D1 
  71      D012 1BB4 
  71      983D 3A07 
  71      C0C3 7A
  72 0080 DE02 1EB1 	 .ascii "\336\002\036\261\225\272CW~3\266\3014e7\245\335D\024z@\3102\315"
  72      95BA 4357 
  72      7E33 B6C1 
  72      3465 37A5 
  72      DD44 147A 
  73 0098 B275 C3C4 	 .ascii "\262u\303\304\354\t\024\200\254\005\212\234\217\225\317\177~"
  73      EC09 1480 
  73      AC05 8A9C 
  73      8F95 CF7F 
  73      7E
  74 00a9 8779 5EE6 	 .ascii "\207y^\346\005\3763\310\242\213\304-\212\320\215p\234\016hK\301"
  74      05FE 33C8 
  74      A28B C42D 
  74      8AD0 8D70 
  74      9C0E 684B 
  75 00be 702D 5915 	 .ascii "p-Y\025\352O\274\271j\360G\374\002\017\202\254\213\032\203\035"
  75      EA4F BCB9 
  75      6AF0 47FC 
  75      020F 82AC 
  75      8B1A 831D 
  76 00d2 BF03 9B54 	 .ascii "\277\003\233T`C\241S\314/\007\301\363\307\371\017\033\"\b}\b"
  76      6043 A153 
  76      CC2F 07C1 
  76      F3C7 F90F 
  76      1B22 087D 
  77 00e7 1AD2 6240 	 .ascii "\032\322b@\n'\261\005L\222E\222\266\260\204\300E=,\026\2123 "
  77      0A27 B105 
  77      4C92 4592 
  77      B6B0 84C0 
  77      453D 2C16 
  78 00fe CF79 A159 	 .ascii "\317y\241Y\231A\200\320\327E\353\252\020\214\204\326\205\032"
  78      9941 80D0 
  78      D745 EBAA 
  78      108C 84D6 
  78      851A 
  79 0110 E42D 2D8E 	 .ascii "\344--\216\026P\305\270\b/\237\275\236\034}1gUb\253I\370\323"
  79      1650 C5B8 
  79      082F 9FBD 
  79      9E1C 7D31 
GAS LISTING  			page 6


  79      6755 62AB 
  80 0127 DBFB 6B09 	 .ascii "\333\373k\t\253\033\177d\241h\210\252\n\005\377\312p+\037\362"
  80      AB1B 7F64 
  80      A168 88AA 
  80      0A05 FFCA 
  80      702B 1FF2 
  81 013b F9F7 20B0 	 .ascii "\371\367 \260\\4\030d\376u\033@\264\357\242A^\322\320\215\262"
  81      5C34 1864 
  81      FE75 1B40 
  81      B4EF A241 
  81      5ED2 D08D 
  82 0150 6807 43E3 	 .ascii "h\007C\343p3w9\327\344\242)\302\254\222\312bU\202\026ahz\226"
  82      7033 7739 
  82      D7E4 A229 
  82      C2AC 92CA 
  82      6255 8216 
  83 0168 18DE 5F97 	 .ascii "\030\336_\227\302{\024\356`\230b\204\207N\274\240\004\257\276"
  83      C27B 14EE 
  83      6098 6284 
  83      874E BCA0 
  83      04AF BE
  84 017b CC7C 5C5E 	 .ascii "\314|\\^\237\302\007\312(-\365\250]\304\207z\215qRS\345T\361"
  84      9FC2 07CA 
  84      282D F5A8 
  84      5DC4 877A 
  84      8D71 5253 
  85 0192 FCFB 1F2B 	 .ascii "\374\373\037+\250\002\032\260\227\352\261\0354%\374\310"
  85      A802 1AB0 
  85      97EA B11D 
  85      3425 FCC8 
  86 01a2 ECDB 858B 	 .string "\354\333\205\213\206\"\357\240\355 \326\312\233\007\246\364\324\t2)\3008\235?Y\332<\f\222B\032P\344\031\37464=\272\245\326\"\321I5 4\031>\212\271\n\324\\\235\373\337\233\224\034\r\231^\022y\210\325\021q\204u\251\252\023\016\303\324w\272pM\275\251\215p\t'\370\365\335\256\342,+\205\265\016\327*\016\241\n\214\304\255\203\231\2220\246\320\r\372m\212\220\032<\251-A\376k\256\275zifCWV\001\035z\t\264\330\372\255'wP\\\232)\306s\005r\345\361\326Zy\225\006\"\231\004\255\266\003G\366u\304:\275\336\323i\257?v0\355\365\366\365\244\275\244\033\3538zhg\3540\235\223nB\354\243'\301\336;\340y{\316d\322v\"\221L\245\274\366\355\333\376\032\035\215\376\231\245\007\354\316d&Y\311\342\245\373\007\334L\304\355;\325\274i\353\346\346c\341\020h\273<`g\341\027\314\216"
  86      8622 EFA0 
  86      ED20 D6CA 
  86      9B07 A6F4 
  86      D409 3229 
  87 02a3 D5        	 .ascii "\325"
  88               	 .text
  89               	 .section .gnu.lto_Serial_SendString.83f2503d4f9f0ed7,"",@progbits
  90 0000 789C 8552 	 .ascii "x\234\205RMhSA\020\236\331}/\273\t\025<{\022{\263\230(\202x\215"
  90      4D68 5341 
  90      109E D97D 
  90      2FBB 0915 
  90      3C7B 127B 
  91 001a 1651 F020 	 .ascii "\026Q\360 \212&\240P\202\211\264\217'\204g\215x1\233\037\213"
  91      8A26 A050 
  91      8289 B48F 
  91      2784 678D 
  91      7831 9B1F 
  92 002f 680A 413C 	 .ascii "h\nA<)X\212b\004\245\352A\204\346`\332Zl\251\251\024OE,\001"
  92      2958 8A62 
  92      04A5 EA41 
  92      84E6 60DA 
  92      5A6C A9A9 
  93 0048 0F5E C4A3 	 .string "\017^\304\243\024\004\237\263o\363b\354\301.\354\316\354\314|3\337\354,\003\006[\327\b\355\237d\276A\022\243\200\254\276\nP\222\fm\243p\024ZA\301d\355=\200\212YU\001j@\032s\3222qs\322f\334\370#\201?\202\250\355\200Pd\\H\313\216`\361\002\352\202\270\007\246\225\272\333Y\374\265\206\325\333\035UW\277\375\"\272H\334\016!\\B8O\027\224\201`\370/\331\027\254\325\361\375\207\2576k\311\031>\200\220G\340H\207\r.r\241\257\2224\210\352#\006Y\234\246b\264l\250*U\337m\n\267\336NLZ\352\245\272\245|\277\350\242\305\340\362veA\373i\245\350\\\327\202\221\340)\344P\025<\215\002\250Ul\303\374\354\342\312\306W\336\255\026\226Uo\246\216\367(\204J\253Q{\306\367jB\365z\25391\250*-\265\351\373\302E\233Aa{>Y|\2046E\241!\027\214\325A\371"
  93      1404 9FB3 
  93      6FF3 62EC 
  93      C12E ECCE 
GAS LISTING  			page 7


  93      ECCC 7C33 
  94 0149 EE97 EE95 	 .string "\356\227\356\225v\272\030\3210\261d\262\210.\250\r\225\346\302\312\306';\213O\b\355`\224 :"
  94      76BA 18D1 
  94      30B1 64B2 
  94      882E A80D 
  94      95E6 C2CA 
  95 0169 8817 2CC1 	 .string "\210\027,\301\273os\237?\356\310\342S\343\f<\375+Eth\306\230FK7\336\206\362\217JsjW\b\2109$\250\310\374\tc\331Bf\265\237\fE\007|\356,4j\317+\302\264\343\240p\020{\r/\0033v\032\253\0236\221\246\373\027\301\227\241,\3018P'*\317\336lL\356\013\323\330T\232\262\330\335l\262\313\237@\255!\023\223\305\307\3645\256A\201>"
  95      BB6F 739F 
  95      3FEE C8E2 
  95      53E3 0C3C 
  95      FD2B 4574 
  96 01df C51B 63F0 	 .ascii "\305\033c\360\b\325\357\245\003\275<\032\315\377>\300:\240\203"
  96      08D5 EFA5 
  96      03BD 3C1A 
  96      CDFF 3EC0 
  96      3AA0 83
  97 01f2 9CD1 21AC 	 .ascii "\234\321!\254\017\257\363\232MD\377\2045(uf\006{I\272\217\205"
  97      0FAF F39A 
  97      4D44 FF84 
  97      3528 7566 
  97      067B 49BA 
  98 0208 E4D2 8339 	 .ascii "\344\322\2039x\362\354\261db\330\033+\344\274+\211S9o,?\232\363"
  98      78F2 ECB1 
  98      6462 D81B 
  98      2BE4 BC2B 
  98      8953 396F 
  99 0220 326E 2279 	 .ascii "2n\"y\356\364\341D<n\344\031\262g\334\021\255\307G!6\234\031"
  99      EEF4 E144 
  99      3C6E E419 
  99      B267 DC11 
  99      ADC7 4721 
 100 0237 CF1C B93E 	 .ascii "\317\034\271>\236\213\357\037\372/\274\037v\021\344\321\253\236"
 100      9E8B EF1F 
 100      FA2F BC1F 
 100      7611 E4D1 
 100      AB9E 
 101 0249 A761 32C4 	 .ascii "\247a2\304\377\0012C\342$"
 101      FF01 3243 
 101      E224 
 102               	 .text
 103               	 .section .gnu.lto_Serial_SendData.83f2503d4f9f0ed7,"",@progbits
 104 0000 789C 7D52 	 .string "x\234}RAh\023Q\020\235\367w\177\376\217\215\342\305\273\264\307B\202x\361\340%R\304\203\007Q\264A\005\r&\241\r{\b\261(\202\320M\023E\250B\016\236\364\240E\020O\212^\"\255\305m\253\265A[\351\315 \225\336<\350\245(\242xX\347\357\317\326\264\202\003\373\377\314\23773ofV\220\240\355r\236\277e~.\363\215$A4W\210jZ a\025\007\256U\\\241o\276!\362w\310\206\"?\245\355{VZ\340\234N\b\307\372U\344W\200y'\320\270p\\-\023\n\343g\021\225|\"\202\3650|\374}\361\376,\260\013T\001\363\252"
 104      4168 1351 
 104      109D F777 
 104      7FFE 8F8D 
 104      E2C5 BBB4 
 105 00b0 2E58 937C 	 .ascii ".X\223|@\031S\033G\222<P\2379R\346`\221\324\360\375\346^\242"
 105      4019 531B 
 105      4792 3C50 
 105      9F39 52E6 
 105      6091 D4F0 
 106 00c8 5264 0EF3 	 .ascii "Rd\016\363\3311\227\340\313\311\301\241\206r\226\251>Y\377v+"
 106      D931 97E0 
 106      CBC9 C1A1 
 106      8672 96A9 
 106      3E59 FF76 
 107 00dd 5DC0 1424 	 .ascii "]\300\024$\225\241\313\300\031x\200\ti\223\260\357\234\236]\334"
GAS LISTING  			page 8


 107      95A1 CBC0 
 107      1978 8009 
 107      6993 B0EF 
 107      9C9E 5DDC 
 108 00f1 3E4D 4C5F 	 .ascii ">ML_{\206\030\234\274Kw\030+\2721NwPm\232\b\006-\246\237\246"
 108      7B86 189C 
 108      BC4B 7718 
 108      2BBA 314E 
 108      7750 6D9A 
 109 010b FC66 33D8 	 .ascii "\374f3\330\270>\340\327\003\377g\030*\017\256\2404\f'\023#5m"
 109      B83E E0D7 
 109      03FF 6718 
 109      2A0F AEA0 
 109      340C 2713 
 110 0122 96EB 91CB 	 .ascii "\226\353\221\313\364\303\367\375\340\327\342\036\017\t.d\263"
 110      F4C3 F7FD 
 110      E0D7 E21E 
 110      0F09 2E64 
 110      B3
 111 0133 7525 0797 	 .ascii "u%\007\227xb\314}~\372\365\313/3\0077\033\265\212\337\272w\244"
 111      7862 CC7D 
 111      7EFA F5CB 
 111      2F33 0737 
 111      1BB5 8ADF 
 112 014a A77B AB04 	 .ascii "\247{\253\004\223\237\236\312\002\036\240\2373\330t%[\265\204"
 112      939F 9ECA 
 112      021E A09F 
 112      33D8 7425 
 112      5BB5 84
 113 015d 68D7 65F4 	 .ascii "h\327e\364q;\265\333\265\335\036\224\341\244\227,E\335-\313\243"
 113      713B B5DB 
 113      B5DD 1E94 
 113      E1A4 972C 
 113      45DD 2DCB 
 114 0172 9A59 E072 	 .ascii "\232Y\340r\247\013x\030\265\237\342\020\003 .BK\364\352\363\334"
 114      A70B 7818 
 114      B59F E210 
 114      0320 2E42 
 114      4BF4 EAF3 
 115 0187 C7F7 3B0B 	 .ascii "\307\367;\013xd\235\221\247W\2069\023\357\0359\366G\223\237o"
 115      7864 9D91 
 115      A757 8639 
 115      13EF 1D39 
 115      F647 939F 
 116 019c 7FF8 BD0A 	 .ascii "\177\370\275\n\033\260\255\364Joi\356?n<Ak\312\341\371\262\203"
 116      1BB0 ADF4 
 116      4A6F 69EE 
 116      3F6E 3C41 
 116      6BCA E1F9 
 117 01b2 F75E 36CC 	 .ascii "\367^6\314c\213a\210H\336Xx\273\266\341\304;R\f2\251\222a\350"
 117      638B 6188 
 117      48DE 5878 
 117      BBB6 E1C4 
 117      3B52 0C32 
 118 01ca 6C5D 2987 	 .ascii "l])\207+\303\273\361\265\266/F[\350_\316\035b\224+\370\320\362"
 118      2BC3 BBF1 
 118      B5B6 2F46 
GAS LISTING  			page 9


 118      5BE8 5FCE 
 118      1D62 942B 
 119 01e1 5DEB 393A 	 .ascii "]\3539:\304\313\226\306V\362E\353\252\241\244\314\337\264J\265"
 119      C4CB 96C6 
 119      56F2 45EB 
 119      AAA1 A4CC 
 119      DFB4 4AB5 
 120 01f5 F5D9 812D 	 .ascii "\365\331\201-[\342~\301.3\333\301\243'\017g3C\325\321K\305\352"
 120      5BE2 7EC1 
 120      2E33 DBC1 
 120      A327 0F67 
 120      3343 D5D1 
 121 020c C5CC B162 	 .ascii "\305\314\261bu\2642R\254\346\275L\366\324\361\003\231\023l\347"
 121      75B4 3252 
 121      ACE6 BD4C 
 121      F6D4 F103 
 121      9913 6CE7 
 122 0220 BD73 464F 	 .ascii "\275sFO_ =\224\037\313\037\2722V\334\377\337\240t\372\337\340"
 122      5F20 3D94 
 122      1FCB 1FBA 
 122      3256 DCFF 
 122      DFA0 74FA 
 123 0236 11FA 0326 	 .ascii "\021\372\003&\352\323\277"
 123      EAD3 BF
 124               	 .text
 125               	 .section .gnu.lto_Serial_CreateStream.83f2503d4f9f0ed7,"",@progbits
 126 0000 789C A552 	 .string "x\234\245R\261J\003A\020\235\331\2753\207\212\344\023\004\313\020\017\304B\013\301\200XY\210\022\r(H\320\013&\\q\234`c\221M\024L\031\2600(\2026\"\"Z\330\244\214(D\tJ,\323\245\263\260\fX\244\211\263\267\321\350il\\\270\233\331\331y\357\355<\226\001\003\377\032\241\357\224\312a\212\250\003\262\374\023@\306`\2147\202 z\265\243\t\020\375\0345U\326\020e\002\bi\3065L/\243Gr\305J\365V\3532_>\256!\366!8\b\034\035\357L\207\035!\362\203"
 126      B14A 0341 
 126      109D D9BD 
 126      3387 8AE4 
 126      1304 CB10 
 127 009a 096F BB48 	 .string "\to\273H\177\311\020C&#\277\207\273\227\233\2752[\303\023RO!_B\033\277]0\206\034\032A\376"
 127      7FC9 1043 
 127      2623 BF87 
 127      BB97 9BBD 
 127      325B C313 
 128 00bd D97A E5B6 	 .string "\331z\345\266G\365\021\365\0264EN\210q[\252)\304#d+\205F\025UO\030.\004\255"
 128      47F5 11F5 
 128      1634 454E 
 128      8871 5BAA 
 128      29C4 2364 
 129 00dc 351C C241 	 .ascii "5\034\302AF\210\240\215\250P\2241\007\245\027RMy\"3\376)\252"
 129      4688 A08D 
 129      A850 9431 
 129      07A5 1752 
 129      4D79 2233 
 130 00f3 FA4A FBBB 	 .ascii "\372J\373\273\003>\376\342\277\370\361O~5\255\346\371B\343\032"
 130      033E FEE2 
 130      BFF8 F14F 
 130      7E35 ADE6 
 130      F942 E31A 
 131 0107 20E7 4CC9 	 .ascii " \347L\311CR~-\274}(+9\241\333\250\321i\307\260Q\270\026\271"
 131      4352 7E2D 
 131      BC7D 282B 
 131      39A1 DBA8 
 131      D169 C7B0 
 132 011f 49AA AABB 	 .ascii "I\252\252\273\026\253m\267Bp.\274\353\351\335\220V;\312J\017"
GAS LISTING  			page 10


 132      16AB 6DB7 
 132      4270 2EBC 
 132      EBE9 DD90 
 132      563B CA4A 
 133 0134 57F0 E676 	 .ascii "W\360\346v\312\007\017t\207\343\227\251D\224Z\023\035\317~\022"
 133      CA07 0F74 
 133      87E3 97A9 
 133      4494 5A13 
 133      1DCF 7E12 
 134 0148 19DD 8998 	 .ascii "\031\335\211\230\217\310H\264K\317\220\251\327\206\024\221Z5"
 134      8FC8 48B4 
 134      4BCF 90A9 
 134      D786 1491 
 134      5A35 
 135 015a 407A 2F0C 	 .ascii "@z/\f\177\361\222\237q\371\324PZ)\341\241\231\350t\304\234r\223"
 135      7FF1 929F 
 135      71F9 D450 
 135      5A29 E1A1 
 135      99E8 74C4 
 136 0171 9B96 BB61 	 .ascii "\233\226\273a\316Zn\322Y\267\334\270mF\026\346\306\314y\332\307"
 136      CE5A 6ED2 
 136      59B7 DCB8 
 136      6D46 16E6 
 136      C6CC 79DA 
 137 0186 ED15 990F 	 .ascii "\355\025\231\017\257\302;\342\037\266\242"
 137      AFC2 3BE2 
 137      1FB6 A2
 138               	 .text
 139               	 .section .gnu.lto_Serial_CreateBlockingStream.83f2503d4f9f0ed7,"",@progbits
 140 0000 789C A552 	 .string "x\234\245R\261J\003A\020\235\331\275K\016\025\311'\b\226!\036\210\205\026\202\001\261\262\020%\032P\220\240\027L\270\3428\301\306\"\233(\2302eP\004mDD\264\260\tX\030Q\210\"J,\255Lg!\251\322\305\"\316\336F\243\321\330\270p7\263\263\363\336\333y,\003\006\355k\220\276\003*\207(\242\016\310r\017"
 140      B14A 0341 
 140      109D D9BD 
 140      4B0E 15C9 
 140      2708 9621 
 141 0066 6983 315E 	 .ascii "i\2031^\013\200\350\322vGA\364p\324TYC\224\t \244\030\3270\265"
 141      0B80 E8D2 
 141      7647 41F4 
 141      70D4 5459 
 141      4394 0920 
 142 007f 801E C929 	 .ascii "\200\036\311)+V\032\215\223Bi\257\212\330\215\340 pt\2743\035"
 142      2B56 1A8D 
 142      9342 69AF 
 142      8AD8 8DE0 
 142      2070 74BC 
 143 0095 3685 C8F5 	 .ascii "6\205\310\365\001\304\275\355\034\375%C\024\231\214\374\006\256"
 143      01C4 BDED 
 143      1CFD 2543 
 143      1499 8CFC 
 143      06AE 
 144 00a7 5F2E CF4B 	 .ascii "_.\317Kl\031\367I=\211|\036m\374v\301(r\250\005\370-d*\317W>"
 144      6C19 F749 
 144      3D89 7C1E 
 144      6DFC 76C1 
 144      2872 A805 
 145 00c2 D547 D4EB 	 .ascii "\325G\324\353P\027Y!Fl\251\246\020\367\220\271\313\327\313\250"
 145      5017 5921 
 145      466C A9A6 
GAS LISTING  			page 11


 145      10F7 90B9 
 145      CBD7 CBA8 
 146 00d6 7A42 702C 	 .ascii "zBp,h\371\251a\007\266\323B\004lD\205\242\2149(\275\220j\312"
 146      68F9 A961 
 146      07B6 D342 
 146      046C 4485 
 146      A28C 3928 
 147 00ee 1399 F14F 	 .ascii "\023\231\361OQ\325W\274\330\352m\343/\374\213\037\377\344W\323"
 147      51D5 57BC 
 147      D8EA 6DE3 
 147      2FFC 8B1F 
 147      FFE4 57D3 
 148 0102 6A9E 2F34 	 .ascii "j\236/4\256\001r\316\244<$\345\327\374\333\207\262\222\023\272"
 148      AE01 72CE 
 148      A43C 24E5 
 148      D7FC DB87 
 148      B292 13BA 
 149 0116 8D1A 9DB6 	 .ascii "\215\032\235\266\f\033\2023\221\035\243\252\272k\241\334t+\b"
 149      0C1B 8233 
 149      911D A3AA 
 149      BA6B A1DC 
 149      742B 08
 150 0129 47C2 BB9E 	 .ascii "G\302\273\236\336\ti5\243\254\370\270\202\3277\222mp\177g8~\231"
 150      DE09 6935 
 150      A3AC F8B8 
 150      82D7 3792 
 150      6D70 7F67 
 151 0140 4A44 A835 	 .ascii "JD\2505\336\362\354'\221\321\231\210\265\021\031\361f\351\021"
 151      DEF2 EC27 
 151      91D1 9988 
 151      B511 19F1 
 151      66E9 11
 152 0153 D295 6ABF 	 .ascii "\322\225j\277\"R\353\t\220\336\013\303_\274\344\207\\>5\224V"
 152      2252 EB09 
 152      90DE 0BC3 
 152      5FBC E487 
 152      5C3E 3594 
 153 0168 4A78 7032 	 .ascii "Jxp22\0216\307\335\304\232\345\256\232S\226\233pV,7f\233\341"
 153      3211 36C7 
 153      DDC4 9AE5 
 153      AE9A 5396 
 153      9B70 562C 
 154 0180 D9E9 6173 	 .ascii "\331\351as\206\3661{Q\346\003K\360\016\342n\267\271"
 154      86F6 317B 
 154      51E6 034B 
 154      F00E E26E 
 154      B7B9 
 155               	 .text
 156               	 .section .gnu.lto_.symbol_nodes.83f2503d4f9f0ed7,"",@progbits
 157 0000 789C 4DCB 	 .ascii "x\234M\313\271\r\200@\020\003@\257a\241\005\376\247Q\234\036"
 157      B90D 8040 
 157      1003 40AF 
 157      61A1 05FE 
 157      A751 9C1E 
 158 0014 09A2 024A 	 .ascii "\t\242\002J\242&\b\016\261\216<\262L\020\033r\330\n8o@\272vc"
 158      A226 080E 
 158      B18E 3CB2 
GAS LISTING  			page 12


 158      4C10 1B72 
 158      D80A 386F 
 159 002c 270B EAC5 	 .ascii "'\013\352\305\240AE\326\221\214\243\312\240I\0364\253\372~\311"
 159      A041 45D6 
 159      918C A3CA 
 159      A049 1E34 
 159      ABFA 7EC9 
 160 0040 7C7D 0BBC 	 .ascii "|}\013\2741\027\270\250\376\027<\371N\"\275"
 160      3117 B8A8 
 160      FE17 3CF9 
 160      4E22 BD
 161               	 .text
 162               	 .section .gnu.lto_.refs.83f2503d4f9f0ed7,"",@progbits
 163 0000 789C 6362 	 .string "x\234cb`bPd\200"
 163      6062 5064 
 163      8000 
 164 000a 7636 4676 	 .string "v6Fv&\016\020fb`bd\342`\347D\34231q0"
 164      260E 1066 
 164      6260 6264 
 164      E260 E744 
 164      E233 3171 
 165 0020 00        	 .string ""
 166 0021 0F88 00   	 .string "\017\210"
 167 0024 AA        	 .ascii "\252"
 168               	 .text
 169               	 .section .gnu.lto_.decls.83f2503d4f9f0ed7,"",@progbits
 170 0000 789C A558 	 .string "x\234\245XylTE\030\237\231=\332\205Z.\201F#x\341\001\246\213!Q\376\342(\004cB\224\200\350\037\230\254K\337+]]\267\260\007\004\375\243\263E\016\t\330\226\303\242\bm9K\214\002\236H\024\327\310\021\205X\344J\n\230.I\375\003\022LI\001\251\204\256\337\314\233\267\357\315\333\367\266\013\274\344\353\316\274\371\216\337w\3147\363J\020A\267\bB\031x^\035\206\320\0330\366!\204&\001a\240V\244=\305@\207\201\216\003\265\003\235\006\352\004\352\002\352\001\352\005\002Qt\007\tA\323\303\344\212\304\353R\240\022\240\363\214\037^\270\200\334\202\317%x\335\360\256\004k\374GeU\334\276\027i2l}\004\374\031\211\r]\272\036\306\367\020\314GY\260 \201\337\323\217|{\036y\346\373"
 170      796C 5445 
 170      189F 993D 
 170      DA85 5A2E 
 170      8146 2378 
 171 00dc A0BD 267F 	 .string "\240\275&\177\256\b}f\277\236"
 171      AE08 7D66 
 171      BF9E 00
 172 00e7 1A63 D279 	 .string "\032c\322y\332\342\333E\213^\026O\237%Nm\302\216Yo\207)^\235\026\235\227,:\273\004V,\3641]OcM_\251\320\257\353\275b\322\333e\322\313\362\372\017P\267Ew\217\300\313j\244\017\350\031\221\313m\302\016\263y"
 172      DAE2 DB45 
 172      8B5E 164F 
 172      9F25 4E6D 
 172      C28E 596F 
 173 0131 E890 D0F9 	 .string "\350\220\320\371%\320\367@?\2119\223\327k\212\315\377E\232\320\035\213\235\336\373\264\323+\354\264\213\371m\007;\003\321jJ\353hK\222>\270\251t(j\244\360\264"
 173      25D0 F740 
 173      3F89 3993 
 173      D76B 8ACD 
 173      FF45 9AD0 
 174 0166 E145 08CD 	 .string "\341E\b\315\303\n.\365\241\205|P\342\343\261#,r\n\336\206\207\242\261h\01706P\332\350\222T\216A;\340}\372\317\266\3462J\335\032/\002\231\035x,\262y\036C`\257.u\256\235l*\223\320\370\320*\206\2066\322\222\262,\230b\035\f\316Z\002\004\360\252\r\373"
 174      C30A 2EF5 
 174      A185 7C50 
 174      E2E3 B123 
 174      2C72 0ADE 
 175 01bf 5CB9 4DE9 	 .string "\\\271M\351\"n\235\255\263g\236\340\245\031\361\340Z\375Um\326\312`\335\n\021\322\273\361@]\025A\023\364\b\330q\213!\312\032+\325'\272\247\035\365\033\334t\337x\005s\304/Z\224I\016J(l\225]\250_\313\224\361X\325\361Xm*\315\023\254\206\364\355\313\365\345<-{\271\3717\261\224\031\016J\212\033\314u\006\246\214/\213A\206\357\023\245"
 175      226E 9DAD 
 175      B367 9EE0 
 175      A519 F1E0 
 175      5AFD 556D 
 176 0230 075C 4E0E 	 .string "\007\\N\016@\231|\263\303\273\234\246\337R\260\233\341y\273\200\330\272\035\265\245>;\005U$T\325\024\240\312\353\034\331\346uk<\020Y\251$G\240\215\274$\223t\312\"n\305\316g\026\265\037\360\b>ri\271\323\352+;i\325\252I\301s\215\235\343Ty\007\314\225\027+\300\245bg\227\366\235\262\356\261\202\035\372\331\352\020\363\241 \007\016\231\035XR\200\003\003\234\035\370JK\357\344\201\300\377~\001\252JlT\365\013\270\325"
 176      4099 7CB3 
 176      C3BB 9CA6 
GAS LISTING  			page 13


 176      DF52 B09B 
 176      E179 BB80 
 177 02b9 3C1A 6DA5 	 .string "<\032m\245\351\356\364\372\337w{\240Fi*\223\231,\222K\320\027X\336:O\242\355\254\027\365\260v\224\355G?r\246\303x\264m`EW\342\222\353R\373/?K]\232y\202\216X\005%\230Y\220O\241\235\254\354\233\317\326y\264\262Gy\244\204\177Gpvb\370\230:\t\205\200\223\320\025k\265d\023t\302\316\301u\364\306\006\315A\255"
 177      E9EE F4FA 
 177      DF77 7BA0 
 177      4669 2A93 
 177      992C 924B 
 178 0327 7EC3 AC03 	 .string "~\303\254\003\034/\f'\375\374\227\2722\224\305\351$%p\236\260\305y=\007\347\005{\234M\033sq\266\337\023N')\201\363d.\316\226tj\343\212qt\031\355\203\363E\336c\223\206\333\224\002\337U\004\365`\254o0\266\344\366\231n\225\n>#oA\373\263\262\305\261\377+x\017\036s\337\007a\207\2619\244\335O\320m\3734l\021i\350\340e]\317o\017\247\035\323\320!\245am\212\247\001B\206\204\224\351Q\360\005\333\300\037<J6\321\356Lf\220\0261\202\266\022[`\237H\300\366q\246\316{\002\326i\005\226\266\005\326\255\003+\264 \024|\016\0249\027\304\337\326\236<u\240>\026\367\001\2558\354\263\251\337\007\256\211\373\300\025\336\260\016\022\353\205\300c\271\020x\344\013\201\307g\f2\031\227]e\374j\233\200\364\372\325\027[\361\031JK8p\202Ns\266.\307\024"
 178      1C2F 0C27 
 178      FDFC 97BA 
 178      3294 C5E9 
 178      2425 709E 
 179 041f 93DE 2A7B 	 .ascii "\223\336*{\2166{\350x\035\363\371~\004\257h\025/z\345\265\025"
 179      8E36 7BE8 
 179      781D F3F9 
 179      7E04 AF68 
 179      152F 7AE5 
 180 0435 CB66 B13E 	 .ascii "\313f\261>+\222\327eM\336U\333\344\365\335E\3624=\327\373=1\t"
 180      2B92 D765 
 180      4DDE 55DB 
 180      E4F5 DD45 
 180      F234 3DD7 
 181 044d BA64 5F9A 	 .ascii "\272d_\232\2156\255\253\247\300\326%\227f\217\325\273\233\266"
 181      8D36 ADAB 
 181      A7C0 D625 
 181      9766 8FD5 
 181      BB9B B6
 182 0460 DE7D 772C 	 .ascii "\336}w,\273g\256\363=s\303\036\330~\033`\275\367\004\254\327"
 182      BB67 AEF3 
 182      3D73 C31E 
 182      D87E 1B60 
 182      BDF7 04AC 
 183 0475 0AEC 3F19 	 .ascii "\n\354?\031\330\343\250\225\2664\300\355\360[\177\222^\202R\356"
 183      D8E3 A895 
 183      B634 C0ED 
 183      F05B 7F92 
 183      5E82 52EE 
 184 0489 CBD4 E221 	 .ascii "\313\324\342!\250\301\370>\221\016jP\320\007\313\246\207\240"
 184      A8C1 F83E 
 184      910E 6A50 
 184      D007 CBA6 
 184      87A0 
 185 049b 4697 EC03 	 .ascii "F\227\354\003c\312\030V\230\205\364I8\333wy\223p\266k\026\264"
 185      63CA 1856 
 185      9885 F449 
 185      38DB 7779 
 185      9370 B66B 
 186 04b1 1B05 414D 	 .ascii "\033\005AMYY\273\217 \246)I\262\232\370f[\226\367\362\255\340"
 186      5959 BB8F 
 186      20A6 2949 
 186      B29A F866 
 186      5B96 F7F2 
 187 04c7 7DBC F9F6 	 .ascii "}\274\371\366s\233\226z\272\202\353\210\317\261\021/#\322-%\325"
 187      739B 967A 
 187      BA82 EB88 
 187      CFB1 112F 
 187      23D2 2D25 
GAS LISTING  			page 14


 188 04dc 9DFE FAC2 	 .ascii "\235\376\372\302\215\036|\212\3225\364V&S\264\252\242\340J]N"
 188      8D1E 7C8A 
 188      D235 F456 
 188      2653 B4AA 
 188      A2E0 4A5D 
 189 04f1 6C2E AB96 	 .ascii "l.\253\226J\375K\n\2468\257\256\352\377=`\345\321\320@\3176j"
 189      4AFD 4B0A 
 189      A638 AFAE 
 189      EAFF 3D60 
 189      E5D1 D040 
 190 0508 E571 9ECB 	 .ascii "\345q\236\313\037\343\345\361\001q\272\373\2347oK\332I\333\270"
 190      1FE3 E5F1 
 190      0171 BAFB 
 190      9C37 6F4B 
 190      DA49 DBB8 
 191 051c ACA8 0F26 	 .ascii "\254\250\017&&\325\307J\222S\270\251\356\324\315?\264\302\255"
 191      26D5 C74A 
 191      9253 B8A9 
 191      EED4 CD3F 
 191      B4C2 AD
 192 052f 6F59 45CC 	 .ascii "oYE\314\376\026\243\225\374{(\231\232\262(\317\347\220\370v\374"
 192      FE16 A395 
 192      FC7B 2899 
 192      9AB2 28CF 
 192      E790 F876 
 193 0544 8814 B303 	 .ascii "\210\024\263\003\314\345\370\361\310\030\220H\2256\326G\330N"
 193      CCE5 F8F1 
 193      C818 9048 
 193      9536 D647 
 193      D84E 
 194 0556 BB08 4FD2 	 .ascii "\273\bO\322\215\r\025kE\220\215\270\022\264\301\235\023T\005"
 194      8D0D 156B 
 194      4590 8DB8 
 194      12B4 C19D 
 194      1354 05
 195 0569 7F68 38CA 	 .ascii "\177h8\312CSGWmHe\355*x\215C@\205\366\365r\234\364\213A\322\271"
 195      4353 4757 
 195      6D48 65ED 
 195      2A78 8D43 
 195      4085 F6F5 
 196 0584 3699 D4C7 	 .ascii "6\231\324\307\304\270\024\260\261\345R\300^\325f\225\025r\252"
 196      C4B8 14B0 
 196      B1E5 52C0 
 196      5ED5 6695 
 196      1572 AA
 197 0597 5CAD 7F8E 	 .ascii "\\\255\177\216\237*M\204\275\337\355\266\236*n\313\251\342\226"
 197      9F2A 4D84 
 197      BDDF EDB6 
 197      9E2A 6ECB 
 197      A9E2 96
 198 05aa 3706 4C29 	 .ascii "7\006L)\273<\031\020\334\354x\301F\261o>#\025\273\026`\202\366"
 198      BB3C 1910 
 198      DCEC 78C1 
 198      46B1 6F3E 
 198      2315 BB16 
 199 05c1 DE4B 483F 	 .ascii "\336KH?\315\037\322\315\266\245w\247~\013|\037\322t&\323\234"
 199      CD1F D2CD 
GAS LISTING  			page 15


 199      B6A5 77A7 
 199      7E0B 7C1F 
 199      D274 26D3 
 200 05d6 1A4C E4CD 	 .ascii "\032L\344\315\326D\234\277\244\232m\n\341H!\250)]\315Q7\021\355"
 200      D644 9CBF 
 200      A49A 6D0A 
 200      E148 21A8 
 200      295D CD51 
 201 05ed 5ABA 95E4 	 .ascii "Z\272\225\344\275\226\266\310\250E\357L%\265\336\311\266\270"
 201      BD96 B6C8 
 201      A845 EF4C 
 201      25B5 DEC9 
 201      B6B8 
 202 05ff 102E 93BF 	 .ascii "\020.\223\277\322\025\274\235\f1\327\216\336\215J\234\233\321"
 202      D215 BC9D 
 202      0C31 D78E 
 202      DE8D 4A9C 
 202      9BD1 
 203 0611 0E53 F994 	 .ascii "\016S\371\224\370\214\001\221\215\267\344\032\317Q\265\363\256"
 203      F88C 0191 
 203      8DB7 E41A 
 203      CF51 B5F3 
 203      AE
 204 0622 8DEF 7230 	 .ascii "\215\357r0\256g\320\322T\367\3461\276\333h\252\026)v\2728I\265"
 204      AE67 D0D2 
 204      54F7 E631 
 204      BEDB 68AA 
 204      1629 76BA 
 205 0639 1952 C81B 	 .ascii "\031R\310\033\bT\205\302\252\367\245W\346>:\r=\342O\304\242\376"
 205      0854 85C2 
 205      AAF7 A557 
 205      E63E 3A0D 
 205      3DE2 4FC4 
 206 064f 7068 BE3F 	 .ascii "ph\276?\2708\352\017E*\303\tE\365\307\342J\250\246\274\032\271"
 206      B838 EA0F 
 206      452A C309 
 206      45F5 C7E2 
 206      4AA8 A6BC 
 207 0665 2BAB 8351 	 .ascii "+\253\203Q\327\374D\225'\021Y\240\306G92G\342\300]\224\200\337"
 207      D7FC 4495 
 207      2711 59A0 
 207      C647 3932 
 207      47E2 C05D 
 208 067c 8981 B8A7 	 .ascii "\211\201\270\247*\034\\\020s\307B\357\251\256\260\032q-L\304"
 208      2A1C 5C10 
 208      73C7 42EF 
 208      A9AE B01A 
 208      712D 4CC4 
 209 0690 5D20 ED49 	 .ascii "] \355I(\301xp\334\314\2713\246\372\247GC\213\325h\314?K\215"
 209      28C1 7870 
 209      DCCC B933 
 209      A6FA A747 
 209      438B D568 
 210 06a8 8616 56AB 	 .ascii "\206\026V\253\321`\330?\365\365\331\023\375s`\036\f\007\330\270"
 210      D160 D83F 
 210      F5F5 D913 
 210      FD73 601E 
GAS LISTING  			page 16


 210      0C07 D8B8 
 211 06bc BC12 958A 	 .ascii "\274\022\225\212)(`@\212\247\203|\305\322\270\352\235\023\217"
 211      2928 6040 
 211      8AA7 837C 
 211      C5D2 B8EA 
 211      9D13 8F
 212 06cf AAC1 77F5 	 .ascii "\252\301w\365e\320\315\226G\312\323@E\270\246\362\235PdAQ\244"
 212      65D0 CD96 
 212      47CA D340 
 212      45B8 A6F2 
 212      9D50 6441 
 213 06e5 2612 4984 	 .ascii "&\022I\204\303\303\304\372\0345\242\200\002X\t\314*\235\021\016"
 213      C3C3 C4FA 
 213      1C35 A280 
 213      0258 09CC 
 213      2A9D 110E 
 214 06f9 C6AA B5D9 	 .ascii "\306\252\265\331\254xtH\016\213/\273V\314\274{\376\205@|\220"
 214      AC78 7448 
 214      0E8B 2FBB 
 214      56CC BC7B 
 214      FE85 407C 
 215 070e 8989 21F2 	 .ascii "\211\211!\362V$\252\252\324\250w\246\032Y\020\257\326\255L\003"
 215      5624 AAAA 
 215      D4A8 77A6 
 215      1A59 10AF 
 215      D6AD 4C03 
 216 0722 8471 5503 	 .ascii "\204qU\003\372\260\364N\307\245\255y\002\201P\315\374!s\347L"
 216      FAB0 F44E 
 216      C7A5 AD79 
 216      0281 50CD 
 216      FC21 73E7 
 217 0737 9DFD 9AC6 	 .ascii "\235\375\232\306\246\275\237\2207N\345\345\271\361\252Ffd,N\017"
 217      A6BD 9F90 
 217      374E E5E5 
 217      B9F1 AA46 
 217      6664 2C4E 
 218 074c 04C3 4B82 	 .ascii "\004\303K\202Kc\201P$\034\212\250\236@EMMx\350\222`4\022HD\022"
 218      4B63 8150 
 218      241C 8AA8 
 218      9E40 454D 
 218      4D78 E892 
 219 0766 3155 0944 	 .ascii "1U\tD\325X\"\034\037*\304^\2161\301\331jPYZ$|\035\236]\232\006"
 219      D558 221C 
 219      1F2A C45E 
 219      8E31 C1D9 
 219      6A50 595A 
 220 0781 219D AD56 	 .ascii "!\235\255V\252\200G\321\005\304\234\231\372\037\220$\241\036"
 220      AA80 47D1 
 220      05C4 9C99 
 220      FA1F 9024 
 220      A11E 
 221               	 .text
 222               	 .section .gnu.lto_.symtab.83f2503d4f9f0ed7,"",@progbits
 223 0000 5365 7269 	 .string "Serial_putchar"
 223      616C 5F70 
 223      7574 6368 
 223      6172 00
GAS LISTING  			page 17


 224 000f 00        	 .string ""
 225 0010 00        	 .string ""
 226 0011 00        	 .string ""
 227 0012 00        	 .string ""
 228 0013 00        	 .string ""
 229 0014 00        	 .string ""
 230 0015 00        	 .string ""
 231 0016 00        	 .string ""
 232 0017 00        	 .string ""
 233 0018 00        	 .string ""
 234 0019 00        	 .string ""
 235 001a C400      	 .string "\304"
 236 001c 00        	 .string ""
 237 001d 00        	 .string ""
 238 001e 5365 7269 	 .string "Serial_getchar"
 238      616C 5F67 
 238      6574 6368 
 238      6172 00
 239 002d 00        	 .string ""
 240 002e 00        	 .string ""
 241 002f 00        	 .string ""
 242 0030 00        	 .string ""
 243 0031 00        	 .string ""
 244 0032 00        	 .string ""
 245 0033 00        	 .string ""
 246 0034 00        	 .string ""
 247 0035 00        	 .string ""
 248 0036 00        	 .string ""
 249 0037 00        	 .string ""
 250 0038 CB00      	 .string "\313"
 251 003a 00        	 .string ""
 252 003b 00        	 .string ""
 253 003c 5365 7269 	 .string "Serial_getchar_Blocking"
 253      616C 5F67 
 253      6574 6368 
 253      6172 5F42 
 253      6C6F 636B 
 254 0054 00        	 .string ""
 255 0055 00        	 .string ""
 256 0056 00        	 .string ""
 257 0057 00        	 .string ""
 258 0058 00        	 .string ""
 259 0059 00        	 .string ""
 260 005a 00        	 .string ""
 261 005b 00        	 .string ""
 262 005c 00        	 .string ""
 263 005d 00        	 .string ""
 264 005e 00        	 .string ""
 265 005f CF00      	 .string "\317"
 266 0061 00        	 .string ""
 267 0062 00        	 .string ""
 268 0063 5365 7269 	 .string "Serial_SendString_P"
 268      616C 5F53 
 268      656E 6453 
 268      7472 696E 
 268      675F 5000 
 269 0077 00        	 .string ""
GAS LISTING  			page 18


 270 0078 00        	 .string ""
 271 0079 00        	 .string ""
 272 007a 00        	 .string ""
 273 007b 00        	 .string ""
 274 007c 00        	 .string ""
 275 007d 00        	 .string ""
 276 007e 00        	 .string ""
 277 007f 00        	 .string ""
 278 0080 00        	 .string ""
 279 0081 00        	 .string ""
 280 0082 D300      	 .string "\323"
 281 0084 00        	 .string ""
 282 0085 00        	 .string ""
 283 0086 5365 7269 	 .string "Serial_SendString"
 283      616C 5F53 
 283      656E 6453 
 283      7472 696E 
 283      6700 
 284 0098 00        	 .string ""
 285 0099 00        	 .string ""
 286 009a 00        	 .string ""
 287 009b 00        	 .string ""
 288 009c 00        	 .string ""
 289 009d 00        	 .string ""
 290 009e 00        	 .string ""
 291 009f 00        	 .string ""
 292 00a0 00        	 .string ""
 293 00a1 00        	 .string ""
 294 00a2 00        	 .string ""
 295 00a3 DF00      	 .string "\337"
 296 00a5 00        	 .string ""
 297 00a6 00        	 .string ""
 298 00a7 5365 7269 	 .string "Serial_SendData"
 298      616C 5F53 
 298      656E 6444 
 298      6174 6100 
 299 00b7 00        	 .string ""
 300 00b8 00        	 .string ""
 301 00b9 00        	 .string ""
 302 00ba 00        	 .string ""
 303 00bb 00        	 .string ""
 304 00bc 00        	 .string ""
 305 00bd 00        	 .string ""
 306 00be 00        	 .string ""
 307 00bf 00        	 .string ""
 308 00c0 00        	 .string ""
 309 00c1 00        	 .string ""
 310 00c2 E400      	 .string "\344"
 311 00c4 00        	 .string ""
 312 00c5 00        	 .string ""
 313 00c6 5365 7269 	 .string "Serial_CreateStream"
 313      616C 5F43 
 313      7265 6174 
 313      6553 7472 
 313      6561 6D00 
 314 00da 00        	 .string ""
 315 00db 00        	 .string ""
GAS LISTING  			page 19


 316 00dc 00        	 .string ""
 317 00dd 00        	 .string ""
 318 00de 00        	 .string ""
 319 00df 00        	 .string ""
 320 00e0 00        	 .string ""
 321 00e1 00        	 .string ""
 322 00e2 00        	 .string ""
 323 00e3 00        	 .string ""
 324 00e4 00        	 .string ""
 325 00e5 F300      	 .string "\363"
 326 00e7 00        	 .string ""
 327 00e8 00        	 .string ""
 328 00e9 5553 4152 	 .string "USARTSerialStream"
 328      5453 6572 
 328      6961 6C53 
 328      7472 6561 
 328      6D00 
 329 00fb 00        	 .string ""
 330 00fc 0400      	 .string "\004"
 331 00fe 0E00      	 .string "\016"
 332 0100 00        	 .string ""
 333 0101 00        	 .string ""
 334 0102 00        	 .string ""
 335 0103 00        	 .string ""
 336 0104 00        	 .string ""
 337 0105 00        	 .string ""
 338 0106 00        	 .string ""
 339 0107 0100      	 .string "\001"
 340 0109 00        	 .string ""
 341 010a 5365 7269 	 .string "Serial_CreateBlockingStream"
 341      616C 5F43 
 341      7265 6174 
 341      6542 6C6F 
 341      636B 696E 
 342 0126 00        	 .string ""
 343 0127 00        	 .string ""
 344 0128 00        	 .string ""
 345 0129 00        	 .string ""
 346 012a 00        	 .string ""
 347 012b 00        	 .string ""
 348 012c 00        	 .string ""
 349 012d 00        	 .string ""
 350 012e 00        	 .string ""
 351 012f 00        	 .string ""
 352 0130 00        	 .string ""
 353 0131 F900      	 .string "\371"
 354 0133 00        	 .string ""
 355 0134 00        	 .string ""
 356 0135 5F5F 696F 	 .string "__iob"
 356      6200 
 357 013b 00        	 .string ""
 358 013c 0200      	 .string "\002"
 359 013e 00        	 .string ""
 360 013f 00        	 .string ""
 361 0140 00        	 .string ""
 362 0141 00        	 .string ""
 363 0142 00        	 .string ""
GAS LISTING  			page 20


 364 0143 00        	 .string ""
 365 0144 00        	 .string ""
 366 0145 00        	 .string ""
 367 0146 FD00      	 .string "\375"
 368 0148 00        	 .string ""
 369 0149 00        	 .string ""
 370               	 .text
 371               	 .section .gnu.lto_.opts,"",@progbits
 372 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 372      6375 3D61 
 372      746D 6567 
 372      6133 3275 
 372      3227 2027 
 373               	 .text
 374               	 .cfi_sections .debug_frame
 375               	.global Serial_putchar
 377               	Serial_putchar:
 378               	.LFB24:
 379               	 .file 1 "LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c"
   1:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** /*
   2:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****              LUFA Library
   3:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
   5:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****            www.lufa-lib.org
   7:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** */
   8:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
   9:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** /*
  10:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  12:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   software without specific, written prior permission.
  20:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  21:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****   this software.
  29:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** */
  30:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  31:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** #include "../../../Common/Common.h"
  32:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** #if (ARCH == ARCH_AVR8)
  33:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  34:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** #define  __INCLUDE_FROM_SERIAL_C
  35:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** #include "../Serial.h"
  36:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  37:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** FILE USARTSerialStream;
  38:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
GAS LISTING  			page 21


  39:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** int Serial_putchar(char DataByte,
  40:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****                    FILE *Stream)
  41:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 380               	 .loc 1 41 0
 381               	 .cfi_startproc
 382               	 
 383               	 
 384               	 
 385               	.L__stack_usage =0
 386               	.LVL0:
 387               	.L3:
 388               	.LBB35:
 389               	.LBB36:
 390               	.LBB37:
 391               	.LBB38:
 392               	 .file 2 "LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h"
   1:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** /*
   2:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****              LUFA Library
   3:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
   5:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****            www.lufa-lib.org
   7:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** */
   8:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
   9:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** /*
  10:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  12:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   all copies and that both that the copyright notice and this
  16:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   documentation, and that the name of the author not be used in
  18:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   advertising or publicity pertaining to distribution of the
  19:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   software without specific, written prior permission.
  20:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  21:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   The author disclaims all warranties with regard to this
  22:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   software, including all implied warranties of merchantability
  23:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   special, indirect or consequential damages or any damages
  25:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   arising out of or in connection with the use or performance of
  28:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****   this software.
  29:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** */
  30:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  31:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** /** \file
  32:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \brief Serial USART Peripheral Driver (AVR8)
  33:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  34:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  On-chip serial USART driver for the 8-bit AVR microcontrollers.
  35:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  36:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  37:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/Serial.h.
  38:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  */
  39:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  40:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** /** \ingroup Group_Serial
  41:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \defgroup Group_Serial_AVR8 Serial USART Peripheral Driver (AVR8)
GAS LISTING  			page 22


  42:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  43:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \section Sec_Serial_AVR8_ModDescription Module Description
  44:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  On-chip serial USART driver for the 8-bit AVR microcontrollers.
  45:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  46:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  47:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *        dispatch header located in LUFA/Drivers/Peripheral/Serial.h.
  48:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  49:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \section Sec_Serial_AVR8_ExampleUsage Example Usage
  50:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  The following snippet is an example of how this module may be used within a typical
  51:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  application.
  52:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  53:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \code
  54:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      // Initialize the serial USART driver before first use, with 9600 baud (and no double-speed
  55:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      Serial_Init(9600, false);
  56:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  57:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      // Send a string through the USART
  58:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      Serial_SendString("Test String\r\n");
  59:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  60:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      // Send a raw byte through the USART
  61:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      Serial_SendByte(0xDC);
  62:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  63:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      // Receive a byte through the USART (or -1 if no data received)
  64:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *      int16_t DataByte = Serial_ReceiveByte();
  65:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  \endcode
  66:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *
  67:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  *  @{
  68:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h ****  */
  69:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  70:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** #ifndef __SERIAL_AVR8_H__
  71:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** #define __SERIAL_AVR8_H__
  72:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  73:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	/* Includes: */
  74:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#include "../../../Common/Common.h"
  75:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#include "../../Misc/TerminalCodes.h"
  76:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  77:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#include <stdio.h>
  78:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  79:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  80:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#if defined(__cplusplus)
  81:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			extern "C" {
  82:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#endif
  83:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  84:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	/* Preprocessor Checks: */
  85:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#if !defined(__INCLUDE_FROM_SERIAL_H) && !defined(__INCLUDE_FROM_SERIAL_C)
  86:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/Peripheral/Serial.h instead.
  87:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		#endif
  88:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  89:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	/* Private Interface - For use in library only: */
  90:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	#if !defined(__DOXYGEN__)
  91:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		/* External Variables: */
  92:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			extern FILE USARTSerialStream;
  93:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
  94:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		/* Function Prototypes: */
  95:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			int Serial_putchar(char DataByte,
  96:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			                   FILE *Stream);
  97:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			int Serial_getchar(FILE *Stream);
  98:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			int Serial_getchar_Blocking(FILE *Stream);
GAS LISTING  			page 23


  99:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	#endif
 100:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 101:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 102:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		/* Macros: */
 103:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Macro for calculating the baud value from a given baud rate when the \c U2X (double speed) b
 104:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  not set.
 105:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 106:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] Baud  Target serial UART baud rate.
 107:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 108:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Closest UBRR register value for the given UART frequency.
 109:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 110:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			#define SERIAL_UBBRVAL(Baud)    ((((F_CPU / 16) + (Baud / 2)) / (Baud)) - 1)
 111:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 112:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Macro for calculating the baud value from a given baud rate when the \c U2X (double speed) b
 113:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  set.
 114:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 115:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] Baud  Target serial UART baud rate.
 116:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 117:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Closest UBRR register value for the given UART frequency.
 118:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 119:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			#define SERIAL_2X_UBBRVAL(Baud) ((((F_CPU / 8) + (Baud / 2)) / (Baud)) - 1)
 120:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 121:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		/* Function Prototypes: */
 122:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Transmits a given NUL terminated string located in program space (FLASH) through the USART.
 123:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 124:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] FlashStringPtr  Pointer to a string located in program space.
 125:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 126:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			void Serial_SendString_P(const char* FlashStringPtr) ATTR_NON_NULL_PTR_ARG(1);
 127:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 128:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Transmits a given NUL terminated string located in SRAM memory through the USART.
 129:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 130:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] StringPtr  Pointer to a string located in SRAM space.
 131:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 132:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			void Serial_SendString(const char* StringPtr) ATTR_NON_NULL_PTR_ARG(1);
 133:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 134:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Transmits a given buffer located in SRAM memory through the USART.
 135:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 136:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] Buffer  Pointer to a buffer containing the data to send.
 137:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] Length  Length of the data to send, in bytes.
 138:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 139:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			void Serial_SendData(const void* Buffer, uint16_t Length) ATTR_NON_NULL_PTR_ARG(1);
 140:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 141:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Creates a standard character stream from the USART so that it can be used with all the regul
 142:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  in the avr-libc \c <stdio.h> library that accept a \c FILE stream as a destination (e.g. \c 
 143:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  stream is bidirectional and can be used for both input and output functions.
 144:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 145:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  Reading data from this stream is non-blocking, i.e. in most instances, complete strings cann
 146:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  fetch, as the endpoint will not be ready at some point in the transmission, aborting the tra
 147:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  be used when the read data is processed byte-per-bye (via \c getc()) or when the user applic
 148:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  line buffering.
 149:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 150:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in,out] Stream  Pointer to a FILE structure where the created stream should be placed
 151:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *                         and \c stdin will be configured to use the USART.
 152:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 153:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \pre The USART must first be configured via a call to \ref Serial_Init() before the stream i
 154:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 155:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			void Serial_CreateStream(FILE* Stream);
GAS LISTING  			page 24


 156:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 157:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Identical to \ref Serial_CreateStream(), except that reads are blocking until the calling st
 158:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  the transfer.
 159:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 160:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in,out] Stream  Pointer to a FILE structure where the created stream should be placed
 161:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *                         and \c stdin will be configured to use the USART.
 162:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 163:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \pre The USART must first be configured via a call to \ref Serial_Init() before the stream i
 164:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 165:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			void Serial_CreateBlockingStream(FILE* Stream);
 166:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 167:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 		/* Inline Functions: */
 168:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Initializes the USART, ready for serial data transmission and reception. This initializes th
 169:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  standard 8-bit, no parity, 1 stop bit settings suitable for most applications.
 170:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 171:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] BaudRate     Serial baud rate, in bits per second.
 172:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] DoubleSpeed  Enables double speed mode when set, halving the sample time to doubl
 173:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 174:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_Init(const uint32_t BaudRate,
 175:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			                               const bool DoubleSpeed);
 176:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_Init(const uint32_t BaudRate,
 177:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			                               const bool DoubleSpeed)
 178:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 179:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UBRR1  = (DoubleSpeed ? SERIAL_2X_UBBRVAL(BaudRate) : SERIAL_UBBRVAL(BaudRate));
 180:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 181:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1C = ((1 << UCSZ11) | (1 << UCSZ10));
 182:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1A = (DoubleSpeed ? (1 << U2X1) : 0);
 183:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1B = ((1 << TXEN1)  | (1 << RXEN1));
 184:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 185:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				DDRD  |= (1 << 3);
 186:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				PORTD |= (1 << 2);
 187:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 188:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 189:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Turns off the USART driver, disabling and returning used hardware to their default configura
 190:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_Disable(void);
 191:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_Disable(void)
 192:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 193:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1B = 0;
 194:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1A = 0;
 195:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UCSR1C = 0;
 196:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 197:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UBRR1  = 0;
 198:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 199:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				DDRD  &= ~(1 << 3);
 200:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				PORTD &= ~(1 << 2);
 201:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 202:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 203:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Indicates whether a character has been received through the USART.
 204:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 205:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Boolean \c true if a character has been received, \c false otherwise.
 206:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 207:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsCharReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 208:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsCharReceived(void)
 209:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 210:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 211:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 212:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
GAS LISTING  			page 25


 213:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Indicates whether there is hardware buffer space for a new transmit on the USART. This
 214:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  function can be used to determine if a call to \ref Serial_SendByte() will block in advance.
 215:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 216:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Boolean \c true if a character can be queued for transmission immediately, \c false 
 217:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 218:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsSendReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 219:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsSendReady(void)
 220:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 221:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << UDRE1)) ? true : false);
 393               	 .loc 2 221 0
 394 0000 9091 C800 	 lds r25,200
 395               	.LBE38:
 396               	.LBE37:
 222:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 223:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 224:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Indicates whether the hardware USART transmit buffer is completely empty, indicating all
 225:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  pending transmissions have completed.
 226:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 227:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Boolean \c true if no characters are buffered for transmission, \c false otherwise.
 228:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 229:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsSendComplete(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 230:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline bool Serial_IsSendComplete(void)
 231:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 232:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << TXC1)) ? true : false);
 233:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 234:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 235:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Transmits a given byte through the USART.
 236:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 237:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \note If no buffer space is available in the hardware USART, this function will block. To ch
 238:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *        space is available before calling this function, see \ref Serial_IsSendReady().
 239:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 240:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \param[in] DataByte  Byte to transmit through the USART.
 241:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 242:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_SendByte(const char DataByte) ATTR_ALWAYS_INLINE;
 243:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline void Serial_SendByte(const char DataByte)
 244:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 245:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				while (!(Serial_IsSendReady()));
 397               	 .loc 2 245 0
 398 0004 95FF      	 sbrs r25,5
 399 0006 00C0      	 rjmp .L3
 246:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UDR1 = DataByte;
 400               	 .loc 2 246 0
 401 0008 8093 CE00 	 sts 206,r24
 402               	.LBE36:
 403               	.LBE35:
  42:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	(void)Stream;
  43:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  44:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	Serial_SendByte(DataByte);
  45:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	return 0;
  46:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 404               	 .loc 1 46 0
 405 000c 80E0      	 ldi r24,0
 406 000e 90E0      	 ldi r25,0
 407               	.LVL1:
 408 0010 0895      	 ret
 409               	 .cfi_endproc
 410               	.LFE24:
GAS LISTING  			page 26


 412               	.global Serial_getchar
 414               	Serial_getchar:
 415               	.LFB25:
  47:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  48:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** int Serial_getchar(FILE *Stream)
  49:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 416               	 .loc 1 49 0
 417               	 .cfi_startproc
 418               	.LVL2:
 419               	 
 420               	 
 421               	 
 422               	.L__stack_usage =0
 423               	.LBB39:
 424               	.LBB40:
 210:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 425               	 .loc 2 210 0
 426 0012 8091 C800 	 lds r24,200
 427               	.LVL3:
 428               	.LBE40:
 429               	.LBE39:
  50:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	(void)Stream;
  51:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  52:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	if (!(Serial_IsCharReceived()))
 430               	 .loc 1 52 0
 431 0016 87FF      	 sbrs r24,7
 432 0018 00C0      	 rjmp .L7
 433               	.LBB41:
 434               	.LBB42:
 435               	.LBB43:
 436               	.LBB44:
 210:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 437               	 .loc 2 210 0
 438 001a 8091 C800 	 lds r24,200
 439               	.LBE44:
 440               	.LBE43:
 247:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			}
 248:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 249:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			/** Receives the next byte from the USART.
 250:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *
 251:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 *  \return Next byte received from the USART, or a negative value if no byte has been received.
 252:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			 */
 253:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline int16_t Serial_ReceiveByte(void) ATTR_ALWAYS_INLINE;
 254:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			static inline int16_t Serial_ReceiveByte(void)
 255:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 			{
 256:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				if (!(Serial_IsCharReceived()))
 441               	 .loc 2 256 0
 442 001e 87FF      	 sbrs r24,7
 443 0020 00C0      	 rjmp .L8
 257:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				  return -1;
 258:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 
 259:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return UDR1;
 444               	 .loc 2 259 0
 445 0022 8091 CE00 	 lds r24,206
 446 0026 90E0      	 ldi r25,0
 447 0028 0895      	 ret
 448               	.L7:
GAS LISTING  			page 27


 449               	.LBE42:
 450               	.LBE41:
  53:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	  return _FDEV_EOF;
 451               	 .loc 1 53 0
 452 002a 8EEF      	 ldi r24,lo8(-2)
 453 002c 9FEF      	 ldi r25,lo8(-1)
 454 002e 0895      	 ret
 455               	.L8:
 456               	.LBB46:
 457               	.LBB45:
 257:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				  return -1;
 458               	 .loc 2 257 0
 459 0030 8FEF      	 ldi r24,lo8(-1)
 460 0032 9FEF      	 ldi r25,lo8(-1)
 461               	.LBE45:
 462               	.LBE46:
  54:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  55:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	return Serial_ReceiveByte();
  56:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 463               	 .loc 1 56 0
 464 0034 0895      	 ret
 465               	 .cfi_endproc
 466               	.LFE25:
 468               	.global Serial_getchar_Blocking
 470               	Serial_getchar_Blocking:
 471               	.LFB26:
  57:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  58:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** int Serial_getchar_Blocking(FILE *Stream)
  59:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 472               	 .loc 1 59 0
 473               	 .cfi_startproc
 474               	 
 475               	 
 476               	 
 477               	.L__stack_usage =0
 478               	.LVL4:
 479               	.L11:
 480               	.LBB47:
 481               	.LBB48:
 210:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 482               	 .loc 2 210 0 discriminator 1
 483 0036 8091 C800 	 lds r24,200
 484               	.LBE48:
 485               	.LBE47:
  60:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	(void)Stream;
  61:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  62:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	while (!(Serial_IsCharReceived()));
 486               	 .loc 1 62 0 discriminator 1
 487 003a 87FF      	 sbrs r24,7
 488 003c 00C0      	 rjmp .L11
 489               	.LBB49:
 490               	.LBB50:
 491               	.LBB51:
 492               	.LBB52:
 210:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << RXC1)) ? true : false);
 493               	 .loc 2 210 0
 494 003e 8091 C800 	 lds r24,200
GAS LISTING  			page 28


 495               	.LBE52:
 496               	.LBE51:
 256:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				if (!(Serial_IsCharReceived()))
 497               	 .loc 2 256 0
 498 0042 87FF      	 sbrs r24,7
 499 0044 00C0      	 rjmp .L13
 500               	 .loc 2 259 0
 501 0046 8091 CE00 	 lds r24,206
 502 004a 90E0      	 ldi r25,0
 503 004c 0895      	 ret
 504               	.L13:
 257:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				  return -1;
 505               	 .loc 2 257 0
 506 004e 8FEF      	 ldi r24,lo8(-1)
 507 0050 9FEF      	 ldi r25,lo8(-1)
 508               	.LBE50:
 509               	.LBE49:
  63:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	return Serial_ReceiveByte();
  64:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 510               	 .loc 1 64 0
 511 0052 0895      	 ret
 512               	 .cfi_endproc
 513               	.LFE26:
 515               	.global Serial_SendString_P
 517               	Serial_SendString_P:
 518               	.LFB27:
  65:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  66:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** void Serial_SendString_P(const char* FlashStringPtr)
  67:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 519               	 .loc 1 67 0
 520               	 .cfi_startproc
 521               	.LVL5:
 522               	 
 523               	 
 524               	 
 525               	.L__stack_usage =0
 526               	.L15:
 527               	.LBB53:
  68:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	uint8_t CurrByte;
  69:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  70:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	while ((CurrByte = pgm_read_byte(FlashStringPtr)) != 0x00)
 528               	 .loc 1 70 0 discriminator 1
 529 0054 FC01      	 movw r30,r24
 530               	 
 531               	 
 532 0056 2491      	 lpm r18,Z
 533               	 
 534               	 
 535               	.LVL6:
 536               	 
 537               	.LBE53:
 538 0058 2223      	 tst r18
 539 005a 01F0      	 breq .L19
 540               	.L17:
 541               	.LBB54:
 542               	.LBB55:
 543               	.LBB56:
GAS LISTING  			page 29


 544               	.LBB57:
 221:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << UDRE1)) ? true : false);
 545               	 .loc 2 221 0
 546 005c 3091 C800 	 lds r19,200
 547               	.LBE57:
 548               	.LBE56:
 245:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				while (!(Serial_IsSendReady()));
 549               	 .loc 2 245 0
 550 0060 35FF      	 sbrs r19,5
 551 0062 00C0      	 rjmp .L17
 246:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UDR1 = DataByte;
 552               	 .loc 2 246 0
 553 0064 2093 CE00 	 sts 206,r18
 554               	.LBE55:
 555               	.LBE54:
  71:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	{
  72:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Serial_SendByte(CurrByte);
  73:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		FlashStringPtr++;
 556               	 .loc 1 73 0
 557 0068 0196      	 adiw r24,1
 558               	.LVL7:
 559 006a 00C0      	 rjmp .L15
 560               	.LVL8:
 561               	.L19:
 562               	 
  74:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	}
  75:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 563               	 .loc 1 75 0
 564 006c 0895      	 ret
 565               	 .cfi_endproc
 566               	.LFE27:
 568               	.global Serial_SendString
 570               	Serial_SendString:
 571               	.LFB28:
  76:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  77:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** void Serial_SendString(const char* StringPtr)
  78:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 572               	 .loc 1 78 0
 573               	 .cfi_startproc
 574               	.LVL9:
 575               	 
 576               	 
 577               	 
 578               	.L__stack_usage =0
 579               	.L21:
  79:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	uint8_t CurrByte;
  80:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  81:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	while ((CurrByte = *StringPtr) != 0x00)
 580               	 .loc 1 81 0 discriminator 1
 581 006e FC01      	 movw r30,r24
 582 0070 2191      	 ld r18,Z+
 583 0072 CF01      	 movw r24,r30
 584               	.LVL10:
 585 0074 2223      	 tst r18
 586 0076 01F0      	 breq .L25
 587               	.L23:
 588               	.LBB58:
GAS LISTING  			page 30


 589               	.LBB59:
 590               	.LBB60:
 591               	.LBB61:
 221:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << UDRE1)) ? true : false);
 592               	 .loc 2 221 0
 593 0078 3091 C800 	 lds r19,200
 594               	.LBE61:
 595               	.LBE60:
 245:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				while (!(Serial_IsSendReady()));
 596               	 .loc 2 245 0
 597 007c 35FF      	 sbrs r19,5
 598 007e 00C0      	 rjmp .L23
 246:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UDR1 = DataByte;
 599               	 .loc 2 246 0
 600 0080 2093 CE00 	 sts 206,r18
 601               	.LVL11:
 602 0084 00C0      	 rjmp .L21
 603               	.LVL12:
 604               	.L25:
 605               	 
 606               	.LBE59:
 607               	.LBE58:
  82:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	{
  83:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Serial_SendByte(CurrByte);
  84:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		StringPtr++;
  85:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	}
  86:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 608               	 .loc 1 86 0
 609 0086 0895      	 ret
 610               	 .cfi_endproc
 611               	.LFE28:
 613               	.global Serial_SendData
 615               	Serial_SendData:
 616               	.LFB29:
  87:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  88:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** void Serial_SendData(const void* Buffer,
  89:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c ****                      uint16_t Length)
  90:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 617               	 .loc 1 90 0
 618               	 .cfi_startproc
 619               	.LVL13:
 620               	 
 621               	 
 622               	 
 623               	.L__stack_usage =0
 624 0088 680F      	 add r22,r24
 625 008a 791F      	 adc r23,r25
 626               	.LVL14:
 627               	.L27:
  91:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	while (Length--)
 628               	 .loc 1 91 0 discriminator 1
 629 008c 8617      	 cp r24,r22
 630 008e 9707      	 cpc r25,r23
 631 0090 01F0      	 breq .L31
 632               	.LVL15:
  92:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	  Serial_SendByte(*((uint8_t*)Buffer++));
 633               	 .loc 1 92 0
GAS LISTING  			page 31


 634 0092 FC01      	 movw r30,r24
 635 0094 2191      	 ld r18,Z+
 636               	.LVL16:
 637 0096 CF01      	 movw r24,r30
 638               	.LVL17:
 639               	.L29:
 640               	.LBB62:
 641               	.LBB63:
 642               	.LBB64:
 643               	.LBB65:
 221:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				return ((UCSR1A & (1 << UDRE1)) ? true : false);
 644               	 .loc 2 221 0
 645 0098 3091 C800 	 lds r19,200
 646               	.LBE65:
 647               	.LBE64:
 245:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				while (!(Serial_IsSendReady()));
 648               	 .loc 2 245 0
 649 009c 35FF      	 sbrs r19,5
 650 009e 00C0      	 rjmp .L29
 246:LUFA/Drivers/Peripheral/AVR8/../AVR8/Serial_AVR8.h **** 				UDR1 = DataByte;
 651               	 .loc 2 246 0
 652 00a0 2093 CE00 	 sts 206,r18
 653 00a4 00C0      	 rjmp .L27
 654               	.LVL18:
 655               	.L31:
 656               	 
 657               	.LBE63:
 658               	.LBE62:
  93:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 659               	 .loc 1 93 0
 660 00a6 0895      	 ret
 661               	 .cfi_endproc
 662               	.LFE29:
 664               	.global Serial_CreateStream
 666               	Serial_CreateStream:
 667               	.LFB30:
  94:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
  95:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** void Serial_CreateStream(FILE* Stream)
  96:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 668               	 .loc 1 96 0
 669               	 .cfi_startproc
 670               	.LVL19:
 671               	 
 672               	 
 673               	 
 674               	.L__stack_usage =0
 675 00a8 FC01      	 movw r30,r24
  97:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	if (!(Stream))
 676               	 .loc 1 97 0
 677 00aa 0097      	 sbiw r24,0
 678 00ac 01F4      	 brne .L33
 679               	.LVL20:
  98:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	{
  99:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Stream = &USARTSerialStream;
 100:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		stdin  = Stream;
 680               	 .loc 1 100 0
 681 00ae 80E0      	 ldi r24,lo8(USARTSerialStream)
GAS LISTING  			page 32


 682 00b0 90E0      	 ldi r25,hi8(USARTSerialStream)
 683 00b2 9093 0000 	 sts __iob+1,r25
 684 00b6 8093 0000 	 sts __iob,r24
 101:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		stdout = Stream;
 685               	 .loc 1 101 0
 686 00ba 9093 0000 	 sts __iob+2+1,r25
 687 00be 8093 0000 	 sts __iob+2,r24
  99:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Stream = &USARTSerialStream;
 688               	 .loc 1 99 0
 689 00c2 FC01      	 movw r30,r24
 690               	.LVL21:
 691               	.L33:
 102:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	}
 103:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
 104:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(Serial_putchar, Serial_getchar, _FDEV_SETUP_RW);
 692               	 .loc 1 104 0
 693 00c4 8EE0      	 ldi r24,lo8(14)
 694 00c6 DF01      	 movw r26,r30
 695               	 0:
 696 00c8 1D92      	 st X+,__zero_reg__
 697 00ca 8A95      	 dec r24
 698 00cc 01F4      	 brne 0b
 699 00ce 83E0      	 ldi r24,lo8(3)
 700 00d0 8383      	 std Z+3,r24
 701 00d2 80E0      	 ldi r24,lo8(gs(Serial_putchar))
 702 00d4 90E0      	 ldi r25,hi8(gs(Serial_putchar))
 703 00d6 9187      	 std Z+9,r25
 704 00d8 8087      	 std Z+8,r24
 705 00da 80E0      	 ldi r24,lo8(gs(Serial_getchar))
 706 00dc 90E0      	 ldi r25,hi8(gs(Serial_getchar))
 707 00de 9387      	 std Z+11,r25
 708 00e0 8287      	 std Z+10,r24
 709 00e2 0895      	 ret
 710               	 .cfi_endproc
 711               	.LFE30:
 713               	.global Serial_CreateBlockingStream
 715               	Serial_CreateBlockingStream:
 716               	.LFB31:
 105:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** }
 106:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
 107:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** void Serial_CreateBlockingStream(FILE* Stream)
 108:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** {
 717               	 .loc 1 108 0
 718               	 .cfi_startproc
 719               	.LVL22:
 720               	 
 721               	 
 722               	 
 723               	.L__stack_usage =0
 724 00e4 FC01      	 movw r30,r24
 109:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	if (!(Stream))
 725               	 .loc 1 109 0
 726 00e6 0097      	 sbiw r24,0
 727 00e8 01F4      	 brne .L35
 728               	.LVL23:
 110:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	{
 111:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Stream = &USARTSerialStream;
GAS LISTING  			page 33


 112:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		stdin  = Stream;
 729               	 .loc 1 112 0
 730 00ea 80E0      	 ldi r24,lo8(USARTSerialStream)
 731 00ec 90E0      	 ldi r25,hi8(USARTSerialStream)
 732 00ee 9093 0000 	 sts __iob+1,r25
 733 00f2 8093 0000 	 sts __iob,r24
 113:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		stdout = Stream;
 734               	 .loc 1 113 0
 735 00f6 9093 0000 	 sts __iob+2+1,r25
 736 00fa 8093 0000 	 sts __iob+2,r24
 111:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 		Stream = &USARTSerialStream;
 737               	 .loc 1 111 0
 738 00fe FC01      	 movw r30,r24
 739               	.LVL24:
 740               	.L35:
 114:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	}
 115:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 
 116:LUFA/Drivers/Peripheral/AVR8/Serial_AVR8.c **** 	*Stream = (FILE)FDEV_SETUP_STREAM(Serial_putchar, Serial_getchar_Blocking, _FDEV_SETUP_RW);
 741               	 .loc 1 116 0
 742 0100 8EE0      	 ldi r24,lo8(14)
 743 0102 DF01      	 movw r26,r30
 744               	 0:
 745 0104 1D92      	 st X+,__zero_reg__
 746 0106 8A95      	 dec r24
 747 0108 01F4      	 brne 0b
 748 010a 83E0      	 ldi r24,lo8(3)
 749 010c 8383      	 std Z+3,r24
 750 010e 80E0      	 ldi r24,lo8(gs(Serial_putchar))
 751 0110 90E0      	 ldi r25,hi8(gs(Serial_putchar))
 752 0112 9187      	 std Z+9,r25
 753 0114 8087      	 std Z+8,r24
 754 0116 80E0      	 ldi r24,lo8(gs(Serial_getchar_Blocking))
 755 0118 90E0      	 ldi r25,hi8(gs(Serial_getchar_Blocking))
 756 011a 9387      	 std Z+11,r25
 757 011c 8287      	 std Z+10,r24
 758 011e 0895      	 ret
 759               	 .cfi_endproc
 760               	.LFE31:
 762               	 .comm USARTSerialStream,14,1
 763               	.Letext0:
 764               	 .file 3 "/usr/lib/avr/include/stdint.h"
 765               	 .file 4 "/usr/lib/avr/include/stdio.h"
GAS LISTING  			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 Serial_AVR8.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:377    .text:0000000000000000 Serial_putchar
    {standard input}:414    .text:0000000000000012 Serial_getchar
    {standard input}:470    .text:0000000000000036 Serial_getchar_Blocking
    {standard input}:517    .text:0000000000000054 Serial_SendString_P
    {standard input}:570    .text:000000000000006e Serial_SendString
    {standard input}:615    .text:0000000000000088 Serial_SendData
    {standard input}:666    .text:00000000000000a8 Serial_CreateStream
                            *COM*:000000000000000e USARTSerialStream
    {standard input}:715    .text:00000000000000e4 Serial_CreateBlockingStream
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
__iob
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "myRNDIS.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.c517b98070d27f7f,"",@progbits
  10 0000 789C 6362 	 .ascii "x\234cb`b\300\006\226Bif\006ffvff\006\006\3062\006\006\246j\206"
  10      6062 C006 
  10      9642 6966 
  10      0666 6676 
  10      6666 0606 
  11 001b 5F0D 1D0D 	 .ascii "_\r\035\r\0029\214\f\005\214`i\246h\306\034FF6\240:d%3@J\230"
  11      0239 8C0C 
  11      058C 6069 
  11      A668 C61C 
  11      4646 36A0 
  12 0036 0A18 1911 	 .ascii "\n\030\031\021J\204\261)a.`dB(\311a``\207\270\206\031\331*\026"
  12      4A84 B129 
  12      612E 6064 
  12      4228 C961 
  12      6060 87B8 
  13 004f 5D86 350D 	 .ascii "]\2065\r\r \026k\001#3X\245\004\232c\001pV\030\306"
  13      0D20 166B 
  13      0123 3358 
  13      A504 9A63 
  13      0170 5618 
  14               	 .text
  15               	 .section .gnu.lto_.inline.c517b98070d27f7f,"",@progbits
  16 0000 789C 6D92 	 .ascii "x\234m\222MN\3030\020\205g\246nb\241RE,\272M\216RU\254s\001\266"
  16      4D4E C330 
  16      1085 67A6 
  16      6E62 A152 
  16      452C BA4D 
  17 001b 886E B802 	 .ascii "\210n\270\002\322\3241\020\361\247 !V,z\b\016P\211%B\342\030"
  17      D2D4 3110 
  17      F1A7 2021 
  17      562C 7A08 
  17      0E50 8925 
  18 0032 1C03 DBE3 	 .ascii "\034\003\333\3436\263h${>\217\337\274q\234\020\020\034{\336s"
  18      36B3 6824 
  18      7B3E 8FDF 
  18      BC71 9C10 
  18      101C 7BDE 
  19 0047 7A02 309B 	 .ascii "z\0020\233\242\201\365\005^c\361\342L\310\tw\316\333\260\300"
  19      A281 F505 
  19      5E63 F1E2 
  19      4CC8 0977 
  19      CEDB B0C0 
  20 005b 3830 0A8B 	 .ascii "80\n\213@\305GM0\333\326\025\340\0175\206$\200\371<1\342\366"
  20      40C5 474D 
  20      30DB D615 
  20      E00F 3586 
  20      2480 F93C 
  21 0072 0D73 5C88 	 .ascii "\rs\\\210C\271\031\335J\227\370*q\227\3702\261W\232;\305\367"
GAS LISTING  			page 2


  21      43B9 19DD 
  21      4A97 F82A 
  21      7197 F832 
  21      B157 9A3B 
  22 0088 4AFF A0F4 	 .ascii "J\377\240\364\217J\363\244\370Y\261z\213\362U\361\233>\217\037"
  22      8F4A F3A4 
  22      F859 B17A 
  22      8BF2 55F1 
  22      9B3E 8F1F 
  23 009c FD37 CE1E 	 .ascii "\3757\316\036\374o\023\357\363~\334p\262X\347S{-\353GY'\213x"
  23      FC6F 13EF 
  23      F37E DC70 
  23      B258 E753 
  23      7B2D EB47 
  24 00b4 6B75 BCAF 	 .ascii "ku\274\257m\270\257s\276af\003\344\221yI9\002\256\230\033\346"
  24      6DB8 AF73 
  24      BE61 6603 
  24      E491 7949 
  24      3902 AE98 
  25 00ca 8A0E 243B 	 .ascii "\212\016$;=1\3730\372\300\036\351XRr\224\367r\330Ke7\367Y\246"
  25      3D31 FB30 
  25      FAC0 1EE9 
  25      5852 7294 
  25      F772 D84B 
  26 00e3 B921 30C1 	 .ascii "\271!0\301\241\211\235\244\237\364\262\"\262i\316\365\251|gv"
  26      A189 9DA4 
  26      9FF4 B222 
  26      B269 CEF5 
  26      A97C 6776 
  27 00f7 E21E 21C6 	 .ascii "\342\036!\306\246\312!\316Rf\203O\374\003V\351\323\233S\310/"
  27      A6CA 21CE 
  27      5266 834F 
  27      FC03 56E9 
  27      D39B 53C8 
  28 010c 3119 5A59 	 .ascii "1\031ZY\216h\204J\372\205\263\340\337\343\337\027\312\335H%\320"
  28      8E68 844A 
  28      FA85 B3E0 
  28      DFE3 DF17 
  28      CADD 4825 
  29 0121 D00E ED74 	 .ascii "\320\016\355t\016\242\203\177\357\320{ "
  29      0EA2 837F 
  29      EFD0 7B20 
  30               	 .text
  31               	 .section .gnu.lto_.pureconst.c517b98070d27f7f,"",@progbits
  32 0000 789C 6362 	 .string "x\234cb`b`g\200"
  32      6062 6067 
  32      8000 
  33 000a 6606 4966 	 .string "f\006If)v)"
  33      2976 2900 
  34 0012 01D8 00   	 .string "\001\330"
  35 0015 66        	 .ascii "f"
  36               	 .text
  37               	 .section .gnu.lto_ProcessNDISSet.isra.0.c517b98070d27f7f,"",@progbits
  38 0000 789C 6552 	 .string "x\234eRMK\033Q\024\275\347}L&J\301\272)d\025\334t\247\213\376\204J\241\bR\314\242B\335\224\230\2101B\b\351\302v\221\2278\301.\252\206.\212\330\205\244~lu)\256Bw\366C\b.D\335\344\007t\335R\027\235\336\367&c$\016\314{g\346\234s\317}wF\220\240\301k\212\357\005~\375\230w$\b^\363\214\250\346{\020\026@H\325H\221\361\245[u\204\241#\221\212\201\006, P\325c\207Fu\016\2668\306\250e\314\307\356~x#\326\276uM\323\374\013\253(\202\373x"
  38      4D4B 1B51 
  38      14BD E77D 
  38      4C26 4AC1 
GAS LISTING  			page 3


  38      BA29 6415 
  39 00a1 CA83 5EF1 	 .ascii "\312\203^\361\003\322n\023\212\r%\364;;\024\246\033\206\227\007"
  39      03D2 6E13 
  39      8A0D 25F4 
  39      3B3B 14A6 
  39      1B86 9707 
  40 00b5 C349 A004 	 .ascii "\303I\240\004\b^\204\244y\264\270\252\242\"$k4\005\3064\323Q"
  40      085E 84A4 
  40      79B4 B8AA 
  40      A222 246B 
  40      3405 C634 
  41 00cb 4CFB FA62 	 .ascii "L\373\372bC\233#\363\336\204a\265\b%(\335\017\031\211B\356\r"
  41      439B 23F3 
  41      DE84 61B5 
  41      0825 28DD 
  41      0F19 8942 
  42 00e1 20EF 125F 	 .ascii " \357\022_\362jO0\013\317\356\362\224\276\372\304Y{\234UrIdI"
  42      F26A 4F30 
  42      0BCF EEF2 
  42      94BE FAC4 
  42      597B 9C55 
  43 00f9 E1C8 1F14 	 .ascii "\341\310\037\024t\377N\315c\027\232\n\300:}\250\005\246\275s"
  43      74FF 4ECD 
  43      6317 9A0A 
  43      C03A 7DA8 
  43      05A6 BD73 
  44 010d C5F5 B5D5 	 .ascii "\305\365\265\325-@9}\217\370\375\210\337\333po\243\256\034\255"
  44      2D40 397D 
  44      8FF8 FD88 
  44      DFDB 706F 
  44      A3AE 1CAD 
  45 0121 EFD2 9F52 	 .ascii "\357\322\237R1\275Z\017|\307{w\372\233\345\364FJ~\347)G\211\316"
  45      31BD 5A0F 
  45      7CC7 7B77 
  45      FA9B E5F4 
  45      464A 7EE7 
  46 0139 FE93 EA27 	 .ascii "\376\223\352'\215?\207\023q\023\3623m\327\214\031\341*\005\b"
  46      8D3F 8713 
  46      7113 F233 
  46      6DD7 8C19 
  46      E12A 0508 
  47 014d 5B2D D1F3 	 .ascii "[-\321\363\263\362\364h8\322\365E\357\350\206\307\304(\021M\274"
  47      B3F2 F468 
  47      38D2 F545 
  47      EFE8 86C7 
  47      C428 114D 
  48 0162 EF28 D8D3 	 .ascii "\357(\330\323\262\351x\353\313\265\030\260\371\267\266d\311\311"
  48      B2E9 78EB 
  48      CBB5 18B0 
  48      F9B7 B664 
  48      C9C9 
  49 0174 AD2D 4971 	 .ascii "\255-Iq\001_\334\366\254\006{V1\243i\223Gh\251\336I;\016\026"
  49      015F DCF6 
  49      AC06 7B56 
  49      31A3 6993 
  49      4768 A9DE 
  50 018c 22C5 2529 	 .ascii "\"\305%)[I\362\037\362\253\363\260\007\345^\007\016\022\251\340"
GAS LISTING  			page 4


  50      5B49 F21F 
  50      F2AB F3B0 
  50      07E5 5E07 
  50      0E12 A9E0 
  51 01a0 1CF6 6BC1 	 .ascii "\034\366k\301V\261qC\313+3\323\223\3173\343Y\032}\372\246\\~"
  51      56B1 7143 
  51      CB2B 33D3 
  51      93CF 33E3 
  51      591A 7DFA 
  52 01b7 F13A BB94 	 .ascii "\361:\273\224\253<[,Vr\345\361'\211L\256\222Y|\233\373\017_l"
  52      AB3C 5B2C 
  52      5672 E5F1 
  52      2789 4CAE 
  52      9259 7C9B 
  53 01cf 9EE3      	 .ascii "\236\343"
  54               	 .text
  55               	 .section .gnu.lto_ProcessNDISQuery.isra.1.c517b98070d27f7f,"",@progbits
  56 0000 789C 9556 	 .string "x\234\225V\337o\025E\024>g\177\337\335\273\277\356\325\362\332\030\237| Q\377\004\211\t/\006\345A\022}i\240m\270^\223\233\246\215A\037\356\264\\h)-)\212\261Z\025\221\246\0175\361\007\240T0\332\030^\b\n\301\324X\b1M\004\373\246\t\022B\032`\231\231\235\331;]\023\335\335\207s\277\316\367\315\371\316\2349\333\254\006\032\344\037\017\001\236\366"
  56      DF6F 1545 
  56      143E 677F 
  56      DFDD BBBF 
  56      EED5 F2DA 
  57 0073 9EA5 18EB 	 .string "\236\245\030\353\200\265\231\313"
  57      80B5 99CB 
  57      00
  58 007c A34E 0D35 	 .string "\243N\r5\006P\013\3439\023\210\243\363h\362h\361\350\360\350\361h\363X\3411\3401\342\321\345\321\3401\344\261\312\243\237\346\304853$0%\260$\260%p$\250H\340J\340IP\225\300\227 \220 \224 \222 Fd"
  58      0650 0BE3 
  58      3913 88A3 
  58      F368 F268 
  58      F1E8 F0E8 
  59 00c5 10DA 354D 	 .string "\020\3325M7L\313v*\256W\365\2030\212\261\375*\262\346\340\023p\202\220\267\327n\255o\350\343\223kd\206<L\332\330D\332G\037a"
  59      374C CB76 
  59      2AAE 57F5 
  59      8330 8AB1 
  59      FD2A B2E6 
  60 00f3 E115 FA07 	 .ascii "\341\025\372\007\366\362\037\315\330\334\330/4\262\226$\327\356"
  60      F6F2 1FCD 
  60      D8DC D82F 
  60      34B2 9624 
  60      D7EE 
  61 0105 BA4F 22B6 	 .ascii "\272O\"\266\350\016\032P\247\201\352\366\340\t\232\331\204&\352"
  61      E80E 1A50 
  61      A781 EAF6 
  61      E009 9AD9 
  61      8426 EA
  62 0118 5468 4287 	 .ascii "ThB\207\220\231\336\324j\371\327+GL\362%\231 I\322n\242\241A"
  62      9099 DED4 
  62      6AF9 D72B 
  62      474C F225 
  62      9920 49D2 
  63 0130 6FD7 284A 	 .ascii "o\327(J\215r\227\230n$\223d\031Y}\t\225\230\032<\365\177\333"
  63      8D72 9798 
  63      6E24 9364 
  63      1959 7D09 
  63      9598 1A3C 
  64 0147 80F1 F479 	 .ascii "\200\361\364y\231\306\303\264\021\273\260\306~\365\213\360\243"
  64      99C6 C3B4 
GAS LISTING  			page 5


  64      11BB B0C6 
  64      7EF5 8BF0 
  64      A3
  65 0158 03B4 C405 	 .ascii "\003\264\304\005Zb\213\025(\027\346\371\2028\345.\324\270\372"
  65      5A62 8B15 
  65      2817 E6F9 
  65      8238 E52E 
  65      D4B8 FA
  66 016b 2758 24F7 	 .ascii "'X$\367\0378{\360$\232\320@\234\206\251\321\016Y>\376\033u\264"
  66      1F38 7BF0 
  66      249A D040 
  66      9C86 A9D1 
  66      0E59 3EFE 
  67 0182 9870 90AE 	 .ascii "\230p\220\256\263G\020\267C\272\316\312\261G\307\fN[*\375qM\322"
  67      B347 10B7 
  67      43BA CECA 
  67      B147 C70C 
  67      4E5B 2AFD 
  68 0199 6382 B655 	 .ascii "c\202\266U\372\273\214\336Oi\016:\024\f\242\243\25262\325A\221"
  68      FABB 8CDE 
  68      4F69 0E3A 
  68      140C A2A3 
  68      AA36 32D5 
  69 01af A4A2 D2AB 	 .ascii "\244\242\322\253uI\217\013\332U\351\373\331\356I\351q\230{lJ"
  69      7549 8F0B 
  69      DA55 E9FB 
  69      D9EE 49E9 
  69      7198 7B6C 
  70 01c4 7223 534D 	 .ascii "r#SM\211$\236J\177\230yL\013\272\252\322\337\364H\372\210\240"
  70      8924 9E4A 
  70      7F98 794C 
  70      0BBA AAD2 
  70      DFF4 48FA 
  71 01da 7D95 9ED9 	 .ascii "}\225\236\331\"\351\243\202\016T\372\\\226\374\230\240\303M\273"
  71      22E9 A382 
  71      0E54 FA5C 
  71      96FC 98A0 
  71      C34D BB
  72 01ed BB3D ECA4 	 .ascii "\273=\354\244t\244\322+=\335\033p\322\363\035\240`\020cUu\267"
  72      74A4 D22B 
  72      3DDD 1B70 
  72      D2F3 1DA0 
  72      6010 6355 
  73 0203 DE55 7584 	 .ascii "\336Uu\204l\214\241A:&\212n6\313\326a,s\253\253\374\357"
  73      6C8C A141 
  73      3A26 8A6E 
  73      36CB D661 
  73      2C73 ABAB 
  74 0219 8ADB 84C8 	 .string "\212\333\204\310\263\237!\351'\307I\2079S\277D\337\313t\224\370\\\374\fcK\253\017\257j\351\322\034|0JHD_\212\006j,Qz\351\fU\232\024\\\201\203k\017\306\355T\f\360\026l\320\267\210\312\335\001\344\203N\307Sg\213\263\204\274\321D\257\205\217\t\251\310\320\024wD\2131\362\305Di1K\237\376R\240\030\326t\246\236=\271\241\347\324>\255\201i\202L\355w[`\346]m\221g\241\214\353\275\205r\256V\336\325\021\256\213\245\\\027\013\270*\327m\347]=\221\347\2632\256\253\237\0279k\222$vf\354\344\215+\342\270\247J\035\367T\021c\242e\266\225\274mU$:]\304\266.\306\373\372\241\242\343\035\266\360qu\274\353\352x\273\371bB\321\316\263ez\260t\256\334\225{yWW\3449_\352\245\372\276H\347?\231\2662\337j\336\267&|\177(\342k\211\326\037\272d\375\253\365\321"
  74      B39F 21E9 
  74      27C7 4987 
  74      3953 BF44 
  74      DFCB 7494 
  75 031a 6A6A EB27 	 .ascii "jj\353'\b\031ib\334\302\036\265\365\026m}M\026\343\347\213\251"
  75      0819 6962 
  75      DCC2 1EB5 
  75      F516 6D7D 
GAS LISTING  			page 6


  75      4D16 E3E7 
  76 0330 8B62 FE28 	 .ascii "\213b\376(\325\204?\2134\001\263\026\004yW_\344Y/\341z\361\336"
  76      D584 3F8B 
  76      3401 B316 
  76      0479 575F 
  76      E459 2FE1 
  77 0347 BA74 6DA0 	 .ascii "\272tm\240\3215\316\332\021\264p\213\330\023\bk\272m\373\177"
  77      D135 CEDA 
  77      11B4 708B 
  77      D813 086B 
  77      BA6D FB7F 
  78 035b 16DA E87E 	 .ascii "\026\332\350~P\204\371\"c1\225\177\225\232\312\277\313\375\373"
  78      5084 F922 
  78      6331 957F 
  78      959A CABF 
  78      CBFD FB
  79 036e 8BF2 AE81 	 .ascii "\213\362\256\201\310s\273\324\205\374S\304\265\243g\2661\320"
  79      C873 BBD4 
  79      85FC 53C4 
  79      B5A3 67B6 
  79      31D0 
  80 0380 8F4F EE2B 	 .ascii "\217O\356+>\221\256r\330H\277\226\256\201\3116P\2716u>\346\020"
  80      3E91 AE72 
  80      D848 BF96 
  80      AE81 C936 
  80      50B9 3675 
  81 0397 41BF D316 	 .ascii "A\277\323\026\310\270y\024\0054W\336\221\320ZyWB\373\302{\022"
  81      C8B8 7914 
  81      0534 57DE 
  81      91D0 5A79 
  81      5742 FBC2 
  82 03ad 3A2B EF4B 	 .ascii ":+\357KX\2710'\241{\346#\t\275\371\343\022V\317|%\241?\177Z\302"
  82      58B9 3027 
  82      A17B E623 
  82      09BD F9E3 
  82      1256 CF7C 
  83 03c7 E0D8 D712 	 .ascii "\340\330\327\022\206w\316J\030\335\374\026\331\307#\262\203\260"
  83      8677 CE4A 
  83      18DD FC16 
  83      D9C7 23B2 
  83      83B0 
  84 03d9 B7C0 7D7D 	 .ascii "\267\300}}\337K/l\333\276s\353n\250=724\264\243o\367k\375\303"
  84      DF4B 2F6C 
  84      DBBE 73EB 
  84      6EA8 3D37 
  84      3234 B4A3 
  85 03f2 CFEF 6D0E 	 .ascii "\317\357m\016\367\017m}\246\362\342H\377\320\276\235{\337\354"
  85      F70F 6D7D 
  85      A6F2 E248 
  85      FFD0 BE9D 
  85      7BDF EC
  86 0405 4FD1 B6BE 	 .ascii "O\321\266\276\341\276G\271w\274\335"
  86      E1BE 47B9 
  86      77BC DD
  87               	 .text
  88               	 .section .gnu.lto_ProcessRNDISControlMessage.c517b98070d27f7f,"",@progbits
  89 0000 789C AD58 	 .string "x\234\255X{l\024E\030\237\331\273\275\273\336\263/\240\224\322\007\232 B\233\232\020\343\037\032$\322\304\006EiA\0205\244\361\256\204\346\224\013\305?\200?\272}I\323J-\030b#\266\021+\020\036\005#Q\257\024\360$Hi\201Jc\250E0\026\rQ\300`\200"
GAS LISTING  			page 7


  89      7B6C 1445 
  89      189F D9BB 
  89      BDBB DEB3 
  89      2FA0 94D2 
  90 0056 D762 3867 	 .string "\327b8gf\347\261\273-\366\332\345\222\356\315\316\367}\277\357\375\315\364$ \001\343\347\030\372\213\245\0010\214\276\241\017@\251\251\027\200J\207d\367ns\001\305a!O+y\312\344\351 O\027y\272U\036\350Q\205\254l!K\266\272\231@q\332\361\323mc\333v\266pH\t\204\356$\364\004\266\355d\013\027[\270\331\302\003\275\352\302\013!^"
  90      66E7 B1BB 
  90      2DF6 DAE5 
  90      92EE CDCE 
  90      F77D BFEF 
  91 00c5 082A 248B 	 .string "\b*$\213U\266\331\035\tN\227\333\343\205\025oB\354\217m\006\330\241([\007\257\334\215J\265\365\203J\223\362 V\001\203\020\271\356\201\240\024\2027\320\013L$_\222!\034\252hd{\303\001\271\366K\245N\211\305*\202\320\"\201\351q\n\376V\337jW\270\240U\002s\204`\266*h\035)\030\331\032\031\252\377P\026\202\262\004\236\216S\343\235\206\026\275\306\027\342\321\210\004\2674n\326h\264I`\341X\032\017J\221\301X\354\337\216\232k\317>g\005~\270\003\316"
  91      55B6 D91D 
  91      094E 97DB 
  91      E385 156F 
  91      42EC 8F6D 
  92 015a 3208 427B 	 .ascii "2\bB{\032z\331\211^2\320\213#\023\357d\241\2356\264\223\215_"
  92      1A7A D989 
  92      5E32 D08B 
  92      2313 EF64 
  92      A19D 36B4 
  93 0171 72F0 6316 	 .ascii "r\360c\026\332\331\203v\346\340\227\\\374\310C;\373\320N>\226"
  93      DAD9 8376 
  93      E6E0 975C 
  93      FCC8 433B 
  93      FBD0 4E3E 
  94 0186 42F0 32A8 	 .ascii "B\3602\250Q\224\246l\200\255@\237e\350\271\031\345y9\224\360"
  94      5194 A66C 
  94      80AD 409F 
  94      65E8 B919 
  94      E579 3994 
  95 019b B7E5 2CA8 	 .ascii "\267\345,\250\352\216\242\224\372a;\224A\031\264n\007\237T*J"
  95      EA8E A294 
  95      FA61 3B94 
  95      4119 B46E 
  95      079F 542A 
  96 01b0 224A EC46 	 .ascii "\"J\354F0\214\374@\253\204\020\021\305\306'P\243\221\330\n&\""
  96      308C FC40 
  96      AB84 1011 
  96      C5C6 2750 
  96      A391 D80A 
  97 01c6 CF06 4F06 	 .ascii "\317\006O\006\211 bp\"\b\314\250\262\005 \363\362\fhV\236\340"
  97      8920 6270 
  97      2208 CCA8 
  97      B205 20F3 
  97      F20C 6856 
  98 01dc 129B C107 	 .ascii "\022\233\301\007\2255\030\332\205i\253\240\312\246\356F:\273"
  98      9535 18DA 
  98      8569 ABA0 
  98      CAA6 EE46 
  98      3ABB 
  99 01ee 90BC 0B83 	 .ascii "\220\274\013\203X%B\225\264\324V'#Z\b\321\242%\236\343D+!Z\265"
  99      5825 4295 
  99      B4D4 5627 
  99      235A 08D1 
  99      A225 9EE3 
 100 0207 C47E 1723 	 .ascii "\304~\027#\312\204(k\211_y\031\321F\2106-\361\022':\b\321\256"
 100      CA84 286B 
 100      895F 7919 
GAS LISTING  			page 8


 100      D146 8836 
 100      2DF1 1227 
 101 021f 49DF 7264 	 .ascii "I\337rd\3016\227\3454\356N5\324\264\022\316w}\241\251\004\267"
 101      C136 97E5 
 101      34EE 4E35 
 101      D4B4 12CE 
 101      777D A1A9 
 102 0235 048A E3AC 	 .ascii "\004\212\343\254\275\376.\251Y\251\211\304b\363\202\320#a\231"
 102      BDFE 2EA9 
 102      59A9 89C4 
 102      62F3 82D0 
 102      2361 99
 103 0248 B8C4 2ED6 	 .ascii "\270\304.\326\267j\364y%\260!N\301K=B\237O\002up,9\265,\251\364"
 103      B76A F479 
 103      25B0 214E 
 103      C14B 3D42 
 103      9F4F 0275 
 104 0263 6D5D 8BA1 	 .ascii "m]\213\241\202\377xLy*yW\243\027\311\355\210C\357n\241\367fC"
 104      82FF 784C 
 104      792A 7957 
 104      A317 C9ED 
 104      8843 EF6E 
 105 027b 8B46 6FA2 	 .ascii "\213Fo\242\004\016\304\253\367\326i\2417I\002\207\343\320\213"
 105      040E C4AB 
 105      F7D6 69A1 
 105      3749 0287 
 105      E3D0 8B
 106 028e 5B4C 6D2B 	 .ascii "[Lm+\212q\264Q\033\354d\tt\305\253\375^\243\266,R$\320\037\257"
 106      8A71 B451 
 106      1BEC 6409 
 106      74C5 ABFD 
 106      5EA3 B62C 
 107 02a7 64B4 57D8 	 .ascii "d\264W\330\235*\201\277\306\224\303\226\267\253eN\232\b5m\270"
 107      9D2A 81BF 
 107      C694 C396 
 107      B7AB 654E 
 107      9A08 356D 
 108 02bc 79F8 1CEA 	 .ascii "y\370\034\352\365\016\264\313\033\335\301\033}R\210\214\f\214"
 108      F50E B4CB 
 108      1BDD C11B 
 108      7D52 888C 
 108      0C8C 
 109 02ce 3589 C8E3 	 .ascii "5\211\310\343\225\0037g7\250\032\274\326\226\254J\372\341a\024"
 109      9503 3767 
 109      37A8 1ABC 
 109      D696 AC4A 
 109      FAE1 6114 
 110 02e2 0955 4AB9 	 .ascii "\tUJ\271`\013\302\311!:\0300\333u\301vD\260]\324\262aC\302\367"
 110      600B C2C9 
 110      213A 1830 
 110      DB75 C176 
 110      44B0 5DD4 
 111 02fb A3B2 CA37 	 .ascii "\243\262\3127\033\354U\320g%\237!ST\231\310\317]\375\220KaS<"
 111      1BEC 55D0 
 111      6725 9F21 
 111      5354 99C8 
 111      CF5D FD90 
GAS LISTING  			page 9


 112 0313 443A 40C7 	 .ascii "D:@\307\005\336\261W!I\007\205\0340\001)qH\353"
 112      05DE B157 
 112      2149 0785 
 112      1C30 0129 
 112      7148 EB
 113 0326 5C0A D7FC 	 .string "\\\n\327\374`\342p\026a!sx\300\004\234UX\007)\\\324\004\234,\340\230u\315\261\211\303\331\204\263\314\272\260\t8\373(\2613\001\347\030%v&\340\022\004\334~\211\005\357\363\241\t\3439G\346\"l\002\3165\022n\300\004\234{\224Ji\273`\234 i|\202L\r\021\207\260\300T.\232\306n\001\313\021\n=+U\004r|\023\033w\365\215w,1{\242\273\272\255:\367\212\037z\031\361\214\022\353\335\343\366\006pod\2437Vj\322\336q{\303\206l{\255O\225\fA\027\026q\250iQ\367\b\217\304\246\35311]\267\033\207\360\001\006\343\207\021\301\326b\030\302\277D\367]\266\250|e0\215\206\357\016\344\361K\247\345q\261\347\244\276<\2744\240^\032\n\254\362\240P\211\257\007e8Px\377\360\225R\346\221[{SL\017\251w*\206\345\303\307\025\367\262j\260c\347\032&\347\231\017\236G\323"
 113      60E2 7016 
 113      6121 7378 
 113      C004 9C55 
 113      5807 295C 
 114 0427 01D0 4B98 	 .string "\001\320K\230\2261\222\311\330\274\033\301\006\224\251\\\260\037\373q\037\347*\204/\257\036j\345hR~x\034\031\033\302V\240\335\317:e\266}B\204\355k8\022\025\033b\341\245\300\002\032\0368\370\275\276\327\226r\177\247\321`\376Z\337\245\017\246\217\006 \221W\203\275Fs\252EM@&\211\202O\243a\355\256\315b\361\362\375_:\222\r\361z\206I%\322`Il#i\035(G\301@x\\\340G`ce\225\301\013?\243\224\036\334e\254\305\"\367\352s\343\b-fV\224\310G\r\031A8]\275\004RMA\230\t\300)P\363w\245\217\353\343\303A\364\251\r\364\310\0262\273\016]\325\307rY\374\261L\021\351a\355\023>tYfz3U\304\304\361&\207 uk\221\262T\027\t\341\006o\317lD\300[\325u|+\007iE\004\302X\250uk\334F ,\325\216\250\211"
 114      9631 92C9 
 114      D8BC 1BC1 
 114      0694 A95C 
 114      B01F FB71 
 115 051f A552 A86C 	 .ascii "\245R\250lzN|3q(1\030\255\211<\213v\236\305o\037I\026;\321dv"
 115      7A4E 7C33 
 115      7128 3118 
 115      AD89 3C8B 
 115      769E C56F 
 116 053a B3BE 3501 	 .ascii "\263\2765\001\231*\214ec j\002n\222\036N\365\335a<idjw\347\204"
 116      992A 8C65 
 116      6320 6A02 
 116      6E92 1E4E 
 116      F5DD 613C 
 117 0554 4F9A E80F 	 .ascii "O\232\350\017^\326\301\311c\2344'\305,\214A\303I3\304`\374\360"
 117      5ED6 C1C9 
 117      639C 3427 
 117      C52C 8C41 
 117      C349 33C4 
 118 056b 9460 DB62 	 .ascii "\224`\333b<i\006\216\365\361\272\235E\203rA\2344Y4*7O\317\323"
 118      3C69 068E 
 118      F5F1 BA9D 
 118      4583 7241 
 118      9C34 5934 
 119 0584 0525 9106 	 .ascii "\005%\221\006e2\215\004\3268,4\356!\007\315,Zp\337]\326_\004"
 119      6532 8D04 
 119      D638 2C34 
 119      EE21 07CD 
 119      2C5A 70DF 
 120 059c 1673 F86C 	 .ascii "\026s\370l\n\177\273\341\204>\350I\024\177\212(\213Z\315\354"
 120      0A7F BBE1 
 120      843E E849 
 120      147F 8A28 
 120      8B5A CDEC 
 121 05b0 0D9B 804C 	 .ascii "\r\233\200L\323\3270\231\027\277_McA\230\243\035\276c\271?\225"
 121      D3D7 3099 
 121      17BF 5F4D 
 121      6341 98A3 
 121      1DBE 63B9 
 122 05c6 8F8A EABA 	 .ascii "\217\212\352\272\352\266O;x(s\021\020\377a\002\251\030\256.c"
 122      EAB6 4F3B 
 122      7828 7311 
 122      10FF 6102 
 122      A918 AE2E 
 123 05db A43C 756C 	 .ascii "\244<ul*-\232\323\3536\035\261H\020h>x\276\247\263\230\356#1"
 123      2A2D 9AD3 
GAS LISTING  			page 10


 123      EB36 1DB1 
 123      4810 683E 
 123      78BE A7B3 
 124 05f3 CD53 63DD 	 .ascii "\315Sc\335\260i\032+\222\024\235\301\250h\264\006\246\033N\213"
 124      B069 1A2B 
 124      9214 9DC1 
 124      A868 B406 
 124      A61B 4E8B 
 125 0607 3C26 95CA 	 .ascii "<&\225\312\016\207\024\315\341\300G]>\257\325\234R\372/\030J"
 125      0E87 14CD 
 125      E1C0 475D 
 125      3EAF D59C 
 125      52FA 2F18 
 126 061c 27D2 1EC4 	 .ascii "'\322\036\304\003P?\330\363G\031\354\t|$\374\321\247O\324\322"
 126      0350 3FD8 
 126      F347 19EC 
 126      097C 24FC 
 126      D1A7 4FD4 
 127 0631 F813 354D 	 .ascii "\370\0235M\344^ ;\031\362\300\243Af\303FEw\031\333\331FK\370"
 127      E45E 203B 
 127      19F2 C0A3 
 127      4166 C346 
 127      4577 19DB 
 128 0649 CF09 B773 	 .ascii "\317\t\267s\353&~\375\352y\370\215/\334|\355\241\267\211\307"
 128      EB26 7EFD 
 128      EA79 F88D 
 128      2FDC 7CED 
 128      A1B7 89C7 
 129 065d A83B 471B 	 .ascii "\250;G\033\r\223)\231\272\223!\334y_\333$& \247\217h\222\360"
 129      0D93 2999 
 129      BA93 21DC 
 129      795F DB24 
 129      2620 A78F 
 130 0674 8009 B84C 	 .ascii "\200\t\270L}*\311(6\001\227%\254\023\225\3416\346\316N\303pc"
 130      7D2A C928 
 130      3601 9725 
 130      AC13 95E1 
 130      36E6 CE4E 
 131 068b C2B9 EBDC 	 .ascii "\302\271\353\334\304\17729#r\367\223\361R\177D\260\365\n\266"
 131      C47F 3239 
 131      2372 F793 
 131      F152 7F44 
 131      B0F5 0AB6 
 132 069f F3C6 140F 	 .ascii "\363\306\024\017\374c\360\370-\356\361\343\324\343\241\306\363"
 132      FC63 F0F8 
 132      2DEE F1E3 
 132      D4E3 A1C6 
 132      F3
 133 06b0 7A8F 53A9 	 .ascii "z\217S\251\307\331\"\200u\332;\250\t\310\234\221)\016\337\232"
 133      C7D9 2280 
 133      75DA 3BA8 
 133      09C8 9C91 
 133      290E DF9A 
 134 06c4 38DC 8CD1 	 .ascii "8\334\214\321\272\325\003\356\037\307\277e\037\277\316\317,|"
 134      BAD5 03EE 
 134      1FC7 BF65 
 134      1FBF CECF 
GAS LISTING  			page 11


 134      2C7C 
 135 06d6 859A 0B0E 	 .ascii "\205\232\013\016)u\210S\346\214^\320\324\013h\366\332I\366P\016"
 135      2975 8853 
 135      E68C 5ED0 
 135      D40B 68F6 
 135      DA49 F650 
 136 06eb FA40 E5E0 	 .ascii "\372@\345\340\331\231\374\2672\362Y\206\b\210\025\317$\347;\353"
 136      D999 FCB7 
 136      32F2 5986 
 136      0888 15CF 
 136      24E7 3BEB 
 137 06ff 8B16 2D28 	 .ascii "\213\026-(,\316{\033\370^\016\224\227\227\254\n\274\030(\361"
 137      2CCE 7B1B 
 137      F85E 0E94 
 137      9797 AC0A 
 137      BC18 28F1 
 138 0713 07D6 E6E5 	 .ascii "\007\326\346\345{\213\002\345\2415\357\226\007\212Wo\b\344=\225"
 138      7B8B 02E5 
 138      A135 EF96 
 138      078A 576F 
 138      08E4 3D95 
 139 0727 B0F8 BDC0 	 .ascii "\260\370\275\300\332\365+_Y\355wk\t\366\342\202%x\323^\034X\267"
 139      DAF5 2B5F 
 139      59ED 776B 
 139      09F6 E282 
 139      2578 D35E 
 140 073e A064 5D49 	 .ascii "\240d]Ir\341\242\302%\205\363_*\\Q\260\222\002\246h\266\230\250"
 140      72E1 A2C2 
 140      2585 F35F 
 140      2A5C 51B0 
 140      9202 A668 
 141 0755 67F1 D282 	 .ascii "g\361\322\202\242\327\031\207W}cDU\025F\343\252\360\213\013\253"
 141      A2D7 1987 
 141      577D 6344 
 141      5515 46E3 
 141      AAF0 8B0B 
 142 076a A212 6EBC 	 .ascii "\242\022n\274fDoQ\201\3665iaA\301\253H\335k\334\202d\261\303"
 142      6644 6F51 
 142      81F6 3569 
 142      6141 C1AB 
 142      48DD 6BDC 
 143 0782 98FE 0367 	 .ascii "\230\376\003gY\202\363"
 143      5982 F3
 144               	 .text
 145               	 .section .gnu.lto_.symbol_nodes.c517b98070d27f7f,"",@progbits
 146 0000 789C 4D8C 	 .ascii "x\234M\214;\n\002A\020\005k\272w\234\300\275\210\247\354\005"
 146      3B0A 0241 
 146      1005 6BBA 
 146      779C C0BD 
 146      88A7 EC05 
 147 0014 13C1 440C 	 .ascii "\023\301D\f\3144X#\275\207\251\036\301\317\250\340\017<\202="
 147      CC34 5823 
 147      BD87 A91E 
 147      C1CF A8E0 
 147      0F3C 823D 
 148 0028 B888 2F29 	 .ascii "\270\210/)\036]\375\004aM\027yb0\331\202\331|\024\342\205*\032"
 148      1E5D FD04 
GAS LISTING  			page 12


 148      614D 1779 
 148      6230 D982 
 148      D97C 14E2 
 149 003f F14C 74C8 	 .ascii "\361Lt\310\013\013\177\307\003R\231\306=\241\340\341\357\356"
 149      0B0B 7FC7 
 149      0352 99C6 
 149      3DA1 E0E1 
 149      EFEE 
 150 0051 5C31 E99C 	 .ascii "\\1\351\234\205;'ze \223\n\216\250#\3341\375:M\023\302\r\253"
 150      853B 277A 
 150      6520 930A 
 150      8EA8 23DC 
 150      31FD 3A4D 
 151 0069 7E4D B566 	 .ascii "~M\265f\271\252\013\362x\343\265\317p\352LJ;\333\211&h\363{\300"
 151      B9AA 0BF2 
 151      78E3 B5CF 
 151      70EA 4C4A 
 151      3BDB 8926 
 152 0081 0785 1E2D 	 .ascii "\007\205\036-\347"
 152      E7
 153               	 .text
 154               	 .section .gnu.lto_.refs.c517b98070d27f7f,"",@progbits
 155 0000 789C 75C9 	 .ascii "x\234u\311[\016\200 \020C\321\366\212\200l\306\325\271\177\206"
 155      5B0E 8020 
 155      1043 D1F6 
 155      8A80 6CC6 
 155      D5B9 7F86 
 156 0014 4762 FC70 	 .ascii "Gb\374p&M\323\034\204\036\255C\266I\007\211\223,\337E\325\227"
 156      264D D31C 
 156      841E AD43 
 156      B649 0789 
 156      932C DF45 
 157 002a DBCF 1316 	 .ascii "\333\317\023\026\321\\D\364\365-\2326\366+\273+M\035\302\246"
 157      D15C 44F4 
 157      F52D 9A36 
 157      F62B BB2B 
 157      4D1D C2A6 
 158 003e 02D3      	 .ascii "\002\323"
 159               	 .text
 160               	 .section .gnu.lto_.decls.c517b98070d27f7f,"",@progbits
 161 0000 789C AD5A 	 .string "x\234\255Z{t\024\325\031\237\273\273y\221\020\236\201\210\255\242E\245j\023|\034\217\177\264B\200C\315\321\b\202xz\252\236\270\315L\302\332d7\354n\250h\317a\022\236\006\r\341%A^A\004A\324\004H\302C\300\025K\260\322\032$&\321\0249\t\265\266ZE0\210\020\t\351w\0373sw\347\231\2249\374nf\276\271\337\357\336\373\335\337w\357\035\022\227\340\022\236t\013B/\\\r\367\bB\221G\020\340\237\360"
 161      7B74 14D5 
 161      199F BBBB 
 161      7991 109E 
 161      8188 ADA2 
 162 0086 2011 B019 	 .string " \021\260\031\020\007\330\002\330\t\250\003\324\003j"
 162      1007 D802 
 162      D809 A803 
 162      D403 6A00 
 163 0096 6F09 F4C2 	 .string "o\t\364\302\357\367\001\216\002Z"
 163      EFF7 018E 
 163      025A 00
 164 00a1 9F01 BE61 	 .string "\237\001\276a\376\337\001\316\003.\002\272\001W\261\003\022\004\027`(\022\242.\3141"
 164      FEDF 01CE 
 164      032E 02BA 
 164      0157 B103 
 164      1204 1760 
GAS LISTING  			page 13


 165 00bc 9000      	 .string "\220"
 166 00be 4805 A400 	 .string "H\005\244"
 167 00c2 0E00      	 .string "\016"
 168 00c4 8EB3 FEE0 	 .string "\216\263\376\3406\207#\332~\035\363A\314/\221qG"
 168      3687 23DA 
 168      7E1D F341 
 168      CC2F 9171 
 168      4700 
 169 00d6 4700      	 .string "G"
 170 00d8 69F0 6224 	 .string "i\360b$ \035p\035b\025\271\013\367u\230I[\343Y{x|\037\262\361\215Bt\374\337r\375\3001\271\036\321\030\2653^7\343\376\206\305!\035\320\0048\t8\001\370\031\324\277\0010\032p\023\340f\300/"
 170      201D 701D 
 170      6215 B90B 
 170      F775 9849 
 170      5BE3 597B 
 171 011c 6300      	 .string "c"
 172 011e B700      	 .string "\267"
 173 0120 6E05 DC06 	 .string "n\005\334\006\030\013\370%\340v\300\035\200;\001\277\002d \032\313\363,\266W\243\207E\342\177\013\356\007\322\306\025\307\372\254\214-\201\2155\023\352x\020\035\3538\370\231\005x\022\340\007<\017x\001\260\nP\rx\003\307\0350\0040\221\233\203\247\340>"
 173      180B F825 
 173      E076 C01D 
 173      803B 01BF 
 173      0264 201A 
 174 0170 6840 3456 	 .string "h@4V\215\200?\303}9`/`?<\257\306\261\303\343\204\373d\370\371  \033\360\020 \007\360\b`*\340Q\300\f\300L\300\343\200\337\001~\017\030\b\310\007<\003(\001\314\001\314\002<\013\230\013x\016\260\020P\tX\016X\fX\004X\tX\007X\017\330"
 174      8D80 3FC3 
 174      7D39 602F 
 174      603F 3CAF 
 174      C6B1 C3E3 
 175 01c5 D808 D805 	 .string "\330\b\330\005\330\r\250Ct\256Z\330|a\r\245\tT\227\373p\277\001\007"
 175      D80D A843 
 175      74AE 5AD8 
 175      7C61 0DA5 
 175      0954 97FB 
 176 01de EF00      	 .string "\357"
 177 01e0 0E02 0E01 	 .string "\016\002\016\001\0163\315v3\341\275\013\210"
 177      0E33 CD76 
 177      33E1 BD0B 
 177      8800 
 178 01ee DE03 1C01 	 .string "\336\003\034\001\274\017\370\013\340(\240\021p\f\360A\214\356\222\205rY.\223\253K\345\341U\251C\204J\031\256j"
 178      BC0F F80B 
 178      E028 A011 
 178      700C F041 
 178      8CEE 9285 
 179 0213 9A2D 2294 	 .ascii "\232-\"\224\244V\023\321\253h\b\357\367\004\022Qj\2220\230\334"
 179      A456 13D1 
 179      AB68 08EF 
 179      F704 1251 
 179      6A92 3098 
 180 0228 A424 41D6 	 .ascii "\244$A\326\322j\233Q\262=u\222\260\004?\310\313\253S\252RU\256"
 180      D26A 9B51 
 180      B23D 7592 
 180      B004 3FC8 
 180      CBAB 53AA 
 181 023f 4485 0B11 	 .ascii "D\205\013\021\315\274\006\025\300\007\251\225\345\224t\343\272"
 181      CDBC 0615 
 181      C007 A995 
 181      E594 74E3 
 181      BA
 182 0250 22DA      	 .ascii "\"\332"
GAS LISTING  			page 14


 183 0252 866E 81F2 	 .string "\206n\201\362u\326a\374\n\337\313\275\354B\363\024\323<\210(\211\251\321\345\224\201\365\241\n)\235\030F\234b\242\207+\233\324\024\321\016\026M68\032#R\303,\260op]KI\322n\206F\r@\251eJ\263\305\361\374\224\311\035\245\325c\270\371\031\255py\224\371\251\354h\352=\347\222e\217\352 \233:\210\350m2I\tI\302\355\302\016:\267\235IB\364\205\353'$i78\364\203\360\224\301R#\242Zt\273:\320\204(W\362\254T0!a\235\352\210WzUh4k5\332\254\305\326\024\321\356>\317\332\036\223Y\033\025\325\371=v\263\266\323d\326X\334qnX&Re\344B\002\230\352\021\246\274/6\226(&\226(:\226(I\273\351E\346\235\254\323:y\243\260Q\216\234\353\350\251\257\371\371\302%\035r\244\267w\2740BXM\362\270T\2360;QXL\372]\032\2310\333.\377Et"
 183      75D6 61FC 
 183      0ADF CBBD 
 183      EC42 F314 
 183      D33C 8828 
 184 0353 2542 23D9 	 .ascii "%B#\331\246Y\213\337+\321\243\367\312\0352&\307N\373\321\br\347"
 184      A659 8BDF 
 184      2BD1 A3F7 
 184      CA1D 3226 
 184      C74E FBD1 
 185 036a A6FD A733 	 .ascii "\246\375\2473\257>\214O\246?g\272\325v\\xO\340\0037F\330\"\313"
 185      AF3E 8C4F 
 185      A63F 67BA 
 185      D576 5C78 
 185      4FE0 0337 
 186 0382 2BE4 751B 	 .ascii "+\344u\033\240\223\210\372\273\004\t\327\331\207n4\311\001\\"
 186      A093 88FA 
 186      BB04 09D7 
 186      D987 6E34 
 186      C901 5C
 187 0395 4971 FC78 	 .ascii "Iq\374x5u\204\266\\\202/\306/*\272J\177n\025\266b\307w*\267\023"
 187      3575 84B6 
 187      5C82 2FC6 
 187      2F2A BA4A 
 187      7F6E 15B6 
 188 03af 473A D628 	 .ascii "G:\326(\267\230a\222\327\357\"\027\037/:7\221O\232\312<U\362"
 188      B798 6192 
 188      D7EF 2217 
 188      1F2F 3A37 
 188      914F 9ACA 
 189 03c6 3948 0D7E 	 .ascii "9H\r~b(\251Y\314\032\035\304\214=\032\311\224>\030\013\210\255"
 189      6228 A959 
 189      CC1A 1DC4 
 189      8C3D 1AC9 
 189      943E 180B 
 190 03dc 27CB E87A 	 .ascii "'\313\350z\"\242\343$\232\263c\245\032\027#\325\270h\251\306"
 190      22A2 E324 
 190      9AB3 63A5 
 190      1A17 23D5 
 190      B868 A9C6 
 191 03f0 2569 37BD 	 .ascii "%i7\275\275ns\255~\250iU?\317\317\351\347\271rEG\317\216MO-\226"
 191      BD6E 73AD 
 191      7EA8 6955 
 191      3FCF CFE9 
 191      E7B9 7245 
 192 040b 9F16 D15B 	 .ascii "\237\026\321[$?\336\203\250\212\350\250\351L\277\245\315t\244"
 192      243F DE83 
 192      A88A E8A8 
 192      E94C BFA5 
 192      CD74 A4
 193 041e 6DD9 B638 	 .ascii "m\331\2668y\034\233\351\025\bE;\032L5S\310e\246\020\334[\227"
 193      791C 9BE9 
 193      1508 453B 
 193      1A4C 3553 
 193      C865 A610 
 194 0435 B0C9 C691 	 .ascii "\260\311\306\221\215\211\212$\322\322T\341Y8N\023\311Qk\221|"
 194      8D89 8A24 
GAS LISTING  			page 15


 194      D2D2 54E1 
 194      5938 4E13 
 194      C951 6B91 
 195 044a A417 4975 	 .ascii "\244\027IuGd\303\342;\344\371\362U\330\377\242E\362@\232\251"
 195      4764 C3E2 
 195      3BE4 F9F2 
 195      55D8 FFA2 
 195      45F2 409A 
 196 045f 465A 9946 	 .ascii "FZ\231F\264\230\272\2047QtDY'\341Z\025A\204\r\327o\201\036FM"
 196      B498 BA84 
 196      3751 7444 
 196      5927 E15A 
 196      1541 840D 
 197 0479 4A9B BE4F 	 .ascii "J\233\276O\035\265\035\233>\272\330\211>\226+_\224/\365\366\036"
 197      1DB5 1D9B 
 197      3EBA D889 
 197      3E96 2B5F 
 197      942F F5F6 
 198 048e 43B2 7C6A 	 .ascii "C\262|j@t\347 \200\372\316\021Y\272\204/\021R4\352\022\316\""
 198      4074 E720 
 198      80FA CE11 
 198      59BA 842F 
 198      1152 34EA 
 199 04a5 A4C8 F506 	 .ascii "\244\310\365\006\341\"\332 '\nBt\017\332c\005\017\334\352}\026"
 199      E122 DA20 
 199      270A 4274 
 199      0FDA 6305 
 199      0FDC EA7D 
 200 04ba AF77 E712 	 .ascii "\257w\347\022?\277\254\265\013\225\311\023D\364\005\321\370f"
 200      3FBF ACB5 
 200      0B95 C913 
 200      44F4 05D1 
 200      F866 
 201 04cc D7FF 2B72 	 .ascii "\327\377+r\275\202\267Gq\262\341\326\270\270\261\3575;\004q\261"
 201      BD82 B747 
 201      71B2 E1D6 
 201      B8B8 B1EF 
 201      353B 0471 
 202 04e1 AEEC B8BC 	 .ascii "\256\354\270\274\362\223\261\033\313\345#\245p\020\032\217\034"
 202      F293 B11B 
 202      CBE5 23A5 
 202      7010 1A8F 
 202      1C
 203 04f2 8499 F6E5 	 .ascii "\204\231\366\345[U\003\235H\025A\247+V\004\264\312\331\350Y\276"
 203      5B55 039D 
 203      4815 41A7 
 203      2B56 04B4 
 203      CAD9 E859 
 204 0507 59D8 8C5B 	 .ascii "Y\330\214[\256_\363ZF\251\334\t!\275\332;\017\321\343\247K\270"
 204      AE5F F35A 
 204      46A9 DC09 
 204      21BD DA3B 
 204      0FD1 E3A7 
 205 051d A4E3 10D1 	 .ascii "\244\343\020\3219\315\037\373\2368\321\321s\271\335]*w@O\251"
 205      39CD 1FFB 
 205      9E38 D1D1 
 205      73B9 DD5D 
GAS LISTING  			page 16


 205      2A77 404F 
 206 0532 EF6B C4F7 	 .ascii "\357k\304\367\252\352kp*cQY\343\346R\342{F|\203\260\305\275A"
 206      AAEA 6B70 
 206      2A63 5159 
 206      E3E6 52E2 
 206      7B46 7C83 
 207 054a AE9A 4089 	 .ascii "\256\232@\211\224V\"\315=I\220\033X\204\t\"z\2234\261\327\035"
 207      9456 22CD 
 207      3D49 901B 
 207      5884 0922 
 207      7A93 34B1 
 208 0560 D304 7F84 	 .ascii "\323\004\177\204 M\210\350\202\326]\021\375\310\036\356\025\366"
 208      204D 88E8 
 208      82D6 5D11 
 208      FDC8 1EEE 
 208      15F6 
 209 0572 C84B 22B5 	 .ascii "\310K\"\265\214\2109\253\007\230\3222\217bC\212\255l\201js\251"
 209      8C88 39AB 
 209      0798 D232 
 209      8F62 438A 
 209      AD6C 816A 
 210 0588 36AD 9E5B 	 .ascii "6\255\236[\261\315\327l\036\305\266@\263\305)\266E\232-^\261"
 210      B1CD D76C 
 210      1EC5 B640 
 210      B3C5 29B6 
 210      459A 2D5E 
 211 059d 2DD7 6C09 	 .ascii "-\327l\t\212"
 211      8A
 212 05a2 6DB1 664B 	 .string "m\261fKTl\345\232-I\261-\325l\003\024\333\213\232-Y\261\275\244\331R\024[\205f\033h\320\227T\305\266J\263\r\322b\245n_\203\265\270\250\266!Z\\T\333P-.\252m\230b[\250\331\206km,P\215iZ#\232q\204\326\212f\034\2515\243\031\3235\316%\252\361:\215S3\216\3228\227$*yr\"\362Y\343z$\327\3128A\347\305\034e\353\265\243l\265\232\242\013\224\034\375\251\317g\331+&g\331\371J\316\270\204\246\330\0040h\270':_\253OF*\217\271\253drHTNQgby\2426W\314\322\313X\236`'/\215\255{\221Ke\243\007\336\256X6\335\202U\352\322\330\352\243\330N7*lQ'\232\241\302r\032\3522\b\265\272\334OPx\023\225\005\245\314\303\202\303\026\377=g\316\375\032>~\022E\264\3005\024\336\037\363D/h\266\274\"Z\350r\223>\277"
 212      546C E59A 
 212      2D49 B12D 
 212      D56C 0314 
 212      DB8B 9A2D 
 213 06a3 04D4 959E 	 .ascii "\004\324\225\236\225#\253\233\006\312.j\027\fVZv\335$\200>\312"
 213      9523 AB9B 
 213      06CA 2E6A 
 213      170C 565A 
 213      76DD 2480 
 214 06b9 226B 9B2A 	 .ascii "\"k\233*\022\344\332qJ\300O\223~`W\243\200\2533\256\304(5)\206"
 214      12E4 DA71 
 214      4AC0 4F93 
 214      7E60 57A3 
 214      80AB 33AE 
 215 06d2 EE95 2677 	 .ascii "\356\225&wU\272B\366\265\0232\217\001\231\321\305\017TD\345."
 215      55BA 42F6 
 215      B513 328F 
 215      0199 D1C5 
 215      0F54 44E5 
 216 06e7 FC0D B9D4 	 .ascii "\374\r\271\324u\023\224/A\251^f\242\235\357R\017z\260}xb\204"
 216      7513 942F 
 216      41A9 5E66 
 216      A29D EF52 
 216      0F7A B07D 
 217 06fe A0AB BE8C 	 .ascii "\240\253\276\214\t\341y\241[^\"w\364\034z\251\034\241\250\231"
 217      09E1 79A1 
 217      5B5E 2277 
 217      F41C 7AA9 
GAS LISTING  			page 17


 217      1CA1 A899 
 218 0712 A799 63E6 	 .ascii "\247\231c\346\277\\kND\335\350f^\346?4\256\367@\252\3128U\225"
 218      BF5C 6B4E 
 218      44DD E866 
 218      5EE6 3F34 
 218      AEF7 40AA 
 219 072a 8F9A 4571 	 .ascii "\217\232Eqv\322\\\311I\223}\350\304\364\207\373d\325\365g\225"
 219      76D2 5CC9 
 219      4993 7DE8 
 219      C4F4 87FB 
 219      64D5 F567 
 220 073f D61F 7616 	 .ascii "\326\037v\026\375\307\232\243h!>\306\322\023\366\2528\353\017"
 220      FDC7 9AA3 
 220      6821 3EC6 
 220      D213 F6AA 
 220      38EB 0F
 221 0752 0F5C 0BE6 	 .ascii "\017\\\013\346o\023\376\206\334\324^:m\260z\\\333\307\037\327"
 221      6F13 FE86 
 221      DCD4 5E3A 
 221      6DB0 7A5C 
 221      DBC7 1FD7 
 222 0766 588D 8B6B 	 .ascii "X\215\213k\3448dU\2432Rf\362>fP\370\ba6\250W\\\306_\303\364\274"
 222      E438 6455 
 222      A332 5266 
 222      F23E 6650 
 222      F808 6136 
 223 0782 66E6 B54E 	 .ascii "f\346\265N\027\212\226e\007\265c\371\3728\307\307\362\375\215"
 223      178A 9665 
 223      07B5 63F9 
 223      FA38 C7C7 
 223      F2FD 8D
 224 0795 AE74 257E 	 .ascii "\256t%~\333l\334\270\370E\215\375\250A\364\272\232\370\370\032"
 224      DB6C DCB8 
 224      F845 8DFD 
 224      A841 F4BA 
 224      9AF8 F81A 
 225 07a9 D5D8 B882 	 .ascii "\325\330\270\202\217\257Q\215\203\2665\272mk|\272\322\256\306"
 225      8FAF 518D 
 225      83B6 35BA 
 225      6D6B 7CBA 
 225      D2AE C6
 226 07bc 295B 8EF5 	 .ascii ")[\216\365\266\034\r/\333\325\250\\cW\343\200m+\225\266"
 226      B61C 0D2F 
 226      DBD5 A85C 
 226      6357 E380 
 226      6D2B 95B6 
 227 07d0 3DFD C4B6 	 .ascii "=\375\304\266\037\027m[\2512\347\210Q(^\217\314\024Zc\242k\343"
 227      1F17 6D5B 
 227      A932 E788 
 227      5128 5E8F 
 227      CC14 5A63 
 228 07e7 4D21 A21E 	 .ascii "M!\242\036_\323\225\263\345\"\266Vh\273MG6\335mv\221\335\246"
 228      5FD3 95B3 
 228      E522 B656 
 228      68BB 4D47 
 228      36DD 6D76 
 229 07fe 36CE C96E 	 .ascii "6\316\311n\303\023\213h7\333n\352c\267\2335'\311vS\357h\273Y"
GAS LISTING  			page 18


 229      C313 8B68 
 229      37DB 6EEA 
 229      63B7 9B35 
 229      27C9 7653 
 230 0816 7792 DB6E 	 .ascii "w\222\333nD\364\242\313\305(\373\267\335\254?\251n7\"\252pBf"
 230      44F4 A2CB 
 230      C528 FBB7 
 230      DDAC 3FA9 
 230      6E37 22AA 
 231 082d B4DD 30B2 	 .ascii "\264\3350\262\215'\271\275\3538\t\221\rY\2429\331n\236\254\305"
 231      8D27 B9BD 
 231      EB38 0991 
 231      0D59 A239 
 231      D96E 9EAC 
 232 0842 0959 8A39 	 .ascii "\tY\2129Y\035Ov\306\t\331`s\262\006\236\354;'d\303\r\310\214"
 232      591D 4F76 
 232      C609 D960 
 232      73B2 069E 
 232      EC3B 2764 
 233 085a 2E5E 1C22 	 .ascii ".^\034\"j [\364^\262E\357#\345~R\276C\312C\244|\327\311\326]"
 233      6A20 5BF4 
 233      5EB2 45EF 
 233      23E5 7E52 
 233      BE43 CA43 
 234 0874 DBA7 74A8 	 .ascii "\333\247t\250v+\376\367\232\244Cdm\363p\254\330#$\027z\035\345"
 234      762B FEF7 
 234      9AA4 4364 
 234      6DF3 70AC 
 234      D823 2417 
 235 088b 02CF 2AA2 	 .ascii "\002\317*\242\367Y.4\306\346\302g4\027\032\035\345\302\347F\271"
 235      F759 2E34 
 235      C6E6 C267 
 235      3417 1A1D 
 235      E5C2 E746 
 236 08a0 D0D8 EF5C 	 .ascii "\320\330\357\\8\255\317\005\0332\213\\8\307\223\035pBf\221\013"
 236      38AD CF05 
 236      1B32 8B5C 
 236      38C7 931D 
 236      7042 6691 
 237 08b5 DFF3 8A5B 	 .ascii "\337\363\212[\027\217\354\311,r\341\"\337\263\203Nzf\221\013"
 237      178F ECC9 
 237      2C72 E122 
 237      DFB3 834E 
 237      7A66 910B 
 238 08c9 9778 B2C3 	 .ascii "\227x\262\303N\310\214r\201\221u\363\303|\325\3110\323\315\311"
 238      4EC8 8C72 
 238      8191 75F3 
 238      C37C D5C9 
 238      30D3 CDC9 
 239 08dd AEF0 646F 	 .ascii "\256\360do;!\373\2319\331U\236\254\336\t\331hs\262\312f.f\021"
 239      3B21 FB99 
 239      39D9 559E 
 239      ACDE 09D9 
 239      6873 B2CA 
 240 08f5 2731 1B63 	 .ascii "'1\033cN\266\242\231_s\235\364l\2549\331*\236\254\323\t\331\235"
 240      4EB6 A299 
 240      5F73 9DF4 
GAS LISTING  			page 19


 240      6CAC 39D9 
 240      2A9E ACD3 
 241 090c E664 2FF3 	 .ascii "\346d/\363dg\235\220\2153 3\272\370uCD\307\3102\371\001Y\016"
 241      6467 9D90 
 241      8D33 2033 
 241      BAF8 7543 
 241      44C7 C832 
 242 0924 FF4A CA0F 	 .ascii "\377J\312\017Iy\234\224\177'\345G\244l\"\345\307\244l&e\013)"
 242      4979 9C94 
 242      7F27 E547 
 242      A46C 22E5 
 242      C7A4 6C26 
 243 093b 5B49 F929 	 .ascii "[I\371))\333\235,\250\357\365iA\355@\232\302L\026\324\345\355"
 243      29DB 9D2C 
 243      A8EF F569 
 243      41ED 409A 
 243      C24C 16D4 
 244 0951 6441 FD9C 	 .ascii "dA\375\234,\250\227\343\235,\250<\253\210N\263\005\2653vA\375"
 244      2CA8 97E3 
 244      9D2C A83C 
 244      AB88 4EB3 
 244      05B5 3376 
 245 0967 BC8D 2CA8 	 .ascii "\274\215,\250\235\216\026\324\363m\006\013jg\277\027\324\357"
 245      9D8E 16D4 
 245      F36D 060B 
 245      6A67 BF17 
 245      D4EF 
 246 0979 DB74 0BAA 	 .ascii "\333t\013\252\r\231\305\202z\241M\267\240\332\220Y,\250\227\332"
 246      0D99 C582 
 246      7AA1 4DB7 
 246      A0DA 9059 
 246      2CA8 97DA 
 247 098d 386D 2E4B 	 .ascii "8m.K@\366d\026\013j7O\266\322\t\231\305\202z\205'\333\351\204"
 247      40F6 6416 
 247      0B6A 374F 
 247      B6D2 0999 
 247      C582 7A85 
 248 09a5 CC62 41BD 	 .ascii "\314bA\275\312\223\275\357\204\314hA5\272x\245\211\350\fI\301"
 248      CA93 BDEF 
 248      84CC 6841 
 248      35BA 78A5 
 248      89E8 0C49 
 249 09ba 7F92 04FA 	 .ascii "\177\222\004\372\202\224\377\"\345\227\244\374\017)\277&\345"
 249      8294 FF22 
 249      E597 A4FC 
 249      0F29 BF26 
 249      E5
 250 09cb 374E D2EB 	 .ascii "7N\322\353\3245>\276G\232iz}G\322\353dB\337\317\356\347Xzu\305"
 250      D435 3EBE 
 250      479A 697A 
 250      7D47 D2EB 
 250      6442 DFCF 
 251 09e5 A6D7 AE76 	 .ascii "\246\327\256v\222^]\216\322\253\276\335 \275\272\372\235^\r\355"
 251      925E 5D8E 
 251      D2AB BEDD 
 251      20BD BAFA 
 251      9D5E 0DED 
GAS LISTING  			page 20


 252 09f9 BAF4 B221 	 .ascii "\272\364\262!\263H\257}\355\272\364\262!\263H\257\003<\331\337"
 252      B348 AF7D 
 252      EDBA F4B2 
 252      21B3 48AF 
 252      033C D9DF 
 253 0a0d 9C90 59A4 	 .ascii "\234\220Y\244\327a\236\354+'d\026\351u\202'\373\257\0232\347"
 253      D761 9EEC 
 253      2B27 6416 
 253      E975 8227 
 253      FBAF 1332 
 254 0a22 67F7 2E2E 	 .ascii "g\367..#.\220\214\370\201h\376\")\177$\345%R^&e\267\223\\8{\315"
 254      232E 908C 
 254      F881 68FE 
 254      2229 7F24 
 254      E525 525E 
 255 0a3e B79A 3692 	 .ascii "\267\2326\222\013WH.|\345(\027\242\267\232\036\226\013\262;v"
 255      0B57 482E 
 255      7CE5 2817 
 255      A2B7 9A1E 
 255      960B B23B 
 256 0a53 AB69 25B9 	 .ascii "\253i%\271\200\355\016\266\232V\203\\\300\256\375\334jZu\271"
 256      80ED 0EB6 
 256      9A56 835C 
 256      C0AE FDDC 
 256      6A5A 75B9 
 257 0a67 6043 66B5 	 .ascii "`Cf\265\325\264\352r\301\206\314j\253\341\311\376\355\204\314"
 257      D5B4 EA72 
 257      C186 CC6A 
 257      ABE1 C9FE 
 257      ED84 CC
 258 0a7a 6AAB 69D5 	 .ascii "j\253i\325\345\202\r\231\325V\323\252\313\005\0332\253\255\206"
 258      E582 0D99 
 258      D556 D3AA 
 258      CB05 1B32 
 258      ABAD 86
 259 0a8d 27FB D609 	 .ascii "'\373\326\t\231\363\255FS\232\210J\3358\261\312\3348\201\346"
 259      99F3 AD46 
 259      539A 884A 
 259      DD38 B1CA 
 259      DC38 81E6 
 260 0aa1 9372 0129 	 .ascii "\223r\001)\027\222r\021)\027\223r\211\333Az\375\324\247\364\222"
 260      1792 7211 
 260      2917 9372 
 260      89DB 417A 
 260      FDD4 A7F4 
 261 0ab6 9116 5693 	 .ascii "\221\026V\223\364:D\323\253\334\215\323\253\307Qz\361\254\"Z"
 261      F43A 44D3 
 261      ABDC 8DD3 
 261      ABC7 517A 
 261      F1AC 225A 
 262 0aca EAA6 E955 	 .ascii "\352\246\351U\021\233^\273\350I\256\302Qz\325\033\235\344*\372"
 262      119B 5EBB 
 262      E849 AEC2 
 262      517A D51B 
 262      9DE4 2AFA 
 263 0ade 9D5E 0DFA 	 .ascii "\235^\r\372\223\234\r\231\325V\243?\311\331\220Ym5m\272\255\306"
 263      939C 0D99 
GAS LISTING  			page 21


 263      D556 A33F 
 263      C9D9 9059 
 263      6D35 6DBA 
 264 0af4 86CC 28BD 	 .ascii "\206\314(\275\214uW\301\351n\031\321]%Q\326rR\256 \345J'*{\301"
 264      8C75 57C1 
 264      E96E 19D1 
 264      5D25 51D6 
 264      7252 AE20 
 265 0b0e 7DAD 55D6 	 .ascii "}\255U\326JT\266\232\250lEb\337U\3662S\331\332X\225m\242\213"
 265      4A54 B69A 
 265      A86C 4562 
 265      DF55 F632 
 265      53D9 DA58 
 266 0b26 F85A 472A 	 .ascii "\370ZG*\333c\264\210\257\355\267\312\352\364\213\270\r\231\205"
 266      DB63 B488 
 266      AFED B7CA 
 266      EAF4 8BB8 
 266      0D99 85
 267 0b39 CA1A 5A75 	 .ascii "\312\032Zu\302\260!\263RY+w\220\336A\342mC\346\\ek9\225\275B"
 267      C2B0 21B3 
 267      5259 2B77 
 267      90DE 41E2 
 267      6D43 E65C 
 268 0b53 54B6 8E28 	 .ascii "T\266\216(k=)7\220r\243\023\225\255\352\223\312\236\326zjvj\246"
 268      6B3D 2937 
 268      9072 A313 
 268      95AD EA93 
 268      CA9E D67A 
 269 0b6b FFCB B799 	 .ascii "\377\313\267\231\210l\277#\221q\244\"z\225ilk\254\306\3667\023"
 269      886C BF23 
 269      9171 A422 
 269      7A95 696C 
 269      6BAC C6F6 
 270 0b81 8D6D 75A4 	 .ascii "\215mu\244\261C\315\006\032\333\332o\215\035n\326i\314\206\314"
 270      B143 CD06 
 270      1ADB DA6F 
 270      8D1D 6ED6 
 270      69CC 86CC 
 271 0b95 4263 279A 	 .ascii "Bc'\232u+\231\r\231\221\306\214e\261\225\223\3056\"\213\327\211"
 271      752B 990D 
 271      9991 C68C 
 271      65B1 9593 
 271      C536 228B 
 272 0bab 14B6 9372 	 .ascii "\024\266\223r\207\023AT_\353e\247\227*b'QDs?\226\2357\231$jb"
 272      8713 4154 
 272      5FEB 65A7 
 272      972A 6227 
 272      5144 733F 
 273 0bc6 25D1 4525 	 .ascii "%\321E%Q\343H\022?\032I\242\246\337\222\270\244\227\204\r\231"
 273      51E3 4812 
 273      3F1A 49A2 
 273      A6DF 92B8 
 273      A497 840D 
 274 0bdb 8524 BAF5 	 .ascii "\205$\272\365\222\260!\263Xv\2564\353\3260\0332\347\313N\r\247"
 274      92B0 21B3 
 274      5876 AE34 
 274      EBD6 301B 
GAS LISTING  			page 22


 274      32E7 CB4E 
 275 0bf1 AF5A A2AF 	 .ascii "\257Z\242\257]DY\273I\271\207\224uNT\366\206\211\312\242\376"
 275      5D44 59BB 
 275      49B9 8794 
 275      754E 54F6 
 275      8689 CAA2 
 276 0c06 0256 E755 	 .ascii "\002V\347Uo\352\325h\361\253\347\006S\257\375\026^{5/\203_ \267"
 276      6FEA D568 
 276      F1AB E706 
 276      53AF FD16 
 276      5E7B 352F 
 277 0c1e E87F 0DD9 	 .ascii "\350\177\r\331\321\363C\205[.\367X\325\211l,\347\177UiT\343\204"
 277      D1F3 4385 
 277      5B2E F758 
 277      D589 6C2C 
 277      E77F 5569 
 278 0c35 6D8D D6A5 	 .ascii "m\215\326\245v5vW\330\3258e^\3436a\033N\256\372\366\355\023\006"
 278      7635 7657 
 278      D8D5 3865 
 278      5EE3 3661 
 278      1B4E AEFA 
 279 0c4d 47FD 4905 	 .ascii "G\375I\005\377Z\256\250LT\377\364\307\370e\202\361\273r\374\256"
 279      FF5A AEA8 
 279      4C54 FFF4 
 279      C7F8 6582 
 279      F1BB 72FC 
 280 0c62 0EF5 8395 	 .ascii "\016\365\203\225x\2167v$\357\216[9\366k \306\264\202'o\2267x"
 280      788E 3776 
 280      24EF 8E5B 
 280      39F6 6B20 
 280      C6B4 8227 
 281 0c7a 4366 4928 	 .ascii "CfI(\230Y\350\373C\246wN0\323\347\317+,\021\245\314PX\364\371"
 281      9859 E8FB 
 281      43A6 774E 
 281      30D3 E7CF 
 281      2B2C 11A5 
 282 0c93 C319 B384 	 .ascii "\303\031\263\204\370\337>2s\364$!\261\004\036\357\271;7\234\200"
 282      F8DF 3E32 
 282      73F4 2421 
 282      B104 1EEF 
 282      B93B 379C 
 283 0ca8 6FEE CF0D 	 .ascii "o\356\317\r\017(\232;\375\221\311\33132\362\204\270\334\211\201"
 283      0F28 9A3B 
 283      FD91 C9D9 
 283      3332 F284 
 283      B8DC 8981 
 284 0cbc 4061 DAB4 	 .ascii "@a\332\264` O\n\205\260q\206\024\316\360\205\202\336\214q\356"
 284      6020 4F0A 
 284      85B0 7186 
 284      14CE F085 
 284      82DE 8C71 
 285 0cd1 A9D9 6202 	 .ascii "\251\331b\002<N\366\206\275\204\343\256\373r\303#\271\252\217"
 285      3C4E F686 
 285      BD84 E3AE 
 285      FB72 C323 
 285      B9AA 8F
 286 0ce4 9648 C1B9 	 .ascii "\226H\301\271\264\362])\323\245Pq\300\037\222pm\365a\206\357"
GAS LISTING  			page 23


 286      B4F2 5D29 
 286      D3A5 5071 
 286      C01F 9270 
 286      6DF5 6186 
 287 0cf9 3969 14F3 	 .ascii "9i\024\363 MN\n\370\303\301@a\016<{\013$\263\376\007}\376\002"
 287      204D 4E0A 
 287      F8C3 C140 
 287      610E 3C7B 
 287      0B24 B3FE 
 288 0d11 E87F 823F 	 .ascii "\350\177\202?\340\367\227\024\026&\344\373G\207\212\245<t\327"
 288      E0F7 9714 
 288      1626 E4FB 
 288      4787 8AA5 
 288      3C74 D7
 289 0d24 58D5 A120 	 .ascii "X\325\241 /\2178\335\233q\177\306\335\374\320E)\037\017=\004"
 289      2F8F 38DD 
 289      9B71 7FC6 
 289      DDFC D045 
 289      291F 0F3D 
 290 0d39 2DE7 86E3 	 .ascii "-\347\206\343\213\244\242\274\342\271@\024\236\025\f\374\311"
 290      8BA4 A2BC 
 290      E2B9 4014 
 290      9E15 0CFC 
 290      C9
 291 0d4a 5328 79F3 	 .ascii "S(y\363\307\0306\212\357\213\013\212B\305\336<\t\374\023\251"
 291      C718 368A 
 291      EF8B 0B8A 
 291      42C5 DE3C 
 291      09FC 13A9 
 292 0d5e 63EE B481 	 .ascii "c\356\264\201RxVn^\300\237\357\303=\212\313\231\233\2235)=K\364"
 292      5278 566E 
 292      5EC0 9FEF 
 292      C33D 8ACB 
 292      999B 9335 
 293 0d76 1687 A5E0 	 .ascii "\026\207\245\340\343\222_\f\004'K\241\274\240\2578\354\013\370"
 293      E392 5F0C 
 293      0427 4BA1 
 293      BCA0 AF38 
 293      EC0B F8
 294 0d89 9373 738B 	 .ascii "\223ss\213\203\201\002\360\315\315\035\366\360\314)Y\243\311"
 294      8381 02F0 
 294      CDCD 1DF6 
 294      F0CC 2959 
 294      A3C9 
 295 0d9b A047 B3FA 	 .ascii "\240G\263\372\302Hv3\243\244\2708\020\fK\342\324\354\311\017"
 295      C248 7633 
 295      A3A4 B838 
 295      100C 4BE2 
 295      D4EC C90F 
 296 0daf FB42 E1A1 	 .ascii "\373B\341\241\244\032\013\312\304\222\374|)8xRI08\315\233\367"
 296      A41A 0BCA 
 296      C492 FC7C 
 296      2938 7852 
 296      4930 38CD 
 297 0dc5 4729 3CC5 	 .ascii "G)<\305W\b>\251\330@\352\315\b{\303R|1~'\376&#\023\267\22399"
 297      5708 3EA9 
 297      D840 EACD 
GAS LISTING  			page 24


 297      087B C352 
 297      7C31 7E27 
 298 0de1 E89B 2305 	 .ascii "\350\233#\005C\2313gL\314\234T\350\r\2052'Ks|yRfFF\346\244@Q"
 298      4399 3367 
 298      4CCC 9C54 
 298      E80D 8532 
 298      274B 737C 
 299 0dfe 51C0 9F49 	 .ascii "Q\300\237I\343\217\337Q\003\fg\004\261\345\262\206s\037\224\274"
 299      E38F DF51 
 299      030C 6704 
 299      B1E5 B286 
 299      731F 94BC 
 300 0e12 A214 CC0D 	 .ascii "\242\024\314\r'3\303cs\213\245\201\354\376a\311_\020\236\245"
 300      2733 C363 
 300      738B A581 
 300      ECFE 61C9 
 300      5F10 9EA5 
 301 0e26 3CD1 9A03 	 .ascii "<\321\232\003\225i\236\016\217s\261T\360|'\021Y`\031\320;\242"
 301      9569 9E0E 
 301      8F73 B154 
 301      F07C 2711 
 301      5960 19D0 
 302 0e3c 01DA 50B6 	 .ascii "\001\332P\266\337\027\366y\013\361\324(m\206\223\246K\263K\244"
 302      DF17 F679 
 302      0BF1 D428 
 302      6D86 93A6 
 302      4BB3 4BA4 
 303 0e50 5038 5B4C 	 .ascii "P8[L\311\361>\023\200\240\006C\020\312\224\034\237_}\030\224"
 303      C9F1 3E13 
 303      80A0 0643 
 303      10CA 941C 
 303      9F5F 7D18 
 304 0e65 E37D F6B1 	 .ascii "\343}\366\261\240\327\037\202\300`\272\353ut0\244\342B)\214\247"
 304      A0D7 1F82 
 304      C060 BAEB 
 304      7574 30A4 
 304      E242 298C 
 305 0e7a 1C87 A724 	 .ascii "\034\207\247$\224L\307?\245\320[\020\212\317\221D_IQ\032\260"
 305      944C C73F 
 305      A5D0 5B10 
 305      8ACF 9144 
 305      5F49 511A 
 306 0e8f D088 86A6 	 .ascii "\320\210\206\246IA\205/\215\232\262\n}\005\376\"\311\037\236"
 306      4941 852F 
 306      8D9A B20A 
 306      7D05 FE22 
 306      C91F 9E
 307 0ea2 E2CD 0B07 	 .ascii "\342\315\013\007\202)YS\360\304L\315\317\017I\341\001\364\001"
 307      8229 5953 
 307      F0C4 4CCD 
 307      CF0F 49E1 
 307      01F4 01
 308 0eb5 B79C 465B 	 .ascii "\267\234F[&\003\323\306\340\236\352\023Gf\373\363\003\301\"/"
 308      2603 D3C6 
 308      E09E EA13 
 308      4766 FBF3 
 308      03C1 222F 
GAS LISTING  			page 25


 309 0ec9 D601 9D42 	 .ascii "\326\001\235B\0322\275\235\222\246\322\016>\236\367\240\327/"
 309      1A32 BD9D 
 309      92A6 D20E 
 309      3E9E F7A0 
 309      D72F 
 310 0edb 164A 2378 	 .ascii "\026J#xbm4\303\250\031B\253\2656\\\263i\025\231?\314H\224yP\226"
 310      626D 34C3 
 310      A819 42AB 
 310      B536 5CB3 
 310      6915 993F 
 311 0ef5 2806 C111 	 .ascii "(\006\301\021\022\212\274\272\216V{H\222\212a\304s\270y\030\025"
 311      128A BCBA 
 311      8E56 7B48 
 311      928A 61C4 
 311      73B8 7918 
 312 0f0a FB46 23F9 	 .ascii "\373F#\371\037\272\344\003\242"
 312      1FBA E403 
 312      A2
 313               	 .text
 314               	 .section .gnu.lto_.symtab.c517b98070d27f7f,"",@progbits
 315 0000 4375 7272 	 .string "CurrPacketFilter"
 315      5061 636B 
 315      6574 4669 
 315      6C74 6572 
 315      00
 316 0011 00        	 .string ""
 317 0012 00        	 .string ""
 318 0013 00        	 .string ""
 319 0014 00        	 .string ""
 320 0015 00        	 .string ""
 321 0016 00        	 .string ""
 322 0017 00        	 .string ""
 323 0018 00        	 .string ""
 324 0019 00        	 .string ""
 325 001a 00        	 .string ""
 326 001b 00        	 .string ""
 327 001c FE00      	 .string "\376"
 328 001e 00        	 .string ""
 329 001f 00        	 .string ""
 330 0020 4375 7272 	 .string "CurrRNDISState"
 330      524E 4449 
 330      5353 7461 
 330      7465 00
 331 002f 00        	 .string ""
 332 0030 00        	 .string ""
 333 0031 00        	 .string ""
 334 0032 00        	 .string ""
 335 0033 00        	 .string ""
 336 0034 00        	 .string ""
 337 0035 00        	 .string ""
 338 0036 00        	 .string ""
 339 0037 00        	 .string ""
 340 0038 00        	 .string ""
 341 0039 00        	 .string ""
 342 003a 00        	 .string ""
 343 003b 0100      	 .string "\001"
 344 003d 00        	 .string ""
GAS LISTING  			page 26


 345 003e 5072 6F63 	 .string "ProcessRNDISControlMessage"
 345      6573 7352 
 345      4E44 4953 
 345      436F 6E74 
 345      726F 6C4D 
 346 0059 00        	 .string ""
 347 005a 00        	 .string ""
 348 005b 00        	 .string ""
 349 005c 00        	 .string ""
 350 005d 00        	 .string ""
 351 005e 00        	 .string ""
 352 005f 00        	 .string ""
 353 0060 00        	 .string ""
 354 0061 00        	 .string ""
 355 0062 00        	 .string ""
 356 0063 00        	 .string ""
 357 0064 D500      	 .string "\325"
 358 0066 00        	 .string ""
 359 0067 00        	 .string ""
 360 0068 4D65 7373 	 .string "MessageHeader"
 360      6167 6548 
 360      6561 6465 
 360      7200 
 361 0076 00        	 .string ""
 362 0077 00        	 .string ""
 363 0078 00        	 .string ""
 364 0079 00        	 .string ""
 365 007a 00        	 .string ""
 366 007b 00        	 .string ""
 367 007c 00        	 .string ""
 368 007d 00        	 .string ""
 369 007e 00        	 .string ""
 370 007f 00        	 .string ""
 371 0080 00        	 .string ""
 372 0081 0201 00   	 .string "\002\001"
 373 0084 00        	 .string ""
 374 0085 5265 7370 	 .string "ResponseReady"
 374      6F6E 7365 
 374      5265 6164 
 374      7900 
 375 0093 00        	 .string ""
 376 0094 00        	 .string ""
 377 0095 00        	 .string ""
 378 0096 00        	 .string ""
 379 0097 00        	 .string ""
 380 0098 00        	 .string ""
 381 0099 00        	 .string ""
 382 009a 00        	 .string ""
 383 009b 00        	 .string ""
 384 009c 00        	 .string ""
 385 009d 00        	 .string ""
 386 009e 1201 00   	 .string "\022\001"
 387 00a1 00        	 .string ""
 388 00a2 524E 4449 	 .string "RNDISMessageBuffer"
 388      534D 6573 
 388      7361 6765 
 388      4275 6666 
GAS LISTING  			page 27


 388      6572 00
 389 00b5 00        	 .string ""
 390 00b6 0400      	 .string "\004"
 391 00b8 8400      	 .string "\204"
 392 00ba 00        	 .string ""
 393 00bb 00        	 .string ""
 394 00bc 00        	 .string ""
 395 00bd 00        	 .string ""
 396 00be 00        	 .string ""
 397 00bf 00        	 .string ""
 398 00c0 FA00      	 .string "\372"
 399 00c2 00        	 .string ""
 400 00c3 00        	 .string ""
 401 00c4 4D79 4D41 	 .string "MyMAC"
 401      4300 
 402 00ca 00        	 .string ""
 403 00cb 0200      	 .string "\002"
 404 00cd 00        	 .string ""
 405 00ce 00        	 .string ""
 406 00cf 00        	 .string ""
 407 00d0 00        	 .string ""
 408 00d1 00        	 .string ""
 409 00d2 00        	 .string ""
 410 00d3 00        	 .string ""
 411 00d4 00        	 .string ""
 412 00d5 EF00      	 .string "\357"
 413 00d7 00        	 .string ""
 414 00d8 00        	 .string ""
 415 00d9 6D65 6D63 	 .string "memcpy_P"
 415      7079 5F50 
 415      00
 416 00e2 00        	 .string ""
 417 00e3 0200      	 .string "\002"
 418 00e5 00        	 .string ""
 419 00e6 00        	 .string ""
 420 00e7 00        	 .string ""
 421 00e8 00        	 .string ""
 422 00e9 00        	 .string ""
 423 00ea 00        	 .string ""
 424 00eb 00        	 .string ""
 425 00ec 00        	 .string ""
 426 00ed EC00      	 .string "\354"
 427 00ef 00        	 .string ""
 428 00f0 00        	 .string ""
 429               	 .text
 430               	 .section .gnu.lto_.opts,"",@progbits
 431 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 431      6375 3D61 
 431      746D 6567 
 431      6133 3275 
 431      3227 2027 
 432               	 .text
 433               	 .cfi_sections .debug_frame
 434               	.global ProcessRNDISControlMessage
 436               	ProcessRNDISControlMessage:
 437               	.LFB95:
 438               	 .file 1 "myRNDIS.c"
GAS LISTING  			page 28


   1:myRNDIS.c     **** /*
   2:myRNDIS.c     ****              LUFA Library
   3:myRNDIS.c     ****      Copyright (C) Dean Camera, 2014.
   4:myRNDIS.c     **** 
   5:myRNDIS.c     ****   dean [at] fourwalledcubicle [dot] com
   6:myRNDIS.c     ****            www.lufa-lib.org
   7:myRNDIS.c     **** */
   8:myRNDIS.c     **** 
   9:myRNDIS.c     **** /*
  10:myRNDIS.c     ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:myRNDIS.c     **** 
  12:myRNDIS.c     ****   Permission to use, copy, modify, distribute, and sell this
  13:myRNDIS.c     ****   software and its documentation for any purpose is hereby granted
  14:myRNDIS.c     ****   without fee, provided that the above copyright notice appear in
  15:myRNDIS.c     ****   all copies and that both that the copyright notice and this
  16:myRNDIS.c     ****   permission notice and warranty disclaimer appear in supporting
  17:myRNDIS.c     ****   documentation, and that the name of the author not be used in
  18:myRNDIS.c     ****   advertising or publicity pertaining to distribution of the
  19:myRNDIS.c     ****   software without specific, written prior permission.
  20:myRNDIS.c     **** 
  21:myRNDIS.c     ****   The author disclaims all warranties with regard to this
  22:myRNDIS.c     ****   software, including all implied warranties of merchantability
  23:myRNDIS.c     ****   and fitness.  In no event shall the author be liable for any
  24:myRNDIS.c     ****   special, indirect or consequential damages or any damages
  25:myRNDIS.c     ****   whatsoever resulting from loss of use, data or profits, whether
  26:myRNDIS.c     ****   in an action of contract, negligence or other tortious action,
  27:myRNDIS.c     ****   arising out of or in connection with the use or performance of
  28:myRNDIS.c     ****   this software.
  29:myRNDIS.c     **** */
  30:myRNDIS.c     **** 
  31:myRNDIS.c     **** /** \file
  32:myRNDIS.c     ****  *
  33:myRNDIS.c     ****  *  RNDIS command handler functions. This handles RNDIS commands according to
  34:myRNDIS.c     ****  *  the Microsoft RNDIS specification, creating a USB Ethernet network adapter.
  35:myRNDIS.c     ****  */
  36:myRNDIS.c     **** 
  37:myRNDIS.c     **** #define  INCLUDE_FROM_RNDIS_C
  38:myRNDIS.c     **** #include "myRNDIS.h"
  39:myRNDIS.c     **** 
  40:myRNDIS.c     **** /** Physical MAC address of the network adapter, which becomes the MAC address of the host for pack
  41:myRNDIS.c     **** //static const MAC_Address_t PROGMEM AdapterMACAddress     = {ADAPTER_MAC_ADDRESS};
  42:myRNDIS.c     **** 
  43:myRNDIS.c     **** /** Vendor description of the adapter. This is overridden by the INF file required to install the a
  44:myRNDIS.c     ****  *  the device, but may still be used by the OS in some circumstances.
  45:myRNDIS.c     ****  */
  46:myRNDIS.c     **** static const char PROGMEM AdapterVendorDescription[]     = "LUFA RNDIS Adapter";
  47:myRNDIS.c     **** 
  48:myRNDIS.c     **** /** List of RNDIS OID commands supported by this adapter. */
  49:myRNDIS.c     **** static const uint32_t PROGMEM AdapterSupportedOIDList[]  =
  50:myRNDIS.c     **** 							{
  51:myRNDIS.c     **** 								OID_GEN_SUPPORTED_LIST,
  52:myRNDIS.c     **** 								OID_GEN_PHYSICAL_MEDIUM,
  53:myRNDIS.c     **** 								OID_GEN_HARDWARE_STATUS,
  54:myRNDIS.c     **** 								OID_GEN_MEDIA_SUPPORTED,
  55:myRNDIS.c     **** 								OID_GEN_MEDIA_IN_USE,
  56:myRNDIS.c     **** 								OID_GEN_MAXIMUM_FRAME_SIZE,
  57:myRNDIS.c     **** 								OID_GEN_MAXIMUM_TOTAL_SIZE,
GAS LISTING  			page 29


  58:myRNDIS.c     **** 								OID_GEN_LINK_SPEED,
  59:myRNDIS.c     **** 								OID_GEN_TRANSMIT_BLOCK_SIZE,
  60:myRNDIS.c     **** 								OID_GEN_RECEIVE_BLOCK_SIZE,
  61:myRNDIS.c     **** 								OID_GEN_VENDOR_ID,
  62:myRNDIS.c     **** 								OID_GEN_VENDOR_DESCRIPTION,
  63:myRNDIS.c     **** 								OID_GEN_CURRENT_PACKET_FILTER,
  64:myRNDIS.c     **** 								OID_GEN_MAXIMUM_TOTAL_SIZE,
  65:myRNDIS.c     **** 								OID_GEN_MEDIA_CONNECT_STATUS,
  66:myRNDIS.c     **** 								OID_GEN_XMIT_OK,
  67:myRNDIS.c     **** 								OID_GEN_RCV_OK,
  68:myRNDIS.c     **** 								OID_GEN_XMIT_ERROR,
  69:myRNDIS.c     **** 								OID_GEN_RCV_ERROR,
  70:myRNDIS.c     **** 								OID_GEN_RCV_NO_BUFFER,
  71:myRNDIS.c     **** 								OID_802_3_PERMANENT_ADDRESS,
  72:myRNDIS.c     **** 								OID_802_3_CURRENT_ADDRESS,
  73:myRNDIS.c     **** 								OID_802_3_MULTICAST_LIST,
  74:myRNDIS.c     **** 								OID_802_3_MAXIMUM_LIST_SIZE,
  75:myRNDIS.c     **** 								OID_802_3_RCV_ERROR_ALIGNMENT,
  76:myRNDIS.c     **** 								OID_802_3_XMIT_ONE_COLLISION,
  77:myRNDIS.c     **** 								OID_802_3_XMIT_MORE_COLLISIONS,
  78:myRNDIS.c     **** 							};
  79:myRNDIS.c     **** 
  80:myRNDIS.c     **** /** Buffer for RNDIS messages (as distinct from Ethernet frames sent through the adapter. This must
  81:myRNDIS.c     ****  *  Supported OID list, plus the response header. The buffer is half-duplex, and is written to as i
  82:myRNDIS.c     ****  *  reason, care must be taken when constructing RNDIS responses that unread data is not overwritte
  83:myRNDIS.c     ****  */
  84:myRNDIS.c     **** uint8_t                 RNDISMessageBuffer[sizeof(AdapterSupportedOIDList) + sizeof(RNDIS_Query_Com
  85:myRNDIS.c     **** 
  86:myRNDIS.c     **** /** Pointer to the RNDIS message header at the top of the RNDIS message buffer, for convenience. */
  87:myRNDIS.c     **** RNDIS_Message_Header_t* MessageHeader = (RNDIS_Message_Header_t*)&RNDISMessageBuffer;
  88:myRNDIS.c     **** 
  89:myRNDIS.c     **** /** Indicates if a RNDIS message response is ready to be sent back to the host. */
  90:myRNDIS.c     **** bool                    ResponseReady               = false;
  91:myRNDIS.c     **** 
  92:myRNDIS.c     **** /** Current RNDIS adapter state, a value from the \c RNDIS_States_t enum. */
  93:myRNDIS.c     **** uint8_t                 CurrRNDISState              = RNDIS_Uninitialized;
  94:myRNDIS.c     **** 
  95:myRNDIS.c     **** /** Current Ethernet packet filter mask. This is non-zero when the adapter is initialized, or zero 
  96:myRNDIS.c     **** uint32_t                CurrPacketFilter            = 0;
  97:myRNDIS.c     **** 
  98:myRNDIS.c     **** 
  99:myRNDIS.c     **** /** Processes the RNDIS message received by the host and stored in the RNDISMessageBuffer global bu
 100:myRNDIS.c     ****  *  created, the ResponseReady global is updated so that the response is written back to the host u
 101:myRNDIS.c     ****  */
 102:myRNDIS.c     **** void ProcessRNDISControlMessage(void)
 103:myRNDIS.c     **** {
 439               	 .loc 1 103 0
 440               	 .cfi_startproc
 441               	 
 442               	 
 443               	 
 444               	.L__stack_usage =0
 104:myRNDIS.c     **** 	/* Note: Only a single buffer is used for both the received message and its response to save SRAM.
 105:myRNDIS.c     **** 	         this, response bytes should be filled in order so that they do not clobber unread data in
 106:myRNDIS.c     **** 
 107:myRNDIS.c     **** 	switch (MessageHeader->MessageType)
 445               	 .loc 1 107 0
GAS LISTING  			page 30


 446 0000 E091 0000 	 lds r30,MessageHeader
 447 0004 F091 0000 	 lds r31,MessageHeader+1
 448 0008 8081      	 ld r24,Z
 449 000a 9181      	 ldd r25,Z+1
 450 000c A281      	 ldd r26,Z+2
 451 000e B381      	 ldd r27,Z+3
 452 0010 8430      	 cpi r24,4
 453 0012 9105      	 cpc r25,__zero_reg__
 454 0014 A105      	 cpc r26,__zero_reg__
 455 0016 B105      	 cpc r27,__zero_reg__
 456 0018 01F4      	 brne .+2
 457 001a 00C0      	 rjmp .L3
 458 001c 00F4      	 brsh .L4
 459 001e 8230      	 cpi r24,2
 460 0020 9105      	 cpc r25,__zero_reg__
 461 0022 A105      	 cpc r26,__zero_reg__
 462 0024 B105      	 cpc r27,__zero_reg__
 463 0026 01F0      	 breq .L5
 464 0028 0397      	 sbiw r24,3
 465 002a A105      	 cpc r26,__zero_reg__
 466 002c B105      	 cpc r27,__zero_reg__
 467 002e 01F4      	 brne .+2
 468 0030 00C0      	 rjmp .L6
 469 0032 0895      	 ret
 470               	.L4:
 471 0034 8630      	 cpi r24,6
 472 0036 9105      	 cpc r25,__zero_reg__
 473 0038 A105      	 cpc r26,__zero_reg__
 474 003a B105      	 cpc r27,__zero_reg__
 475 003c 01F4      	 brne .+2
 476 003e 00C0      	 rjmp .L7
 477 0040 00F4      	 brsh .+2
 478 0042 00C0      	 rjmp .L8
 479 0044 0897      	 sbiw r24,8
 480 0046 A105      	 cpc r26,__zero_reg__
 481 0048 B105      	 cpc r27,__zero_reg__
 482 004a 01F4      	 brne .+2
 483 004c 00C0      	 rjmp .L9
 484 004e 0895      	 ret
 485               	.L5:
 486               	.LBB7:
 108:myRNDIS.c     **** 	{
 109:myRNDIS.c     **** 		case REMOTE_NDIS_INITIALIZE_MSG:
 110:myRNDIS.c     **** 			/* Initialize the adapter - return information about the supported RNDIS version and buffer size
 111:myRNDIS.c     **** 
 112:myRNDIS.c     **** 			ResponseReady = true;
 487               	 .loc 1 112 0
 488 0050 21E0      	 ldi r18,lo8(1)
 489 0052 2093 0000 	 sts ResponseReady,r18
 490               	.LVL0:
 113:myRNDIS.c     **** 
 114:myRNDIS.c     **** 			RNDIS_Initialize_Message_t*  INITIALIZE_Message  = (RNDIS_Initialize_Message_t*)&RNDISMessageBuf
 115:myRNDIS.c     **** 			RNDIS_Initialize_Complete_t* INITIALIZE_Response = (RNDIS_Initialize_Complete_t*)&RNDISMessageBu
 116:myRNDIS.c     **** 
 117:myRNDIS.c     **** 			INITIALIZE_Response->MessageType           = REMOTE_NDIS_INITIALIZE_CMPLT;
 491               	 .loc 1 117 0
 492 0056 82E0      	 ldi r24,lo8(2)
GAS LISTING  			page 31


 493 0058 90E0      	 ldi r25,0
 494 005a A0E0      	 ldi r26,0
 495 005c B0E8      	 ldi r27,lo8(-128)
 496 005e 8093 0000 	 sts RNDISMessageBuffer,r24
 497 0062 9093 0000 	 sts RNDISMessageBuffer+1,r25
 498 0066 A093 0000 	 sts RNDISMessageBuffer+2,r26
 499 006a B093 0000 	 sts RNDISMessageBuffer+3,r27
 118:myRNDIS.c     **** 			INITIALIZE_Response->MessageLength         = sizeof(RNDIS_Initialize_Complete_t);
 500               	 .loc 1 118 0
 501 006e 84E3      	 ldi r24,lo8(52)
 502 0070 90E0      	 ldi r25,0
 503 0072 A0E0      	 ldi r26,0
 504 0074 B0E0      	 ldi r27,0
 505 0076 8093 0000 	 sts RNDISMessageBuffer+4,r24
 506 007a 9093 0000 	 sts RNDISMessageBuffer+4+1,r25
 507 007e A093 0000 	 sts RNDISMessageBuffer+4+2,r26
 508 0082 B093 0000 	 sts RNDISMessageBuffer+4+3,r27
 119:myRNDIS.c     **** 			INITIALIZE_Response->RequestId             = INITIALIZE_Message->RequestId;
 120:myRNDIS.c     **** 			INITIALIZE_Response->Status                = REMOTE_NDIS_STATUS_SUCCESS;
 509               	 .loc 1 120 0
 510 0086 1092 0000 	 sts RNDISMessageBuffer+12,__zero_reg__
 511 008a 1092 0000 	 sts RNDISMessageBuffer+12+1,__zero_reg__
 512 008e 1092 0000 	 sts RNDISMessageBuffer+12+2,__zero_reg__
 513 0092 1092 0000 	 sts RNDISMessageBuffer+12+3,__zero_reg__
 121:myRNDIS.c     **** 
 122:myRNDIS.c     **** 			INITIALIZE_Response->MajorVersion          = REMOTE_NDIS_VERSION_MAJOR;
 514               	 .loc 1 122 0
 515 0096 81E0      	 ldi r24,lo8(1)
 516 0098 90E0      	 ldi r25,0
 517 009a A0E0      	 ldi r26,0
 518 009c B0E0      	 ldi r27,0
 519 009e 8093 0000 	 sts RNDISMessageBuffer+16,r24
 520 00a2 9093 0000 	 sts RNDISMessageBuffer+16+1,r25
 521 00a6 A093 0000 	 sts RNDISMessageBuffer+16+2,r26
 522 00aa B093 0000 	 sts RNDISMessageBuffer+16+3,r27
 123:myRNDIS.c     **** 			INITIALIZE_Response->MinorVersion          = REMOTE_NDIS_VERSION_MINOR;
 523               	 .loc 1 123 0
 524 00ae 1092 0000 	 sts RNDISMessageBuffer+20,__zero_reg__
 525 00b2 1092 0000 	 sts RNDISMessageBuffer+20+1,__zero_reg__
 526 00b6 1092 0000 	 sts RNDISMessageBuffer+20+2,__zero_reg__
 527 00ba 1092 0000 	 sts RNDISMessageBuffer+20+3,__zero_reg__
 124:myRNDIS.c     **** 			INITIALIZE_Response->DeviceFlags           = REMOTE_NDIS_DF_CONNECTIONLESS;
 528               	 .loc 1 124 0
 529 00be 8093 0000 	 sts RNDISMessageBuffer+24,r24
 530 00c2 9093 0000 	 sts RNDISMessageBuffer+24+1,r25
 531 00c6 A093 0000 	 sts RNDISMessageBuffer+24+2,r26
 532 00ca B093 0000 	 sts RNDISMessageBuffer+24+3,r27
 125:myRNDIS.c     **** 			INITIALIZE_Response->Medium                = REMOTE_NDIS_MEDIUM_802_3;
 533               	 .loc 1 125 0
 534 00ce 1092 0000 	 sts RNDISMessageBuffer+28,__zero_reg__
 535 00d2 1092 0000 	 sts RNDISMessageBuffer+28+1,__zero_reg__
 536 00d6 1092 0000 	 sts RNDISMessageBuffer+28+2,__zero_reg__
 537 00da 1092 0000 	 sts RNDISMessageBuffer+28+3,__zero_reg__
 126:myRNDIS.c     **** 			INITIALIZE_Response->MaxPacketsPerTransfer = 1;
 538               	 .loc 1 126 0
 539 00de 8093 0000 	 sts RNDISMessageBuffer+32,r24
 540 00e2 9093 0000 	 sts RNDISMessageBuffer+32+1,r25
GAS LISTING  			page 32


 541 00e6 A093 0000 	 sts RNDISMessageBuffer+32+2,r26
 542 00ea B093 0000 	 sts RNDISMessageBuffer+32+3,r27
 127:myRNDIS.c     **** 			INITIALIZE_Response->MaxTransferSize       = (sizeof(RNDIS_Packet_Message_t) + ETHERNET_FRAME_SI
 543               	 .loc 1 127 0
 544 00ee 8CE2      	 ldi r24,lo8(44)
 545 00f0 91E0      	 ldi r25,lo8(1)
 546 00f2 A0E0      	 ldi r26,0
 547 00f4 B0E0      	 ldi r27,0
 548 00f6 8093 0000 	 sts RNDISMessageBuffer+36,r24
 549 00fa 9093 0000 	 sts RNDISMessageBuffer+36+1,r25
 550 00fe A093 0000 	 sts RNDISMessageBuffer+36+2,r26
 551 0102 B093 0000 	 sts RNDISMessageBuffer+36+3,r27
 128:myRNDIS.c     **** 			INITIALIZE_Response->PacketAlignmentFactor = 0;
 552               	 .loc 1 128 0
 553 0106 1092 0000 	 sts RNDISMessageBuffer+40,__zero_reg__
 554 010a 1092 0000 	 sts RNDISMessageBuffer+40+1,__zero_reg__
 555 010e 1092 0000 	 sts RNDISMessageBuffer+40+2,__zero_reg__
 556 0112 1092 0000 	 sts RNDISMessageBuffer+40+3,__zero_reg__
 129:myRNDIS.c     **** 			INITIALIZE_Response->AFListOffset          = 0;
 557               	 .loc 1 129 0
 558 0116 1092 0000 	 sts RNDISMessageBuffer+44,__zero_reg__
 559 011a 1092 0000 	 sts RNDISMessageBuffer+44+1,__zero_reg__
 560 011e 1092 0000 	 sts RNDISMessageBuffer+44+2,__zero_reg__
 561 0122 1092 0000 	 sts RNDISMessageBuffer+44+3,__zero_reg__
 130:myRNDIS.c     **** 			INITIALIZE_Response->AFListSize            = 0;
 562               	 .loc 1 130 0
 563 0126 1092 0000 	 sts RNDISMessageBuffer+48,__zero_reg__
 564 012a 1092 0000 	 sts RNDISMessageBuffer+48+1,__zero_reg__
 565 012e 1092 0000 	 sts RNDISMessageBuffer+48+2,__zero_reg__
 566 0132 1092 0000 	 sts RNDISMessageBuffer+48+3,__zero_reg__
 131:myRNDIS.c     **** 
 132:myRNDIS.c     **** 			CurrRNDISState = RNDIS_Initialized;
 567               	 .loc 1 132 0
 568 0136 2093 0000 	 sts CurrRNDISState,r18
 133:myRNDIS.c     **** 
 134:myRNDIS.c     **** 			break;
 569               	 .loc 1 134 0
 570 013a 0895      	 ret
 571               	.LVL1:
 572               	.L6:
 135:myRNDIS.c     **** 		case REMOTE_NDIS_HALT_MSG:
 136:myRNDIS.c     **** 			/* Halt the adapter, reset the adapter state - note that no response should be returned when com
 137:myRNDIS.c     **** 
 138:myRNDIS.c     **** 			ResponseReady = false;
 573               	 .loc 1 138 0
 574 013c 1092 0000 	 sts ResponseReady,__zero_reg__
 139:myRNDIS.c     **** 			MessageHeader->MessageLength = 0;
 575               	 .loc 1 139 0
 576 0140 1482      	 std Z+4,__zero_reg__
 577 0142 1582      	 std Z+5,__zero_reg__
 578 0144 1682      	 std Z+6,__zero_reg__
 579 0146 1782      	 std Z+7,__zero_reg__
 140:myRNDIS.c     **** 
 141:myRNDIS.c     **** 			CurrRNDISState = RNDIS_Uninitialized;
 580               	 .loc 1 141 0
 581 0148 1092 0000 	 sts CurrRNDISState,__zero_reg__
 142:myRNDIS.c     **** 
GAS LISTING  			page 33


 143:myRNDIS.c     **** 			break;
 582               	 .loc 1 143 0
 583 014c 0895      	 ret
 584               	.L3:
 144:myRNDIS.c     **** 		case REMOTE_NDIS_QUERY_MSG:
 145:myRNDIS.c     **** 			/* Request for information about a parameter about the adapter, specified as an OID token */
 146:myRNDIS.c     **** 
 147:myRNDIS.c     **** 			ResponseReady = true;
 585               	 .loc 1 147 0
 586 014e 81E0      	 ldi r24,lo8(1)
 587 0150 8093 0000 	 sts ResponseReady,r24
 588               	.LVL2:
 148:myRNDIS.c     **** 
 149:myRNDIS.c     **** 			RNDIS_Query_Message_t*  QUERY_Message  = (RNDIS_Query_Message_t*)&RNDISMessageBuffer;
 150:myRNDIS.c     **** 			RNDIS_Query_Complete_t* QUERY_Response = (RNDIS_Query_Complete_t*)&RNDISMessageBuffer;
 151:myRNDIS.c     **** 			uint32_t                Query_Oid      = QUERY_Message->Oid;
 589               	 .loc 1 151 0
 590 0154 8091 0000 	 lds r24,RNDISMessageBuffer+12
 591 0158 9091 0000 	 lds r25,RNDISMessageBuffer+12+1
 592 015c A091 0000 	 lds r26,RNDISMessageBuffer+12+2
 593 0160 B091 0000 	 lds r27,RNDISMessageBuffer+12+3
 594               	.LVL3:
 152:myRNDIS.c     **** 
 153:myRNDIS.c     **** 			void*     QueryData                 = &RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 154:myRNDIS.c     **** 			                                                          QUERY_Message->InformationBufferOffset
 155:myRNDIS.c     **** 			void*     ResponseData              = &RNDISMessageBuffer[sizeof(RNDIS_Query_Complete_t)];
 156:myRNDIS.c     **** 			uint16_t  ResponseSize;
 157:myRNDIS.c     **** 
 158:myRNDIS.c     **** 			QUERY_Response->MessageType         = REMOTE_NDIS_QUERY_CMPLT;
 595               	 .loc 1 158 0
 596 0164 44E0      	 ldi r20,lo8(4)
 597 0166 50E0      	 ldi r21,0
 598 0168 60E0      	 ldi r22,0
 599 016a 70E8      	 ldi r23,lo8(-128)
 600 016c 4093 0000 	 sts RNDISMessageBuffer,r20
 601 0170 5093 0000 	 sts RNDISMessageBuffer+1,r21
 602 0174 6093 0000 	 sts RNDISMessageBuffer+2,r22
 603 0178 7093 0000 	 sts RNDISMessageBuffer+3,r23
 604               	.LVL4:
 159:myRNDIS.c     **** 			QUERY_Response->MessageLength       = sizeof(RNDIS_Query_Complete_t);
 605               	 .loc 1 159 0
 606 017c 48E1      	 ldi r20,lo8(24)
 607 017e 50E0      	 ldi r21,0
 608 0180 60E0      	 ldi r22,0
 609 0182 70E0      	 ldi r23,0
 610 0184 4093 0000 	 sts RNDISMessageBuffer+4,r20
 611 0188 5093 0000 	 sts RNDISMessageBuffer+4+1,r21
 612 018c 6093 0000 	 sts RNDISMessageBuffer+4+2,r22
 613 0190 7093 0000 	 sts RNDISMessageBuffer+4+3,r23
 614               	.LVL5:
 615               	.LBB8:
 616               	.LBB9:
 160:myRNDIS.c     **** 
 161:myRNDIS.c     **** 			if (ProcessNDISQuery(Query_Oid, QueryData, QUERY_Message->InformationBufferLength,
 162:myRNDIS.c     **** 			                     ResponseData, &ResponseSize))
 163:myRNDIS.c     **** 			{
 164:myRNDIS.c     **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
GAS LISTING  			page 34


 165:myRNDIS.c     **** 				QUERY_Response->MessageLength          += ResponseSize;
 166:myRNDIS.c     **** 
 167:myRNDIS.c     **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 168:myRNDIS.c     **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 169:myRNDIS.c     **** 			}
 170:myRNDIS.c     **** 			else
 171:myRNDIS.c     **** 			{
 172:myRNDIS.c     **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 173:myRNDIS.c     **** 
 174:myRNDIS.c     **** 				QUERY_Response->InformationBufferLength = 0;
 175:myRNDIS.c     **** 				QUERY_Response->InformationBufferOffset = 0;
 176:myRNDIS.c     **** 			}
 177:myRNDIS.c     **** 
 178:myRNDIS.c     **** 			break;
 179:myRNDIS.c     **** 		case REMOTE_NDIS_SET_MSG:
 180:myRNDIS.c     **** 			/* Request to set a parameter of the adapter, specified as an OID token */
 181:myRNDIS.c     **** 
 182:myRNDIS.c     **** 			ResponseReady = true;
 183:myRNDIS.c     **** 
 184:myRNDIS.c     **** 			RNDIS_Set_Message_t*  SET_Message  = (RNDIS_Set_Message_t*)&RNDISMessageBuffer;
 185:myRNDIS.c     **** 			RNDIS_Set_Complete_t* SET_Response = (RNDIS_Set_Complete_t*)&RNDISMessageBuffer;
 186:myRNDIS.c     **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 187:myRNDIS.c     **** 
 188:myRNDIS.c     **** 			SET_Response->MessageType       = REMOTE_NDIS_SET_CMPLT;
 189:myRNDIS.c     **** 			SET_Response->MessageLength     = sizeof(RNDIS_Set_Complete_t);
 190:myRNDIS.c     **** 			SET_Response->RequestId         = SET_Message->RequestId;
 191:myRNDIS.c     **** 
 192:myRNDIS.c     **** 			void* SetData                   = &RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 193:myRNDIS.c     **** 			                                                      SET_Message->InformationBufferOffset];
 194:myRNDIS.c     **** 
 195:myRNDIS.c     **** 			if (ProcessNDISSet(SET_Oid, SetData, SET_Message->InformationBufferLength))
 196:myRNDIS.c     **** 			  SET_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 197:myRNDIS.c     **** 			else
 198:myRNDIS.c     **** 			  SET_Response->Status        = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 199:myRNDIS.c     **** 
 200:myRNDIS.c     **** 			break;
 201:myRNDIS.c     **** 		case REMOTE_NDIS_RESET_MSG:
 202:myRNDIS.c     **** 			/* Soft reset the adapter */
 203:myRNDIS.c     **** 
 204:myRNDIS.c     **** 			ResponseReady = true;
 205:myRNDIS.c     **** 
 206:myRNDIS.c     **** 			RNDIS_Reset_Complete_t* RESET_Response = (RNDIS_Reset_Complete_t*)&RNDISMessageBuffer;
 207:myRNDIS.c     **** 
 208:myRNDIS.c     **** 			RESET_Response->MessageType         = REMOTE_NDIS_RESET_CMPLT;
 209:myRNDIS.c     **** 			RESET_Response->MessageLength       = sizeof(RNDIS_Reset_Complete_t);
 210:myRNDIS.c     **** 			RESET_Response->Status              = REMOTE_NDIS_STATUS_SUCCESS;
 211:myRNDIS.c     **** 			RESET_Response->AddressingReset     = 0;
 212:myRNDIS.c     **** 
 213:myRNDIS.c     **** 			break;
 214:myRNDIS.c     **** 		case REMOTE_NDIS_KEEPALIVE_MSG:
 215:myRNDIS.c     **** 			/* Keep alive message sent to the adapter every 5 seconds when idle to ensure it is still respon
 216:myRNDIS.c     **** 
 217:myRNDIS.c     **** 			ResponseReady = true;
 218:myRNDIS.c     **** 
 219:myRNDIS.c     **** 			RNDIS_KeepAlive_Message_t*  KEEPALIVE_Message  = (RNDIS_KeepAlive_Message_t*)&RNDISMessageBuffer
 220:myRNDIS.c     **** 			RNDIS_KeepAlive_Complete_t* KEEPALIVE_Response = (RNDIS_KeepAlive_Complete_t*)&RNDISMessageBuffe
 221:myRNDIS.c     **** 
GAS LISTING  			page 35


 222:myRNDIS.c     **** 			KEEPALIVE_Response->MessageType     = REMOTE_NDIS_KEEPALIVE_CMPLT;
 223:myRNDIS.c     **** 			KEEPALIVE_Response->MessageLength   = sizeof(RNDIS_KeepAlive_Complete_t);
 224:myRNDIS.c     **** 			KEEPALIVE_Response->RequestId       = KEEPALIVE_Message->RequestId;
 225:myRNDIS.c     **** 			KEEPALIVE_Response->Status          = REMOTE_NDIS_STATUS_SUCCESS;
 226:myRNDIS.c     **** 
 227:myRNDIS.c     **** 			break;
 228:myRNDIS.c     **** 	}
 229:myRNDIS.c     **** }
 230:myRNDIS.c     **** 
 231:myRNDIS.c     **** /** Processes RNDIS query commands, retrieving information from the adapter and reporting it back t
 232:myRNDIS.c     ****  *  parameter is given as an OID value.
 233:myRNDIS.c     ****  *
 234:myRNDIS.c     ****  *  \param[in] OId            OId value of the parameter being queried
 235:myRNDIS.c     ****  *  \param[in] QueryData      Pointer to any extra query data being sent by the host to the device 
 236:myRNDIS.c     ****  *  \param[in] QuerySize      Size in bytes of the extra query data being sent by the host
 237:myRNDIS.c     ****  *  \param[out] ResponseData  Pointer to the start of the query response inside the RNDIS message b
 238:myRNDIS.c     ****  *  \param[out] ResponseSize  Pointer to the size in bytes of the response data being sent to the h
 239:myRNDIS.c     ****  *
 240:myRNDIS.c     ****  *  \return Boolean \c true if the query was handled, \c false otherwise
 241:myRNDIS.c     ****  */
 242:myRNDIS.c     **** static bool ProcessNDISQuery(const uint32_t OId, void* QueryData, uint16_t QuerySize,
 243:myRNDIS.c     ****                              void* ResponseData, uint16_t* ResponseSize)
 244:myRNDIS.c     **** {
 245:myRNDIS.c     **** 	/* Handler for REMOTE_NDIS_QUERY_MSG messages */
 246:myRNDIS.c     **** 
 247:myRNDIS.c     **** 	switch (OId)
 617               	 .loc 1 247 0
 618 0194 8E30      	 cpi r24,14
 619 0196 21E0      	 ldi r18,1
 620 0198 9207      	 cpc r25,r18
 621 019a A207      	 cpc r26,r18
 622 019c B105      	 cpc r27,__zero_reg__
 623 019e 01F4      	 brne .+2
 624 01a0 00C0      	 rjmp .L11
 625 01a2 00F0      	 brlo .+2
 626 01a4 00C0      	 rjmp .L12
 627 01a6 8630      	 cpi r24,6
 628 01a8 21E0      	 ldi r18,1
 629 01aa 9207      	 cpc r25,r18
 630 01ac A207      	 cpc r26,r18
 631 01ae B105      	 cpc r27,__zero_reg__
 632 01b0 01F4      	 brne .+2
 633 01b2 00C0      	 rjmp .L13
 634 01b4 00F4      	 brsh .L14
 635 01b6 8230      	 cpi r24,2
 636 01b8 21E0      	 ldi r18,1
 637 01ba 9207      	 cpc r25,r18
 638 01bc A207      	 cpc r26,r18
 639 01be B105      	 cpc r27,__zero_reg__
 640 01c0 01F4      	 brne .+2
 641 01c2 00C0      	 rjmp .L24
 642 01c4 00F4      	 brsh .L16
 643 01c6 8130      	 cpi r24,1
 644 01c8 9140      	 sbci r25,1
 645 01ca A140      	 sbci r26,1
 646 01cc B105      	 cpc r27,__zero_reg__
 647 01ce 01F0      	 breq .+2
GAS LISTING  			page 36


 648 01d0 00C0      	 rjmp .L10
 649               	.LVL6:
 248:myRNDIS.c     **** 	{
 249:myRNDIS.c     **** 		case OID_GEN_SUPPORTED_LIST:
 250:myRNDIS.c     **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 251:myRNDIS.c     **** 
 252:myRNDIS.c     **** 			/* Copy the list of supported NDIS OID tokens to the response buffer */
 253:myRNDIS.c     **** 			memcpy_P(ResponseData, AdapterSupportedOIDList, sizeof(AdapterSupportedOIDList));
 650               	 .loc 1 253 0
 651 01d2 4CE6      	 ldi r20,lo8(108)
 652 01d4 50E0      	 ldi r21,0
 653 01d6 60E0      	 ldi r22,lo8(AdapterSupportedOIDList)
 654 01d8 70E0      	 ldi r23,hi8(AdapterSupportedOIDList)
 655 01da 80E0      	 ldi r24,lo8(RNDISMessageBuffer+24)
 656 01dc 90E0      	 ldi r25,hi8(RNDISMessageBuffer+24)
 657               	.LVL7:
 658 01de 0E94 0000 	 call memcpy_P
 659               	.LVL8:
 250:myRNDIS.c     **** 			*ResponseSize = sizeof(AdapterSupportedOIDList);
 660               	 .loc 1 250 0
 661 01e2 4CE6      	 ldi r20,lo8(108)
 662 01e4 50E0      	 ldi r21,0
 663 01e6 00C0      	 rjmp .L31
 664               	.LVL9:
 665               	.L16:
 247:myRNDIS.c     **** 	switch (OId)
 666               	 .loc 1 247 0
 667 01e8 8530      	 cpi r24,5
 668 01ea 9140      	 sbci r25,1
 669 01ec A140      	 sbci r26,1
 670 01ee B105      	 cpc r27,__zero_reg__
 671 01f0 00F4      	 brsh .+2
 672 01f2 00C0      	 rjmp .L24
 673 01f4 00C0      	 rjmp .L10
 674               	.L14:
 675 01f6 8C30      	 cpi r24,12
 676 01f8 21E0      	 ldi r18,1
 677 01fa 9207      	 cpc r25,r18
 678 01fc A207      	 cpc r26,r18
 679 01fe B105      	 cpc r27,__zero_reg__
 680 0200 00F4      	 brsh .L19
 681 0202 8A30      	 cpi r24,10
 682 0204 21E0      	 ldi r18,1
 683 0206 9207      	 cpc r25,r18
 684 0208 A207      	 cpc r26,r18
 685 020a B105      	 cpc r27,__zero_reg__
 686 020c 00F0      	 brlo .+2
 687 020e 00C0      	 rjmp .L13
 688 0210 8730      	 cpi r24,7
 689 0212 9140      	 sbci r25,1
 690 0214 A140      	 sbci r26,1
 691 0216 B105      	 cpc r27,__zero_reg__
 692 0218 01F0      	 breq .+2
 693 021a 00C0      	 rjmp .L10
 694               	.LVL10:
 254:myRNDIS.c     **** 
 255:myRNDIS.c     **** 			return true;
GAS LISTING  			page 37


 256:myRNDIS.c     **** 		case OID_GEN_PHYSICAL_MEDIUM:
 257:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 258:myRNDIS.c     **** 
 259:myRNDIS.c     **** 			/* Indicate that the device is a true ethernet link */
 260:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 0;
 261:myRNDIS.c     **** 
 262:myRNDIS.c     **** 			return true;
 263:myRNDIS.c     **** 		case OID_GEN_HARDWARE_STATUS:
 264:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 265:myRNDIS.c     **** 
 266:myRNDIS.c     **** 			/* Always indicate hardware ready */
 267:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = NDIS_HardwareStatus_Ready;
 268:myRNDIS.c     **** 
 269:myRNDIS.c     **** 			return true;
 270:myRNDIS.c     **** 		case OID_GEN_MEDIA_SUPPORTED:
 271:myRNDIS.c     **** 		case OID_GEN_MEDIA_IN_USE:
 272:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 273:myRNDIS.c     **** 
 274:myRNDIS.c     **** 			/* Indicate 802.3 (Ethernet) supported by the adapter */
 275:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIUM_802_3;
 276:myRNDIS.c     **** 
 277:myRNDIS.c     **** 			return true;
 278:myRNDIS.c     **** 		case OID_GEN_VENDOR_ID:
 279:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 280:myRNDIS.c     **** 
 281:myRNDIS.c     **** 			/* Vendor ID 0x0xFFFFFF is reserved for vendors who have not purchased a NDIS VID */
 282:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 0x00FFFFFF;
 283:myRNDIS.c     **** 
 284:myRNDIS.c     **** 			return true;
 285:myRNDIS.c     **** 		case OID_GEN_MAXIMUM_FRAME_SIZE:
 286:myRNDIS.c     **** 		case OID_GEN_TRANSMIT_BLOCK_SIZE:
 287:myRNDIS.c     **** 		case OID_GEN_RECEIVE_BLOCK_SIZE:
 288:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 289:myRNDIS.c     **** 
 290:myRNDIS.c     **** 			/* Indicate that the maximum frame size is the size of the ethernet frame buffer */
 291:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = ETHERNET_FRAME_SIZE_MAX;
 292:myRNDIS.c     **** 
 293:myRNDIS.c     **** 			return true;
 294:myRNDIS.c     **** 		case OID_GEN_VENDOR_DESCRIPTION:
 295:myRNDIS.c     **** 			*ResponseSize = sizeof(AdapterVendorDescription);
 296:myRNDIS.c     **** 
 297:myRNDIS.c     **** 			/* Copy vendor description string to the response buffer */
 298:myRNDIS.c     **** 			memcpy_P(ResponseData, AdapterVendorDescription, sizeof(AdapterVendorDescription));
 299:myRNDIS.c     **** 
 300:myRNDIS.c     **** 			return true;
 301:myRNDIS.c     **** 		case OID_GEN_MEDIA_CONNECT_STATUS:
 302:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 303:myRNDIS.c     **** 
 304:myRNDIS.c     **** 			/* Always indicate that the adapter is connected to a network */
 305:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = REMOTE_NDIS_MEDIA_STATE_CONNECTED;
 306:myRNDIS.c     **** 
 307:myRNDIS.c     **** 			return true;
 308:myRNDIS.c     **** 		case OID_GEN_LINK_SPEED:
 309:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 310:myRNDIS.c     **** 
 311:myRNDIS.c     **** 			/* Indicate 10Mb/s link speed */
 312:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 100000;
GAS LISTING  			page 38


 695               	 .loc 1 312 0
 696 021c 80EA      	 ldi r24,lo8(-96)
 697 021e 96E8      	 ldi r25,lo8(-122)
 698 0220 A1E0      	 ldi r26,lo8(1)
 699 0222 B0E0      	 ldi r27,0
 700               	.LVL11:
 701 0224 00C0      	 rjmp .L45
 702               	.LVL12:
 703               	.L19:
 247:myRNDIS.c     **** 	switch (OId)
 704               	 .loc 1 247 0
 705 0226 8C30      	 cpi r24,12
 706 0228 21E0      	 ldi r18,1
 707 022a 9207      	 cpc r25,r18
 708 022c A207      	 cpc r26,r18
 709 022e B105      	 cpc r27,__zero_reg__
 710 0230 01F4      	 brne .+2
 711 0232 00C0      	 rjmp .L21
 712 0234 8D30      	 cpi r24,13
 713 0236 9140      	 sbci r25,1
 714 0238 A140      	 sbci r26,1
 715 023a B105      	 cpc r27,__zero_reg__
 716 023c 01F0      	 breq .+2
 717 023e 00C0      	 rjmp .L10
 718               	.LVL13:
 298:myRNDIS.c     **** 			memcpy_P(ResponseData, AdapterVendorDescription, sizeof(AdapterVendorDescription));
 719               	 .loc 1 298 0
 720 0240 43E1      	 ldi r20,lo8(19)
 721 0242 50E0      	 ldi r21,0
 722 0244 60E0      	 ldi r22,lo8(AdapterVendorDescription)
 723 0246 70E0      	 ldi r23,hi8(AdapterVendorDescription)
 724 0248 80E0      	 ldi r24,lo8(RNDISMessageBuffer+24)
 725 024a 90E0      	 ldi r25,hi8(RNDISMessageBuffer+24)
 726               	.LVL14:
 727 024c 0E94 0000 	 call memcpy_P
 728               	.LVL15:
 295:myRNDIS.c     **** 			*ResponseSize = sizeof(AdapterVendorDescription);
 729               	 .loc 1 295 0
 730 0250 43E1      	 ldi r20,lo8(19)
 731 0252 50E0      	 ldi r21,0
 732 0254 00C0      	 rjmp .L31
 733               	.LVL16:
 734               	.L12:
 247:myRNDIS.c     **** 	switch (OId)
 735               	 .loc 1 247 0
 736 0256 8630      	 cpi r24,6
 737 0258 21E0      	 ldi r18,1
 738 025a 9207      	 cpc r25,r18
 739 025c 22E0      	 ldi r18,2
 740 025e A207      	 cpc r26,r18
 741 0260 B105      	 cpc r27,__zero_reg__
 742 0262 00F4      	 brsh .L23
 743 0264 8130      	 cpi r24,1
 744 0266 21E0      	 ldi r18,1
 745 0268 9207      	 cpc r25,r18
 746 026a 22E0      	 ldi r18,2
 747 026c A207      	 cpc r26,r18
GAS LISTING  			page 39


 748 026e B105      	 cpc r27,__zero_reg__
 749 0270 00F0      	 brlo .+2
 750 0272 00C0      	 rjmp .L24
 751 0274 8431      	 cpi r24,20
 752 0276 21E0      	 ldi r18,1
 753 0278 9207      	 cpc r25,r18
 754 027a A207      	 cpc r26,r18
 755 027c B105      	 cpc r27,__zero_reg__
 756 027e 01F4      	 brne .+2
 757 0280 00C0      	 rjmp .L24
 758 0282 8230      	 cpi r24,2
 759 0284 22E0      	 ldi r18,2
 760 0286 9207      	 cpc r25,r18
 761 0288 21E0      	 ldi r18,1
 762 028a A207      	 cpc r26,r18
 763 028c B105      	 cpc r27,__zero_reg__
 764 028e 01F4      	 brne .+2
 765 0290 00C0      	 rjmp .L24
 766 0292 8131      	 cpi r24,17
 767 0294 9140      	 sbci r25,1
 768 0296 A140      	 sbci r26,1
 769 0298 B105      	 cpc r27,__zero_reg__
 770 029a 01F0      	 breq .+2
 771 029c 00C0      	 rjmp .L10
 772               	.LVL17:
 313:myRNDIS.c     **** 
 314:myRNDIS.c     **** 			return true;
 315:myRNDIS.c     **** 		case OID_802_3_PERMANENT_ADDRESS:
 316:myRNDIS.c     **** 		case OID_802_3_CURRENT_ADDRESS:
 317:myRNDIS.c     **** 			*ResponseSize = sizeof(MAC_Address_t);
 318:myRNDIS.c     **** 
 319:myRNDIS.c     **** 			/* Copy over the fixed adapter MAC to the response buffer */
 320:myRNDIS.c     **** 			//memcpy_P(ResponseData, &AdapterMACAddress, sizeof(MAC_Address_t));
 321:myRNDIS.c     **** 			memcpy( ResponseData, MyMAC, sizeof(MAC_Address_t));
 322:myRNDIS.c     **** 
 323:myRNDIS.c     **** 			return true;
 324:myRNDIS.c     **** 		case OID_802_3_MAXIMUM_LIST_SIZE:
 325:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 326:myRNDIS.c     **** 
 327:myRNDIS.c     **** 			/* Indicate only one multicast address supported */
 328:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 1;
 329:myRNDIS.c     **** 
 330:myRNDIS.c     **** 			return true;
 331:myRNDIS.c     **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 332:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 333:myRNDIS.c     **** 
 334:myRNDIS.c     **** 			/* Indicate the current packet filter mask */
 335:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = CurrPacketFilter;
 336:myRNDIS.c     **** 
 337:myRNDIS.c     **** 			return true;
 338:myRNDIS.c     **** 		case OID_GEN_XMIT_OK:
 339:myRNDIS.c     **** 		case OID_GEN_RCV_OK:
 340:myRNDIS.c     **** 		case OID_GEN_XMIT_ERROR:
 341:myRNDIS.c     **** 		case OID_GEN_RCV_ERROR:
 342:myRNDIS.c     **** 		case OID_GEN_RCV_NO_BUFFER:
 343:myRNDIS.c     **** 		case OID_802_3_RCV_ERROR_ALIGNMENT:
 344:myRNDIS.c     **** 		case OID_802_3_XMIT_ONE_COLLISION:
GAS LISTING  			page 40


 345:myRNDIS.c     **** 		case OID_802_3_XMIT_MORE_COLLISIONS:
 346:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 347:myRNDIS.c     **** 
 348:myRNDIS.c     **** 			/* Unused statistic OIDs - always return 0 for each */
 349:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 0;
 350:myRNDIS.c     **** 
 351:myRNDIS.c     **** 			return true;
 352:myRNDIS.c     **** 		case OID_GEN_MAXIMUM_TOTAL_SIZE:
 353:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 354:myRNDIS.c     **** 
 355:myRNDIS.c     **** 			/* Indicate maximum overall buffer (Ethernet frame and RNDIS header) the adapter can handle */
 356:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = (sizeof(RNDISMessageBuffer) + ETHERNET_FRAME_SIZE_MAX);
 773               	 .loc 1 356 0
 774 029e 84E8      	 ldi r24,lo8(-124)
 775 02a0 91E0      	 ldi r25,lo8(1)
 776 02a2 A0E0      	 ldi r26,0
 777 02a4 B0E0      	 ldi r27,0
 778               	.LVL18:
 779 02a6 00C0      	 rjmp .L45
 780               	.LVL19:
 781               	.L23:
 247:myRNDIS.c     **** 	switch (OId)
 782               	 .loc 1 247 0
 783 02a8 8430      	 cpi r24,4
 784 02aa 21E0      	 ldi r18,1
 785 02ac 9207      	 cpc r25,r18
 786 02ae A207      	 cpc r26,r18
 787 02b0 B207      	 cpc r27,r18
 788 02b2 01F0      	 breq .L28
 789 02b4 00F4      	 brsh .L29
 790 02b6 8150      	 subi r24,1
 791 02b8 9140      	 sbci r25,1
 792 02ba A140      	 sbci r26,1
 793 02bc B140      	 sbci r27,1
 794               	.LVL20:
 795 02be 0297      	 sbiw r24,2
 796 02c0 A105      	 cpc r26,__zero_reg__
 797 02c2 B105      	 cpc r27,__zero_reg__
 798 02c4 00F0      	 brlo .+2
 799 02c6 00C0      	 rjmp .L10
 800               	.LVL21:
 321:myRNDIS.c     **** 			memcpy( ResponseData, MyMAC, sizeof(MAC_Address_t));
 801               	 .loc 1 321 0
 802 02c8 86E0      	 ldi r24,lo8(6)
 803 02ca E0E0      	 ldi r30,lo8(MyMAC)
 804 02cc F0E0      	 ldi r31,hi8(MyMAC)
 805 02ce A0E0      	 ldi r26,lo8(RNDISMessageBuffer+24)
 806 02d0 B0E0      	 ldi r27,hi8(RNDISMessageBuffer+24)
 807               	.LVL22:
 808               	 0:
 809 02d2 0190      	 ld r0,Z+
 810 02d4 0D92      	 st X+,r0
 811 02d6 8A95      	 dec r24
 812 02d8 01F4      	 brne 0b
 813               	.LVL23:
 317:myRNDIS.c     **** 			*ResponseSize = sizeof(MAC_Address_t);
 814               	 .loc 1 317 0
GAS LISTING  			page 41


 815 02da 46E0      	 ldi r20,lo8(6)
 816 02dc 50E0      	 ldi r21,0
 817 02de 00C0      	 rjmp .L31
 818               	.LVL24:
 819               	.L29:
 247:myRNDIS.c     **** 	switch (OId)
 820               	 .loc 1 247 0
 821 02e0 8150      	 subi r24,1
 822 02e2 9140      	 sbci r25,1
 823 02e4 A240      	 sbci r26,2
 824 02e6 B140      	 sbci r27,1
 825               	.LVL25:
 826 02e8 0397      	 sbiw r24,3
 827 02ea A105      	 cpc r26,__zero_reg__
 828 02ec B105      	 cpc r27,__zero_reg__
 829 02ee 00F0      	 brlo .L24
 830 02f0 00C0      	 rjmp .L10
 831               	.LVL26:
 832               	.L21:
 282:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 0x00FFFFFF;
 833               	 .loc 1 282 0
 834 02f2 8FEF      	 ldi r24,lo8(-1)
 835 02f4 9FEF      	 ldi r25,lo8(-1)
 836 02f6 AFEF      	 ldi r26,lo8(-1)
 837 02f8 B0E0      	 ldi r27,0
 838               	.LVL27:
 839 02fa 00C0      	 rjmp .L45
 840               	.LVL28:
 841               	.L13:
 291:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = ETHERNET_FRAME_SIZE_MAX;
 842               	 .loc 1 291 0
 843 02fc 80E0      	 ldi r24,0
 844 02fe 91E0      	 ldi r25,lo8(1)
 845 0300 A0E0      	 ldi r26,0
 846 0302 B0E0      	 ldi r27,0
 847               	.LVL29:
 848 0304 00C0      	 rjmp .L45
 849               	.LVL30:
 850               	.L28:
 328:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 1;
 851               	 .loc 1 328 0
 852 0306 81E0      	 ldi r24,lo8(1)
 853 0308 90E0      	 ldi r25,0
 854 030a A0E0      	 ldi r26,0
 855 030c B0E0      	 ldi r27,0
 856               	.LVL31:
 857 030e 00C0      	 rjmp .L45
 858               	.LVL32:
 859               	.L11:
 335:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = CurrPacketFilter;
 860               	 .loc 1 335 0
 861 0310 8091 0000 	 lds r24,CurrPacketFilter
 862 0314 9091 0000 	 lds r25,CurrPacketFilter+1
 863 0318 A091 0000 	 lds r26,CurrPacketFilter+2
 864 031c B091 0000 	 lds r27,CurrPacketFilter+3
 865               	.LVL33:
 866 0320 00C0      	 rjmp .L45
GAS LISTING  			page 42


 867               	.LVL34:
 868               	.L24:
 349:myRNDIS.c     **** 			*((uint32_t*)ResponseData) = 0;
 869               	 .loc 1 349 0
 870 0322 1092 0000 	 sts RNDISMessageBuffer+24,__zero_reg__
 871 0326 1092 0000 	 sts RNDISMessageBuffer+24+1,__zero_reg__
 872 032a 1092 0000 	 sts RNDISMessageBuffer+24+2,__zero_reg__
 873 032e 1092 0000 	 sts RNDISMessageBuffer+24+3,__zero_reg__
 874               	.LVL35:
 875 0332 00C0      	 rjmp .L44
 876               	.LVL36:
 877               	.L45:
 878               	 .loc 1 356 0
 879 0334 8093 0000 	 sts RNDISMessageBuffer+24,r24
 880 0338 9093 0000 	 sts RNDISMessageBuffer+24+1,r25
 881 033c A093 0000 	 sts RNDISMessageBuffer+24+2,r26
 882 0340 B093 0000 	 sts RNDISMessageBuffer+24+3,r27
 883               	.LVL37:
 884               	.L44:
 353:myRNDIS.c     **** 			*ResponseSize = sizeof(uint32_t);
 885               	 .loc 1 353 0
 886 0344 44E0      	 ldi r20,lo8(4)
 887 0346 50E0      	 ldi r21,0
 888 0348 00C0      	 rjmp .L31
 889               	.LVL38:
 890               	.L8:
 891               	.LBE9:
 892               	.LBE8:
 182:myRNDIS.c     **** 			ResponseReady = true;
 893               	 .loc 1 182 0
 894 034a 81E0      	 ldi r24,lo8(1)
 895 034c 8093 0000 	 sts ResponseReady,r24
 896               	.LVL39:
 186:myRNDIS.c     **** 			uint32_t              SET_Oid      = SET_Message->Oid;
 897               	 .loc 1 186 0
 898 0350 8091 0000 	 lds r24,RNDISMessageBuffer+12
 899 0354 9091 0000 	 lds r25,RNDISMessageBuffer+12+1
 900 0358 A091 0000 	 lds r26,RNDISMessageBuffer+12+2
 901 035c B091 0000 	 lds r27,RNDISMessageBuffer+12+3
 902               	.LVL40:
 188:myRNDIS.c     **** 			SET_Response->MessageType       = REMOTE_NDIS_SET_CMPLT;
 903               	 .loc 1 188 0
 904 0360 45E0      	 ldi r20,lo8(5)
 905 0362 50E0      	 ldi r21,0
 906 0364 60E0      	 ldi r22,0
 907 0366 70E8      	 ldi r23,lo8(-128)
 908 0368 4093 0000 	 sts RNDISMessageBuffer,r20
 909 036c 5093 0000 	 sts RNDISMessageBuffer+1,r21
 910 0370 6093 0000 	 sts RNDISMessageBuffer+2,r22
 911 0374 7093 0000 	 sts RNDISMessageBuffer+3,r23
 189:myRNDIS.c     **** 			SET_Response->MessageLength     = sizeof(RNDIS_Set_Complete_t);
 912               	 .loc 1 189 0
 913 0378 40E1      	 ldi r20,lo8(16)
 914 037a 50E0      	 ldi r21,0
 915 037c 60E0      	 ldi r22,0
 916 037e 70E0      	 ldi r23,0
 917 0380 4093 0000 	 sts RNDISMessageBuffer+4,r20
GAS LISTING  			page 43


 918 0384 5093 0000 	 sts RNDISMessageBuffer+4+1,r21
 919 0388 6093 0000 	 sts RNDISMessageBuffer+4+2,r22
 920 038c 7093 0000 	 sts RNDISMessageBuffer+4+3,r23
 193:myRNDIS.c     **** 			                                                      SET_Message->InformationBufferOffset];
 921               	 .loc 1 193 0
 922 0390 4091 0000 	 lds r20,RNDISMessageBuffer+20
 923 0394 5091 0000 	 lds r21,RNDISMessageBuffer+20+1
 924 0398 6091 0000 	 lds r22,RNDISMessageBuffer+20+2
 925 039c 7091 0000 	 lds r23,RNDISMessageBuffer+20+3
 926               	.LVL41:
 927               	.LBB10:
 928               	.LBB11:
 357:myRNDIS.c     **** 
 358:myRNDIS.c     **** 			return true;
 359:myRNDIS.c     **** 		default:
 360:myRNDIS.c     **** 			return false;
 361:myRNDIS.c     **** 	}
 362:myRNDIS.c     **** }
 363:myRNDIS.c     **** 
 364:myRNDIS.c     **** /** Processes RNDIS set commands, setting adapter parameters to values given by the host. The reque
 365:myRNDIS.c     ****  *  as an OID value.
 366:myRNDIS.c     ****  *
 367:myRNDIS.c     ****  *  \param[in] OId      OId value of the parameter being set
 368:myRNDIS.c     ****  *  \param[in] SetData  Pointer to the parameter value in the RNDIS message buffer
 369:myRNDIS.c     ****  *  \param[in] SetSize  Size in bytes of the parameter value being sent by the host
 370:myRNDIS.c     ****  *
 371:myRNDIS.c     ****  *  \return Boolean \c true if the set was handled, \c false otherwise
 372:myRNDIS.c     ****  */
 373:myRNDIS.c     **** static bool ProcessNDISSet(uint32_t OId, void* SetData, uint16_t SetSize)
 374:myRNDIS.c     **** {
 375:myRNDIS.c     **** 	/* Handler for REMOTE_NDIS_SET_MSG messages */
 376:myRNDIS.c     **** 
 377:myRNDIS.c     **** 	switch (OId)
 929               	 .loc 1 377 0
 930 03a0 8E30      	 cpi r24,14
 931 03a2 21E0      	 ldi r18,1
 932 03a4 9207      	 cpc r25,r18
 933 03a6 A207      	 cpc r26,r18
 934 03a8 B105      	 cpc r27,__zero_reg__
 935 03aa 01F0      	 breq .L33
 936 03ac 8330      	 cpi r24,3
 937 03ae 9140      	 sbci r25,1
 938 03b0 A140      	 sbci r26,1
 939 03b2 B140      	 sbci r27,1
 940 03b4 01F4      	 brne .+2
 941 03b6 00C0      	 rjmp .L34
 942               	.LBE11:
 943               	.LBE10:
 198:myRNDIS.c     **** 			  SET_Response->Status        = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 944               	 .loc 1 198 0
 945 03b8 8BEB      	 ldi r24,lo8(-69)
 946 03ba 90E0      	 ldi r25,0
 947 03bc A0E0      	 ldi r26,0
 948 03be B0EC      	 ldi r27,lo8(-64)
 949               	.LVL42:
 950 03c0 8093 0000 	 sts RNDISMessageBuffer+12,r24
 951 03c4 9093 0000 	 sts RNDISMessageBuffer+12+1,r25
GAS LISTING  			page 44


 952 03c8 A093 0000 	 sts RNDISMessageBuffer+12+2,r26
 953 03cc B093 0000 	 sts RNDISMessageBuffer+12+3,r27
 954               	.LVL43:
 955 03d0 0895      	 ret
 956               	.LVL44:
 957               	.L33:
 192:myRNDIS.c     **** 			void* SetData                   = &RNDISMessageBuffer[sizeof(RNDIS_Message_Header_t) +
 958               	 .loc 1 192 0
 959 03d2 DB01      	 movw r26,r22
 960 03d4 CA01      	 movw r24,r20
 961               	.LVL45:
 962 03d6 0896      	 adiw r24,8
 963 03d8 A11D      	 adc r26,__zero_reg__
 964 03da B11D      	 adc r27,__zero_reg__
 965               	.LBB13:
 966               	.LBB12:
 378:myRNDIS.c     **** 	{
 379:myRNDIS.c     **** 		case OID_GEN_CURRENT_PACKET_FILTER:
 380:myRNDIS.c     **** 			/* Save the packet filter mask in case the host queries it again later */
 381:myRNDIS.c     **** 			CurrPacketFilter = *((uint32_t*)SetData);
 967               	 .loc 1 381 0
 968 03dc FC01      	 movw r30,r24
 969 03de E050      	 subi r30,lo8(-(RNDISMessageBuffer))
 970 03e0 F040      	 sbci r31,hi8(-(RNDISMessageBuffer))
 971 03e2 8081      	 ld r24,Z
 972 03e4 9181      	 ldd r25,Z+1
 973 03e6 A281      	 ldd r26,Z+2
 974 03e8 B381      	 ldd r27,Z+3
 975 03ea 8093 0000 	 sts CurrPacketFilter,r24
 976 03ee 9093 0000 	 sts CurrPacketFilter+1,r25
 977 03f2 A093 0000 	 sts CurrPacketFilter+2,r26
 978 03f6 B093 0000 	 sts CurrPacketFilter+3,r27
 979               	.LVL46:
 382:myRNDIS.c     **** 
 383:myRNDIS.c     **** 			/* Set the RNDIS state to initialized if the packet filter is non-zero */
 384:myRNDIS.c     **** 			CurrRNDISState = ((CurrPacketFilter) ? RNDIS_Data_Initialized : RNDIS_Data_Initialized);
 980               	 .loc 1 384 0
 981 03fa 82E0      	 ldi r24,lo8(2)
 982 03fc 8093 0000 	 sts CurrRNDISState,r24
 983 0400 00C0      	 rjmp .L34
 984               	.LVL47:
 985               	.L7:
 986               	.LBE12:
 987               	.LBE13:
 204:myRNDIS.c     **** 			ResponseReady = true;
 988               	 .loc 1 204 0
 989 0402 81E0      	 ldi r24,lo8(1)
 990 0404 8093 0000 	 sts ResponseReady,r24
 991               	.LVL48:
 208:myRNDIS.c     **** 			RESET_Response->MessageType         = REMOTE_NDIS_RESET_CMPLT;
 992               	 .loc 1 208 0
 993 0408 86E0      	 ldi r24,lo8(6)
 994 040a 90E0      	 ldi r25,0
 995 040c A0E0      	 ldi r26,0
 996 040e B0E8      	 ldi r27,lo8(-128)
 997 0410 8093 0000 	 sts RNDISMessageBuffer,r24
 998 0414 9093 0000 	 sts RNDISMessageBuffer+1,r25
GAS LISTING  			page 45


 999 0418 A093 0000 	 sts RNDISMessageBuffer+2,r26
 1000 041c B093 0000 	 sts RNDISMessageBuffer+3,r27
 209:myRNDIS.c     **** 			RESET_Response->MessageLength       = sizeof(RNDIS_Reset_Complete_t);
 1001               	 .loc 1 209 0
 1002 0420 80E1      	 ldi r24,lo8(16)
 1003 0422 90E0      	 ldi r25,0
 1004 0424 A0E0      	 ldi r26,0
 1005 0426 B0E0      	 ldi r27,0
 1006 0428 8093 0000 	 sts RNDISMessageBuffer+4,r24
 1007 042c 9093 0000 	 sts RNDISMessageBuffer+4+1,r25
 1008 0430 A093 0000 	 sts RNDISMessageBuffer+4+2,r26
 1009 0434 B093 0000 	 sts RNDISMessageBuffer+4+3,r27
 210:myRNDIS.c     **** 			RESET_Response->Status              = REMOTE_NDIS_STATUS_SUCCESS;
 1010               	 .loc 1 210 0
 1011 0438 1092 0000 	 sts RNDISMessageBuffer+8,__zero_reg__
 1012 043c 1092 0000 	 sts RNDISMessageBuffer+8+1,__zero_reg__
 1013 0440 1092 0000 	 sts RNDISMessageBuffer+8+2,__zero_reg__
 1014 0444 1092 0000 	 sts RNDISMessageBuffer+8+3,__zero_reg__
 1015 0448 00C0      	 rjmp .L34
 1016               	.LVL49:
 1017               	.L9:
 217:myRNDIS.c     **** 			ResponseReady = true;
 1018               	 .loc 1 217 0
 1019 044a 81E0      	 ldi r24,lo8(1)
 1020 044c 8093 0000 	 sts ResponseReady,r24
 1021               	.LVL50:
 222:myRNDIS.c     **** 			KEEPALIVE_Response->MessageType     = REMOTE_NDIS_KEEPALIVE_CMPLT;
 1022               	 .loc 1 222 0
 1023 0450 88E0      	 ldi r24,lo8(8)
 1024 0452 90E0      	 ldi r25,0
 1025 0454 A0E0      	 ldi r26,0
 1026 0456 B0E8      	 ldi r27,lo8(-128)
 1027 0458 8093 0000 	 sts RNDISMessageBuffer,r24
 1028 045c 9093 0000 	 sts RNDISMessageBuffer+1,r25
 1029 0460 A093 0000 	 sts RNDISMessageBuffer+2,r26
 1030 0464 B093 0000 	 sts RNDISMessageBuffer+3,r27
 223:myRNDIS.c     **** 			KEEPALIVE_Response->MessageLength   = sizeof(RNDIS_KeepAlive_Complete_t);
 1031               	 .loc 1 223 0
 1032 0468 80E1      	 ldi r24,lo8(16)
 1033 046a 90E0      	 ldi r25,0
 1034 046c A0E0      	 ldi r26,0
 1035 046e B0E0      	 ldi r27,0
 1036 0470 8093 0000 	 sts RNDISMessageBuffer+4,r24
 1037 0474 9093 0000 	 sts RNDISMessageBuffer+4+1,r25
 1038 0478 A093 0000 	 sts RNDISMessageBuffer+4+2,r26
 1039 047c B093 0000 	 sts RNDISMessageBuffer+4+3,r27
 1040 0480 00C0      	 rjmp .L34
 1041               	.LVL51:
 1042               	.L31:
 164:myRNDIS.c     **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_SUCCESS;
 1043               	 .loc 1 164 0
 1044 0482 1092 0000 	 sts RNDISMessageBuffer+12,__zero_reg__
 1045 0486 1092 0000 	 sts RNDISMessageBuffer+12+1,__zero_reg__
 1046 048a 1092 0000 	 sts RNDISMessageBuffer+12+2,__zero_reg__
 1047 048e 1092 0000 	 sts RNDISMessageBuffer+12+3,__zero_reg__
 165:myRNDIS.c     **** 				QUERY_Response->MessageLength          += ResponseSize;
 1048               	 .loc 1 165 0
GAS LISTING  			page 46


 1049 0492 60E0      	 ldi r22,0
 1050 0494 70E0      	 ldi r23,0
 1051 0496 8091 0000 	 lds r24,RNDISMessageBuffer+4
 1052 049a 9091 0000 	 lds r25,RNDISMessageBuffer+4+1
 1053 049e A091 0000 	 lds r26,RNDISMessageBuffer+4+2
 1054 04a2 B091 0000 	 lds r27,RNDISMessageBuffer+4+3
 1055 04a6 840F      	 add r24,r20
 1056 04a8 951F      	 adc r25,r21
 1057 04aa A61F      	 adc r26,r22
 1058 04ac B71F      	 adc r27,r23
 1059 04ae 8093 0000 	 sts RNDISMessageBuffer+4,r24
 1060 04b2 9093 0000 	 sts RNDISMessageBuffer+4+1,r25
 1061 04b6 A093 0000 	 sts RNDISMessageBuffer+4+2,r26
 1062 04ba B093 0000 	 sts RNDISMessageBuffer+4+3,r27
 167:myRNDIS.c     **** 				QUERY_Response->InformationBufferLength = ResponseSize;
 1063               	 .loc 1 167 0
 1064 04be 4093 0000 	 sts RNDISMessageBuffer+16,r20
 1065 04c2 5093 0000 	 sts RNDISMessageBuffer+16+1,r21
 1066 04c6 6093 0000 	 sts RNDISMessageBuffer+16+2,r22
 1067 04ca 7093 0000 	 sts RNDISMessageBuffer+16+3,r23
 168:myRNDIS.c     **** 				QUERY_Response->InformationBufferOffset = (sizeof(RNDIS_Query_Complete_t) - sizeof(RNDIS_Messag
 1068               	 .loc 1 168 0
 1069 04ce 80E1      	 ldi r24,lo8(16)
 1070 04d0 90E0      	 ldi r25,0
 1071 04d2 A0E0      	 ldi r26,0
 1072 04d4 B0E0      	 ldi r27,0
 1073 04d6 8093 0000 	 sts RNDISMessageBuffer+20,r24
 1074 04da 9093 0000 	 sts RNDISMessageBuffer+20+1,r25
 1075 04de A093 0000 	 sts RNDISMessageBuffer+20+2,r26
 1076 04e2 B093 0000 	 sts RNDISMessageBuffer+20+3,r27
 1077 04e6 0895      	 ret
 1078               	.LVL52:
 1079               	.L10:
 172:myRNDIS.c     **** 				QUERY_Response->Status                  = REMOTE_NDIS_STATUS_NOT_SUPPORTED;
 1080               	 .loc 1 172 0
 1081 04e8 8BEB      	 ldi r24,lo8(-69)
 1082 04ea 90E0      	 ldi r25,0
 1083 04ec A0E0      	 ldi r26,0
 1084 04ee B0EC      	 ldi r27,lo8(-64)
 1085 04f0 8093 0000 	 sts RNDISMessageBuffer+12,r24
 1086 04f4 9093 0000 	 sts RNDISMessageBuffer+12+1,r25
 1087 04f8 A093 0000 	 sts RNDISMessageBuffer+12+2,r26
 1088 04fc B093 0000 	 sts RNDISMessageBuffer+12+3,r27
 1089               	.LVL53:
 174:myRNDIS.c     **** 				QUERY_Response->InformationBufferLength = 0;
 1090               	 .loc 1 174 0
 1091 0500 1092 0000 	 sts RNDISMessageBuffer+16,__zero_reg__
 1092 0504 1092 0000 	 sts RNDISMessageBuffer+16+1,__zero_reg__
 1093 0508 1092 0000 	 sts RNDISMessageBuffer+16+2,__zero_reg__
 1094 050c 1092 0000 	 sts RNDISMessageBuffer+16+3,__zero_reg__
 175:myRNDIS.c     **** 				QUERY_Response->InformationBufferOffset = 0;
 1095               	 .loc 1 175 0
 1096 0510 1092 0000 	 sts RNDISMessageBuffer+20,__zero_reg__
 1097 0514 1092 0000 	 sts RNDISMessageBuffer+20+1,__zero_reg__
 1098 0518 1092 0000 	 sts RNDISMessageBuffer+20+2,__zero_reg__
 1099 051c 1092 0000 	 sts RNDISMessageBuffer+20+3,__zero_reg__
 1100 0520 0895      	 ret
GAS LISTING  			page 47


 1101               	.LVL54:
 1102               	.L34:
 196:myRNDIS.c     **** 			  SET_Response->Status        = REMOTE_NDIS_STATUS_SUCCESS;
 1103               	 .loc 1 196 0
 1104 0522 1092 0000 	 sts RNDISMessageBuffer+12,__zero_reg__
 1105 0526 1092 0000 	 sts RNDISMessageBuffer+12+1,__zero_reg__
 1106 052a 1092 0000 	 sts RNDISMessageBuffer+12+2,__zero_reg__
 1107 052e 1092 0000 	 sts RNDISMessageBuffer+12+3,__zero_reg__
 1108 0532 0895      	 ret
 1109               	.LBE7:
 1110               	 .cfi_endproc
 1111               	.LFE95:
 1113               	.global CurrPacketFilter
 1114               	 .section .bss
 1117               	CurrPacketFilter:
 1118 0000 0000 0000 	 .zero 4
 1119               	.global CurrRNDISState
 1122               	CurrRNDISState:
 1123 0004 00        	 .zero 1
 1124               	.global ResponseReady
 1127               	ResponseReady:
 1128 0005 00        	 .zero 1
 1129               	.global MessageHeader
 1130               	 .data
 1133               	MessageHeader:
 1134 0000 0000      	 .word RNDISMessageBuffer
 1135               	 .comm RNDISMessageBuffer,132,1
 1136               	 .section .progmem.data,"a",@progbits
 1139               	AdapterSupportedOIDList:
 1140 0000 01        	 .byte 1
 1141 0001 01        	 .byte 1
 1142 0002 01        	 .byte 1
 1143 0003 00        	 .byte 0
 1144 0004 02        	 .byte 2
 1145 0005 02        	 .byte 2
 1146 0006 01        	 .byte 1
 1147 0007 00        	 .byte 0
 1148 0008 02        	 .byte 2
 1149 0009 01        	 .byte 1
 1150 000a 01        	 .byte 1
 1151 000b 00        	 .byte 0
 1152 000c 03        	 .byte 3
 1153 000d 01        	 .byte 1
 1154 000e 01        	 .byte 1
 1155 000f 00        	 .byte 0
 1156 0010 04        	 .byte 4
 1157 0011 01        	 .byte 1
 1158 0012 01        	 .byte 1
 1159 0013 00        	 .byte 0
 1160 0014 06        	 .byte 6
 1161 0015 01        	 .byte 1
 1162 0016 01        	 .byte 1
 1163 0017 00        	 .byte 0
 1164 0018 11        	 .byte 17
 1165 0019 01        	 .byte 1
 1166 001a 01        	 .byte 1
 1167 001b 00        	 .byte 0
GAS LISTING  			page 48


 1168 001c 07        	 .byte 7
 1169 001d 01        	 .byte 1
 1170 001e 01        	 .byte 1
 1171 001f 00        	 .byte 0
 1172 0020 0A        	 .byte 10
 1173 0021 01        	 .byte 1
 1174 0022 01        	 .byte 1
 1175 0023 00        	 .byte 0
 1176 0024 0B        	 .byte 11
 1177 0025 01        	 .byte 1
 1178 0026 01        	 .byte 1
 1179 0027 00        	 .byte 0
 1180 0028 0C        	 .byte 12
 1181 0029 01        	 .byte 1
 1182 002a 01        	 .byte 1
 1183 002b 00        	 .byte 0
 1184 002c 0D        	 .byte 13
 1185 002d 01        	 .byte 1
 1186 002e 01        	 .byte 1
 1187 002f 00        	 .byte 0
 1188 0030 0E        	 .byte 14
 1189 0031 01        	 .byte 1
 1190 0032 01        	 .byte 1
 1191 0033 00        	 .byte 0
 1192 0034 11        	 .byte 17
 1193 0035 01        	 .byte 1
 1194 0036 01        	 .byte 1
 1195 0037 00        	 .byte 0
 1196 0038 14        	 .byte 20
 1197 0039 01        	 .byte 1
 1198 003a 01        	 .byte 1
 1199 003b 00        	 .byte 0
 1200 003c 01        	 .byte 1
 1201 003d 01        	 .byte 1
 1202 003e 02        	 .byte 2
 1203 003f 00        	 .byte 0
 1204 0040 02        	 .byte 2
 1205 0041 01        	 .byte 1
 1206 0042 02        	 .byte 2
 1207 0043 00        	 .byte 0
 1208 0044 03        	 .byte 3
 1209 0045 01        	 .byte 1
 1210 0046 02        	 .byte 2
 1211 0047 00        	 .byte 0
 1212 0048 04        	 .byte 4
 1213 0049 01        	 .byte 1
 1214 004a 02        	 .byte 2
 1215 004b 00        	 .byte 0
 1216 004c 05        	 .byte 5
 1217 004d 01        	 .byte 1
 1218 004e 02        	 .byte 2
 1219 004f 00        	 .byte 0
 1220 0050 01        	 .byte 1
 1221 0051 01        	 .byte 1
 1222 0052 01        	 .byte 1
 1223 0053 01        	 .byte 1
 1224 0054 02        	 .byte 2
GAS LISTING  			page 49


 1225 0055 01        	 .byte 1
 1226 0056 01        	 .byte 1
 1227 0057 01        	 .byte 1
 1228 0058 03        	 .byte 3
 1229 0059 01        	 .byte 1
 1230 005a 01        	 .byte 1
 1231 005b 01        	 .byte 1
 1232 005c 04        	 .byte 4
 1233 005d 01        	 .byte 1
 1234 005e 01        	 .byte 1
 1235 005f 01        	 .byte 1
 1236 0060 01        	 .byte 1
 1237 0061 01        	 .byte 1
 1238 0062 02        	 .byte 2
 1239 0063 01        	 .byte 1
 1240 0064 02        	 .byte 2
 1241 0065 01        	 .byte 1
 1242 0066 02        	 .byte 2
 1243 0067 01        	 .byte 1
 1244 0068 03        	 .byte 3
 1245 0069 01        	 .byte 1
 1246 006a 02        	 .byte 2
 1247 006b 01        	 .byte 1
 1250               	AdapterVendorDescription:
 1251 006c 4C55 4641 	 .string "LUFA RNDIS Adapter"
 1251      2052 4E44 
 1251      4953 2041 
 1251      6461 7074 
 1251      6572 00
 1252               	 .text
 1253               	.Letext0:
 1254               	 .file 2 "/usr/lib/avr/include/stdint.h"
 1255               	 .file 3 "/usr/lib/gcc/avr/4.8.2/include/stddef.h"
 1256               	 .file 4 "./LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 1257               	 .file 5 "./LUFA/Drivers/USB/Core/USBTask.h"
 1258               	 .file 6 "eth_config.h"
 1259               	 .file 7 "/usr/lib/avr/include/avr/pgmspace.h"
GAS LISTING  			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 myRNDIS.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:436    .text:0000000000000000 ProcessRNDISControlMessage
    {standard input}:1133   .data:0000000000000000 MessageHeader
    {standard input}:1127   .bss:0000000000000005 ResponseReady
                            *COM*:0000000000000084 RNDISMessageBuffer
    {standard input}:1122   .bss:0000000000000004 CurrRNDISState
    {standard input}:1139   .progmem.data:0000000000000000 AdapterSupportedOIDList
    {standard input}:1250   .progmem.data:000000000000006c AdapterVendorDescription
    {standard input}:1117   .bss:0000000000000000 CurrPacketFilter
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
memcpy_P
MyMAC
__do_copy_data
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "tcp_awful.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.bc17d6271b7db497,"",@progbits
  10 0000 789C 6D50 	 .string "x\234mP9\022\3020\020\223l\022\032&\204\033\002\303#\362\002\236@\317\027RP\321\320\270\244\342\261\f\025\r,\353\203d\302\316\316XV\264\2266\006\006\377\352N\177\316@\213\314\346\224{\352!F,\364\363\2304'6*\356!W\372\001\275\361\330z@\332*\353\315\025\332\2743h\314\025/wse\303\301\231?\031EfZx\342\027\230JR\033\350,j\363=0\307\202XR\266"
  10      3912 C230 
  10      1093 6C12 
  10      1A26 841B 
  10      02C3 23F2 
  11 007c 2EC0 8AC6 	 .ascii ".\300\212\306{\324\372\242\307\225\304Q\360|\213\354\220\370"
  11      7BD4 FAA2 
  11      C795 C451 
  11      F07C 8BEC 
  11      90F8 
  12 008e 3AF2 8F2E 	 .ascii ":\362\217.\277n\315\026\301K\214\"%\351\203\333\206\337UQ\205"
  12      BF6E CD16 
  12      C14B 8C22 
  12      25E9 83DB 
  12      86DF 5551 
  13 00a3 BFA7 49D9 	 .ascii "\277\247I\331\353T\333\0243\236\273\030\327\327\007\257 \037"
  13      EB54 DB14 
  13      339E BB18 
  13      D7D7 07AF 
  13      201F 
  14 00b5 82        	 .ascii "\202"
  15               	 .text
  16               	 .section .gnu.lto_.inline.bc17d6271b7db497,"",@progbits
  17 0000 789C 7D52 	 .string "x\234}R\261N\303@\f}\276\\\2236M\223\246\245T-H]:T\fHHlH\374"
  17      B14E C340 
  17      0C7D BE5C 
  17      9336 4D93 
  17      A6A5 542D 
  18 001f 5216 663E 	 .string "R\026f>\201\177`\200\215!\013L\031\372\t\035\031\030\230\030Qg\246NHl\210\221\t\373\222\\H\251\222\301>=?\333\317v\024\024v}s'\367C\240\343\021T\360|\001w93d\007\236\313P\373\345\334B-\201\024\221\274\305h\275\234\345A\265\216\264\2306\243m\270\bO\230E\246\nr\206\373u\254%Ou97Mv:\017\343\210[.\262W\262=\003D!c\203\365=!`\246`!\342SQ\273\271\2624\251\260m\",2*t\250pu]#\323\177[\350h\224\250{2S\232\024yN"
  18      817F 6080 
  18      8D21 0B4C 
  18      19FA 091D 
  18      1918 9818 
  19 00c2 59AD 710C 	 .string "Y\255q\f\306\350\304\234\317\263Vk\314Ci2\200\027\310>\227Y5\334\020a\227\261\360\343\256\302L\007\256\205=\214\246\034\234\177\377(\033\034\301\367\313\211\374\333\263\022\327\371\300\373h\365\310\234\2726i\232\2141yCy\021{4~h+\221gj\366\2266A|Tj\030<\335T\312\311\257\337\027S<\322\203bE\033Z}\272\333\242\376l\324,\250i\355\205\023\t\354\310\247\242[ev\375"
  19      C6E8 C49C 
  19      CFB3 566B 
  19      CC43 6932 
  19      8017 C83E 
  20 0141 C61C 20EA 	 .ascii "\306\034 \352\227r\373\357\227\365\225U\245\017\341E%\215\177"
  20      9772 FBEF 
  20      97F5 9555 
  20      A50F E145 
  20      258D 7F
  21 0154 E4FA FDE4 	 .ascii "\344\372\375\344\340\277\237\304O\232"
  21      E0BF 9FC4 
  21      4F9A 
  22               	 .text
  23               	 .section .gnu.lto_.pureconst.bc17d6271b7db497,"",@progbits
GAS LISTING  			page 2


  24 0000 789C 6362 	 .string "x\234cb`bPg\200"
  24      6062 5067 
  24      8000 
  25 000a 6106 0966 	 .string "a\006\tf\026V\t6\tvV\036)>\t~IA\t!)aI\021)Q\t1\tq\tI)))i\t\031I"
  25      1656 0936 
  25      0976 561E 
  25      293E 097E 
  25      4941 0921 
  26 0032 3A15 0321 	 .ascii ":\025\003!"
  27               	 .text
  28               	 .section .gnu.lto_et_push8.bc17d6271b7db497,"",@progbits
  29 0000 789C 8D50 	 .string "x\234\215P\317KBA\020\236\331\335\367\220\310\360/\250\020:\252X\177@\247\016\335\003\203\202\0205B^\366@o\035\234\247\006B\027\351\024y\222\020:\004y\352\024\345)\212(\b\274y\361\324\037\321e\233}?\254\244C\003\273\337\356\316|\3377\263\002\004\314\306*\2571\002\244\030\321\002\024\2357"
  29      CF4B 4241 
  29      109E D9DD 
  29      F790 C8F0 
  29      2FA8 103A 
  30 0060 2F26 841C 	 .string "/&\204\034e\200\346\324\335\"\320\274D\025<+Ds"
  30      6580 E6D4 
  30      DD22 D0BC 
  30      4415 3C2B 
  30      4473 00
  31 0073 84BA 900A 	 .ascii "\204\272\220\n\353\273h4D\022zDg\223~\367\336:\031P\233\264\256"
  31      EBBB 6834 
  31      4412 7A44 
  31      6793 7EF7 
  31      DE3A 1950 
  32 008a 3BC8 6609 	 .ascii ";\310f\t\204}\204\035t\020\023>\210\231\006\002\"\215\037\033"
  32      847D 841D 
  32      7410 133E 
  32      8899 0602 
  32      228D 1F1B 
  33 009e 2BE7 D41A 	 .ascii "+\347\324\032j\275\356\363\226\376\344\271\370M\274\021\303\211"
  33      6ABD EEF3 
  33      96FE E4B9 
  33      F84D BC11 
  33      C389 
  34 00b0 D657 A776 	 .ascii "\326W\247vLB\021{\230\004\305x\311h\243\213\246\320\202\026Q"
  34      4C42 117B 
  34      9804 C578 
  34      C968 A38B 
  34      A6D0 8216 
  35 00c5 6719 8C12 	 .ascii "g\031\214\022G\216w\323\3726\n\203\362\025\032\317\235\245\""
  35      478E 77D3 
  35      FA36 0A83 
  35      F215 1ACF 
  35      9DA5 22
  36 00d8 F679 E832 	 .ascii "\366y\3502\312.\\xD\tv?\206O\236\200O2\3603\3662t}\202\326\207"
  36      CA2E 5C78 
  36      4409 763F 
  36      864F 9E80 
  36      4F32 F033 
  37 00f3 F780 5396 	 .ascii "\367\200S\226\311\201\376\321\026\313K\030eX\275\331n\336\306"
  37      C981 FED1 
  37      16CB 4B18 
  37      6558 BDD9 
  37      6EDE C6
  38 0106 A342 15D5 	 .ascii "\243B\025\325\232Rv\336\f\022\3771e\262Oy\031T\003R\n\256\211"
GAS LISTING  			page 3


  38      9A52 76DE 
  38      0C12 FF31 
  38      65B2 4F79 
  38      1954 0352 
  39 011d 636C 3BA8 	 .ascii "cl;\250\246\002\326T\300vQ\204\002v(\020u_\016_\270I\345\377"
  39      A602 D654 
  39      C076 5184 
  39      0276 2810 
  39      755F 0E5F 
  40 0135 C13B 78C3 	 .ascii "\301;x\303p\230(r\374w\2342\022\361J\251\266W8:t\363\265\364"
  40      7098 2872 
  40      FC77 9C32 
  40      12F1 4AA9 
  40      B657 383A 
  41 014d 012C 6C6C 	 .ascii "\001,llUK\225\242\353\344\013\245t6\373\373\272\366\005F>~\320"
  41      554B 95A2 
  41      EBE4 0BA5 
  41      7436 FBFB 
  41      BAF6 0546 
  42               	 .text
  43               	 .section .gnu.lto_et_get_write_length.bc17d6271b7db497,"",@progbits
  44 0000 789C 8590 	 .ascii "x\234\205\2201K\303@\024\307\377\357.\t.JpsR\372\001\002\231"
  44      314B C340 
  44      14C7 FFEF 
  44      2E09 2E4A 
  44      7073 52FA 
  45 0017 F40B 38B8 	 .ascii "\364\0138\270\013\025\024$m\"\"\265\006S'\207\\\255\205Z\227"
  45      0B15 1424 
  45      6D22 22B5 
  45      0653 2787 
  45      5CAD 855A 
  46 002c 204E 3A55 	 .ascii " N:Uq\366+tqpP\360\023\230\321\321\331\301\370^\332f\350\342"
  46      71F6 2B74 
  46      7170 50F0 
  46      1398 D1D1 
  46      D9C1 F85E 
  47 0044 C1DD FFDD 	 .ascii "\301\335\377\335\273\367\373\277\307)(\314\257\025\336g\004\370"
  47      BBF7 FBBF 
  47      C729 28CC 
  47      AF15 DE67 
  47      04F8 
  48 0056 ACA4 412A 	 .ascii "\254\244A*{\007\272\013\212H\002\020RE\351\036I\251\252ad\314"
  48      7B07 BA0B 
  48      8A48 0210 
  48      5245 E91E 
  48      49A9 AA61 
  49 006c 4DDE FF7C 	 .ascii "M\336\377|\241\37607\231\371-Rj\021\273\272\204\003\302._\310"
  49      A1FE 3037 
  49      99F9 2D52 
  49      6A11 BBBA 
  49      8403 C22E 
  50 0082 2D45 CD75 	 .ascii "-E\315u\232\240fx;&\301\n.\321\n\253\377a\317j\234\027\305\327"
  50      9AA0 6678 
  50      3B26 C10A 
  50      2ED1 0AAB 
  50      FF61 CF6A 
  51 009a B5E3 2884 	 .ascii "\265\343(\2044\242\0324\353#\253\005v\260\371\260\270\314\306"
GAS LISTING  			page 4


  51      34A2 1A34 
  51      EB23 AB05 
  51      76B0 F9B0 
  51      B8CC C6
  52 00ad A531 D91A 	 .ascii "\2451\331\032\304\215W\235O\231~\207\224\250~\303\305\353w#\244"
  52      C48D 579D 
  52      4F99 7E87 
  52      94A8 7EC3 
  52      C5EB 7723 
  53 00c2 27B2 7144 	 .ascii "'\262qD\352\036w]c\\\036\374\034?f \221\035\227\240\214`O[3\264"
  53      EA1E 775D 
  53      635C 1EFC 
  53      1C3F 6620 
  53      911D 97A0 
  54 00dc 3543 7485 	 .ascii "5Ct\205X\025\342\304DS\304\251\220\336\225\2361\026wb\262\314"
  54      5815 E2C4 
  54      4453 C4A9 
  54      90DE 959E 
  54      3116 7762 
  55 00f2 0E7A 0F55 	 .ascii "\016z\017U\336\346'\201\264P\037\240*?\361\250\263+\317,\377"
  55      DEE6 2781 
  55      B450 1FA0 
  55      2A3F F1A8 
  55      B32B CF2C 
  56 0107 B0D8 8E3A 	 .ascii "\260\330\216:\373\315\223\3438\350x\207X\332\334N\242v\030\267"
  56      FBCD 93E3 
  56      38E8 7887 
  56      58DA DC4E 
  56      A276 18B7 
  57 011b 8266 E4F9 	 .ascii "\202f\344\371\353\313ri\004I\024\204\341i\224$\236\277\361\007"
  57      EBCB 7269 
  57      0449 1484 
  57      E169 9424 
  57      9EBF F107 
  58 012f D28C 6458 	 .ascii "\322\214dX"
  59               	 .text
  60               	 .section .gnu.lto_et_alter_word.bc17d6271b7db497,"",@progbits
  61 0000 789C 8D50 	 .ascii "x\234\215P\273J\003A\024=\347N\326]\204\020[;\177@\377\303/H"
  61      BB4A 0341 
  61      143D E74E 
  61      D65D 8410 
  61      5B3B 7F40 
  62 0018 4041 C407 	 .ascii "@A\304\007\262\254\272E:\213\314f\202\244L\255\225\255H\254\264"
  62      B2AC BA45 
  62      3A8B CC66 
  62      82A4 4CAD 
  62      95AD 48AC 
  63 002d 1084 5476 	 .ascii "\020\204Tv\021\374\003\261\265\267\260\211\367\356\272[h\223"
  63      11FC 03B1 
  63      B5B7 B089 
  63      F7EE BA5B 
  63      6893 
  64 003f 0B73 9FE7 	 .ascii "\013s\237\347\23633\002\301_[\327sL\240\243\221\016\224\311+"
  64      9E33 3302 
  64      C15F 5BD7 
  64      734C A0A3 
  64      910E 94C9 
GAS LISTING  			page 5


  65 0054 5024 425A 	 .ascii "P$BZ\002b \034\354\262\304\336\313\354}\261\230>^\276\024\344"
  65      0262 201C 
  65      ECB2 C4DE 
  65      CBEC 7DB1 
  65      983E 5EBE 
  66 006a 2A99 5309 	 .ascii "*\231S\t3\302\251c\244%c+\023+\025\036a\344\375d\243\342\007"
  66      33C2 A963 
  66      A425 632B 
  66      132B 151E 
  66      61E4 FD64 
  67 0081 BAEA 8DB3 	 .ascii "\272\352\215\263G\261\350\346\b\323\360\325>\344\r#\244\224\224"
  67      47B1 E8E6 
  67      08D3 F0D5 
  67      3EE4 0D23 
  67      A494 94
  68 0094 DC61 4649 	 .ascii "\334aFI\024;\307\3603|43\247\343\262\271]u6q\347\325\236WT\350"
  68      143B C7F0 
  68      337C 3433 
  68      A7E3 B2B9 
  68      5D75 3671 
  69 00ae 1A57 85F7 	 .ascii "\032W\205\367k\031\335\005\276\375\330\262Vnp\030[\253\274x\252"
  69      6B19 DD05 
  69      BEFD D8B2 
  69      566E 7018 
  69      5BAB BC78 
  70 00c3 3BF8 CD9C 	 .ascii ";\370\315\234\021\205q\270\355\324\354\261\216\r\033\261V~jf"
  70      1185 71B8 
  70      EDD4 ECB1 
  70      8E0D 1BB1 
  70      567E 6A66 
  71 00d7 496A 4FF9 	 .ascii "IjO\371\247\374\020/\255\0347\312\372\2607\0243VL\265uU@\277"
  71      A7FC 102F 
  71      AD1C 37CA 
  71      FAB0 3714 
  71      3356 4CB5 
  72 00ef C3D6 DA67 	 .ascii "\303\326\332gG\375\275\203\363\323|\277\277u\202\037z\235UL"
  72      47FD BD83 
  72      F3D3 7CBF 
  72      BF75 821F 
  72      7A9D 554C 
  73               	 .text
  74               	 .section .gnu.lto_PUSH32.bc17d6271b7db497,"",@progbits
  75 0000 789C 8591 	 .string "x\234\205\221\261J\303P\030\205\317\371o\323\264!\224\342d7\237\300\327\251\240 R\311\020\356\320Aqph\332(8vv\363\005*\316\"\370\002Utt\252\203S\337\300\245\376\177bZ\310\222\013\367\277\207\234s>.7\002A}\rt?\021\350\351I\007\312\374\r\230v\2044\001b\"\234\234\260\310>\312\353j\263Y\334\337~\006=rL\305y\302\351`\333Th\252k*2\025\333\320Z\200\233,\233\037"
  75      B14A C350 
  75      1885 CFF9 
  75      6FD3 B421 
  75      94E2 6437 
  76 0083 4981 19EA 	 .string "I\201\031\3524\366\021\305N\267D\276\310\237\367\316\371\300"
  76      34F6 11C5 
  76      4EB7 44BE 
  76      C89F F7CE 
  76      F9C0 00
  77 0096 2925 258F 	 .string ")%%\217\351)\373\232]b\266v\225\343\324\004\336\321*?"
  77      E929 FB9A 
  77      5D62 B676 
  77      95E3 D404 
  77      DED1 2A3F 
GAS LISTING  			page 6


  78 00ab D7F8 CDEE 	 .ascii "\327\370\315\356\262\276\247KX\336PC\236-\353)\363E\252f\273"
  78      B2BE A74B 
  78      58DE 5043 
  78      9E2D EB29 
  78      F345 AA66 
  79 00c0 62F6 EBCC 	 .ascii "b\366\353\314P\315Ff\270c~o\231\335\212\331\2513#5\033\231\321"
  79      50CD 4666 
  79      B863 7E6F 
  79      99DD 8AD9 
  79      A933 2335 
  80 00d7 3F73 B6CE 	 .ascii "?s\266\316\177\266\31485\277\241\031\027\315\017LW_R\345\312"
  80      7FB6 CC38 
  80      35BF A119 
  80      17CD 0F4C 
  80      575F 52E5 
  81 00ec 35D4 8CBE 	 .ascii "5\324\214\276\250\375\344\370b4>=\273J.\375\341\b\177\316r_j"
  81      A8FD E4F8 
  81      6234 3E3D 
  81      BB4A 2EFD 
  81      E108 7FCE 
  82               	 .text
  83               	 .section .gnu.lto_GetAssociatedPacket.bc17d6271b7db497,"",@progbits
  84 0000 789C 8D95 	 .string "x\234\215\225\337K\024Q\024\307\317\271w~\356\017w+z)01\310J[\372\001\375x\350o\250\236\022\nBt\r\227\t\227e#\302\007g]\205\205\b6A\220\354A\373\201\205\201\276\005\251\270\225\017\032(HOf\220\017Y\004!\276\004e\301t\356\235\235\331Q\226ta\357\314\271s\276\347\373\271\367\236\331e\300`\373\347.}\227T\2003t\305\020 +.\002\344\f\206\206{\303\231Rh"
  84      DF4B 1451 
  84      14C7 CFB9 
  84      777E EE0F 
  84      772B 7A29 
  85 007f 3BA4 8B31 	 .ascii ";\244\2131\2420uc\277\210\206\317S\2442-\020i\314|\313E\264\370"
  85      A230 7563 
  85      BF88 86CF 
  85      53A4 322D 
  85      1069 CC7C 
  86 0097 1E28 D4DD 	 .ascii "\036(\324\335\no\f\203qY\301\224\025LD1\r\b\335\214+\252\246"
  86      0A6F 0C83 
  86      7159 C194 
  86      154C 4431 
  86      0D08 DD8C 
  87 00ae 1B26 765F 	 .ascii "\033&v_G\201\242\326\303\210m\367\257\366\r=U\373&\354\202\355"
  87      4781 A2D6 
  87      C388 6DF7 
  87      AFF6 0D3D 
  87      55FB 26EC 
  88 00c4 38DD 1612 	 .ascii "8\335\026\022s\f\241\035\341\032Z\210qya\333\326\341\n\355?\003"
  88      730C A11D 
  88      E11A 5A88 
  88      7179 61DB 
  88      D6E1 0AED 
  89 00da CF6D CC0D 	 .ascii "\317m\314\r\333\177\035\207K\341\301\335\tK"
  89      DB7F 1D87 
  89      4BE1 C1DD 
  89      094B 
  90 00e8 1F46 1E5F 	 .string "\037F\036_\266\363%\373\227\343\350\026r\006G+B\303\025b\025a\2614\375\273\256\242S\0304\355J\327_\232Y;V\321\251\f\022;\201\216\263\322\252\343|\032+^\334\203\320\206\243XO\313k\303\027t\345@\326J9\320(\320t1\0304\350&M\217\320tH\004a\n\236P\020\241\300\210\212\241\206f\236\321L\214\002\036/\327\025'\001\275\264\272:\tk\227\246\327\266.\362\344N\213t\353\270@ r\351s\225\306\007\r\320\214\214.|\036zV?g\332p\f\325r^\027l\322\211\333]\264\035'\340%\331\332\003T\331L\273F\241\255\006B\376\375\264'\027f\"I\3610\232\221C\241\201/@\376^~\374\260\233\226B%\205L\322\326\312\n,\350NO\001\026\240gep\205{\371Z\0234\322>\016\301\303\034\321\234\"\030\312\022\005Ti\"K\271\353\367|\311p2_\353\351u*!\236\322q"
  90      B6F3 25FB 
  90      97E3 E816 
  90      7206 472B 
  90      42C3 1562 
  91 01e9 CC41 EF8F 	 .string "\314A\357\217\\\330\177$\347\203+j&\200\331}\204\334\363\261\350\247\031\215p\334\3020\021\340v\367\244\277\345$\231/\356\365$\246\213\033\247\366ww\224\356\"iI(\304\221\262h\016f\277\345\256\370>\244\013\242\2500\245J\224\211\003^J\350\177(\030@\2318\344I\302\325QX5\224I\364\215H\030d\321`\026%\313\306M/%\"Y\242\325YX\205\345u\337f\324\323D}\230\250\017S\223\246>qabA\230W\232\357D\302 \214\016\316\021\001\263\236\037}\247xI5)\261\001t\366\005\277ub4+\312rtI\326\375'\361\224\360\nt\337\250\354\276\270\347`"
GAS LISTING  			page 7


  91      5CD8 7F24 
  91      E783 2B6A 
  91      2680 D97D 
  91      84DC F3B1 
  92 02a1 FD3A 8AD7 	 .string "\375:\212\327\303"
  92      C300 
  93 02a7 BF35 996C 	 .string "\2775\231lx\003\374l\224\375\3645\247zUqK\373\003,\2037\303\0069U\327\013\34620w\341\245\231\237\270\213\227\214\rR\377*\372\324}\024X\246xi\227\350\357"
  93      7803 FC6C 
  93      94FD F435 
  93      A77A 5571 
  93      4BFB 032C 
  94 02df C88D BB16 	 .ascii "\310\215\273\026T\030\265/Qi\004`<\272$^r\244Dq\004\221lk\372"
  94      5418 B52F 
  94      5169 0460 
  94      3CBA 245E 
  94      72A4 4471 
  95 02f8 46CB 9DF6 	 .ascii "F\313\235\366\333V\242\025\302Vgk\213\225\356\314d\023g#\231"
  95      DB56 A215 
  95      C256 676B 
  95      8B95 EECC 
  95      6413 6723 
  96 030d E4AD CE6C 	 .ascii "\344\255\316lR\006\347xG\342\002v`\226g\222\331\177\030\253W"
  96      5206 E778 
  96      47E2 0276 
  96      6096 6792 
  96      D97F 18AB 
  97 0322 67        	 .ascii "g"
  98               	 .text
  99               	 .section .gnu.lto_UpdateRemoteMAC.bc17d6271b7db497,"",@progbits
 100 0000 789C 95D2 	 .string "x\234\225\322\261J\304@\020\006\340\377\237\315\022\217\030\265\265\023lU|\233\023\024DN\256\b)R(\026\026\267\021\013\313+E\033}\001m-\257\022\204S\260\273\302\342\336@\261\222k\316\235\254b\260J\0062;\201\231\371\022\022\201\340\177\254\372k\333"
 100      B14A C440 
 100      1006 E0FF 
 100      9FCD 128F 
 100      18B5 B513 
 101 0051 4BFE A401 	 .ascii "K\376\244\001e\370\002\224\013Bj\001b \034\354\261\352\275\227"
 101      65F8 0294 
 101      0B42 6A01 
 101      6220 1CEC 
 101      B1EA BD97 
 102 0065 D174 3EBF 	 .ascii "\321t>\277\233=\336\214\311eAN\030\026\204\325*\326\324\321\224"
 102      9B3D DE8C 
 102      C965 414E 
 102      1816 84D5 
 102      2AD6 D4D1 
 103 007a 684A 35F9 	 .ascii "hJ5\371\2608wn\270\006\364\253\333\256\317\272x\207\242\247y"
 103      B038 776E 
 103      B806 F4AB 
 103      DBAE CFBA 
 103      7887 A2A7 
 104 008f C6D9 DBE4 	 .ascii "\306\331\333\344}$\207\274\245EF\331\304\206\037\274\306U\351"
 104      7D24 87BC 
 104      A545 46D9 
 104      C486 1FBC 
 104      C655 E9
 105 00a2 DC4A 4E9E 	 .ascii "\334JN\236b\346.\264\222\202\272a\227\276\254\236F+S{\023\277"
 105      62E6 2EB4 
 105      9282 BA61 
GAS LISTING  			page 8


 105      97BE AC9E 
 105      462B 537B 
 106 00b8 EAE9 8361 	 .ascii "\352\351\203aQ\230wq\316(\243\321N[\365d:\253\346W\315\264-M"
 106      5198 7771 
 106      CE28 A3D1 
 106      4E5B F564 
 106      3AAB E657 
 107 00d0 3636 194C 	 .ascii "66\031L\033\314\313\317?3niJcS\202\031\007\363\241fvZ\232\246"
 107      1BCC CBCF 
 107      3F33 6E69 
 107      4A63 5382 
 107      1907 F3A1 
 108 00e9 B169 82D9 	 .ascii "\261i\202\331\t\346\244f&-\315\250\261\031\0053\371\371\2365"
 108      09E6 A466 
 108      262D CDA8 
 108      B119 0533 
 108      F9F9 9E35 
 109 00fd 336D 69DA 	 .ascii "3mi\332\306\246\rf\n\274\242\234\216\327C\343ot\375r\377O\353"
 109      C6A6 0D66 
 109      0ABC A29C 
 109      8ED7 43E3 
 109      6F74 FD72 
 110 0114 E6C5 A35E 	 .ascii "\346\305\243^\261\177p\322?\316\267z\370\006\234\246\267\264"
 110      B17F 70D2 
 110      3FCE B77A 
 110      F806 9CA6 
 110      B7B4 
 111               	 .text
 112               	 .section .gnu.lto_POP32.bc17d6271b7db497,"",@progbits
 113 0000 789C 8D92 	 .string "x\234\215\222\315J\303@\024\205\357\235$&-i\323\246.\324U\021\334\372:-(\210\264fQ\202\210T\024\\tj\\\270\021\212oPD\004A\352\306\205\013\177\226\026\324\342\033\004\037\300\007p\023\357\235\374\200m\220\016\344\336\344\2333s\316\220\021 `z,\323sO\330\245\216\032\240\030|"
 113      CD4A C340 
 113      1485 EF9D 
 113      2426 2D69 
 113      D3A6 2ED4 
 114 005e F42D 81C8 	 .string "\364-\201\310/\200\320\023\330\333D\226\342*\f\245\274\b\257&\347\246\274\223g2\212z>\322\236\016\202\207\260\201>b]5\241\3775\031\211\2270\212\336\256\007k\213\032\370\250\351Tt\003\3328\244=M&\026\223\002\227b\202m\306%&e.N\202\253\214]&\265\204\3200\340T\312A=\375\366T\334\006U>C\023\005wm\002A\370x\324\306K4\240\203\3321\374\320\021*>\032\036*=\355\271"
 114      2F80 D013 
 114      D8DB 4496 
 114      E22A 0CA5 
 114      BC08 AF26 
 115 00df F00E 27DF 	 .string "\360\016'\337\301\r\2462\235\224\f\203\333`7e\006a>\245\271D\213\306 b\036\233\323,"
 115      C10D A632 
 115      9D94 0C83 
 115      DB60 3765 
 115      0661 3EA5 
 116 00fe 3B3D 3553 	 .string ";=5S\271\371\237S'UY$L\214\2762\367\002q\345T\0015\367\020\254\244SE\225\243\220\023\240\030\007x\316\002\330s\005(\221p&@\231\270\n`\315\004pT\206rN"
 116      B9F9 9F53 
 116      2755 5924 
 116      4C8C BE32 
 116      F702 71E5 
 117 0139 270E F09A 	 .ascii "'\016\360\232\005\250\316\025\300%\341\264IM\371\2709&5\200O"
 117      05A8 CE15 
 117      C025 E1B4 
 117      494D F9B8 
 117      3926 3580 
 118 014e E887 633D 	 .ascii "\350\207c=\223\306W\255A\006\364\267\371\242\333\335\326\336"
 118      93C6 57AD 
 118      4106 F4B7 
GAS LISTING  			page 9


 118      F9A2 DBDD 
 118      D6DE 
 119 0160 D6F6 A177 	 .ascii "\326\366\241w\340\257\267@\333\337\351\376\002\301\376\236\372"
 119      E0AF B740 
 119      DBDF E9FE 
 119      02C1 FE9E 
 119      FA
 120               	 .text
 121               	 .section .gnu.lto_write_tcp_header.bc17d6271b7db497,"",@progbits
 122 0000 789C 8D94 	 .string "x\234\215\224\317k\023Q\020\307gv\263i\334&\3516\032m\325\203\277\016\305b\257\342\331\177\300[\025\205\022\222\256\022V]lD0\207\2744Q\nQ\f\202 *\330\"H\321B\274\211\202\260\340\017,\242\"\036\224\242\030/\255'o\202F!\316\274\315\256\261\2336y\220\331\267\217\231\317\314w\336l\024P`\365\032\246\337\007\r`\017=Q\005T\252o"
 122      CF6B 1351 
 122      10C7 6776 
 122      B369 DC26 
 122      E936 1A6D 
 123 0072 8A11 0591 	 .ascii "\212\021\005\2217\200PP\260p\f\331\025w\301\234\020W\353\317"
 123      3780 5050 
 123      B070 0CD9 
 123      1577 C19C 
 123      1057 EBCF 
 124 0086 BFDC D2C4 	 .ascii "\277\334\322\304\0031#"
 124      0331 23
 125 008d 9ACD 8285 	 .string "\232\315\202\205\304\034@0\021\216\242\205h\310\207\262*OMq\352\315\346\247Z\3653nG\2649\306BU\205\f\316\0214L/!\235\214\026%\023\216\2631\310\364%\330$\311D\210\241AY\210\352\0167\0048!\255q\262\\\347aT\370\251\276\206\351\357\245\337\357C\031\274\203\032dQ\311\"y\320i\243\264\214\336\241\232\207\206\240\225\247\342\367\301\002o\257Q\321\033lD\212h\257{\021\246\235\003n\230\233\227\202\371Tq\317\334~8\277~\214\210\222#~6\233}\026\352\n\fvk\007\237\351\274\241\302^\375\251<\271\257\266\304y*\235\312\263\257j\006\357J\245n.\023\245\340\233p\243(\204aa?\213\230\341]\324\226E34\032\300/\022\3762\241\346\t\341\307\352~l\314fA2\"\026\210m<\255\274\330\3515-\234\207\363tM\243\260\327\3028\221\270a\324\r\366wEMb\233\302\267\240\271\201"
 125      C41C 4030 
 125      118E A285 
 125      68C8 87B2 
 125      2A4F 4D71 
 126 018e 7EAE 01B3 	 .ascii "~\256\001\263\325\\\202q\230\301\367>\310\276\027f\271\304\265"
 126      D55C 8271 
 126      98C1 F73E 
 126      C8BE 1766 
 126      B9C4 B5
 127 01a1 DCF9 2462 	 .ascii "\334\371$ba\302\306\326\265\302\377\321\345\331+\301\350\215"
 127      61C2 C6D6 
 127      B5C2 FFD1 
 127      E5D9 2BC1 
 127      E88D 
 128 01b3 A614 D612 	 .ascii "\246\024\326\022$x\2346\265\006a\345\322\021O\224.Ei\243p\217"
 128      2478 9C36 
 128      B506 61E5 
 128      D211 4F94 
 128      2E45 69A3 
 129 01c9 87E0 21B9 	 .ascii "\207\340!\271&;K\303vi\027\235\221@\276\315&\206\374|\375\254"
 129      263B 4BC3 
 129      7669 179D 
 129      9140 BECD 
 129      2686 FC7C 
 130 01df 51E7 5D84 	 .ascii "Q\347]\204\253\334\"\023/}\\6\274\274Q\331F\275s.\305O\024Z["
 130      ABDC 2213 
 130      2F7D 5C36 
 130      BCBC 51D9 
 130      46BD 732E 
 131 01f8 1631 3C45 	 .ascii "\0261<EK\337L\217\033_\217\253\366\306\215\373\334\353+\216\377"
 131      4BDF 4C8F 
 131      1B5F 8FAB 
 131      F6C6 8DFB 
 131      DCEB 2B8E 
 132 020d CD18 929C 	 .ascii "\315\030\222\234tGH\354\017\322C>\275\354\f\005\370C\246|g>\275"
GAS LISTING  			page 10


 132      7447 48EC 
 132      0FD2 433E 
 132      BDEC 0C05 
 132      F843 A67C 
 133 0224 0DBB FC97 	 .ascii "\r\273\374\227\307=z\242\033]\353\225\236\220tr\253\337>\030"
 133      C73D 7AA2 
 133      1B5D EB95 
 133      9E90 7472 
 133      ABDF 3E18 
 134 0238 F0DB 6A62 	 .ascii "\360\333jb\330\277$\343\020]\3156\267\222\371\254WIRVbt\356`"
 134      D8BF 24E3 
 134      105D CD36 
 134      B792 F9AC 
 134      5749 5256 
 135 0250 789D 0EFA 	 .ascii "x\235\016\372lbH.\017\346B\257\203\311\316\265n\316\360\317\367"
 135      6C62 482E 
 135      0FE6 42AF 
 135      83C9 CEB5 
 135      6ECE F0CF 
 136 0265 518F BEEF 	 .ascii "Q\217\276\357\240X\177\274\333\363u\3278M3\375W\362\230Esi{\""
 136      A058 7FBC 
 136      DBF3 75D7 
 136      384D 33FD 
 136      57F2 9845 
 137 027d 75CE 3C6B 	 .ascii "u\316<k\215\245\001s\332T.u&\027;5\231\233H\237>i\247rc'\340"
 137      8DA5 0173 
 137      DA54 2E75 
 137      2617 3B35 
 137      999B 489F 
 138 0298 2F01 FB48 	 .ascii "/\001\373H\307"
 138      C7
 139               	 .text
 140               	 .section .gnu.lto_et_endsend.bc17d6271b7db497,"",@progbits
 141 0000 789C 8590 	 .string "x\234\205\220\277J\303P\024\306\277\357\346\217]\224\342\246\213\322\007(\326\315\007pp\027*(HlR\244\304\032L\267\016\275\365\017X\247 \016b\007)\342\254\203\017\320\325A\3057\350\342K8\030\317m\232\n]<\220|\347\206\357w\276\223\253\2400[K\362\264\tTDi\201*y\007\272\005E\232\006DG\261\263GcU%\f\264\276\036}\335\2778\027\317\372R\247i'\244\314,\022ub\227!Y\034\213\232\311\311@}u3d\242\177\322T,\226\302\312\177\330\223\032\216\322\364\266\347\272\n>\007,\301\022}\020\265!\023\304\341\340\\\353d\025f\220TU\336f\355\035*\243\326\033N_\223e\237\217t\320\240\352\343\256\253uQvn\343[\366\227\316\216\306\240I\267'\251\002m\345\2105E\234)\342F\344\004q\247\310Y\317\312\031[\222\032f\273\0178\3317\374\345\315\325\3070\314l\261\206,"
 141      BF4A C350 
 141      14C6 BFEF 
 141      E68F 5D94 
 141      E2A6 8BD2 
 142 0100 9FE8 0E99 	 .ascii "\237\350\016\231;\263\252\212K~\300\334\307|3h\355\327\216\217"
 142      3BB3 AA8A 
 142      4B7E C0DC 
 142      C77C 3368 
 142      EDD7 8E8F 
 143 0114 22AF 553E 	 .ascii "\"\257U>\304\302\346v\0344\375(\364jA\271\262\261h\016\007^\034"
 143      C4C2 E676 
 143      1C34 FD28 
 143      F46A 41B9 
 143      B2B1 680E 
 144 012b 78BE 7F12 	 .ascii "x\276\177\022\304qy}\355\027\027pdh"
 144      C471 797D 
 144      ED17 1770 
 144      6468 
 145               	 .text
 146               	 .section .gnu.lto_InitTCP.bc17d6271b7db497,"",@progbits
 147 0000 789C 5D91 	 .ascii "x\234]\221=K\003A\020\206\347\335\275\215\247\b~\224\026\"\261"
 147      3D4B 0341 
 147      1086 E7DD 
GAS LISTING  			page 11


 147      BD8D A708 
 147      7E94 1622 
 148 0015 14AD ACC4 	 .ascii "\024\255\254\304\037 \370\003\024\024D\214\001\217+,\024\013"
 148      1F20 F803 
 148      1414 448C 
 148      018F 2B2C 
 148      140B 
 149 0027 916C 4CC4 	 .ascii "\221lL\304\200 \301F\361\243\bA\013\021\264\024\322DA\320B\321"
 149      8020 C146 
 149      F1A3 0841 
 149      0B11 B414 
 149      D244 41D0 
 150 003d 4EB1 B94A 	 .ascii "N\261\271J\304B;\005\013\317\331\333K\374\030\270\333\231\331"
 150      C442 3B05 
 150      0BCF D9DB 
 150      4BFC 18B8 
 150      DB99 D9
 151 0050 7D9F 99D9 	 .ascii "}\237\231\331\025$\350\277\r\3627\314\351v^\221 \210\342\rQ\326"
 151      1524 E8BF 
 151      0DF2 37CC 
 151      E976 5E91 
 151      2088 E20D 
 152 0066 1570 AC23 	 .ascii "\025p\254#\255s\346:B\256\365\223nR+\035\244\233\025`\322\004"
 152      AD73 E63A 
 152      42AE F593 
 152      6E52 2B1D 
 152      A49B 1560 
 153 007c CA08 E928 	 .ascii "\312\b\351(d\306ah\"I%\2557\202\213\367[\344u\240\213\372+\314"
 153      64C6 6168 
 153      2249 25AD 
 153      3782 8BF7 
 153      5BE4 75A0 
 154 0094 C007 176E 	 .ascii "\300\007\027n\001\245Ac\034\300\215\026\201\277\235Xi\265\262"
 154      01A5 4163 
 154      1CC0 8D16 
 154      81BF 9D58 
 154      69B5 B2
 155 00a7 BAA7 F489 	 .ascii "\272\247\364\211.\3500\314\370\220\202\332~\204\255V\370o\212"
 155      2EE8 30CC 
 155      F890 82DA 
 155      7E84 AD56 
 155      F86F 8A
 156 00ba 6351 0DC2 	 .ascii "cQ\r\302p\267\222?\357tA)\224\220$\207|8\212\2032\007\rq\222"
 156      70B7 923F 
 156      EF74 4129 
 156      9490 2487 
 156      7C38 8A83 
 157 00d3 4D51 5EEB 	 .ascii "MQ^\353bW-NG=\214\360\237\247\032\205\340E^\321r\360XN\244\260"
 157      6257 2D4E 
 157      473D 8CF0 
 157      9FA7 1A85 
 157      E045 5ED1 
 158 00ed 0F15 0B4D 	 .ascii "\017\025\013M\325z\271QHZ\353\227\327\264\374\232\373X\037\256"
 158      D57A B951 
 158      485A EB97 
 158      D7B4 FC9A 
 158      FB58 1FAE 
GAS LISTING  			page 12


 159 0101 13CB 11D1 	 .ascii "\023\313\021\321\312\330<8\036X\305\347>s/H\341\200\363\036\324"
 159      CAD8 3C38 
 159      1E58 C5E7 
 159      3E73 2F48 
 159      E180 F31E 
 160 0116 227D 6AB6 	 .ascii "\"}j\266%\236\255\227\216\214\273\311t5\013\243\370=\026\367"
 160      259E AD97 
 160      8E8C BBC9 
 160      7435 0BA3 
 160      F83D 16F7 
 161 012a 511D B032 	 .ascii "Q\035\2602\013\367\f\230q\247\367\037A\314\353\241CCh\364\221"
 161      0BF7 0C98 
 161      71A7 F71F 
 161      41CC EBA1 
 161      4343 68F4 
 162 013f D8A1 6DC3 	 .ascii "\330\241m\303\341C\246[\031!\246\343\256M&a\234k\312\025ro\353"
 162      E143 A65B 
 162      1921 A6E3 
 162      AE4D 2661 
 162      9C6B CA15 
 163 0156 43B6 4B0F 	 .ascii "C\266K\017\r\334b4\034\242\202\342\367\320\274[\033\330!~ls1"
 163      0DDC 6234 
 163      1CA2 82E2 
 163      F7D0 BC5B 
 163      1BD8 217E 
 164 016d 2ED5 3759 	 .ascii ".\3257YqI\371\247\254\252\261~@\326\036\b\361\275\211-\3110Y"
 164      7149 F9A7 
 164      ACAA B17E 
 164      40D6 1E08 
 164      F1BD 892D 
 165 0184 6834 2C65 	 .ascii "h4,e\356\370\216\262\301sw\375\256\310\276\002x\313\274m\363"
 165      EEF8 8EB2 
 165      C173 77FD 
 165      AEC8 BE02 
 165      78CB BC6D 
 166 0199 DCD4 ECC4 	 .ascii "\334\324\354\304\344Bz\336\357\233\"\314`\356\033\203\035\214"
 166      E442 7ADE 
 166      EF9B 22CC 
 166      60EE 1B83 
 166      1D8C 
 167 01ab B4        	 .ascii "\264"
 168               	 .text
 169               	 .section .gnu.lto_GetFreeConnection.bc17d6271b7db497,"",@progbits
 170 0000 789C 5D53 	 .string "x\234]S\317k\023A\024~ofgw\223,\330\372\007\024)H\005\177\\\274\365/\020\274k\240\202HC\300%\207\036*\036D2\351\246\262\307\340AK\305C)\255\007\rz\221\200\026\214\342\301*\255\350M<\030/\212?\210\367\034\214\337\333\311\306\264\003\231\331y\357\373\276\371\336\274\211\"E\207\307\005\374\"Mt\024+\207\304\252\265O\324\b\025\373\356C+\357\225&[4\373o\211l\344q\340\342\306\001^\206\276\322\351\034"
 170      CF6B 1341 
 170      147E 6F66 
 170      6777 932C 
 170      D8FA 0714 
 171 0089 81CC 51C0 	 .string "\201\314Q\300,ab\252+\355\031?\340\372%\226s\324,mX{\273\267\372\353#7m\317\266\354\337a\235k\fKG\230\252L\013\330\300\200,\212\017zt\324\356\227;\367\215}bS;\034\326k\254\025M\377'N9\342\241\372\036\253no8\334y\272:X\210\230*\274\301\2638\257\306\236\207\311\030D6\021\t\260\361C\231\212\222+\215\200\030\206\232\326\266\216\345\373j\346\353\"\346\037'\250\314\n\213\336\245\225^\373\241_\341-6#\2428\241\274\2042kJ\347\364\036\255\364\223\027\355\363c\305\315L\321\3210b\366b\006\007\270A\362\223+\274\215x\314\346\006\r,\306M\324{\232\036\311\347]\250\007K,\214\311R\341\243;\357hN<\026a\310}^\353\317\347r\301):\2112\357\321z\003Jg!\004\224\330\325\231Fv\205\256\005\271\375=J\236'39?\204\204d\375"
 171      2C61 62AA 
 171      2BED 193F 
 171      E0FA 2596 
 171      73D4 2C6D 
 172 0183 A937 F4FA 	 .string "\2517\364\372{\2434Ne\361IGe\030\374\312\372=\335\352={\347;\034\221\024\224\332\251\032\207\325\321!#\013\306\235_\230A\017\212\231\363~\362\247\355\345\372\3058\367T\306\376\301q\334h\222&\235\3669w\2051\227"
 172      7BA3 344E 
 172      65F1 4947 
 172      6518 FCCA 
GAS LISTING  			page 13


 172      FA3D DDEA 
 173 01cb 18DF FC2E 	 .string "\030\337\374.\251\311\216 \233s}\302\373\224\256\2054N\262\024\323\374\3260\271\026\037h!\321'\312#jMC\314\244\005\321\n\344\001|\300\237A\212P\016\250`\325\333\351L\013\036\r\362\177w\n\362d\030PAD\313\213K\227\257\\\257^\253\235Y$\276\312\313\377"
 173      A9C9 8E20 
 173      9B73 7DC2 
 173      FB94 AE85 
 173      344E B214 
 174 0221 42D9 B772 	 .ascii "B\331\267r"
 175               	 .text
 176               	 .section .gnu.lto_TickTCP.bc17d6271b7db497,"",@progbits
 177 0000 789C 8554 	 .string "x\234\205T\317k\023A\024~o6\373{\203\251\307\036Dz\021\214\361bO\375\013\024\377\200\006\024D\032\003\206\034z\250\b\212d\222M1\320\036\202\227\024\265\207R\364`C#x\251\0041\001\017V\254\240\0271*\344b\205\036<xP\311\241\361\315Lf\233\204j\037df\347\275\371\276\375\276\227\231e\300`<\356\322\257\026\0038N3\006\200\254\372\016\240\3500\364\324\203\301b\225S\300=S\214A\f]\2256\231%\323\266L[:m3G\246]\231vt\332Ulm\307c\306\3224\325\375\305I\252\373\210\"\r\b\005f\304L\313v\\\317\307\302e\024\302\330\024\254q~\257\373\355\347\007,\363.\257\362\375~\001\363H\036\216!d\021.\321\002\03591\0345\245\240\255\325\332\252\311\237\362\n\357\367\013y4\030L\034"
 177      CF6B 1341 
 177      147E 6F36 
 177      FB7B 83A9 
 177      C71E 447A 
 178 00e7 130A 38D6 	 .ascii "\023\n8\326\220\006ku\373\375\372\363\305N\216\366fp\r\247\300"
 178      9006 6B75 
 178      FBFD FAF3 
 178      C54E 8EF6 
 178      6670 0DA7 
 179 00fc 843C C62C 	 .ascii "\204<\306,Z\254\323\302\246\205\351\210\301\245\301\362\304\020"
 179      5AAC D3C2 
 179      A685 E988 
 179      C1A5 C1F2 
 179      C410 
 180 010e 8865 5C0C 	 .ascii "\210e\\\f\211\001\204\302\2042\347\325\223z\235\225\ngi$\347"
 180      8901 84C2 
 180      8432 E7D5 
 180      937A 9D95 
 180      0A67 6924 
 181 0123 6964 3419 	 .ascii "id4\031\333P\352\276\335\2602\370\b\315\001Ph\212\304\244\321"
 181      DB50 EABE 
 181      DDB0 32F8 
 181      08CD 0150 
 181      688A C4A4 
 182 0138 80A5 6963 	 .ascii "\200\245ic\007J?\302\346\346\305\210q]2*\030E\016\315\034\022"
 182      074A 3FC2 
 182      E6E6 C588 
 182      715D 322A 
 182      1845 0ECD 
 183 014e 8AF6 F5C2 	 .ascii "\212\366\365\302=\314\340c\312\347\320\272\r=Nq\207\234\247\240"
 183      3DCC E063 
 183      CAE7 D0BA 
 183      0D3D 4E71 
 183      879C A7A0 
 184 0162 2E1E 6BC4 	 .ascii ".\036k\304n\317\243@\f\233&\035\255\031\005S\344\004\226t\237"
 184      6ECF A340 
 184      0C9B 261D 
 184      AD19 0553 
 184      E404 9674 
 185 0177 B77E CD68 	 .ascii "\267~\315h:\373\f$\311\341\003\270_$\246sDD\273\204\\Cr\310f"
 185      3AFB 0C24 
 185      C9E1 03B8 
 185      5F24 A673 
 185      4444 BB84 
 186 0190 AA3F 431B 	 .ascii "\252?C\033\330\201\260\031\236\320x\207(D\325\264\251\364\032"
 186      D881 B019 
 186      9ED0 7887 
GAS LISTING  			page 14


 186      2844 D5B4 
 186      A9F4 1A
 187 01a3 5E7D 2FFA 	 .ascii "^}/\372QI\346\207\025\2451&\032\264\007|\271\336\234P\373t\305"
 187      5149 E687 
 187      15A5 3126 
 187      1AB4 077C 
 187      B9DE 9C50 
 188 01ba 1415 12D7 	 .ascii "\024\025\022\327\251\374f\232\301M\302\351<:$\016\307\205]\213"
 188      A9FC 669A 
 188      C14D C2E9 
 188      3C3A 240E 
 188      C785 5D8B 
 189 01ce FA49 7A2A 	 .ascii "\372Iz*\341-\r\361\b%v9(K\245\013\252\220\204'\242S\356\021l"
 189      E12D 0DF1 
 189      0825 7639 
 189      284B A50B 
 189      AA90 8427 
 190 01e7 8497 A8CE 	 .ascii "\204\227\250\316J\357M\324\361@\252\200\303qZ\306\250\365\340"
 190      4AEF 4DD4 
 190      F140 AA80 
 190      C371 5AC6 
 190      A8F5 E0
 191 01fa 10EB 1684 	 .ascii "\020\353\026\204qi\375\341\2131\353\266\250H\033\215FJS\304\007"
 191      7169 FDE1 
 191      8B31 EBB6 
 191      A848 1B8D 
 191      464A 53C4 
 192 020f 2CF0 2F23 	 .ascii ",\360/#\377\025Dx\251i\267\375\365c\324\316\270T\345\215\250"
 192      FF15 4478 
 192      A969 B7FD 
 192      F563 D4CE 
 192      B854 E58D 
 193 0224 72A0 6D89 	 .ascii "r\240m\211\266o\375\331\357\261\221W\370G\274\":\323\302\323"
 193      B66F FDD9 
 193      EFB1 9157 
 193      F847 BC22 
 193      3AD3 C2D3 
 194 0238 9797 639E 	 .ascii "\227\227c\236\\u\304\311\323\263\315\363\352L\3470A\007:\362"
 194      5C75 C4C9 
 194      D3B3 CDF3 
 194      EA4C E730 
 194      4107 3AF2 
 195 024c B40D 6CF8 	 .ascii "\264\rl\370\212PUc=\240\317\207\270F\016DE\024v\312\273ESs\035"
 195      8A50 5563 
 195      3DA0 CF87 
 195      B846 0E44 
 195      4514 76CA 
 196 0265 10A9 F804 	 .ascii "\020\251\370\0048P\304V\f\"s+\256\340\362\305\261z\017\305\356"
 196      3850 C456 
 196      0C22 732B 
 196      AEE0 F2C5 
 196      B17A 0FC5 
 197 027a 462A BA59 	 .ascii "F*\272Y2f\211rqR|'\202\205\271\371+Wofo\344\317\316\001^\307"
 197      3266 8972 
 197      7152 7C27 
 197      8285 B9F9 
 197      2B57 6F66 
GAS LISTING  			page 15


 198 0295 85BF 4A5F 	 .ascii "\205\277J_\n2"
 198      0A32 
 199               	 .text
 200               	 .section .gnu.lto_TCPCanSend.bc17d6271b7db497,"",@progbits
 201 0000 789C 6591 	 .ascii "x\234e\221\317+DQ\024\307\277\337{\347\275yoRdc7\311\222\220"
 201      CF2B 4451 
 201      14C7 BFDF 
 201      7BE7 BD79 
 201      6F52 6463 
 202 0018 8D2D FF85 	 .ascii "\215-\377\205\t%a\312\364d\026da1w\f%\253\331b%[e\241,\206\305"
 202      0925 61CA 
 202      F464 1664 
 202      6131 770C 
 202      25AB D962 
 203 0033 2C28 1452 	 .ascii ",(\024RR\312b\312\302\202\374\001\026\3069\317\3144q\352\236"
 203      52CA 62CA 
 203      C282 FC01 
 203      16C6 39CF 
 203      CC34 71EA 
 204 0048 1FF7 7DEF 	 .ascii "\037\367}\357\347\234{\237\201\301_\033\227uM\240G\"\223\240"
 204      E79C 7B9F 
 204      81C1 5F1B 
 204      9775 4DA0 
 204      4722 93A0 
 205 005c 29DF 01C5 	 .ascii ")\337\001\305\300\030[I\303\245\274\247a\270\016k\274s\255\374"
 205      C018 5B49 
 205      C3A5 BCA7 
 205      61B8 0E6B 
 205      BC73 ADFC 
 206 0070 47AD 7C7A 	 .ascii "G\255|z*\242Gj\004Q0\326\367X\230\246\022\331\207\003\347\312"
 206      2AA2 476A 
 206      0451 30D6 
 206      F758 98A6 
 206      12D9 8703 
 207 0086 B5CB 93D7 	 .ascii "\265\313\223\327\304\326N\315\225\335w\275\300\210\322\274\223"
 207      C4D6 4ECD 
 207      95DD 77BD 
 207      C088 D2BC 
 207      93
 208 0097 C812 5352 	 .ascii "\310\022SR\260+\016\346\317@\307\246Z\253\327_\236\267\276\242"
 208      B02B 0EE6 
 208      CF40 C7A6 
 208      5AAB D75F 
 208      9EB7 BEA2 
 209 00ab 1431 CF03 	 .ascii "\0241\317\003\201Y\346\211\004\004\340\213\263\201\272P\\B\364"
 209      8159 E689 
 209      0404 E08B 
 209      B381 BA50 
 209      5C42 F4
 210 00be 1E36 A555 	 .ascii "\0366\245U/\024+6!^G\312\320h\264\267\330\370,\235\235\366\317"
 210      2F14 2B36 
 210      215E 47CA 
 210      D068 B4B7 
 210      D8F8 2C9D 
 211 00d5 F390 1E72 	 .ascii "\363\220\036rL\344h\001\331\235l\356\370\003\350\027\324 \216"
 211      4CE4 6801 
 211      D99D 6CEE 
GAS LISTING  			page 16


 211      F803 E817 
 211      D420 8E
 212 00e8 9CD8 5844 	 .ascii "\234\330XDo\037{E\347\272\"\372\353\370r\333\232%\363T\274\016"
 212      6F1F 7B45 
 212      E7BA 22FA 
 212      EBF8 72DB 
 212      9A25 F354 
 213 00fe 9C8C C7CC 	 .ascii "\234\214\307\314\305\315\325\026\330\034\375\n\027o\305]\266"
 213      C5CD D516 
 213      D81C FD0A 
 213      176F C55D 
 213      B6
 214 010f C0AA B6ED 	 .ascii "\300\252\266\355w\313HYI\333{\224\252\313MU\320\352\021d\371"
 214      77CB 4859 
 214      49DB 7B94 
 214      AACB 4D55 
 214      D0EA 1164 
 215 0124 8B8A 182A 	 .ascii "\213\212\030*l\363\243\r\026\374\203M\320\307M73\362\271q\321"
 215      6CF3 A30D 
 215      16FC 834D 
 215      D0C7 4D37 
 215      33F2 B971 
 216 0139 F752 AA29 	 .ascii "\367R\252)\017s\312z@\353|\250G\236A\305\310\357\262Wa\234A^"
 216      0F73 CA7A 
 216      40EB 7CA8 
 216      479E 41C5 
 216      C8EF B257 
 217 0151 B491 9898 	 .ascii "\264\221\230\230I\205i\332\2612\227\237\231]\313\256FCs\b\026"
 217      4985 69DA 
 217      B132 979F 
 217      995D CBAE 
 217      4643 7308 
 218 0166 B32B 4BF9 	 .ascii "\263+K\371\241\221\321\037\210>o\204"
 218      A191 D11F 
 218      883E 6F84 
 219               	 .text
 220               	 .section .gnu.lto_StartTCPWrite.bc17d6271b7db497,"",@progbits
 221 0000 789C 6362 	 .string "x\234cb`b@\007\222@\334\f\304|@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327m\271\275\340\016#\033\013\023c\001X\230\225\241\245\241a\202\002\003C\032\230\033\016$AZ#\030\231@4\363y\206\226\007\267\317r\2450.dd\005JW3\374j\350h\020\310a\004*\207\230\232\305\310\224\003b^dh|pG\027\246\016\002\302\201\022@C@\316\346)I.\210O,O+\315\321Kf"
 221      6062 4007 
 221      9240 DC0C 
 221      C47C 40CC 
 221      C8CC C0C8 
 222 0095 00        	 .string ""
 223 0096 CE04 2807 	 .ascii "\316\004(\007"
 224               	 .text
 225               	 .section .gnu.lto_FinishTCPPacket.bc17d6271b7db497,"",@progbits
 226 0000 789C 9552 	 .string "x\234\225R\301J\002Q\024\275\367\215:\222c\t\265\250V!\264\n\f\374\200~\303\240@D\233B\246\232\205\341\242\205o\262\300M!\321\252Zh\264\013\254uD\330R2\303m\220\270i-T\253\b\246\373\336h\212EC\027\336\275\303\274s\316\334s\030\006\f\206k\212\216\252"
 226      C14A 0251 
 226      14BD F78D 
 226      3A92 6309 
 226      B5A8 5621 
 227 0059 CCD2 4405 	 .string "\314\322D\005\220\025\033"
 227      9015 1B00 
 228 0061 969F 218A 	 .string "\226\237!\212\007@\3101\314-\243\304^\262j\333\266+O\255R\003\325 C\023\301\007\006\202_\264"
 228      0740 C831 
 228      CC2D A3C4 
 228      5EB2 6ADB 
GAS LISTING  			page 17


 228      B62B 4FAD 
 229 0082 35D4 4423 	 .ascii "5\324D#\244\027v9/\316\204\241\314\371a\365\255\265\357\345W"
 229      A417 7639 
 229      2FCE 84A1 
 229      CCF9 61F5 
 229      ADB5 EFE5 
 230 0097 BCC0 6D3B 	 .ascii "\274\300m;G\367\f\306\020t\204%4\220\205\344P\206\026s\210\274"
 230      47F7 0CC6 
 230      1074 8425 
 230      3490 85E4 
 230      5086 1673 
 231 00ad 79C4 395A 	 .ascii "y\3049Z%\376i\333\212$\216\273\021A\334S\305\250\013\003\213"
 231      25FE 69DB 
 231      8A24 8EBB 
 231      1141 DC53 
 231      C5A8 0B03 
 232 00c2 44A2 A93C 	 .ascii "D\242\251<\302^\273\322QSXF/]o\303\007\255\0232\320\243\243\343"
 232      C25E BBD2 
 232      5153 5846 
 232      2F5D 6FC3 
 232      07AD 1332 
 233 00da 4D88 6108 	 .ascii "M\210a\b\322\310\f\201\020\370\353\316\310ox\326\307\217:c\002"
 233      D2C8 0C81 
 233      10F8 EBCE 
 233      C86F 78D6 
 233      C78F 3A63 
 234 00ef 24E7 0176 	 .ascii "$\347\001vj\247\007\365\273@\327}/\206\352\375\363*\200#\245"
 234      6AA7 07F5 
 234      BB40 D77D 
 234      2F86 EAFD 
 234      F32A 8023 
 235 0104 53C6 5469 	 .ascii "S\306Ti\f\234\300\261\305\205\244\357[\\5\3452BS\355\272\251"
 235      0C9C C0B1 
 235      C585 A4EF 
 235      5B5C 35E5 
 235      3242 53ED 
 236 011a 0173 8829 	 .ascii "\001s\210)<\303\260|%V\273q\2652)\276\321]+_\310\227\027\034"
 236      3CC3 B07C 
 236      2556 BB71 
 236      B532 29BE 
 236      D15D 2B5F 
 237 0132 7C1A 7D64 	 .ascii "|\032}dQ\"^mE\252y]\224\242\202\324W\272\270\235\353I\371{R\357"
 237      5122 5E6D 
 237      45AA 795D 
 237      94A2 82D4 
 237      57BA B89D 
 238 014c 7F49 0DE4 	 .ascii "\177I\r\3445-H.Y\275d\177d\245\375;\253\363\201\254\352\256Y"
 238      352D 482E 
 238      59BD 647F 
 238      64A5 FD3B 
 238      ABF3 81AC 
 239 0163 0987 9A5C 	 .ascii "\t\207\232\\\253\tV\2731\337\203;\025#(\375B\302\206\226I\232"
 239      AB09 56BB 
 239      31DF 833B 
 239      1523 28FD 
 239      42C2 8696 
 240 0179 F144 56DF 	 .ascii "\361DV\3372\"IPL\323\360\320\211\0067V2\361\344\346\272\231\310"
GAS LISTING  			page 18


 240      3222 4950 
 240      4CD3 F0D0 
 240      8906 3756 
 240      32F1 E4E6 
 241 0190 44D6 E00B 	 .ascii "D\326\340\013b\363\275\274"
 241      62F3 BDBC 
 242               	 .text
 243               	 .section .gnu.lto_EndTCPWrite.bc17d6271b7db497,"",@progbits
 244 0000 789C 8D52 	 .ascii "x\234\215RAk\023A\024~of\267\331l\022\023o\036D\2447-\032\360"
 244      416B 1341 
 244      147E 6F66 
 244      B7D9 6C12 
 244      136F 1E44 
 245 0019 26FE 03FF 	 .ascii "&\376\003\377@\013\nR\333\254R\026\t\030\021\354!\223l\0039\325"
 245      400B 0A52 
 245      DBAC 5216 
 245      0918 11EC 
 245      2193 6C03 
 246 002f 5014 8A9E 	 .ascii "P\024\212\236J\320CP\024\004-ZL\300\213EjQ\013\212\275\354\311"
 246      4AD0 4350 
 246      1404 2D5A 
 246      4CC0 8B45 
 246      6A51 0B8A 
 247 0046 8B45 0FBD 	 .ascii "\213E\017\275H\020\327\367fv\323\032\225v ;\263\337{\337\373"
 247      4810 D7F7 
 247      6676 D31A 
 247      9576 203B 
 247      B3DF 7BDF 
 248 005b BE7C B302 	 .ascii "\276|\263\002\004\f\257S\364{*\001\016\323\2166\240h\275\005"
 248      040C AF53 
 248      F47B 2A01 
 248      0ED3 8E36 
 248      A068 BD05 
 249 006f A839 42C8 	 .ascii "\2509B\310\215\"(\327Z9\002*+\3212\260\205\310\007@\250\nia\365"
 249      8D22 28D7 
 249      5A39 022A 
 249      2BD1 32B0 
 249      85C8 0740 
 250 0088 3CF2 0C31 	 .ascii "<\362\f1\nKJ-\204\215\347odC\205\252\245~EU\364\221\344\362\b"
 250      0A4B 4A2D 
 250      848D E76F 
 250      6443 85AA 
 250      A57E 4555 
 251 00a1 1EC2 397A 	 .ascii "\036\3029z\301\202\336\304\220\005C\355}\330\274e\253\307\252"
 251      C182 DEC4 
 251      9005 43ED 
 251      7DD8 BC65 
 251      ABC7 AA
 252 00b4 A9A2 A8EA 	 .ascii "\251\242\250\352\243\024pp/\342#\321\013\243\350\347f\343\375"
 252      A314 7070 
 252      2FE2 23D1 
 252      0BA3 E8E7 
 252      66E3 FD
 253 00c7 8D82 C032 	 .ascii "\215\202\3002\202\004\037-\013\246q\tG\301\246\027;E\217\021"
 253      8204 1F2D 
 253      0BA6 7109 
 253      47C1 A617 
GAS LISTING  			page 19


 253      3B45 8F11 
 254 00db 8790 3621 	 .ascii "\207\2206!.#9F\210l\303"
 254      2E23 3946 
 254      886C C3
 255 00e6 9C52 ADA3 	 .string "\234R\255\243\246\327\324\265\221z\357\343\260\221C{\031\001\256\323\032\247'\2073\201\202w\271\006\365oA\373\331\331i\274G\301\316\240\234\241\002\020\332\017\276`\002Z\263\320W\264f)\255\023\360\200\217\267I#UF$\306n\221U\250\367N\033\232\261Md\215\206_\037\272\t~\237p\366\250\231\353\020\204\337\327\362\211T\212\245\232\252\340\243\343\241vLa\244\331Q\320\f\274\244\313\241F\236\340\366#\251UE2\273\2555\035\375\027V\027_\276\212\013c\320a\327)\242\334\205;\354\235\214\361\004c\273\024\357\t\363\363b\367L\242\345\216\301q\0373\377\246\305\007\266\367\"\350\f\002\263\211\306mv\206j\257an\253\226\036\2244\276;\263\t\nb\243\3107\261\374\251\273\375\247\341\364\177\225\315\3752\222Am\240\276\374\243\273\215\373d\313\035\366\216\r+\376\"(\351'+\307\022\303\2718k\271\245\263^\007\313T"
 255      A6D7 D4B5 
 255      917A EFE3 
 255      B091 437B 
 255      1901 AED3 
 256 01e7 0657 95F5 	 .ascii "\006W\225\365b;\324\355c\316\\\352\374\315\324_\215\007\274X"
 256      623B D4ED 
 256      63CE 5CEA 
 256      FCCD D45F 
 256      8D07 BC58 
 257 01fb D9C7 3CC0 	 .ascii "\331\307<\300;\250\205\235b\322d\3268EJ.x\\\2662U\2760y\335\273"
 257      3BA8 859D 
 257      62D2 64D6 
 257      3845 4A2E 
 257      785C B632 
 258 0215 E69F 9C02 	 .ascii "\346\237\234\002\254\214\370\245+\227*\227\255\213\223WK\277"
 258      AC8C F8A5 
 258      2B97 2A97 
 258      AD8B 9357 
 258      4BBF 
 259 0227 019B D5E2 	 .ascii "\001\233\325\342\330"
 259      D8
 260               	 .text
 261               	 .section .gnu.lto_HandleTCP.bc17d6271b7db497,"",@progbits
 262 0000 789C B558 	 .ascii "x\234\265X{p\224\325\025\277\367~\373\312n\222]\362&\317\315"
 262      7B70 94D5 
 262      15BF F77E 
 262      FBCA 6E92 
 262      5DF2 26CF 
 263 0015 8B84 2052 	 .ascii "\213\204 R\3128J}T\235V\005_tF\007\n\235\311\304\354.\030\227"
 263      CA38 4A7D 
 263      549D 5605 
 263      5F74 4607 
 263      0A9D C9C4 
 264 002d 9042 A822 	 .ascii "\220B\250\"\343d\303\206\001\251X\306\001\033[\251h\207\242\200"
 264      E364 C386 
 264      01A9 58C6 
 264      011B 5BA9 
 264      6887 A280 
 265 0041 4460 2C51 	 .ascii "D`,Q\264$\3246\005+\212\325i\3601Ei\353(\214U\251c\b\312\366"
 265      B424 D436 
 265      052B 8AD5 
 265      69F0 3145 
 265      69EB 288C 
 266 005b DC73 1FDF 	 .ascii "\334s\037\337\267\257d\201\272\177\334\373\335\373\235\337\371"
 266      B7AF 6481 
 266      BA7F DCFB 
 266      DDFB 9DDF 
 266      F9
 267 006c 9D7B EEB9 	 .ascii "\235{\356\271\347\334\375\030a$\361w\222\022\022\364\023\322"
 267      E7DC FD18 
 267      6124 F177 
 267      9212 12F4 
GAS LISTING  			page 20


 267      13D2 
 268 007e 09CF B491 	 .ascii "\t\317\264\221P\266\341\b!\335.Fm\342\301\020\017\203.\0333\036"
 268      50B6 E108 
 268      21DD 2E46 
 268      6DE2 C110 
 268      0F83 2E1B 
 269 0094 1A22 24E2 	 .ascii "\032\"$\342\266\3678I$\333\316\034k\033`\344\342m\266\203\325"
 269      B6F7 3849 
 269      24DB CE1C 
 269      6B1B 60E4 
 269      E26D B683 
 270 00a9 BC74 398C 	 .ascii "\274t9\214\234o\025\301\310I'\t\260\213e\241\220\033\205\262"
 270      9C6F 15C1 
 270      C849 2709 
 270      B08B 65A1 
 270      901B 85B2 
 271 00bd 58CD 5BD3 	 .ascii "X\315[\323`\324\360R%\214\334\314\303\205\335\331\034\230\355"
 271      60D4 F052 
 271      258C DCCC 
 271      C385 DDD9 
 271      1C98 ED
 272 00d0 A1B5 0292 	 .ascii "\241\265\002\222\315r\020\222\217\220\034\226\213#/\216r\251"
 272      CD72 1092 
 272      8F90 1C96 
 272      8B23 2F8E 
 272      72A9 
 273 00e2 4F08 79D5 	 .ascii "O\by\325\203\217\345?T\b\357'\364\314\204\367\023X\236\005\233"
 273      838F E53F 
 273      5408 EF27 
 273      F4CC 84F7 
 273      1358 9E05 
 274 00f7 47F3 8550 	 .ascii "G\363\205P>+\300\351b\234.`\205\353'\301\250(\332\b\243B\305"
 274      3E2B C0E9 
 274      629C 2E60 
 274      85EB 27C1 
 274      A828 DA08 
 275 010e 5BA4 1E8A 	 .ascii "[\244\036\212Y\311g\\"
 275      59C9 675C 
 276 0116 E5C4 2D57 	 .string "\345\304-W\300\373\0225=\221\225Z\214/ee\177\256\340\243\303\337\201Q\031+G\202\n$(\247\225\002R\241\036*Y\225\005[\305\374(]\215\322~EP\255\036j\324C-\253C\301z\024\254\243\365b\272^yw\022m\020\017\r\224\362\007BI\0273lv\207\323\225\345\366d\347\344z}\023\362\362\013\n\213\212K&\226\226\225WTV\371\253kj\353\352'5\320\256\237P\276\37195\344\311H\344\221\343\177\332\366\271\261z\335\361\310\206\310\271X\027\rS\210\023/%!J\026\300\200\372\260c\t\261#\240\003\357\257\333h_\375\\dm$\026\353B`YF\300\r\003\357\257\231\022\211\016DFb1g\230\032\2144fH\370\217\241\307\355\021Mhcdj\206\300\323C\353\235&\320\316\3104\023\350\027@[J\340\177\207\214\336H\317@,\366}\204]\225!\354\314\232\3656\223\317\301\310\017L\240K"
 276      C0FB 1235 
 276      3D91 955A 
 276      8C2F 6565 
 276      7FAE E0A3 
 277 0217 694A E0E8 	 .string "iJ\340\350\032\246\371"
 277      1AA6 F900 
 278 021f 362B 43D8 	 .ascii "6+C\330\376u\233\255\216\t\320\247)\313l+^^g\265\324\031\240"
 278      FE75 9BAD 
 278      8E09 D0A7 
 278      29CB 6C2B 
 278      5E5E 67B5 
 279 0236 BFB3 20C7 	 .ascii "\277\263 \307\344<\360\360\303\026N\027#\267g\270\031o\034\211"
 279      E43C F0F0 
 279      C316 4E17 
 279      23B7 67B8 
 279      196F 1C89 
 280 024a F3E9 FC8C 	 .ascii "\363\351\374\214|\nAsd\275\205/\213\221\273\306\343\353c\003"
 280      7C0A 4173 
GAS LISTING  			page 21


 280      64BD 852F 
 280      8B91 BBC6 
 280      E3EB 6303 
 281 025e C763 B1BF 	 .ascii "\307c\261\277\276\334sp~\017\245$@\267\322\032\210R\321\033\320"
 281      BEDC 7370 
 281      7E0F A524 
 281      40B7 D21A 
 281      8852 D11B 
 282 0273 3F0B BD0D 	 .ascii "?\013\275\r\372\347\241\317%a\352\366\312\227>\350\267A\237\007"
 282      FAE7 A1CF 
 282      2561 EAF6 
 282      CA97 3EE8 
 282      B741 9F07 
 283 0287 FD33 D017 	 .ascii "\3753\320\027@\277\003\372\"\020\362\024\363\246D\302K\241\357"
 283      40BF 03FA 
 283      2210 F214 
 283      F3A6 44C2 
 283      4BA1 EF
 284 029a 83BE 1226 	 .ascii "\203\276\022&\263\253h\007%~\002M\265|]#\373:x\355\250\207\301"
 284      B3AB 6807 
 284      257E 024D 
 284      B57C 5D23 
 284      FB3A 78ED 
 285 02b1 9330 68E0 	 .ascii "\2230h\340\n\032a\260\007\006\223a`4\301`7\f\246\300 g\252\024"
 285      0A1A 61B0 
 285      0706 9361 
 285      6034 C160 
 285      370C A6C0 
 286 02c9 9B06 FD6F 	 .ascii "\233\006\375o\241\237\016\223\2713xs%o\256\342\3155\\\360Z\256"
 286      A19F 0E93 
 286      B933 7873 
 286      256F AEE2 
 286      CD35 5CF0 
 287 02df F43A DE5C 	 .ascii "\364:\336\\\3175\336\300\237n\344v\334\004\310\275\200\234%\327"
 287      CF35 DEC0 
 287      9F6E E476 
 287      DC04 C8BD 
 287      809C 25D7 
 288 02f3 365B F637 	 .ascii "6[\3667s\350-rp+\f\274\267\361\346v\336\314\201\351}0}\007Wu"
 288      73E8 2D72 
 288      702B 0CBC 
 288      B7F1 E676 
 288      DECC 81E9 
 289 030d 276F E672 	 .ascii "'o\346r\351\371\274Y\300\233f>\327\302\233\273x\023\340sA\336"
 289      E9F9 BC59 
 289      C09B 663E 
 289      D7C2 9BBB 
 289      7813 E073 
 290 0323 8478 B388 	 .ascii "\204x\263\2107m\374E\2307\213y\323\316\347:xs\0377m\005\177Z"
 290      376D FC45 
 290      9837 8B79 
 290      D3CE E73A 
 290      7873 1F37 
 291 033b 2917 F580 	 .ascii ")\027\365\200\\d\027\027\354\246\274\205\035\263\223\036\330"
 291      5C64 1717 
 291      ECA6 BC85 
 291      1DB3 931E 
GAS LISTING  			page 22


 291      D8
 292 034c 6ABF D804 	 .ascii "j\277\330\004\261\005b\003\204\373\205/\205\3031*V\r|3\264>>"
 292      B105 6203 
 292      84FB 852F 
 292      85C3 312A 
 292      560D 7C33 
 293 0363 0A17 8E17 	 .ascii "\n\027\216\027\025\013)]H\331Bj\020.\b\277\271\320B]\233\007"
 293      150B 295D 
 293      48D9 426A 
 293      102E 08BF 
 293      B9D0 425D 
 294 0379 81DF E334 	 .ascii "\201\337\3434^'\321\343\237F\363\002\364\005j'm\334\340Q\320"
 294      5E27 D1E3 
 294      9F46 F302 
 294      F405 6A27 
 294      6DDC E051 
 295 038e EE0B 535F 	 .ascii "\356\013S_\210\212\203\020\246\023\by\215\254\3724Z\252\244\274"
 295      888A 8310 
 295      A613 0879 
 295      8DAC FA34 
 295      5AAA A4BC 
 296 03a2 2048 C821 	 .ascii " H\310!\302\304\204\260\037\246Qn4z\340\0273\225\244\217\353"
 296      C2C4 84B0 
 296      1FA6 516E 
 296      347A E017 
 296      3395 A48F 
 297 03b7 83DF 4A38 	 .ascii "\203\337J8\246S\311N\376\270\t\214\314\353\2406\2247\177\207"
 297      A653 C94E 
 297      FEB8 098C 
 297      CCEB A036 
 297      9437 7F87 
 298 03cb C8AA 8199 	 .ascii "\310\252\201\231J\3376\324\347#\204\233w\346\204C\251\313\323"
 298      4ADF 36D4 
 298      E723 849B 
 298      77E6 8443 
 298      A9CB D3
 299 03de E6E5 8728 	 .ascii "\346\345\207(\223\346\025\304\231\362\fB\363\020\272e\324P\310"
 299      93E6 15C4 
 299      99F2 0C42 
 299      F310 BA65 
 299      D450 C8
 300 03f1 82F1 91   	 .ascii "\202\361\221"
 301 03f4 3B10 5920 	 .string ";\020Y H\277\376\243[A\2134\2640\304\335\210\320\"\276\326\350\256h\233\222*\006A\356\177\203+\207W\3735u\t\274\344o\034_S\022G\370,\022\226\bS\277\321\362\245i\370,\310>D\226\nS\317)\377\020\242\221\305!j\223\310\2228\344\213\200\344?\016\\\373\303qp\334\256\007\355\343\bah\364m\254P\346W\266\211\331\350\203zE\3766Z\005/,\206@\316\200i\024[\033\335\277\321\251$\253\001\214\276:\225\322W\325\"V\346\201[\340\206\206\301\333\033L\262/\336m\002`#po0 \310\\Dk3$\377\001\323\370\032\230E\376XJ~\360\335_H\317\251n\257\222Ga\217\031\305\307\210\001V\262\177\376\bd\215\257\217vrj;?g<\"\242\377\331X\256\200\367\301\366!\021\017\027\324\231\245_\341\274\365l\314\203\341A\003t\254:4\f\367\027\2356vcz\330\203[\252\274"
 301      48BF FEA3 
 301      5B41 8B34 
 301      B430 C4DD 
 301      88D0 22BE 
 302 04f5 0AEA 7F4D 	 .ascii "\n\352\177M~\325\035\341\2360}2\261\003\337r\325\023\245\326"
 302      7ED5 1DE1 
 302      9E30 7D32 
 302      B103 DF72 
 302      D513 A5D6 
 303 0509 D709 54CE 	 .ascii "\327\tT\316!\244l\320r\245!\241\205\253\t\3232\271\275mJ\260"
 303      21A4 6CD0 
 303      72A5 21A1 
 303      85AB 09D3 
 303      32B9 BD6D 
GAS LISTING  			page 23


 304 051f 1164 A55F 	 .ascii "\021d\245_\206\320/{\320/\215|\r\257|4x\3640\323\222\234\312"
 304      86D0 2F7B 
 304      D02F 8D7C 
 304      0DAF 7C34 
 304      78F4 30D3 
 305 0536 1DBF 0A27 	 .ascii "\035\277\n'YE\rT\270mS\271\022\234\214pL\034Ej\256I\246\r\257"
 305      5945 0D54 
 305      B86D 53B9 
 305      129C 8C70 
 305      4C1C 456A 
 306 054f 9936 66AA 	 .ascii "\2316f\252\254191k\330\225-\273\321\226&\251\254o\323%J\335\224"
 306      AC31 3931 
 306      6BD8 952D 
 306      BBD1 9626 
 306      A9AC 6FD3 
 307 0567 95E4 7E28 	 .ascii "\225\344~( S\310v\256iA\230\226\203\207x\032\002in\246\210\346"
 307      2053 C876 
 307      AE69 4198 
 307      9683 8778 
 307      1A02 696E 
 308 057e A0B5 F0BF 	 .ascii "\240\265\360\277Nz\006\232\004\336\022Y\025!\2711\2403\314\003"
 308      4E7A 069A 
 308      04DE 1259 
 308      1521 B931 
 308      A033 CC03 
 309 0592 9A6F 49FF 	 .ascii "\232oI\377\216A\275\352\251\231\271\036`\263\004D\332\224\005"
 309      8E41 BDEA 
 309      A999 B91E 
 309      60B3 0444 
 309      DA94 05
 310 05a5 C93C B54D 	 .ascii "\311<\265MT\362M\025d\303\026\262i\251\311\034\027N\306$\331"
 310      54F2 4D15 
 310      64C3 16B2 
 310      69A9 C91C 
 310      174E C624 
 311 05ba 3444 BDB8 	 .ascii "4D\275\270\372\300\246&E6] \354\202)\002\325\247\252\0036TP\371"
 311      FAC0 A626 
 311      4536 5D20 
 311      EC82 2902 
 311      D5A7 AA03 
 312 05d2 4DAA 431B 	 .ascii "M\252C\033\334\211d\366\324d\206$\233.\217\341\211MW+\262\031"
 312      DC89 64F6 
 312      D464 8624 
 312      9B2E 8FE1 
 312      894D 572B 
 313 05e8 90C1 B9A8 	 .ascii "\220\301\271\250\235J\245o83Tj\223Jg \256\277\177\327\3474C\244"
 313      9D4A A56F 
 313      3833 546A 
 313      934A 6720 
 313      AEBF 7FD7 
 314 0600 087B 3E93 	 .ascii "\b{>\223\273\375\355\355o\273\005s\377\360\256\017\2224T\247"
 314      BBFD EDED 
 314      6FBB 0573 
 314      FFF0 AE0F 
 314      9234 54A7 
 315 0614 D6E0 D01A 	 .ascii "\326\340\320\032\252\245\335\375#\273>g\211hGj\264S\243\035\322"
 315      AAA5 DDFD 
GAS LISTING  			page 24


 315      23BB 3E67 
 315      8968 476A 
 315      B453 A31D 
 316 0629 95FD BD7D 	 .ascii "\225\375\275}g\222\270\323\354\234K\243]\n=\274'\031\235\206"
 316      6792 B8D3 
 316      EC9C 4BA3 
 316      5D0A 3DBC 
 316      2719 9D86 
 317 063d 3BCB E4CE 	 .ascii ";\313\344\316\023\247\352\370\253\253\345>\312k\354\337\327\324"
 317      13A7 EAF8 
 317      ABAB E53E 
 317      CA6B ECDF 
 317      D7D4 
 318 064f 9A7F 6220 	 .ascii "\232\177b k-\033\357\256\216\231\002\216\321\361w_s\313\214\245"
 318      6B2D 1BEF 
 318      AE8E 9902 
 318      8ED1 F177 
 318      5F73 CB8C 
 319 0664 6E3C 91BE 	 .ascii "n<\221\276G\033\003\364c\231\2678IH.\337\f\344\232\020u\005\350"
 319      471B 03F4 
 319      6399 B738 
 319      4948 2EDF 
 319      0CE4 9A10 
 320 067b 2995 D31A 	 .ascii ")\225\323\032\302\264\026\227\365N\377\336j\025&WN!M\343\354"
 320      C2B4 1697 
 320      F54E FFDE 
 320      6A15 2657 
 320      4E21 4DE3 
 321 0690 A78C AD9F 	 .ascii "\247\214\255\237)\310U\200\262FV\322\311\030S\033\340\205\322"
 321      29C8 5580 
 321      B246 56D2 
 321      C918 531B 
 321      E085 D2
 322 06a3 79B0 6891 	 .ascii "y\260h\221\221G\243\261G\247\250\324}M\\\242\371\2615\321\370"
 322      9147 A3B1 
 322      47A7 A8D4 
 322      7D4D 5CA2 
 322      F9B1 35D1 
 323 06b8 C648 3493 	 .ascii "\306H4\223\223J\230%\321\\\203\211\006\323\353\333?g\372\n\206"
 323      934A 9825 
 323      D15C 8389 
 323      06D3 EBDB 
 323      3F67 FA0A 
 324 06cd 770D ABBF 	 .ascii "w\r\253\277\347\301.~@E\241\331\367K]\321\352T\241\341U\n\013"
 324      E7C1 2E7E 
 324      4045 A1D9 
 324      F74B 5DD1 
 324      EA54 A1E1 
 325 06e4 8D47 BF4A 	 .ascii "\215G\277JQh\334Z\307\266\307u\261\272V\351\260\221\304bum\n"
 325      5168 DC5A 
 325      C7B6 C775 
 325      B1BA 56E9 
 325      B091 C462 
 326 06fb 1D1E 3248 	 .ascii "\035\0362H\270kNF\373\036\237\246\004\257\307;#\326\234\204\265"
 326      B86B 4E46 
 326      FB1E 9FA6 
 326      04AF C73B 
GAS LISTING  			page 25


 326      23D6 9C84 
 327 0710 C24E 67C9 	 .ascii "\302Ng\311\265^\257v\271\277\367\004\017\336\027\322\004\257"
 327      B55E AF76 
 327      B9BF F704 
 327      0FDE 17D2 
 327      04AF 
 328 0722 2F4D F016 	 .ascii "/M\360\026\310\320\357?\361A\022\272:5\332rh\315\025d\223-\322"
 328      C8D0 EF3F 
 328      F141 12BA 
 328      3A35 DA72 
 328      68CD 1564 
 329 0739 0BA7 4D2F 	 .ascii "\013\247M/\\\247\274\340K\362\302u)\274\220C\336@/\2743\362\321"
 329      5CA7 BCE0 
 329      4BF2 C275 
 329      29BC 9043 
 329      DE40 2FBC 
 330 0750 51B3 64EF 	 .ascii "Q\263d\357\305\222\375<\266\373\022\013\367\215\030\317\256\324"
 330      C592 FD3C 
 330      B6FB 120B 
 330      F78D 18CF 
 330      AED4 
 331 0762 86AA 5A8A 	 .ascii "\206\252Z\212\361\2744@\317\"\363M\200\302S\1778\306\243\001"
 331      F1BC 3440 
 331      CF22 F34D 
 331      80C2 537F 
 331      38C6 A301 
 332 0776 2BF3 59AC 	 .ascii "+\363Y\254\206{\261\032\336$\016\315\332O\250B\314\222.i\266"
 332      867B B11A 
 332      DE24 0ECD 
 332      DA4F A842 
 332      CC92 2E69 
 333 078b C6BA 2FD5 	 .ascii "\306\272/\325\311\341\305\265\\\251{\036\325\315\222\221\370"
 333      C9E1 C5B5 
 333      5CA9 7B1E 
 333      D5CD 9291 
 333      F8
 334 079c B723 4C5B 	 .ascii "\267#L[\240\223\216\271\366\\\322h\240\235;6\227+\271\331\200"
 334      A093 8EB9 
 334      F65C D268 
 334      A09D 3B36 
 334      972B B9D9 
 335 07b1 D627 CF62 	 .ascii "\326'\317b\247P<[A\275\b\205+\302\356\n\205\274Y.#\272\326PS"
 335      A750 3C5B 
 335      41BD 0885 
 335      2BC2 EE0A 
 335      85BC 592E 
 336 07ca B780 3278 	 .ascii "\267\2002x\221B"
 336      9142 
 337 07d0 D12D 4A91 	 .string "\321-J\221\217\373_]\370\304;\033:\343dt\377\3462\245\350V\274\361\363Y\255\3736)\210\027X1u;\n\336&nCzv\016\274\210\263`\037\262\314A\037\375k\360K\323Gs\022N\3531\002\027\231\331\271;\277\354"
 337      8FFB 5F5D 
 337      F8C4 3B1B 
 337      3AE3 6474 
 337      FFE6 32A5 
 338 0819 83BD AF2C 	 .string "\203\275\257,\347\366N \3373\320\267\261\207s\322\341\270\\\036\2510\260\264|1(\365\313\r\365\244\r\235\024\305\241\367\364\231$t\232\363\225\\\230\016\r\237>C\023\321c\006S\233\034\203\375\371\346\331\372\215>[7\250\263E\223\316\326\r)\316V\201<[\357\016\1775\250S\342\035\227\020\270\224y\304\245(2=\321\024\254Q\242T\251\374\213V<E\225\202;A\007\336\347\235D\204\271\231*\357\304y\026gD!i\300\215\350\035U6\214\353JK\252\362\251\243\274\355\211\253\025\313\334\304k\317g\316D\305i\274\254\256=se\351\037\375\230&\"\317'\377\025\221\311\230\272\236>\247\2353?\241\326\246\240\227\013\272_A\026"
 338      E7F6 4E20 
 338      DF33 D0B7 
 338      B187 73D2 
GAS LISTING  			page 26


 338      E1B8 5C1E 
 339 08e0 2AA1 D69E 	 .string "*\241\326\236\327b\026\310\305\234\273\020\377N\220\201>r\356B\\!\376\304C\2528\375\304\025j9\315\231T\260f\254`\302\213\305*J{\237\372BGiK\\\224^\235i\224\276\2507\342.\320\021\037\245\227\353W)\242\264\204\024a\224\016?\365\341E\225\304\211\230\236zN\r\376A\177,\362\247\310\374\245\244\026#\247\177\373Amq \223\320\211?o\001\374\204c\252-#9\202\375\330#\306X\364\345\304)\252\307\376\255\215J.\250\2774hh\b\031\202\311Q\351\0337(C\212\252\002\251 \336On\255Rz\027\201\336\364\021\2373\256\362EJy%\254\027\343\357\253\255\372\006\325&\343\317\256&\302:"
 339      D762 16C8 
 339      C59C BB10 
 339      FF4E 9081 
 339      3E72 EE42 
 340 09a2 EB42 F27A 	 .string "\353B\362z\200R\3760\255\227\016\315\321\262\t\037*8I\025q\211\013J\337\233z\257\026\343^\215Y\t\022\277\201,N\241\332Ol\250zx\317a\355\364\366\261\302\300\274\255\303\237=O\234\333\256\004\220\374\bp\031"
 340      8052 FE30 
 340      AD97 0ECD 
 340      D1B2 091F 
 340      2A38 4915 
 341 09e8 F59F DE49 	 .ascii "\365\237\336Iz\371\r\035\250\207\353k\320\261k\226M\263\b\265"
 341      7AF9 0D1D 
 341      A887 EB6B 
 341      D0B1 6B96 
 341      4DB3 08B5 
 342 09fc 8BDB D088 	 .ascii "\213\333\320\210\305\252\216\314\362\332\267a\225\332\365\016"
 342      C5AA 8ECC 
 342      F2DA B761 
 342      95DA F50E 
 343 0a0c 5992 F78E 	 .ascii "Y\222\367\216\262D\n\307ER$\024\034\376\307\356\265\217\035\326"
 343      B244 0AC7 
 343      4552 2414 
 343      1CFE C7EE 
 343      B58F 1DD6 
 344 0a20 CFB6 7188 	 .ascii "\317\266q\210yp\342m\"]\374\376\315xc\274\231\0265\241\247\206"
 344      7970 E26D 
 344      225D FCFE 
 344      CD78 63BC 
 344      9916 35A1 
 345 0a36 1C32 8C57 	 .ascii "\0342\214WI\267K(Y\310\263\031\260o\371&+%9^*\016$P\3160]\234"
 345      49B7 4B28 
 345      59C8 B319 
 345      B06F F926 
 345      2B25 395E 
 346 0a52 7391 2ECE 	 .ascii "s\221.\316\023\024#\337\002\205\212\255\002\271\213\037\276\223"
 346      1314 23DF 
 346      0285 8AAD 
 346      02B9 8B1F 
 346      BE93 
 347 0a64 44E1 B848 	 .ascii "D\341\270H\n\213\207\013\211\374\207\363\341\301$\232\352\213"
 347      0A8B 870B 
 347      89FC 87F3 
 347      E1C1 249A 
 347      EA8B 
 348 0a76 A449 99F7 	 .ascii "\244I\231\367k\311\210-n#\r\334H\274U\213\317\376T\376'\330\374"
 348      6BC9 882D 
 348      6E23 0DDC 
 348      48BC 558B 
 348      CFFE 54FE 
 349 0a8d A82E 7234 	 .ascii "\250.r4\351\276K\341/\253\347\324\313%\320\025\362\277\257E\274"
 349      E9BE 4BE1 
 349      2FAB E7D4 
 349      CB25 D015 
 349      F2BF AF45 
 350 0aa2 2951 26F8 	 .ascii ")Q&\370\337{l1\214\253A@\316\324\274\367D\005\247\257#/1\003"
 350      DF7B 6C31 
GAS LISTING  			page 27


 350      8CAB 4140 
 350      CED4 BCF7 
 350      4405 A7AF 
 351 0aba BF        	 .ascii "\277"
 352 0abb 459D D8A9 	 .string "E\235\330\2513\341\212\370oQ\217\321\264\037\243\236\213?\264\227\231\333\355\275@'\251\257V+\344\307\277\177\177\242W\275\362|\276\307\305[\345\272H\253\324\207\273\225\362(Y\254z\340|>I\376\177\255R\337.\037P\301T\317\203I\334\253v6)\003\2730\204\322\334\253\\RE\227\345^5\211\234\265\307\205$K\fI&oogw\352\357 \335\024\247\323\320x$M7\225<\307\b\203\200tb\304\322z\312i\033\370w\374\243@k\306\365\\\260\274\307\311\235\237\335\331\332\321\334rohy\370\322V\342\t/im\tw,Y\332y\351w\263\227\006\027/\351\f\342`\206m\351\262\326{hg\366\262\340O\227\007\333[\203\315\355\313\027;[Z\357\341\275mQ8\330n\017\205[\026.sw\264\254\b/i\t\300\204\263=x_'\210\333\002w\207B\236{\357n\017,\271\267y\331\335\367\007i\353\377"
 352      33E1 8AF8 
 352      6F51 8FD1 
 352      B41F A39E 
 352      8B3F B497 
 353 0bbc 58BE 8F7B 	 .ascii "X\276\217{"
 354               	 .text
 355               	 .section .gnu.lto_RequestClosure.bc17d6271b7db497,"",@progbits
 356 0000 789C AD52 	 .string "x\234\255R\277/\303A\024\377\274\273\357\265%\025$V%l\304\217\304 \261\371+\b\022\221V\007\371\016\035\210\301\340\212\301\"\021#\213\256B%\222&\035\fM\030j\360+:\b!M\f6\263X\276\336\335\351\227\262\341%w\367\356\336\347}\336\347\335\235\200\300w\033\345\321&\201\026^)\002\022\233\027@6&\204:N@7\312\312"
 356      BF2F C341 
 356      14FF BCBB 
 356      EFB5 2515 
 356      2456 256C 
 357 006c 745C 0A55 	 .ascii "t\\\nUn\347\235W\036\344\235G\312\201\024\221q@X\026\322S\264"
 357      6EE7 9D57 
 357      1EE4 9D47 
 357      CA81 1491 
 357      7140 5816 
 358 0083 3C45 96F3 	 .ascii "<E\226\363P\224\252A\220\177\274\333=\243H\\P\206 \341\023\024"
 358      5094 AA41 
 358      907F BCDB 
 358      3DA3 485C 
 358      5086 20E1 
 359 0099 4F06 A1B0 	 .ascii "O\006\241\260\246\365f'\220\266\3701\236\r\3178\t\263\312s\254"
 359      A6F5 6627 
 359      90B6 F831 
 359      9E0D CF38 
 359      09B3 CA73 
 360 00ae BCAC 3E15 	 .ascii "\274\254>\025\022)\312\221\302\034\3119\016\200O'j'\252\027="
 360      1229 CA91 
 360      C21C C939 
 360      0E80 4F27 
 360      6A27 AA17 
 361 00c3 4CD5 877D 	 .ascii "L\325\207}\3156\354\223\330\301vV\353\026\237\344\022\336\364"
 361      CD36 EC93 
 361      D8C1 7656 
 361      EB16 9FE4 
 361      12DE F4
 362 00d6 BAF1 BC8C 	 .ascii "\272\361\274\214-6I\354ZY\314\364\321\364,\325\332/\343\3649"
 362      2D36 49EC 
 362      5A59 CCF4 
 362      D1F4 2CD5 
 362      DA2F E3F4 
 363 00eb DB10 F21A 	 .ascii "\333\020\362\032p\03036\3169\225\001ia\223\3650Q\007\363p\325"
 363      7018 3336 
 363      CE39 9501 
 363      6961 93F5 
 363      3051 07F3 
 364 0101 6E94 178B 	 .ascii "n\224\027\213\371{\341\200\275\3303\362\206|R\037J\233~\241\324"
 364      F97B E180 
 364      BDD8 33F2 
 364      867C 521F 
 364      4A9B 7EA1 
GAS LISTING  			page 28


 365 0116 C931 31D5 	 .ascii "\31111\325\n{\r\305\333\374\311\217\022\364\207\022\bK\330\246"
 365      0A7B 0DC5 
 365      DBFC C98F 
 365      12F4 8712 
 365      084B D8A6 
 366 012a 4C89 D7FC 	 .ascii "L\211\327\374\215\374\317.\304g\027\3069\303Ji\304\361w!\247"
 366      8DFC CF2E 
 366      C467 17C6 
 366      39C3 4A69 
 366      C4F1 7721 
 367 013f F556 E961 	 .ascii "\365V\351a\273[\257\226\364k\020D\031#\320L\346w\230\204H\314"
 367      BB5B AF96 
 367      F46B 1044 
 367      1923 D04C 
 367      E677 9884 
 368 0155 2ED1 BA77 	 .ascii ".\321\272w1\354\314y\211\265\352\375yc\370\241\234\243\203BG"
 368      31EC CC79 
 368      89B5 EAFD 
 368      7963 F8A1 
 368      9CA3 8342 
 369 016a 8A8E A88B 	 .ascii "\212\216\250\213a\256H\272\366\252\241\332X\232\370\016\013N"
 369      61AE 48BA 
 369      F6AA A1DA 
 369      589A F80E 
 369      0B4E 
 370 017c 0E73 F9D4 	 .ascii "\016s\371\324\340\350\312\007Q\227S\017\226\370\nto\256\354w"
 370      E0E8 CA07 
 370      5197 530F 
 370      96F8 0A74 
 370      6FAE EC77 
 371 0190 BD46 B65A 	 .ascii "\275F\266Z\334H\324\222\234\215qA\016\232\266\343\363\311\314"
 371      DC48 D492 
 371      9C8D 7141 
 371      0E9A B6E3 
 371      F3C9 CC
 372 01a3 F4CC 627A 	 .ascii "\364\314bz\301\357O\202\222\357\337.\274\031"
 372      C1EF 4F82 
 372      92EF DF2E 
 372      BC19 
 373               	 .text
 374               	 .section .gnu.lto_EmitTCP.bc17d6271b7db497,"",@progbits
 375 0000 789C 5D8F 	 .string "x\234]\217\261K\303@\030\305\337\273\230\266\203`V'\305QQg\377\005\377\201\n\025DZ3\224\f\031*\035\212\344\322\032p\f\202\213\272\024W\301\377@\2628\210\250\270\212Cpp\021\034\213\264`\374\256GD\372\301\335w\367\361\336\357\336)(\314\326\242\254.\001O:\035P\245O@\\S\2449\200\210\024\243]\032)W0\324\3724\277\033=8\211\316u\252\177\212\210\001\205\272@\370DC.\364\246M\315\274t\243\262\274(.'\311\373Q\225\f\215'\240\343\240\305\241`]\271\314\211\312\305\261\326\351\262\035\302 \245\352\262\233,;T\246;\217\350\177\r>o\267[\274\242\2136U\233\242\220\351x\360\301r\350\3640\326R=\211\267\216ks<\223XnH\212\343\177\262{\364\263-k\263\357\212y\212{\375\036M\376x\356\032V\003V.p\036\013\252!$\221\231\217Z\310\001K\3343\222l\311\272"
 375      B14B C340 
 375      18C5 DFBB 
 375      98B6 8360 
 375      5627 C551 
 376 0101 13E2 447B 	 .ascii "\023\342D{\001\253>\255\302X*0\300\2005\340\005q\376\266Y\312"
 376      01AB 3EAD 
 376      C258 2A30 
 376      C080 35E0 
 376      0571 FEB6 
 377 0117 6DD5 452A 	 .ascii "m\325E*\3774!\347;\315po\277\353\037\006\033M\260\363\013\330"
 377      FF34 21E7 
 377      3BCD 706F 
 377      BFEB 1F06 
 377      1B4D B0F3 
 378 012d 9E5F A7   	 .ascii "\236_\247"
GAS LISTING  			page 29


 379               	 .text
 380               	 .section .gnu.lto_.symbol_nodes.bc17d6271b7db497,"",@progbits
 381 0000 789C 4D91 	 .string "x\234M\221=O\033A\020\206\347v\275\266\t\306\2071\266\271\363\027\346;$\204&\177(\277\344E>) #!\224\"MD\"\331e\244\244\241E\212\214\224\222*M\272\370\256\241"
 381      3D4F 1B41 
 381      1086 E776 
 381      BDB6 09C6 
 381      8731 B6B9 
 382 003b 2969 1251 	 .string ")i\022Q$\260\263{d\367\212}\364\314\2747\273{'H\320\231$\373\210"
 382      24B0 B37B 
 382      64F7 8A7D 
 382      F4CC BC37 
 382      BB7B 2748 
 383 0055 44A7 5744 	 .string "D\247WD\300\331\321+\265\023\020H\355\n\275\212\002\002\257\363Tr\255\f\341jb\001\322\263*\n^\276[\340I}\305\353j\221\327\371\222\322\023\026\241\274\324z\231\247VP\364\346\204(y\211M\342\204B\331K\3240\227\333\373\243@\324\361\304\263e\314{\326D\305\263\026\026<\213Pu\246\366\347x\237\025\204^b\t\213\2365P\363,\306\222\263\240\215\272\265\203\203 \330\302\262\223m4\234l\240\351d\017-'\317\260\342\3449\"'/\020;YC\333\311"
 383      C0D9 D12B 
 383      B513 1048 
 383      ED0A BD8A 
 383      0202 AFF3 
 384 00e8 1D27 3D74 	 .string "\035'=t\235t\320\373/\262H4\375\361\317p<\263\034\276\276\351\233:\263\332\245\204\373\314\231\345$\257_\036j\206\253\224q]3\341z\330\263\375\260O\331\243\037Zf\206E\032\217,SC\275\337\261\345\3648\317\345LN\362\367\231\265\001e|\216\372\032e\267B6\326);\177)\233!\r\271\332R97h\362\3503\313\351\314\326\315\351\264\247\314H\332~\324\242)\237*\252Q\312\214KvN\\\265_C35\314o\3154\271\035{\033\315\311\310\362rd\373\311\325\375\205\222\3616%o~\227d\\\241\341\333oB\306!\245\357\230\332?p}\213\262\364K\304\234\374\271\326\371MJ\356\177\006&\367\361\327g)\343\210\322Ow\337\245l\353+~\375\253d;\2421\26330?\202\036"
 384      9D74 D0FB 
 384      2FB2 4834 
 384      FDF1 CF70 
 384      3CB3 1CBE 
 385 01c4 9D02 1101 	 .ascii "\235\002\021\001"
 386               	 .text
 387               	 .section .gnu.lto_.refs.bc17d6271b7db497,"",@progbits
 388 0000 789C 4D8C 	 .string "x\234M\214Q\016\202P\f\004\247K\225\207\205"
 388      510E 8250 
 388      0C04 A74B 
 388      9587 8500 
 389 0010 A211 952B 	 .ascii "\242\021\225+{g\373b\b\356f>\266\231T\210\017\2774`\031\251\301"
 389      7B67 FB62 
 389      08EE 663E 
 389      B699 5488 
 389      0FBF 3460 
 390 0027 709D 4C26 	 .ascii "p\235L&o)t\\\024\347\236\341\250\217\212t]\223\346j\3335\367"
 390      6F29 745C 
 390      14E7 9EE1 
 390      A88F 8A74 
 390      5D93 E66A 
 391 003e 92DC 923B 	 .ascii "\222\334\222;\241\007+\253=\025\313KA\251\324?\026\377\255\233"
 391      A107 2BAB 
 391      3D15 CB4B 
 391      41A9 D43F 
 391      16FF AD9B 
 392 0052 2E29 16FE 	 .ascii ".)\026\376f\277oi\177\001)\214\003\377"
 392      66BF 6F69 
 392      7F01 298C 
 392      03FF 
 393               	 .text
 394               	 .section .gnu.lto_.decls.bc17d6271b7db497,"",@progbits
 395 0000 789C 9D5A 	 .string "x\234\235Z\013p\024E\032\356\236\335d\263y\021\024\225SO\360N\257P\253\b\340\225\305U])\257\210\324\371\340\b\224We]\255\313\356\204\254l6aw#\307=\212I\b\221J\201\025\220`$@\022H\020.\200<\222\342\251\267p\b>\300S\203\034/aA\224\343\016\217\034\021\005!\354\375=\323\275\363\330\356aa\252\376l\317L\377\177\177\377\367\377\375wog%$\241\226,\204\022p\355{\004\241\237:\021\032\200\020z\022\304\005\322\n\322\016\342"
 395      0B70 1445 
 395      1AEE 9EDD 
 395      64B3 7911 
 395      1495 534F 
 396 0092 C120 6B40 	 .string "\301 k@\240\013\312@\3325\b\244\003d3\310V\220\335 \037\203t\203\034\007\211\203\234\0059\017r\001\344\"\310%\220+ \327\211]0\352\002\311\005)"
 396      A00B CA40 
GAS LISTING  			page 30


 396      DA35 08A4 
 396      0364 33C8 
 396      5690 DD20 
 397 00c5 1900      	 .string "\031"
 398 00c7 720F C84F 	 .ascii "r\017\310O@~\016\362(H!\310\030\220q O\203\374\006\3449\220\337"
 398      407E 0EF2 
 398      2848 21C8 
 398      1890 7120 
 398      4F83 FC06 
 399 00df 8264 838D 	 .ascii "\202d\203\215b\370\234\002\362\"\310K \277\007\361\200xAd\220"
 399      62F8 9C02 
 399      F222 C84B 
 399      20BF 07F1 
 399      8078 4164 
 400 00f4 C520 4B30 	 .ascii "\305 K02]\035\324?\342W>H.H#\326|\374"
 400      325D 1DD4 
 400      3FE2 573E 
 400      482E 4823 
 400      D67C FC
 401 0107 1DFC 798B 	 .string "\035\374y\213\366\307\264/\351G\306x\007i\343\030\257\315\034[\031\224;bs\251\301\026\351+Q[/Y\354\020\3762\251.\246<3,\255H\267\261\225\216\365\036\310.\016\236\335\324\206\313`\247\t\032\353\350{\211\366\351\240\357?0\253\253\361+\260\370\263\f:\036\204\317\345\224#f\177\032\326\3543_\367\302\347\n\370l\306\232\376\237\340\363/ \263\251\336\307\024\217l\211\223\361\352\246<\220\307k\221\236s$\017\017\033x\350\246\276\034AZ\214\215\027\311=Hk\025\017\363\001S\314-\320\270\213\342f|\220\376\003,6\310\025\007\271\237\372\315\354\250\376R\037\215<O\243qr =\356\265 +\261\206\375!\254\371\262\n>\373(\2666h\337K\336\203\3541\304\211\330\234Kyc\034V\201\314\001y\035k\357\t\266\325t\236\2609\303\342Jp\235\241<\263\\+\266\370G\346\245\033\245\346m#\365\203\340\357"
 401      F6C7 B42F 
 401      E947 C678 
 401      0769 E318 
 401      AFCD 1C5B 
 402 0208 790C EB3C 	 .ascii "y\f\353<\021\0352'E9|\236bo7\330\\N\271&\374L\247y\360\n\375"
 402      111D 3227 
 402      4539 7C9E 
 402      626F 37D8 
 402      5C4E B926 
 403 0223 3C4F B993 	 .ascii "<O\271\223-vH\255\310\341\3309H\371g|\257\2431\030f\300Ht\013"
 403      2D76 48AD 
 403      C8E1 D839 
 403      48F9 677C 
 403      AFA3 3118 
 404 023c 31DF EE45 	 .ascii "1\337\356E\3523\017\037\313k\026Gb\253\016\332\363\250\255\213"
 404      EA33 0F1F 
 404      CB6B 1647 
 404      62AB 0EDA 
 404      F3A8 AD8B 
 405 0250 02AC A49E 	 .ascii "\002\254\244\236eS\\\306\\k\247\266J@\326c=\357\310\273y\224"
 405      6553 5CC6 
 405      5C6B A7B6 
 405      4A40 D663 
 405      3DEF C8BB 
 406 0266 43A2 3B86 	 .ascii "C\242;\206\266\277\347\330\276BqX\347/y\036\247\343\374hVQ\353"
 406      B6BF E7D8 
 406      BE42 7158 
 406      E72F 791E 
 406      A7E3 FC68 
 407 027d 6A16 D26B 	 .ascii "j\026\322k\020\303\264\001:oCz~\"\212\231\364'5\205\324\327w"
 407      10C3 B401 
 407      3A6F 437A 
 407      7E22 8A99 
 407      F427 3585 
 408 0294 2816 62D8 	 .ascii "(\026b\330Z3I\255.@\346\271\340@\251\334m!\202\364\265\203\345"
 408      5A33 49AD 
 408      2E40 E6B9 
GAS LISTING  			page 31


 408      E040 A9DC 
 408      6D21 82F4 
 409 02ab 7B27 7C7E 	 .ascii "{'|~M\373\327\323<&<\314\247\374\023\373\233)\236\263\324\317"
 409      4DFB D7D3 
 409      3C26 3CCC 
 409      A7FC 13FB 
 409      9B29 9EB3 
 410 02c1 0C9C CA09 	 .ascii "\f\234\312\tY/\206 s\336:)\256\275t\314\203t\374.\252\313\360"
 410      592F 8620 
 410      73DE 3A29 
 410      AEBD 74CC 
 410      8374 FC2E 
 411 02d8 B5D2 B973 	 .ascii "\265\322\271s\037\3106h\037\240\230\267\203\234@z\214v\200tR"
 411      1FC8 3668 
 411      1FA0 98B7 
 411      839C 407A 
 411      8C76 8074 
 412 02ed 9E76 823C 	 .ascii "\236v\202<O\347\362.\220CH\257q$\237Yl\336\205\317\361\206x\223"
 412      4FE7 F22E 
 412      9043 48AF 
 412      7124 9F59 
 412      6CDE 85CF 
 413 0305 FC9D 8BCD 	 .ascii "\374\235\213\3155p\016\235\307\257P\337\353(\017\204\217\\\352"
 413      3570 0E9D 
 413      C7AF 50DF 
 413      EB28 0F84 
 413      8F5C EA
 414 0318 1BA9 91AC 	 .ascii "\033\251\221\254\036\2215\216\254u\335\206\230\223\365\217\254"
 414      1E91 358E 
 414      AC75 DD86 
 414      9893 F58F 
 414      AC
 415 0329 8384 2F12 	 .ascii "\203\204/\022g7|\276\007\022\003\331\203\355k+YgY\256\022\354"
 415      6737 7CBE 
 415      0712 03D9 
 415      83ED 6B2B 
 415      5967 59AE 
 416 033f C6FC 34CE 	 .ascii "\306\3744\316\t\346\023\341\370\025C\254\234\324\006\303\342"
 416      09E6 13E1 
 416      F815 43AC 
 416      9CD4 06C3 
 416      E2
 417 0350 A0F9 92CF 	 .ascii "\240\371\222\317\211\023Y\317\335(\265v\032\347\030\253/\230"
 417      8913 59CF 
 417      DD28 B576 
 417      1AE7 18AB 
 417      2F98 
 418 0362 E684 44F5 	 .ascii "\346\204D\365X\215\271\203c\327\215\346)J\265\322R\245\fh\314"
 418      588D B983 
 418      63D7 8DE6 
 418      294A B5D2 
 418      52A5 0C68 
 419 0377 2725 C88F 	 .ascii "'%\310\217\363\335\220\231\244\221\353V\325\036Fm\212R\037\237"
 419      F3DD 9099 
 419      A491 EB56 
 419      D51E 466D 
 419      8A52 1F9F 
GAS LISTING  			page 32


 420 038b 9BE8 9114 	 .ascii "\233\350\221\024\305\351\307\255\230<\177\020\243G\321Z\005\336"
 420      C5E9 C7AD 
 420      983C 7F10 
 420      A347 D15A 
 420      05DE 
 421 039d 284A 6B0E 	 .ascii "(Jk\016J\275\3748\303\235r\357\307m\370Q\244\215\243\276\246"
 421      4ABD FC38 
 421      C39D 72EF 
 421      C76D F851 
 421      A48D A3BE 
 422 03b2 8D        	 .ascii "\215"
 423 03b3 44C2 91C4 	 .string "D\302\221\304\242,Tr\rX\262\030\026\234\304\022\373\316\005\217\332U\034\303q\322\2506\n\266\214\212\315\243b\267\336H\250\211U\247\023\320\037\2017\212\322\002\202\265.\024\3040\006\"\223Z]\213\373\353\374)T]\355\301\243\220h\374\225\002\243\217\223\r\266\373\023\351\255\301Iv\007\241\025J\254'\336\333\365\2254W\211+\261D\342\251\202\273Q\003\001\240T)\243f\370\361\223wqi#v\326\341\273\325\226C\263\254\361\347\307S\034I\256$2\343\214d>\204V)\312\"e\371B\215\016\215\360\211\244O\007\036\304\035H\353\004\327/P;AuTY\243\252\002.D\325L\301\331\200%\343\003\315\301\330\325\323\217(s\224\033\211D\2252\332\354_\253\036\022\213\203\351\366\363\343NJD\352%\241If\002\250\037\325J\335\342\030\326\254\022\013\233u\357-\341R_wq\235\332Z\273$C\331\250\304\023\211f\245"
 423      A22C 5472 
 423      0D58 B218 
 423      169C C412 
 423      FBCE 058F 
 424 04b4 A51D B66D 	 .ascii "\245\035\266m\326\260\021\020\246\033\265a\nc\t7\214\333\033"
 424      D6B0 1110 
 424      A61B B561 
 424      0A63 0937 
 424      8CDB 1B
 425 04c7 B430 6AF3 	 .ascii "\2640j\3637J\372l\0258B\rS\305>"
 425      374A FA6C 
 425      1538 420D 
 425      53C5 3E
 426 04d6 93E2 9FD3 	 .string "\223\342\237\323P\024\305\177\2535\376;yT\305\027\326\255\376)K\360\364\231\332cf\212V\223x\225\362\220\241\232\ffZ\244x\322\312\366>\253l{U\007\027`kIqYJ\212\313\\R\\n\275A\276\373\365K\t\310\022\314\213\b\361\363\311\327\224\227\331\300\313\325^\273ujM`\265^:\265;\315\324\356\266R\273\237\233\205\333\373\206\260\2515\312\310,\255c7\257\275\361\366\033q\215\255\203*\350\346\024\266\220\205-df\013n\225\004\275\360l\372d6\177H\353\264>h3\255?\265\231\326\2531w^+\020\201\r\203j\352^\326,\023+\037\013\n\033\035\3443~\275\332\367:\235\332\203\322O\327C\346t5\255CZ\031\025\255\b\207\365\025\301\222g;\270y\246l\242\023\230(J\350#\265S\267p\006S\363\3744\353\266\246\331?\271\214\374\320F+86\363\2617\315\372-\356\347\307_\332\004\372"
 426      5014 C57F 
 426      AB35 FE3B 
 426      7954 C517 
 426      D6AD FE29 
 427 05d7 3FD0 D5CA 	 .ascii "?\320\325\312\353j\001\337K\243|\\0\307\350\b'\371Q\276L\247"
 427      EB6A 01DF 
 427      4BA3 7C5C 
 427      30C7 E808 
 427      27F9 51BE 
 428 05ed 0ED6 1653 	 .ascii "\016\326\026S\t}\316\247\273\331\260^\372\361Q0\346\307\3614"
 428      097D CEA7 
 428      BBD9 B05E 
 428      FAF1 5130 
 428      E6C7 F134 
 429 0601 174C 0BDD 	 .ascii "\027L\013\335q+\335\247\271\005\263\267\357\326w\004i'\35276"
 429      712B DDA7 
 429      B905 B3B7 
 429      EFD6 7704 
 429      6927 EA37 
 430 0616 7C7F 2598 	 .ascii "|\177%\230X\212\242\362M\2758k\365\342\\\252\027-q\230\214\027"
 430      588A A2F2 
 430      4DBD 386B 
 430      F5E2 5CAA 
 430      172D 7198 
 431 062c BCC9 B2AF 	 .ascii "\274\311\262\257\215+\241\377\2465\302y\353\b\377\346\215\020"
 431      8D2B A1FF 
 431      A635 C279 
 431      EB08 FFE6 
 431      8D10 
 432 063e FB62 C9FC 	 .ascii "\373b\311\374\344D\325*\206\204\276\027\r0O\035\200\025\206\013"
 432      E444 D52A 
GAS LISTING  			page 33


 432      8684 BE17 
 432      0D30 4F1D 
 432      8015 860B 
 433 0652 F685 E15B 	 .ascii "\366\205\341[\356xo\274\371X2e4w\346I\351\270s\321\352N\017\327"
 433      EE78 6FBC 
 433      F958 3265 
 433      3477 E649 
 433      E9B8 73D1 
 434 066a FC5B C7E7 	 .ascii "\374[\307\347\013\352N\273\315\374\351Mc#X/q3\373Z}jf_J+\263"
 434      0BEA 4EBB 
 434      CDFC E94D 
 434      6323 582F 
 434      7133 FB5A 
 435 0685 AB95 2DF5 	 .ascii "\253\225-\365k\222\272\310F\217\242\274\234\352q\274'\266\245"
 435      6B92 BAC8 
 435      468F A2BC 
 435      9CEA 71BC 
 435      27B6 A5
 436 0698 8912 5AE5 	 .ascii "\211\022Z\345d\223\260)}\250W\322\234\204\013b\325\003Q2\030"
 436      6493 B029 
 436      7DA8 57D2 
 436      9C84 0B62 
 436      D503 5132 
 437 06ad 57AC C1B8 	 .ascii "W\254\301\270\312\205v\344\244\324\250\364\300\352\237\366\304"
 437      CA85 76E4 
 437      A4D4 A8F4 
 437      C0EA 9FF6 
 437      C4
 438 06be EAE3 6DED 	 .ascii "\352\343m\355,\201X\313\367n\241iK\266]\355t=\315=\231\331\273"
 438      2C81 58CB 
 438      F76E A169 
 438      4BB6 5DED 
 438      743D CD3D 
 439 06d5 EB56 EF12 	 .ascii "\353V\357\022\\\357v\035\247\3361\332c|`?ph\237#\335\016\355"
 439      5CEF 761D 
 439      A7DE 31DA 
 439      637C 603F 
 439      7068 9F23 
 440 06ec 44CB 04AC 	 .ascii "D\313\004\254F\342\315\201\303\373\223\300\372T`\007\370\300"
 440      46E2 CD81 
 440      C3FB 93C0 
 440      FA54 6007 
 440      F8C0 
 441 06fe 7A17 1B19 	 .ascii "z\027\033\031;\254vzM\272\035\306^\263\002\233\307\005v\342\230"
 441      3BAC 767A 
 441      4DBA 1DC6 
 441      5EB3 029B 
 441      C705 76E2 
 442 0713 85B1 D37C 	 .ascii "\205\261\323|`}\034\306\346\337\026c\363\255\300\026p\201m<e"
 442      607D 1CC6 
 442      E6DF 1663 
 442      F3AD C016 
 442      7081 6D3C 
 443 0728 01D6 C307 	 .ascii "\001\326\303\007v\212\003\254\376\266\200\325[\201-L\005\026"
 443      768A 03AC 
 443      FEB6 80D5 
 443      5B81 2D4C 
GAS LISTING  			page 34


 443      0516 
 444 073a AF8F F75E 	 .ascii "\257\217\367^\375\b\317UN\363\266\375v\365\254A2\255O\022\272"
 444      FD08 CF55 
 444      4EF3 B6FD 
 444      76F5 AC41 
 444      32AD 4F12 
 445 074f 9252 63B5 	 .ascii "\222Rc\265\216Kx\243\306N\035\255\036e\316 \305\301\327o\344"
 445      8E4B 78A3 
 445      C64E 1DAD 
 445      1E65 CE20 
 445      C5C1 D76F 
 446 0764 A2EE 5CBA 	 .ascii "\242\356\\\272>#v\253\233\277\245\222e\352;\334\334\215`\362"
 446      3E23 76AB 
 446      9BBF A592 
 446      65EA 3BDC 
 446      DC8D 60F2 
 447 0778 48A4 C57E 	 .ascii "H\244\305~[NNa\264\003\013\370\262\341\260\234\361\350\036\334"
 447      5B4E 4E61 
 447      B403 0BF8 
 447      B2E1 B09C 
 447      F1E8 1EDC 
 448 078c E42C 44B4 	 .ascii "\344,D\264\341\\.\031\017x\222\230\271\337=\333\004\344\255\344"
 448      E15C 2E19 
 448      0F78 9298 
 448      B9DF 3DDB 
 448      04E4 ADE4 
 449 07a0 9277 69FD 	 .ascii "\222wi\375c5\274}\242\rum\222x\337\234\006]~\274\032?|\373T\254"
 449      6335 BC7D 
 449      A20D 756D 
 449      9278 DF9C 
 449      065D 7EBC 
 450 07ba D6A9 30AD 	 .ascii "\326\2510\255\237\251Dl\021\020\261\226\233\205\327\342C\270"
 450      9FA9 446C 
 450      1110 B196 
 450      9B85 D7E2 
 450      43B8 
 451 07cc 44D8 7DE3 	 .ascii "D\330}\343"
 452 07d0 E9B0 2651 	 .string "\351\260&Q\032G\003\177\023\240\332\300A\2651\276\363\344\365\323\3703\245~\276r%\221\330\217\025\345_\331fxO\345p\320\251\020$tA\315Cz\363\235\0033h\017\240\353\216\345J\026\262 \330h\365\006l'\333N\267\341U\372g\226}\315\207{q\2652\312\217wH\344\305\333N\353\227\325[=\243Let\203\311&u\267\313i\360\375]\247`B\0323 \336\333\372\241^\375\264\252&\241=N~\270\376\316M\242\246Z6\233\264s#\tu\013\364\337\347\316\306\246s=\213\223\341v\335B\t\336o\215]\373\3153\361\222"
 452      1A47 037F 
 452      13A0 DAC0 
 452      41B5 31BE 
 452      F3E4 F5D3 
 453 0879 DA47 5CD7 	 .ascii "\332G\\\327:\033\224\032\\\245$\022\263\331\252U\225\301\327"
 453      3A1B 941A 
 453      5CA5 2412 
 453      B3D9 AA55 
 453      95C1 D7
 454 088c 3FC0 D55F 	 .ascii "?\300\325_\222\324O\337\253Ox\363\313"
 454      92D4 4FDF 
 454      AB4F 78F3 
 454      CB
 455 0899 7AB2 2340 	 .string "z\262#@\361)\177\205\273\374\2711\306\235\252#m\002\023\237\233M\374\f\265\022\023]\307\226\r\255\002\023\325\020\347\331X;\210\226\320\372\244\r\321\201\365!\335\032\261\324\262(\336\333uU\232k\260\344 3d\213\325P\352\351\203\331\020p{t\233\273f\316<5g\204\007\350J\322\216\302\f\035\221n\365\b\375\250\304?BO\260\371\005\365\315\212\2373\3601+\025\261Sm\2170\017\330\016\361\203\233\022q\"\205\321\256c\315\205)\214\036\271\251\241\223)x\256/&\331Z\243\\\207\232C\315\234\271\251\231xJ`\256m\373\225%0\361*\b\314\fc`,\347\037~|\346\226\303\362\225 ,l\236H\350[+\370\224Q\317Z\300\177\032\257\257k\300\360\345V\235\263\306\264\232q\007Z\250\337$\313\177\017f&\037P\207\374^\035\362\234t\007\035X\333&A\211\213\335\333\250(Y\332+\304\231x\364z\020\301"
 455      F129 7F85 
 455      BBFC B931 
 455      C69D AA23 
 455      6D02 139F 
 456 099a D5B1 2FF6 	 .ascii "\325\261/\36658c{\034lcQ\025\033=CtT\351\307\3771\020\241\265"
GAS LISTING  			page 35


 456      3538 637B 
 456      1C6C 6351 
 456      151B 3D43 
 456      7454 E9C7 
 457 09b3 59CB 4520 	 .ascii "Y\313E \325d2H\324\200\303h \311\236\013\325\246\267\274\305"
 457      D564 3248 
 457      D480 C368 
 457      20C9 9E0B 
 457      D5A6 B7BC 
 458 09c8 76EE C305 	 .ascii "v\356\303\005~\374\255\344\202\207u\231\346*\222\206\025\365"
 458      7EFC ADE4 
 458      8287 7599 
 458      E62A 9286 
 458      15F5 
 459 09da 6001 948D 	 .ascii "`\001\224\215\004\3056\325\366S$\355\271\r;tek\312\324Xw\272"
 459      04C5 36D5 
 459      F653 24ED 
 459      B90D 3B74 
 459      656B CAD4 
 460 09f1 F567 2BF5 	 .ascii "\365g+\365g\330\320u\203\376X2<\336\251?f\351\"Zw\331e\004\355"
 460      67D8 D075 
 460      83FE 5832 
 460      3CDE A93F 
 460      66E9 225A 
 461 0a0a C7FF 93C8 	 .ascii "\307\377\223\310n\356\222\344\340\353\251aTbo\356\037\\?\220"
 461      6EEE 92E4 
 461      E0EB A961 
 461      5462 6FEE 
 461      1F5C 3F90 
 462 0a1e EEF2 4C21 	 .ascii "\356\362L!\310\342\206\200\301\310O\356\016\314w49\216\356[\220"
 462      C8E2 8680 
 462      C1C8 4FEE 
 462      0ECC 7734 
 462      398E EE5B 
 463 0a33 A16C 1CC6 	 .ascii "\241l\034\306J\306\207\326\370\232\3306\345\n\327\334\261}R\343"
 463      4AC6 87D6 
 463      F89A D836 
 463      E50A D7DC 
 463      B17D 52E3 
 464 0a47 4066 AC3B 	 .ascii "@f\254;\035c\016\261\261\023\373\034\304\230\366\237\205/\255"
 464      1D63 0EB1 
 464      B113 FB1C 
 464      C498 F69F 
 464      852F AD
 465 0a5a C64C F38F 	 .ascii "\306L\363\21763\304\306N\032\215\235K\307\230[l\254\307h\354"
 465      3633 C4C6 
 465      4E1A 8D9D 
 465      4BC7 985B 
 465      6CAC C768 
 466 0a6f 623A C6F2 	 .ascii "b:\306\362D\306\224\330\245\247\033\007\232\252\203iIOY\005k"
 466      44C6 94D8 
 466      A5A7 1B07 
 466      9AAA 8369 
 466      494F 5905 
 467 0a84 1DFD 698B 	 .ascii "\035\375i\213\375;\0260\374`\305`R\243\315\376b\207\256\326."
 467      FD3B 1630 
 467      FC60 C560 
GAS LISTING  			page 36


 467      52A3 CDFE 
 467      6287 AED6 
 468 0a99 70AA 69A0 	 .ascii "p\252i\240\375\203\264\332\205o\236c\367\210\315]3g\325\"\253"
 468      FD83 B4DA 
 468      856F 9E63 
 468      F788 CD5D 
 468      3367 D522 
 469 0aae 395E 220C 	 .ascii "9^\"\f\024\233\3533\243kJ\007\335\275bs7j\325$\325\214\255J\307"
 469      149B EB33 
 469      A36B 4A07 
 469      DDBD 6273 
 469      376A D524 
 470 0ac7 D87D 6263 	 .ascii "\330}bc\r\373M\256\256K\307\325\3739\346\222\027}\034OV\326_"
 470      0DFB 4DAE 
 470      AE4B C7D5 
 470      FB39 E692 
 470      177D 1C4F 
 471 0ade D370 7F73 	 .ascii "\323p\177s\313\253\332\"\007\177U\323\367\032[]\226U-u\3307\034"
 471      CBAB DA22 
 471      077F 55D3 
 471      F71A 5B5D 
 471      9655 2D75 
 472 0af5 E6A5 1DF6 	 .ascii "\346\245\035\366oKWp\366o\273\254\246R2\267\301\221\262\177;"
 472      6F4B 5770 
 472      F66F BBAC 
 472      A652 32B7 
 472      C191 B27F 
 473 0b0a CDD9 BFED 	 .ascii "\315\331\277\355\265\032J\361\353M\335\220\345\177N\0161\031"
 473      B51A 4AF1 
 473      EB4D DD90 
 473      E57F 4E0E 
 473      3119 
 474 0b1c 8D8E 1C81 	 .ascii "\215\216\034\201\022\331\305\211\264\336\022j\031\376?\237\242"
 474      12D9 C589 
 474      B4DE 126A 
 474      19FE 3F9F 
 474      A2
 475 0b2d B554 A845 	 .ascii "\265T\250E6\376\"\255&]+\271X\213\377\227I4\226\031\002\254\265"
 475      36FE 22AD 
 475      265D 2BB9 
 475      588B FF97 
 475      4934 9619 
 476 0b44 592B E577 	 .ascii "Y+\345w!\342\244T\217G\204\200\317\330\220\263B\250\265\327\206"
 476      21E2 A454 
 476      8F47 8480 
 476      CFD8 90B3 
 476      42A8 B5D7 
 477 0b59 9C66 A116 	 .ascii "\234f\241\026\371\302(\322j\021j\221\202(\322j\025j\265\331\214"
 477      F9C2 28D2 
 477      6A11 6A91 
 477      8228 D26A 
 477      156A B5D9 
 478 0b6e B552 A8D5 	 .ascii "\265R\250\325g\023\276UB\255\2456c\265\t\265\366\330\214\325"
 478      6713 BE55 
 478      42AD A536 
 478      63B5 09B5 
 478      F6D8 8CD5 
GAS LISTING  			page 37


 479 0b82 EEB0 FCA2 	 .ascii "\356\260\374\242&vy\023\373\301I\rf\247\200\377p\2317T\364Tt"
 479      2676 7913 
 479      FBC1 490D 
 479      66A7 80FF 
 479      7099 3754 
 480 0b99 ABE9 E4FD 	 .ascii "\253\351\344\375\204\332i\265\343\266~\rA\324\f\227\037\277\255"
 480      84DA 69B5 
 480      E3B6 7E0D 
 480      41D4 0C97 
 480      1FBF AD
 481 0bac 4F4D 8E4B 	 .ascii "OM\216K\0356Dt\b\211\330h\243\265N\250\365\215M\342\256\027j"
 481      1D36 4474 
 481      0889 D868 
 481      A3B5 4EA8 
 481      F58D 4DE2 
 482 0bc3 6DB3 217D 	 .ascii "m\263!}C\n\351\233j\227\261\037\304\304\n\234\267\375\373\035"
 482      430A E99B 
 482      6A97 B11F 
 482      C4C4 0A9C 
 482      B7FD FB1D 
 483 0bd7 F86A E4B2 	 .ascii "\370j\344\262~\201\346\376j\347\035A\224\250\331M\266\344o\261"
 483      7E81 E6FE 
 483      6AE7 1D41 
 483      94A8 D94D 
 483      B6E4 6FB1 
 484 0beb 716D 8B90 	 .ascii "qm\213\220\220\257m\264:-\005KI\347@\353k\366\343\213.\265\332"
 484      90AF 6DB4 
 484      3A2D 054B 
 484      49E7 40EB 
 484      6BF6 E38B 
 485 0c02 5FB2 78CE 	 .ascii "_\262x\316\016\312\220\361\336x\236\005\267\n\311s\375\307\027"
 485      0ECA 90F1 
 485      DE78 9E05 
 485      B70A C973 
 485      FDC7 17
 486 0c15 4EB2 514E 	 .ascii "N\262QN\255w\007l\220o\023\372{\302Fk\273P\253\323Fk\207P\353"
 486      AD77 076C 
 486      906F 13FA 
 486      7BC2 466B 
 486      BB50 ABD3 
 487 0c2e 139B C4DE 	 .ascii "\023\233\304\336)\324:d3\326.\241\326~\233\261\336\325\265\006"
 487      29D4 3A64 
 487      33D6 2EA1 
 487      D67E 9BB1 
 487      DED5 B506 
 488 0c42 A366 12A4 	 .ascii "\243f\022\244\205u7\006\250A\202y.\241\037]\354_M,&\331\230u"
 488      8575 3706 
 488      A841 8279 
 488      2EA1 1F5D 
 488      EC5F 4D2C 
 489 0c5a 8DED B81B 	 .ascii "\215\355\270\033\323n\265Y6\335\226$\273\275\301\355\206\036"
 489      D36E B559 
 489      36DD 9624 
 489      BBBD C1ED 
 489      861E 
 490 0c6c 28AC 8C84 	 .ascii "(\254\214\204\013\203\201\251\205\336W\303\205\201\220/X\351"
 490      0B83 81A9 
GAS LISTING  			page 38


 490      85DE 57C3 
 490      8581 902F 
 490      58E9 
 491 0c7e 970B 2351 	 .ascii "\227\013#Q\177 \024\035Z\212\262*\341s\370\023\236h\346\370\347"
 491      7F20 141D 
 491      5A8A B22A 
 491      E173 F813 
 491      9E68 E6F8 
 492 0c93 A70C 1E8B 	 .ascii "\247\f\036\213\\\344~\244'\232\027\222\243\036_yY\205W\355\005"
 492      5CE4 7EA4 
 492      279A 1792 
 492      A31E 5F79 
 492      5985 57ED 
 493 0ca8 3715 9591 	 .ascii "7\025\225\221\322\221\330\177'4\247\201\314\f\007\242\262'(\207"
 493      D291 D87F 
 493      2734 A781 
 493      CC0C 07A2 
 493      B227 2887 
 494 0cbc A645 4BF3 	 .ascii "\246EK\363\340\336\033\214\312a\317\314\362\260\337\345\365\373"
 494      E0DE 1B8C 
 494      CA61 CFCC 
 494      F2B0 DFE5 
 494      F5FB 
 495 0cce C372 24E2 	 .ascii "\303r$\342x\325\033\314\215\372*<\336\231%\225\301\241>m\254"
 495      78D5 1BCC 
 495      8DFA 2A3C 
 495      DE99 2595 
 495      C1A1 3E6D 
 496 0ce3 C747 C058 	 .ascii "\307G\300X\023\247\024?\363\370\b\\\236\251\rv\347x9::\022)\367"
 496      13A7 143F 
 496      F3F8 085C 
 496      9EA9 0D76 
 496      E778 393A 
 497 0cfb 05BC 51D9 	 .ascii "\005\274Q\331?\321\353\233.G\373M\251\360\303\335$\271\254<*"
 497      3FD1 EB9B 
 497      2E47 FB4D 
 497      A9F0 C3DD 
 497      24B9 AC3C 
 498 0d10 3F37 7A2C 	 .ascii "?7z,\366eL|a\342\343#\n\264\201\211\335R\331\353\227\303\331"
 498      F665 4C7C 
 498      61E2 E323 
 498      0AB4 8189 
 498      DD52 D9EB 
 499 0d27 30B8 1CF2 	 .ascii "0\270\034\362G@\\\023B\201\350\344\261\023\373"
 499      4740 5C13 
 499      4281 E8E4 
 499      B113 FB
 500 0d36 83BD A7C3 	 .string "\203\275\247\303\262<\266<\024\222}\321@y\31059\340\233\016o\262A\306zC\305\3209\2578\352\r\223\336/\022\203\375\236\016\204\002\221R\270\325\206\317\324<\313)\n\371Y\027\3673\336\220?(\023+\201\212hy\324\033\204>\371\223\344\031\225r$:6X\036\251\f\313\256\2422\025\201\213\020V^1\322M\211\033\376DN\240\302\033\256\220\243>\2403\2572\024\tL\013\311\376\301\276Ro8\237@\367\004\230?9Tej\260|*!\366\017`\261B\305$\ne8\020\232\006V]!p\2672\030t\225\204\006G*d\037\036>$\2510\315\347S\225~9t\344\320\021\306,\360\313%\240\232\031\t\374\0218\315,\223\313\"r\024\fEK\303\3453\235A\331[R0!B\330\032SYR\"\207\t\251\375\001S\204P\347\361\225\312\276\351\221\3122C\220KQ>x?I\366\311\201W\345q\336\250w"
 500      B23C B63C 
 500      1492 7DD1 
 500      4079 C835 
 500      39E0 9B0E 
 501 0e37 213C 1906 	 .string "!<\031\006\302\022\200\315\323\373\024\317\nei\\\r\177\"\343\271Y\020\350\234\242\311\204\220\212\240\327'g\025M\236\252\016\334\217<\232\352\215\3104\267\334\301r\2377XQ\036\216f\207\325\f!\315\254@E\244\2742\354\223\363"
 501      C212 80CD 
 501      D3FB 14CF 
 501      0A65 695C 
 501      0D7F 22E3 
GAS LISTING  			page 39


 502 0e80 902F 3968 	 .string "\220/9h\006\240\215\312\005\372\003\217\372 s\354\263/\024\027\215\313)*\236<z\314\263\023\212\237)\032\227K\036Mx~\274\347\305\321\023&\347\031oF\270\243\245\201\210\207\214\342\366C\270\r-\202\310\025\221gxB\225e.\210\023\371\244\240<e^_\277h\240L\366\200\327>\370+\207"
 502      06A0 8DCA 
 502      05FA 038F 
 502      FA20 73EC 
 502      B32F 1417 
 503 0ede 24E4 1079 	 .ascii "$\344\020y\346\n\313\02099\222E\\\213\316\252\220\263ICK;'\020"
 503      E60A CB10 
 503      3939 9245 
 503      5C8B CEAA 
 503      90B3 4943 
 504 0ef6 1471 8176 	 .ascii "\024q\201vI\270\274,\273hr\222i\306=\351\232\241\266\372\321"
 504      49B8 BC2C 
 504      BB68 7292 
 504      69C6 3DE9 
 504      9AA1 B6FA 
 505 0f0b F9C8 BAB8 	 .ascii "\371\310\272\270\350|\316\001\232\324)\034\n\r\313%\t\006\311"
 505      E87C CE01 
 505      9AD4 291C 
 505      0A0D CB25 
 505      0906 C9
 506 0f1e EB91 2197 	 .ascii "\353\221!\227\324a<\2627\034\234\365\177M\n\350\330"
 506      D461 3CB2 
 506      371C 9CF5 
 506      7F4D 0AE8 
 506      D8
 507               	 .text
 508               	 .section .gnu.lto_.symtab.bc17d6271b7db497,"",@progbits
 509 0000 5443 5073 	 .string "TCPs"
 509      00
 510 0005 00        	 .string ""
 511 0006 0400      	 .string "\004"
 512 0008 3C00      	 .string "<"
 513 000a 00        	 .string ""
 514 000b 00        	 .string ""
 515 000c 00        	 .string ""
 516 000d 00        	 .string ""
 517 000e 00        	 .string ""
 518 000f 00        	 .string ""
 519 0010 6501 00   	 .string "e\001"
 520 0013 00        	 .string ""
 521 0014 496E 6974 	 .string "InitTCP"
 521      5443 5000 
 522 001c 00        	 .string ""
 523 001d 00        	 .string ""
 524 001e 00        	 .string ""
 525 001f 00        	 .string ""
 526 0020 00        	 .string ""
 527 0021 00        	 .string ""
 528 0022 00        	 .string ""
 529 0023 00        	 .string ""
 530 0024 00        	 .string ""
 531 0025 00        	 .string ""
 532 0026 00        	 .string ""
 533 0027 E900      	 .string "\351"
 534 0029 00        	 .string ""
 535 002a 00        	 .string ""
 536 002b 4765 7446 	 .string "GetFreeConnection"
GAS LISTING  			page 40


 536      7265 6543 
 536      6F6E 6E65 
 536      6374 696F 
 536      6E00 
 537 003d 00        	 .string ""
 538 003e 00        	 .string ""
 539 003f 00        	 .string ""
 540 0040 00        	 .string ""
 541 0041 00        	 .string ""
 542 0042 00        	 .string ""
 543 0043 00        	 .string ""
 544 0044 00        	 .string ""
 545 0045 00        	 .string ""
 546 0046 00        	 .string ""
 547 0047 00        	 .string ""
 548 0048 EC00      	 .string "\354"
 549 004a 00        	 .string ""
 550 004b 00        	 .string ""
 551 004c 5469 636B 	 .string "TickTCP"
 551      5443 5000 
 552 0054 00        	 .string ""
 553 0055 00        	 .string ""
 554 0056 00        	 .string ""
 555 0057 00        	 .string ""
 556 0058 00        	 .string ""
 557 0059 00        	 .string ""
 558 005a 00        	 .string ""
 559 005b 00        	 .string ""
 560 005c 00        	 .string ""
 561 005d 00        	 .string ""
 562 005e 00        	 .string ""
 563 005f EF00      	 .string "\357"
 564 0061 00        	 .string ""
 565 0062 00        	 .string ""
 566 0063 5443 5043 	 .string "TCPCanSend"
 566      616E 5365 
 566      6E64 00
 567 006e 00        	 .string ""
 568 006f 00        	 .string ""
 569 0070 00        	 .string ""
 570 0071 00        	 .string ""
 571 0072 00        	 .string ""
 572 0073 00        	 .string ""
 573 0074 00        	 .string ""
 574 0075 00        	 .string ""
 575 0076 00        	 .string ""
 576 0077 00        	 .string ""
 577 0078 00        	 .string ""
 578 0079 F200      	 .string "\362"
 579 007b 00        	 .string ""
 580 007c 00        	 .string ""
 581 007d 5374 6172 	 .string "StartTCPWrite"
 581      7454 4350 
 581      5772 6974 
 581      6500 
 582 008b 00        	 .string ""
 583 008c 00        	 .string ""
GAS LISTING  			page 41


 584 008d 00        	 .string ""
 585 008e 00        	 .string ""
 586 008f 00        	 .string ""
 587 0090 00        	 .string ""
 588 0091 00        	 .string ""
 589 0092 00        	 .string ""
 590 0093 00        	 .string ""
 591 0094 00        	 .string ""
 592 0095 00        	 .string ""
 593 0096 F800      	 .string "\370"
 594 0098 00        	 .string ""
 595 0099 00        	 .string ""
 596 009a 4669 6E69 	 .string "FinishTCPPacket"
 596      7368 5443 
 596      5050 6163 
 596      6B65 7400 
 597 00aa 00        	 .string ""
 598 00ab 00        	 .string ""
 599 00ac 00        	 .string ""
 600 00ad 00        	 .string ""
 601 00ae 00        	 .string ""
 602 00af 00        	 .string ""
 603 00b0 00        	 .string ""
 604 00b1 00        	 .string ""
 605 00b2 00        	 .string ""
 606 00b3 00        	 .string ""
 607 00b4 00        	 .string ""
 608 00b5 FC00      	 .string "\374"
 609 00b7 00        	 .string ""
 610 00b8 00        	 .string ""
 611 00b9 456E 6454 	 .string "EndTCPWrite"
 611      4350 5772 
 611      6974 6500 
 612 00c5 00        	 .string ""
 613 00c6 00        	 .string ""
 614 00c7 00        	 .string ""
 615 00c8 00        	 .string ""
 616 00c9 00        	 .string ""
 617 00ca 00        	 .string ""
 618 00cb 00        	 .string ""
 619 00cc 00        	 .string ""
 620 00cd 00        	 .string ""
 621 00ce 00        	 .string ""
 622 00cf 00        	 .string ""
 623 00d0 0301 00   	 .string "\003\001"
 624 00d3 00        	 .string ""
 625 00d4 4861 6E64 	 .string "HandleTCP"
 625      6C65 5443 
 625      5000 
 626 00de 00        	 .string ""
 627 00df 00        	 .string ""
 628 00e0 00        	 .string ""
 629 00e1 00        	 .string ""
 630 00e2 00        	 .string ""
 631 00e3 00        	 .string ""
 632 00e4 00        	 .string ""
 633 00e5 00        	 .string ""
GAS LISTING  			page 42


 634 00e6 00        	 .string ""
 635 00e7 00        	 .string ""
 636 00e8 00        	 .string ""
 637 00e9 0701 00   	 .string "\007\001"
 638 00ec 00        	 .string ""
 639 00ed 5265 7175 	 .string "RequestClosure"
 639      6573 7443 
 639      6C6F 7375 
 639      7265 00
 640 00fc 00        	 .string ""
 641 00fd 00        	 .string ""
 642 00fe 00        	 .string ""
 643 00ff 00        	 .string ""
 644 0100 00        	 .string ""
 645 0101 00        	 .string ""
 646 0102 00        	 .string ""
 647 0103 00        	 .string ""
 648 0104 00        	 .string ""
 649 0105 00        	 .string ""
 650 0106 00        	 .string ""
 651 0107 0C01 00   	 .string "\f\001"
 652 010a 00        	 .string ""
 653 010b 456D 6974 	 .string "EmitTCP"
 653      5443 5000 
 654 0113 00        	 .string ""
 655 0114 00        	 .string ""
 656 0115 00        	 .string ""
 657 0116 00        	 .string ""
 658 0117 00        	 .string ""
 659 0118 00        	 .string ""
 660 0119 00        	 .string ""
 661 011a 00        	 .string ""
 662 011b 00        	 .string ""
 663 011c 00        	 .string ""
 664 011d 00        	 .string ""
 665 011e 1001 00   	 .string "\020\001"
 666 0121 00        	 .string ""
 667 0122 4554 7365 	 .string "ETsendplace"
 667      6E64 706C 
 667      6163 6500 
 668 012e 00        	 .string ""
 669 012f 0200      	 .string "\002"
 670 0131 00        	 .string ""
 671 0132 00        	 .string ""
 672 0133 00        	 .string ""
 673 0134 00        	 .string ""
 674 0135 00        	 .string ""
 675 0136 00        	 .string ""
 676 0137 00        	 .string ""
 677 0138 00        	 .string ""
 678 0139 5501 00   	 .string "U\001"
 679 013c 00        	 .string ""
 680 013d 4554 6275 	 .string "ETbuffer"
 680      6666 6572 
 680      00
 681 0146 00        	 .string ""
 682 0147 0200      	 .string "\002"
GAS LISTING  			page 43


 683 0149 00        	 .string ""
 684 014a 00        	 .string ""
 685 014b 00        	 .string ""
 686 014c 00        	 .string ""
 687 014d 00        	 .string ""
 688 014e 00        	 .string ""
 689 014f 00        	 .string ""
 690 0150 00        	 .string ""
 691 0151 5701 00   	 .string "W\001"
 692 0154 00        	 .string ""
 693 0155 7365 6E64 	 .string "sendbaseaddress"
 693      6261 7365 
 693      6164 6472 
 693      6573 7300 
 694 0165 00        	 .string ""
 695 0166 0200      	 .string "\002"
 696 0168 00        	 .string ""
 697 0169 00        	 .string ""
 698 016a 00        	 .string ""
 699 016b 00        	 .string ""
 700 016c 00        	 .string ""
 701 016d 00        	 .string ""
 702 016e 00        	 .string ""
 703 016f 00        	 .string ""
 704 0170 5B01 00   	 .string "[\001"
 705 0173 00        	 .string ""
 706 0174 6C6F 6361 	 .string "localport"
 706      6C70 6F72 
 706      7400 
 707 017e 00        	 .string ""
 708 017f 0200      	 .string "\002"
 709 0181 00        	 .string ""
 710 0182 00        	 .string ""
 711 0183 00        	 .string ""
 712 0184 00        	 .string ""
 713 0185 00        	 .string ""
 714 0186 00        	 .string ""
 715 0187 00        	 .string ""
 716 0188 00        	 .string ""
 717 0189 5D01 00   	 .string "]\001"
 718 018c 00        	 .string ""
 719 018d 7265 6D6F 	 .string "remoteport"
 719      7465 706F 
 719      7274 00
 720 0198 00        	 .string ""
 721 0199 0200      	 .string "\002"
 722 019b 00        	 .string ""
 723 019c 00        	 .string ""
 724 019d 00        	 .string ""
 725 019e 00        	 .string ""
 726 019f 00        	 .string ""
 727 01a0 00        	 .string ""
 728 01a1 00        	 .string ""
 729 01a2 00        	 .string ""
 730 01a3 5F01 00   	 .string "_\001"
 731 01a6 00        	 .string ""
 732 01a7 6970 736F 	 .string "ipsource"
GAS LISTING  			page 44


 732      7572 6365 
 732      00
 733 01b0 00        	 .string ""
 734 01b1 0200      	 .string "\002"
 735 01b3 00        	 .string ""
 736 01b4 00        	 .string ""
 737 01b5 00        	 .string ""
 738 01b6 00        	 .string ""
 739 01b7 00        	 .string ""
 740 01b8 00        	 .string ""
 741 01b9 00        	 .string ""
 742 01ba 00        	 .string ""
 743 01bb 6101 00   	 .string "a\001"
 744 01be 00        	 .string ""
 745 01bf 6D61 6366 	 .string "macfrom"
 745      726F 6D00 
 746 01c7 00        	 .string ""
 747 01c8 0200      	 .string "\002"
 748 01ca 00        	 .string ""
 749 01cb 00        	 .string ""
 750 01cc 00        	 .string ""
 751 01cd 00        	 .string ""
 752 01ce 00        	 .string ""
 753 01cf 00        	 .string ""
 754 01d0 00        	 .string ""
 755 01d1 00        	 .string ""
 756 01d2 9401 00   	 .string "\224\001"
 757 01d5 00        	 .string ""
 758 01d6 4D79 4D41 	 .string "MyMAC"
 758      4300 
 759 01dc 00        	 .string ""
 760 01dd 0200      	 .string "\002"
 761 01df 00        	 .string ""
 762 01e0 00        	 .string ""
 763 01e1 00        	 .string ""
 764 01e2 00        	 .string ""
 765 01e3 00        	 .string ""
 766 01e4 00        	 .string ""
 767 01e5 00        	 .string ""
 768 01e6 00        	 .string ""
 769 01e7 5301 00   	 .string "S\001"
 770 01ea 00        	 .string ""
 771 01eb 4554 6368 	 .string "ETchecksum"
 771      6563 6B73 
 771      756D 00
 772 01f6 00        	 .string ""
 773 01f7 0200      	 .string "\002"
 774 01f9 00        	 .string ""
 775 01fa 00        	 .string ""
 776 01fb 00        	 .string ""
 777 01fc 00        	 .string ""
 778 01fd 00        	 .string ""
 779 01fe 00        	 .string ""
 780 01ff 00        	 .string ""
 781 0200 00        	 .string ""
 782 0201 9601 00   	 .string "\226\001"
 783 0204 00        	 .string ""
GAS LISTING  			page 45


 784 0205 6574 5F70 	 .string "et_pop8"
 784      6F70 3800 
 785 020d 00        	 .string ""
 786 020e 0200      	 .string "\002"
 787 0210 00        	 .string ""
 788 0211 00        	 .string ""
 789 0212 00        	 .string ""
 790 0213 00        	 .string ""
 791 0214 00        	 .string ""
 792 0215 00        	 .string ""
 793 0216 00        	 .string ""
 794 0217 00        	 .string ""
 795 0218 1401 00   	 .string "\024\001"
 796 021b 00        	 .string ""
 797 021c 6574 5F70 	 .string "et_push16"
 797      7573 6831 
 797      3600 
 798 0226 00        	 .string ""
 799 0227 0200      	 .string "\002"
 800 0229 00        	 .string ""
 801 022a 00        	 .string ""
 802 022b 00        	 .string ""
 803 022c 00        	 .string ""
 804 022d 00        	 .string ""
 805 022e 00        	 .string ""
 806 022f 00        	 .string ""
 807 0230 00        	 .string ""
 808 0231 1701 00   	 .string "\027\001"
 809 0234 00        	 .string ""
 810 0235 7365 6E64 	 .string "send_ip_header"
 810      5F69 705F 
 810      6865 6164 
 810      6572 00
 811 0244 00        	 .string ""
 812 0245 0200      	 .string "\002"
 813 0247 00        	 .string ""
 814 0248 00        	 .string ""
 815 0249 00        	 .string ""
 816 024a 00        	 .string ""
 817 024b 00        	 .string ""
 818 024c 00        	 .string ""
 819 024d 00        	 .string ""
 820 024e 00        	 .string ""
 821 024f 1901 00   	 .string "\031\001"
 822 0252 00        	 .string ""
 823 0253 6574 5F70 	 .string "et_pushblob"
 823      7573 6862 
 823      6C6F 6200 
 824 025f 00        	 .string ""
 825 0260 0200      	 .string "\002"
 826 0262 00        	 .string ""
 827 0263 00        	 .string ""
 828 0264 00        	 .string ""
 829 0265 00        	 .string ""
 830 0266 00        	 .string ""
 831 0267 00        	 .string ""
 832 0268 00        	 .string ""
GAS LISTING  			page 46


 833 0269 00        	 .string ""
 834 026a 2301 00   	 .string "#\001"
 835 026d 00        	 .string ""
 836 026e 6574 5F78 	 .string "et_xmitpacket"
 836      6D69 7470 
 836      6163 6B65 
 836      7400 
 837 027c 00        	 .string ""
 838 027d 0200      	 .string "\002"
 839 027f 00        	 .string ""
 840 0280 00        	 .string ""
 841 0281 00        	 .string ""
 842 0282 00        	 .string ""
 843 0283 00        	 .string ""
 844 0284 00        	 .string ""
 845 0285 00        	 .string ""
 846 0286 00        	 .string ""
 847 0287 2A01 00   	 .string "*\001"
 848 028a 00        	 .string ""
 849 028b 4973 5365 	 .string "IsSendBufferFree"
 849      6E64 4275 
 849      6666 6572 
 849      4672 6565 
 849      00
 850 029c 00        	 .string ""
 851 029d 0200      	 .string "\002"
 852 029f 00        	 .string ""
 853 02a0 00        	 .string ""
 854 02a1 00        	 .string ""
 855 02a2 00        	 .string ""
 856 02a3 00        	 .string ""
 857 02a4 00        	 .string ""
 858 02a5 00        	 .string ""
 859 02a6 00        	 .string ""
 860 02a7 4201 00   	 .string "B\001"
 861 02aa 00        	 .string ""
 862 02ab 6574 5F73 	 .string "et_start_checksum"
 862      7461 7274 
 862      5F63 6865 
 862      636B 7375 
 862      6D00 
 863 02bd 00        	 .string ""
 864 02be 0200      	 .string "\002"
 865 02c0 00        	 .string ""
 866 02c1 00        	 .string ""
 867 02c2 00        	 .string ""
 868 02c3 00        	 .string ""
 869 02c4 00        	 .string ""
 870 02c5 00        	 .string ""
 871 02c6 00        	 .string ""
 872 02c7 00        	 .string ""
 873 02c8 4401 00   	 .string "D\001"
 874 02cb 00        	 .string ""
 875 02cc 5443 5052 	 .string "TCPReceiveData"
 875      6563 6569 
 875      7665 4461 
 875      7461 00
GAS LISTING  			page 47


 876 02db 00        	 .string ""
 877 02dc 0200      	 .string "\002"
 878 02de 00        	 .string ""
 879 02df 00        	 .string ""
 880 02e0 00        	 .string ""
 881 02e1 00        	 .string ""
 882 02e2 00        	 .string ""
 883 02e3 00        	 .string ""
 884 02e4 00        	 .string ""
 885 02e5 00        	 .string ""
 886 02e6 4601 00   	 .string "F\001"
 887 02e9 00        	 .string ""
 888 02ea 5443 5043 	 .string "TCPConnectionClosing"
 888      6F6E 6E65 
 888      6374 696F 
 888      6E43 6C6F 
 888      7369 6E67 
 889 02ff 00        	 .string ""
 890 0300 0200      	 .string "\002"
 891 0302 00        	 .string ""
 892 0303 00        	 .string ""
 893 0304 00        	 .string ""
 894 0305 00        	 .string ""
 895 0306 00        	 .string ""
 896 0307 00        	 .string ""
 897 0308 00        	 .string ""
 898 0309 00        	 .string ""
 899 030a 4B01 00   	 .string "K\001"
 900 030d 00        	 .string ""
 901 030e 5443 5052 	 .string "TCPReceiveSyn"
 901      6563 6569 
 901      7665 5379 
 901      6E00 
 902 031c 00        	 .string ""
 903 031d 0200      	 .string "\002"
 904 031f 00        	 .string ""
 905 0320 00        	 .string ""
 906 0321 00        	 .string ""
 907 0322 00        	 .string ""
 908 0323 00        	 .string ""
 909 0324 00        	 .string ""
 910 0325 00        	 .string ""
 911 0326 00        	 .string ""
 912 0327 4D01 00   	 .string "M\001"
 913 032a 00        	 .string ""
 914 032b 6574 5F70 	 .string "et_pop16"
 914      6F70 3136 
 914      00
 915 0334 00        	 .string ""
 916 0335 0200      	 .string "\002"
 917 0337 00        	 .string ""
 918 0338 00        	 .string ""
 919 0339 00        	 .string ""
 920 033a 00        	 .string ""
 921 033b 00        	 .string ""
 922 033c 00        	 .string ""
 923 033d 00        	 .string ""
GAS LISTING  			page 48


 924 033e 00        	 .string ""
 925 033f 5101 00   	 .string "Q\001"
 926 0342 00        	 .string ""
 927               	 .text
 928               	 .section .gnu.lto_.opts,"",@progbits
 929 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 929      6375 3D61 
 929      746D 6567 
 929      6133 3275 
 929      3227 2027 
 930               	 .text
 931               	 .cfi_sections .debug_frame
 933               	et_push8:
 934               	.LFB1:
 935               	 .file 1 "net_compat.h"
   1:net_compat.h  **** #ifndef _ENC424JCOMPAT_H
   2:net_compat.h  **** #define _ENC424JCOMPAT_H
   3:net_compat.h  **** 
   4:net_compat.h  **** //enc424j600 compat lib.
   5:net_compat.h  **** //We're using the IP library from AVRCraft... but we're using our own PHY+MAC
   6:net_compat.h  **** 
   7:net_compat.h  **** //TODO: Should probably use Timer1 (since we can't use Timer0)
   8:net_compat.h  **** //to make sure we send media detect pulses at the right points.
   9:net_compat.h  **** //Also, as a user, you cannot use the USI or Timer0
  10:net_compat.h  **** 
  11:net_compat.h  **** #include <stdint.h>
  12:net_compat.h  **** #include "eth_config.h"
  13:net_compat.h  **** 
  14:net_compat.h  **** void HandleUSB();
  15:net_compat.h  **** 
  16:net_compat.h  **** uint8_t IsSendBufferFree();
  17:net_compat.h  **** 
  18:net_compat.h  **** //You must define 'mymac'
  19:net_compat.h  **** extern unsigned char MyMAC[6];
  20:net_compat.h  **** extern unsigned char ETbuffer[ETBUFFERSIZE];
  21:net_compat.h  **** extern unsigned short ETsendplace;
  22:net_compat.h  **** //For telling where the current transaction started.
  23:net_compat.h  **** extern uint16_t sendbaseaddress;
  24:net_compat.h  **** extern unsigned short ETchecksum;
  25:net_compat.h  **** 
  26:net_compat.h  **** //return 0 if OK, otherwise nonzero.
  27:net_compat.h  **** int8_t et_init( const unsigned char * macaddy );
  28:net_compat.h  **** 
  29:net_compat.h  **** int8_t et_xmitpacket( uint16_t start, uint16_t len );
  30:net_compat.h  **** 
  31:net_compat.h  **** //This waits for 8ms, sends an autoneg notice, then waits for 8 more ms.
  32:net_compat.h  **** //Ordinarily this would if packets were processed and still ned processing, but
  33:net_compat.h  **** //that doesn't make sense for this driver.  Do not put this in a loop unto itself.
  34:net_compat.h  **** unsigned short et_recvpack();
  35:net_compat.h  **** 
  36:net_compat.h  **** //You have to write this! (Or the underlying IP core must)
  37:net_compat.h  **** void et_receivecallback( uint16_t packetlen );
  38:net_compat.h  **** 
  39:net_compat.h  **** //Finish up any reading. 							//CLOSURE
  40:net_compat.h  **** static inline void et_finish_callback_now() { }
  41:net_compat.h  **** 
  42:net_compat.h  **** //Raw, on-wire pops. (assuming already in read)
GAS LISTING  			page 49


  43:net_compat.h  **** void et_popblob( uint8_t * data, uint8_t len );
  44:net_compat.h  **** void et_dumpbytes( uint8_t len );
  45:net_compat.h  **** uint16_t et_pop16();
  46:net_compat.h  **** uint8_t et_pop8();
  47:net_compat.h  **** 
  48:net_compat.h  **** //Raw, on-wire push. (assuming already in write)
  49:net_compat.h  **** void et_pushpgmstr( const char * msg );
  50:net_compat.h  **** void et_pushstr( const char * msg );
  51:net_compat.h  **** void et_pushblob( const uint8_t * data, uint8_t len );
  52:net_compat.h  **** void et_pushpgmblob( const uint8_t * data, uint8_t len );
  53:net_compat.h  **** static inline void et_push8( uint8_t d ) { if (ETsendplace < ETBUFFERSIZE ) ETbuffer[ETsendplace++]
 936               	 .loc 1 53 0
 937               	 .cfi_startproc
 938               	.LVL0:
 939               	 
 940               	 
 941               	 
 942               	.L__stack_usage =0
 943               	 .loc 1 53 0
 944 0000 2091 0000 	 lds r18,ETsendplace
 945 0004 3091 0000 	 lds r19,ETsendplace+1
 946 0008 2F3F      	 cpi r18,-1
 947 000a 3105      	 cpc r19,__zero_reg__
 948 000c 01F0      	 breq .+2
 949 000e 00F4      	 brsh .L1
 950               	 .loc 1 53 0 is_stmt 0 discriminator 1
 951 0010 A901      	 movw r20,r18
 952 0012 4F5F      	 subi r20,-1
 953 0014 5F4F      	 sbci r21,-1
 954 0016 5093 0000 	 sts ETsendplace+1,r21
 955 001a 4093 0000 	 sts ETsendplace,r20
 956 001e F901      	 movw r30,r18
 957 0020 E050      	 subi r30,lo8(-(ETbuffer))
 958 0022 F040      	 sbci r31,hi8(-(ETbuffer))
 959 0024 8083      	 st Z,r24
 960               	.L1:
 961 0026 0895      	 ret
 962               	 .cfi_endproc
 963               	.LFE1:
 966               	PUSH32:
 967               	.LFB12:
 968               	 .file 2 "tcp_awful.c"
   1:tcp_awful.c   **** //Copyright 2012 <>< Charles Lohr, under the MIT-x11 or NewBSD license.  You choose.
   2:tcp_awful.c   **** //
   3:tcp_awful.c   **** 
   4:tcp_awful.c   **** #include "tcp_awful.h"
   5:tcp_awful.c   **** #include <stdint.h>
   6:tcp_awful.c   **** #include <string.h>
   7:tcp_awful.c   **** #include "avr_print.h"
   8:tcp_awful.c   **** 
   9:tcp_awful.c   **** #if !defined( MUTE_PRINTF ) && 0
  10:tcp_awful.c   **** #include <stdio.h>
  11:tcp_awful.c   **** #define MARK(x...) printf(x)
  12:tcp_awful.c   **** #else
  13:tcp_awful.c   **** #define MARK(x,...)
  14:tcp_awful.c   **** #endif
  15:tcp_awful.c   **** 
GAS LISTING  			page 50


  16:tcp_awful.c   **** #ifdef INCLUDE_TCP
  17:tcp_awful.c   **** 
  18:tcp_awful.c   **** struct tcpconnection TCPs[TCP_SOCKETS];
  19:tcp_awful.c   **** 
  20:tcp_awful.c   **** #define POP et_pop8()
  21:tcp_awful.c   **** #define POP16 et_pop16()
  22:tcp_awful.c   **** #define PUSH(x) et_push8(x)
  23:tcp_awful.c   **** #define PUSH16(x) et_push16(x)
  24:tcp_awful.c   **** #define PUSHB(x,s) et_pushblob(x,s)
  25:tcp_awful.c   **** 
  26:tcp_awful.c   **** //Consider putting these in the core stack.
  27:tcp_awful.c   **** static uint32_t POP32()
  28:tcp_awful.c   **** {
  29:tcp_awful.c   **** 	uint32_t ret = ((uint32_t)POP)<<24;
  30:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<16;
  31:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<8;
  32:tcp_awful.c   **** 	ret |= ((uint32_t)POP);
  33:tcp_awful.c   **** 	return ret;
  34:tcp_awful.c   **** }
  35:tcp_awful.c   **** 
  36:tcp_awful.c   **** static void PUSH32( uint32_t o )
  37:tcp_awful.c   **** {
 969               	 .loc 2 37 0 is_stmt 1
 970               	 .cfi_startproc
 971               	.LVL1:
 972 0028 1F93      	 push r17
 973               	.LCFI0:
 974               	 .cfi_def_cfa_offset 3
 975               	 .cfi_offset 17,-2
 976 002a CF93      	 push r28
 977               	.LCFI1:
 978               	 .cfi_def_cfa_offset 4
 979               	 .cfi_offset 28,-3
 980 002c DF93      	 push r29
 981               	.LCFI2:
 982               	 .cfi_def_cfa_offset 5
 983               	 .cfi_offset 29,-4
 984 002e 00D0      	 rcall .
 985               	.LCFI3:
 986               	 .cfi_def_cfa_offset 7
 987 0030 CDB7      	 in r28,__SP_L__
 988 0032 DEB7      	 in r29,__SP_H__
 989               	.LCFI4:
 990               	 .cfi_def_cfa_register 28
 991               	 
 992               	 
 993               	 
 994               	.L__stack_usage =5
 995 0034 182F      	 mov r17,r24
 996 0036 892F      	 mov r24,r25
  38:tcp_awful.c   **** 	PUSH( o >> 24 );
 997               	 .loc 2 38 0
 998 0038 6A83      	 std Y+2,r22
 999 003a 7983      	 std Y+1,r23
 1000 003c 0E94 0000 	 call et_push8
 1001               	.LVL2:
  39:tcp_awful.c   **** 	PUSH( ( o >> 16 ) & 0xFF );
GAS LISTING  			page 51


 1002               	 .loc 2 39 0
 1003 0040 812F      	 mov r24,r17
 1004 0042 0E94 0000 	 call et_push8
 1005               	.LVL3:
  40:tcp_awful.c   **** 	PUSH( ( o >> 8 ) & 0xFF );
 1006               	 .loc 2 40 0
 1007 0046 7981      	 ldd r23,Y+1
 1008 0048 872F      	 mov r24,r23
 1009 004a 0E94 0000 	 call et_push8
 1010               	.LVL4:
  41:tcp_awful.c   **** 	PUSH( ( o ) & 0xFF );
 1011               	 .loc 2 41 0
 1012 004e 6A81      	 ldd r22,Y+2
 1013 0050 862F      	 mov r24,r22
 1014               	 
  42:tcp_awful.c   **** }
 1015               	 .loc 2 42 0
 1016 0052 0F90      	 pop __tmp_reg__
 1017 0054 0F90      	 pop __tmp_reg__
 1018 0056 DF91      	 pop r29
 1019 0058 CF91      	 pop r28
 1020 005a 1F91      	 pop r17
  41:tcp_awful.c   **** 	PUSH( ( o ) & 0xFF );
 1021               	 .loc 2 41 0
 1022 005c 0C94 0000 	 jmp et_push8
 1023               	.LVL5:
 1024               	 .cfi_endproc
 1025               	.LFE12:
 1028               	POP32:
 1029               	.LFB11:
  28:tcp_awful.c   **** {
 1030               	 .loc 2 28 0
 1031               	 .cfi_startproc
 1032 0060 CF92      	 push r12
 1033               	.LCFI5:
 1034               	 .cfi_def_cfa_offset 3
 1035               	 .cfi_offset 12,-2
 1036 0062 DF92      	 push r13
 1037               	.LCFI6:
 1038               	 .cfi_def_cfa_offset 4
 1039               	 .cfi_offset 13,-3
 1040 0064 EF92      	 push r14
 1041               	.LCFI7:
 1042               	 .cfi_def_cfa_offset 5
 1043               	 .cfi_offset 14,-4
 1044 0066 FF92      	 push r15
 1045               	.LCFI8:
 1046               	 .cfi_def_cfa_offset 6
 1047               	 .cfi_offset 15,-5
 1048 0068 CF93      	 push r28
 1049               	.LCFI9:
 1050               	 .cfi_def_cfa_offset 7
 1051               	 .cfi_offset 28,-6
 1052 006a DF93      	 push r29
 1053               	.LCFI10:
 1054               	 .cfi_def_cfa_offset 8
 1055               	 .cfi_offset 29,-7
GAS LISTING  			page 52


 1056               	 
 1057               	 
 1058               	 
 1059               	.L__stack_usage =6
  29:tcp_awful.c   **** 	uint32_t ret = ((uint32_t)POP)<<24;
 1060               	 .loc 2 29 0
 1061 006c 0E94 0000 	 call et_pop8
 1062               	.LVL6:
 1063 0070 482F      	 mov r20,r24
 1064 0072 50E0      	 ldi r21,0
 1065 0074 60E0      	 ldi r22,0
 1066 0076 70E0      	 ldi r23,0
 1067 0078 F42E      	 mov r15,r20
 1068 007a EE24      	 clr r14
 1069 007c DD24      	 clr r13
 1070 007e CC24      	 clr r12
 1071               	.LVL7:
  30:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<16;
 1072               	 .loc 2 30 0
 1073 0080 0E94 0000 	 call et_pop8
 1074               	.LVL8:
 1075 0084 D82F      	 mov r29,r24
 1076               	.LVL9:
  31:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<8;
 1077               	 .loc 2 31 0
 1078 0086 0E94 0000 	 call et_pop8
 1079               	.LVL10:
 1080 008a C82F      	 mov r28,r24
 1081               	.LVL11:
  32:tcp_awful.c   **** 	ret |= ((uint32_t)POP);
 1082               	 .loc 2 32 0
 1083 008c 0E94 0000 	 call et_pop8
 1084               	.LVL12:
  30:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<16;
 1085               	 .loc 2 30 0
 1086 0090 B701      	 movw r22,r14
 1087 0092 A601      	 movw r20,r12
 1088 0094 6D2B      	 or r22,r29
  31:tcp_awful.c   **** 	ret |= ((uint32_t)POP)<<8;
 1089               	 .loc 2 31 0
 1090 0096 482B      	 or r20,r24
 1091               	.LVL13:
  32:tcp_awful.c   **** 	ret |= ((uint32_t)POP);
 1092               	 .loc 2 32 0
 1093 0098 5C2B      	 or r21,r28
  34:tcp_awful.c   **** }
 1094               	 .loc 2 34 0
 1095 009a CB01      	 movw r24,r22
 1096 009c BA01      	 movw r22,r20
 1097               	 
 1098 009e DF91      	 pop r29
 1099 00a0 CF91      	 pop r28
 1100               	.LVL14:
 1101 00a2 FF90      	 pop r15
 1102 00a4 EF90      	 pop r14
 1103 00a6 DF90      	 pop r13
 1104 00a8 CF90      	 pop r12
GAS LISTING  			page 53


 1105 00aa 0895      	 ret
 1106               	 .cfi_endproc
 1107               	.LFE11:
 1110               	write_tcp_header:
 1111               	.LFB14:
  43:tcp_awful.c   **** 
  44:tcp_awful.c   **** static int8_t GetAssociatedPacket()
  45:tcp_awful.c   **** {
  46:tcp_awful.c   **** 	int8_t ret, i;
  47:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[0];
  48:tcp_awful.c   **** 
  49:tcp_awful.c   **** 	for( i = 1; i < TCP_SOCKETS; i++ )
  50:tcp_awful.c   **** 	{
  51:tcp_awful.c   **** 		t++;
  52:tcp_awful.c   **** 		if( t->state && t->this_port == localport && t->dest_port == remoteport && t->dest_addr == *((uin
  53:tcp_awful.c   **** 		{
  54:tcp_awful.c   **** 			return i;
  55:tcp_awful.c   **** 		}
  56:tcp_awful.c   **** 	}
  57:tcp_awful.c   **** 	return 0;
  58:tcp_awful.c   **** }
  59:tcp_awful.c   **** 
  60:tcp_awful.c   **** static void write_tcp_header( uint8_t c )
  61:tcp_awful.c   **** {
 1112               	 .loc 2 61 0
 1113               	 .cfi_startproc
 1114               	.LVL15:
 1115 00ac CF93      	 push r28
 1116               	.LCFI11:
 1117               	 .cfi_def_cfa_offset 3
 1118               	 .cfi_offset 28,-2
 1119 00ae DF93      	 push r29
 1120               	.LCFI12:
 1121               	 .cfi_def_cfa_offset 4
 1122               	 .cfi_offset 29,-3
 1123               	 
 1124               	 
 1125               	 
 1126               	.L__stack_usage =2
  62:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[c];
 1127               	 .loc 2 62 0
 1128 00b0 90E0      	 ldi r25,0
 1129 00b2 6EE1      	 ldi r22,lo8(30)
 1130 00b4 70E0      	 ldi r23,0
 1131 00b6 0E94 0000 	 call __mulhi3
 1132               	.LVL16:
 1133 00ba EC01      	 movw r28,r24
 1134 00bc C050      	 subi r28,lo8(-(TCPs))
 1135 00be D040      	 sbci r29,hi8(-(TCPs))
 1136               	.LVL17:
 1137               	.LBB24:
 1138               	.LBB25:
  54:net_compat.h  **** static inline void et_pushzeroes( uint8_t nrzeroes ) { while( nrzeroes-- ) et_push8(0); }
  55:net_compat.h  **** void et_push16( uint16_t v );
  56:net_compat.h  **** 
  57:net_compat.h  **** //Start a new send.									//OPENING
  58:net_compat.h  **** static inline void et_startsend( uint16_t start ) { sendbaseaddress = ETsendplace = start; }
GAS LISTING  			page 54


 1139               	 .loc 1 58 0
 1140 00c0 1092 0000 	 sts ETsendplace+1,__zero_reg__
 1141 00c4 1092 0000 	 sts ETsendplace,__zero_reg__
 1142 00c8 1092 0000 	 sts sendbaseaddress+1,__zero_reg__
 1143 00cc 1092 0000 	 sts sendbaseaddress,__zero_reg__
 1144               	.LBE25:
 1145               	.LBE24:
  63:tcp_awful.c   **** 
  64:tcp_awful.c   **** 	et_startsend( 0 );
  65:tcp_awful.c   **** 
  66:tcp_awful.c   **** //We cannot send etherlink header otherwise we may misdirect our packets.
  67:tcp_awful.c   **** //	send_etherlink_header( 0x0800 );
  68:tcp_awful.c   **** 	PUSHB( t->remote_mac, 6 );
 1146               	 .loc 2 68 0
 1147 00d0 66E0      	 ldi r22,lo8(6)
 1148 00d2 CE01      	 movw r24,r28
 1149 00d4 4196      	 adiw r24,17
 1150 00d6 0E94 0000 	 call et_pushblob
 1151               	.LVL18:
  69:tcp_awful.c   **** 	PUSHB( MyMAC, 6 );
 1152               	 .loc 2 69 0
 1153 00da 66E0      	 ldi r22,lo8(6)
 1154 00dc 80E0      	 ldi r24,lo8(MyMAC)
 1155 00de 90E0      	 ldi r25,hi8(MyMAC)
 1156 00e0 0E94 0000 	 call et_pushblob
 1157               	.LVL19:
  70:tcp_awful.c   **** 
  71:tcp_awful.c   **** 	PUSH16( 0x0800 );
 1158               	 .loc 2 71 0
 1159 00e4 80E0      	 ldi r24,0
 1160 00e6 98E0      	 ldi r25,lo8(8)
 1161 00e8 0E94 0000 	 call et_push16
 1162               	.LVL20:
  72:tcp_awful.c   **** 
  73:tcp_awful.c   **** 	send_ip_header( 0x00, (const uint8_t *)&t->dest_addr, TCP_PROTOCOL_NUMBER ); //Size, etc. will be 
 1163               	 .loc 2 73 0
 1164 00ec BE01      	 movw r22,r28
 1165 00ee 6B5F      	 subi r22,-5
 1166 00f0 7F4F      	 sbci r23,-1
 1167 00f2 46E0      	 ldi r20,lo8(6)
 1168 00f4 80E0      	 ldi r24,0
 1169 00f6 90E0      	 ldi r25,0
 1170 00f8 0E94 0000 	 call send_ip_header
 1171               	.LVL21:
  74:tcp_awful.c   **** 	PUSH16( t->this_port );
 1172               	 .loc 2 74 0
 1173 00fc 8981      	 ldd r24,Y+1
 1174 00fe 9A81      	 ldd r25,Y+2
 1175 0100 0E94 0000 	 call et_push16
 1176               	.LVL22:
  75:tcp_awful.c   **** 	PUSH16( t->dest_port );
 1177               	 .loc 2 75 0
 1178 0104 8B81      	 ldd r24,Y+3
 1179 0106 9C81      	 ldd r25,Y+4
 1180 0108 0E94 0000 	 call et_push16
 1181               	.LVL23:
  76:tcp_awful.c   **** 	PUSH32( t->seq_num );
GAS LISTING  			page 55


 1182               	 .loc 2 76 0
 1183 010c 6985      	 ldd r22,Y+9
 1184 010e 7A85      	 ldd r23,Y+10
 1185 0110 8B85      	 ldd r24,Y+11
 1186 0112 9C85      	 ldd r25,Y+12
 1187 0114 0E94 0000 	 call PUSH32
 1188               	.LVL24:
  77:tcp_awful.c   **** //	PUSH32( (t->sendtype&ACKBIT)?t->ack_num:0 );
  78:tcp_awful.c   **** 	PUSH32( t->ack_num );
 1189               	 .loc 2 78 0
 1190 0118 6D85      	 ldd r22,Y+13
 1191 011a 7E85      	 ldd r23,Y+14
 1192 011c 8F85      	 ldd r24,Y+15
 1193 011e 9889      	 ldd r25,Y+16
 1194 0120 0E94 0000 	 call PUSH32
 1195               	.LVL25:
  79:tcp_awful.c   **** 	PUSH( (TCP_HEADER_LENGTH/4)<<4 ); //Data offset, reserved, NS flags all 0
 1196               	 .loc 2 79 0
 1197 0124 80E5      	 ldi r24,lo8(80)
 1198 0126 0E94 0000 	 call et_push8
 1199               	.LVL26:
  80:tcp_awful.c   **** 
  81:tcp_awful.c   **** 	PUSH( t->sendtype );
 1200               	 .loc 2 81 0
 1201 012a 8B8D      	 ldd r24,Y+27
 1202 012c 0E94 0000 	 call et_push8
 1203               	.LVL27:
  82:tcp_awful.c   **** 
  83:tcp_awful.c   **** //	PUSH16( (MAX_FRAMELEN-52) ); //window
  84:tcp_awful.c   **** 	PUSH16( 2048 ); //window
 1204               	 .loc 2 84 0
 1205 0130 80E0      	 ldi r24,0
 1206 0132 98E0      	 ldi r25,lo8(8)
 1207 0134 0E94 0000 	 call et_push16
 1208               	.LVL28:
  85:tcp_awful.c   **** //	PUSH16( (8192) );
  86:tcp_awful.c   **** 
  87:tcp_awful.c   **** 	PUSH16( 0x0000 ); //checksum
 1209               	 .loc 2 87 0
 1210 0138 80E0      	 ldi r24,0
 1211 013a 90E0      	 ldi r25,0
 1212 013c 0E94 0000 	 call et_push16
 1213               	.LVL29:
  88:tcp_awful.c   **** 
  89:tcp_awful.c   **** 	PUSH16( 0x0000 ); //Urgent (no)
 1214               	 .loc 2 89 0
 1215 0140 80E0      	 ldi r24,0
 1216 0142 90E0      	 ldi r25,0
 1217               	 
  90:tcp_awful.c   **** }
 1218               	 .loc 2 90 0
 1219 0144 DF91      	 pop r29
 1220 0146 CF91      	 pop r28
 1221               	.LVL30:
  89:tcp_awful.c   **** 	PUSH16( 0x0000 ); //Urgent (no)
 1222               	 .loc 2 89 0
 1223 0148 0C94 0000 	 jmp et_push16
GAS LISTING  			page 56


 1224               	.LVL31:
 1225               	 .cfi_endproc
 1226               	.LFE14:
 1228               	.global InitTCP
 1230               	InitTCP:
 1231               	.LFB16:
  91:tcp_awful.c   **** 
  92:tcp_awful.c   **** static void UpdateRemoteMAC( uint8_t * c )
  93:tcp_awful.c   **** {
  94:tcp_awful.c   **** 	c[0] = macfrom[0];
  95:tcp_awful.c   **** 	c[1] = macfrom[1];
  96:tcp_awful.c   **** 	c[2] = macfrom[2];
  97:tcp_awful.c   **** 	c[3] = macfrom[3];
  98:tcp_awful.c   **** 	c[4] = macfrom[4];
  99:tcp_awful.c   **** 	c[5] = macfrom[5];
 100:tcp_awful.c   **** }
 101:tcp_awful.c   **** 
 102:tcp_awful.c   **** //////////////////////////EXTERNAL CALLABLE FUNCTIONS//////////////////////////
 103:tcp_awful.c   **** 
 104:tcp_awful.c   **** void InitTCP()
 105:tcp_awful.c   **** {
 1232               	 .loc 2 105 0
 1233               	 .cfi_startproc
 1234               	 
 1235               	 
 1236               	 
 1237               	.L__stack_usage =0
 1238               	.LVL32:
 1239               	.LBB26:
 106:tcp_awful.c   **** 	uint8_t i;
 107:tcp_awful.c   **** 	for( i = 0; i < TCP_SOCKETS; i++ )
 108:tcp_awful.c   **** 	{
 109:tcp_awful.c   **** 		struct tcpconnection * t = &TCPs[i];
 110:tcp_awful.c   **** 		t->state = 0;
 1240               	 .loc 2 110 0
 1241 014c E0E0      	 ldi r30,lo8(TCPs)
 1242 014e F0E0      	 ldi r31,hi8(TCPs)
 1243 0150 8081      	 ld r24,Z
 1244 0152 887F      	 andi r24,lo8(-8)
 1245 0154 8083      	 st Z,r24
 1246               	.LVL33:
 1247 0156 E0E0      	 ldi r30,lo8(TCPs+30)
 1248 0158 F0E0      	 ldi r31,hi8(TCPs+30)
 1249               	.LVL34:
 1250 015a 8081      	 ld r24,Z
 1251 015c 887F      	 andi r24,lo8(-8)
 1252 015e 8083      	 st Z,r24
 1253               	.LVL35:
 1254 0160 0895      	 ret
 1255               	.LBE26:
 1256               	 .cfi_endproc
 1257               	.LFE16:
 1259               	.global GetFreeConnection
 1261               	GetFreeConnection:
 1262               	.LFB18:
 111:tcp_awful.c   **** 	}
 112:tcp_awful.c   **** }
GAS LISTING  			page 57


 113:tcp_awful.c   **** 
 114:tcp_awful.c   **** 
 115:tcp_awful.c   **** void HandleTCP(uint16_t iptotallen)
 116:tcp_awful.c   **** {
 117:tcp_awful.c   **** 	// ipsource is a global
 118:tcp_awful.c   **** 	int rsck = GetAssociatedPacket();
 119:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[rsck];
 120:tcp_awful.c   **** 
 121:tcp_awful.c   **** 	uint32_t sequence_num = POP32();
 122:tcp_awful.c   **** 	uint32_t ack_num = POP32();
 123:tcp_awful.c   **** 
 124:tcp_awful.c   **** 	uint8_t hlen = (POP>>2) & 0xFC;
 125:tcp_awful.c   **** 	uint8_t flags = POP;
 126:tcp_awful.c   **** 	uint16_t window_size = POP16;
 127:tcp_awful.c   **** 
 128:tcp_awful.c   **** 	POP16;  //Checksum
 129:tcp_awful.c   **** 	POP16;  //Urgent PTR
 130:tcp_awful.c   **** 
 131:tcp_awful.c   **** 	iptotallen -= hlen;
 132:tcp_awful.c   **** 
 133:tcp_awful.c   **** 	//Clear out rest of header
 134:tcp_awful.c   **** 	hlen -= 20;
 135:tcp_awful.c   **** 	while( hlen-- )
 136:tcp_awful.c   **** 		POP;
 137:tcp_awful.c   **** 
 138:tcp_awful.c   **** #ifdef TCP_HAS_SERVER
 139:tcp_awful.c   **** 	if( flags & SYNBIT )	//SYN
 140:tcp_awful.c   **** 	{
 141:tcp_awful.c   **** 		struct tcpconnection * t;
 142:tcp_awful.c   **** 		int8_t rsck = TCPReceiveSyn( localport );
 143:tcp_awful.c   **** 
 144:tcp_awful.c   **** 		if( rsck == 0 ) goto reset_conn0;
 145:tcp_awful.c   **** 		t = &TCPs[rsck];
 146:tcp_awful.c   **** 
 147:tcp_awful.c   **** 		UpdateRemoteMAC( t->remote_mac );
 148:tcp_awful.c   **** 
 149:tcp_awful.c   **** 		t->this_port = localport;
 150:tcp_awful.c   **** 		t->dest_port = remoteport;
 151:tcp_awful.c   **** 		t->dest_addr = *((uint32_t*)ipsource);
 152:tcp_awful.c   **** 		t->ack_num = sequence_num + 1;
 153:tcp_awful.c   **** 		t->seq_num = 0xAAAAAAAA; //should be random?
 154:tcp_awful.c   **** 		t->state = ESTABLISHED;
 155:tcp_awful.c   **** 		t->time_since_sent = 0;
 156:tcp_awful.c   **** 		t->idletime = 0;
 157:tcp_awful.c   **** 
 158:tcp_awful.c   **** 		//Don't forget to send a syn,ack back to the host.
 159:tcp_awful.c   **** 
 160:tcp_awful.c   **** 		et_finish_callback_now();
 161:tcp_awful.c   **** 
 162:tcp_awful.c   **** 		t->sendtype = SYNBIT | ACKBIT; //SYN+ACK
 163:tcp_awful.c   **** 		StartTCPWrite( rsck );
 164:tcp_awful.c   **** 
 165:tcp_awful.c   **** 		t->seq_num++;
 166:tcp_awful.c   **** //		t->seq_num = t->seq_num;
 167:tcp_awful.c   **** 
 168:tcp_awful.c   **** 		//The syn overrides everything, so we can return.
 169:tcp_awful.c   **** 
GAS LISTING  			page 58


 170:tcp_awful.c   **** 		MARK( "__syn %d\n", rsck);
 171:tcp_awful.c   **** 		goto end_and_emit;
 172:tcp_awful.c   **** 	}
 173:tcp_awful.c   **** #endif
 174:tcp_awful.c   **** 
 175:tcp_awful.c   **** 	UpdateRemoteMAC( t->remote_mac );
 176:tcp_awful.c   **** 
 177:tcp_awful.c   **** 	//If we don't have a real connection, we're going to have to bail here.
 178:tcp_awful.c   **** 	if( !rsck )
 179:tcp_awful.c   **** 	{
 180:tcp_awful.c   **** 		//XXX: Tricky: Do we have to reject spurious ACK packets?  Perhaps they are from keepalive
 181:tcp_awful.c   **** 		if( flags & ( PSHBIT | SYNBIT | FINBIT ) )
 182:tcp_awful.c   **** 		{
 183:tcp_awful.c   **** 			MARK( "__reset0" );
 184:tcp_awful.c   **** 			goto reset_conn0;
 185:tcp_awful.c   **** 		}
 186:tcp_awful.c   **** 		else
 187:tcp_awful.c   **** 		{
 188:tcp_awful.c   **** 			et_finish_callback_now();
 189:tcp_awful.c   **** 			return;
 190:tcp_awful.c   **** 		}
 191:tcp_awful.c   **** 	}
 192:tcp_awful.c   **** 
 193:tcp_awful.c   **** 	if( flags & RSTBIT)
 194:tcp_awful.c   **** 	{
 195:tcp_awful.c   **** 		TCPConnectionClosing( rsck );
 196:tcp_awful.c   **** 		t->sendtype = RSTBIT | ACKBIT;
 197:tcp_awful.c   **** 		t->state = 0;
 198:tcp_awful.c   **** 		MARK( "__rstbit %d\n", rsck );
 199:tcp_awful.c   **** 		goto send_early;
 200:tcp_awful.c   **** 	}
 201:tcp_awful.c   **** 
 202:tcp_awful.c   **** 	//We have an associated connection on T.
 203:tcp_awful.c   **** 
 204:tcp_awful.c   **** 	if( flags & ACKBIT ) //ACK
 205:tcp_awful.c   **** 	{
 206:tcp_awful.c   **** 		//t->sendlength - 34 - 20
 207:tcp_awful.c   **** 		uint16_t payloadlen = t->sendlength - 34 - 20;
 208:tcp_awful.c   **** 		uint32_t nextseq = t->seq_num;
 209:tcp_awful.c   **** 		if( payloadlen == 0)
 210:tcp_awful.c   **** 			nextseq ++;               //SEQ NUM
 211:tcp_awful.c   **** 		else
 212:tcp_awful.c   **** 			nextseq += payloadlen;   //SEQ NUM
 213:tcp_awful.c   **** 
 214:tcp_awful.c   **** 		int16_t diff = ack_num - nextseq;// + iptotallen; // I don't know about this part)
 215:tcp_awful.c   **** //		printf( "%d / %d\n", ack_num, t->seq_num );
 216:tcp_awful.c   **** 
 217:tcp_awful.c   **** 		//Lost a packet...
 218:tcp_awful.c   **** 		if( diff < 0 )
 219:tcp_awful.c   **** 		{
 220:tcp_awful.c   **** 			MARK( "__badack %d", rsck );
 221:tcp_awful.c   **** 		}
 222:tcp_awful.c   **** 		//XXX TODO THIS IS PROBABLY WRONG  (was <=, meaning it could throw away packets)
 223:tcp_awful.c   **** 		else if( diff == 0 )
 224:tcp_awful.c   **** 		{
 225:tcp_awful.c   **** 			//t->seq_num = ack_num; //SEQ_NUM  This seems more like a bandaid.
 226:tcp_awful.c   **** 			//The above line seems to be useful for bandaiding errors, when doing a more complete check, unc
GAS LISTING  			page 59


 227:tcp_awful.c   **** 			t->idletime = 0;
 228:tcp_awful.c   **** 			t->time_since_sent = 0;
 229:tcp_awful.c   **** 
 230:tcp_awful.c   **** 			t->seq_num = nextseq;
 231:tcp_awful.c   **** 			//t->seq_num = t->seq_num;
 232:tcp_awful.c   **** //			MARK( "__goodack" );
 233:tcp_awful.c   **** 		}
 234:tcp_awful.c   **** 	}
 235:tcp_awful.c   **** 
 236:tcp_awful.c   **** 	if( flags & FINBIT )
 237:tcp_awful.c   **** 	{
 238:tcp_awful.c   **** 		if( t->state == CLOSING_WAIT )
 239:tcp_awful.c   **** 		{
 240:tcp_awful.c   **** 			t->sendtype = ACKBIT;
 241:tcp_awful.c   **** 			t->ack_num = sequence_num+1;
 242:tcp_awful.c   **** 			t->state = 0;
 243:tcp_awful.c   **** 			MARK( "__clodone %d", rsck );
 244:tcp_awful.c   **** 			goto send_early;
 245:tcp_awful.c   **** 		}
 246:tcp_awful.c   **** 		else
 247:tcp_awful.c   **** 		{
 248:tcp_awful.c   **** 			//XXX TODO Handle FIN correctly.
 249:tcp_awful.c   **** 			t->ack_num++;              //SEQ NUM
 250:tcp_awful.c   **** 			t->sendtype = ACKBIT | FINBIT;
 251:tcp_awful.c   **** 			t->state = CLOSING_WAIT;
 252:tcp_awful.c   **** 			TCPConnectionClosing( rsck );
 253:tcp_awful.c   **** 			MARK( "__finbit %d\n", rsck );
 254:tcp_awful.c   **** 			goto send_early;
 255:tcp_awful.c   **** 		}
 256:tcp_awful.c   **** 	} else if( t->state == CLOSING_WAIT )
 257:tcp_awful.c   **** 	{
 258:tcp_awful.c   **** 		t->state = 0;
 259:tcp_awful.c   **** 		goto send_early;
 260:tcp_awful.c   **** 	}
 261:tcp_awful.c   **** 
 262:tcp_awful.c   **** 
 263:tcp_awful.c   **** 
 264:tcp_awful.c   **** 
 265:tcp_awful.c   **** 	//XXX: TODO: Consider if time_since_sent is still set...
 266:tcp_awful.c   **** 	//This is because if we have a packet that was lost, we can't plough over it with an ack.
 267:tcp_awful.c   **** 	//If we do, the packet will be lost, and we will be out-of-sync.
 268:tcp_awful.c   **** 
 269:tcp_awful.c   **** 	//TODO: How do we handle PDU's?  They are sent across multiple packets.  Should we supress ACKs un
 270:tcp_awful.c   **** 	//if( flags & PSHBIT ) //PSH 
 271:tcp_awful.c   **** 	if( iptotallen )
 272:tcp_awful.c   **** 	{
 273:tcp_awful.c   **** 		if( t->ack_num == sequence_num )
 274:tcp_awful.c   **** 		{
 275:tcp_awful.c   **** 			//t->ack_num = sequence_num;   //XXX TODO remove this?
 276:tcp_awful.c   **** 			if( iptotallen > 0 )
 277:tcp_awful.c   **** 			{
 278:tcp_awful.c   **** 				t->ack_num += iptotallen;
 279:tcp_awful.c   **** 			}
 280:tcp_awful.c   **** 			else
 281:tcp_awful.c   **** 			{
 282:tcp_awful.c   **** 				t->ack_num++; //Is this needed?
 283:tcp_awful.c   **** 			}
GAS LISTING  			page 60


 284:tcp_awful.c   **** 
 285:tcp_awful.c   **** 			if( !TCPReceiveData( rsck, iptotallen ) )
 286:tcp_awful.c   **** 			{
 287:tcp_awful.c   **** 				if( t->time_since_sent )
 288:tcp_awful.c   **** 				{
 289:tcp_awful.c   **** 					//hacky, we need to send an ack, but we can't overwrite the existing packet.
 290:tcp_awful.c   **** 					TCPs[0].seq_num = t->seq_num;//t->seq_num;
 291:tcp_awful.c   **** 					TCPs[0].ack_num = t->ack_num;
 292:tcp_awful.c   **** 					TCPs[0].sendtype = ACKBIT;
 293:tcp_awful.c   **** 					rsck = 0;
 294:tcp_awful.c   **** 					goto send_early;
 295:tcp_awful.c   **** 				}
 296:tcp_awful.c   **** 				else
 297:tcp_awful.c   **** 				{
 298:tcp_awful.c   **** 					t->sendtype = ACKBIT;
 299:tcp_awful.c   **** 					goto send_early;
 300:tcp_awful.c   **** 				}
 301:tcp_awful.c   **** 			}
 302:tcp_awful.c   **** 			else
 303:tcp_awful.c   **** 			{
 304:tcp_awful.c   **** 				//Do nothing
 305:tcp_awful.c   **** 			}
 306:tcp_awful.c   **** 		}
 307:tcp_awful.c   **** 		else
 308:tcp_awful.c   **** 		{
 309:tcp_awful.c   **** 			//Otherwise, discard packet.
 310:tcp_awful.c   **** 		}
 311:tcp_awful.c   **** 	}
 312:tcp_awful.c   **** 
 313:tcp_awful.c   **** 	et_finish_callback_now();
 314:tcp_awful.c   **** 	return;
 315:tcp_awful.c   **** 
 316:tcp_awful.c   **** reset_conn0:
 317:tcp_awful.c   **** 	rsck = 0;
 318:tcp_awful.c   **** 	TCPs[0].ack_num = sequence_num;
 319:tcp_awful.c   **** 	TCPs[0].seq_num = ack_num;
 320:tcp_awful.c   **** 	TCPs[0].sendtype = RSTBIT | FINBIT | ACKBIT;
 321:tcp_awful.c   **** 	TCPs[0].state = 0;
 322:tcp_awful.c   **** 
 323:tcp_awful.c   **** send_early: //This requires a RST to be sent back.
 324:tcp_awful.c   **** 	et_finish_callback_now();
 325:tcp_awful.c   **** 
 326:tcp_awful.c   **** 	if( rsck == 0)
 327:tcp_awful.c   **** 	{
 328:tcp_awful.c   **** 		TCPs[0].dest_addr = *((uint32_t*)ipsource);
 329:tcp_awful.c   **** 		TCPs[0].dest_port = remoteport;
 330:tcp_awful.c   **** 		TCPs[0].this_port = localport;
 331:tcp_awful.c   **** 	}
 332:tcp_awful.c   **** 	write_tcp_header( rsck );
 333:tcp_awful.c   **** end_and_emit:
 334:tcp_awful.c   **** 	EndTCPWrite( rsck );
 335:tcp_awful.c   **** 	//EmitTCP( rsck );
 336:tcp_awful.c   **** }
 337:tcp_awful.c   **** 
 338:tcp_awful.c   **** int8_t GetFreeConnection()
 339:tcp_awful.c   **** {
 1263               	 .loc 2 339 0
GAS LISTING  			page 61


 1264               	 .cfi_startproc
 1265               	 
 1266               	 
 1267               	 
 1268               	.L__stack_usage =0
 1269               	.LVL36:
 1270               	.LBB27:
 340:tcp_awful.c   **** 	uint8_t i;
 341:tcp_awful.c   **** 	for( i = 1; i < TCP_SOCKETS; i++ )
 342:tcp_awful.c   **** 	{
 343:tcp_awful.c   **** 		struct tcpconnection * t = &TCPs[i];
 344:tcp_awful.c   **** 		if( !t->state )
 1271               	 .loc 2 344 0
 1272 0162 8091 0000 	 lds r24,TCPs+30
 1273 0166 8770      	 andi r24,lo8(7)
 1274 0168 01F4      	 brne .L10
 345:tcp_awful.c   **** 		{
 346:tcp_awful.c   **** 			memset( t, 0, sizeof( struct tcpconnection ) );
 1275               	 .loc 2 346 0
 1276 016a 8EE1      	 ldi r24,lo8(30)
 1277 016c E0E0      	 ldi r30,lo8(TCPs+30)
 1278 016e F0E0      	 ldi r31,hi8(TCPs+30)
 1279               	.LVL37:
 1280 0170 DF01      	 movw r26,r30
 1281               	 0:
 1282 0172 1D92      	 st X+,__zero_reg__
 1283 0174 8A95      	 dec r24
 1284 0176 01F4      	 brne 0b
 347:tcp_awful.c   **** 			return i;
 1285               	 .loc 2 347 0
 1286 0178 81E0      	 ldi r24,lo8(1)
 1287 017a 0895      	 ret
 1288               	.LVL38:
 1289               	.L10:
 1290               	.LBE27:
 348:tcp_awful.c   **** 		}
 349:tcp_awful.c   **** 	}
 350:tcp_awful.c   **** 	return 0;
 1291               	 .loc 2 350 0
 1292 017c 80E0      	 ldi r24,0
 351:tcp_awful.c   **** }
 1293               	 .loc 2 351 0
 1294 017e 0895      	 ret
 1295               	 .cfi_endproc
 1296               	.LFE18:
 1298               	.global TickTCP
 1300               	TickTCP:
 1301               	.LFB19:
 352:tcp_awful.c   **** 
 353:tcp_awful.c   **** void TickTCP()
 354:tcp_awful.c   **** {
 1302               	 .loc 2 354 0
 1303               	 .cfi_startproc
 1304               	 
 1305               	 
 1306               	 
 1307               	.L__stack_usage =0
GAS LISTING  			page 62


 1308               	.LVL39:
 1309 0180 E0E0      	 ldi r30,lo8(TCPs)
 1310 0182 F0E0      	 ldi r31,hi8(TCPs)
 1311               	 .loc 2 354 0
 1312 0184 80E0      	 ldi r24,0
 1313 0186 90E0      	 ldi r25,0
 1314               	.LVL40:
 1315               	.L16:
 1316               	.LBB28:
 355:tcp_awful.c   **** 	uint8_t i;
 356:tcp_awful.c   **** 	for( i = 0; i < TCP_SOCKETS; i++ )
 357:tcp_awful.c   **** 	{
 358:tcp_awful.c   **** 		struct tcpconnection * t = &TCPs[i];
 359:tcp_awful.c   **** 
 360:tcp_awful.c   **** 
 361:tcp_awful.c   **** 		if( !t->state )
 1317               	 .loc 2 361 0
 1318 0188 2081      	 ld r18,Z
 1319 018a 2770      	 andi r18,lo8(7)
 1320 018c 01F0      	 breq .L13
 362:tcp_awful.c   **** 			continue;
 363:tcp_awful.c   **** 
 364:tcp_awful.c   **** 		t->idletime++;
 1321               	 .loc 2 364 0
 1322 018e 208D      	 ldd r18,Z+24
 1323 0190 318D      	 ldd r19,Z+25
 1324 0192 2F5F      	 subi r18,-1
 1325 0194 3F4F      	 sbci r19,-1
 1326 0196 318F      	 std Z+25,r19
 1327 0198 208F      	 std Z+24,r18
 1328 019a DC01      	 movw r26,r24
 1329 019c A050      	 subi r26,lo8(-(TCPs))
 1330 019e B040      	 sbci r27,hi8(-(TCPs))
 365:tcp_awful.c   **** 
 366:tcp_awful.c   **** 		//XXX: TODO: Handle timeout
 367:tcp_awful.c   **** 
 368:tcp_awful.c   **** 		if( !t->time_since_sent )
 1331               	 .loc 2 368 0
 1332 01a0 5796      	 adiw r26,23
 1333 01a2 2C91      	 ld r18,X
 1334 01a4 5797      	 sbiw r26,23
 1335 01a6 2223      	 tst r18
 1336 01a8 01F0      	 breq .L13
 369:tcp_awful.c   **** 			continue;
 370:tcp_awful.c   **** 
 371:tcp_awful.c   **** 		t->time_since_sent++;
 1337               	 .loc 2 371 0
 1338 01aa 2F5F      	 subi r18,lo8(-(1))
 1339 01ac 5796      	 adiw r26,23
 1340 01ae 2C93      	 st X,r18
 1341 01b0 5797      	 sbiw r26,23
 372:tcp_awful.c   **** 
 373:tcp_awful.c   **** 		//Drop connections like a rock.  No resend.
 374:tcp_awful.c   **** 		if( t->time_since_sent > TCP_TICKS_BEFORE_DEAD )
 1342               	 .loc 2 374 0
 1343 01b2 2B30      	 cpi r18,lo8(11)
 1344 01b4 00F0      	 brlo .L13
GAS LISTING  			page 63


 375:tcp_awful.c   **** 		{
 376:tcp_awful.c   **** //			sendstr( "X" );
 377:tcp_awful.c   **** 			sendchr( 'T' );
 378:tcp_awful.c   **** 			sendchr( 'X' );
 379:tcp_awful.c   **** 			t->time_since_sent = 0;
 1345               	 .loc 2 379 0
 1346 01b6 5796      	 adiw r26,23
 1347 01b8 1C92      	 st X,__zero_reg__
 1348               	.L13:
 1349 01ba 7E96      	 adiw r30,30
 1350               	.LVL41:
 1351 01bc 4E96      	 adiw r24,30
 1352               	.LBE28:
 356:tcp_awful.c   **** 	for( i = 0; i < TCP_SOCKETS; i++ )
 1353               	 .loc 2 356 0
 1354 01be 8C33      	 cpi r24,60
 1355 01c0 9105      	 cpc r25,__zero_reg__
 1356 01c2 01F4      	 brne .L16
 1357               	 
 380:tcp_awful.c   **** //			t->state = 0;
 381:tcp_awful.c   **** 			continue;
 382:tcp_awful.c   **** 		}
 383:tcp_awful.c   **** /*
 384:tcp_awful.c   **** 		{
 385:tcp_awful.c   **** 			if( t->state == CLOSING_WAIT )
 386:tcp_awful.c   **** 			{
 387:tcp_awful.c   **** 				MARK( "__Closeout %d\n", i );
 388:tcp_awful.c   **** 				t->state = 0;
 389:tcp_awful.c   **** 				continue;
 390:tcp_awful.c   **** 			}
 391:tcp_awful.c   **** 			et_xmitpacket( t->sendptr, t->sendlength );
 392:tcp_awful.c   **** 
 393:tcp_awful.c   **** 			t->time_since_sent = 1;
 394:tcp_awful.c   **** 			if( t->retries++ > TCP_MAX_RETRIES )
 395:tcp_awful.c   **** 			{
 396:tcp_awful.c   **** 				MARK( "__rexmit %d\n", i );
 397:tcp_awful.c   **** 				TCPConnectionClosing( i );
 398:tcp_awful.c   **** 				t->state = 0;
 399:tcp_awful.c   **** 			}
 400:tcp_awful.c   **** 		}
 401:tcp_awful.c   **** */
 402:tcp_awful.c   **** 	}
 403:tcp_awful.c   **** }
 1358               	 .loc 2 403 0
 1359 01c4 0895      	 ret
 1360               	 .cfi_endproc
 1361               	.LFE19:
 1363               	.global TCPCanSend
 1365               	TCPCanSend:
 1366               	.LFB21:
 404:tcp_awful.c   **** 
 405:tcp_awful.c   **** //XXX TODO This needs to be done better.
 406:tcp_awful.c   **** void RequestClosure( uint8_t c )
 407:tcp_awful.c   **** {
 408:tcp_awful.c   **** 	if( !TCPs[c].state || TCPs[c].state == CLOSING_WAIT ) return;
 409:tcp_awful.c   **** 	TCPs[c].sendtype = FINBIT|ACKBIT;//RSTBIT;
 410:tcp_awful.c   **** 	TCPs[c].state = CLOSING_WAIT;
GAS LISTING  			page 64


 411:tcp_awful.c   **** 	TCPs[c].time_since_sent = 0;
 412:tcp_awful.c   **** 
 413:tcp_awful.c   **** 	MARK("__req_closure %d\n", c);
 414:tcp_awful.c   **** //	TCPs[c].seq_num--; //???
 415:tcp_awful.c   **** 	StartTCPWrite( c );
 416:tcp_awful.c   **** 	EndTCPWrite( c );	
 417:tcp_awful.c   **** }
 418:tcp_awful.c   **** 
 419:tcp_awful.c   **** 
 420:tcp_awful.c   **** uint8_t TCPCanSend( uint8_t c )
 421:tcp_awful.c   **** {
 1367               	 .loc 2 421 0
 1368               	 .cfi_startproc
 1369               	.LVL42:
 1370               	 
 1371               	 
 1372               	 
 1373               	.L__stack_usage =0
 422:tcp_awful.c   **** 	return (!TCPs[c].time_since_sent) && IsSendBufferFree();
 1374               	 .loc 2 422 0
 1375 01c6 90E0      	 ldi r25,0
 1376 01c8 6EE1      	 ldi r22,lo8(30)
 1377 01ca 70E0      	 ldi r23,0
 1378 01cc 0E94 0000 	 call __mulhi3
 1379               	.LVL43:
 1380 01d0 8050      	 subi r24,lo8(-(TCPs))
 1381 01d2 9040      	 sbci r25,hi8(-(TCPs))
 1382 01d4 FC01      	 movw r30,r24
 1383 01d6 8789      	 ldd r24,Z+23
 1384 01d8 8111      	 cpse r24,__zero_reg__
 1385 01da 00C0      	 rjmp .L23
 1386               	 .loc 2 422 0 is_stmt 0 discriminator 1
 1387 01dc 0E94 0000 	 call IsSendBufferFree
 1388               	.LVL44:
 1389 01e0 91E0      	 ldi r25,lo8(1)
 1390 01e2 8111      	 cpse r24,__zero_reg__
 1391 01e4 00C0      	 rjmp .L22
 1392 01e6 90E0      	 ldi r25,0
 1393               	.L22:
 1394 01e8 892F      	 mov r24,r25
 1395 01ea 0895      	 ret
 1396               	.L23:
 1397               	 .loc 2 422 0
 1398 01ec 80E0      	 ldi r24,0
 423:tcp_awful.c   **** }
 1399               	 .loc 2 423 0 is_stmt 1
 1400 01ee 0895      	 ret
 1401               	 .cfi_endproc
 1402               	.LFE21:
 1404               	.global StartTCPWrite
 1406               	StartTCPWrite:
 1407               	.LFB22:
 424:tcp_awful.c   **** 
 425:tcp_awful.c   **** void StartTCPWrite( uint8_t c )
 426:tcp_awful.c   **** {
 1408               	 .loc 2 426 0
 1409               	 .cfi_startproc
GAS LISTING  			page 65


 1410               	.LVL45:
 1411               	 
 1412               	 
 1413               	 
 1414               	.L__stack_usage =0
 427:tcp_awful.c   **** 	write_tcp_header( c );
 1415               	 .loc 2 427 0
 1416 01f0 0C94 0000 	 jmp write_tcp_header
 1417               	.LVL46:
 1418               	 .cfi_endproc
 1419               	.LFE22:
 1421               	.global FinishTCPPacket
 1423               	FinishTCPPacket:
 1424               	.LFB24:
 428:tcp_awful.c   **** }
 429:tcp_awful.c   **** 
 430:tcp_awful.c   **** void EndTCPWrite( uint8_t c )
 431:tcp_awful.c   **** {
 432:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[c];
 433:tcp_awful.c   **** 	unsigned short length;
 434:tcp_awful.c   **** //	unsigned short payloadlen;
 435:tcp_awful.c   **** 	unsigned short base = 0;
 436:tcp_awful.c   **** 
 437:tcp_awful.c   **** 	et_stopop();
 438:tcp_awful.c   **** 
 439:tcp_awful.c   **** 	length = et_get_write_length() - 6;
 440:tcp_awful.c   **** 	t->sendlength = length;
 441:tcp_awful.c   **** 
 442:tcp_awful.c   **** //	payloadlen = length - 34 - 20;
 443:tcp_awful.c   **** 
 444:tcp_awful.c   **** 	if( t->sendtype & ( PSHBIT | SYNBIT | FINBIT ) ) //PSH, SYN, RST or FIN packets
 445:tcp_awful.c   **** 	{
 446:tcp_awful.c   **** 		t->time_since_sent = 1;
 447:tcp_awful.c   **** 		t->retries = 0;
 448:tcp_awful.c   **** 	}
 449:tcp_awful.c   **** 
 450:tcp_awful.c   **** 	//Write length in IP header
 451:tcp_awful.c   **** 
 452:tcp_awful.c   **** 	FinishTCPPacket( length-14 );
 453:tcp_awful.c   **** 
 454:tcp_awful.c   **** 	et_endsend( );
 455:tcp_awful.c   **** 
 456:tcp_awful.c   **** #ifdef TCP_DOUBLESEND
 457:tcp_awful.c   **** 	uint16_t nps = NetGetScratch();
 458:tcp_awful.c   **** 	et_copy_memory( nps, t->sendptr, 55, 0, 65535 );
 459:tcp_awful.c   **** 	et_startsend( nps );
 460:tcp_awful.c   **** 	et_stopop();
 461:tcp_awful.c   **** 	et_alter_word( 18+6, 0x0000 );
 462:tcp_awful.c   **** 	FinishTCPPacket( 40 );
 463:tcp_awful.c   **** 	et_xmitpacket( nps, 55 );
 464:tcp_awful.c   **** #endif
 465:tcp_awful.c   **** 
 466:tcp_awful.c   **** }
 467:tcp_awful.c   **** 
 468:tcp_awful.c   **** void FinishTCPPacket( uint16_t length )
 469:tcp_awful.c   **** {
 1425               	 .loc 2 469 0
GAS LISTING  			page 66


 1426               	 .cfi_startproc
 1427               	.LVL47:
 1428 01f4 EF92      	 push r14
 1429               	.LCFI13:
 1430               	 .cfi_def_cfa_offset 3
 1431               	 .cfi_offset 14,-2
 1432 01f6 FF92      	 push r15
 1433               	.LCFI14:
 1434               	 .cfi_def_cfa_offset 4
 1435               	 .cfi_offset 15,-3
 1436 01f8 0F93      	 push r16
 1437               	.LCFI15:
 1438               	 .cfi_def_cfa_offset 5
 1439               	 .cfi_offset 16,-4
 1440 01fa 1F93      	 push r17
 1441               	.LCFI16:
 1442               	 .cfi_def_cfa_offset 6
 1443               	 .cfi_offset 17,-5
 1444 01fc CF93      	 push r28
 1445               	.LCFI17:
 1446               	 .cfi_def_cfa_offset 7
 1447               	 .cfi_offset 28,-6
 1448 01fe DF93      	 push r29
 1449               	.LCFI18:
 1450               	 .cfi_def_cfa_offset 8
 1451               	 .cfi_offset 29,-7
 1452               	 
 1453               	 
 1454               	 
 1455               	.L__stack_usage =6
 1456 0200 EC01      	 movw r28,r24
 1457               	.LVL48:
 1458               	.LBB41:
 1459               	.LBB42:
  59:net_compat.h  **** 
  60:net_compat.h  **** static inline uint16_t et_get_write_length() { return ETsendplace - sendbaseaddress + 6; } //XXX: T
  61:net_compat.h  **** 
  62:net_compat.h  **** //End sending (calls xmitpacket with correct flags)	//CLOSURE
  63:net_compat.h  **** static inline void et_endsend() { et_xmitpacket( sendbaseaddress, ETsendplace - sendbaseaddress ); 
  64:net_compat.h  **** 
  65:net_compat.h  **** //Deselects the chip, can halt operation.
  66:net_compat.h  **** static inline void et_stopop() { }
  67:net_compat.h  **** 
  68:net_compat.h  **** //Start a checksum
  69:net_compat.h  **** void et_start_checksum( uint16_t start, uint16_t len );
  70:net_compat.h  **** 
  71:net_compat.h  **** //Get the results of a checksum (little endian)
  72:net_compat.h  **** static inline uint16_t et_get_checksum() { return ETchecksum; }
  73:net_compat.h  **** 
  74:net_compat.h  **** //Modify a word of memory (little endian)
  75:net_compat.h  **** static inline void et_alter_word( uint16_t address, uint16_t val ) { ETbuffer[address] = val>>8; ET
 1460               	 .loc 1 75 0
 1461 0202 D093 0000 	 sts ETbuffer+16,r29
 1462 0206 C093 0000 	 sts ETbuffer+17,r28
 1463               	.LBE42:
 1464               	.LBE41:
 470:tcp_awful.c   **** 	et_alter_word( 10+6, length );
GAS LISTING  			page 67


 471:tcp_awful.c   **** 
 472:tcp_awful.c   **** #ifndef AUTO_CHECKSUMS
 473:tcp_awful.c   **** 	uint16_t ppl, ppl2;
 474:tcp_awful.c   **** 	et_start_checksum( 8+6, 20 );
 1465               	 .loc 2 474 0
 1466 020a 64E1      	 ldi r22,lo8(20)
 1467 020c 70E0      	 ldi r23,0
 1468 020e 8EE0      	 ldi r24,lo8(14)
 1469 0210 90E0      	 ldi r25,0
 1470               	.LVL49:
 1471 0212 0E94 0000 	 call et_start_checksum
 1472               	.LVL50:
 1473               	.LBB43:
 1474               	.LBB44:
  72:net_compat.h  **** static inline uint16_t et_get_checksum() { return ETchecksum; }
 1475               	 .loc 1 72 0
 1476 0216 8091 0000 	 lds r24,ETchecksum
 1477 021a 9091 0000 	 lds r25,ETchecksum+1
 1478               	.LVL51:
 1479               	.LBE44:
 1480               	.LBE43:
 1481               	.LBB45:
 1482               	.LBB46:
 1483               	 .loc 1 75 0
 1484 021e 9093 0000 	 sts ETbuffer+24,r25
 1485 0222 8093 0000 	 sts ETbuffer+25,r24
 1486               	.LBE46:
 1487               	.LBE45:
 475:tcp_awful.c   **** 	ppl = et_get_checksum();
 476:tcp_awful.c   **** 	et_alter_word( 18+6, ppl );
 477:tcp_awful.c   **** 
 478:tcp_awful.c   **** 	//Calc TCP checksum
 479:tcp_awful.c   **** 	//Initially, write pseudo-header into the checksum area
 480:tcp_awful.c   **** 	et_alter_word( 0x2C+6, TCP_PROTOCOL_NUMBER + length - 20 );
 1488               	 .loc 2 480 0
 1489 0226 CE01      	 movw r24,r28
 1490               	.LVL52:
 1491 0228 0E97      	 sbiw r24,14
 1492               	.LVL53:
 1493               	.LBB47:
 1494               	.LBB48:
 1495               	 .loc 1 75 0
 1496 022a 20E0      	 ldi r18,lo8(ETbuffer+50)
 1497 022c E22E      	 mov r14,r18
 1498 022e 20E0      	 ldi r18,hi8(ETbuffer+50)
 1499 0230 F22E      	 mov r15,r18
 1500 0232 F701      	 movw r30,r14
 1501 0234 9083      	 st Z,r25
 1502 0236 00E0      	 ldi r16,lo8(ETbuffer+51)
 1503 0238 10E0      	 ldi r17,hi8(ETbuffer+51)
 1504 023a F801      	 movw r30,r16
 1505 023c 8083      	 st Z,r24
 1506               	.LBE48:
 1507               	.LBE47:
 481:tcp_awful.c   **** 
 482:tcp_awful.c   **** 	et_start_checksum( 20+6, length - 12 );
 1508               	 .loc 2 482 0
GAS LISTING  			page 68


 1509 023e BE01      	 movw r22,r28
 1510 0240 6C50      	 subi r22,12
 1511 0242 7109      	 sbc r23,__zero_reg__
 1512 0244 8AE1      	 ldi r24,lo8(26)
 1513 0246 90E0      	 ldi r25,0
 1514               	.LVL54:
 1515 0248 0E94 0000 	 call et_start_checksum
 1516               	.LVL55:
 1517               	.LBB49:
 1518               	.LBB50:
  72:net_compat.h  **** static inline uint16_t et_get_checksum() { return ETchecksum; }
 1519               	 .loc 1 72 0
 1520 024c 8091 0000 	 lds r24,ETchecksum
 1521 0250 9091 0000 	 lds r25,ETchecksum+1
 1522               	.LVL56:
 1523               	.LBE50:
 1524               	.LBE49:
 1525               	.LBB51:
 1526               	.LBB52:
 1527               	 .loc 1 75 0
 1528 0254 F701      	 movw r30,r14
 1529 0256 9083      	 st Z,r25
 1530 0258 F801      	 movw r30,r16
 1531 025a 8083      	 st Z,r24
 1532               	 
 1533               	.LBE52:
 1534               	.LBE51:
 483:tcp_awful.c   **** 	ppl2 = et_get_checksum();
 484:tcp_awful.c   **** 	et_alter_word( 0x2C+6, ppl2 );
 485:tcp_awful.c   **** #endif
 486:tcp_awful.c   **** }
 1535               	 .loc 2 486 0
 1536 025c DF91      	 pop r29
 1537 025e CF91      	 pop r28
 1538               	.LVL57:
 1539 0260 1F91      	 pop r17
 1540 0262 0F91      	 pop r16
 1541 0264 FF90      	 pop r15
 1542 0266 EF90      	 pop r14
 1543 0268 0895      	 ret
 1544               	 .cfi_endproc
 1545               	.LFE24:
 1547               	.global EndTCPWrite
 1549               	EndTCPWrite:
 1550               	.LFB23:
 431:tcp_awful.c   **** {
 1551               	 .loc 2 431 0
 1552               	 .cfi_startproc
 1553               	.LVL58:
 1554               	 
 1555               	 
 1556               	 
 1557               	.L__stack_usage =0
 432:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[c];
 1558               	 .loc 2 432 0
 1559 026a 90E0      	 ldi r25,0
 1560 026c 6EE1      	 ldi r22,lo8(30)
GAS LISTING  			page 69


 1561 026e 70E0      	 ldi r23,0
 1562 0270 0E94 0000 	 call __mulhi3
 1563               	.LVL59:
 1564 0274 FC01      	 movw r30,r24
 1565 0276 E050      	 subi r30,lo8(-(TCPs))
 1566 0278 F040      	 sbci r31,hi8(-(TCPs))
 1567               	.LVL60:
 1568               	.LBB57:
 1569               	.LBB58:
  60:net_compat.h  **** static inline uint16_t et_get_write_length() { return ETsendplace - sendbaseaddress + 6; } //XXX: T
 1570               	 .loc 1 60 0
 1571 027a 8091 0000 	 lds r24,ETsendplace
 1572 027e 9091 0000 	 lds r25,ETsendplace+1
 1573 0282 2091 0000 	 lds r18,sendbaseaddress
 1574 0286 3091 0000 	 lds r19,sendbaseaddress+1
 1575 028a 821B      	 sub r24,r18
 1576 028c 930B      	 sbc r25,r19
 1577               	.LVL61:
 1578               	.LBE58:
 1579               	.LBE57:
 440:tcp_awful.c   **** 	t->sendlength = length;
 1580               	 .loc 2 440 0
 1581 028e 958F      	 std Z+29,r25
 1582 0290 848F      	 std Z+28,r24
 444:tcp_awful.c   **** 	if( t->sendtype & ( PSHBIT | SYNBIT | FINBIT ) ) //PSH, SYN, RST or FIN packets
 1583               	 .loc 2 444 0
 1584 0292 238D      	 ldd r18,Z+27
 1585 0294 2B70      	 andi r18,lo8(11)
 1586 0296 01F0      	 breq .L27
 446:tcp_awful.c   **** 		t->time_since_sent = 1;
 1587               	 .loc 2 446 0
 1588 0298 21E0      	 ldi r18,lo8(1)
 1589 029a 278B      	 std Z+23,r18
 447:tcp_awful.c   **** 		t->retries = 0;
 1590               	 .loc 2 447 0
 1591 029c 128E      	 std Z+26,__zero_reg__
 1592               	.L27:
 452:tcp_awful.c   **** 	FinishTCPPacket( length-14 );
 1593               	 .loc 2 452 0
 1594 029e 0E97      	 sbiw r24,14
 1595               	.LVL62:
 1596 02a0 0E94 0000 	 call FinishTCPPacket
 1597               	.LVL63:
 1598               	.LBB59:
 1599               	.LBB60:
  63:net_compat.h  **** static inline void et_endsend() { et_xmitpacket( sendbaseaddress, ETsendplace - sendbaseaddress ); 
 1600               	 .loc 1 63 0
 1601 02a4 8091 0000 	 lds r24,sendbaseaddress
 1602 02a8 9091 0000 	 lds r25,sendbaseaddress+1
 1603 02ac 6091 0000 	 lds r22,ETsendplace
 1604 02b0 7091 0000 	 lds r23,ETsendplace+1
 1605 02b4 681B      	 sub r22,r24
 1606 02b6 790B      	 sbc r23,r25
 1607 02b8 0C94 0000 	 jmp et_xmitpacket
 1608               	.LVL64:
 1609               	.LBE60:
 1610               	.LBE59:
GAS LISTING  			page 70


 1611               	 .cfi_endproc
 1612               	.LFE23:
 1614               	.global HandleTCP
 1616               	HandleTCP:
 1617               	.LFB17:
 116:tcp_awful.c   **** {
 1618               	 .loc 2 116 0
 1619               	 .cfi_startproc
 1620               	.LVL65:
 1621 02bc 3F92      	 push r3
 1622               	.LCFI19:
 1623               	 .cfi_def_cfa_offset 3
 1624               	 .cfi_offset 3,-2
 1625 02be 4F92      	 push r4
 1626               	.LCFI20:
 1627               	 .cfi_def_cfa_offset 4
 1628               	 .cfi_offset 4,-3
 1629 02c0 5F92      	 push r5
 1630               	.LCFI21:
 1631               	 .cfi_def_cfa_offset 5
 1632               	 .cfi_offset 5,-4
 1633 02c2 6F92      	 push r6
 1634               	.LCFI22:
 1635               	 .cfi_def_cfa_offset 6
 1636               	 .cfi_offset 6,-5
 1637 02c4 7F92      	 push r7
 1638               	.LCFI23:
 1639               	 .cfi_def_cfa_offset 7
 1640               	 .cfi_offset 7,-6
 1641 02c6 8F92      	 push r8
 1642               	.LCFI24:
 1643               	 .cfi_def_cfa_offset 8
 1644               	 .cfi_offset 8,-7
 1645 02c8 9F92      	 push r9
 1646               	.LCFI25:
 1647               	 .cfi_def_cfa_offset 9
 1648               	 .cfi_offset 9,-8
 1649 02ca AF92      	 push r10
 1650               	.LCFI26:
 1651               	 .cfi_def_cfa_offset 10
 1652               	 .cfi_offset 10,-9
 1653 02cc BF92      	 push r11
 1654               	.LCFI27:
 1655               	 .cfi_def_cfa_offset 11
 1656               	 .cfi_offset 11,-10
 1657 02ce CF92      	 push r12
 1658               	.LCFI28:
 1659               	 .cfi_def_cfa_offset 12
 1660               	 .cfi_offset 12,-11
 1661 02d0 DF92      	 push r13
 1662               	.LCFI29:
 1663               	 .cfi_def_cfa_offset 13
 1664               	 .cfi_offset 13,-12
 1665 02d2 EF92      	 push r14
 1666               	.LCFI30:
 1667               	 .cfi_def_cfa_offset 14
 1668               	 .cfi_offset 14,-13
GAS LISTING  			page 71


 1669 02d4 FF92      	 push r15
 1670               	.LCFI31:
 1671               	 .cfi_def_cfa_offset 15
 1672               	 .cfi_offset 15,-14
 1673 02d6 0F93      	 push r16
 1674               	.LCFI32:
 1675               	 .cfi_def_cfa_offset 16
 1676               	 .cfi_offset 16,-15
 1677 02d8 1F93      	 push r17
 1678               	.LCFI33:
 1679               	 .cfi_def_cfa_offset 17
 1680               	 .cfi_offset 17,-16
 1681 02da CF93      	 push r28
 1682               	.LCFI34:
 1683               	 .cfi_def_cfa_offset 18
 1684               	 .cfi_offset 28,-17
 1685 02dc DF93      	 push r29
 1686               	.LCFI35:
 1687               	 .cfi_def_cfa_offset 19
 1688               	 .cfi_offset 29,-18
 1689               	 
 1690               	 
 1691               	 
 1692               	.L__stack_usage =17
 1693 02de 5C01      	 movw r10,r24
 1694               	.LVL66:
 1695               	.LBB71:
 1696               	.LBB72:
  52:tcp_awful.c   **** 		if( t->state && t->this_port == localport && t->dest_port == remoteport && t->dest_addr == *((uin
 1697               	 .loc 2 52 0
 1698 02e0 8091 0000 	 lds r24,TCPs+30
 1699               	.LVL67:
 1700 02e4 8770      	 andi r24,lo8(7)
 1701 02e6 01F0      	 breq .L55
 1702 02e8 2091 0000 	 lds r18,TCPs+31
 1703 02ec 3091 0000 	 lds r19,TCPs+31+1
 1704 02f0 8091 0000 	 lds r24,localport
 1705 02f4 9091 0000 	 lds r25,localport+1
 1706 02f8 2817      	 cp r18,r24
 1707 02fa 3907      	 cpc r19,r25
 1708 02fc 01F4      	 brne .L55
 1709 02fe 2091 0000 	 lds r18,TCPs+33
 1710 0302 3091 0000 	 lds r19,TCPs+33+1
 1711 0306 8091 0000 	 lds r24,remoteport
 1712 030a 9091 0000 	 lds r25,remoteport+1
 1713 030e 2817      	 cp r18,r24
 1714 0310 3907      	 cpc r19,r25
 1715 0312 01F4      	 brne .L55
 1716 0314 9924      	 clr r9
 1717 0316 9394      	 inc r9
 1718 0318 4091 0000 	 lds r20,TCPs+35
 1719 031c 5091 0000 	 lds r21,TCPs+35+1
 1720 0320 6091 0000 	 lds r22,TCPs+35+2
 1721 0324 7091 0000 	 lds r23,TCPs+35+3
 1722 0328 8091 0000 	 lds r24,ipsource
 1723 032c 9091 0000 	 lds r25,ipsource+1
 1724 0330 A091 0000 	 lds r26,ipsource+2
GAS LISTING  			page 72


 1725 0334 B091 0000 	 lds r27,ipsource+3
 1726 0338 4817      	 cp r20,r24
 1727 033a 5907      	 cpc r21,r25
 1728 033c 6A07      	 cpc r22,r26
 1729 033e 7B07      	 cpc r23,r27
 1730 0340 01F0      	 breq .L32
 1731               	.L55:
  57:tcp_awful.c   **** 	return 0;
 1732               	 .loc 2 57 0
 1733 0342 912C      	 mov r9,__zero_reg__
 1734               	.L32:
 1735               	.LBE72:
 1736               	.LBE71:
 118:tcp_awful.c   **** 	int rsck = GetAssociatedPacket();
 1737               	 .loc 2 118 0
 1738 0344 092D      	 mov r16,r9
 1739 0346 1127      	 clr r17
 1740 0348 07FD      	 sbrc r16,7
 1741 034a 1095      	 com r17
 1742               	.LVL68:
 121:tcp_awful.c   **** 	uint32_t sequence_num = POP32();
 1743               	 .loc 2 121 0
 1744 034c 0E94 0000 	 call POP32
 1745               	.LVL69:
 1746 0350 6B01      	 movw r12,r22
 1747 0352 7C01      	 movw r14,r24
 1748               	.LVL70:
 122:tcp_awful.c   **** 	uint32_t ack_num = POP32();
 1749               	 .loc 2 122 0
 1750 0354 0E94 0000 	 call POP32
 1751               	.LVL71:
 1752 0358 2B01      	 movw r4,r22
 1753 035a 3C01      	 movw r6,r24
 1754               	.LVL72:
 124:tcp_awful.c   **** 	uint8_t hlen = (POP>>2) & 0xFC;
 1755               	 .loc 2 124 0
 1756 035c 0E94 0000 	 call et_pop8
 1757               	.LVL73:
 1758 0360 382E      	 mov r3,r24
 1759 0362 3694      	 lsr r3
 1760 0364 3694      	 lsr r3
 1761 0366 832D      	 mov r24,r3
 1762 0368 8C7F      	 andi r24,lo8(-4)
 1763 036a 382E      	 mov r3,r24
 1764               	.LVL74:
 125:tcp_awful.c   **** 	uint8_t flags = POP;
 1765               	 .loc 2 125 0
 1766 036c 0E94 0000 	 call et_pop8
 1767               	.LVL75:
 1768 0370 882E      	 mov r8,r24
 1769               	.LVL76:
 126:tcp_awful.c   **** 	uint16_t window_size = POP16;
 1770               	 .loc 2 126 0
 1771 0372 0E94 0000 	 call et_pop16
 1772               	.LVL77:
 128:tcp_awful.c   **** 	POP16;  //Checksum
 1773               	 .loc 2 128 0
GAS LISTING  			page 73


 1774 0376 0E94 0000 	 call et_pop16
 1775               	.LVL78:
 129:tcp_awful.c   **** 	POP16;  //Urgent PTR
 1776               	 .loc 2 129 0
 1777 037a 0E94 0000 	 call et_pop16
 1778               	.LVL79:
 134:tcp_awful.c   **** 	hlen -= 20;
 1779               	 .loc 2 134 0
 1780 037e CCEE      	 ldi r28,lo8(-20)
 1781 0380 C30D      	 add r28,r3
 1782               	.LVL80:
 1783               	.L34:
 135:tcp_awful.c   **** 	while( hlen-- )
 1784               	 .loc 2 135 0 discriminator 1
 1785 0382 CC23      	 tst r28
 1786 0384 01F0      	 breq .L67
 136:tcp_awful.c   **** 		POP;
 1787               	 .loc 2 136 0
 1788 0386 0E94 0000 	 call et_pop8
 1789               	.LVL81:
 1790 038a C150      	 subi r28,lo8(-(-1))
 1791               	.LVL82:
 1792 038c 00C0      	 rjmp .L34
 1793               	.LVL83:
 1794               	.L67:
 139:tcp_awful.c   **** 	if( flags & SYNBIT )	//SYN
 1795               	 .loc 2 139 0
 1796 038e 81FE      	 sbrs r8,1
 1797 0390 00C0      	 rjmp .L36
 1798               	.LBB73:
 142:tcp_awful.c   **** 		int8_t rsck = TCPReceiveSyn( localport );
 1799               	 .loc 2 142 0
 1800 0392 8091 0000 	 lds r24,localport
 1801 0396 9091 0000 	 lds r25,localport+1
 1802 039a 0E94 0000 	 call TCPReceiveSyn
 1803               	.LVL84:
 1804 039e 282F      	 mov r18,r24
 1805               	.LVL85:
 144:tcp_awful.c   **** 		if( rsck == 0 ) goto reset_conn0;
 1806               	 .loc 2 144 0
 1807 03a0 8823      	 tst r24
 1808 03a2 01F4      	 brne .+2
 1809 03a4 00C0      	 rjmp .L37
 145:tcp_awful.c   **** 		t = &TCPs[rsck];
 1810               	 .loc 2 145 0
 1811 03a6 9927      	 clr r25
 1812 03a8 87FD      	 sbrc r24,7
 1813 03aa 9095      	 com r25
 1814 03ac 6EE1      	 ldi r22,lo8(30)
 1815 03ae 70E0      	 ldi r23,0
 1816 03b0 0E94 0000 	 call __mulhi3
 1817 03b4 EC01      	 movw r28,r24
 1818               	.LVL86:
 1819 03b6 C050      	 subi r28,lo8(-(TCPs))
 1820 03b8 D040      	 sbci r29,hi8(-(TCPs))
 1821               	.LVL87:
 1822               	.LBB74:
GAS LISTING  			page 74


 1823               	.LBB75:
  94:tcp_awful.c   **** 	c[0] = macfrom[0];
 1824               	 .loc 2 94 0
 1825 03ba 8091 0000 	 lds r24,macfrom
 1826 03be 898B      	 std Y+17,r24
  95:tcp_awful.c   **** 	c[1] = macfrom[1];
 1827               	 .loc 2 95 0
 1828 03c0 8091 0000 	 lds r24,macfrom+1
 1829 03c4 8A8B      	 std Y+18,r24
  96:tcp_awful.c   **** 	c[2] = macfrom[2];
 1830               	 .loc 2 96 0
 1831 03c6 8091 0000 	 lds r24,macfrom+2
 1832 03ca 8B8B      	 std Y+19,r24
  97:tcp_awful.c   **** 	c[3] = macfrom[3];
 1833               	 .loc 2 97 0
 1834 03cc 8091 0000 	 lds r24,macfrom+3
 1835 03d0 8C8B      	 std Y+20,r24
  98:tcp_awful.c   **** 	c[4] = macfrom[4];
 1836               	 .loc 2 98 0
 1837 03d2 8091 0000 	 lds r24,macfrom+4
 1838 03d6 8D8B      	 std Y+21,r24
  99:tcp_awful.c   **** 	c[5] = macfrom[5];
 1839               	 .loc 2 99 0
 1840 03d8 8091 0000 	 lds r24,macfrom+5
 1841 03dc 8E8B      	 std Y+22,r24
 1842               	.LBE75:
 1843               	.LBE74:
 149:tcp_awful.c   **** 		t->this_port = localport;
 1844               	 .loc 2 149 0
 1845 03de 8091 0000 	 lds r24,localport
 1846 03e2 9091 0000 	 lds r25,localport+1
 1847 03e6 9A83      	 std Y+2,r25
 1848 03e8 8983      	 std Y+1,r24
 150:tcp_awful.c   **** 		t->dest_port = remoteport;
 1849               	 .loc 2 150 0
 1850 03ea 8091 0000 	 lds r24,remoteport
 1851 03ee 9091 0000 	 lds r25,remoteport+1
 1852 03f2 9C83      	 std Y+4,r25
 1853 03f4 8B83      	 std Y+3,r24
 151:tcp_awful.c   **** 		t->dest_addr = *((uint32_t*)ipsource);
 1854               	 .loc 2 151 0
 1855 03f6 4091 0000 	 lds r20,ipsource
 1856 03fa 5091 0000 	 lds r21,ipsource+1
 1857 03fe 6091 0000 	 lds r22,ipsource+2
 1858 0402 7091 0000 	 lds r23,ipsource+3
 1859 0406 4D83      	 std Y+5,r20
 1860 0408 5E83      	 std Y+6,r21
 1861 040a 6F83      	 std Y+7,r22
 1862 040c 7887      	 std Y+8,r23
 152:tcp_awful.c   **** 		t->ack_num = sequence_num + 1;
 1863               	 .loc 2 152 0
 1864 040e 9FEF      	 ldi r25,-1
 1865 0410 C91A      	 sub r12,r25
 1866 0412 D90A      	 sbc r13,r25
 1867 0414 E90A      	 sbc r14,r25
 1868 0416 F90A      	 sbc r15,r25
 1869               	.LVL88:
GAS LISTING  			page 75


 1870 0418 CD86      	 std Y+13,r12
 1871 041a DE86      	 std Y+14,r13
 1872 041c EF86      	 std Y+15,r14
 1873 041e F88A      	 std Y+16,r15
 153:tcp_awful.c   **** 		t->seq_num = 0xAAAAAAAA; //should be random?
 1874               	 .loc 2 153 0
 1875 0420 4AEA      	 ldi r20,lo8(-86)
 1876 0422 5AEA      	 ldi r21,lo8(-86)
 1877 0424 BA01      	 movw r22,r20
 1878 0426 4987      	 std Y+9,r20
 1879 0428 5A87      	 std Y+10,r21
 1880 042a 6B87      	 std Y+11,r22
 1881 042c 7C87      	 std Y+12,r23
 154:tcp_awful.c   **** 		t->state = ESTABLISHED;
 1882               	 .loc 2 154 0
 1883 042e 8881      	 ld r24,Y
 1884 0430 887F      	 andi r24,lo8(-8)
 1885 0432 8160      	 ori r24,lo8(1)
 1886 0434 8883      	 st Y,r24
 155:tcp_awful.c   **** 		t->time_since_sent = 0;
 1887               	 .loc 2 155 0
 1888 0436 1F8A      	 std Y+23,__zero_reg__
 156:tcp_awful.c   **** 		t->idletime = 0;
 1889               	 .loc 2 156 0
 1890 0438 198E      	 std Y+25,__zero_reg__
 1891 043a 188E      	 std Y+24,__zero_reg__
 162:tcp_awful.c   **** 		t->sendtype = SYNBIT | ACKBIT; //SYN+ACK
 1892               	 .loc 2 162 0
 1893 043c 82E1      	 ldi r24,lo8(18)
 1894 043e 8B8F      	 std Y+27,r24
 1895               	.LVL89:
 1896               	.LBB76:
 1897               	.LBB77:
 427:tcp_awful.c   **** 	write_tcp_header( c );
 1898               	 .loc 2 427 0
 1899 0440 822F      	 mov r24,r18
 1900 0442 0E94 0000 	 call write_tcp_header
 1901               	.LVL90:
 1902               	.LBE77:
 1903               	.LBE76:
 165:tcp_awful.c   **** 		t->seq_num++;
 1904               	 .loc 2 165 0
 1905 0446 4985      	 ldd r20,Y+9
 1906 0448 5A85      	 ldd r21,Y+10
 1907 044a 6B85      	 ldd r22,Y+11
 1908 044c 7C85      	 ldd r23,Y+12
 1909 044e 4F5F      	 subi r20,-1
 1910 0450 5F4F      	 sbci r21,-1
 1911 0452 6F4F      	 sbci r22,-1
 1912 0454 7F4F      	 sbci r23,-1
 1913 0456 4987      	 std Y+9,r20
 1914 0458 5A87      	 std Y+10,r21
 1915 045a 6B87      	 std Y+11,r22
 1916 045c 7C87      	 std Y+12,r23
 171:tcp_awful.c   **** 		goto end_and_emit;
 1917               	 .loc 2 171 0
 1918 045e 00C0      	 rjmp .L38
GAS LISTING  			page 76


 1919               	.LVL91:
 1920               	.L36:
 1921               	.LBE73:
 119:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[rsck];
 1922               	 .loc 2 119 0
 1923 0460 C801      	 movw r24,r16
 1924 0462 6EE1      	 ldi r22,lo8(30)
 1925 0464 70E0      	 ldi r23,0
 1926 0466 0E94 0000 	 call __mulhi3
 1927 046a EC01      	 movw r28,r24
 1928               	.LVL92:
 1929 046c C050      	 subi r28,lo8(-(TCPs))
 1930 046e D040      	 sbci r29,hi8(-(TCPs))
 1931               	.LVL93:
 1932               	.LBB78:
 1933               	.LBB79:
  94:tcp_awful.c   **** 	c[0] = macfrom[0];
 1934               	 .loc 2 94 0
 1935 0470 8091 0000 	 lds r24,macfrom
 1936 0474 898B      	 std Y+17,r24
  95:tcp_awful.c   **** 	c[1] = macfrom[1];
 1937               	 .loc 2 95 0
 1938 0476 8091 0000 	 lds r24,macfrom+1
 1939 047a 8A8B      	 std Y+18,r24
  96:tcp_awful.c   **** 	c[2] = macfrom[2];
 1940               	 .loc 2 96 0
 1941 047c 8091 0000 	 lds r24,macfrom+2
 1942 0480 8B8B      	 std Y+19,r24
  97:tcp_awful.c   **** 	c[3] = macfrom[3];
 1943               	 .loc 2 97 0
 1944 0482 8091 0000 	 lds r24,macfrom+3
 1945 0486 8C8B      	 std Y+20,r24
  98:tcp_awful.c   **** 	c[4] = macfrom[4];
 1946               	 .loc 2 98 0
 1947 0488 8091 0000 	 lds r24,macfrom+4
 1948 048c 8D8B      	 std Y+21,r24
  99:tcp_awful.c   **** 	c[5] = macfrom[5];
 1949               	 .loc 2 99 0
 1950 048e 8091 0000 	 lds r24,macfrom+5
 1951 0492 8E8B      	 std Y+22,r24
 1952               	.LBE79:
 1953               	.LBE78:
 178:tcp_awful.c   **** 	if( !rsck )
 1954               	 .loc 2 178 0
 1955 0494 012B      	 or r16,r17
 1956 0496 01F4      	 brne .L39
 181:tcp_awful.c   **** 		if( flags & ( PSHBIT | SYNBIT | FINBIT ) )
 1957               	 .loc 2 181 0
 1958 0498 882D      	 mov r24,r8
 1959 049a 8B70      	 andi r24,lo8(11)
 1960 049c 01F0      	 breq .+2
 1961 049e 00C0      	 rjmp .L37
 1962 04a0 00C0      	 rjmp .L31
 1963               	.L39:
 193:tcp_awful.c   **** 	if( flags & RSTBIT)
 1964               	 .loc 2 193 0
 1965 04a2 82FE      	 sbrs r8,2
GAS LISTING  			page 77


 1966 04a4 00C0      	 rjmp .L41
 195:tcp_awful.c   **** 		TCPConnectionClosing( rsck );
 1967               	 .loc 2 195 0
 1968 04a6 892D      	 mov r24,r9
 1969 04a8 0E94 0000 	 call TCPConnectionClosing
 1970               	.LVL94:
 196:tcp_awful.c   **** 		t->sendtype = RSTBIT | ACKBIT;
 1971               	 .loc 2 196 0
 1972 04ac 84E1      	 ldi r24,lo8(20)
 1973 04ae 8B8F      	 std Y+27,r24
 197:tcp_awful.c   **** 		t->state = 0;
 1974               	 .loc 2 197 0
 1975 04b0 8881      	 ld r24,Y
 1976 04b2 00C0      	 rjmp .L66
 1977               	.L41:
 204:tcp_awful.c   **** 	if( flags & ACKBIT ) //ACK
 1978               	 .loc 2 204 0
 1979 04b4 84FE      	 sbrs r8,4
 1980 04b6 00C0      	 rjmp .L43
 1981               	.LBB80:
 207:tcp_awful.c   **** 		uint16_t payloadlen = t->sendlength - 34 - 20;
 1982               	 .loc 2 207 0
 1983 04b8 8C8D      	 ldd r24,Y+28
 1984 04ba 9D8D      	 ldd r25,Y+29
 1985 04bc C697      	 sbiw r24,54
 1986               	.LVL95:
 208:tcp_awful.c   **** 		uint32_t nextseq = t->seq_num;
 1987               	 .loc 2 208 0
 1988 04be 4985      	 ldd r20,Y+9
 1989 04c0 5A85      	 ldd r21,Y+10
 1990 04c2 6B85      	 ldd r22,Y+11
 1991 04c4 7C85      	 ldd r23,Y+12
 1992               	.LVL96:
 209:tcp_awful.c   **** 		if( payloadlen == 0)
 1993               	 .loc 2 209 0
 1994 04c6 0097      	 sbiw r24,0
 1995 04c8 01F4      	 brne .L44
 210:tcp_awful.c   **** 			nextseq ++;               //SEQ NUM
 1996               	 .loc 2 210 0
 1997 04ca 4F5F      	 subi r20,-1
 1998 04cc 5F4F      	 sbci r21,-1
 1999 04ce 6F4F      	 sbci r22,-1
 2000 04d0 7F4F      	 sbci r23,-1
 2001               	.LVL97:
 2002 04d2 00C0      	 rjmp .L45
 2003               	.L44:
 212:tcp_awful.c   **** 			nextseq += payloadlen;   //SEQ NUM
 2004               	 .loc 2 212 0
 2005 04d4 480F      	 add r20,r24
 2006 04d6 591F      	 adc r21,r25
 2007 04d8 611D      	 adc r22,__zero_reg__
 2008 04da 711D      	 adc r23,__zero_reg__
 2009               	.LVL98:
 2010               	.L45:
 223:tcp_awful.c   **** 		else if( diff == 0 )
 2011               	 .loc 2 223 0
 2012 04dc 4416      	 cp r4,r20
GAS LISTING  			page 78


 2013 04de 5506      	 cpc r5,r21
 2014 04e0 01F4      	 brne .L43
 227:tcp_awful.c   **** 			t->idletime = 0;
 2015               	 .loc 2 227 0
 2016 04e2 198E      	 std Y+25,__zero_reg__
 2017 04e4 188E      	 std Y+24,__zero_reg__
 228:tcp_awful.c   **** 			t->time_since_sent = 0;
 2018               	 .loc 2 228 0
 2019 04e6 1F8A      	 std Y+23,__zero_reg__
 230:tcp_awful.c   **** 			t->seq_num = nextseq;
 2020               	 .loc 2 230 0
 2021 04e8 4987      	 std Y+9,r20
 2022 04ea 5A87      	 std Y+10,r21
 2023 04ec 6B87      	 std Y+11,r22
 2024 04ee 7C87      	 std Y+12,r23
 2025               	.LVL99:
 2026               	.L43:
 2027 04f0 8881      	 ld r24,Y
 2028               	.LBE80:
 238:tcp_awful.c   **** 		if( t->state == CLOSING_WAIT )
 2029               	 .loc 2 238 0
 2030 04f2 982F      	 mov r25,r24
 2031 04f4 9770      	 andi r25,lo8(7)
 236:tcp_awful.c   **** 	if( flags & FINBIT )
 2032               	 .loc 2 236 0
 2033 04f6 80FE      	 sbrs r8,0
 2034 04f8 00C0      	 rjmp .L46
 2035 04fa 887F      	 andi r24,lo8(-8)
 238:tcp_awful.c   **** 		if( t->state == CLOSING_WAIT )
 2036               	 .loc 2 238 0
 2037 04fc 9230      	 cpi r25,lo8(2)
 2038 04fe 01F4      	 brne .L47
 240:tcp_awful.c   **** 			t->sendtype = ACKBIT;
 2039               	 .loc 2 240 0
 2040 0500 90E1      	 ldi r25,lo8(16)
 2041 0502 9B8F      	 std Y+27,r25
 241:tcp_awful.c   **** 			t->ack_num = sequence_num+1;
 2042               	 .loc 2 241 0
 2043 0504 9FEF      	 ldi r25,-1
 2044 0506 C91A      	 sub r12,r25
 2045 0508 D90A      	 sbc r13,r25
 2046 050a E90A      	 sbc r14,r25
 2047 050c F90A      	 sbc r15,r25
 2048               	.LVL100:
 2049 050e CD86      	 std Y+13,r12
 2050 0510 DE86      	 std Y+14,r13
 2051 0512 EF86      	 std Y+15,r14
 2052 0514 F88A      	 std Y+16,r15
 2053 0516 00C0      	 rjmp .L65
 2054               	.LVL101:
 2055               	.L47:
 249:tcp_awful.c   **** 			t->ack_num++;              //SEQ NUM
 2056               	 .loc 2 249 0
 2057 0518 4D85      	 ldd r20,Y+13
 2058 051a 5E85      	 ldd r21,Y+14
 2059 051c 6F85      	 ldd r22,Y+15
 2060 051e 7889      	 ldd r23,Y+16
GAS LISTING  			page 79


 2061 0520 4F5F      	 subi r20,-1
 2062 0522 5F4F      	 sbci r21,-1
 2063 0524 6F4F      	 sbci r22,-1
 2064 0526 7F4F      	 sbci r23,-1
 2065 0528 4D87      	 std Y+13,r20
 2066 052a 5E87      	 std Y+14,r21
 2067 052c 6F87      	 std Y+15,r22
 2068 052e 788B      	 std Y+16,r23
 250:tcp_awful.c   **** 			t->sendtype = ACKBIT | FINBIT;
 2069               	 .loc 2 250 0
 2070 0530 91E1      	 ldi r25,lo8(17)
 2071 0532 9B8F      	 std Y+27,r25
 251:tcp_awful.c   **** 			t->state = CLOSING_WAIT;
 2072               	 .loc 2 251 0
 2073 0534 8260      	 ori r24,lo8(2)
 2074 0536 8883      	 st Y,r24
 252:tcp_awful.c   **** 			TCPConnectionClosing( rsck );
 2075               	 .loc 2 252 0
 2076 0538 892D      	 mov r24,r9
 2077 053a 0E94 0000 	 call TCPConnectionClosing
 2078               	.LVL102:
 254:tcp_awful.c   **** 			goto send_early;
 2079               	 .loc 2 254 0
 2080 053e 00C0      	 rjmp .L42
 2081               	.L46:
 256:tcp_awful.c   **** 	} else if( t->state == CLOSING_WAIT )
 2082               	 .loc 2 256 0
 2083 0540 9230      	 cpi r25,lo8(2)
 2084 0542 01F4      	 brne .L48
 2085               	.L66:
 258:tcp_awful.c   **** 		t->state = 0;
 2086               	 .loc 2 258 0
 2087 0544 887F      	 andi r24,lo8(-8)
 2088               	.LVL103:
 2089               	.L65:
 2090 0546 8883      	 st Y,r24
 259:tcp_awful.c   **** 		goto send_early;
 2091               	 .loc 2 259 0
 2092 0548 00C0      	 rjmp .L42
 2093               	.LVL104:
 2094               	.L48:
 131:tcp_awful.c   **** 	iptotallen -= hlen;
 2095               	 .loc 2 131 0
 2096 054a B501      	 movw r22,r10
 2097 054c 6319      	 sub r22,r3
 2098 054e 7109      	 sbc r23,__zero_reg__
 271:tcp_awful.c   **** 	if( iptotallen )
 2099               	 .loc 2 271 0
 2100 0550 01F4      	 brne .+2
 2101 0552 00C0      	 rjmp .L31
 273:tcp_awful.c   **** 		if( t->ack_num == sequence_num )
 2102               	 .loc 2 273 0
 2103 0554 8D85      	 ldd r24,Y+13
 2104 0556 9E85      	 ldd r25,Y+14
 2105 0558 AF85      	 ldd r26,Y+15
 2106 055a B889      	 ldd r27,Y+16
 2107 055c 8C15      	 cp r24,r12
GAS LISTING  			page 80


 2108 055e 9D05      	 cpc r25,r13
 2109 0560 AE05      	 cpc r26,r14
 2110 0562 BF05      	 cpc r27,r15
 2111 0564 01F0      	 breq .+2
 2112 0566 00C0      	 rjmp .L31
 278:tcp_awful.c   **** 				t->ack_num += iptotallen;
 2113               	 .loc 2 278 0
 2114 0568 C60E      	 add r12,r22
 2115 056a D71E      	 adc r13,r23
 2116 056c E11C      	 adc r14,__zero_reg__
 2117 056e F11C      	 adc r15,__zero_reg__
 2118               	.LVL105:
 2119 0570 CD86      	 std Y+13,r12
 2120 0572 DE86      	 std Y+14,r13
 2121 0574 EF86      	 std Y+15,r14
 2122 0576 F88A      	 std Y+16,r15
 285:tcp_awful.c   **** 			if( !TCPReceiveData( rsck, iptotallen ) )
 2123               	 .loc 2 285 0
 2124 0578 892D      	 mov r24,r9
 2125 057a 0E94 0000 	 call TCPReceiveData
 2126               	.LVL106:
 2127 057e 8111      	 cpse r24,__zero_reg__
 2128 0580 00C0      	 rjmp .L31
 287:tcp_awful.c   **** 				if( t->time_since_sent )
 2129               	 .loc 2 287 0
 2130 0582 8F89      	 ldd r24,Y+23
 2131 0584 8823      	 tst r24
 2132 0586 01F0      	 breq .L50
 290:tcp_awful.c   **** 					TCPs[0].seq_num = t->seq_num;//t->seq_num;
 2133               	 .loc 2 290 0
 2134 0588 8985      	 ldd r24,Y+9
 2135 058a 9A85      	 ldd r25,Y+10
 2136 058c AB85      	 ldd r26,Y+11
 2137 058e BC85      	 ldd r27,Y+12
 2138 0590 8093 0000 	 sts TCPs+9,r24
 2139 0594 9093 0000 	 sts TCPs+9+1,r25
 2140 0598 A093 0000 	 sts TCPs+9+2,r26
 2141 059c B093 0000 	 sts TCPs+9+3,r27
 291:tcp_awful.c   **** 					TCPs[0].ack_num = t->ack_num;
 2142               	 .loc 2 291 0
 2143 05a0 8D85      	 ldd r24,Y+13
 2144 05a2 9E85      	 ldd r25,Y+14
 2145 05a4 AF85      	 ldd r26,Y+15
 2146 05a6 B889      	 ldd r27,Y+16
 2147 05a8 8093 0000 	 sts TCPs+13,r24
 2148 05ac 9093 0000 	 sts TCPs+13+1,r25
 2149 05b0 A093 0000 	 sts TCPs+13+2,r26
 2150 05b4 B093 0000 	 sts TCPs+13+3,r27
 292:tcp_awful.c   **** 					TCPs[0].sendtype = ACKBIT;
 2151               	 .loc 2 292 0
 2152 05b8 80E1      	 ldi r24,lo8(16)
 2153 05ba 8093 0000 	 sts TCPs+27,r24
 2154               	.LVL107:
 294:tcp_awful.c   **** 					goto send_early;
 2155               	 .loc 2 294 0
 2156 05be 00C0      	 rjmp .L51
 2157               	.LVL108:
GAS LISTING  			page 81


 2158               	.L50:
 298:tcp_awful.c   **** 					t->sendtype = ACKBIT;
 2159               	 .loc 2 298 0
 2160 05c0 80E1      	 ldi r24,lo8(16)
 2161 05c2 8B8F      	 std Y+27,r24
 299:tcp_awful.c   **** 					goto send_early;
 2162               	 .loc 2 299 0
 2163 05c4 00C0      	 rjmp .L42
 2164               	.LVL109:
 2165               	.L37:
 2166               	.LDL1:
 318:tcp_awful.c   **** 	TCPs[0].ack_num = sequence_num;
 2167               	 .loc 2 318 0
 2168 05c6 C092 0000 	 sts TCPs+13,r12
 2169 05ca D092 0000 	 sts TCPs+13+1,r13
 2170 05ce E092 0000 	 sts TCPs+13+2,r14
 2171 05d2 F092 0000 	 sts TCPs+13+3,r15
 319:tcp_awful.c   **** 	TCPs[0].seq_num = ack_num;
 2172               	 .loc 2 319 0
 2173 05d6 4092 0000 	 sts TCPs+9,r4
 2174 05da 5092 0000 	 sts TCPs+9+1,r5
 2175 05de 6092 0000 	 sts TCPs+9+2,r6
 2176 05e2 7092 0000 	 sts TCPs+9+3,r7
 320:tcp_awful.c   **** 	TCPs[0].sendtype = RSTBIT | FINBIT | ACKBIT;
 2177               	 .loc 2 320 0
 2178 05e6 85E1      	 ldi r24,lo8(21)
 2179 05e8 8093 0000 	 sts TCPs+27,r24
 321:tcp_awful.c   **** 	TCPs[0].state = 0;
 2180               	 .loc 2 321 0
 2181 05ec 8091 0000 	 lds r24,TCPs
 2182 05f0 887F      	 andi r24,lo8(-8)
 2183 05f2 8093 0000 	 sts TCPs,r24
 2184 05f6 00C0      	 rjmp .L51
 2185               	.LVL110:
 2186               	.L42:
 135:tcp_awful.c   **** 	while( hlen-- )
 2187               	 .loc 2 135 0
 2188 05f8 01E0      	 ldi r16,lo8(1)
 2189 05fa 10E0      	 ldi r17,0
 2190               	.LVL111:
 2191               	.L52:
 332:tcp_awful.c   **** 	write_tcp_header( rsck );
 2192               	 .loc 2 332 0
 2193 05fc 802F      	 mov r24,r16
 2194 05fe 0E94 0000 	 call write_tcp_header
 2195               	.LVL112:
 2196               	.L38:
 334:tcp_awful.c   **** 	EndTCPWrite( rsck );
 2197               	 .loc 2 334 0
 2198 0602 802F      	 mov r24,r16
 2199               	 
 336:tcp_awful.c   **** }
 2200               	 .loc 2 336 0
 2201 0604 DF91      	 pop r29
 2202 0606 CF91      	 pop r28
 2203 0608 1F91      	 pop r17
 2204 060a 0F91      	 pop r16
GAS LISTING  			page 82


 2205 060c FF90      	 pop r15
 2206 060e EF90      	 pop r14
 2207 0610 DF90      	 pop r13
 2208 0612 CF90      	 pop r12
 2209 0614 BF90      	 pop r11
 2210 0616 AF90      	 pop r10
 2211               	.LVL113:
 2212 0618 9F90      	 pop r9
 2213               	.LVL114:
 2214 061a 8F90      	 pop r8
 2215               	.LVL115:
 2216 061c 7F90      	 pop r7
 2217 061e 6F90      	 pop r6
 2218 0620 5F90      	 pop r5
 2219 0622 4F90      	 pop r4
 2220               	.LVL116:
 2221 0624 3F90      	 pop r3
 2222               	.LVL117:
 334:tcp_awful.c   **** 	EndTCPWrite( rsck );
 2223               	 .loc 2 334 0
 2224 0626 0C94 0000 	 jmp EndTCPWrite
 2225               	.LVL118:
 2226               	.L51:
 328:tcp_awful.c   **** 		TCPs[0].dest_addr = *((uint32_t*)ipsource);
 2227               	 .loc 2 328 0
 2228 062a 8091 0000 	 lds r24,ipsource
 2229 062e 9091 0000 	 lds r25,ipsource+1
 2230 0632 A091 0000 	 lds r26,ipsource+2
 2231 0636 B091 0000 	 lds r27,ipsource+3
 2232 063a 8093 0000 	 sts TCPs+5,r24
 2233 063e 9093 0000 	 sts TCPs+5+1,r25
 2234 0642 A093 0000 	 sts TCPs+5+2,r26
 2235 0646 B093 0000 	 sts TCPs+5+3,r27
 329:tcp_awful.c   **** 		TCPs[0].dest_port = remoteport;
 2236               	 .loc 2 329 0
 2237 064a 8091 0000 	 lds r24,remoteport
 2238 064e 9091 0000 	 lds r25,remoteport+1
 2239 0652 9093 0000 	 sts TCPs+3+1,r25
 2240 0656 8093 0000 	 sts TCPs+3,r24
 330:tcp_awful.c   **** 		TCPs[0].this_port = localport;
 2241               	 .loc 2 330 0
 2242 065a 8091 0000 	 lds r24,localport
 2243 065e 9091 0000 	 lds r25,localport+1
 2244 0662 9093 0000 	 sts TCPs+1+1,r25
 2245 0666 8093 0000 	 sts TCPs+1,r24
 2246 066a 00E0      	 ldi r16,0
 2247 066c 10E0      	 ldi r17,0
 2248               	.LVL119:
 2249 066e 00C0      	 rjmp .L52
 2250               	.LVL120:
 2251               	.L31:
 2252               	 
 336:tcp_awful.c   **** }
 2253               	 .loc 2 336 0
 2254 0670 DF91      	 pop r29
 2255 0672 CF91      	 pop r28
 2256 0674 1F91      	 pop r17
GAS LISTING  			page 83


 2257 0676 0F91      	 pop r16
 2258               	.LVL121:
 2259 0678 FF90      	 pop r15
 2260 067a EF90      	 pop r14
 2261 067c DF90      	 pop r13
 2262 067e CF90      	 pop r12
 2263 0680 BF90      	 pop r11
 2264 0682 AF90      	 pop r10
 2265               	.LVL122:
 2266 0684 9F90      	 pop r9
 2267               	.LVL123:
 2268 0686 8F90      	 pop r8
 2269               	.LVL124:
 2270 0688 7F90      	 pop r7
 2271 068a 6F90      	 pop r6
 2272 068c 5F90      	 pop r5
 2273 068e 4F90      	 pop r4
 2274               	.LVL125:
 2275 0690 3F90      	 pop r3
 2276               	.LVL126:
 2277 0692 0895      	 ret
 2278               	 .cfi_endproc
 2279               	.LFE17:
 2281               	.global RequestClosure
 2283               	RequestClosure:
 2284               	.LFB20:
 407:tcp_awful.c   **** {
 2285               	 .loc 2 407 0
 2286               	 .cfi_startproc
 2287               	.LVL127:
 2288 0694 CF93      	 push r28
 2289               	.LCFI36:
 2290               	 .cfi_def_cfa_offset 3
 2291               	 .cfi_offset 28,-2
 2292               	 
 2293               	 
 2294               	 
 2295               	.L__stack_usage =1
 2296 0696 C82F      	 mov r28,r24
 408:tcp_awful.c   **** 	if( !TCPs[c].state || TCPs[c].state == CLOSING_WAIT ) return;
 2297               	 .loc 2 408 0
 2298 0698 282F      	 mov r18,r24
 2299 069a 30E0      	 ldi r19,0
 2300 069c C901      	 movw r24,r18
 2301               	.LVL128:
 2302 069e 6EE1      	 ldi r22,lo8(30)
 2303 06a0 70E0      	 ldi r23,0
 2304 06a2 0E94 0000 	 call __mulhi3
 2305 06a6 FC01      	 movw r30,r24
 2306 06a8 E050      	 subi r30,lo8(-(TCPs))
 2307 06aa F040      	 sbci r31,hi8(-(TCPs))
 2308 06ac 8081      	 ld r24,Z
 2309 06ae 982F      	 mov r25,r24
 2310 06b0 9570      	 andi r25,lo8(5)
 2311 06b2 01F0      	 breq .L68
 409:tcp_awful.c   **** 	TCPs[c].sendtype = FINBIT|ACKBIT;//RSTBIT;
 2312               	 .loc 2 409 0
GAS LISTING  			page 84


 2313 06b4 91E1      	 ldi r25,lo8(17)
 2314 06b6 938F      	 std Z+27,r25
 410:tcp_awful.c   **** 	TCPs[c].state = CLOSING_WAIT;
 2315               	 .loc 2 410 0
 2316 06b8 887F      	 andi r24,lo8(-8)
 2317 06ba 8260      	 ori r24,lo8(2)
 2318 06bc 8083      	 st Z,r24
 411:tcp_awful.c   **** 	TCPs[c].time_since_sent = 0;
 2319               	 .loc 2 411 0
 2320 06be C901      	 movw r24,r18
 2321 06c0 6EE1      	 ldi r22,lo8(30)
 2322 06c2 70E0      	 ldi r23,0
 2323 06c4 0E94 0000 	 call __mulhi3
 2324 06c8 FC01      	 movw r30,r24
 2325 06ca E050      	 subi r30,lo8(-(TCPs))
 2326 06cc F040      	 sbci r31,hi8(-(TCPs))
 2327 06ce 178A      	 std Z+23,__zero_reg__
 2328               	.LVL129:
 2329               	.LBB81:
 2330               	.LBB82:
 427:tcp_awful.c   **** 	write_tcp_header( c );
 2331               	 .loc 2 427 0
 2332 06d0 8C2F      	 mov r24,r28
 2333 06d2 0E94 0000 	 call write_tcp_header
 2334               	.LVL130:
 2335               	.LBE82:
 2336               	.LBE81:
 416:tcp_awful.c   **** 	EndTCPWrite( c );	
 2337               	 .loc 2 416 0
 2338 06d6 8C2F      	 mov r24,r28
 2339               	 
 417:tcp_awful.c   **** }
 2340               	 .loc 2 417 0
 2341 06d8 CF91      	 pop r28
 2342               	.LVL131:
 416:tcp_awful.c   **** 	EndTCPWrite( c );	
 2343               	 .loc 2 416 0
 2344 06da 0C94 0000 	 jmp EndTCPWrite
 2345               	.LVL132:
 2346               	.L68:
 2347               	 
 417:tcp_awful.c   **** }
 2348               	 .loc 2 417 0
 2349 06de CF91      	 pop r28
 2350 06e0 0895      	 ret
 2351               	 .cfi_endproc
 2352               	.LFE20:
 2354               	.global EmitTCP
 2356               	EmitTCP:
 2357               	.LFB25:
 487:tcp_awful.c   **** 
 488:tcp_awful.c   **** void EmitTCP( uint8_t c )
 489:tcp_awful.c   **** {
 2358               	 .loc 2 489 0
 2359               	 .cfi_startproc
 2360               	.LVL133:
 2361               	 
GAS LISTING  			page 85


 2362               	 
 2363               	 
 2364               	.L__stack_usage =0
 490:tcp_awful.c   **** 	struct tcpconnection * t = &TCPs[c];
 2365               	 .loc 2 490 0
 2366 06e2 90E0      	 ldi r25,0
 2367 06e4 6EE1      	 ldi r22,lo8(30)
 2368 06e6 70E0      	 ldi r23,0
 2369 06e8 0E94 0000 	 call __mulhi3
 2370               	.LVL134:
 491:tcp_awful.c   **** 	et_xmitpacket( 0, t->sendlength );
 2371               	 .loc 2 491 0
 2372 06ec 8050      	 subi r24,lo8(-(TCPs))
 2373 06ee 9040      	 sbci r25,hi8(-(TCPs))
 2374 06f0 FC01      	 movw r30,r24
 2375 06f2 648D      	 ldd r22,Z+28
 2376 06f4 758D      	 ldd r23,Z+29
 2377 06f6 80E0      	 ldi r24,0
 2378 06f8 90E0      	 ldi r25,0
 2379 06fa 0C94 0000 	 jmp et_xmitpacket
 2380               	.LVL135:
 2381               	 .cfi_endproc
 2382               	.LFE25:
 2384               	 .comm TCPs,60,1
 2385               	.Letext0:
 2386               	 .file 3 "/usr/lib/avr/include/stdint.h"
 2387               	 .file 4 "tcp_awful.h"
 2388               	 .file 5 "iparpetc.h"
GAS LISTING  			page 86


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tcp_awful.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:933    .text:0000000000000000 et_push8
    {standard input}:966    .text:0000000000000028 PUSH32
    {standard input}:1028   .text:0000000000000060 POP32
    {standard input}:1110   .text:00000000000000ac write_tcp_header
                            *COM*:000000000000003c TCPs
    {standard input}:1230   .text:000000000000014c InitTCP
    {standard input}:1261   .text:0000000000000162 GetFreeConnection
    {standard input}:1300   .text:0000000000000180 TickTCP
    {standard input}:1365   .text:00000000000001c6 TCPCanSend
    {standard input}:1406   .text:00000000000001f0 StartTCPWrite
    {standard input}:1423   .text:00000000000001f4 FinishTCPPacket
    {standard input}:1549   .text:000000000000026a EndTCPWrite
    {standard input}:1616   .text:00000000000002bc HandleTCP
    {standard input}:2283   .text:0000000000000694 RequestClosure
    {standard input}:2356   .text:00000000000006e2 EmitTCP
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
ETsendplace
ETbuffer
et_pop8
__mulhi3
sendbaseaddress
et_pushblob
MyMAC
et_push16
send_ip_header
IsSendBufferFree
et_start_checksum
ETchecksum
et_xmitpacket
localport
remoteport
ipsource
et_pop16
TCPReceiveSyn
macfrom
TCPConnectionClosing
TCPReceiveData
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "net_compat.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.4bd8312f431074a0,"",@progbits
  10 0000 789C 6D8C 	 .string "x\234m\214M\n\002Q\f\203\277\274(3\n.\374\033\025Q\024\\z\b\357\341\025\274\243W\363\005F\235\305\224\322$m\232Ba\254\336=v\310Li\232\326\263*\347\030\312S/q\357\211b\313\370^\022\370\263\230\"\",\036\301\311m\344\3370P\213\177\026\355`\277\024\253\nk\263\211\336\326H\272\260]\330>\254\366AG\2378\373\342\253\370"
  10      4D0A 0251 
  10      0C83 BFBC 
  10      2833 0A2E 
  10      FC1B 1551 
  11 006f 4EA4 0C54 	 .ascii "N\244\fT"
  12               	 .text
  13               	 .section .gnu.lto_.inline.4bd8312f431074a0,"",@progbits
  14 0000 789C 9D52 	 .ascii "x\234\235R1H\003A\020\234\275\277\377\277\377Dc\214\306$\242"
  14      3148 0341 
  14      109C BDBF 
  14      FFBF FF44 
  14      638C C624 
  15 0015 8918 2CAD 	 .ascii "\211\030,\255\254,\004\033\033!\275\330\212Z\330\333\212\240"
  15      AC2C 041B 
  15      1B21 BDD8 
  15      8A5A D8DB 
  15      8AA0 
  16 0027 060B 0916 	 .ascii "\006\013\t\026vB\260P\264\263\267H\221\302\302\302Z\260\221("
  16      7642 B050 
  16      B4B3 B748 
  16      91C2 C2C2 
  16      5AB0 9128 
  17 003b 6225 8290 	 .ascii "b%\202\220N\367\356?\027\023\304\302+v\217\335\231\275\231\377"
  17      4EF7 EE3F 
  17      1713 C4C2 
  17      2B76 8FDD 
  17      99BD 99FF 
  18 004f 1510 F8ED 	 .ascii "\025\020\370\355\244\234(g\201\300'\210\344\3152\274z\321\200"
  18      A49C 2867 
  18      81C0 2788 
  18      E4CD 32BC 
  18      7AD1 80
  19 0062 1DF8 1E97 	 .ascii "\035\370\036\227Tc\301\226\\\270\222K\262^\264%\037\231G\227"
  19      5463 C196 
  19      5CB8 924B 
  19      B25E B425 
  19      1F99 4797 
  20 0076 0488 EF42 	 .ascii "\004\210\357B\007g\262q\274\022\265\305}JBqM!\367\005\342\243"
  20      0767 B271 
  20      BC12 B5C5 
  20      7D4A 4271 
  20      4D21 F705 
  21 008c FBE5 87CF 	 .ascii "\373\345\207\317\301\250\357\275\317JH\256\005\310\034qS\344"
  21      C1A8 EFBD 
  21      CF4A 48AE 
  21      05C8 1C71 
  21      53E4 
GAS LISTING  			page 2


  22 009e EE9E 7D3B 	 .ascii "\356\236};Y$L`N87\177\313\017\210\245\217\003\307\266\345\200"
  22      5924 4C60 
  22      4E38 377F 
  22      CB0F 88A5 
  22      8F03 C7B6 
  23 00b4 9608 5018 	 .ascii "\226\bP\030c\251V\241\220\272\215\236\\\253\324*\030P\2054\217"
  23      63A9 56A1 
  23      90BA 8D9E 
  23      5CAB D42A 
  23      1850 8534 
  24 00c9 29B7 4FC8 	 .ascii ")\267O\310\2161\364\0164\r\277\252U\0323\336[UF0ip\\\034FP\350"
  24      8E31 F40E 
  24      340D BFAA 
  24      551A 33DE 
  24      5B55 4630 
  25 00e4 F31F ABE4 	 .ascii "\363\037\253\344\220AxA\261I\021\2764\275.\331\270\030Ax\251"
  25      9041 7841 
  25      B149 11BE 
  25      34BD 2ED9 
  25      B818 4178 
  26 00f9 4D86 FB2D 	 .ascii "M\206\373-\357\007\235\264\360Q$\256-7\331z\362{\271\214\310"
  26      EF07 9DB4 
  26      F051 24AE 
  26      2D37 D97A 
  26      F27B B98C 
  27 010e 2238 D56C 	 .ascii "\"8\325l\365z\356\366\263\307\376~\231\0219\250|\354K\373\354"
  27      F57A EEF6 
  27      B3C7 FE7E 
  27      9911 39A8 
  27      7CEC 4BFB 
  28 0123 FE9D EEB7 	 .ascii "\376\235\356\267\213S\036\351\024Il\256\322\026\271\272\275a"
  28      8B53 1EE9 
  28      1449 6CAE 
  28      D216 B9BA 
  28      BD61 
  29 0135 6F14 075E 	 .ascii "o\024\007^\214\316\f\376\022C\240]\277$E\224\220>\333\226p\017"
  29      8CCE 0CFE 
  29      1243 A05D 
  29      BF24 4594 
  29      903E DB96 
  30 014b A7A5 1138 	 .ascii "\247\245\0218\016\245w(l/Z\315\023pxODg\002\237I\344w(^\241h"
  30      0EA5 7728 
  30      6C2F 5ACD 
  30      1370 784F 
  30      4467 029F 
  31 0166 4566 AEF6 	 .ascii "Ef\256\366RvE\224Y\241\022\224K\016\326\265\032O\203\326\314"
  31      5276 4594 
  31      59A1 1294 
  31      4B0E D6B5 
  31      1A4F 83D6 
  32 017b 4DC4 BA64 	 .ascii "M\304\272dg\236\322\212D3P\306\333\324\277X\370\006\347kQ\373"
  32      679E D28A 
  32      4433 50C6 
  32      DBD4 BF58 
  32      F806 E76B 
  33               	 .text
  34               	 .section .gnu.lto_.pureconst.4bd8312f431074a0,"",@progbits
GAS LISTING  			page 3


  35 0000 789C 6362 	 .string "x\234cb`b\320e\200"
  35      6062 D065 
  35      8000 
  36 000a 3106 0966 	 .string "1\006\tf)V\026vV\016SN).)^)A\t!\ta)\021\013Q\t1KqI\t\tIIi\tY\0069K\005\tE\026"
  36      2956 1676 
  36      560E 534E 
  36      292E 295E 
  36      2941 0921 
  37 0038 5902 041B 	 .ascii "Y\002\004\033"
  38               	 .text
  39               	 .section .gnu.lto_et_push8.4bd8312f431074a0,"",@progbits
  40 0000 789C 8D50 	 .string "x\234\215P=K\003A\020\235\331\335;\202\030\271_`$`\231DS\331YY\330\013\021\024$$\021\tg<H:\213\354%\021\0026\301JL\025$`!\230\312J4\225(\242 \244\273&\225?\302f\235\275/5X8\260\373vw\346\2757\263\f\030\314F\236\226\207"
  40      3D4B 0341 
  40      109D D9DD 
  40      3B82 18B9 
  40      5F60 2460 
  41 0058 1942 3400 	 .string "\031B4"
  42 005c 59EF 0DC0 	 .string "Y\357\r\300M0\306'9\220s\342n\021\344<G\021<\013D}"
  42      4D30 C627 
  42      3990 73E2 
  42      6E11 E43C 
  42      4711 3C0B 
  43 0073 8426 E302 	 .ascii "\204&\343\002\233\273\2505X\032\006R\236M\207\375{\343d$\273"
  43      9BBB A835 
  43      581A 0652 
  43      9E4D 87FD 
  43      7BE3 6424 
  44 0088 52A9 A68D 	 .ascii "R\251\246\215df!\354#\354\240\215h\371\300f\032\b\210\322{l-"
  44      6466 21EC 
  44      23EC A08D 
  44      68F9 C066 
  44      1A08 88D2 
  45 009f 9FCB CE58 	 .ascii "\237\313\316X\251u\237\227\372\223\347\3407\361\206\215\247J"
  45      A975 9F97 
  45      FA93 E7E0 
  45      37F1 868D 
  45      A74A 
  46 00b1 5D9D 9A09 	 .ascii "]\235\232\t\016e\034`\032\004\341%\241\211\016\352B\003:R\366"
  46      0E65 1C60 
  46      1A04 E125 
  46      A189 0EEA 
  46      4203 3A52 
  47 00c6 9640 2B51 	 .ascii "\226@+Q\024h\327\255o#\323\310_\241\365\334K\225qHCW\221\367"
  47      1468 D7AD 
  47      6F23 D3C8 
  47      5FA1 F5DC 
  47      4B95 7148 
  48 00de E1C2 95D2 	 .ascii "\341\302\225\322\"\367c\370\244\t\350\304\003?m\317C\327'\350"
  48      22F7 63F8 
  48      A409 E8C4 
  48      033F 6DCF 
  48      43D7 27E8 
  49 00f2 7CB8 0F18 	 .ascii "|\270\017\030\263t\016\324\217\266H\236\303$G\352\355n\3736\031"
  49      B374 0ED4 
  49      8FB6 489E 
  49      C324 47EA 
  49      ED6E FB36 
GAS LISTING  			page 4


  50 0107 158A A856 	 .ascii "\025\212\250V\227\222\363f\220\370\217)\221}\312\313\250\036"
  50      9792 F366 
  50      90F8 8F29 
  50      917D CACB 
  50      A81E 
  51 0119 9032 702D 	 .ascii "\2202p-)<\323F\021\013\030\261\200\351 \013\005\314P \352\276"
  51      293C D346 
  51      110B 18B1 
  51      80E9 200B 
  51      05CC 5020 
  52 012f 1ABE 5093 	 .ascii "\032\276P\223\302\377\203wp\307\3410Q\024\350\357(\245%\222\265"
  52      C2FF 8377 
  52      70C7 E130 
  52      5114 E8EF 
  52      28A5 2592 
  53 0144 4A63 AF74 	 .ascii "Jc\257tt\350\024\033\331\003X\330\330\252Wje\307.\226*\331\325"
  53      74E8 141B 
  53      D903 58D8 
  53      D8AA 576A 
  53      65C7 2E96 
  54 015b B55F D7FC 	 .ascii "\265_\327\374\312\027F\255~\325"
  54      CA17 46AD 
  54      7ED5 
  55               	 .text
  56               	 .section .gnu.lto_et_pop8.part.0.4bd8312f431074a0,"",@progbits
  57 0000 789C 8D92 	 .ascii "x\234\215\222AK\033Q\020\307g\336{\333\304\203\220C?\200\315"
  57      414B 1B51 
  57      10C7 67DE 
  57      7BDB C483 
  57      9043 3F80 
  58 0015 B5B0 8B11 	 .ascii "\265\260\213\021\241Wk\025\204\036J\212M\300\202\004\263bl\262"
  58      A157 6B15 
  58      841E 4A8A 
  58      4DC0 8204 
  58      B362 6CB2 
  59 0029 0931 88E0 	 .ascii "\t1\210\340!/\352!\304BC\361\244'\221PJ\017\321\223\264\007\r"
  59      212F EA21 
  59      C442 43F1 
  59      A427 9150 
  59      4A0F D193 
  60 0040 8207 1185 	 .ascii "\202\007\021\205\036\275\345+\364T\333\203\317\231}\255h,\324"
  60      1EBD E52B 
  60      F454 DB83 
  60      CF99 7DAD 
  60      682C D4
  61 0053 85DD FFEC 	 .ascii "\205\335\377\354\233\375\315\233\371\277\025 \240\367zJ\367;"
  61      9BFD CD9B 
  61      F9BF 1520 
  61      A0F7 7A4A 
  61      F73B 
  62 0065 5A5E 2245 	 .ascii "Z^\"E\007P5\317)P(B\025(YkQ\211\310\001 T\225\220X}\213\f;q\330"
  62      0750 35CF 
  62      2950 2842 
  62      1528 596B 
  62      5189 C801 
  63 0084 D67A B3DB 	 .ascii "\326z\263\333\332?\301\265FW7\365\225\251b\236s\263\bS\024a4"
  63      DA3F C1B5 
GAS LISTING  			page 5


  63      4657 37F5 
  63      95A9 629E 
  63      73B3 0853 
  64 009b 1481 7777 	 .ascii "\024\201ww\265\234\256ot\220\031C\237\310\0071\037;?O?8\255]"
  64      B59C AE6F 
  64      7490 1943 
  64      9FC8 0731 
  64      1F3B 3F4F 
  65 00b3 5DD7 C654 	 .ascii "]\327\306T\363\250\004\304\360\006\214Y\220\247,a/\251\033\267"
  65      F3A8 04C4 
  65      F006 8C59 
  65      90A7 2C61 
  65      2FA9 1BB7 
  66 00c7 7623 EEC9 	 .ascii "v#\356\311?\271\373\033\036\256\177y\245W;\372\322\230H\b&\376"
  66      3FB9 FB1B 
  66      1EAE 7F79 
  66      A557 3BFA 
  66      D298 4808 
  67 00dd 07B6 85EE 	 .ascii "\007\266\205\356\032\363\365\260/\202\220\305O\030'\337\263\270"
  67      1AF3 F5B0 
  67      2F82 90C5 
  67      4F18 27DF 
  67      B3B8 
  68 00ef 432A 81CC 	 .ascii "C*\201\314Q\220\267\356\301\232\326\315\201pn\272R\364d\217S"
  68      5190 B7EE 
  68      C19A D6CD 
  68      8170 6EBA 
  68      52F4 648F 
  69 0104 A858 651A 	 .ascii "\250Xe\032E\250g\260rry\360\013\263\370\231\016h\036q\0136kZ"
  69      45A8 67B0 
  69      7272 79F0 
  69      0BB3 F899 
  69      0E68 1E71 
  70 011c C7A8 9765 	 .ascii "\307\250\227e\370MFP\344\330q\271\031\347O\023g\260Z\227\177"
  70      F84D 4650 
  70      E4D8 71B9 
  70      19E7 4F13 
  70      67B0 5A97 
  71 0131 1941 1827 	 .ascii "\031A\030'\22512\314\255L\330\324Cj\021\316\310\321\267\343\366"
  71      9531 32CC 
  71      AD4C D8D4 
  71      436A 11CE 
  71      C8D1 B7E3 
  72 0146 FB83 BDC7 	 .ascii "\373\203\275\3077m\333\240\263~\025\007\260\325f\021- \271\356"
  72      376D DBA0 
  72      B37E 1507 
  72      B0D5 6611 
  72      2D20 B9EE 
  73 015a 468D AA3D 	 .ascii "F\215\252=\342:\221\037\326\257\310-\223\322t\342<\336w\372\273"
  73      E23A 911F 
  73      D6AF C82D 
  73      93D2 74E2 
  73      3CDE 77FA 
  74 016f 1851 BC78 	 .ascii "\030Q\274x\001\212`\021\272\201\234\346\260?\360+\3233\305B)"
  74      018A 6011 
  74      BA81 9CE6 
  74      B03F F02B 
GAS LISTING  			page 6


  74      D333 C542 
  75 0184 5371 6720 	 .ascii "Sqg 6^\316\024\374\211 \351\0272\271\300\035\034\352]H\364.\f"
  75      365E CE14 
  75      FC89 20E9 
  75      1732 B9C0 
  75      1D1C EA5D 
  76 019c 0EBB DECB 	 .ascii "\016\273\336\313\311\361\021\357E9\267\350\227\027\274\311\327"
  76      C9F1 11EF 
  76      4539 B7E8 
  76      9717 BCC9 
  76      D7
  77 01ad CFBD D162 	 .ascii "\317\275\321b\331\367F\336$\237y\256ku,\310\226\212\271\2402"
  77      D9F7 46DE 
  77      249F 79AE 
  77      6B75 2CC8 
  77      968A B9A0 
  78 01c2 CD6F EE1C 	 .ascii "\315o\356\034\\\003\277\242\271y"
  78      5C03 BFA2 
  78      B979 
  79               	 .text
  80               	 .section .gnu.lto_IsSendBufferFree.4bd8312f431074a0,"",@progbits
  81 0000 789C 6362 	 .string "x\234cb`b@\007\222@\374\017\210\025\200\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\244\224Q\211aaC\303\244\007KOoem\335\320\320\321\360\377\177}\016#\320L\001F\2064F\206h\306\034FF\0010\305\204f\317z\246\003\017\376\377\337\321\316\306\312\304\220\302\270\020h\0203C\016#3\013\220`\001J\2632\26444L"
  81      6062 4007 
  81      9240 FC0F 
  81      8815 8098 
  81      9199 8191 
  82 0078 BA20 0D6C 	 .string "\272 \rlO8\220\004Y\036\301\310\004\242\231\31724\235\374 \225\302\270\230\221\225!\213\221i6\303\254\306\206\006\001\240\315\325\f\277\200\256"
  82      4F38 9004 
  82      591E C1C8 
  82      04A2 99CF 
  82      3234 9DFC 
  83 00a6 B258 0BC0 	 .string "\262X\013\300\032AV\263B\255<\313\320|\236\031\246\207\031\250\r$\311\006\221iz\327\374\215\021&\307\002\224f`\270\310\200\020\200\030\020\316\310\b\262\035\344\023\336\274\324\222\370\344\374\334\202\304\022\275d\006\001\267\242\304\334T\377\322\022\237\324\274\364\222\f=\003"
  83      1A41 56B3 
  83      42AD 3CCB 
  83      D07C 9E19 
  83      A687 19A8 
  84 00f9 25B0 469E 	 .ascii "%\260F\236"
  85               	 .text
  86               	 .section .gnu.lto_crc32b.4bd8312f431074a0,"",@progbits
  87 0000 789C 8D54 	 .string "x\234\215T\317KTQ\024>\347\336\367k\304\321QG3(0w-\262e-\372'\242\205\202A\230c\340k4)\027\325\242y\343\033K&\013\223YDn\024\223\220\242\037\253H\003GhPA\003q!B\213\241(\211h6-\263^\347\336\373\356\214\016-\2740\357\336\373\235\373}\347;\347\3357\f\030T\217\036\372\2351\001N\320\214\021@6\361\021 \3550\264\325\202\243\251\026\206Z,;&3\336\025"
  87      CF4B 5451 
  87      143E E7DE 
  87      F76B C4D1 
  87      5147 3328 
  88 0083 BC1A 6BDB 	 .ascii "\274\032k\333\001\257\326R'\227\035\233\361\361\025\201;\031"
  88      01AF D652 
  88      2797 1D9B 
  88      F1F1 1581 
  88      3B19 
  89 0095 9B70 0751 	 .ascii "\233p\007Q\340\200\220b\3340-\333\301\324E\024)\315v\230\361"
  89      E080 9062 
  89      DC30 2DDB 
  89      C1D4 4514 
  89      29CD 7698 
  90 00aa BCC9 6261 	 .ascii "\274\311ba\366;\033\315\026\275\t\357o\220\302$\222\273\030\302"
  90      F63B 1BCD 
  90      16BD 09EF 
GAS LISTING  			page 7


  90      6F90 C224 
  90      92BB 18C2 
  91 00be 1584 6EDA 	 .ascii "\025\204n\332`LN\325\216%u\"\377\347\336\270\351\275\366\306"
  91      604C 4ED5 
  91      8E25 7522 
  91      FFE7 DEB8 
  91      E9BD F6C6 
  92 00d2 BC20 4825 	 .ascii "\274 H%\2211\210\037\216\350\275\315y\036\246\247\275\275 \340"
  92      9131 881F 
  92      8EE8 BDCD 
  92      791E A6A7 
  92      BDBD 20E0 
  93 00e6 92D8 7228 	 .ascii "\222\330r(\342d>XyhW2r\006\255\025b\233\"\032\377%>\312>0*D\203"
  93      E264 3E58 
  93      7968 5732 
  93      7206 AD15 
  93      629B 221A 
  94 0103 C1F1 0AD1 	 .ascii "\301\361\n\321QD<H|\305\362\305 \370\2644=\276\207\363\354\b"
  94      5144 3C48 
  94      7CC5 F2C5 
  94      20F8 B434 
  94      3DBE 87F3 
  95 0119 C290 3045 	 .ascii "\302\2200E\017\016\t\234\305vJ\224\3009\232M$\320\022\021\233"
  95      0F0E 099C 
  95      C576 4A94 
  95      C039 9A4D 
  95      24D0 1211 
  96 012e 56A4 96C0 	 .ascii "V\244\226\300\031\202#\264a5\220D\263\226\220yB\242\264\261\352"
  96      1982 23B4 
  96      6135 9044 
  96      B396 9079 
  96      42A2 B4B1 
  97 0143 C4C1 7AB1 	 .ascii "\304\301z\261\212\021\374\214\340\006\261i\024\217&\021\213\207"
  97      8A11 FC8C 
  97      E006 B169 
  97      148F 2611 
  97      8B87 
  98 0155 B2CD 619A 	 .ascii "\262\315a\232\026\212p\361\276 C\255kS\240:\242\370J\034D94:"
  98      168A 70F1 
  98      BE20 43AD 
  98      6B53 A03A 
  98      A2F8 4A1C 
  99 016d E959 02E8 	 .ascii "\351Y\002\350BF\023_\203\221b\266\200\t|\216f\250'j\225\315\335"
  99      4246 135F 
  99      8391 62B6 
  99      8009 7C8E 
  99      66A8 276A 
 100 0184 8091 F7FE 	 .ascii "\200\221\367\376\233\270\212\271h\2714\301\0320\005\220\023\302"
 100      9BB8 8AB9 
 100      68B9 34C1 
 100      1A30 0590 
 100      13C2 
 101 0196 542B BAC8 	 .ascii "T+\272\310\300\266\303\211P\362\027s\2474\303q\205\261\r\360"
 101      C0B6 C389 
 101      50F2 1773 
 101      A734 C371 
 101      85B1 0DF0 
GAS LISTING  			page 8


 102 01aa EF73 0DD5 	 .ascii "\357s\r\325\270\030\241\200\024_\030\275\256\341\332)x\222\366"
 102      B818 A180 
 102      145F 18BD 
 102      AEE1 DA29 
 102      7892 F6
 103 01bd 3CAF 3B89 	 .ascii "<\257;\2116\035\022\026\314\260\315\3440\177L\373\023\205\320"
 103      361D 1216 
 103      CCB0 CDE4 
 103      307F 4CFB 
 103      1385 D0
 104 01d0 6949 2FF9 	 .ascii "iI/\371K\271\223Z \032\242\376\202?\250\261:\027\031E\252=\327"
 104      4BB9 935A 
 104      201A A2FE 
 104      823F A8B1 
 104      3A17 1945 
 105 01e7 49CD E2E3 	 .ascii "I\315\342\343\202\255U\347t\3256\350z\f\240\217\207\n\362\027"
 105      82AD 55E7 
 105      74D5 36E8 
 105      7A0C A08F 
 105      870A F217 
 106 01fb FDDD DC69 	 .ascii "\375\335\334i\255X\357\"\212\203\034U{\346\375;:\024\243\350"
 106      AD58 EF22 
 106      8A83 1C55 
 106      7BE6 FD3B 
 106      3A14 A3E8 
 107 020f BE4C AAF3 	 .ascii "\276L\252\363\004KS/\375\037\225\2564\204\"L\211P\206oL\307\032"
 107      044B 532F 
 107      FD1F 95AE 
 107      3484 224C 
 107      8950 866F 
 108 0226 8921 62D6 	 .ascii "\211!b\326\364\335\317?\353 \254\350\266\0167IvcuEM\362\334\230"
 108      F4DD CF3F 
 108      EB20 ACE8 
 108      B60E 3749 
 108      7663 7545 
 109 023e FF25 774E 	 .ascii "\377%wN\237\214\273h\310$\201\036\230:`oN\332\213\353zM\240\177"
 109      9F8C BB68 
 109      C824 811E 
 109      983A 606F 
 109      4EDA 8BEB 
 110 0256 0171 1BE8 	 .ascii "\001q\033\350\325\350\240!\033E\200LBnW!\263\233\256\327)\214"
 110      D5E8 A021 
 110      1B45 804C 
 110      426E 5721 
 110      B39B AED7 
 111 026c F245 5163 	 .ascii "\362EQc\007\220\232\313\3676\223\344\310x\261us\007\214\260\253"
 111      0790 9ACB 
 111      F736 93E4 
 111      C878 B175 
 111      7307 8CB0 
 112 0281 3C73 8172 	 .ascii "<s\201r\031\253\266He\251\253B~\177\345\216j\261f\272*\345\246"
 112      19AB B648 
 112      65A9 AB42 
 112      7E7F E58E 
 112      6AB1 66BA 
 113 0298 ECB3 392B 	 .ascii "\354\2639+\2354k\2336\024\"e\227*\306\017\270d\302\345\207\257"
 113      9D34 6B9B 
GAS LISTING  			page 9


 113      3614 2265 
 113      972A C60F 
 113      B864 C2E5 
 114 02ae CB53 D9A8 	 .ascii "\313S\331\250\226\346.\332\025\217t#,\266\276\331J\005Y\270\003"
 114      96E6 2EDA 
 114      158F 7423 
 114      2CB6 BED9 
 114      4A05 59B8 
 115 02c3 3C2C 823D 	 .ascii "<,\202==Oi\254\365\255\204H\343\210OC^\377\3379C\353\264H\365"
 115      3D4F 69AC 
 115      F5AD 8448 
 115      E388 4F43 
 115      5EFF DF39 
 116 02dc 4DC0 32A0 	 .ascii "M\3002\2404;\2515%\371w\024\035\354\033\276\324{m`\250g\270\243"
 116      343B A935 
 116      25F9 7714 
 116      1DEC 1BBE 
 116      D47B 6D60 
 117 02f4 1778 7FC7 	 .ascii "\027x\177\307Y\354G\327\030\350\271q\325\270|k\270\357\037p\245"
 117      59EC 47D7 
 117      18E8 B971 
 117      D5B8 7C6B 
 117      B8EF 1F70 
 118 0309 3FB3      	 .ascii "?\263"
 119               	 .text
 120               	 .section .gnu.lto_internet_checksum.4bd8312f431074a0,"",@progbits
 121 0000 789C 8553 	 .string "x\234\205S\315KTQ\024?\347\336\367\346\27573\352\3709~\224\210\233\"\"\350/h\337?\240aP\251\005\rSIMD+\237\276\021\244\\H0\022\265\032DSSk[\266\260\bR\311\240\205\304D\213\201rU\264h\323\256\3279\357\336\373t,p`\316\275\367\234\337\371\374\235'@\300\301\337]\372\177\263\001\272\351\304\024\240\230\376"
 121      CD4B 5451 
 121      143F E7DE 
 121      F7E6 BD37 
 121      33EA F839 
 122 006d 30E6 0AB4 	 .ascii "0\346\n\264\324E\252\313k\327\022r\352\035\200\237\264"
 122      D445 AACB 
 122      6BD7 1272 
 122      EA1D 809F 
 122      B4
 123 007e 8B0E F869 	 .string "\213\016\370i[$&\217\321\313a\231N\240\243\340\016z|AW\235\257]O\270\312-\031\271%\021Y\017\b\243BZv\302q\275$\216\236G.E\364B\331\367\037Tw\227*8\341W\375i\377O8\212y\244\2523\bW\020\006\350\201\231\350\020\007:Q\256\353\237\267\344C\277\270\036\206g\362(\0054\355\271\365(7\253\326\355\231X\257\206\341\362N\361\363\311.\204a,c/e\033A\220\364\230\245\207\245O\033I\231 \201\016\233=\310\243\225$a\2474 \255\275\353\330RO\"\321\300\346\21467\362\243\211E\263\326\264\350\263\225\225m,\262,\332\265\272\203\343t\222\3402m(\372\376t\217\312\240[\255l\225l\377\271?\351\207\341h\036\035\001\331\303f\244\002\003\243\350\327G\222(\351GA\207\334\0041\214sh\023h\236@9\272\301&\214WWv\023F\317\316\034V\2627\333V'b[Y\333"
 123      5B24 268F 
 123      D1CB 6199 
 123      4EA0 A3E0 
 123      0E7A 7C41 
 124 017f 75AE 7E82 	 .string "u\256~\202\021\357r\033\202\373\301\327\322Y\005\314\241\223C\021\327\366OR\007`\033\306_N\374B\203\367\036\303#\202\273\332\315\321\341\t\3653\230\217QI\002\2622\230\f\006\215.\225CI\226\232,\263Q\226\224\206\256\225N\030p:\2078\240V\255\306\241\0349\244MO\026\320\362\322\254\306]\210\243\311h\030\221B5!\366\024\312\235f\262\001ow\307l\223\rs\2300\244T"
 124      11EF 721B 
 124      82FB C1D7 
 124      D259 05CC 
 124      A193 4311 
 125 01f9 F5E0 C424 	 .ascii "\365\340\304$\325\233\226\013v\005\004\315_\274\337Y&\240#\247"
 125      D59B 960B 
 125      7605 04CD 
 125      5FBC DF59 
 125      26A0 23A7 
 126 020d 3E2D 880A 	 .string ">-\210\nH=z\361e'O-\220\366\"Wd3y\324\315Z\360\275\324i\342\327Q\374\230\215\r(\376\030\363bS\244\337\377\353\247Z\336Hn\252\372j\316\321\233\246v\314\277\347\257#\177\205!9y\002\216\034\266a\3343\347\211.Kf\032\021\245\277K]\303\270\030\325P\2578MjN\275\375\234\016\032P\003\341\024O\322\2502\021\243\r\232\240\305}\214fL+\016\217\203\207\332L\312\004\263c#\353]\263\214k\301\354\314q3\214\246\034Z\321X\303P\302\301\375i\211\354\215\377\331\237\026\223\315\343u\300\332u\260\2428\253AX:j\"5\3524\251\214\241\343tl\212?(\263\rV\016\233\035\342\275\305-\236\343\034IM\360j\360d\246\333\270\265\232\210\256*{%\230\027\306\326v\300\266&\215%K\306\332v_\004q\310\366(j\366?\355\266G\324|\017\236\316\3049:\214\366U\034\274\223\264"
 126      483D 7AF1 
 126      6527 4F2D 
 126      90F6 2257 
 126      6433 79D4 
 127 030e 1F21 FE26 	 .ascii "\037!\376&;UG}\264\376E\207\367\244\356\372\345\302\205\241\033"
GAS LISTING  			page 10


 127      3B55 477D 
 127      B4FE 4587 
 127      F7A4 EEFA 
 127      E5C2 85A1 
 128 0323 D746 2E15 	 .ascii "\327F.\025N\r\001^\265\206n\335\276f\335\031)\334\024\205\302"
 128      4E0D 015E 
 128      B586 6EDD 
 128      BE66 DD19 
 128      29DC 1485 
 129 0338 5F3D FE52 	 .ascii "_=\376R\271"
 129      B9
 130               	 .text
 131               	 .section .gnu.lto_et_pop8.4bd8312f431074a0,"",@progbits
 132 0000 789C 8D53 	 .string "x\234\215SKk\023Q\024>\347\336\334y\244i;\301\225\033)\376\200\031\262\020D\004\251\217B\301U\245mP\241\204<0%/\322\340\306Enl\004\027.\212\270\020\335X\305\307B\260\256\n\265\213:*\276hEq#%X\005Q\244H\027\n\022\n\361\334\231\311XZ\020\007\346\234\3738\347;\337w\316\f\003\006\333\2374\275?\350x\214<\232\200lf\005\240a0\246/\356\001\031\215\274w@\3068\323]N;c\345\025\320\326@\241\2420\022x\301\270w\021\325TTLC\335;\326\021\225\007\204:\343FDh:\326O\243*\212{aV\312\313k_\346\037\212\013s\362\242\354t\352\005$v\026B\016\341\024\026\020-\317\261m\214\037\260\245\265Ng}\265\371\335\331\205P@\316\225\021\220\301Y\0025i\023\351S\246_\031K\231\2702\224)\240)\345\314"
 132      4B6B 1351 
 132      143E E7DE 
 132      DC79 A469 
 132      3BC1 951B 
 133 00f3 A802 F48C 	 .ascii "\250\002\364\214\223\275\331\003Id\344\3702\234\177\371{>\221"
 133      93BD D903 
 133      4964 E4F8 
 133      329C 7FF9 
 133      7B3E 91
 134 0106 C15B 2860 	 .ascii "\301[(`\022\305u\270\326\220\322\"N\347\240M\374h%*^\236\"%\002"
 134      12C5 75B8 
 134      D690 D222 
 134      4EE7 A04D 
 134      FC68 252A 
 135 011f 322F E0E9 	 .ascii "2/\340\351\327\206\031&\251+m+\331$r\240\306\020\272\273\360"
 135      D786 1926 
 135      A92B 6D2B 
 135      D924 72A0 
 135      C610 BABB 
 136 0134 EC6E BB7D 	 .ascii "\354n\273} \344\340/\226^\377r\t\313\007\310\241\207?\211}\252"
 136      20E4 E02F 
 136      965E FF72 
 136      09CB 07C8 
 136      A187 3F89 
 137 014a F8        	 .ascii "\370"
 138 014b 9506 95D4 	 .string "\225\006\225\324\025\242\361\315o\210\021\200.\303\364\243'\n,\203w\274\272\375\224\262\033\256\312{r\356\020\345x!\356\260\177\373/(\312\004x\003\323\033\357Z\233\330\025a\206z\315\034\372\275/`TIm\2567z\303(\205\022\331*u\234@o<\007L\322\361\206\306}\365\002h\376\201z\267up\207\372\237\237\315\277\352\271\317\311\372\037\365n\353d\006\357{T\342\224\342\261\031\b\006\362\351\366\302\343PN|\007\321$\215\310\345\234t\033\335 \036j\356\311\005\301\005\214u\303u\365}\274\245_B\261\363F\364\001P\301\022a\266\271\272\330]\363K\037-\302\322P5\003)Iu\257\267\224\255M\244\313\305J\252f\247\301\032\252\246\212\331\341\322H\266\230\312\227\354Db\237\355\034\037\035\032t\216V\363g\263\325)g\364\304a\347H\271\232u\006\307F\366;\266\355\373c\245L\245\234/\325&\324\316>\003\177"
 138      15A2 F1CD 
 138      6F88 1180 
 138      2EC3 F4A3 
 138      270A 2C83 
 139 024c 19BA D9BB 	 .ascii "\031\272\331\273"
 140               	 .text
 141               	 .section .gnu.lto_HandleUSB.part.1.4bd8312f431074a0,"",@progbits
 142 0000 789C B556 	 .string "x\234\265V}lSU\024\277\347\275\276\276\327\327\267\265e\023\301\357\240\306\204\217V\005\204\030\215N\224\270\204 \031AH0!e}\225\315\322-m1A\376\340m\235s\t:+\242.\020%\004\027\t\242[0\301)\316\024\210\037\223\360\225h\300\217\3103D\005Y$\212Q\004c=\367\336\367^\273\365\321\365\037_\322{\356\273\367\374\316\307\275\347\374^\005\"\220\361O\016\177\375\032!&J\250!\240\345\216\342D\003\201IA\020\277\234L\fU\376h\03614\021$\272\332\241x\370\344\200\"\t\236\347?#\250\340\355\222Q\301\0132W\220\005\245\347\016\\V\351\250)\202\217YQ\231\025\037\250\\I\005?\237\370\001\350\204"
 142      7D6C 5355 
 142      14BF E7BD 
 142      BEBE D7D7 
 142      B7B5 6513 
 143 00c7 D9A8 09A2 	 .string "\331\250\t\242G\362\312\212O\365\303\306'\200F\250M#;\fc\253\331\337\273s\211\221\315\033\227\n\0059Aw\342@VB\002@aB\200\261\211q\224\321\263%\0179\343\337B\001\376GL>\227?}\316W\fN\024H\020\034\234)p\340LW`\301,\001z\0042\255\b|\220\343\024\227 7\347\207\237{Kzv\320\3501\n\205\215\t\220\004\022)\002\203\034(\270\002\013\335o\224"
 143      47F2 CA8A 
 143      4FF5 C3C6 
 143      2780 46A8 
 143      4D23 3B0C 
GAS LISTING  			page 11


 144 0143 BD02 69A8 	 .ascii "\275\002i\250\022x\242\373\265\261\300\246*\201\303\335\257H"
 144      1278 A2FB 
 144      B5B1 C0A6 
 144      2A81 C3DD 
 144      AF48 
 145 0155 FDA5 A1AE 	 .ascii "\375\245\241\256v\005\266C\031r\357\247\235\267\367\031]\371"
 145      7605 B643 
 145      1972 EFA7 
 145      9DB7 F719 
 145      5DF9 
 146 0167 42E1 0106 	 .ascii "B\341\001\006L]\005\b\343\201'?\330QR,\262@:\001\252\271\374"
 146      4C5D 0508 
 146      E381 273F 
 146      D851 522C 
 146      B240 3A01 
 147 017e CDF9 2BA3 	 .ascii "\315\371+\243\245H\354\230\227'D\016\b\206Y(\374}E\231\005\204"
 147      A548 EC98 
 147      9727 440E 
 147      0886 5928 
 147      FC7D 4599 
 148 0194 39C3 41C4 	 .ascii "9\303A\304A\361\220\030\f\3024\"\241|\027\245\027\345\036\224"
 148      41F1 9018 
 148      0CC2 3422 
 148      A17C 17A5 
 148      17E5 1E94 
 149 01a8 32D5 50E8 	 .ascii "2\325P\350\340\243\203J\007?\356\355\306=\r_\244\032\212\256"
 149      E0A3 834A 
 149      073F EEED 
 149      C63D 0D5F 
 149      A41A 8AAE 
 150 01bc A543 800E 	 .ascii "\245C\200\016A\313N\b\345.\224\223p\321WGQ\365t\300\020$\322"
 150      41CB 4E08 
 150      E52E 9493 
 150      70D1 5747 
 150      51F5 74C0 
 151 01d3 6518 B95B 	 .ascii "e\030\271[X\261\342\263\034\307\355SPh(\304\025 P1B:\025\236"
 151      58B1 E2B3 
 151      1CC7 ED53 
 151      5068 28C4 
 151      1520 5031 
 152 01eb 666E 73FE 	 .ascii "fns\376b\237\340\034\254*\220\235\023&I\327Tz\332G\310\301\221"
 152      629F E01C 
 152      AC2A 909D 
 152      1326 49D7 
 152      547A DA47 
 153 0202 7FF6 FD36 	 .ascii "\177\366\37562\337\361\311'\371M\303\367\306\340}\f\317\t'\006"
 153      32DF F1C9 
 153      27F9 4DC3 
 153      F7C6 E07D 
 153      0CCF 0927 
 154 0217 6FB2 D718 	 .ascii "o\262\327\030\354\003\211\032\211\363\233\332F\266vl\351\b&\300"
 154      EC03 891A 
 154      89F3 9BDA 
 154      46B6 766C 
 154      E908 26C0 
 155 022b 4FAD 6AE7 	 .ascii "O\255j\347\270c\315\361#[~>\374\344\302\253\207\217\310\343\035"
 155      B863 CDF1 
GAS LISTING  			page 12


 155      235B 7E3E 
 155      FCE4 C2AB 
 155      878F C8E3 
 156 0240 1DFE F87E 	 .ascii "\035\376\370~js?\332\214\003+\271V\200q6\317\226\332\244\306"
 156      6A73 3FDA 
 156      8C03 2BB9 
 156      5680 7136 
 156      CF96 DAA4 
 157 0255 B2FB 0FA1 	 .ascii "\262\373\017\241\261w\3741\030F\\+\b\210a\276<\270\3759\351\032"
 157      B177 FC31 
 157      1846 5C2B 
 157      0888 61BE 
 157      3CB8 FD39 
 158 026b FDA1 7FBB 	 .ascii "\375\241\177\273\310\215\342&\333)M\177\005\210\244K\026\217"
 158      C88D E226 
 158      DB29 4D7F 
 158      0588 A44B 
 158      168F 
 159 027d 916E B3E7 	 .ascii "\221n\263\347L-\327#d\003\271\214e\215Nk\342\270O\254\025|\326"
 159      4C2D D723 
 159      6403 B98C 
 159      658D 4E6B 
 159      E2B8 4FAC 
 160 0294 27A0 9667 	 .ascii "'\240\226go\251R\203\322L&\002\004/-Hc\352\374f\350\247\263\036"
 160      6FA9 5283 
 160      D24C 2602 
 160      042F 2D48 
 160      63EA FC66 
 161 02ac DBA9 3883 	 .ascii "\333\2518\203LO@\210\303t\347\370Q\355|v7\330Z\236V\352\t\027"
 161      4C4F 4088 
 161      C374 E7F8 
 161      51ED 7C76 
 161      37D8 5A9E 
 162 02c4 1BF9 0ACD 	 .ascii "\033\371\n\315\333\240!Lr\202\251\343\rA}\325\021~<\230\3441"
 162      DBA0 214C 
 162      7282 A9E3 
 162      0D41 7DD5 
 162      117E 3C98 
 163 02da 9235 B7B9 	 .ascii "\2225\267\271\204^\037\247\273\204\006u\r3<r\352\347\343\202"
 163      845E 1FA7 
 163      BB84 0675 
 163      0D33 3C72 
 163      EAE7 E382 
 164 02ee ED4E AAC6 	 .ascii "\355N\252\306\276k<^G\1772\357l\252?\331\212G\242\361t\231\273"
 164      BE6B 3C5E 
 164      477F 32EF 
 164      6CAA 3FD9 
 164      8A47 A2F1 
 165 0305 0EF9 CBE2 	 .ascii "\016\371\313\342\2716\316k\205j%`\212}\374\036\202_\032\221&"
 165      B936 CE6B 
 165      856A 2560 
 165      8A7D FC1E 
 165      825F 1A91 
 166 031a F176 562E 	 .ascii "\361vV.\003M\215\203\327J\342:\033!\021\374\252\210,\241_N9\347"
 166      034D 8D83 
 166      D74A E23A 
 166      1B21 11FC 
GAS LISTING  			page 13


 166      AA88 2CA1 
 167 0332 E7AD 2640 	 .ascii "\347\255&@^\021\035\263\035\020\273\276\261\365\340\245\365`"
 167      5E11 1DB3 
 167      1D10 BBBE 
 167      B1F5 E0A5 
 167      F560 
 168 0344 15E9 C040 	 .ascii "\025\351\300@Y\221n:yB*V\251\314\023\222\253\252R\264\026\203"
 168      5991 6E3A 
 168      7942 2A56 
 168      A9CC 1392 
 168      ABAA 52B4 
 169 035a A3CC B182 	 .ascii "\243\314\261\202\230\251\244\317\330e\fb\243\372y[4\362\335J"
 169      98A9 A4CF 
 169      D865 0C62 
 169      A3FA 795B 
 169      34F2 DD4A 
 170 036e B610 C92E 	 .ascii "\266\020\311.e\350;\363\205\351\325\027\n\235M*\246(W\246\215"
 170      65E8 3BF3 
 170      85E9 D517 
 170      0A9D 4D2A 
 170      A628 57A6 
 171 0383 180C 61FB 	 .ascii "\030\fa\373UA\033\035P\2217\276\337\201\371~e1\005?\257\352h"
 171      5541 1B1D 
 171      5091 37BE 
 171      DF81 F97E 
 171      6531 053F 
 172 039a 028A 3431 	 .ascii "\002\21241\340B\023\247_\222\213\026\025~,\276\352n\200\362\304"
 172      E042 13A7 
 172      5F92 8B16 
 172      157E 2CBE 
 172      EA6E 80F2 
 173 03af D7EC 0654 	 .ascii "\327\354\006T\3048\316\030O\374x\341N\273.T\027\236PHNcU\227"
 173      C438 CE18 
 173      4FFC 78E1 
 173      4EBB 2E54 
 173      179E 5048 
 174 03c7 0BD8 6A7E 	 .ascii "\013\330j~\367\232\023\\j\316\251S\277K\311\371\310A\221Q\320"
 174      F79A 135C 
 174      6ACE A953 
 174      BF4B C9F9 
 174      C841 9151 
 175 03dc 1787 BC65 	 .ascii "\027\207\274e-p}\034\367\tq(h\236\033\005\335\3400Q\002n\344"
 175      2D70 7D1C 
 175      F709 7128 
 175      689E 1B05 
 175      DDE0 3051 
 176 03f3 1532 74D1 	 .ascii "\0252t\321\264(h\006\331M\201+KH\b\234\303V\370ag{\262\373{{"
 176      B428 6806 
 176      D94D 812B 
 176      4B48 089C 
 176      C356 F861 
 177 040d 1DA2 D4EC 	 .ascii "\035\242\324\354@gr\022\3705\273\327\241\216\232Vz\254Efp1/X"
 177      4067 7212 
 177      F835 BBD7 
 177      A18E 9A56 
 177      7AAC 4566 
 178 0425 C55A C343 	 .ascii "\305Z\303C\271T)\024\321\t%t\233\355\354L\357\"\333[m+m\217\212"
GAS LISTING  			page 14


 178      B954 2914 
 178      D109 2574 
 178      9BED EC4C 
 178      EF22 DB5B 
 179 043e DE88 E5AD 	 .ascii "\336\210\345\255\226\222O\267\371m6Pv\2107\305A-=\304\r\023\361"
 179      9692 4FB7 
 179      F96D 3650 
 179      7688 37C5 
 179      412D 3DC4 
 180 0455 F8CD 9CC7 	 .ascii "\370\315\234\307O\375u|\252\035I\240\002\217\377\356\334o\260"
 180      4FFD 757C 
 180      AA1D 49A0 
 180      028F FFEE 
 180      DC6F B0
 181 0468 951A A075 	 .ascii "\225\032\240ur\274\316^\013\271\367\250H\312\310\366r\366O\307"
 181      72BC CE5E 
 181      0BB9 F7A8 
 181      48CA C8F6 
 181      72F6 4FC7 
 182 047c 12EA 3E83 	 .ascii "\022\352>\203\377\007f\221=4\342\327iE\266\323\317D\250\264x"
 182      FF07 6691 
 182      3D34 E2D7 
 182      6945 B6D3 
 182      CF44 A8B4 
 183 0491 30E1 FC7D 	 .ascii "0\341\374}WO\027\255`Hc\263b}\325W\316l\207\3778P\302l~\016\257"
 183      574F 17AD 
 183      6048 63B3 
 183      627D D557 
 183      CE6C 87FF 
 184 04ac ABAA AFFA 	 .ascii "\253\252\257\372(\263\215\262\250\353\021\303\231\315\034\303"
 184      28B3 8DB2 
 184      A8EB 11C3 
 184      99CD 1CC3 
 185 04bc 6CA3 1332 	 .ascii "l\243\0232[\275\305l\203/\316\250\364\311\031\333]t\346-v\222"
 185      5BBD C56C 
 185      832F CEA8 
 185      F4C9 19DB 
 185      5D74 E62D 
 186 04d2 4A99 0D1D 	 .ascii "J\231\r\035\236\267\252\225_\326\034\362\236\321\203\212\242"
 186      9EB7 AA95 
 186      5FD6 1CF2 
 186      9ED1 838A 
 186      A2
 187 04e3 A3E7 A77A 	 .ascii "\243\347\247z'H\207y\341V\347O\f{\226ckl\237B}\324$\365\314\252"
 187      2748 8779 
 187      E156 E74F 
 187      0C7B 9663 
 187      6B6C 9F42 
 188 04fd E6B6 B5ED 	 .ascii "\346\266\265\355\321L\270\231\204\232\026?\334\270tI\264\371"
 188      D14C B899 
 188      849A 163F 
 188      DCB8 7449 
 188      B4F9 
 189 050f 293D F3A8 	 .ascii ")=\363\250\036\215\351)mq[\246%\336\322\034\315\264\264%Ci=\031"
 189      1E8D E929 
 189      6D71 5BA6 
 189      25DE D21C 
GAS LISTING  			page 15


 189      CDB4 B425 
 190 0527 5B1D 4DE3 	 .ascii "[\035M\343N,\245\247\323\341y\301\205\251\350Z\375\261u\231E"
 190      4E2C A5A7 
 190      D3E1 79C1 
 190      85A9 E85A 
 190      FDB1 7599 
 191 053c 7AF2 C9CC 	 .ascii "z\362\311\314\232\360=\001\266\320\230l\322\327F[\222\341\271"
 191      9AF0 3D01 
 191      B6D0 986C 
 191      D2D7 465B 
 191      92E1 B9
 192 054f F6BB B53F 	 .ascii "\366\273\265?g\334\373\354\340\202u\251\024\363\2724\023\315"
 192      67DC FBEC 
 192      E082 75A9 
 192      14F3 BA34 
 192      13CD 
 193 0561 E8E1 BB03 	 .ascii "\350\341\273\003Mz\272\275-\231\326\233\320\313\372\360]r\003"
 193      4D7A BABD 
 193      2D99 D69B 
 193      D0CB FAF0 
 193      5D72 03
 194 0574 F735 371C 	 .ascii "\36757\034Y\264laC\344\341T\313\323z*\035Y\266\364\241\310\202"
 194      59B4 6C61 
 194      43E4 E154 
 194      CBD3 7A2A 
 194      1D59 B6F4 
 195 058b B694 1E69 	 .ascii "\266\224\036ix\274i~$\034\346\362\221d\254\275\255%\231YE\337"
 195      78BC 697E 
 195      241C E6F2 
 195      9164 ACBD 
 195      AD25 9959 
 196 05a1 C26B C87F 	 .ascii "\302k\310\177\0202Yo"
 196      1032 596F 
 197               	 .text
 198               	 .section .gnu.lto_HandleUSB.4bd8312f431074a0,"",@progbits
 199 0000 789C 8D54 	 .string "x\234\215TKhSQ\020\235\271\357\275\2744\375\245\037\264\202B\251\013\027BbE\261\210\240\265U(H\221\224j\375@\tM\202)1\tI,\024\027}i\253\026\004\r\342\242TT\212\324v\341\017\335\370[\004\253\242\225\032\005A\004\027q\245\250\240;\253\025\342\314\273/\257\237\205\364B\356\334{g\316\231sg\356\213"
 199      4B68 5351 
 199      109D B9EF 
 199      BDBC 34FD 
 199      A51F B482 
 200 0067 01CB C721 	 .string "\001\313\307!\372yU\200$Yt\002\212\314k\200\264S\bed\003\030.\215\3472E\250\357V\361\356\3616\332\251\250\311 M8\236\257\243c}f\023\035;P\347c\324\021\331\002\302\200PT\315\241\343\300Q\344TJ\003\214\033\306\205\374D\356\262z\352\2161b\024\n\003\021$Mn\204\020\302\021\214 )`#p\251H\t\314\276\1770\276\337\030\312\032s\205\202\036AE@\375J\200\331L\266\220/Y\300\251\002\032\027p\273$\316\271\024w[d\363\205\302\215\3117\277\260N\205"
 200      FA79 5580 
 200      2459 7402 
 200      8ACC 6B80 
 200      B453 0865 
 201 0101 8E63 03B8 	 .string "\216c\003\270\310^#[\005\224\273\232\247\032\236jy\"\210\006\303\206\221\251\007f\246q\220\346sY\200.\024l\225Yx\362\360\331\374\374\327\035v\234\\d_]i\002b\236D\215\220&\264\027\253.\301X\372b\332\035A\215\3259\276H\261\016K\335,\f=\232&\256\303\001\234\"X/V\023\204\003\024\306\277\200\341\357\237&rBr\222\323\364,\276]\027m\317\324\223\244\301\227?+\212a*\3474\f\312\t'\341\017u\207Vz\334\024\304\004\272\205ev\2641\354\201\245\324*\\/1\251\347\316\257\265\356\032\300\t\252[\361\226\346\202\0178a\206\323\250\234p\224W\316\270Y\002\246-v$\007\247\363\037\372\002x\323\204\332\322JB(\0373\237\320\350'\204\244\265B\231\303%_E)P\217\312\270n\334\203\351\337\333\227\367\340\354\255\215`\341B\262T\275X\263\222\036\020W"
 201      C85E 235B 
 201      0594 BB9A 
 201      A71A 9E6A 
 201      7922 8806 
 202 01f9 EF9A B5A8 	 .string "\357\232\265\250%\310\032\0305\246\214\374\316\210\251\225\322\265I\357\377\250\b\311\241\203\367?\376\235\021R\303J:aW\236\262|\263p\362\376[\340\2361B^\325n\211f\275@\352\311\330\352b\357\\v\226r;KE\334,*sW\330\375~\3729]j\203\314\267\264\370_\244\213\256q\265N\311\301\220\263\330^\233\2562d\211\210\240\273\030\255\233Z\336B:\377c\275\375\036@~1\310>&/\217\006S\335=\261\343q\177\312\323\003\225\276`2\036\213&\203\276\240?\320\357it\267\234H$|\355\255m\035\035)\177*\350\331\\\326\036K\205C\341\036\177*\034\213n\365x\367u\356m\366\266&\302}\301D\322\333\331\261\333\333\022K\004\275\315\007|M^\217G\332=\321@<\026\216\246\272y\3479\006\377"
 202      25C8 1A18 
 202      35A6 8CFC 
 202      CE88 A995 
 202      D2B5 49EF 
 203 02db EF3C 2E31 	 .ascii "\357<.1"
 204               	 .text
GAS LISTING  			page 16


 205               	 .section .gnu.lto_et_dumpbytes.4bd8312f431074a0,"",@progbits
 206 0000 789C 5D50 	 .ascii "x\234]P1N\303"
 206      314E C3
 207 0007 4010 9CD9 	 .string "@\020\234\331\363\305\026\"\n\017\240\240\241\345\007\274\303\221@B(@a9\220\"\035E.\330E\n\212T\324\360\001\340\tP \022!@\224\220\306\035\r/\2401{>\"$V\272\235\275\335\331\235\325\n\004\377m[_\233@G\221-P\246/\3008\021F!0!\270O\"1\347\217\200[\261e\f\267jI\237\0071\022\023Y\216v\331\314\273\221\273\252\256\257o\237.\027\224\230\030\020\206\352\254\217\324,J\347\246\033\300Q\363M\325\353\274\224\242`\2724P\021\363\212\242\372xh\035\360\212VI\247\370v\023\267\226S\233\202J\376\213\3502\202\356a\3468K\340%2_yF1)>/\326\303\200\214V\263;\314)\265o\233CB\241\241\253\300\f\345\327\270\263$7L\363w\241w0\243\021u\326\314\214\227\264~\3277\214\253\305\346r\305`\251\212\227\261?r\373\370p\270\327;\351\017\366\207[=\374"
 207      F3C5 1622 
 207      0A0F A0A0 
 207      A1E5 07BC 
 207      C391 4042 
 208 0108 85E3 45A3 	 .ascii "\205\343E\243"
 209               	 .text
 210               	 .section .gnu.lto_et_pop16.4bd8312f431074a0,"",@progbits
 211 0000 789C 7D90 	 .string "x\234}\220\275J\304@\024\205\317\231\311\230dA\tXY\b\342\003X\013>\310\n\n\"\373SH\\\027Ig\221\321\254(V\301z\233\305N\220\255\355\266\261\260P\261\264\013\373"
 211      BD4A C440 
 211      1485 CF99 
 211      C998 6441 
 211      0958 5908 
 212 003a 82AD 85F1 	 .ascii "\202\255\205\361NB,\266p sgN\276|73\n\n\213cM\236!\201U\251\324"
 212      4E42 2CB6 
 212      7020 7367 
 212      4EBE 7C37 
 212      330A 0A8B 
 213 0056 A0CA 5F81 	 .ascii "\240\312_\201\363@\221n\001\"UL\367\351Pnbb\355m\3614\377\340"
 213      F340 916E 
 213      0122 554C 
 213      F7E9 506E 
 213      6262 ED6D 
 214 006e A52D 6C6E 	 .ascii "\245-ln\177\312\2241\305\032\021}bO6\214\252\242\026:M\325\254"
 214      7FCA 9431 
 214      C51A 117D 
 214      624F 368C 
 214      AAA2 163A 
 215 0085 28CB F1D7 	 .ascii "(\313\361\327h\276\335\322\210\251=t9\021\243\221\215\347\273"
 215      68BE DDD2 
 215      88A9 3D74 
 215      3911 A391 
 215      8DE7 BB
 216 0098 2470 AB50 	 .ascii "$p\253P&\307\033\214\254\3157j\006N.\243-\263\373\253]*W\365"
 216      26C7 1B8C 
 216      ACCD 376A 
 216      064E 2EA3 
 216      2DB3 FBAB 
 217 00b0 1BB2 E2E6 	 .ascii "\033\262\342\346j\245\313;\032\034Q\237\341\333^\333(\246\351"
 217      6AA5 CB3B 
 217      1A1C 519F 
 217      E1DB 5EDB 
 217      28A6 E9
 218 00c3 B3FA 4064 	 .ascii "\263\372@dK\300\013.>\263ACy\002\002\317PuPw\220\330q\331C6\035"
 218      4BC0 0B2E 
 218      3EB3 4143 
 218      7902 02CF 
 218      5075 5077 
 219 00de AF37 A491 	 .ascii "\2577\244\221\324\235\305\017\304$\275f;\315\033\377\277N\367"
 219      D49D C50F 
 219      C424 BD66 
 219      3BCD 1BFF 
 219      BF4E F7
 220 00f1 6CB0 40C8 	 .ascii "l\260@\310J\373\230\265\232,\254\274b|\307\037\027\326w\324\026"
GAS LISTING  			page 17


 220      4AFB 98B5 
 220      9A2C ACBC 
 220      627C C71F 
 220      17D6 77D4 
 221 0106 951C CBDD 	 .ascii "\225\034\313\335\334\362\240\227\034tN\216\207\207\311V\007\372"
 221      DCF2 A097 
 221      1C74 4E8E 
 221      8787 C956 
 221      07FA 
 222 0118 B497 FC02 	 .ascii "\264\227\374\002\232\321Z\304"
 222      9AD1 5AC4 
 223               	 .text
 224               	 .section .gnu.lto_et_popblob.4bd8312f431074a0,"",@progbits
 225 0000 789C 5D51 	 .ascii "x\234]Q\261N\002A\020}o\367\326\273\020\f\266&\026vv\374\201"
 225      B14E 0241 
 225      107D 6FF7 
 225      D6BB 100C 
 225      B626 1676 
 226 0017 DF01 8926 	 .ascii "\337\001\211&\306\200\024\344\324+\350,\330\343\256 \221\202"
 226      C680 14E4 
 226      D42B E82C 
 226      D8E3 AE20 
 226      9182 
 227 0029 C646 89D1 	 .ascii "\306F\211\321\336\250\237\200\225R\200\261\244#\261\324\216\316"
 227      DEA8 9F80 
 227      9552 80B1 
 227      A423 B1D4 
 227      8ECE 
 228 003b 0667 EFBC 	 .ascii "\006g\357\274\304\260\311\316\316\314\276y\363vVAa}\355\313\276"
 228      C4B0 C9CE 
 228      CECC BE79 
 228      F376 5641 
 228      617D EDCB 
 229 0050 2250 9193 	 .ascii "\"P\221\223\033\240\032\316\2008P\364rG\347\316K\340)=x\005l"
 229      1BA0 1ACE 
 229      8038 50F4 
 229      7247 E7CE 
 229      4BE0 293D 
 230 0067 C9A4 3E6C 	 .ascii "\311\244>l\331\220.\017\242\253\264g\330=d\306\367\244\306\213"
 230      D990 2E0F 
 230      A2AB B467 
 230      D83D 64C6 
 230      F7A4 C68B 
 231 007b D5EA F176 	 .ascii "\325\352\361vv7\242.\023\021\245iDz\024\317\210\241\357\302\300"
 231      7637 A22E 
 231      1311 A569 
 231      447A 14CF 
 231      88A1 EFC2 
 232 0090 5D94 1066 	 .ascii "]\224\020fE\006\251\265\303]\240\225\2055\261\322\243F%\207\256"
 232      4506 A9B5 
 232      C35D A095 
 232      8535 B1D2 
 232      A346 2587 
 233 00a5 5343 1AEB 	 .ascii "SC\032\353)\222\313\344k\264\335\344=\r\332\f\332\344\001C\322"
 233      2992 CBE4 
 233      6BB4 DDE4 
 233      3D0D DA0C 
GAS LISTING  			page 18


 233      DAE4 0143 
 234 00ba D54C A0F2 	 .ascii "\325L\240\362\274\260\312\025\360\216d\\-\240\245\013\374\330"
 234      BCB0 CA15 
 234      F08E 645C 
 234      2DA0 A50B 
 234      FCD8 
 235 00cc BEDD 0AA9 	 .ascii "\276\335\n\251Z\314e\206\302\212)z\223g?G\335\340:\266\326\372"
 235      5ACC 6586 
 235      C28A 297A 
 235      9367 3F47 
 235      DDE0 3AB6 
 236 00e2 21BD 3F62 	 .ascii "!\275?b\223\001\245:\037T\235\036\344\305z\202\236\360\313\023"
 236      9301 A53A 
 236      1F54 9D1E 
 236      E4C5 7A82 
 236      9EF0 CB13 
 237 00f6 DAA2 0F45 	 .ascii "\332\242\017E$8:\302\244\237|\216v\212\306\276`\034\225\267Z"
 237      2438 3AC2 
 237      A49F 7C8E 
 237      768A C6BE 
 237      601C 95B7 
 238 010b 1329 C53E 	 .ascii "\023)\305>\360\206\364;\256\024\340\f\371\357g\346\020\224\247"
 238      F086 F43B 
 238      AE14 E00C 
 238      F9EF 67E6 
 238      1094 A7
 239 011e C404 FA61 	 .ascii "\304\004\372a\331\234C\265i\\\350\353\3012r\202\214\233\317\007"
 239      D99C 43B5 
 239      695C E8EB 
 239      C132 7282 
 239      8C9B CF07 
 240 0132 E2C5 682F 	 .ascii "\342\305h/')VM\304\244\276\373\354\315\263\223\316Q\343\3744"
 240      2729 564D 
 240      C4A4 BEFB 
 240      ECCD B393 
 240      CE51 E3FC 
 241 0147 3AEE 541B 	 .ascii ":\356T\033\370\0059\224`7"
 241      F805 3994 
 241      6037 
 242               	 .text
 243               	 .section .gnu.lto_et_pushpgmstr.4bd8312f431074a0,"",@progbits
 244 0000 789C 8552 	 .ascii "x\234\205R1k\024A\024\376\276\231\235\335\365\210r\330*r\004"
 244      316B 1441 
 244      14FE BE99 
 244      9DDD F588 
 244      72D8 2A72 
 245 0015 C542 1153 	 .ascii "\305B\021Sh@\024\374\027\212\nG\310\345\212e\243\307y6Z\334\344"
 245      6840 14FC 
 245      178A 0A47 
 245      C8E5 8A65 
 245      A3C7 7936 
 246 002c 6E05 2129 	 .ascii "n\005!)\016mlR\004Q+\271?`\261\001ASx\222J\323]\027\260\260\021"
 246      0E6D 6C52 
 246      0451 2BB9 
 246      3F60 B101 
 246      4153 7892 
 247 0047 4182 B8BE 	 .ascii "A\202\270\276\331\361.&\215\003;\357\3157\363\336\373\276\367"
GAS LISTING  			page 19


 247      D9F1 2E26 
 247      8D03 3BEF 
 247      CD37 F3DE 
 247      FBBE F7
 248 005a 5641 E1F0 	 .ascii "VA\341\360\272*\3373\201\347\3052\004\325`\004\254\304\212\332"
 248      BA2A DF33 
 248      81E7 C532 
 248      04D5 6004 
 248      ACC4 8ADA 
 249 006e 39D4 CA64 	 .ascii "9\324\312d\021l%X{\017\330\231\300\303\233\261!\235\003\242\253"
 249      116C 2558 
 249      7B0F D899 
 249      C0C3 9BB1 
 249      219D 03A2 
 250 0083 7460 D8BD 	 .ascii "t`\330\275C\227M\315b\303\332\247\343\307_\267\231\331\261\035"
 250      4397 4DCD 
 250      62C3 DAA7 
 250      E3C7 5FB7 
 250      99D9 B11D 
 251 0097 D8DF 4597 	 .ascii "\330\337E\227)\245p\225h\022\267\345\300\2704\212\007\231\370"
 251      29A5 7095 
 251      6812 B7E5 
 251      C0B8 348A 
 251      0799 F8
 252 00aa D0FC F3E8 	 .ascii "\320\374\363\350\234\355\347\366gQD\251\224\307\361\375\270\252"
 252      9CED E7F6 
 252      6751 44A9 
 252      94C7 F1FD 
 252      B8AA 
 253 00bc 8F3B 2462 	 .ascii "\217;$b\250\362qQ\374\372\236\355]\251\020-BS6\343\274\320m\021"
 253      A8F2 7151 
 253      FCFA 9EED 
 253      5DA9 102D 
 253      4253 36E3 
 254 00d4 1A7C C159 	 .ascii "\032|\301Y\304b7\304\3122\310\254\035\324&\347f\311\344\206\354"
 254      C462 37C4 
 254      CA32 C8AC 
 254      1DD4 26E7 
 254      66C9 E486 
 255 00e9 A2F5 2695 	 .ascii "\242\365&\225\030\r\354\300$\324\242P \rQ\313-\364b\270\224\t"
 255      180D ECC0 
 255      24D4 A250 
 255      200D 51CB 
 255      2DF4 62B8 
 256 00ff 05FD 88FE 	 .ascii "\005\375\210\376j\177\270\036M\223\271\"^\204}bs:\355\205\327"
 256      6A7F B81E 
 256      4D93 B922 
 256      5E84 7D62 
 256      733A ED85 
 257 0114 7EE2 7FDA 	 .ascii "~\342\177\332!\334^\3228'a(\351\247\217\266\240\032|E\343\313"
 257      21DC 5ED2 
 257      3827 6128 
 257      E9A7 8FB6 
 257      A01A 7C45 
 258 012a 86AE 6CEF 	 .ascii "\206\256l\357\233\366P\302\250d2}\3439\b\f\214&\230{pZ\273\311"
 258      9BF6 50C2 
 258      A864 327D 
GAS LISTING  			page 20


 258      E339 080C 
 258      8C26 987B 
 259 0142 6B3F FE53 	 .ascii "k?\376S\230[\267\317\257\247\f|9\221\204\203\367\227\374\375"
 259      985B B7CF 
 259      AFA7 0C7C 
 259      3991 8483 
 259      F797 FCFD 
 260 0156 5F3A 51C9 	 .ascii "_:Q\311\357\237\032\257\313\032\261\303z\271\361\304}+K\364\003"
 260      EF9F 1AAF 
 260      CB1A B1C3 
 260      7AB9 F1C4 
 260      7D2B 4BF4 
 261 016b DEED 6E7E 	 .ascii "\336\355n~9\346qA\234\224p_\350\016\230\320(\331\302\340\355"
 261      39E6 7141 
 261      9C94 705F 
 261      E80E 98D0 
 261      28D9 C2E0 
 262 0180 8F93 AEBB 	 .ascii "\217\223\256\273\001\344\357\322\237\220\215\337\354\206\223"
 262      01E4 EFD2 
 262      9F90 8DDF 
 262      EC86 93
 263 018f 463C C29E 	 .ascii "F<\302\236\264\261\2322j\322wKr\245%[\270 \343\246\264\215\225"
 263      B4B1 9A32 
 263      6AD2 774B 
 263      72A5 255B 
 263      B820 E3A6 
 264 01a6 F1F0 ECB4 	 .ascii "\361\360\354\264w\360s\244\\9)G\357.u\352\213\367\226[\013\235"
 264      77F0 73A4 
 264      5C39 2947 
 264      EF2E 75EA 
 264      8BF7 965B 
 265 01bc 0B8B 603B 	 .ascii "\013\213`;\256\327\027\032\215\366\334eq\332K\367\037\244\235"
 265      AED7 171A 
 265      8DF6 DC65 
 265      71DA 4BF7 
 265      1FA4 9D
 266 01cf 99B4 B55C 	 .ascii "\231\264\265\\;s\361|\355V\345\b\364\2656\324C\374\001\261\260"
 266      3B73 F17C 
 266      ED56 E508 
 266      F4B5 36D4 
 266      43FC 01B1 
 267 01e4 9885      	 .ascii "\230\205"
 268               	 .text
 269               	 .section .gnu.lto_et_pushpgmblob.4bd8312f431074a0,"",@progbits
 270 0000 789C 5D51 	 .ascii "x\234]QMk\023Q\024=\347\275\231f\022\"f[\374 \004\304\215\370"
 270      4D6B 1351 
 270      143D E7BD 
 270      9966 1222 
 270      665B FC20 
 271 0018 81E8 A614 	 .ascii "\201\350\246\024\374\027-U\b\245\323.\206\251\0161nt\221\227"
 271      FC17 2D55 
 271      08A5 D32E 
 271      86A9 0E31 
 271      6E74 9197 
 272 002c 660A 05BB 	 .ascii "f\n\005\273\b\256\334dQJ\\\025\374\003\202q\245]\264\342\262"
 272      08AE DC64 
 272      514A 5C15 
GAS LISTING  			page 21


 272      FC03 8271 
 272      A55D B4E2 
 273 0041 E022 5B41 	 .ascii "\340\"[A\3542\320\205\343}\3632i\355\203\367\356\273\367\236"
 273      EC32 D085 
 273      E37D F332 
 273      69ED 83F7 
 273      EEBB F79E 
 274 0055 FB75 AE82 	 .ascii "\373u\256\202\302\345\263(wW\314\217Dr\016T\375c\240\033(z\356"
 274      C2E5 B328 
 274      7757 CC8F 
 274      4472 0E54 
 274      FD63 A01B 
 275 006c A3DD E74B 	 .ascii "\243\335\347K\340)\275\373\0250\025?-\301T}\322\332At\224\366"
 275      E029 BDFB 
 275      1530 153F 
 275      2DC1 547D 
 275      D2DA 4174 
 276 0082 7C76 9ED1 	 .ascii "|v\236\321\246S\r\354\031\363n<<\375\305m36}\3637\3530\246T\256"
 276      A653 0DEC 
 276      19F3 6E3C 
 276      3CFD C56D 
 276      3336 7DF3 
 277 009c 111B C453 	 .ascii "\021\033\304SQX\313\205\272\324\215\0135;fD\033\226\tD+\314\237"
 277      5158 CB85 
 277      BAD4 8D0B 
 277      353B 6644 
 277      1B96 0944 
 278 00b3 8705 2E8C 	 .ascii "\207\005.\214\377\207}T\243q\226\035L\322\263\205*\221\330R\t"
 278      FF87 7D54 
 278      A371 961D 
 278      4CD2 B385 
 278      2A91 D852 
 279 00c8 E951 7EBE 	 .ascii "\351Q~\276<,Y5\260\2162B\356\261\201\212\310}\221r|\244\306\364"
 279      3C2C 5935 
 279      B08E 3242 
 279      EEB1 818A 
 279      C87D 9172 
 280 00e0 EBB0 35E4 	 .ascii "\353\2605\344,\311+\343-Q\211\320\313\324\220\231\365\021zo{"
 280      2CC9 2BE3 
 280      2D51 89D0 
 280      CBD4 9099 
 280      F511 7A6F 
 281 00f5 93C1 8D29 	 .ascii "\223\301\215)\330%)R\204\034\322\267\261\021\203\210\234ux\b"
 281      D825 2952 
 281      841C D2B7 
 281      B111 8388 
 281      9C75 7808 
 282 0109 15F2 83B8 	 .ascii "\025\362\203\270\244\260\270\200#l\375\321\316\024\261,\320\013"
 282      A4B0 B880 
 282      236C FDD1 
 282      CE14 B12C 
 282      D00B 
 283 011b 1897 52CC 	 .ascii "\030\227R\314\300qa\263\200\206\266+\323no7qo`\336?\211\351\271"
 283      C071 61B3 
 283      8086 B62B 
 283      D36E 6F37 
 283      716F 60DE 
GAS LISTING  			page 22


 284 0133 7215 4C5D 	 .ascii "r\025L]3\377C\347\237\266S\316\351\271Pc?\257!a\337\221\216\256"
 284      33FF 43E7 
 284      9FB6 53CE 
 284      E9B9 5063 
 284      3FAF 2161 
 285 014b 158D BFC1 	 .ascii "\025\215\277\301\231p^\2139\267AG\255`b\241-?\313RM\026\255\017"
 285      9970 5E8B 
 285      39B7 4147 
 285      AD60 62A1 
 285      2D3F CB52 
 286 0163 B125 3308 	 .ascii "\261%3\b\223\221p\203BC>\206\360\263\323;\035\\w\031#\226\004"
 286      9391 7083 
 286      4243 3E86 
 286      F0B3 D33B 
 286      1D5C 7719 
 287 017a 6379 D0D9 	 .ascii "cy\320\331\214\210aN\204\004K\332oH\177w\257\026\340\034\031"
 287      8C88 614E 
 287      8404 4BDA 
 287      6F48 7F77 
 287      AF16 E01C 
 288 018f 9CAF F304 	 .ascii "\234\257\363\004\202\362\224<\201\3769i\237@E\364\255Z\322\237"
 288      82F2 943C 
 288      81FE 3969 
 288      9F40 45F4 
 288      AD5A D29F 
 289 01a3 2689 6DC8 	 .ascii "&\211m\310\267\273\371\201\356\370\363\355\031\371p\333\243\270"
 289      B7BB F981 
 289      EEF8 F3ED 
 289      19F9 70DB 
 289      A3B8 
 290 01b5 2C17 579E 	 .ascii ",\027W\236\257\267\233k/6\223\325\366\3355\004\315\346j\030\266"
 290      AFB7 9B6B 
 290      2F36 93D5 
 290      F6DD 3504 
 290      CDE6 6A18 
 291 01ca 1E3C 964F 	 .ascii "\036<\226Ok\375\345\253\270]\215\223\315\372\255\373w\352+\225"
 291      6BFD E5AB 
 291      B85D 8D93 
 291      CDFA ADFB 
 291      77EA 2B95 
 292 01de 32F4 620B 	 .ascii "2\364b\013\3525\376\001l\213\225R"
 292      EA35 FE01 
 292      6C8B 9552 
 293               	 .text
 294               	 .section .gnu.lto_et_pushstr.4bd8312f431074a0,"",@progbits
 295 0000 789C 5D51 	 .string "x\234]Q=K\003A\020}o?.\247(\332\333\330\t\026\376\003\377\203]\002\n\"\321+\216SS\244\263\310\345\356\004A\213T\026\nA;+-,\004\253Xi\212\\\260\264\313\017\020\177\200M\234\315&\n\016\354\314\354\233\2317;\263\n\n\377eS\316\026\201%\261\f@\325)\201v\250h\274\243\275\363\022\032\245/^\201t\336\026\025\244\013\226t8\210\226\322\306\262\265\303\t\337\203\352\215\306\343\373\313\341MI=G4\bMQ\026\t\021\210b\3500\021\213\"M;\253@4\271VE\013s\225J\214\256QC\332\351\001\262\257\374\251\273\262\317[Z\304\fb1\030\302x"
 295      3D4B 0341 
 295      107D 6F3F 
 295      2EA7 28DA 
 295      DBD8 0916 
 296 00b8 38C1 777A 	 .string "8\301wz\226.'T\021\375\013$)\221j\f\220\237\347\217\335\365Yi\030\223\333Lh\\Z\037\312\343\362\026\t\371]\324h C\351>2A&\021:\236\354\3714\232\261\330k\\\t\211\235\222\005\3235\276\241\370l\333\337$\027\252\374-\371\003\214\251\225\250P\337Y\327\310\272!\337\321\036\225k\263I\274T\245eQq\377\264xt\320\334\255\037\0376\366\232\033u\374"
 296      962E 2754 
 296      11FD 0B24 
 296      2991 6A0C 
 296      909F E78F 
 297 012f 1670 5056 	 .ascii "\026pPV"
 298               	 .text
GAS LISTING  			page 23


 299               	 .section .gnu.lto_et_pushblob.4bd8312f431074a0,"",@progbits
 300 0000 789C 5D51 	 .ascii "x\234]Q\273J\003Q\020=\347>\262\033\037\350\007X\330Y\b\376\201"
 300      BB4A 0351 
 300      103D E73E 
 300      B21B 1FE8 
 300      0758 D859 
 301 0017 DF91 8082 	 .ascii "\337\221\200\202H4EX\343\026\351,\262IV\bh\021,\025\202\366A"
 301      4834 4558 
 301      E316 E92C 
 301      B249 5608 
 301      6811 2C15 
 302 002e C1D2 4A2B 	 .ascii "\301\322J+\r\030\203e\232\220^;;S\304\271\273Y\220\f\354\334"
 302      0D18 8365 
 302      9A90 5E3B 
 302      3B53 C4B9 
 302      BB59 900C 
 303 0044 993B 67E6 	 .ascii "\231;g\346\234\331"
 303      9CD9 
 304 004a ABA0 B068 	 .string "\253\240\260h\273\362]\021X\223\2239Pu>\200\206\257h\322@\247\301\213o\224\276|\005\242%\033{\210V,\351\356A\324\2256\226\365}&\363\036\324\363d6\273\177\034\336\216\251\227\211\220B\032\222\206\022Yq\364\\\352\273B\036A\322d\021GQg\023('iA\274p\024\250\344\320Ej\b\261\036\240u\321\372\351n\037\361\216\026\025\372\025r\217\001\351z\372P\351\275L\225\0220@\363\351\274\232a\3637\270\026\250\232\267\350\371\356C\230\024\001\234\3417jG\353\001M\231\351\"\322\025$%\261\"\rd[\335GSf\213\374\212hC\226\t\224\216\261\325n}u72NO0\216,7[\020(\315\036\360\206\370\273\261\226\201\023\344\277W\031APF\211\363\365\373\264\307\021D\273u\271\247{\323\320)\262\356\347|\2421\031oeK\244V\0205\261\347^z\265z\\;(\235\236\204\207\265\235\022\376"
 304      BBF2 5D11 
 304      5893 9339 
 304      5075 3E80 
 304      86AF 68D2 
 305 014b 8E48 5E43 	 .ascii "\216H^C"
 306               	 .text
 307               	 .section .gnu.lto_et_push16.4bd8312f431074a0,"",@progbits
 308 0000 789C 8590 	 .string "x\234\205\2201n\302@\020E\377\2375\226\233\210\264)P\350\350r\035#\201\204\"\007\n\313\001\n\272\024\3308\005\245o"
 308      316E C240 
 308      1045 FF9F 
 308      3596 9B88 
 308      B429 50E8 
 309 0028 D451 CC15 	 .string "\324Q\314\025\270"
 309      B800 
 310 002e 2038 013D 	 .ascii " 8\001=\\ i\310\254\215\2334\214\364\377\256v\336\037\215V \370"
 310      5C20 69C8 
 310      AC8D 9B34 
 310      8CF4 FFAE 
 310      76DE 1F8D 
 311 0045 5F4F AA1F 	 .ascii "_O\252\037U]E\003J\266\003\022OH{\0011\025N\273,\330\265lN\327"
 311      555D 4503 
 311      4AB6 0312 
 311      4F48 7B01 
 311      3115 4EBB 
 312 005f 6B7E DC2F 	 .ascii "k~\334//4\0369\246\016\214\b\243F\327\232B5|\306q\326\004\006"
 312      2F34 1E39 
 312      A60E 8C08 
 312      A346 D79A 
 312      4235 7CC6 
 313 0077 45C8 57B7 	 .ascii "E\310W\267\223\332\024{\232-\322<\375Z4\336\270b\r!%$;\214(\236"
 313      93DA 147B 
 313      9A2D D23C 
 313      FD5A 34DE 
 313      B862 0D21 
 314 0091 C25B CCCE 	 .ascii "\302[\314\316iX\265\214v\201=\234\362\001\370\300o<\217\037#"
 314      6958 B58C 
 314      7681 3D9C 
 314      F201 F8C0 
GAS LISTING  			page 24


 314      6F3C 8F1F 
 315 00a6 9A01 CB8D 	 .ascii "\232\001\313\215\024\212\350\334\202\337\317U\322\rm\377N\322"
 315      148A E8DC 
 315      82DF CF55 
 315      D20D 6DFF 
 315      4ED2 
 316 00b8 2D92 0724 	 .ascii "-\222\007$\247K\253\342\312\362\225\321]\355g=\f\373\223^0z\037"
 316      A74B ABE2 
 316      CAF2 95D1 
 316      5DED 673D 
 316      0CFB 935E 
 317 00cf BF4E 5E02 	 .ascii "\277N^\002\374\001\310=?\037"
 317      FC01 C83D 
 317      3F1F 
 318               	 .text
 319               	 .section .gnu.lto_et_init.4bd8312f431074a0,"",@progbits
 320 0000 789C ADD2 	 .string "x\234\255\3221K\303P\020"
 320      314B C350 
 320      1000 
 321 000a E0BB 7B2F 	 .string "\340\273{/i\b\261\366\0078\370\007*\210\277\302_\320\202\202H\325\241T\315P\\\034\372*\025\034\024;\327\241\212\202\213\350\356\244\213\350\240\342?\350\017pRT\320\241\336\245I\2364\233\344A\356\275<\356\356;H\b\b\306\327\034?[\n`\222wt"
 321      6908 B1F6 
 321      0738 F807 
 321      2A88 BFC2 
 321      5FD0 8282 
 322 005c A9FB 04D0 	 .string "\251\373\004\320\366\210T\357\016\300\370\372\263"
 322      F688 54EF 
 322      0EC0 F8FA 
 322      B300 
 323 006a 2650 A847 	 .ascii "&P\250G\367\032Q\016\200\320\"\245\261\265\210Q\227+\272\031"
 323      F71A 510E 
 323      80D0 22A5 
 323      B1B5 8851 
 323      972B BA19 
 324 007e 0C87 976F 	 .ascii "\f\207\227o\317\307\007\250K\204!\202\206\006\202+\301\223\340"
 324      CFC7 07A8 
 324      4B84 2182 
 324      8606 822B 
 324      C193 E0
 325 0091 4B08 2414 	 .ascii "K\b$\024%\360r\240cLw\032`-z\255p\224\326U$\331\325=t^o?\016"
 325      25F0 72A0 
 325      634C 771A 
 325      602D 7AAD 
 325      7094 D655 
 326 00ae 6905 4F78 	 .ascii "i\005Ox\256:\322\0026\020\377\216^E\005<\244z\204\235\353\335"
 326      AE3A D202 
 326      3610 FF8E 
 326      5E45 053C 
 326      A47A 849D 
 327 00c4 F77E 39C9 	 .ascii "\367~9\311\324G\320\343\\\032\253\341\264\207na\224T\206\013"
 327      D447 D0E3 
 327      5C1A ABE1 
 327      B487 6E61 
 327      9454 860B 
 328 00d8 C36B 9627 	 .ascii "\303k\226'\341\344\2661\245\006\252m\3706{r\322aT$\305:*\225"
 328      E1E4 B631 
 328      A506 AA6D 
 328      F836 7B72 
GAS LISTING  			page 25


 328      D261 5424 
 329 00f0 9393 BA75 	 .ascii "\223\223\272u\271\215\320\257\376T\202\272i\237\324\305\324\235"
 329      B98D D0AF 
 329      FE54 82BA 
 329      699F D4C5 
 329      D49D 
 330 0102 FFBF 8A56 	 .ascii "\377\277\212Vuc\365\307\252^V\245<T\262\252\027\253C\253\372"
 330      7563 F5C7 
 330      AA5E 56A5 
 330      3C54 B2AA 
 330      17AB 43AB 
 331 0117 5955 E5A1 	 .ascii "YU\345\241*\253\372\261zz\226\252AV\325y\250\332\252A\254\236"
 331      2AAB FAB1 
 331      7A7A 96AA 
 331      4156 D579 
 331      A8DA AA41 
 332 012d 5BB5 9855 	 .ascii "[\265\230U\235<T\307\252\305\344w\326\321\217\377\002\355\301"
 332      9D3C 54C7 
 332      AAC5 E477 
 332      D6D1 8FFF 
 332      02ED C1
 333 0140 7EDC 5952 	 .ascii "~\334YR\335$\263\302}8A\276\315\304\306js\251\266\271\036.7g"
 333      DD24 B3C2 
 333      7D38 41BE 
 333      CDC4 C66A 
 333      73A9 B6B9 
 334 0158 6AF0 0B7C 	 .ascii "j\360\013|\342\311\337"
 334      E2C9 DF
 335               	 .text
 336               	 .section .gnu.lto_et_xmitpacket.4bd8312f431074a0,"",@progbits
 337 0000 789C 8D50 	 .ascii "x\234\215P\315J\202A\024=gf>\314(\260\027\210\352\001\024\204"
 337      CD4A 8241 
 337      143D 6766 
 337      3ECC 28B0 
 337      1788 EA01 
 338 0016 5EA1 4504 	 .ascii "^\241E\004-\023\nB\324\nQ"
 338      2D13 0A42 
 338      D40A 51
 339 0021 93F8 5AB5 	 .string "\223\370Z\265p\f\205\026A\222\273ZI\240\313\242U\013\203p\325\017\005\201\213\332\271i\327\003D\004_s\265\"\\D\0033\367r\347\236\237{\025\024\206O\334\335\003\002\323.\322\003U\355\001(\217(e\332\223\260\243\272\033\203\035\3234\203\262!%\001QR\332\260\264B\341\340\f\032\326\036\366^\232\347^\365\314\356\331 (\345\350\304\"\304\032\261\314\034\031\351\0075d\340T]\365\202`\277^\355\314\207\211\034\265A\232\r\307\347\261H\204\334#\002\036*\326\326\246 d\356,\271W\\$\250$\352{\354\336\2745\343i\236\270\001\2624\3078*[\033q\016v\360\356\334\270\314\024)\312b\301|I_\243\362Z\016\377\200\344\313\373m-A\215nL\310\357.Z\267j\320\370\037\352\254\360\b\354\251\325\371\023\246\207`\241oa\323\037\353\321\355[\312\375\231\237Ai\325n\253\355\372\345 \007\364G=,\373\240"
 339      700C 8516 
 339      4192 BB5A 
 339      49A0 CBA2 
 339      550B 8370 
 340 0122 C4C5 7821 	 .ascii "\304\305x!\343\257\2466\363\305\244\037Mabn+\231\317,n\373\013"
 340      E3AF A636 
 340      F3C5 A41F 
 340      4D61 626E 
 340      2B99 CF2C 
 341 0139 99C2 BABF 	 .ascii "\231\302\272\277\021\215\317~\002k\203m\r"
 341      118D CF7E 
 341      026B 836D 
 341      0D
 342               	 .text
 343               	 .section .gnu.lto_et_recvpack.4bd8312f431074a0,"",@progbits
 344 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\005\304\374@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327]\273\264`\035#\013\310(V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\202\221\tD3_dh|\260\3263\205q!#+C4c\016#\334\322pFF\220\002\220\021\274y\251%\361\311\371\271\005\211%z\311\f"
 344      6062 4007 
 344      9240 1C05 
GAS LISTING  			page 26


 344      C4FC 40CC 
 344      C8CC C0C8 
 345 007a 0932 1EC0 	 .ascii "\t2\036\300"
 346               	 .text
 347               	 .section .gnu.lto_et_start_checksum.4bd8312f431074a0,"",@progbits
 348 0000 789C 8555 	 .ascii "x\234\205UMhTW\024>\347\336\367s\347e&Nb\242\371A\t\001\251\325"
 348      4D68 5457 
 348      143E E7DE 
 348      F773 E765 
 348      264E 62A2 
 349 001a 56B0 1B97 	 .ascii "V\260\033\227\256\272\260\340N0\240 :\243\264cb\207v\212\210"
 349      AEBA B0E0 
 349      4E30 A020 
 349      3AA3 B463 
 349      6287 768A 
 350 002f 8BBC F125 	 .ascii "\213\274\361%0R\225 \310\324\352F\302\314\030Q#\b\205\232\210"
 350      3052 9520 
 350      C8D4 EA46 
 350      C2CC 1851 
 350      2308 859A 
 351 0044 510A 555B 	 .ascii "Q\nU[\005\343*\256\006J)\255\342\242\264(\"\276\236\373\3672"
 351      05E3 2AAE 
 351      064A 29AD 
 351      E2A2 B428 
 351      22BE 9EFB 
 352 005a 4903 5E98 	 .ascii "I\003^\230\373\363\235\337\357\234{\3370`\260|\034\243_\303\003"
 352      FBF3 9DDF 
 352      EF9C 7BDF 
 352      3060 B07C 
 352      1CA3 5FC3 
 353 006f F888 566C 	 .ascii "\370\210Vl\003d\023\217\001\312\202\241\2437\\o\356\n\207\361"
 353      0364 138F 
 353      01CA 82A1 
 353      A337 5C6F 
 353      EE0A 87F1 
 354 0083 533F 0384 	 .ascii "S?\003\204\201;\346C\230v\231W\371\200NB\316i\017\205V\027\030"
 354      813B E643 
 354      9876 9957 
 354      F980 4E42 
 354      CE69 0F85 
 355 009a C80D FA7A 	 .ascii "\310\r\372z\275+\002\346k\263\2242K!J\034\020F\031w\\O\370A\n"
 355      BD2B 02E6 
 355      6BB3 9432 
 355      4B21 4A1C 
 355      1046 1977 
 356 00b3 47F7 A24C 	 .ascii "G\367\242L\305\031\204Kax\266Y\373\341/\034\177\330\f'\302w\361"
 356      C519 844B 
 356      6178 B659 
 356      FBE1 2F1C 
 356      7FD8 0C27 
 357 00ca 280E 2365 	 .ascii "(\016#e\235E8\204\260\207\016\230U\013\223L\212\270\310C\333"
 357      9D45 3884 
 357      B087 0E98 
 357      550B 934C 
 357      8AB8 C843 
 358 00df CEFD 3B7F 	 .ascii "\316\375;\177\332\r"
 358      DA0D 
GAS LISTING  			page 27


 359 00e5 6F84 9530 	 .string "o\204\2250\216G\207\2213X\277\242%\374\317\360\365<\377.\034\233\213\343\355\303\3500\030X4\033\320f\316\212f\325\247gZ\342\271\f6\274/\3364\233k\306\361\305\352\370\374\316u\by\234\304A\"\230\307\006\255\234\326\032\255\216Y],\"zF\350\323\201\ts\b`\030\2756\232\374\264\321\315\030_\355R\262\212&\221\225\342\016#\356\224\207\325r\3522H\267Y\327Hp\255\234z\344\324k\340>:@?\035.\321\201\206\013ca81\240\203\030\366\257\346\317\265\260O1\330\370>\366\3327H-\032\273i\246k1\204\214\026\376\bN\274\341y\234B\027\n\350\035\2077!\215\013\344$\370\030\256\312\375m\332\213\"\362\002i\264\214\007pbn\263\266\313\343\025rO\326\nm\316\376\351Y\\\206\225\t9\306\242y\373d\"\23342n\357\323\020r\240[K\031E\337Fq\3553\233\224( KX="
 359      8E47 8791 
 359      3358 BFA2 
 359      25FC CFF0 
 359      F53C FF2E 
 360 01e6 B634 A800 	 .string "\2664\250"
 361 01ea 200A B7C6 	 .string " \n\267\306\377F\253\037\\\200\357I\275\315\230\245\214{\322z\031\325\023-\022\007\022\214*\321\001\213\245\013\222f\333\222(5\025%mT_\3256Y\345L\001Q\345\277,\255Ie\220\261\234\034\240\247\307\211\273\200\304\033W\305P\200&\301\026\001mN5\271\017?\375^vm4,\240oK\277"
 361      FF46 AB1F 
 361      5C80 EF49 
 361      BDCD 98A5 
 361      8C7B D27A 
 362 0249 680A C72A 	 .ascii "h\n\307*\224o\206_v\027\200Q\375\331l\365\032)\n\376\266:\305"
 362      946F 865F 
 362      7617 8051 
 362      FDD9 6CF5 
 362      1A29 0AFE 
 363 0260 1680 9BD2 	 .ascii "\026\200\233\322\263_\253#D\201\320\3752#W\267=\232\211\032\365"
 363      B35F AB23 
 363      4481 D0FD 
 363      3223 57B7 
 363      3D9A 891A 
 364 0275 3EEB BF9D 	 .ascii ">\353\277\235\374'\335\270\017c/\312\251D\244\360\326\336\017"
 364      FC27 DDB8 
 364      0F63 2FCA 
 364      A944 A4F0 
 364      D6DE 0F
 365 0288 51AB EF71 	 .ascii "Q\253\357qI\252\371\313\224\237\334\321\206\272d\332Lm\032\226"
 365      49AA F9CB 
 365      949F DCD1 
 365      86BA 64DA 
 365      4C6D 1A96 
 366 029c 9CEA D0CD 	 .ascii "\234\352\320\315z\177\036\247\225\313U\272Ei\323\"\267\265E\007"
 366      7A7F 1EA7 
 366      95CB 55BA 
 366      4569 D322 
 366      B7B5 4507 
 367 02b0 AC52 96F4 	 .ascii "\254R\226\364t\331\271\205:T\203\262\246\336\323-\r\352\260\231"
 367      74D9 B985 
 367      3A54 83B2 
 367      A6DE D32D 
 367      0DEA B099 
 368 02c4 09C9 4ED6 	 .ascii "\t\311N\326\250\213@O\026\333E\211\373\366n\315Dw\352\033-\267"
 368      A88B 404F 
 368      16DB 4589 
 368      FBF6 6ECD 
 368      4477 EA1B 
 369 02da D505 7454 	 .ascii "\325\005tT\225\342\230\303\362\353\320\255\344\235+\\\207n\033"
 369      95E2 98C3 
 369      F2EB D0AD 
 369      E49D 2B5C 
 369      876E 1B
 370 02ed 2D90 DDC5 	 .ascii "-\220\335\305\245\335u\224\237\353\321L}\235\365\324i\302d\262"
 370      A5DD 7594 
 370      9FEB D14C 
 370      7D9D F5D4 
 370      69C2 64B2 
 371 0301 B6BA 5B13 	 .ascii "\266\272[\023Q\362>ls\235\002v\tjc\267\377\317y\225z\3124\354"
GAS LISTING  			page 28


 371      51F2 3E6C 
 371      739D 0276 
 371      096A 63B7 
 371      FFCF 7995 
 372 0319 7AF4 5B7D 	 .ascii "z\364[}\275\265[c]\n\235\367\265\250\316\254l\3552\331L\362\300"
 372      BDB5 5B63 
 372      5D0A 9DF7 
 372      B5A8 CEAC 
 372      6CED 32D9 
 373 0330 7B48 B894 	 .ascii "{H\270\224\357\217Q\342\262Wy\355Y\201o\257\352\315\363\350\217"
 373      EF8F 51E2 
 373      B257 79ED 
 373      5981 6FAF 
 373      EACD F3E8 
 374 0345 454A 7D16 	 .ascii "EJ}\026\235M\234\367\023\252\240\035\032\241&\227\3030K_4\371"
 374      9D4D 9CF7 
 374      13AA A01D 
 374      1AA1 2697 
 374      C330 4B5F 
 375 035b 59A9 C85D 	 .ascii "Y\251\310]\273\376\367\220)\264+\272d\005\360\004\312\315g\037"
 375      BBFE F790 
 375      29B4 2BBA 
 375      6405 F004 
 375      CACD 671F 
 376 036f 2617 07F4 	 .ascii "&\027\007\364W\n\211\266|[\231#\007K\373r_\216\024\367\227\266"
 376      570A 89B6 
 376      7C5B 9923 
 376      074B FB72 
 376      5F8E 14F7 
 377 0385 E420 F3E9 	 .ascii "\344 \363\351\256\334\347\007s\207\277\376fd\313'\333\360\013"
 377      AEDC E707 
 377      7387 BFFE 
 377      6664 CB27 
 377      DBF0 0B
 378 0398 2747 3B56 	 .ascii "'G;V*9G\213\245\257\376\003\202\350\211\325"
 378      2A39 478B 
 378      A5AF FE03 
 378      82E8 89D5 
 379               	 .text
 380               	 .section .gnu.lto_et_write_ctrl_reg16.4bd8312f431074a0,"",@progbits
 381 0000 789C 5D8F 	 .ascii "x\234]\217\275J\003A\024\205\317\2713+i$\202`)\366B\002\276\206"
 381      BD4A 0341 
 381      1485 CFB9 
 381      332B 6924 
 381      8260 29F6 
 382 0018 0F90 8082 	 .ascii "\017\220\200\202H\374\201\020\343\026\351,2kR\244\210\220\332"
 382      48FC 8110 
 382      E316 E92C 
 382      326B 52A4 
 382      8890 DA
 383 002b 345A 07B4 	 .ascii "4Z\007\264\261\022\213`\033\025\002!\365v\276\202\330\304;3+"
 383      B112 8B60 
 383      1B15 0221 
 383      F576 BE82 
 383      D8C4 3B33 
 384 0040 8817 E6FE 	 .ascii "\210\027\346\376\3177g\004\202\377\266\247g\223@Y#\023PF\037"
 384      CF37 6704 
GAS LISTING  			page 29


 384      82FF B6A7 
 384      6793 4059 
 384      2313 5046 
 385 0055 4056 12B1 	 .ascii "@V\022\261/\333p%\263\250zO\033\333\226\364\t\210\256\030\313"
 385      2FDB 7025 
 385      B3A8 7A4F 
 385      1BDB 96F4 
 385      0988 AE18 
 386 006a EE21 03E4 	 .ascii "\356!\003\344Q\246\371j\365\360\264\274\2330Y\023\246\204U\347"
 386      51A6 F96A 
 386      F5F0 B4BC 
 386      9B30 5913 
 386      A684 55E7 
 387 007e 8709 FACE 	 .ascii "\207\t\372\316\215v\200\263\260ZS\357\tu\212\217\346\r\275|\274"
 387      8D76 80B3 
 387      B05A 53EF 
 387      0975 8A8F 
 387      E60D BD7C 
 388 0093 7FC2 7B7D 	 .ascii "\177\302{}\273I\271\3010\353\273\351|\311V$\2373J.\006\317[\332"
 388      BB49 B9C1 
 388      30EB BBE9 
 388      7CC9 5624 
 388      9F33 4A2E 
 389 00ab 3FD0 218B 	 .ascii "?\320!\213 \272a\376|\247\256\325\242jf\2525B\303\370\035\327"
 389      20BA 61FE 
 389      7CA7 AED5 
 389      A26A 66AA 
 389      3542 C3F8 
 390 00c1 B3AF CF57 	 .ascii "\263\257\317W\211\2551n3\3476Z\224+|\273\201\317LJ\253\267=2"
 390      89AD 316E 
 390      33E7 365A 
 390      942B 7CBB 
 390      81CF 4C4A 
 391 00d9 D29A A10E 	 .ascii "\322\232\241\016@\033\204zb!g\216,\237\354F\326\257\325T\220"
 391      401B 847A 
 391      6221 678E 
 391      2C9F EC46 
 391      D6AF D554 
 392 00ee AE79 B1EB 	 .ascii "\256y\261\353\355\323\316Q\343\362\"=\356T\032\370\001z\271J"
 392      EDD3 CE51 
 392      E3F2 223D 
 392      EE54 1AF8 
 392      017A B94A 
 393 0102 47        	 .ascii "G"
 394               	 .text
 395               	 .section .gnu.lto_et_read_ctrl_reg16.4bd8312f431074a0,"",@progbits
 396 0000 789C 5D4F 	 .string "x\234]O\273JCA\020=gv/\244\tZY\212\b\266\006\374\r?\300\200\202H|@\270\232[\244\263\310^Ma\241\220Z\033\375\001S\332\b\246\025\037\020\270\004\004\213|\201\205\225\332\304\231\275\021\324\201\2353\317\263g\004\202\377\266\242o\211\300\214\"\023Pz\317@^\021\361\267\363\b\025W\324\314\323\227eOZ"
 396      BB4A 4341 
 396      103D 6776 
 396      2FA4 095A 
 396      598A 08B6 
 397 0067 A223 CEB3 	 .ascii "\242#\316\263\263\301H\322\227\301x2\271~\035]\3361I\210\224"
 397      B3C1 48D2 
 397      97C1 7832 
 397      B97E 1D5D 
 397      DE31 4988 
 398 007c 1066 84B7 	 .ascii "\020f\204\267H-A7\204\336\002\260\033\3235\365FS\247\030\272"
GAS LISTING  			page 30


 398      482D 4137 
 398      84DE 02B0 
 398      1BD3 35F5 
 398      4653 A718 
 399 0091 471C 8FFB 	 .ascii "G\034\217\373\253\333\274R\001M\312\031N\363n\030|\216\2302\316"
 399      ABDB BC52 
 399      014D CA19 
 399      4EF3 6E18 
 399      7C8E 9832 
 400 00a6 EF95 8069 	 .ascii "\357\225\200i\343}N\353\353\332\024\"\202\350\304\357\313\352"
 400      E37D 4EEB 
 400      EBDA 1422 
 400      82E8 C4EF 
 400      CBEA 
 401 00b8 7428 6AEE 	 .ascii "t(j\356A\005\227\244\261\375\204\243\373\217\267\305\237o\374"
 401      4105 97A4 
 401      B1FD 84A3 
 401      FB8F B7C5 
 401      9F6F FC
 402 00cb 05CE F310 	 .ascii "\005\316\363\020fS\272C|\205\023\213|\246\233\210\244\376\017"
 402      6653 BA43 
 402      7C85 138B 
 402      7CA6 9B88 
 402      A4FE 0F
 403 00de 9F8F 3A8D 	 .ascii "\237\217:\215p\252f\030\303f)\354\005T>\027\3674\225\342\206"
 403      70AA 6618 
 403      C366 29EC 
 403      0554 3E17 
 403      F734 95E2 
 404 00f3 7624 6DC9 	 .ascii "v$m\311tU\017v\332\233\215\326~\266\325^n\340\0337DL*"
 404      7455 0F76 
 404      DA9B 8DD6 
 404      7EB6 D55E 
 404      6EE0 1B37 
 405               	 .text
 406               	 .section .gnu.lto_.symbol_nodes.4bd8312f431074a0,"",@progbits
 407 0000 789C 4D8F 	 .string "x\234M\217\3112CA\024\206\377\323\235\226\334K\220HLee\310\3063Yx\222\023Bb*\245\354YP\026\036\302\346\252\262\314B)k\244,\2141\306\224\213>(\367\364\346\253\357?Cw\033\030\254\030\374\036C\f\254\325\001\346\215\205iw\t8\206\273"
 407      C932 4341 
 407      1486 FFD3 
 407      9D96 DC4B 
 407      9048 4C65 
 408 0053 7998 5562 	 .string "y\230Ub\372/\222\273\205\221\364\036l\376\322M\2376a%}\004\333$5O\340\224\322\026\330)]'\356P\213o\220\222[\257\340d\323\0038\255\366\317S\007|q\216\322)\266\256F\031o\346\031\234Q\373^\300\201\322Wp\250\364\r\334\251\364\035\334\245\364\003\234U\332\006w+\215\301=J?\301\275\352m+\024\310k\276\3009\225\336!\224\177\224\211\363jt\206\270O5]\243S\232f\211\013\252\251B\\L\224\026\211\373\177\265\\&Z \036Hl\211x0\261e\342\241\304\252\304\303\377f\203Ql\277\305#6\260\210\252\355\224\rK\250\034\037\031a\343P8\201F]\030`\253\326\232\262\3418*\265s\337\347\347\252\3021l\357\226l\266\204\375\235\242\315\206\210j\261\263\271"
 408      FA2F 92BB 
 408      8591 F41E 
 408      6CFE D24D 
 408      9F36 6125 
 409 012c B3ED E6A4 	 .string "\263\355\346\244\315{\236|\322\017O=\373\002D\222\027\200\255\203\257=g\213@\024\373\240\337\007R\030"
 409      CD7B 9E7C 
 409      D20F 4F3D 
 409      FB02 4492 
 409      1780 AD83 
 410 014d CE84 833E 	 .ascii "\316\204\203>\227AO\031\3047\202\013\305\304"
 410      9741 4F19 
 410      C437 820B 
 410      C5C4 
 411               	 .text
 412               	 .section .gnu.lto_.refs.4bd8312f431074a0,"",@progbits
GAS LISTING  			page 31


 413 0000 789C 458C 	 .ascii "x\234E\2149\016\200@\f\003\307\331\020\t\226\253\345\020\307"
 413      390E 8040 
 413      0C03 C7D9 
 413      1009 96AB 
 413      E510 C7
 414 0013 B3F8 FF47 	 .ascii "\263\370\377G\210D\301\270\263\3066\214\207\217\002J\314\n.W"
 414      8844 C1B8 
 414      B3C6 368C 
 414      878F 024A 
 414      CC0A 2E57 
 415 0027 43A8 C5DB 	 .ascii "C\250\305\333N\225*\317\256\022\364f\n\037\030\23142\307\242"
 415      4E95 2ACF 
 415      AE12 F466 
 415      0A1F 1899 
 415      3432 C7A2 
 416 003b F54F D972 	 .ascii "\365O\331r\023\332\355H\353\324\225o7\342\005t\357\002\313"
 416      13DA ED48 
 416      EBD4 956F 
 416      37E2 0574 
 416      EF02 CB
 417               	 .text
 418               	 .section .gnu.lto_.decls.4bd8312f431074a0,"",@progbits
 419 0000 789C 9D5A 	 .string "x\234\235Z}p\024U\266\277\267g&\231@\b\204u\335\324\356\326\202\226\373\226\307\356&\242.E\355\226+\337k^!X|\370\376xU/5\231\356\204\251\235\231\304\231\t\310\326{E'\350#\"H\222\r\013\253|\204(\250q\r\t\b\253\022\227Yu\221B\371\212\310\247\304YVW\224U!\b(`\346\235\373\321\323\335wnw&t\325\351\351\217{~\367\234\3379\367\336\323\335\243 \005\315\362#\224\206\355o\023\020:\353C\350{\b\241_\203\344\203\300)\332\f\342\345\347\317\201t\200t\"\266\375"
 419      7D70 1455 
 419      B6BF B767 
 419      2699 4008 
 419      8475 DDD4 
 420 00a2 A41B E415 	 .string "\244\033\344\025\220\036\220= \007@\216\201\234\0049\003\222\002\371\b\344\034H?\310"
 420      901E 903D 
 420      2007 408E 
 420      819C 0439 
 420      0392 02F9 
 421 00bd 881F 2354 	 .ascii "\210\037#T\bR\fR\002r;\310x\220R\220\211 \223Af\202\224\203\314"
 421      0852 0C52 
 421      0272 3BC8 
 421      7890 5290 
 421      8920 9341 
 422 00d6 0599 0F52 	 .ascii "\005\231\017REt@7\n\277\265 \t\220E \217\200\374\016\344\177"
 422      4574 4037 
 422      0ABF B520 
 422      0990 4520 
 422      8F80 FC0E 
 423 00ec 40EA 41D6 	 .ascii "@\352A\326\202\374\021d\003\310&\214l[7\367\303\003R\204\030"
 423      82FC 1164 
 423      03C8 268C 
 423      6C5B 37F7 
 423      C303 5284 
 424 0101 DE66 6843 	 .ascii "\336fhC\232=\f\273v\336\036\363\266\036\336\337N\304\372\264"
 424      9A3D 0CBB 
 424      76DE 1EF3 
 424      B61E DEDF 
 424      4EC4 FAB4 
 425 0115 6EC4 673F 	 .ascii "n\304g?\347\302\300\372_\314t\b\3463 \317r\035\205\267\337\302"
 425      E7C2 C0FA 
 425      5FCC 7408 
 425      E633 20CF 
 425      721D 85B7 
GAS LISTING  			page 32


 426 012b FB4A 0858 	 .ascii "\373J\bX=\022\273\bV'\307\362!\323\256\036\376\273H\300\330\303"
 426      3D12 BB08 
 426      5627 C7F2 
 426      21D3 AE1E 
 426      FEBB 48C0 
 427 0141 ED29 E418 	 .ascii "\355)\344\030^\036/\202\361&\307\307\026\234=\274\277\275 \373"
 427      5E1E 2F82 
 427      F126 C7C7 
 427      169C 3DBC 
 427      BFBD 20FB 
 428 0155 41F6 D9E1 	 .ascii "A\366\331\341h\034\tV\273\305&\202\347\263`\275Dl\0049\317\373"
 428      681C 0956 
 428      BBC5 2682 
 428      E7B3 60BD 
 428      446C 0439 
 429 016b F15A F00F 	 .ascii "\361Z\360\017p\277{A\216\n\330$?F\b\376vr=\303_\203\277m \277"
 429      70BF 7B41 
 429      8E0A D824 
 429      3F46 08FE 
 429      7672 3DC3 
 430 0185 01E9 0279 	 .ascii "\001\351\002y\225\353\3738F7\317\223]\230\361+\343\226\344\341"
 430      95EB FB38 
 430      4637 CF93 
 430      5D98 F12B 
 430      E396 E4E1 
 431 0199 58CE A7D1 	 .ascii "X\316\247\321W\017\0347\360~<\\/\237\363\244Xbw\002\344$fc\340"
 431      570F 1C37 
 431      F07E 3C5C 
 431      2F9F F3A4 
 431      5862 7702 
 432 01b2 3F30 F39F 	 .ascii "?0\363\237\360\261\025\231v\021{O\201\214\266\330x\0323.\026"
 432      F0B1 1599 
 432      7611 7B4F 
 432      818C B6D8 
 432      781A 332E 
 433 01c7 C0EF 0720 	 .ascii "\300\357\007 \325\374|\037\374\276\001\362\026\310^\236\317t"
 433      D5FC 7C1F 
 433      FCBE 01F2 
 433      16C8 5E9E 
 433      CF74 
 434 01d9 9CC0 F1C7 	 .ascii "\234\300\361\307<\337g\362\2347\374\373\324\222\377\237s\233"
 434      3CDF 67F2 
 434      9C37 FCFB 
 434      D492 FF9F 
 434      739B 
 435 01eb 133C EF17 	 .ascii "\023<\357\027\361\334\027s\223\214\273b\301g\322\244\301\342"
 435      F1DC 1773 
 435      938C BB62 
 435      C167 D2A4 
 435      C1E2 
 436 01fd DB45 907E 	 .ascii "\333E\220~n\2371\316\253y\316\221x^\"~Y\370&\230\237Z\3548\311"
 436      6E9F 31CE 
 436      AB79 CE91 
 436      785E 227E 
 436      59F8 2698 
 437 0216 B9B3 8E3B 	 .ascii "\271\263\216;\353\226\342\371`pb\304\027\361\274H\361\030\222"
 437      EB96 E2F9 
GAS LISTING  			page 33


 437      6070 62C4 
 437      17F1 BC48 
 437      F118 92
 438 0229 6B67 85FC 	 .ascii "kg\205\374 \363\205\037\331s\017s;\b\336W\330\3145\205\267?\206"
 438      20F3 851F 
 438      D973 0F73 
 438      3B08 DE57 
 438      D8CC 3585 
 439 0240 B237 32E7 	 .ascii "\26272\347\344q\335B\213\256\341\243\241\177\216\353\223\343"
 439      E471 DD42 
 439      8BAE E1A3 
 439      A17F 8EEB 
 439      93E3 
 440 0252 2F40 2E08 	 .ascii "/@.\b8d\336*@\366\261Nl\273\fXW\371\230\376\006v\333-\230D\247"
 440      3864 DE2A 
 440      40F6 B14E 
 440      6CBB 0C58 
 440      57F9 98FE 
 441 026d 9BF7 7D5D 	 .ascii "\233\367}]\300\033\340xV\377:-x\006\226\225\257\001\216G\216"
 441      C01B E078 
 441      56FF 3A2D 
 441      7806 9695 
 441      AF01 8E47 
 442 0282 7D70 234F 	 .ascii "}p#O\340\233\314\251\204\263\257\221\335\036\202}\205`[\332*"
 442      E09B CCA9 
 442      84B3 AF91 
 442      DD1E 827D 
 442      8560 5BDA 
 443 0297 BCBD 61DF 	 .ascii "\274\275a\3370\001\213\314\315\306\030'\372dL`\213]\235\026\234"
 443      3001 8BCC 
 443      CDC6 1827 
 443      FA64 4C60 
 443      8B5D 9D16 
 444 02ac 426C DA55 	 .ascii "Bl\332U\004\307#\005\254b\236_>\216\347\225pUl\261\345\273\202"
 444      04C7 2305 
 444      AC62 9E5F 
 444      3E8E E795 
 444      7055 6CB1 
 445 02c3 7E89 C516 	 .ascii "~\211\305\026\262\366\274\b\362\024\234\\\3439\360}\336\036\363"
 445      B2F6 BC08 
 445      F214 9C5C 
 445      E339 F07D 
 445      DE1E F3
 446 02d6 B604 6F0C 	 .ascii "\266\004o\ffk\200u#k\f\311\005\353\234\363}\234=\277\336\316"
 446      666B 8075 
 446      236B 0CC9 
 446      05EB 9CF3 
 446      7D9C 3DBF 
 447 02ec 71C7 C1EF 	 .ascii "q\307\301\357O\370\030\333 `\215\3471\367X\364\306\013m\310F"
 447      4FF8 18DB 
 447      2060 8DE7 
 447      31F7 58F4 
 447      C60B 6DC8 
 448 0301 D6B3 9142 	 .ascii "\326\263\221B\237$\346d\0369\217\262\347R2\377tbs.\335l\361\255"
 448      9F24 E664 
 448      1E39 8FB2 
 448      E752 32FF 
GAS LISTING  			page 34


 448      7462 732E 
 449 0319 94DB 45D6 	 .ascii "\224\333E\326\264\273A\356\221\214\373\211\274\rY\277;\221\271"
 449      B4BB 41EE 
 449      918C FB89 
 449      BC0D 59BF 
 449      3B91 B9
 450 032c 1619 1813 	 .ascii "\026\031\030\023\271\257\277\202\337{A\256\203\334\300l\215\263"
 450      B9AF BF82 
 450      DF7B 41AE 
 450      83DC C06C 
 450      8DB3 
 451 033e 6E93 79BB 	 .ascii "n\223y\273v\027\254\311\274\257\351\360\373-\310\200\004g8Z\241"
 451      7617 ACC9 
 451      BCAF E9F0 
 451      FB2D C880 
 451      0467 385A 
 452 0353 EB0D 7A5B 	 .ascii "\353\rz[}\333-\353\212\nP#;\321\341\004\241\377\302*\206k\243"
 452      7DDB 2DEB 
 452      8A0A 5023 
 452      3BD1 E104 
 452      A1FF C22A 
 453 036a E841 6101 	 .ascii "\350Aa\001\215\333\217\321\263\272\336\224z,}A\321u\257\212\333"
 453      8DDB 8FD1 
 453      B3BA DE94 
 453      7A2C 7D41 
 453      D175 AF8A 
 454 037f 31B9 7E1B 	 .ascii "1\271~\033F\343\321\013:\334\321\365\315\303\263YF*\366\025d"
 454      46E3 D10B 
 454      3ADC D1F5 
 454      CDC3 B359 
 454      462A F615 
 455 0394 9DAB 780B 	 .ascii "\235\253x\013\036\217X?\3646?H\247=\362\316-\346\022\013Y\357"
 455      1E8F 583F 
 455      F436 3F48 
 455      A73D F2CE 
 455      2DE6 120B 
 456 03aa F286 2ADE 	 .ascii "\362\206*\336\212EC\270{\251z\375\016\213{c\rEo\306\275\344\215"
 456      8A45 43B8 
 456      7BA9 7AFD 
 456      0E8B 7B63 
 456      0D45 6FC6 
 457 03c1 7CB8 F41C 	 .ascii "|\270\364\034um\002\316\330\311p\363\005G\362\355\216\344\027"
 457      756D 02CE 
 457      D8C9 70F3 
 457      0547 F2ED 
 457      8EE4 17
 458 03d4 9807 A468 	 .ascii "\230\007\244h\033)\030\315\215\320\233\333\n-F\370\r#\260a\004"
 458      1B29 18CD 
 458      8DD0 9BDB 
 458      0A2D 46F8 
 458      0D23 B061 
 459 03e9 A112 2E51 	 .ascii "\241\022.Q\033~)I\\\3269\266w\216\013\314\2034v\"Q\305\035&7"
 459      1B7E 2949 
 459      5CD6 39B6 
 459      778E 0BCC 
 459      8334 7622 
 460 0402 197B 7477 	 .ascii "\031{tw{\232\222_\021R:\251A\367\213\244\340\202!\3315\006m\324"
GAS LISTING  			page 35


 460      7B9A 925F 
 460      1152 3AA9 
 460      41F7 8BA4 
 460      E082 21D9 
 461 041a 9317 5247 	 .ascii "\223\027RG\366\356\372\331czJO\246\323\367\215\272\025\255\321"
 461      F6EE FAD9 
 461      637A 4A4F 
 461      A6D3 F78D 
 461      BA15 ADD1 
 462 042e C956 AF4F 	 .ascii "\311V\257O~X\305\277\376\256\324\024\202\275\035\337J\217<\314"
 462      7E58 C5BF 
 462      FEAE D414 
 462      82BD 1DDF 
 462      4A8F 3CCC 
 463 0442 1D66 938A 	 .ascii "\035f\223\212\027x2\375+\350\277\355\006\336\201\236\321\365"
 463      1778 32FD 
 463      2BE8 BFED 
 463      06DE 819E 
 463      D1F5 
 464 0454 167D 4333 	 .ascii "\026}C3p\232q\242\232\264\351\306c\244\035\261F\260\375\033\332"
 464      709A 71A2 
 464      9AB4 E9C6 
 464      63A4 1DB1 
 464      46B0 FD1B 
 465 0469 42AC 3AA9 	 .ascii "B\254:\251?OU\301.\304\325l\016\277\214\025\353\005\356\340\216"
 465      3F4F 55C1 
 465      2EC4 D56C 
 465      0EBF 8C15 
 465      EB05 EEE0 
 466 047e B7BF 68C1 	 .ascii "\267\277h\301G\364\372\225\372\327\351t>\262\273\330i&o\226\217"
 466      47F4 FA95 
 466      FAD7 E974 
 466      3EB2 BBD8 
 466      6926 6F96 
 467 0493 AF72 1F33 	 .ascii "\257r\0373\016-\266;\304\355j\321\033[\223\330\260U\305\2578"
 467      0E2D B63B 
 467      C4ED 6AD1 
 467      1B5B 93D8 
 467      B055 C5AF 
 468 04a8 78C3 515F 	 .ascii "x\303Q_\3136\262-\225<\325\n\254\324\353\220\253\272>\226u\255"
 468      CB36 B22D 
 468      953C D50A 
 468      ACD4 EB90 
 468      ABBA 3E96 
 469 04be A0FF C3D2 	 .ascii "\240\377\303\322\016\033\204\016{\334;|]\332\341\365\345\253"
 469      0E1B 840E 
 469      7BDC 3B7C 
 469      5DDA E1F5 
 469      E5AB 
 470 04d0 7C7A 979E 	 .ascii "|z\227\236J\247\307x\355\224<\347BIR\f;i\314O\204i\301eVx\323"
 470      4AA7 C778 
 470      ED94 3CE7 
 470      4249 520C 
 470      3B69 CC4F 
 471 04eb 362B 64B0 	 .ascii "6+d\260\274\005\354\327\226Dk\2614\213.\257gY\304\346\207\215"
 471      BC05 ECD7 
 471      9644 6BB1 
GAS LISTING  			page 36


 471      348B 2EAF 
 471      6759 C4E6 
 472 0501 B4D1 1E93 	 .ascii "\264\321\036\223\007\333|\302Z\031\232\257\257a\232\304\b\005"
 472      07DB 7CC2 
 472      5A19 9AAF 
 472      AF61 9AC4 
 472      0805 
 473 0513 1E65 044D 	 .ascii "\036e\004M\233\261\334T\252\331\244_\345\232^r\263c\020E\257"
 473      9BB1 DC54 
 473      AAD9 A45F 
 473      E59A 5E72 
 473      B363 1045 
 474 0528 99B8 0DFA 	 .ascii "\231\270\r\372\316\365\317g\254E.\226r~\376&\215X\357~e\235~"
 474      CEF5 CF67 
 474      AC45 2E96 
 474      727E FE26 
 474      8D58 EF7E 
 475 053f 219D 5EAD 	 .ascii "!\235^\255\353\205\366\210\265\273D\354\240\03012\355dN\332\261"
 475      EB85 F688 
 475      B5BB 44EC 
 475      A018 3132 
 475      ED64 4EDA 
 476 0554 8CF3 4E39 	 .ascii "\214\363N9\347\307\271\377\035\224\271$mt\300\221\200\216\fs"
 476      E7C7 B9FF 
 476      1D94 B924 
 476      6D74 C091 
 476      808E 0C73 
 477 0568 2DFA DABD 	 .ascii "-\372\332\275J\t\353L\305\357\200snz\355\330\306\\+c\256\235"
 477      4A09 EB4C 
 477      C5EF 8073 
 477      6E7A EDD8 
 477      C65C 2B63 
 478 057e 33E7 A4C7 	 .ascii "3\347\244\307\275=\222\315\\\352Br\367;+y\256o\232\214\214\301"
 478      BD3D 92CD 
 478      5CEA 4272 
 478      F73B 2B79 
 478      AE6F 9A8C 
 479 0594 B537 B7C1 	 .ascii "\2657\267\301u\314}p\035\227L9\251\344\245\023\r^\032\253\221"
 479      75CC 7D70 
 479      1D97 4C39 
 479      A9E4 A513 
 479      0D5E 1AAB 
 480 05a9 394F      	 .ascii "9O"
 481 05ab A8A7 C4C9 	 .string "\250\247\304\311\346\240\334>X\221\250}|\016<)\316\201\247e\271\243\257\320\223\030&\370=d5;E\335\377P\016\257\333\341\317\210\360}\322\324\334\370\016K\315\221laP\340\tH\232A\3374\231s\277\221\t\251\034'\377U\311\206\022\2241,%\032\366w\251a\315Off9\224\373\230\371X\214\305\025\247\\YA\3112\222\363#\367\344\374\247\324\304\rO\376T_\246\017\244\3238\347\\\371\324>\246\205\211\267\323e\346=o\316\274\266\225\033e\315\001i\207\b\266\262\b\236\247s\300\n\2054:\3478\226\317[\346\200\235\315\331\261?wS\261?'\306\376s)\261=\007\225!\216\301K.\274\322\022M\317\261d\3144\326\013K\344mU|\025\377\030\366_\363\242\215\334\"\307\244\002\240\033^j\\ZJ\302\261Zq,?s\203p\312\210\313fF\b\031\320\252H3`\r_\005.\263\365\2236\352w\314"
 481      E6A0 DC3E 
 481      5891 A87D 
 481      7C0E 3C29 
 481      CE81 A765 
 482 06ac 0E2F 8D63 	 .ascii "\016/\215c\277\030\307k\3228\366\0179\216\351\301\342\350^\372"
 482      BF18 C76B 
 482      D238 F60F 
 482      398E E9C1 
 482      E2E8 5EFA 
 483 06c0 AB78 1B8D 	 .ascii "\253x\033\215\315M\326\365\365J\256cl\253\234\341\r\234a\002"
 483      CD4D D6F5 
 483      F54A AE63 
 483      6CAB 9CE1 
GAS LISTING  			page 37


 483      0D9C 6102 
 484 06d4 A4E2 2FE9 	 .ascii "\244\342/\351H\031pd\230v\3075OJ\306\330\300M\215\261\00116\217"
 484      4819 7064 
 484      9876 C735 
 484      4F4A C6D8 
 484      C04D 8DB1 
 485 06ec 2AB2 D8B4 	 .ascii "*\262\330\264\036\312L\374\227\350\304\277S\356R\272\325L\032"
 485      1ECA 4CFC 
 485      97E8 C4BF 
 485      53EE 52BA 
 485      D54C 1A
 486 06ff 15DF A086 	 .ascii "\025\337\240\2065*7\2234D\313f\330\343R\303\272L\303\322\324"
 486      352A 3793 
 486      3444 CB66 
 486      D8E3 52C3 
 486      BA4C C3D2 
 487 0714 B0A4 DCB0 	 .ascii "\260\244\334\260\265\022\256W:\032f\345\372=\t\327\026\315!p"
 487      B512 AE57 
 487      3A1A 66E5 
 487      FA3D 09D7 
 487      16CD 2170 
 488 0728 BD52 7469 	 .ascii "\275Rti\225\324\245\303\207\206:\016Z\024\241\366k\317~H{W\316"
 488      95D4 A5C3 
 488      8786 3A0E 
 488      5A14 A1F6 
 488      6BCF 7E48 
 489 073f CB65 1E30 	 .ascii "\313e\0360\366j\341\030m\324\354\310K\273\213w\315\242w\255R"
 489      F66A E118 
 489      6DD4 ECC8 
 489      4BBB 8B77 
 489      CDA2 77AD 
 490 0754 EF2E AE5E 	 .ascii "\357.\256^)]\251-S\251\373\243qj\313@\212\275\016yJ!v\235P\304"
 490      295D A92D 
 490      53A9 FBA3 
 490      716A CB40 
 490      8ABD 0E79 
 491 076e E763 243C 	 .ascii "\347c$<\037#\373\370FYS'\262\316\234Y\354\376Qd\267\203&\267"
 491      1F23 FBF8 
 491      4659 5327 
 491      B2CE 9C59 
 491      ECFE 5164 
 492 0786 8DDD 0FA5 	 .ascii "\215\335\017\245\354\246v,\277q\t\037\205:\336(\246?\241\355"
 492      ECA6 762C 
 492      BF71 091F 
 492      853A DE28 
 492      A63F A1ED 
 493 079a D639 12DC 	 .ascii "\3269\022\334a\033\021\335M\254(&\216\"\273\236\254F\335\230"
 493      611B 11DD 
 493      4DAC 2826 
 493      8E22 BB9E 
 493      AC46 DD98 
 494 07ae 4D38 14C5 	 .ascii "M8\024\305\033{\245\351D0\235<~F\226O\203<K|)\317\257\3465f~"
 494      1B7B A5E9 
 494      4430 9D3C 
 494      7E46 964F 
 494      833C 4B7C 
 495 07c9 A9F8 3D3A 	 .ascii "\251\370=:z\332\335"
GAS LISTING  			page 38


 495      7ADA DD
 496 07d0 F38B 6B1E 	 .ascii "\363\213k\036\261i\276\223\213\246#q\355\356\304m\315&\256+\225"
 496      B169 BE93 
 496      8BA6 2371 
 496      EDEE C46D 
 496      CD26 AE2B 
 497 07e5 7CBF A5D5 	 .ascii "|\277\245\325\241\246\3648S\367\242\"\224\224\337*\256%\245\207"
 497      A1A6 F438 
 497      53F7 A222 
 497      9494 DF2A 
 497      AE25 A587 
 498 07f9 19D8 E1E0 	 .ascii "\031\330\341\340\030G\375\223|(\265\f\271\242\334v\023\221}\334"
 498      1847 FD93 
 498      7C28 B50C 
 498      B9A2 DC76 
 498      1391 7DDC 
 499 080d E35A 1F58 	 .ascii "\343Z\037X#\333\231Sd\337\227Dv\020M\2079\247S\234s\266K\211"
 499      23DB 9953 
 499      64DF 9744 
 499      7610 4D87 
 499      39A7 539C 
 500 0825 DA7E 6CA8 	 .ascii "\332~l\2503\352\237E\236:\007\347\351i9Okm\357\301\266\321F\273"
 500      33EA 9F45 
 500      9E3A 07E7 
 500      E969 394F 
 500      6B6D EFC1 
 501 083d DCD7 0F09 	 .ascii "\334\327\017\tO\nzY\324\034\002O\273D\236^\223\362t\372\017N"
 501      4F0A 7A59 
 501      D41C 024F 
 501      BB44 9E5E 
 501      93F2 74FA 
 502 0853 EF8A DC9E 	 .ascii "\357\212\334\236\242\376*\343J\340\346597\033lkk\217B2!\231\323"
 502      A2FE 2AE3 
 502      4AE0 E635 
 502      3937 1B6C 
 502      6B6B 8F42 
 503 086b DA9A FDC6 	 .ascii "\332\232\375\306 \351>\204\336\224L\216M\251\335}\377\372\341"
 503      20E9 3E84 
 503      DE94 4C8E 
 503      4DA9 DD7D 
 503      FFFA E1
 504 087e FA15 FA1B 	 .ascii "\372\025\372\033\344\215\334}8\367W\206os\237M7\025\264\314+"
 504      E48D DC7D 
 504      38F7 5786 
 504      6F73 9F4D 
 504      3715 B4CC 
 505 0893 8E74 D662 	 .ascii "\216t\326b\237\264\347+gO\314yL\377;}\035\233\323\273JJ\257\202"
 505      9FB4 E72B 
 505      674F CC79 
 505      4CFF 3B7D 
 505      1D9B D3BB 
 506 08ab 8E7B B1C1 	 .ascii "\216{\261\3014\271\345\265Ld\320\327~1\026\367e\277\004\312\234"
 506      34B9 E5B5 
 506      4C64 D0D7 
 506      7E31 16F7 
 506      65BF 04CA 
 507 08c0 F397 F6E2 	 .ascii "\363\227\366\342R\346\340\306\021\251\033G\366n\315\313\270\301"
GAS LISTING  			page 39


 507      52E6 E0C6 
 507      11A9 1B47 
 507      F66E CDCB 
 507      B8C1 
 508 08d2 2A11 055D 	 .ascii "*\021\005]u\200xO\002\321\225\332\371\331\2761\033\215\030t\353"
 508      7580 784F 
 508      02D1 95DA 
 508      F9D9 BE31 
 508      1B8D 1874 
 509 08e7 FACB 3E3B 	 .ascii "\372\313>;\035\340\202\003\033*~\227\"rj^\360e\250\371\021\352"
 509      1DE0 8203 
 509      1B2A 7E97 
 509      2272 6A5E 
 509      F065 A8F9 
 510 08fd F66D D0FD 	 .ascii "\366m\320\375H0\340}7z\274Vvr\377:s\374|\352\227\333t\335\257"
 510      4830 E07D 
 510      377A BC56 
 510      7672 FF3A 
 510      73FC 7CEA 
 511 0916 E23E 5A8F 	 .ascii "\342>Z\217|\340\023\353\221\241~\215\311\216\311?l\230\334\335"
 511      7CE0 13EB 
 511      91A1 7E8D 
 511      C98E C93F 
 511      6C98 DCDD 
 512 092a CF7C D83C 	 .ascii "\317|\330<\351\3679<7\332\242u\365\354\205{\207\226\356"
 512      E9F7 393C 
 512      37DA A275 
 512      F5EC 857B 
 512      8796 EE
 513 093d 169E 9DB3 	 .string "\026\236\235\263\356\023\221\326)C\316\272\253>y\312|nO\231\333\321f\275\2557\265\343\355'\307\221o\031\r\260\372-e\253\250\202\232\362\f\b\247'\266/M0\002\224:\234|\365\206__\326H?\030\024\243&BF\233\316\246$\223\r=\203\243\033@\027\225b\224\311\022=\363F\246\320\371\205L\277b>\274\027\026\230\007i\363\233\366z\321~I\307\227\354\036\264\365&\337k\373w\303\003\316\303\226Ay\270\234\205r\224~\226xT\277\001\t\310av\f\ns5\013\346\310\271q\2461l\331zcP\230o\262`zl\3260\234\303\203\342\\\027pZR\315W\317m\305o\351M+\333`M[:\306\217\226\323W\002\365\311\311\017\017\3761\360[\305\017\320\347\305\377\025\230\251I\032\030!e\307\306\021\375\354~Q48k\021\321=6\203\017'\273\222-%\372YX}G\243f\226\213\r:6M\235l"
 513      EE13 91D6 
 513      2943 CEBA 
 513      AB3E 79CA 
 513      7C6E 4F99 
 514 0a3e F88D 519F 	 .string "\370\215Q\2376\254\343s\321\206k\207\177\336A\347\242\006\317h\270\377J\276}T\r\212\253\342e\036\0175n9"
 514      36AC E373 
 514      D186 6B87 
 514      7FDE 41E7 
 514      A206 CF68 
 515 0a63 3055 464A 	 .string "0UFJr\355\023E\272\302\256#\311P\345\333m\b\006PC\362\351'V{\365\256;\215\252\347"
 515      72ED 1345 
 515      BAC2 AE23 
 515      C950 E5DB 
 515      6D08 0650 
 516 0a84 B583 A8CA 	 .ascii "\265\203\250\312\270\310\214\t\203\315\242\002\001n\375\023\312"
 516      B8C8 8C09 
 516      83CD A202 
 516      016E FD13 
 516      CA
 517 0a95 BA12 03EC 	 .ascii "\272\022\003\354t.`\330\031\214\274\304.1\322\352#\021\314\226"
 517      742E 60D8 
 517      198C BCC4 
 517      2E31 D2EA 
 517      2311 CC96 
 518 0aa9 56B6 0C93 	 .ascii "V\266\f\223\202uY\301\316\347\002\346u\006\333n\005\353\317\005"
 518      8275 59C1 
 518      CEE7 02E6 
GAS LISTING  			page 40


 518      7506 DB6E 
 518      05EB CF05 
 519 0abd 2C4F 0226 	 .ascii ",O\002&\317V3\236*n\364\220\327^\217{n\203\375\023t\277\212\356"
 519      CF56 339E 
 519      2A6E F490 
 519      D75E 8F7B 
 519      6E83 FD13 
 520 0ad5 57D3 7D33 	 .ascii "W\323}3\3543\233\202\256\345\033\264\332S\205%m\262\t&\343M\223"
 520      EC33 9B82 
 520      AEE5 1BB4 
 520      DA53 8525 
 520      6DB2 0926 
 521 0aec EA61 326E 	 .ascii "\352a2n\342\2231K=\335O\314?c\276\224\262\251\332L\373=\037\007"
 521      E293 314B 
 521      3DDD 4FCC 
 521      3F63 BE94 
 521      B2A9 DA4C 
 522 0b04 F7A0 1D7A 	 .ascii "\367\240\035zc\362A\206\300\354\343\257\3416cn)?\307\334\344"
 522      63F2 4186 
 522      C0EC E3AF 
 522      E136 636E 
 522      293F C7DC 
 523 0b19 CCF2 C96C 	 .ascii "\314\362\311l\267\2346[O-\023\302\005\353\204`d\324*\377`Cu\235"
 523      B79C 365B 
 523      4F2D 13C2 
 523      05EB 8460 
 523      64D4 2AFF 
 524 0b31 7DA8 B691 	 .ascii "}\250\266\221\302gMi=\024>l\tr\\<\356\264G\n\036I=C]:\236\366"
 524      C267 4D69 
 524      3D14 3E6C 
 524      0972 5C3C 
 524      EEB4 470A 
 525 0b4d C897 0EE3 	 .ascii "\310\227\016\343_:\260r\210\366g\365\272^\260\277\267m\307r\372"
 525      5F3A B072 
 525      88F6 67F5 
 525      BA5E B0BF 
 525      B76D C772 
 526 0b62 744B 2A81 	 .ascii "tK*\201\245|\306o\027a\262L\331(\302$\377\222\275pt\r\n\323f"
 526      A57C C66F 
 526      1761 B24C 
 526      D928 C224 
 526      FF92 BD70 
 527 0b7b C208 DF34 	 .ascii "\302\b\3374<\3164l\366\fwP\"\253\261\223V\273\307\376\347\213"
 527      3CCE 346C 
 527      F60C 7750 
 527      22AB B193 
 527      56BB C7FE 
 528 0b91 65AE 6F98 	 .ascii "e\256o\230r|#,\364\377\214\213\325\317"
 528      727C 232C 
 528      F4FF 8C8B 
 528      D5CF 
 529 0b9f 9AFD F3BF 	 .string "\232\375\363\277)\354\336\330W\362\332\n=Ik\260\372Go\033B\355\277\333o}i\341\311~\0049\350\227\324\211}\246\226\364\313\347\026\217\353\313\221\027\314`eq\237\251\222\333\034\253d\240\207Rzs\177AR\361K\216a'\317`NZ\333\034\265\310Ga'\255.1X\311\223}k\215/\312\311QJ\356\377\232\221\304\346_\331\261Q\361\213&\271\262\317\262\335\036\341\271}\207=\030\334\312\365\307\371?\006\332\032\005\033I5\342X\324?o\202\251\370\317\022\223\007r1\331H'V\002\251x\227{:\275j\367@^\221\244\024C\363gF\267\217\032z\274\324\271\334q\362\276\027h\251\323C\327\233\023\005\271\224:V`\025\277\316k\235\244X\353\274~h\004\251u\2229\325:G\016=\231Ok\035\366\037\225/\251!Is\335\266\375\363c\360Z\247\367\220\207\024\001\f\354z.`.\025\305Q+\330\343\303r"
 529      29EC DED8 
 529      57F2 DA0A 
 529      3D49 6BB0 
 529      FA47 6F1B 
 530 0ca0 F33B 831D 	 .ascii "\363;\203\035\263\202\265\346\002V\350\fv\302\n\266)\027\260"
GAS LISTING  			page 41


 530      B382 B5E6 
 530      0256 E80C 
 530      76C2 0AB6 
 530      2917 B0
 531 0cb3 51CE 60A7 	 .ascii "Q\316`\247\254`/\345\002v\2133\330\007V\260\335\271\200\2258"
 531      AC60 2FE5 
 531      0276 8B33 
 531      D807 56B0 
 531      DDB9 8095 
 532 0cc8 83F5 59C1 	 .ascii "\203\365Y\301\016\346\002\366Cg\260\013V\260\263\271\200\215"
 532      0EE6 02F6 
 532      4367 B00B 
 532      56B0 B3B9 
 532      808D 
 533 0cda 7506 EBB7 	 .ascii "u\006\353\267\202]\311\005\354\016g\260\257\254`\351\\\300\306"
 533      825D C905 
 533      EC0E 67B0 
 533      AFAC 60E9 
 533      5CC0 C6
 534 0ced 49C0 649B 	 .ascii "I\300d\233ut\252\370\257\264r}\203\326\251o\321\375^\272\337"
 534      7574 AAF8 
 534      AFB4 727D 
 534      83D6 A96F 
 534      D1FD 5EBA 
 535 0d02 47F7 FBE9 	 .ascii "G\367\373\351\376]\272?H\367\207\351\276\227\356\217\322\375"
 535      FE5D BA3F 
 535      48F7 87E9 
 535      BE97 EE8F 
 535      D2FD 
 536 0d14 316B 752B 	 .ascii "1ku+\254\r\373]V\224\023\216+J\217C\211N\264N:j\265\270\364u"
 536      AC0D FB5D 
 536      5694 138E 
 536      2B4A 8F43 
 536      894E B44E 
 537 0d2e CA51 EB7D 	 .ascii "\312Q\353}\027\255\323\216Z\237\270h}\220]\240\364\035\370\n"
 537      17AD D38E 
 537      5A9F B868 
 537      7D90 5DA0 
 537      F41D F80A 
 538 0d42 F7EA 3AFB 	 .ascii "\367\352:\373\037e\343\324\234W\275>\317\340/\202\033\207\273"
 538      1F65 E3D4 
 538      9C57 BD3E 
 538      CFE0 2F82 
 538      1B87 BB
 539 0d55 2D29 E4B5 	 .ascii "-)\344\265pS\213~\235\277\026n\240/\324\332\250\312\031\207e"
 539      7053 8B7E 
 539      9DBF 166E 
 539      A02F D4DA 
 539      A8CA 1987 
 540 0d6a 85B5 4299 	 .ascii "\205\265B\231\365\363C\373\177G\317\210+hJ\272\202\266\2346W"
 540      F5F3 43FB 
 540      7F47 CF88 
 540      2B68 4ABA 
 540      82B6 9C36 
 541 0d7f 50B6 162A 	 .ascii "P\266\026*\350yWS\035V\277\217\335W\277\177J{?u*\273\367=7\323"
 541      E879 5753 
 541      1D56 BF8F 
GAS LISTING  			page 42


 541      DD57 BF7F 
 541      4A7B 3F75 
 542 0d99 FBA7 EEBD 	 .ascii "\373\247\356\275\177&\355\375\251>k\357\333i\357\275\271\364"
 542      7F26 EDFD 
 542      A93E 6BEF 
 542      DB69 EFBD 
 542      B9F4 
 543 0dab 2E14 2B9F 	 .ascii ".\024+\237\213T\177\341R9\332J\223\254\244\274\350\230\312\r"
 543      8B54 7FE1 
 543      5239 DA4A 
 543      93AC A4BC 
 543      E898 CA0D 
 544 0dbf 2E83 ADDF 	 .ascii ".\203\255\337Q\353\224K\321w\311\324\272\351\277\f\363\307?\250"
 544      51EB 944B 
 544      D177 C9D4 
 544      BAE9 BF0C 
 544      F3C7 3FA8 
 545 0dd3 E9A1 D860 	 .ascii "\351\241\330`\177\305\341\232%\206\246\361^\367\362\220\237\377"
 545      7FC5 E19A 
 545      2586 A6F1 
 545      5EF7 F290 
 545      9FFF 
 546 0de5 AE38 3CFF 	 .ascii "\2568<\377)\366\316\333\262;\317~c7\344\316\277v\350\334\310"
 546      29F6 CEDB 
 546      B23B CF7E 
 546      6337 E4CE 
 546      BF76 E8DC 
 547 0dfa 2A81 E8ED 	 .ascii "*\201\350\355.D\177\343\030\036\362L\354\244u\315\324\032\213"
 547      2E44 7FE3 
 547      181E F24C 
 547      ECA4 75CD 
 547      D41A 8B
 548 0e0d 3641 E5D7 	 .ascii "6A\345\327\224l\300\362\017[\354~j\307\333\007\177\241\257\360"
 548      946C C0F2 
 548      0F5B EC7E 
 548      6AC7 DB07 
 548      7FA1 AFF0 
 549 0e21 BAB5 B161 	 .ascii "\272\265\261a$\263\357'\373\377\240\373\034Z\240\037\225\325"
 549      24B3 EF27 
 549      FBFF A0FB 
 549      1C5A A01F 
 549      95D5 
 550 0e33 C563 65E1 	 .ascii "\305ce\341PeY`Q\254,\024\r\206\353T\255,\236PC\321D\351B\344"
 550      5065 5960 
 550      51AC 2C14 
 550      0D86 EB54 
 550      AD2C 9E50 
 551 0e4d AF83 DF09 	 .ascii "\257\203\337\t\023+\022y\277\231\275`\3544v~\367]\025\211\021"
 551      132B 1279 
 551      BF99 BD60 
 551      EC34 767E 
 551      F75D 1589 
 552 0e62 75D1 78A8 	 .ascii "u\321x\250:\252\251c\203\013\003\261|ry\022\\\215j\211\212`M"
 552      3AAA A963 
 552      830B 03B1 
 552      7C72 7912 
 552      5C8D 6A89 
GAS LISTING  			page 43


 553 0e79 A436 4095 	 .ascii "\2446@\225\341\244\266.\276p\022V\2557\202\250\210\334\250\251"
 553      E1A4 B62E 
 553      BE70 1256 
 553      AD37 82A8 
 553      88DC A8A9 
 554 0e8d 9D54 5A1B 	 .ascii "\235TZ\033\210%J\357\034U\036\237\247E\325\251uUUZlfL\323\362"
 554      8825 4AEF 
 554      1C55 1E9F 
 554      A745 D5A9 
 554      7555 555A 
 555 0ea6 82B1 E0DD 	 .ascii "\202\261\340\335wUz\340'?\242\305\343\201j\315\023\326\242\305"
 555      7755 7AE0 
 555      273F A2C5 
 555      E381 6ACD 
 555      13D6 A2C5 
 556 0eba D089 16A3 	 .ascii "\320\211\026\243H\013\265\340o\343u\021_<\001\b\371\034n\324"
 556      480B B5E0 
 556      6FE3 7511 
 556      5F3C 0108 
 556      F91C 6ED4 
 557 0ece FD81 A81A 	 .ascii "\375\201\250\032\326\026\314\233\312\200'\024d.\024B\023\265"
 557      D616 CC9B 
 557      CA80 2714 
 557      642E 1442 
 557      13B5 
 558 0ee0 2E52 5BB9 	 .ascii ".R[\271$\241\305\375\254\375\204\211\303\330Ae\270\246\322\253"
 558      24A1 C5FD 
 558      ACFD 8489 
 558      C3D8 4165 
 558      B8A6 D2AB 
 559 0ef4 0612 012F 	 .ascii "\006\022\001/\361e\004\267\272\266:\022O\304<\221xu\221y\205"
 559      F165 04B7 
 559      BAB6 3A12 
 559      4FC4 3C91 
 559      7875 9179 
 560 0f09 341D C64F 	 .ascii "4\035\306O\341\356p~H.\027\360\343\t\023qm\036\243\203\030\026"
 560      E1EE 707E 
 560      482E 17F0 
 560      E309 1371 
 560      6D1E A383 
 561 0f1f 8A86 12F9 	 .ascii "\212\206\022\371\221@0\240\252K\b\364#\221P\2426\020\374\255"
 561      9140 30A0 
 561      AA4B 08F4 
 561      2391 50A2 
 561      3610 FCAD 
 562 0f33 9620 CA31 	 .ascii "\226 \3121-\270\210\234\025\3031\365%\343\332w\340\312\342X("
 562      2DB8 889C 
 562      15C3 31F5 
 562      25E3 DA77 
 562      E0CA E258 
 563 0f48 A155 0413 	 .ascii "\241U\004\023\26104\254\2360\321K@|\213\002\341:m4U\016\250\226"
 563      B130 34AC 
 563      9E30 D14B 
 563      407C 8B02 
 563      E13A 6D34 
 564 0f60 BBBF 282D 	 .ascii "\273\277(-\233\265`\346\224\262\351\261\320\"-\026/\003\267\313"
 564      9BB5 60E6 
GAS LISTING  			page 44


 564      94B2 E9B1 
 564      D022 2D16 
 564      2F03 B7CB 
 565 0f74 A6D5 C4B4 	 .ascii "\246\325\304\264\262)\017\315\235TVZ\312~gD\325\332\0320\257"
 565      B229 0FCD 
 565      9D54 565A 
 565      CA7E 6744 
 565      D5DA 1A30 
 566 0f89 829C 4190 	 .ascii "\202\234A\220\276\227\271\360\237\201PbA4\021\n\317\005\334%"
 566      BE97 B9F0 
 566      9F81 5062 
 566      4134 110A 
 566      CF05 DC25 
 567 0f9d BF1A 12   	 .ascii "\277\032\022"
 568 0fa0 DABC 0418 	 .ascii "\332\274\004\030\02310\363\2435\321h]8lb\023\310\n\336h\326\f"
 568      1331 30F3 
 568      A335 D168 
 568      5D38 6C62 
 568      13C8 0ADE 
 569 0fb7 667C 5003 	 .ascii "f|P\003\344` \034\256\004\002\234\3620\026\212V\023\304\252\350"
 569      E460 201C 
 569      AE04 029C 
 569      F230 168A 
 569      5613 C4AA 
 570 0fcc D878 AD16 	 .ascii "\330x\255\026\304\023\306e\032V\007\203\264\361=\245\223J\357"
 570      C413 C665 
 570      1A56 0783 
 570      B4F1 3DA5 
 570      934A EF
 571 0fdf B2A6 AEAA 	 .ascii "\262\246\256\252U\201J^<\364;\r\0227\242E\342Z\002LJ,\214\325"
 571      5581 4A5E 
 571      3CF4 3B0D 
 571      1237 A245 
 571      E25A 024C 
 572 0ff7 2CF6 86B5 	 .ascii ",\366\206\265@U\211\3513"
 572      4055 89E9 
 572      33
 573 1000 6538 63D8 	 .string "e8c\330\360\031\363\343\220\211\265\341@P\363\317\230_I3r\304\314X \242\225G\347j\221@(ZD\317\346\324%fi\321\352\304B\343&;\033I\264+\003q\360V\215A\342\016\213,\231;{z\371<0\307W1\265\246&<b\256\026\257\255\211\3065\312q\036M\004u\302`T\317K\250s\265\207\353\264xb\376\222Z\r\300n\201&\025\374R\305\375"
 573      F019 F3E3 
 573      9089 B5E1 
 573      4050 F3CF 
 573      985F 4933 
 574 1075 A5C5 60F0 	 .ascii "\245\305`\360UF,\255\374\225\374$o\361C$a\362\026\227GU\355\221"
 574      5546 2CAD 
 574      FC95 FC24 
 574      6FF1 4324 
 574      61F2 1697 
 575 108d FCC5 CC52 	 .ascii "\374\305\314R\337\370\322Y\323\356,\234]\223\bU\205\202\201D"
 575      DFF8 D259 
 575      D3EE 2C9C 
 575      5D93 0855 
 575      8582 8144 
 576 10a1 A826 5A34 	 .ascii "\250&Z4\255.\026\243\346\316K\004\022\232\357\201%\017L\2316"
 576      AD2E 16A3 
 576      E6CE 4B04 
 576      129A EF81 
 576      250F 4C99 
GAS LISTING  			page 45


 577 10b6 C270 771E 	 .ascii "\302pw\036\311\316a3\346\033\3719zq \026\255\250\213\326\305"
 577      C9CE 6133 
 577      E61B F939 
 577      7A71 2016 
 577      ADA8 8BD6 
 578 10cb 3515 8219 	 .ascii "5\025\202\031\257\013'F\332\303=iD \2748\260$\016C \034\212j"
 578      AF0B 2746 
 578      DAC3 3D69 
 578      4420 BC38 
 578      B024 0E43 
 579 10e3 C599 BBD3 	 .ascii "\305\231\273\323 \006\2619\013\346\377 s\245<N4h0\246\204\303"
 579      2006 B139 
 579      0BE6 FF20 
 579      73A5 3C4E 
 579      3468 30A6 
 580 10f9 358B 35F5 	 .ascii "5\2135\365^\031'\341@<^6][\024\nj\204\226i5\221HM\264\214\232"
 580      5E19 27E1 
 580      403C 5E36 
 580      5D5B 140A 
 580      6A84 9669 
 581 1114 4CEF B10B 	 .ascii "L\357\261\013\300\317\255\364Z\305\203t\234U<\300\246\220\212"
 581      C0CF ADF4 
 581      5AC5 8374 
 581      9C55 3CC0 
 581      A690 8A
 582 1127 C470 7E44 	 .ascii "\304p~D\370\031\301\217\031\035\303\246\303\360\237SU\005\231"
 582      F819 C18F 
 582      191D C3A6 
 582      C3F0 9F53 
 582      5505 99
 583 113a 420F 7970 	 .ascii "B\017yp\347\314\231j\3360\316\330\275\321\263\353\"\374\302\214"
 583      E7CC 996A 
 583      DE30 CED8 
 583      BDD1 B3EB 
 583      22FC C28C 
 584 114e B016 D1A2 	 .ascii "\260\026\321\242\211\370w\036\324b\254\313\362hU\rS\262_c\252"
 584      89F8 771E 
 584      D462 ACCB 
 584      F268 550D 
 584      53B2 5F63 
 585 1163 FE87 826C 	 .ascii "\376\207\202lb\362C6h\261E\232j\016\224yZX\013&\214\323\374)"
 585      62F2 4336 
 585      68B1 459A 
 585      6A0E 9479 
 585      5A58 0B26 
 586 117b 2C8F 6EB5 	 .ascii ",\217n\2650\005\304\315ecG\035m\271\\>\233\246\324(;\313\345"
 586      3005 C4CD 
 586      6563 471D 
 586      6DB9 5C3E 
 586      9BA6 D428 
 587 1192 B3FF 1F26 	 .ascii "\263\377\037&\306\354\372"
 587      C6EC FA
 588               	 .text
 589               	 .section .gnu.lto_.symtab.4bd8312f431074a0,"",@progbits
 590 0000 4554 7365 	 .string "ETsendplace"
 590      6E64 706C 
 590      6163 6500 
GAS LISTING  			page 46


 591 000c 00        	 .string ""
 592 000d 0400      	 .string "\004"
 593 000f 0200      	 .string "\002"
 594 0011 00        	 .string ""
 595 0012 00        	 .string ""
 596 0013 00        	 .string ""
 597 0014 00        	 .string ""
 598 0015 00        	 .string ""
 599 0016 00        	 .string ""
 600 0017 6E01 00   	 .string "n\001"
 601 001a 00        	 .string ""
 602 001b 4554 6275 	 .string "ETbuffer"
 602      6666 6572 
 602      00
 603 0024 00        	 .string ""
 604 0025 0400      	 .string "\004"
 605 0027 00        	 .string ""
 606 0028 0100      	 .string "\001"
 607 002a 00        	 .string ""
 608 002b 00        	 .string ""
 609 002c 00        	 .string ""
 610 002d 00        	 .string ""
 611 002e 00        	 .string ""
 612 002f 7001 00   	 .string "p\001"
 613 0032 00        	 .string ""
 614 0033 4672 616D 	 .string "FrameInRemain"
 614      6549 6E52 
 614      656D 6169 
 614      6E00 
 615 0041 00        	 .string ""
 616 0042 0400      	 .string "\004"
 617 0044 0200      	 .string "\002"
 618 0046 00        	 .string ""
 619 0047 00        	 .string ""
 620 0048 00        	 .string ""
 621 0049 00        	 .string ""
 622 004a 00        	 .string ""
 623 004b 00        	 .string ""
 624 004c 7401 00   	 .string "t\001"
 625 004f 00        	 .string ""
 626 0050 4973 5365 	 .string "IsSendBufferFree"
 626      6E64 4275 
 626      6666 6572 
 626      4672 6565 
 626      00
 627 0061 00        	 .string ""
 628 0062 00        	 .string ""
 629 0063 00        	 .string ""
 630 0064 00        	 .string ""
 631 0065 00        	 .string ""
 632 0066 00        	 .string ""
 633 0067 00        	 .string ""
 634 0068 00        	 .string ""
 635 0069 00        	 .string ""
 636 006a 00        	 .string ""
 637 006b 00        	 .string ""
 638 006c BC00      	 .string "\274"
GAS LISTING  			page 47


 639 006e 00        	 .string ""
 640 006f 00        	 .string ""
 641 0070 4672 616D 	 .string "FrameOutLength"
 641      654F 7574 
 641      4C65 6E67 
 641      7468 00
 642 007f 00        	 .string ""
 643 0080 0400      	 .string "\004"
 644 0082 0200      	 .string "\002"
 645 0084 00        	 .string ""
 646 0085 00        	 .string ""
 647 0086 00        	 .string ""
 648 0087 00        	 .string ""
 649 0088 00        	 .string ""
 650 0089 00        	 .string ""
 651 008a 7601 00   	 .string "v\001"
 652 008d 00        	 .string ""
 653 008e 6372 6333 	 .string "crc32b"
 653      3262 00
 654 0095 00        	 .string ""
 655 0096 00        	 .string ""
 656 0097 00        	 .string ""
 657 0098 00        	 .string ""
 658 0099 00        	 .string ""
 659 009a 00        	 .string ""
 660 009b 00        	 .string ""
 661 009c 00        	 .string ""
 662 009d 00        	 .string ""
 663 009e 00        	 .string ""
 664 009f 00        	 .string ""
 665 00a0 BF00      	 .string "\277"
 666 00a2 00        	 .string ""
 667 00a3 00        	 .string ""
 668 00a4 696E 7465 	 .string "internet_checksum"
 668      726E 6574 
 668      5F63 6865 
 668      636B 7375 
 668      6D00 
 669 00b6 00        	 .string ""
 670 00b7 00        	 .string ""
 671 00b8 00        	 .string ""
 672 00b9 00        	 .string ""
 673 00ba 00        	 .string ""
 674 00bb 00        	 .string ""
 675 00bc 00        	 .string ""
 676 00bd 00        	 .string ""
 677 00be 00        	 .string ""
 678 00bf 00        	 .string ""
 679 00c0 00        	 .string ""
 680 00c1 CD00      	 .string "\315"
 681 00c3 00        	 .string ""
 682 00c4 00        	 .string ""
 683 00c5 6574 5F70 	 .string "et_pop8"
 683      6F70 3800 
 684 00cd 00        	 .string ""
 685 00ce 00        	 .string ""
 686 00cf 00        	 .string ""
GAS LISTING  			page 48


 687 00d0 00        	 .string ""
 688 00d1 00        	 .string ""
 689 00d2 00        	 .string ""
 690 00d3 00        	 .string ""
 691 00d4 00        	 .string ""
 692 00d5 00        	 .string ""
 693 00d6 00        	 .string ""
 694 00d7 00        	 .string ""
 695 00d8 D600      	 .string "\326"
 696 00da 00        	 .string ""
 697 00db 00        	 .string ""
 698 00dc 4672 616D 	 .string "FrameInLength"
 698      6549 6E4C 
 698      656E 6774 
 698      6800 
 699 00ea 00        	 .string ""
 700 00eb 0400      	 .string "\004"
 701 00ed 0200      	 .string "\002"
 702 00ef 00        	 .string ""
 703 00f0 00        	 .string ""
 704 00f1 00        	 .string ""
 705 00f2 00        	 .string ""
 706 00f3 00        	 .string ""
 707 00f4 00        	 .string ""
 708 00f5 7801 00   	 .string "x\001"
 709 00f8 00        	 .string ""
 710 00f9 7365 6E64 	 .string "sendbaseaddress"
 710      6261 7365 
 710      6164 6472 
 710      6573 7300 
 711 0109 00        	 .string ""
 712 010a 0400      	 .string "\004"
 713 010c 0200      	 .string "\002"
 714 010e 00        	 .string ""
 715 010f 00        	 .string ""
 716 0110 00        	 .string ""
 717 0111 00        	 .string ""
 718 0112 00        	 .string ""
 719 0113 00        	 .string ""
 720 0114 7A01 00   	 .string "z\001"
 721 0117 00        	 .string ""
 722 0118 4861 6E64 	 .string "HandleUSB"
 722      6C65 5553 
 722      4200 
 723 0122 00        	 .string ""
 724 0123 00        	 .string ""
 725 0124 00        	 .string ""
 726 0125 00        	 .string ""
 727 0126 00        	 .string ""
 728 0127 00        	 .string ""
 729 0128 00        	 .string ""
 730 0129 00        	 .string ""
 731 012a 00        	 .string ""
 732 012b 00        	 .string ""
 733 012c 00        	 .string ""
 734 012d DD00      	 .string "\335"
 735 012f 00        	 .string ""
GAS LISTING  			page 49


 736 0130 00        	 .string ""
 737 0131 6574 5F64 	 .string "et_dumpbytes"
 737      756D 7062 
 737      7974 6573 
 737      00
 738 013e 00        	 .string ""
 739 013f 00        	 .string ""
 740 0140 00        	 .string ""
 741 0141 00        	 .string ""
 742 0142 00        	 .string ""
 743 0143 00        	 .string ""
 744 0144 00        	 .string ""
 745 0145 00        	 .string ""
 746 0146 00        	 .string ""
 747 0147 00        	 .string ""
 748 0148 00        	 .string ""
 749 0149 E000      	 .string "\340"
 750 014b 00        	 .string ""
 751 014c 00        	 .string ""
 752 014d 6574 5F70 	 .string "et_pop16"
 752      6F70 3136 
 752      00
 753 0156 00        	 .string ""
 754 0157 00        	 .string ""
 755 0158 00        	 .string ""
 756 0159 00        	 .string ""
 757 015a 00        	 .string ""
 758 015b 00        	 .string ""
 759 015c 00        	 .string ""
 760 015d 00        	 .string ""
 761 015e 00        	 .string ""
 762 015f 00        	 .string ""
 763 0160 00        	 .string ""
 764 0161 E400      	 .string "\344"
 765 0163 00        	 .string ""
 766 0164 00        	 .string ""
 767 0165 6574 5F70 	 .string "et_popblob"
 767      6F70 626C 
 767      6F62 00
 768 0170 00        	 .string ""
 769 0171 00        	 .string ""
 770 0172 00        	 .string ""
 771 0173 00        	 .string ""
 772 0174 00        	 .string ""
 773 0175 00        	 .string ""
 774 0176 00        	 .string ""
 775 0177 00        	 .string ""
 776 0178 00        	 .string ""
 777 0179 00        	 .string ""
 778 017a 00        	 .string ""
 779 017b E800      	 .string "\350"
 780 017d 00        	 .string ""
 781 017e 00        	 .string ""
 782 017f 6574 5F70 	 .string "et_pushpgmstr"
 782      7573 6870 
 782      676D 7374 
 782      7200 
GAS LISTING  			page 50


 783 018d 00        	 .string ""
 784 018e 00        	 .string ""
 785 018f 00        	 .string ""
 786 0190 00        	 .string ""
 787 0191 00        	 .string ""
 788 0192 00        	 .string ""
 789 0193 00        	 .string ""
 790 0194 00        	 .string ""
 791 0195 00        	 .string ""
 792 0196 00        	 .string ""
 793 0197 00        	 .string ""
 794 0198 F200      	 .string "\362"
 795 019a 00        	 .string ""
 796 019b 00        	 .string ""
 797 019c 6574 5F70 	 .string "et_pushpgmblob"
 797      7573 6870 
 797      676D 626C 
 797      6F62 00
 798 01ab 00        	 .string ""
 799 01ac 00        	 .string ""
 800 01ad 00        	 .string ""
 801 01ae 00        	 .string ""
 802 01af 00        	 .string ""
 803 01b0 00        	 .string ""
 804 01b1 00        	 .string ""
 805 01b2 00        	 .string ""
 806 01b3 00        	 .string ""
 807 01b4 00        	 .string ""
 808 01b5 00        	 .string ""
 809 01b6 FE00      	 .string "\376"
 810 01b8 00        	 .string ""
 811 01b9 00        	 .string ""
 812 01ba 6574 5F70 	 .string "et_pushstr"
 812      7573 6873 
 812      7472 00
 813 01c5 00        	 .string ""
 814 01c6 00        	 .string ""
 815 01c7 00        	 .string ""
 816 01c8 00        	 .string ""
 817 01c9 00        	 .string ""
 818 01ca 00        	 .string ""
 819 01cb 00        	 .string ""
 820 01cc 00        	 .string ""
 821 01cd 00        	 .string ""
 822 01ce 00        	 .string ""
 823 01cf 00        	 .string ""
 824 01d0 0801 00   	 .string "\b\001"
 825 01d3 00        	 .string ""
 826 01d4 6574 5F70 	 .string "et_pushblob"
 826      7573 6862 
 826      6C6F 6200 
 827 01e0 00        	 .string ""
 828 01e1 00        	 .string ""
 829 01e2 00        	 .string ""
 830 01e3 00        	 .string ""
 831 01e4 00        	 .string ""
 832 01e5 00        	 .string ""
GAS LISTING  			page 51


 833 01e6 00        	 .string ""
 834 01e7 00        	 .string ""
 835 01e8 00        	 .string ""
 836 01e9 00        	 .string ""
 837 01ea 00        	 .string ""
 838 01eb 0C01 00   	 .string "\f\001"
 839 01ee 00        	 .string ""
 840 01ef 6574 5F70 	 .string "et_push16"
 840      7573 6831 
 840      3600 
 841 01f9 00        	 .string ""
 842 01fa 00        	 .string ""
 843 01fb 00        	 .string ""
 844 01fc 00        	 .string ""
 845 01fd 00        	 .string ""
 846 01fe 00        	 .string ""
 847 01ff 00        	 .string ""
 848 0200 00        	 .string ""
 849 0201 00        	 .string ""
 850 0202 00        	 .string ""
 851 0203 00        	 .string ""
 852 0204 1101 00   	 .string "\021\001"
 853 0207 00        	 .string ""
 854 0208 6574 5F69 	 .string "et_init"
 854      6E69 7400 
 855 0210 00        	 .string ""
 856 0211 00        	 .string ""
 857 0212 00        	 .string ""
 858 0213 00        	 .string ""
 859 0214 00        	 .string ""
 860 0215 00        	 .string ""
 861 0216 00        	 .string ""
 862 0217 00        	 .string ""
 863 0218 00        	 .string ""
 864 0219 00        	 .string ""
 865 021a 00        	 .string ""
 866 021b 1801 00   	 .string "\030\001"
 867 021e 00        	 .string ""
 868 021f 6574 5F78 	 .string "et_xmitpacket"
 868      6D69 7470 
 868      6163 6B65 
 868      7400 
 869 022d 00        	 .string ""
 870 022e 00        	 .string ""
 871 022f 00        	 .string ""
 872 0230 00        	 .string ""
 873 0231 00        	 .string ""
 874 0232 00        	 .string ""
 875 0233 00        	 .string ""
 876 0234 00        	 .string ""
 877 0235 00        	 .string ""
 878 0236 00        	 .string ""
 879 0237 00        	 .string ""
 880 0238 2201 00   	 .string "\"\001"
 881 023b 00        	 .string ""
 882 023c 4672 616D 	 .string "FrameOutStart"
 882      654F 7574 
GAS LISTING  			page 52


 882      5374 6172 
 882      7400 
 883 024a 00        	 .string ""
 884 024b 0400      	 .string "\004"
 885 024d 0200      	 .string "\002"
 886 024f 00        	 .string ""
 887 0250 00        	 .string ""
 888 0251 00        	 .string ""
 889 0252 00        	 .string ""
 890 0253 00        	 .string ""
 891 0254 00        	 .string ""
 892 0255 9D01 00   	 .string "\235\001"
 893 0258 00        	 .string ""
 894 0259 6574 5F72 	 .string "et_recvpack"
 894      6563 7670 
 894      6163 6B00 
 895 0265 00        	 .string ""
 896 0266 00        	 .string ""
 897 0267 00        	 .string ""
 898 0268 00        	 .string ""
 899 0269 00        	 .string ""
 900 026a 00        	 .string ""
 901 026b 00        	 .string ""
 902 026c 00        	 .string ""
 903 026d 00        	 .string ""
 904 026e 00        	 .string ""
 905 026f 00        	 .string ""
 906 0270 2A01 00   	 .string "*\001"
 907 0273 00        	 .string ""
 908 0274 6574 5F73 	 .string "et_start_checksum"
 908      7461 7274 
 908      5F63 6865 
 908      636B 7375 
 908      6D00 
 909 0286 00        	 .string ""
 910 0287 00        	 .string ""
 911 0288 00        	 .string ""
 912 0289 00        	 .string ""
 913 028a 00        	 .string ""
 914 028b 00        	 .string ""
 915 028c 00        	 .string ""
 916 028d 00        	 .string ""
 917 028e 00        	 .string ""
 918 028f 00        	 .string ""
 919 0290 00        	 .string ""
 920 0291 2E01 00   	 .string ".\001"
 921 0294 00        	 .string ""
 922 0295 4554 6368 	 .string "ETchecksum"
 922      6563 6B73 
 922      756D 00
 923 02a0 00        	 .string ""
 924 02a1 0400      	 .string "\004"
 925 02a3 0200      	 .string "\002"
 926 02a5 00        	 .string ""
 927 02a6 00        	 .string ""
 928 02a7 00        	 .string ""
 929 02a8 00        	 .string ""
GAS LISTING  			page 53


 930 02a9 00        	 .string ""
 931 02aa 00        	 .string ""
 932 02ab 9F01 00   	 .string "\237\001"
 933 02ae 00        	 .string ""
 934 02af 6574 5F77 	 .string "et_write_ctrl_reg16"
 934      7269 7465 
 934      5F63 7472 
 934      6C5F 7265 
 934      6731 3600 
 935 02c3 00        	 .string ""
 936 02c4 00        	 .string ""
 937 02c5 00        	 .string ""
 938 02c6 00        	 .string ""
 939 02c7 00        	 .string ""
 940 02c8 00        	 .string ""
 941 02c9 00        	 .string ""
 942 02ca 00        	 .string ""
 943 02cb 00        	 .string ""
 944 02cc 00        	 .string ""
 945 02cd 00        	 .string ""
 946 02ce 3601 00   	 .string "6\001"
 947 02d1 00        	 .string ""
 948 02d2 6574 5F72 	 .string "et_read_ctrl_reg16"
 948      6561 645F 
 948      6374 726C 
 948      5F72 6567 
 948      3136 00
 949 02e5 00        	 .string ""
 950 02e6 00        	 .string ""
 951 02e7 00        	 .string ""
 952 02e8 00        	 .string ""
 953 02e9 00        	 .string ""
 954 02ea 00        	 .string ""
 955 02eb 00        	 .string ""
 956 02ec 00        	 .string ""
 957 02ed 00        	 .string ""
 958 02ee 00        	 .string ""
 959 02ef 00        	 .string ""
 960 02f0 4001 00   	 .string "@\001"
 961 02f3 00        	 .string ""
 962 02f4 5265 7370 	 .string "ResponseReady"
 962      6F6E 7365 
 962      5265 6164 
 962      7900 
 963 0302 00        	 .string ""
 964 0303 0200      	 .string "\002"
 965 0305 00        	 .string ""
 966 0306 00        	 .string ""
 967 0307 00        	 .string ""
 968 0308 00        	 .string ""
 969 0309 00        	 .string ""
 970 030a 00        	 .string ""
 971 030b 00        	 .string ""
 972 030c 00        	 .string ""
 973 030d 7C01 00   	 .string "|\001"
 974 0310 00        	 .string ""
 975 0311 4375 7272 	 .string "CurrRNDISState"
GAS LISTING  			page 54


 975      524E 4449 
 975      5353 7461 
 975      7465 00
 976 0320 00        	 .string ""
 977 0321 0200      	 .string "\002"
 978 0323 00        	 .string ""
 979 0324 00        	 .string ""
 980 0325 00        	 .string ""
 981 0326 00        	 .string ""
 982 0327 00        	 .string ""
 983 0328 00        	 .string ""
 984 0329 00        	 .string ""
 985 032a 00        	 .string ""
 986 032b 9701 00   	 .string "\227\001"
 987 032e 00        	 .string ""
 988 032f 4D79 4D41 	 .string "MyMAC"
 988      4300 
 989 0335 00        	 .string ""
 990 0336 0200      	 .string "\002"
 991 0338 00        	 .string ""
 992 0339 00        	 .string ""
 993 033a 00        	 .string ""
 994 033b 00        	 .string ""
 995 033c 00        	 .string ""
 996 033d 00        	 .string ""
 997 033e 00        	 .string ""
 998 033f 00        	 .string ""
 999 0340 9901 00   	 .string "\231\001"
 1000 0343 00        	 .string ""
 1001 0344 456E 6470 	 .string "Endpoint_WaitUntilReady"
 1001      6F69 6E74 
 1001      5F57 6169 
 1001      7455 6E74 
 1001      696C 5265 
 1002 035c 00        	 .string ""
 1003 035d 0200      	 .string "\002"
 1004 035f 00        	 .string ""
 1005 0360 00        	 .string ""
 1006 0361 00        	 .string ""
 1007 0362 00        	 .string ""
 1008 0363 00        	 .string ""
 1009 0364 00        	 .string ""
 1010 0365 00        	 .string ""
 1011 0366 00        	 .string ""
 1012 0367 4601 00   	 .string "F\001"
 1013 036a 00        	 .string ""
 1014 036b 456E 6470 	 .string "Endpoint_Read_Stream_LE"
 1014      6F69 6E74 
 1014      5F52 6561 
 1014      645F 5374 
 1014      7265 616D 
 1015 0383 00        	 .string ""
 1016 0384 0200      	 .string "\002"
 1017 0386 00        	 .string ""
 1018 0387 00        	 .string ""
 1019 0388 00        	 .string ""
 1020 0389 00        	 .string ""
GAS LISTING  			page 55


 1021 038a 00        	 .string ""
 1022 038b 00        	 .string ""
 1023 038c 00        	 .string ""
 1024 038d 00        	 .string ""
 1025 038e 4901 00   	 .string "I\001"
 1026 0391 00        	 .string ""
 1027 0392 6574 5F72 	 .string "et_receivecallback"
 1027      6563 6569 
 1027      7665 6361 
 1027      6C6C 6261 
 1027      636B 00
 1028 03a5 00        	 .string ""
 1029 03a6 0200      	 .string "\002"
 1030 03a8 00        	 .string ""
 1031 03a9 00        	 .string ""
 1032 03aa 00        	 .string ""
 1033 03ab 00        	 .string ""
 1034 03ac 00        	 .string ""
 1035 03ad 00        	 .string ""
 1036 03ae 00        	 .string ""
 1037 03af 00        	 .string ""
 1038 03b0 5201 00   	 .string "R\001"
 1039 03b3 00        	 .string ""
 1040 03b4 456E 6470 	 .string "Endpoint_Write_Stream_LE"
 1040      6F69 6E74 
 1040      5F57 7269 
 1040      7465 5F53 
 1040      7472 6561 
 1041 03cd 00        	 .string ""
 1042 03ce 0200      	 .string "\002"
 1043 03d0 00        	 .string ""
 1044 03d1 00        	 .string ""
 1045 03d2 00        	 .string ""
 1046 03d3 00        	 .string ""
 1047 03d4 00        	 .string ""
 1048 03d5 00        	 .string ""
 1049 03d6 00        	 .string ""
 1050 03d7 00        	 .string ""
 1051 03d8 6601 00   	 .string "f\001"
 1052 03db 00        	 .string ""
 1053               	 .text
 1054               	 .section .gnu.lto_.opts,"",@progbits
 1055 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 1055      6375 3D61 
 1055      746D 6567 
 1055      6133 3275 
 1055      3227 2027 
 1056               	 .text
 1057               	 .cfi_sections .debug_frame
 1059               	et_push8:
 1060               	.LFB1:
 1061               	 .file 1 "net_compat.h"
   1:net_compat.h  **** #ifndef _ENC424JCOMPAT_H
   2:net_compat.h  **** #define _ENC424JCOMPAT_H
   3:net_compat.h  **** 
   4:net_compat.h  **** //enc424j600 compat lib.
   5:net_compat.h  **** //We're using the IP library from AVRCraft... but we're using our own PHY+MAC
GAS LISTING  			page 56


   6:net_compat.h  **** 
   7:net_compat.h  **** //TODO: Should probably use Timer1 (since we can't use Timer0)
   8:net_compat.h  **** //to make sure we send media detect pulses at the right points.
   9:net_compat.h  **** //Also, as a user, you cannot use the USI or Timer0
  10:net_compat.h  **** 
  11:net_compat.h  **** #include <stdint.h>
  12:net_compat.h  **** #include "eth_config.h"
  13:net_compat.h  **** 
  14:net_compat.h  **** void HandleUSB();
  15:net_compat.h  **** 
  16:net_compat.h  **** uint8_t IsSendBufferFree();
  17:net_compat.h  **** 
  18:net_compat.h  **** //You must define 'mymac'
  19:net_compat.h  **** extern unsigned char MyMAC[6];
  20:net_compat.h  **** extern unsigned char ETbuffer[ETBUFFERSIZE];
  21:net_compat.h  **** extern unsigned short ETsendplace;
  22:net_compat.h  **** //For telling where the current transaction started.
  23:net_compat.h  **** extern uint16_t sendbaseaddress;
  24:net_compat.h  **** extern unsigned short ETchecksum;
  25:net_compat.h  **** 
  26:net_compat.h  **** //return 0 if OK, otherwise nonzero.
  27:net_compat.h  **** int8_t et_init( const unsigned char * macaddy );
  28:net_compat.h  **** 
  29:net_compat.h  **** int8_t et_xmitpacket( uint16_t start, uint16_t len );
  30:net_compat.h  **** 
  31:net_compat.h  **** //This waits for 8ms, sends an autoneg notice, then waits for 8 more ms.
  32:net_compat.h  **** //Ordinarily this would if packets were processed and still ned processing, but
  33:net_compat.h  **** //that doesn't make sense for this driver.  Do not put this in a loop unto itself.
  34:net_compat.h  **** unsigned short et_recvpack();
  35:net_compat.h  **** 
  36:net_compat.h  **** //You have to write this! (Or the underlying IP core must)
  37:net_compat.h  **** void et_receivecallback( uint16_t packetlen );
  38:net_compat.h  **** 
  39:net_compat.h  **** //Finish up any reading. 							//CLOSURE
  40:net_compat.h  **** static inline void et_finish_callback_now() { }
  41:net_compat.h  **** 
  42:net_compat.h  **** //Raw, on-wire pops. (assuming already in read)
  43:net_compat.h  **** void et_popblob( uint8_t * data, uint8_t len );
  44:net_compat.h  **** void et_dumpbytes( uint8_t len );
  45:net_compat.h  **** uint16_t et_pop16();
  46:net_compat.h  **** uint8_t et_pop8();
  47:net_compat.h  **** 
  48:net_compat.h  **** //Raw, on-wire push. (assuming already in write)
  49:net_compat.h  **** void et_pushpgmstr( const char * msg );
  50:net_compat.h  **** void et_pushstr( const char * msg );
  51:net_compat.h  **** void et_pushblob( const uint8_t * data, uint8_t len );
  52:net_compat.h  **** void et_pushpgmblob( const uint8_t * data, uint8_t len );
  53:net_compat.h  **** static inline void et_push8( uint8_t d ) { if (ETsendplace < ETBUFFERSIZE ) ETbuffer[ETsendplace++]
 1062               	 .loc 1 53 0
 1063               	 .cfi_startproc
 1064               	.LVL0:
 1065               	 
 1066               	 
 1067               	 
 1068               	.L__stack_usage =0
 1069               	 .loc 1 53 0
 1070 0000 2091 0000 	 lds r18,ETsendplace
GAS LISTING  			page 57


 1071 0004 3091 0000 	 lds r19,ETsendplace+1
 1072 0008 2F3F      	 cpi r18,-1
 1073 000a 3105      	 cpc r19,__zero_reg__
 1074 000c 01F0      	 breq .+2
 1075 000e 00F4      	 brsh .L1
 1076               	 .loc 1 53 0 is_stmt 0 discriminator 1
 1077 0010 A901      	 movw r20,r18
 1078 0012 4F5F      	 subi r20,-1
 1079 0014 5F4F      	 sbci r21,-1
 1080 0016 5093 0000 	 sts ETsendplace+1,r21
 1081 001a 4093 0000 	 sts ETsendplace,r20
 1082 001e F901      	 movw r30,r18
 1083 0020 E050      	 subi r30,lo8(-(ETbuffer))
 1084 0022 F040      	 sbci r31,hi8(-(ETbuffer))
 1085 0024 8083      	 st Z,r24
 1086               	.L1:
 1087 0026 0895      	 ret
 1088               	 .cfi_endproc
 1089               	.LFE1:
 1091               	.global IsSendBufferFree
 1093               	IsSendBufferFree:
 1094               	.LFB105:
 1095               	 .file 2 "net_compat.c"
   1:net_compat.c  **** #include "net_compat.h"
   2:net_compat.c  **** #include <avr/io.h>
   3:net_compat.c  **** #include <avr/wdt.h>
   4:net_compat.c  **** #include <avr/power.h>
   5:net_compat.c  **** #include <avr/interrupt.h>
   6:net_compat.c  **** #include <string.h>
   7:net_compat.c  **** #include <LUFA/Drivers/USB/USB.h>
   8:net_compat.c  **** #include "myRNDIS.h"
   9:net_compat.c  **** #include "Descriptors.h"
  10:net_compat.c  **** 
  11:net_compat.c  **** 
  12:net_compat.c  **** unsigned char ETbuffer[ETBUFFERSIZE];
  13:net_compat.c  **** unsigned short ETsendplace;
  14:net_compat.c  **** uint16_t sendbaseaddress;
  15:net_compat.c  **** unsigned short ETchecksum;
  16:net_compat.c  **** uint16_t FrameInLength;
  17:net_compat.c  **** unsigned short FrameInRemain;
  18:net_compat.c  **** unsigned short FrameOutLength;
  19:net_compat.c  **** unsigned short FrameOutStart;
  20:net_compat.c  **** 
  21:net_compat.c  **** uint8_t IsSendBufferFree(){ return FrameOutLength == 0; }
 1096               	 .loc 2 21 0 is_stmt 1
 1097               	 .cfi_startproc
 1098               	 
 1099               	 
 1100               	 
 1101               	.L__stack_usage =0
 1102               	 .loc 2 21 0
 1103 0028 81E0      	 ldi r24,lo8(1)
 1104 002a 2091 0000 	 lds r18,FrameOutLength
 1105 002e 3091 0000 	 lds r19,FrameOutLength+1
 1106 0032 232B      	 or r18,r19
 1107 0034 01F0      	 breq .L5
 1108 0036 80E0      	 ldi r24,0
GAS LISTING  			page 58


 1109               	.L5:
 1110 0038 0895      	 ret
 1111               	 .cfi_endproc
 1112               	.LFE105:
 1114               	.global crc32b
 1116               	crc32b:
 1117               	.LFB107:
  22:net_compat.c  **** //For sending packets:
  23:net_compat.c  **** // Ptr: &ETbuffer[FrameOutStart] Len: FrameOutLength
  24:net_compat.c  **** 
  25:net_compat.c  **** void HandleUSB()
  26:net_compat.c  **** {
  27:net_compat.c  **** 
  28:net_compat.c  **** 	/* Check if a message response is ready for the host */
  29:net_compat.c  **** 	if (Endpoint_IsINReady() && ResponseReady)
  30:net_compat.c  **** 	{
  31:net_compat.c  **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
  32:net_compat.c  **** 			{
  33:net_compat.c  **** 				.bmRequestType = (REQDIR_DEVICETOHOST | REQTYPE_CLASS | REQREC_INTERFACE),
  34:net_compat.c  **** 				.bRequest      = RNDIS_NOTIF_ResponseAvailable,
  35:net_compat.c  **** 				.wValue        = 0,
  36:net_compat.c  **** 				.wIndex        = 0,
  37:net_compat.c  **** 				.wLength       = 0,
  38:net_compat.c  **** 			};
  39:net_compat.c  **** 
  40:net_compat.c  **** 		/* Indicate that a message response is ready for the host */
  41:net_compat.c  **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(Notification), NULL);
  42:net_compat.c  **** 
  43:net_compat.c  **** 		/* Finalize the stream transfer to send the last packet */
  44:net_compat.c  **** 		Endpoint_ClearIN();
  45:net_compat.c  **** 
  46:net_compat.c  **** 		/* Indicate a response is no longer ready */
  47:net_compat.c  **** 		ResponseReady = false;
  48:net_compat.c  **** 	}
  49:net_compat.c  **** 
  50:net_compat.c  **** 	/* Don't process the data endpoints until the system is in the data initialized state, and the buf
  51:net_compat.c  **** 	if ((CurrRNDISState == RNDIS_Data_Initialized) ) //&& !(MessageHeader->MessageLength))
  52:net_compat.c  **** 	{
  53:net_compat.c  **** 
  54:net_compat.c  **** 		/* Create a new packet header for reading/writing */
  55:net_compat.c  **** 		RNDIS_Packet_Message_t RNDISPacketHeader;
  56:net_compat.c  **** 
  57:net_compat.c  **** 		/* Select the data OUT endpoint */
  58:net_compat.c  **** 		Endpoint_SelectEndpoint(CDC_RX_EPADDR);
  59:net_compat.c  **** 
  60:net_compat.c  **** 		/* Check if the data OUT endpoint contains data, and that the IN buffer is empty */
  61:net_compat.c  **** 		if (Endpoint_IsOUTReceived() ) // && !FrameInLength
  62:net_compat.c  **** 		{
  63:net_compat.c  **** 			/* Read in the packet message header */
  64:net_compat.c  **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
  65:net_compat.c  **** 
  66:net_compat.c  **** 			/* Stall the request if the data is too large */
  67:net_compat.c  **** /*			if (RNDISPacketHeader.DataLength > ETHERNET_FRAME_SIZE_MAX)
  68:net_compat.c  **** 			{
  69:net_compat.c  **** 				Endpoint_StallTransaction();
  70:net_compat.c  **** 				return;
  71:net_compat.c  **** 			}*/
GAS LISTING  			page 59


  72:net_compat.c  **** 
  73:net_compat.c  **** 			FrameInLength = RNDISPacketHeader.DataLength;
  74:net_compat.c  **** 
  75:net_compat.c  **** 			Endpoint_WaitUntilReady();
  76:net_compat.c  **** 			//Pick up here.
  77:net_compat.c  **** 
  78:net_compat.c  **** 			FrameInRemain = FrameInLength;
  79:net_compat.c  **** //			printf( "GP: %d\n", FrameInLength );
  80:net_compat.c  **** 			et_receivecallback( FrameInRemain );
  81:net_compat.c  **** 
  82:net_compat.c  **** 			while( FrameInRemain )
  83:net_compat.c  **** 				et_pop8();
  84:net_compat.c  **** 
  85:net_compat.c  **** 			/* Finalize the stream transfer to send the last packet */
  86:net_compat.c  **** 			Endpoint_ClearOUT();
  87:net_compat.c  **** 
  88:net_compat.c  **** 			FrameInLength = 0;
  89:net_compat.c  **** 		}
  90:net_compat.c  **** 
  91:net_compat.c  **** 		/* Select the data IN endpoint */
  92:net_compat.c  **** 		Endpoint_SelectEndpoint(CDC_TX_EPADDR);
  93:net_compat.c  **** 
  94:net_compat.c  **** 		/* Check if the data IN endpoint is ready for more data, and that the IN buffer is full */
  95:net_compat.c  **** 		if (Endpoint_IsINReady() && FrameOutLength)
  96:net_compat.c  **** 		{
  97:net_compat.c  **** 			/* Clear the packet header with all 0s so that the relevant fields can be filled */
  98:net_compat.c  **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
  99:net_compat.c  **** 
 100:net_compat.c  **** 			/* Construct the required packet header fields in the buffer */
 101:net_compat.c  **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 102:net_compat.c  **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + FrameOutLength );
 103:net_compat.c  **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 104:net_compat.c  **** 			RNDISPacketHeader.DataLength    = FrameOutLength;
 105:net_compat.c  **** 
 106:net_compat.c  **** 			/* Send the packet header to the host */
 107:net_compat.c  **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 108:net_compat.c  **** 
 109:net_compat.c  **** 			/* Send the Ethernet frame data to the host */
 110:net_compat.c  **** 			Endpoint_Write_Stream_LE(&ETbuffer[sendbaseaddress], RNDISPacketHeader.DataLength, NULL);
 111:net_compat.c  **** 
 112:net_compat.c  **** 			/* Finalize the stream transfer to send the last packet */
 113:net_compat.c  **** 			Endpoint_ClearIN();
 114:net_compat.c  **** 
 115:net_compat.c  **** 			/* Indicate Ethernet OUT buffer no longer full */
 116:net_compat.c  **** 			FrameOutLength = 0;
 117:net_compat.c  **** 		}
 118:net_compat.c  **** 	}
 119:net_compat.c  **** }
 120:net_compat.c  **** 
 121:net_compat.c  **** 
 122:net_compat.c  **** 
 123:net_compat.c  **** //Internal functs
 124:net_compat.c  **** 
 125:net_compat.c  **** uint32_t crc32b(uint32_t crc, unsigned char *message, int len) {
 1118               	 .loc 2 125 0
 1119               	 .cfi_startproc
 1120               	.LVL1:
GAS LISTING  			page 60


 1121 003a AF92      	 push r10
 1122               	.LCFI0:
 1123               	 .cfi_def_cfa_offset 3
 1124               	 .cfi_offset 10,-2
 1125 003c BF92      	 push r11
 1126               	.LCFI1:
 1127               	 .cfi_def_cfa_offset 4
 1128               	 .cfi_offset 11,-3
 1129 003e CF92      	 push r12
 1130               	.LCFI2:
 1131               	 .cfi_def_cfa_offset 5
 1132               	 .cfi_offset 12,-4
 1133 0040 DF92      	 push r13
 1134               	.LCFI3:
 1135               	 .cfi_def_cfa_offset 6
 1136               	 .cfi_offset 13,-5
 1137 0042 EF92      	 push r14
 1138               	.LCFI4:
 1139               	 .cfi_def_cfa_offset 7
 1140               	 .cfi_offset 14,-6
 1141 0044 FF92      	 push r15
 1142               	.LCFI5:
 1143               	 .cfi_def_cfa_offset 8
 1144               	 .cfi_offset 15,-7
 1145 0046 0F93      	 push r16
 1146               	.LCFI6:
 1147               	 .cfi_def_cfa_offset 9
 1148               	 .cfi_offset 16,-8
 1149 0048 1F93      	 push r17
 1150               	.LCFI7:
 1151               	 .cfi_def_cfa_offset 10
 1152               	 .cfi_offset 17,-9
 1153 004a CF93      	 push r28
 1154               	.LCFI8:
 1155               	 .cfi_def_cfa_offset 11
 1156               	 .cfi_offset 28,-10
 1157 004c DF93      	 push r29
 1158               	.LCFI9:
 1159               	 .cfi_def_cfa_offset 12
 1160               	 .cfi_offset 29,-11
 1161               	 
 1162               	 
 1163               	 
 1164               	.L__stack_usage =10
 1165 004e 5901      	 movw r10,r18
 1166               	.LVL2:
 126:net_compat.c  ****    int i, j;
 127:net_compat.c  ****    uint32_t mask;
 128:net_compat.c  **** 	uint8_t byte;
 129:net_compat.c  **** 
 130:net_compat.c  ****    i = 0;
 131:net_compat.c  **** //   crc = 0xFFFFFFFF;
 132:net_compat.c  **** 	crc = ~crc;
 1167               	 .loc 2 132 0
 1168 0050 6095      	 com r22
 1169 0052 7095      	 com r23
 1170 0054 8095      	 com r24
GAS LISTING  			page 61


 1171 0056 9095      	 com r25
 1172               	.LVL3:
 133:net_compat.c  ****    while (i < len) {
 1173               	 .loc 2 133 0
 1174 0058 FA01      	 movw r30,r20
 1175               	.LVL4:
 1176               	.L10:
 1177 005a 9F01      	 movw r18,r30
 1178 005c 241B      	 sub r18,r20
 1179 005e 350B      	 sbc r19,r21
 1180               	 .loc 2 133 0 is_stmt 0 discriminator 1
 1181 0060 2A15      	 cp r18,r10
 1182 0062 3B05      	 cpc r19,r11
 1183 0064 04F4      	 brge .L15
 134:net_compat.c  ****       byte = message[i];            // Get next byte.
 1184               	 .loc 2 134 0 is_stmt 1
 1185 0066 2191      	 ld r18,Z+
 1186               	.LVL5:
 135:net_compat.c  ****       crc = crc ^ byte;
 1187               	 .loc 2 135 0
 1188 0068 6227      	 eor r22,r18
 1189               	.LVL6:
 1190 006a A8E0      	 ldi r26,lo8(8)
 1191 006c B0E0      	 ldi r27,0
 1192               	.LVL7:
 1193               	.L12:
 136:net_compat.c  ****       for (j = 7; j >= 0; j--) {    // Do eight times.
 137:net_compat.c  ****          mask = -(crc & 1);
 138:net_compat.c  ****          crc = (crc >> 1) ^ (0xEDB88320 & mask);
 1194               	 .loc 2 138 0 discriminator 2
 1195 006e 8B01      	 movw r16,r22
 1196 0070 9C01      	 movw r18,r24
 1197 0072 3695      	 lsr r19
 1198 0074 2795      	 ror r18
 1199 0076 1795      	 ror r17
 1200 0078 0795      	 ror r16
 137:net_compat.c  ****          mask = -(crc & 1);
 1201               	 .loc 2 137 0 discriminator 2
 1202 007a 6B01      	 movw r12,r22
 1203 007c 7C01      	 movw r14,r24
 1204 007e C1E0      	 ldi r28,1
 1205 0080 CC22      	 and r12,r28
 1206 0082 DD24      	 clr r13
 1207 0084 EE24      	 clr r14
 1208 0086 FF24      	 clr r15
 1209 0088 6627      	 clr r22
 1210 008a 7727      	 clr r23
 1211 008c CB01      	 movw r24,r22
 1212 008e 6C19      	 sub r22,r12
 1213 0090 7D09      	 sbc r23,r13
 1214 0092 8E09      	 sbc r24,r14
 1215 0094 9F09      	 sbc r25,r15
 1216               	.LVL8:
 1217               	 .loc 2 138 0 discriminator 2
 1218 0096 6072      	 andi r22,32
 1219 0098 7378      	 andi r23,131
 1220 009a 887B      	 andi r24,184
GAS LISTING  			page 62


 1221 009c 9D7E      	 andi r25,237
 1222               	.LVL9:
 1223 009e 6027      	 eor r22,r16
 1224 00a0 7127      	 eor r23,r17
 1225 00a2 8227      	 eor r24,r18
 1226 00a4 9327      	 eor r25,r19
 1227               	.LVL10:
 1228 00a6 1197      	 sbiw r26,1
 1229               	.LVL11:
 136:net_compat.c  ****       for (j = 7; j >= 0; j--) {    // Do eight times.
 1230               	 .loc 2 136 0 discriminator 2
 1231 00a8 1097      	 sbiw r26,0
 1232 00aa 01F4      	 brne .L12
 1233 00ac 00C0      	 rjmp .L10
 1234               	.LVL12:
 1235               	.L15:
 139:net_compat.c  ****       }
 140:net_compat.c  ****       i = i + 1;
 141:net_compat.c  ****    }
 142:net_compat.c  ****    return ~crc;
 1236               	 .loc 2 142 0
 1237 00ae 6095      	 com r22
 1238 00b0 7095      	 com r23
 1239 00b2 8095      	 com r24
 1240 00b4 9095      	 com r25
 1241               	.LVL13:
 1242               	 
 143:net_compat.c  **** }
 1243               	 .loc 2 143 0
 1244 00b6 DF91      	 pop r29
 1245 00b8 CF91      	 pop r28
 1246 00ba 1F91      	 pop r17
 1247 00bc 0F91      	 pop r16
 1248 00be FF90      	 pop r15
 1249 00c0 EF90      	 pop r14
 1250 00c2 DF90      	 pop r13
 1251 00c4 CF90      	 pop r12
 1252 00c6 BF90      	 pop r11
 1253 00c8 AF90      	 pop r10
 1254               	.LVL14:
 1255 00ca 0895      	 ret
 1256               	 .cfi_endproc
 1257               	.LFE107:
 1259               	.global internet_checksum
 1261               	internet_checksum:
 1262               	.LFB108:
 144:net_compat.c  **** 
 145:net_compat.c  **** uint16_t internet_checksum( const unsigned char * start, uint16_t len )
 146:net_compat.c  **** {
 1263               	 .loc 2 146 0
 1264               	 .cfi_startproc
 1265               	.LVL15:
 1266 00cc CF93      	 push r28
 1267               	.LCFI10:
 1268               	 .cfi_def_cfa_offset 3
 1269               	 .cfi_offset 28,-2
 1270 00ce DF93      	 push r29
GAS LISTING  			page 63


 1271               	.LCFI11:
 1272               	 .cfi_def_cfa_offset 4
 1273               	 .cfi_offset 29,-3
 1274               	 
 1275               	 
 1276               	 
 1277               	.L__stack_usage =2
 1278 00d0 9B01      	 movw r18,r22
 1279               	.LVL16:
 1280 00d2 DC01      	 movw r26,r24
 147:net_compat.c  **** 	uint16_t i;
 148:net_compat.c  **** 	const uint16_t * wptr = (uint16_t*) start;
 149:net_compat.c  **** 	uint32_t csum = 0;
 1281               	 .loc 2 149 0
 1282 00d4 40E0      	 ldi r20,0
 1283 00d6 50E0      	 ldi r21,0
 1284 00d8 BA01      	 movw r22,r20
 150:net_compat.c  **** 	for (i=1;i<len;i+=2)
 1285               	 .loc 2 150 0
 1286 00da E1E0      	 ldi r30,lo8(1)
 1287 00dc F0E0      	 ldi r31,0
 1288               	.LVL17:
 1289               	.L17:
 1290               	 .loc 2 150 0 is_stmt 0 discriminator 1
 1291 00de E217      	 cp r30,r18
 1292 00e0 F307      	 cpc r31,r19
 1293 00e2 00F4      	 brsh .L25
 1294               	.LVL18:
 151:net_compat.c  **** 	{
 152:net_compat.c  **** 		csum = csum + (uint32_t)(*(wptr++));	
 1295               	 .loc 2 152 0 is_stmt 1 discriminator 2
 1296 00e4 CD91      	 ld r28,X+
 1297 00e6 DD91      	 ld r29,X+
 1298 00e8 4C0F      	 add r20,r28
 1299 00ea 5D1F      	 adc r21,r29
 1300 00ec 611D      	 adc r22,__zero_reg__
 1301 00ee 711D      	 adc r23,__zero_reg__
 1302               	.LVL19:
 150:net_compat.c  **** 	for (i=1;i<len;i+=2)
 1303               	 .loc 2 150 0 discriminator 2
 1304 00f0 3296      	 adiw r30,2
 1305               	.LVL20:
 1306 00f2 00C0      	 rjmp .L17
 1307               	.L25:
 1308 00f4 F901      	 movw r30,r18
 1309               	.LVL21:
 1310 00f6 EE7F      	 andi r30,254
 1311 00f8 E80F      	 add r30,r24
 1312 00fa F91F      	 adc r31,r25
 153:net_compat.c  **** 	}
 154:net_compat.c  **** 	if( len & 1 )  //See if there's an odd number of bytes?
 1313               	 .loc 2 154 0
 1314 00fc 20FF      	 sbrs r18,0
 1315 00fe 00C0      	 rjmp .L20
 1316               	.LVL22:
 1317               	.LBB50:
 155:net_compat.c  **** 	{
GAS LISTING  			page 64


 156:net_compat.c  **** 		uint8_t * tt = (uint8_t*)wptr;
 157:net_compat.c  **** 		csum += *tt;
 1318               	 .loc 2 157 0
 1319 0100 8081      	 ld r24,Z
 1320               	.LVL23:
 1321 0102 480F      	 add r20,r24
 1322 0104 511D      	 adc r21,__zero_reg__
 1323 0106 611D      	 adc r22,__zero_reg__
 1324 0108 711D      	 adc r23,__zero_reg__
 1325               	.LVL24:
 1326               	.L20:
 1327               	.LBE50:
 158:net_compat.c  **** 	}
 159:net_compat.c  **** 	while (csum>>16)
 1328               	 .loc 2 159 0 discriminator 1
 1329 010a CB01      	 movw r24,r22
 1330 010c AA27      	 clr r26
 1331 010e BB27      	 clr r27
 1332 0110 0097      	 sbiw r24,0
 1333 0112 A105      	 cpc r26,__zero_reg__
 1334 0114 B105      	 cpc r27,__zero_reg__
 1335 0116 01F0      	 breq .L26
 160:net_compat.c  **** 		csum = (csum & 0xFFFF)+(csum >> 16);
 1336               	 .loc 2 160 0
 1337 0118 6627      	 clr r22
 1338 011a 7727      	 clr r23
 1339               	.LVL25:
 1340 011c 480F      	 add r20,r24
 1341 011e 591F      	 adc r21,r25
 1342 0120 6A1F      	 adc r22,r26
 1343 0122 7B1F      	 adc r23,r27
 1344               	.LVL26:
 1345 0124 00C0      	 rjmp .L20
 1346               	.L26:
 161:net_compat.c  **** 	csum = (csum>>8) | ((csum&0xff)<<8);
 1347               	 .loc 2 161 0
 1348 0126 BB27      	 clr r27
 1349 0128 A72F      	 mov r26,r23
 1350 012a 962F      	 mov r25,r22
 1351 012c 852F      	 mov r24,r21
 1352 012e 762F      	 mov r23,r22
 1353 0130 652F      	 mov r22,r21
 1354 0132 542F      	 mov r21,r20
 1355 0134 4427      	 clr r20
 1356               	.LVL27:
 1357 0136 6627      	 clr r22
 1358 0138 7727      	 clr r23
 1359               	.LVL28:
 1360 013a 482B      	 or r20,r24
 1361 013c 592B      	 or r21,r25
 1362 013e 6A2B      	 or r22,r26
 1363 0140 7B2B      	 or r23,r27
 1364               	.LVL29:
 162:net_compat.c  **** 	return ~csum;
 1365               	 .loc 2 162 0
 1366 0142 CA01      	 movw r24,r20
 1367 0144 8095      	 com r24
GAS LISTING  			page 65


 1368 0146 9095      	 com r25
 1369               	 
 163:net_compat.c  **** }
 1370               	 .loc 2 163 0
 1371 0148 DF91      	 pop r29
 1372 014a CF91      	 pop r28
 1373 014c 0895      	 ret
 1374               	 .cfi_endproc
 1375               	.LFE108:
 1377               	.global et_pop8
 1379               	et_pop8:
 1380               	.LFB110:
 164:net_compat.c  **** 
 165:net_compat.c  **** 
 166:net_compat.c  **** 
 167:net_compat.c  **** void et_dumpbytes( uint8_t len )
 168:net_compat.c  **** {
 169:net_compat.c  **** 	while( len-- )
 170:net_compat.c  **** 		et_pop8();
 171:net_compat.c  **** }
 172:net_compat.c  **** 
 173:net_compat.c  **** uint8_t et_pop8()
 174:net_compat.c  **** {
 1381               	 .loc 2 174 0
 1382               	 .cfi_startproc
 1383               	 
 1384               	 
 1385               	 
 1386               	.L__stack_usage =0
 175:net_compat.c  **** 	if( !FrameInRemain ) return 0;
 1387               	 .loc 2 175 0
 1388 014e 8091 0000 	 lds r24,FrameInRemain
 1389 0152 9091 0000 	 lds r25,FrameInRemain+1
 1390 0156 892B      	 or r24,r25
 1391 0158 01F0      	 breq .L28
 1392               	.L32:
 1393               	.LBB63:
 1394               	.LBB64:
 1395               	 .file 3 "./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h"
   1:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
   2:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****              LUFA Library
   3:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****      Copyright (C) Dean Camera, 2014.
   4:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   5:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   dean [at] fourwalledcubicle [dot] com
   6:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****            www.lufa-lib.org
   7:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
   8:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
   9:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /*
  10:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Copyright 2014  Dean Camera (dean [at] fourwalledcubicle [dot] com)
  11:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  12:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   Permission to use, copy, modify, distribute, and sell this
  13:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software and its documentation for any purpose is hereby granted
  14:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   without fee, provided that the above copyright notice appear in
  15:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   all copies and that both that the copyright notice and this
  16:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   permission notice and warranty disclaimer appear in supporting
  17:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   documentation, and that the name of the author not be used in
  18:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   advertising or publicity pertaining to distribution of the
GAS LISTING  			page 66


  19:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software without specific, written prior permission.
  20:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  21:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   The author disclaims all warranties with regard to this
  22:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   software, including all implied warranties of merchantability
  23:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   and fitness.  In no event shall the author be liable for any
  24:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   special, indirect or consequential damages or any damages
  25:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   whatsoever resulting from loss of use, data or profits, whether
  26:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   in an action of contract, negligence or other tortious action,
  27:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   arising out of or in connection with the use or performance of
  28:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****   this software.
  29:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** */
  30:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  31:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \file
  32:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief USB Endpoint definitions for the AVR8 microcontrollers.
  33:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \copydetails Group_EndpointManagement_AVR8
  34:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  35:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \note This file should not be included directly. It is automatically included as needed by the 
  36:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *        dispatch header located in LUFA/Drivers/USB/USB.h.
  37:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  38:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  39:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointRW
  40:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointRW_AVR8 Endpoint Data Reading and Writing (AVR8)
  41:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint data read/write definitions for the Atmel AVR8 architecture.
  42:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  43:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing from and to e
  44:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  45:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  46:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPrimitiveRW
  47:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPrimitiveRW_AVR8 Read/Write of Primitive Data Types (AVR8)
  48:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint primitive read/write definitions for the Atmel AVR8 architecture.
  49:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  50:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to data reading and writing of primitive 
  51:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  from and to endpoints.
  52:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  53:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  54:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointPacketManagement
  55:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointPacketManagement_AVR8 Endpoint Packet Management (AVR8)
  56:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint packet management definitions for the Atmel AVR8 architecture.
  57:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  58:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros, variables, enums and types related to packet management of endpoints.
  59:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  60:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  61:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** /** \ingroup Group_EndpointManagement
  62:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \defgroup Group_EndpointManagement_AVR8 Endpoint Management (AVR8)
  63:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  \brief Endpoint management definitions for the Atmel AVR8 architecture.
  64:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  65:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  Functions, macros and enums related to endpoint management when in USB Device mode. This
  66:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  module contains the endpoint management macros, as well as endpoint interrupt and data
  67:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  send/receive functions for various data types.
  68:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *
  69:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  *  @{
  70:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h ****  */
  71:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  72:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #ifndef __ENDPOINT_AVR8_H__
  73:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** #define __ENDPOINT_AVR8_H__
  74:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  75:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Includes: */
GAS LISTING  			page 67


  76:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../../../../Common/Common.h"
  77:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBTask.h"
  78:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#include "../USBInterrupt.h"
  79:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  80:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Enable C linkage for C++ Compilers: */
  81:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if defined(__cplusplus)
  82:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			extern "C" {
  83:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  84:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  85:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Preprocessor Checks: */
  86:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#if !defined(__INCLUDE_FROM_USB_DRIVER)
  87:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#error Do not include this file directly. Include LUFA/Drivers/USB/USB.h instead.
  88:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		#endif
  89:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
  90:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Private Interface - For use in library only: */
  91:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#if !defined(__DOXYGEN__)
  92:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
  93:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes) ATTR_WARN_UNUSED_RESULT A
  94:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                                                       ATTR_ALWAYS_INLINE;
  95:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_BytesToEPSizeMask(const uint16_t Bytes)
  96:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
  97:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t  MaskVal    = 0;
  98:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint16_t CheckBytes = 8;
  99:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 100:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (CheckBytes < Bytes)
 101:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 102:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					MaskVal++;
 103:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					CheckBytes <<= 1;
 104:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 105:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 106:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (MaskVal << EPSIZE0);
 107:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 108:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 109:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Function Prototypes: */
 110:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			void Endpoint_ClearEndpoints(void);
 111:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			bool Endpoint_ConfigureEndpoint_Prv(const uint8_t Number,
 112:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG0XData,
 113:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                    const uint8_t UECFG1XData);
 114:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 115:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	#endif
 116:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 117:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 	/* Public Interface - May be used in end-application: */
 118:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Macros: */
 119:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if (!defined(FIXED_CONTROL_ENDPOINT_SIZE) || defined(__DOXYGEN__))
 120:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				/** Default size of the default control endpoint's bank, until altered by the control endpoint 
 121:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 *  value in the device descriptor. Not available if the \c FIXED_CONTROL_ENDPOINT_SIZE token i
 122:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				 */
 123:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_CONTROLEP_DEFAULT_SIZE     8
 124:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 125:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 126:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#if !defined(CONTROL_ONLY_DEVICE) || defined(__DOXYGEN__)
 127:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if defined(USB_SERIES_4_AVR) || defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR) || defi
 128:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					/** Total number of endpoints (including the default control endpoint at address 0) which may
 129:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  be used in the device. Different USB AVR models support different amounts of endpoints,
 130:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 *  this value reflects the maximum number of endpoints for the currently selected AVR model.
 131:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					 */
 132:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        7
GAS LISTING  			page 68


 133:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 134:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					#define ENDPOINT_TOTAL_ENDPOINTS        5
 135:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 136:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#else
 137:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#define ENDPOINT_TOTAL_ENDPOINTS            1
 138:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			#endif
 139:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 140:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Enums: */
 141:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enum for the possible error return codes of the \ref Endpoint_WaitUntilReady() function.
 142:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 143:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 144:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 145:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			enum Endpoint_WaitUntilReady_ErrorCodes_t
 146:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 147:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_NoError                 = 0, /**< Endpoint is ready for next packet, no erro
 148:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_EndpointStalled         = 1, /**< The endpoint was stalled during the stream
 149:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   transfer by the host or device.
 150:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 151:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_DeviceDisconnected      = 2,	/**< Device was disconnected from the host whil
 152:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   waiting for the endpoint to become ready.
 153:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 154:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_BusSuspended            = 3, /**< The USB bus has been suspended by the host
 155:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   no USB endpoint traffic can occur until th
 156:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   has resumed.
 157:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 158:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				ENDPOINT_READYWAIT_Timeout                 = 4, /**< The host failed to accept or send the next
 159:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   within the software timeout period set by 
 160:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 *   \ref USB_STREAM_TIMEOUT_MS macro.
 161:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                                 */
 162:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			};
 163:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 164:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 		/* Inline Functions: */
 165:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Configures the specified endpoint address with the given endpoint type, bank size and number
 166:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  banks. Once configured, the endpoint may be read from or written to, depending on its direct
 167:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 168:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address    Endpoint address to configure.
 169:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 170:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Type       Type of endpoint to configure, a \c EP_TYPE_* mask. Not all endpoint t
 171:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        are available on Low Speed USB devices - refer to the USB 2.0 specific
 172:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 173:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Size       Size of the endpoint's bank, where packets are stored before they are 
 174:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        to the USB host, or after they have been received from the USB host (d
 175:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        the endpoint's data direction). The bank size must indicate the maximu
 176:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *                        that the endpoint can handle.
 177:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 178:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Banks      Number of banks to use for the endpoint being configured.
 179:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 180:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \attention When the \c ORDERED_EP_CONFIG compile time option is used, Endpoints <b>must</b> 
 181:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *             ascending order, or bank corruption will occur.
 182:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 183:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Different endpoints may have different maximum packet sizes based on the endpoint's in
 184:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        refer to the chosen microcontroller model's datasheet to determine the maximum bank si
 185:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
 186:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 187:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note The default control endpoint should not be manually configured by the user application
 188:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        it is automatically configured by the library internally.
 189:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        \n\n
GAS LISTING  			page 69


 190:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 191:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This routine will automatically select the specified endpoint upon success. Upon failu
 192:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *        which failed to reconfigure correctly will be selected.
 193:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 194:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the configuration succeeded, \c false otherwise.
 195:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 196:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 197:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 198:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 199:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks) ATTR_ALWAYS_INLINE;
 200:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_ConfigureEndpoint(const uint8_t Address,
 201:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Type,
 202:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint16_t Size,
 203:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			                                              const uint8_t Banks)
 204:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 205:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				uint8_t Number = (Address & ENDPOINT_EPNUM_MASK);
 206:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 207:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				if (Number >= ENDPOINT_TOTAL_ENDPOINTS)
 208:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				  return false;
 209:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 210:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return Endpoint_ConfigureEndpoint_Prv(Number,
 211:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((Type << EPTYPE0) | ((Address & ENDPOINT_DIR_IN) ? (1 <<
 212:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				                                      ((1 << ALLOC) | ((Banks > 1) ? (1 << EPBK0) : 0) | Endpoi
 213:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 214:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 215:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Indicates the number of bytes currently stored in the current endpoint's selected bank.
 216:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 217:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointRW_AVR8
 218:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 219:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of bytes in the currently selected Endpoint's FIFO buffer.
 220:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 221:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE
 222:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint16_t Endpoint_BytesInEndpoint(void)
 223:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 224:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if (defined(USB_SERIES_6_AVR) || defined(USB_SERIES_7_AVR))
 225:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCX;
 226:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_4_AVR)
 227:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return (((uint16_t)UEBCHX << 8) | UEBCLX);
 228:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#elif defined(USB_SERIES_2_AVR)
 229:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return UEBCLX;
 230:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 231:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 232:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 233:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines the currently selected endpoint's direction.
 234:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 235:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return The currently selected endpoint's direction, as a \c ENDPOINT_DIR_* mask.
 236:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 237:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_IN
 238:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointDirection(void)
 239:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 240:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UECFG0X & (1 << EPDIR)) ? ENDPOINT_DIR_IN : ENDPOINT_DIR_OUT;
 241:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 242:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 243:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Get the endpoint address of the currently selected endpoint. This is typically used to save
 244:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint so that it can be restored after another endpoint has been
 245:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  manipulated.
 246:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
GAS LISTING  			page 70


 247:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Index of the currently selected endpoint.
 248:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 249:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLI
 250:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetCurrentEndpoint(void)
 251:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 252:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 253:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ((UENUM & ENDPOINT_EPNUM_MASK) | Endpoint_GetEndpointDirection());
 254:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 255:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					return ENDPOINT_CONTROLEP;
 256:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 257:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 258:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 259:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Selects the given endpoint address.
 260:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 261:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  Any endpoint operations which do not require the endpoint address to be indicated will opera
 262:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  the currently selected endpoint.
 263:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 264:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address Endpoint address to select.
 265:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 266:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 267:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SelectEndpoint(const uint8_t Address)
 268:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 269:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 270:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 271:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 272:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 273:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 274:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the endpoint bank FIFO. This clears all the endpoint banks and resets the USB control
 275:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  data In and Out pointers to the bank's contents.
 276:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 277:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Endpoint address whose FIFO buffers are to be reset.
 278:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 279:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address) ATTR_ALWAYS_INLINE;
 280:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetEndpoint(const uint8_t Address)
 281:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 282:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = (1 << (Address & ENDPOINT_EPNUM_MASK));
 283:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UERST = 0;
 284:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 285:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 286:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Enables the currently selected endpoint so that data can be sent and received through it to
 287:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  and from a host.
 288:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 289:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note Endpoints must first be configured properly via \ref Endpoint_ConfigureEndpoint().
 290:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 291:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void) ATTR_ALWAYS_INLINE;
 292:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_EnableEndpoint(void)
 293:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 294:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << EPEN);
 295:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 296:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 297:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Disables the currently selected endpoint so that data cannot be sent and received through it
 298:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  to and from a host.
 299:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 300:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void) ATTR_ALWAYS_INLINE;
 301:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_DisableEndpoint(void)
 302:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 303:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX &= ~(1 << EPEN);
GAS LISTING  			page 71


 304:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 305:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 306:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is enabled, but not necessarily configured.
 307:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 308:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 * \return Boolean \c true if the currently selected endpoint is enabled, \c false otherwise.
 309:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 310:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 311:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsEnabled(void)
 312:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 313:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << EPEN)) ? true : false);
 314:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 315:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 316:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Retrieves the number of busy banks in the currently selected endpoint, which have been queue
 317:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  transmission via the \ref Endpoint_ClearIN() command, or are awaiting acknowledgment via the
 318:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ref Endpoint_ClearOUT() command.
 319:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 320:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 321:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 322:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Total number of busy banks in the selected endpoint.
 323:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 324:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void) ATTR_ALWAYS_INLINE ATTR_WARN_UNUSED_RESULT;
 325:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetBusyBanks(void)
 326:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 327:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return (UESTA0X & (0x03 << NBUSYBK0));
 328:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 329:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 330:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Aborts all pending IN transactions on the currently selected endpoint, once the bank
 331:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  has been queued for transmission to the host via \ref Endpoint_ClearIN(). This function
 332:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  will terminate all queued transactions, resetting the endpoint banks ready for a new
 333:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  packet.
 334:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 335:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 336:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 337:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_AbortPendingIN(void)
 338:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 339:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				while (Endpoint_GetBusyBanks() != 0)
 340:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				{
 341:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX |= (1 << RXOUTI);
 342:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					while (UEINTX & (1 << RXOUTI));
 343:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				}
 344:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 345:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 346:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint may be read from (if data is waiting in the en
 347:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  bank and the endpoint is an OUT direction, or if the bank is not yet full if the endpoint is
 348:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction). This function will return false if an error has occurred in the endpoint, if the
 349:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is an OUT direction and no packet (or an empty packet) has been received, or if the endpoint
 350:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  direction and the endpoint bank is full.
 351:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 352:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 353:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 354:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint may be read from or written to, d
 355:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *          on its direction.
 356:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 357:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 358:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsReadWriteAllowed(void)
 359:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 360:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RWAL)) ? true : false);
GAS LISTING  			page 72


 1396               	 .loc 3 360 0
 1397 015a 8091 E800 	 lds r24,232
 1398               	.LBE64:
 1399               	.LBE63:
 176:net_compat.c  **** 
 177:net_compat.c  **** 	while (!(Endpoint_IsReadWriteAllowed()))
 1400               	 .loc 2 177 0
 1401 015e 85FD      	 sbrc r24,5
 1402 0160 00C0      	 rjmp .L37
 1403               	.LBB65:
 1404               	.LBB66:
 361:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 362:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 363:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is configured.
 364:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 365:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint has been configured, \c false oth
 366:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 367:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 368:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsConfigured(void)
 369:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 370:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UESTA0X & (1 << CFGOK)) ? true : false);
 371:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 372:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 373:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Returns a mask indicating which INTERRUPT type endpoints have interrupted - i.e. their
 374:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  interrupt duration has elapsed. Which endpoints have interrupted can be determined by
 375:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  masking the return value against <tt>(1 << <i>{Endpoint Number}</i>)</tt>.
 376:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 377:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Mask whose bits indicate which endpoints have interrupted.
 378:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 379:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_I
 380:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_GetEndpointInterrupts(void)
 381:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 382:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEINT;
 383:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 384:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 385:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the specified endpoint number has interrupted (valid only for INTERRUPT type
 386:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoints).
 387:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 388:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] Address  Address of the endpoint whose interrupt flag should be tested.
 389:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 390:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the specified endpoint has interrupted, \c false otherwise.
 391:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 392:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address) ATTR_WARN_UNUSED_RESUL
 393:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_HasEndpointInterrupted(const uint8_t Address)
 394:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 395:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((Endpoint_GetEndpointInterrupts() & (1 << (Address & ENDPOINT_EPNUM_MASK))) ? true : fa
 396:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 397:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 398:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected IN endpoint is ready for a new packet to be sent to the host.
 399:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 400:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 401:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 402:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the current endpoint is ready for an IN packet, \c false otherwis
 403:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 404:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 405:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsINReady(void)
 406:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 73


 407:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 408:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 409:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 410:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the selected OUT endpoint has received new packet from the host.
 411:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 412:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 413:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 414:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if current endpoint is has received an OUT packet, \c false otherwis
 415:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 416:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 417:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsOUTReceived(void)
 418:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 419:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 420:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 421:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 422:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the current CONTROL type endpoint has received a SETUP packet.
 423:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 424:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 425:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 426:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the selected endpoint has received a SETUP packet, \c false other
 427:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 428:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 429:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsSETUPReceived(void)
 430:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 431:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXSTPI)) ? true : false);
 432:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 433:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 434:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears a received SETUP packet on the currently selected CONTROL type endpoint, freeing up t
 435:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint for the next packet.
 436:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 437:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 438:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 439:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \note This is not applicable for non CONTROL type endpoints.
 440:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 441:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void) ATTR_ALWAYS_INLINE;
 442:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearSETUP(void)
 443:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 444:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UEINTX &= ~(1 << RXSTPI);
 445:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 446:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 447:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sends an IN packet to the host on the currently selected endpoint, freeing up the endpoint f
 448:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  next packet and switching to the alternative endpoint bank if double banked.
 449:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 450:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 451:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 452:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void) ATTR_ALWAYS_INLINE;
 453:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearIN(void)
 454:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 455:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 456:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 457:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 458:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << TXINI);
 459:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 460:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 461:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 462:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Acknowledges an OUT packet to the host on the currently selected endpoint, freeing up the en
 463:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  for the next packet and switching to the alternative endpoint bank if double banked.
GAS LISTING  			page 74


 464:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 465:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 466:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 467:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void) ATTR_ALWAYS_INLINE;
 468:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearOUT(void)
 469:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 470:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#if !defined(CONTROL_ONLY_DEVICE)
 471:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1405               	 .loc 3 471 0
 1406 0162 8091 E800 	 lds r24,232
 1407 0166 8B77      	 andi r24,lo8(123)
 1408 0168 8093 E800 	 sts 232,r24
 1409               	.LBE66:
 1410               	.LBE65:
 178:net_compat.c  **** 	{
 179:net_compat.c  **** 		Endpoint_ClearOUT();
 180:net_compat.c  **** 
 181:net_compat.c  **** 		if ((Endpoint_WaitUntilReady()))
 1411               	 .loc 2 181 0
 1412 016c 0E94 0000 	 call Endpoint_WaitUntilReady
 1413               	.LVL30:
 1414 0170 8823      	 tst r24
 1415 0172 01F0      	 breq .L32
 1416               	.L28:
 175:net_compat.c  **** 	if( !FrameInRemain ) return 0;
 1417               	 .loc 2 175 0
 1418 0174 80E0      	 ldi r24,0
 1419 0176 0895      	 ret
 1420               	.L37:
 1421               	.LBB67:
 182:net_compat.c  **** 		{
 183:net_compat.c  **** 			//XXX XXX SERIOUS PROBLEM IF WE HANDLE THIS WRONG.
 184:net_compat.c  **** 			return 0;
 185:net_compat.c  **** 		}
 186:net_compat.c  **** 	}
 187:net_compat.c  **** 	FrameInRemain--;
 1422               	 .loc 2 187 0
 1423 0178 8091 0000 	 lds r24,FrameInRemain
 1424 017c 9091 0000 	 lds r25,FrameInRemain+1
 1425 0180 0197      	 sbiw r24,1
 1426 0182 9093 0000 	 sts FrameInRemain+1,r25
 1427 0186 8093 0000 	 sts FrameInRemain,r24
 1428               	.LBB68:
 1429               	.LBB69:
 472:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#else
 473:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~(1 << RXOUTI);
 474:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				#endif
 475:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 476:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 477:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Stalls the current endpoint, indicating to the host that a logical problem occurred with the
 478:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  indicated endpoint and that the current transfer sequence should be aborted. This provides a
 479:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  way for devices to indicate invalid commands to the host so that the current transfer can be
 480:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  aborted and the host can begin its own recovery sequence.
 481:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 482:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  The currently selected endpoint remains stalled until either the \ref Endpoint_ClearStall() 
 483:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  is called, or the host issues a CLEAR FEATURE request to the device for the currently select
 484:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  endpoint.
GAS LISTING  			page 75


 485:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 486:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 487:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 488:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void) ATTR_ALWAYS_INLINE;
 489:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_StallTransaction(void)
 490:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 491:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQ);
 492:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 493:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 494:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Clears the STALL condition on the currently selected endpoint.
 495:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 496:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 497:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 498:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void) ATTR_ALWAYS_INLINE;
 499:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ClearStall(void)
 500:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 501:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << STALLRQC);
 502:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 503:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 504:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Determines if the currently selected endpoint is stalled, \c false otherwise.
 505:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 506:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPacketManagement_AVR8
 507:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 508:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Boolean \c true if the currently selected endpoint is stalled, \c false otherwise.
 509:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 510:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 511:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline bool Endpoint_IsStalled(void)
 512:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 513:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UECONX & (1 << STALLRQ)) ? true : false);
 514:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 515:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 516:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Resets the data toggle of the currently selected endpoint. */
 517:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void) ATTR_ALWAYS_INLINE;
 518:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_ResetDataToggle(void)
 519:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 520:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECONX |= (1 << RSTDT);
 521:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 522:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 523:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Sets the direction of the currently selected endpoint.
 524:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 525:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \param[in] DirectionMask  New endpoint direction, as a \c ENDPOINT_DIR_* mask.
 526:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 527:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask) ATTR_ALWAYS_INLINE
 528:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline void Endpoint_SetEndpointDirection(const uint8_t DirectionMask)
 529:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
 530:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				UECFG0X = ((UECFG0X & ~(1 << EPDIR)) | (DirectionMask ? (1 << EPDIR) : 0));
 531:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			}
 532:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 
 533:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			/** Reads one byte from the currently selected endpoint's bank, for OUT direction endpoints.
 534:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 535:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \ingroup Group_EndpointPrimitiveRW_AVR8
 536:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *
 537:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 *  \return Next byte in the currently selected endpoint's FIFO buffer.
 538:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			 */
 539:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void) ATTR_WARN_UNUSED_RESULT ATTR_ALWAYS_INLINE;
 540:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			static inline uint8_t Endpoint_Read_8(void)
 541:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 			{
GAS LISTING  			page 76


 542:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return UEDATX;
 1430               	 .loc 3 542 0
 1431 018a 8091 F100 	 lds r24,241
 1432               	.LBE69:
 1433               	.LBE68:
 1434               	.LBE67:
 188:net_compat.c  **** 	return Endpoint_Read_8();
 189:net_compat.c  **** }
 1435               	 .loc 2 189 0
 1436 018e 0895      	 ret
 1437               	 .cfi_endproc
 1438               	.LFE110:
 1440               	 .section .rodata
 1441               	.LC0:
 1442 0000 A1        	 .byte -95
 1443 0001 01        	 .byte 1
 1444 0002 0000      	 .word 0
 1445 0004 0000      	 .word 0
 1446 0006 0000      	 .word 0
 1447               	 .text
 1448               	.global HandleUSB
 1450               	HandleUSB:
 1451               	.LFB106:
  26:net_compat.c  **** {
 1452               	 .loc 2 26 0
 1453               	 .cfi_startproc
 1454 0190 0F93      	 push r16
 1455               	.LCFI12:
 1456               	 .cfi_def_cfa_offset 3
 1457               	 .cfi_offset 16,-2
 1458 0192 1F93      	 push r17
 1459               	.LCFI13:
 1460               	 .cfi_def_cfa_offset 4
 1461               	 .cfi_offset 17,-3
 1462 0194 CF93      	 push r28
 1463               	.LCFI14:
 1464               	 .cfi_def_cfa_offset 5
 1465               	 .cfi_offset 28,-4
 1466 0196 DF93      	 push r29
 1467               	.LCFI15:
 1468               	 .cfi_def_cfa_offset 6
 1469               	 .cfi_offset 29,-5
 1470 0198 CDB7      	 in r28,__SP_L__
 1471 019a DEB7      	 in r29,__SP_H__
 1472               	.LCFI16:
 1473               	 .cfi_def_cfa_register 28
 1474 019c AC97      	 sbiw r28,44
 1475               	.LCFI17:
 1476               	 .cfi_def_cfa_offset 50
 1477 019e 0FB6      	 in __tmp_reg__,__SREG__
 1478 01a0 F894      	 cli
 1479 01a2 DEBF      	 out __SP_H__,r29
 1480 01a4 0FBE      	 out __SREG__,__tmp_reg__
 1481 01a6 CDBF      	 out __SP_L__,r28
 1482               	 
 1483               	 
 1484               	 
GAS LISTING  			page 77


 1485               	.L__stack_usage =48
 1486               	.LBB95:
 1487               	.LBB96:
 407:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1488               	 .loc 3 407 0
 1489 01a8 8091 E800 	 lds r24,232
 1490               	.LBE96:
 1491               	.LBE95:
  29:net_compat.c  **** 	if (Endpoint_IsINReady() && ResponseReady)
 1492               	 .loc 2 29 0
 1493 01ac 80FF      	 sbrs r24,0
 1494 01ae 00C0      	 rjmp .L39
  29:net_compat.c  **** 	if (Endpoint_IsINReady() && ResponseReady)
 1495               	 .loc 2 29 0 is_stmt 0 discriminator 1
 1496 01b0 8091 0000 	 lds r24,ResponseReady
 1497 01b4 8823      	 tst r24
 1498 01b6 01F0      	 breq .L39
 1499               	.LBB97:
  31:net_compat.c  **** 		USB_Request_Header_t Notification = (USB_Request_Header_t)
 1500               	 .loc 2 31 0 is_stmt 1
 1501 01b8 88E0      	 ldi r24,lo8(8)
 1502 01ba E0E0      	 ldi r30,lo8(.LC0)
 1503 01bc F0E0      	 ldi r31,hi8(.LC0)
 1504 01be DE01      	 movw r26,r28
 1505 01c0 1196      	 adiw r26,1
 1506               	 0:
 1507 01c2 0190      	 ld r0,Z+
 1508 01c4 0D92      	 st X+,r0
 1509 01c6 8A95      	 dec r24
 1510 01c8 01F4      	 brne 0b
  41:net_compat.c  **** 		Endpoint_Write_Stream_LE(&Notification, sizeof(Notification), NULL);
 1511               	 .loc 2 41 0
 1512 01ca 40E0      	 ldi r20,0
 1513 01cc 50E0      	 ldi r21,0
 1514 01ce 68E0      	 ldi r22,lo8(8)
 1515 01d0 70E0      	 ldi r23,0
 1516 01d2 CE01      	 movw r24,r28
 1517 01d4 0196      	 adiw r24,1
 1518 01d6 0E94 0000 	 call Endpoint_Write_Stream_LE
 1519               	.LVL31:
 1520               	.LBB98:
 1521               	.LBB99:
 456:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1522               	 .loc 3 456 0
 1523 01da 8091 E800 	 lds r24,232
 1524 01de 8E77      	 andi r24,lo8(126)
 1525 01e0 8093 E800 	 sts 232,r24
 1526               	.LBE99:
 1527               	.LBE98:
  47:net_compat.c  **** 		ResponseReady = false;
 1528               	 .loc 2 47 0
 1529 01e4 1092 0000 	 sts ResponseReady,__zero_reg__
 1530               	.L39:
 1531               	.LBE97:
  51:net_compat.c  **** 	if ((CurrRNDISState == RNDIS_Data_Initialized) ) //&& !(MessageHeader->MessageLength))
 1532               	 .loc 2 51 0
 1533 01e8 8091 0000 	 lds r24,CurrRNDISState
GAS LISTING  			page 78


 1534 01ec 8230      	 cpi r24,lo8(2)
 1535 01ee 01F0      	 breq .+2
 1536 01f0 00C0      	 rjmp .L38
 1537               	.LVL32:
 1538               	.LBB100:
 1539               	.LBB101:
 1540               	.LBB102:
 1541               	.LBB103:
 270:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 1542               	 .loc 3 270 0
 1543 01f2 8093 E900 	 sts 233,r24
 1544               	.LBE103:
 1545               	.LBE102:
 1546               	.LBB104:
 1547               	.LBB105:
 419:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << RXOUTI)) ? true : false);
 1548               	 .loc 3 419 0
 1549 01f6 8091 E800 	 lds r24,232
 1550               	.LBE105:
 1551               	.LBE104:
  61:net_compat.c  **** 		if (Endpoint_IsOUTReceived() ) // && !FrameInLength
 1552               	 .loc 2 61 0
 1553 01fa 82FF      	 sbrs r24,2
 1554 01fc 00C0      	 rjmp .L41
  64:net_compat.c  **** 			Endpoint_Read_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1555               	 .loc 2 64 0
 1556 01fe 40E0      	 ldi r20,0
 1557 0200 50E0      	 ldi r21,0
 1558 0202 6CE2      	 ldi r22,lo8(44)
 1559 0204 70E0      	 ldi r23,0
 1560 0206 CE01      	 movw r24,r28
 1561 0208 0196      	 adiw r24,1
 1562 020a 0E94 0000 	 call Endpoint_Read_Stream_LE
 1563               	.LVL33:
  73:net_compat.c  **** 			FrameInLength = RNDISPacketHeader.DataLength;
 1564               	 .loc 2 73 0
 1565 020e 8D85      	 ldd r24,Y+13
 1566 0210 9E85      	 ldd r25,Y+14
 1567 0212 9093 0000 	 sts FrameInLength+1,r25
 1568 0216 8093 0000 	 sts FrameInLength,r24
  75:net_compat.c  **** 			Endpoint_WaitUntilReady();
 1569               	 .loc 2 75 0
 1570 021a 0E94 0000 	 call Endpoint_WaitUntilReady
 1571               	.LVL34:
  78:net_compat.c  **** 			FrameInRemain = FrameInLength;
 1572               	 .loc 2 78 0
 1573 021e 8091 0000 	 lds r24,FrameInLength
 1574 0222 9091 0000 	 lds r25,FrameInLength+1
 1575 0226 9093 0000 	 sts FrameInRemain+1,r25
 1576 022a 8093 0000 	 sts FrameInRemain,r24
  80:net_compat.c  **** 			et_receivecallback( FrameInRemain );
 1577               	 .loc 2 80 0
 1578 022e 0E94 0000 	 call et_receivecallback
 1579               	.LVL35:
 1580               	.L42:
  82:net_compat.c  **** 			while( FrameInRemain )
 1581               	 .loc 2 82 0
GAS LISTING  			page 79


 1582 0232 8091 0000 	 lds r24,FrameInRemain
 1583 0236 9091 0000 	 lds r25,FrameInRemain+1
 1584 023a 892B      	 or r24,r25
 1585 023c 01F0      	 breq .L60
  83:net_compat.c  **** 				et_pop8();
 1586               	 .loc 2 83 0
 1587 023e 0E94 0000 	 call et_pop8
 1588               	.LVL36:
 1589 0242 00C0      	 rjmp .L42
 1590               	.L60:
 1591               	.LBB106:
 1592               	.LBB107:
 471:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << RXOUTI) | (1 << FIFOCON));
 1593               	 .loc 3 471 0
 1594 0244 8091 E800 	 lds r24,232
 1595 0248 8B77      	 andi r24,lo8(123)
 1596 024a 8093 E800 	 sts 232,r24
 1597               	.LBE107:
 1598               	.LBE106:
  88:net_compat.c  **** 			FrameInLength = 0;
 1599               	 .loc 2 88 0
 1600 024e 1092 0000 	 sts FrameInLength+1,__zero_reg__
 1601 0252 1092 0000 	 sts FrameInLength,__zero_reg__
 1602               	.L41:
 1603               	.LVL37:
 1604               	.LBB108:
 1605               	.LBB109:
 270:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UENUM = (Address & ENDPOINT_EPNUM_MASK);
 1606               	 .loc 3 270 0
 1607 0256 81E0      	 ldi r24,lo8(1)
 1608 0258 8093 E900 	 sts 233,r24
 1609               	.LBE109:
 1610               	.LBE108:
 1611               	.LBB110:
 1612               	.LBB111:
 407:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 				return ((UEINTX & (1 << TXINI)) ? true : false);
 1613               	 .loc 3 407 0
 1614 025c 8091 E800 	 lds r24,232
 1615               	.LBE111:
 1616               	.LBE110:
  95:net_compat.c  **** 		if (Endpoint_IsINReady() && FrameOutLength)
 1617               	 .loc 2 95 0
 1618 0260 80FF      	 sbrs r24,0
 1619 0262 00C0      	 rjmp .L38
 1620 0264 4091 0000 	 lds r20,FrameOutLength
 1621 0268 5091 0000 	 lds r21,FrameOutLength+1
 1622 026c 4115      	 cp r20,__zero_reg__
 1623 026e 5105      	 cpc r21,__zero_reg__
 1624 0270 01F4      	 brne .+2
 1625 0272 00C0      	 rjmp .L38
  98:net_compat.c  **** 			memset(&RNDISPacketHeader, 0, sizeof(RNDIS_Packet_Message_t));
 1626               	 .loc 2 98 0
 1627 0274 CE01      	 movw r24,r28
 1628 0276 0196      	 adiw r24,1
 1629 0278 2CE2      	 ldi r18,lo8(44)
 1630 027a FC01      	 movw r30,r24
 1631               	 0:
GAS LISTING  			page 80


 1632 027c 1192      	 st Z+,__zero_reg__
 1633 027e 2A95      	 dec r18
 1634 0280 01F4      	 brne 0b
 101:net_compat.c  **** 			RNDISPacketHeader.MessageType   = REMOTE_NDIS_PACKET_MSG;
 1635               	 .loc 2 101 0
 1636 0282 01E0      	 ldi r16,lo8(1)
 1637 0284 10E0      	 ldi r17,0
 1638 0286 20E0      	 ldi r18,0
 1639 0288 30E0      	 ldi r19,0
 1640 028a 0983      	 std Y+1,r16
 1641 028c 1A83      	 std Y+2,r17
 1642 028e 2B83      	 std Y+3,r18
 1643 0290 3C83      	 std Y+4,r19
 102:net_compat.c  **** 			RNDISPacketHeader.MessageLength = (sizeof(RNDIS_Packet_Message_t) + FrameOutLength );
 1644               	 .loc 2 102 0
 1645 0292 8A01      	 movw r16,r20
 1646 0294 045D      	 subi r16,-44
 1647 0296 1F4F      	 sbci r17,-1
 1648 0298 20E0      	 ldi r18,0
 1649 029a 30E0      	 ldi r19,0
 1650 029c 0D83      	 std Y+5,r16
 1651 029e 1E83      	 std Y+6,r17
 1652 02a0 2F83      	 std Y+7,r18
 1653 02a2 3887      	 std Y+8,r19
 103:net_compat.c  **** 			RNDISPacketHeader.DataOffset    = (sizeof(RNDIS_Packet_Message_t) - sizeof(RNDIS_Message_Header_
 1654               	 .loc 2 103 0
 1655 02a4 04E2      	 ldi r16,lo8(36)
 1656 02a6 10E0      	 ldi r17,0
 1657 02a8 20E0      	 ldi r18,0
 1658 02aa 30E0      	 ldi r19,0
 1659 02ac 0987      	 std Y+9,r16
 1660 02ae 1A87      	 std Y+10,r17
 1661 02b0 2B87      	 std Y+11,r18
 1662 02b2 3C87      	 std Y+12,r19
 104:net_compat.c  **** 			RNDISPacketHeader.DataLength    = FrameOutLength;
 1663               	 .loc 2 104 0
 1664 02b4 60E0      	 ldi r22,0
 1665 02b6 70E0      	 ldi r23,0
 1666 02b8 4D87      	 std Y+13,r20
 1667 02ba 5E87      	 std Y+14,r21
 1668 02bc 6F87      	 std Y+15,r22
 1669 02be 788B      	 std Y+16,r23
 107:net_compat.c  **** 			Endpoint_Write_Stream_LE(&RNDISPacketHeader, sizeof(RNDIS_Packet_Message_t), NULL);
 1670               	 .loc 2 107 0
 1671 02c0 40E0      	 ldi r20,0
 1672 02c2 50E0      	 ldi r21,0
 1673 02c4 6CE2      	 ldi r22,lo8(44)
 1674 02c6 70E0      	 ldi r23,0
 1675 02c8 0E94 0000 	 call Endpoint_Write_Stream_LE
 1676               	.LVL38:
 110:net_compat.c  **** 			Endpoint_Write_Stream_LE(&ETbuffer[sendbaseaddress], RNDISPacketHeader.DataLength, NULL);
 1677               	 .loc 2 110 0
 1678 02cc 6D85      	 ldd r22,Y+13
 1679 02ce 7E85      	 ldd r23,Y+14
 1680 02d0 8091 0000 	 lds r24,sendbaseaddress
 1681 02d4 9091 0000 	 lds r25,sendbaseaddress+1
 1682 02d8 40E0      	 ldi r20,0
GAS LISTING  			page 81


 1683 02da 50E0      	 ldi r21,0
 1684 02dc 8050      	 subi r24,lo8(-(ETbuffer))
 1685 02de 9040      	 sbci r25,hi8(-(ETbuffer))
 1686 02e0 0E94 0000 	 call Endpoint_Write_Stream_LE
 1687               	.LVL39:
 1688               	.LBB112:
 1689               	.LBB113:
 456:./LUFA/Drivers/USB/Core/AVR8/../AVR8/Endpoint_AVR8.h **** 					UEINTX &= ~((1 << TXINI) | (1 << FIFOCON));
 1690               	 .loc 3 456 0
 1691 02e4 8091 E800 	 lds r24,232
 1692 02e8 8E77      	 andi r24,lo8(126)
 1693 02ea 8093 E800 	 sts 232,r24
 1694               	.LBE113:
 1695               	.LBE112:
 116:net_compat.c  **** 			FrameOutLength = 0;
 1696               	 .loc 2 116 0
 1697 02ee 1092 0000 	 sts FrameOutLength+1,__zero_reg__
 1698 02f2 1092 0000 	 sts FrameOutLength,__zero_reg__
 1699               	.LVL40:
 1700               	.L38:
 1701               	 
 1702               	.LBE101:
 1703               	.LBE100:
 119:net_compat.c  **** }
 1704               	 .loc 2 119 0
 1705 02f6 AC96      	 adiw r28,44
 1706 02f8 0FB6      	 in __tmp_reg__,__SREG__
 1707 02fa F894      	 cli
 1708 02fc DEBF      	 out __SP_H__,r29
 1709 02fe 0FBE      	 out __SREG__,__tmp_reg__
 1710 0300 CDBF      	 out __SP_L__,r28
 1711 0302 DF91      	 pop r29
 1712 0304 CF91      	 pop r28
 1713 0306 1F91      	 pop r17
 1714 0308 0F91      	 pop r16
 1715 030a 0895      	 ret
 1716               	 .cfi_endproc
 1717               	.LFE106:
 1719               	.global et_dumpbytes
 1721               	et_dumpbytes:
 1722               	.LFB109:
 168:net_compat.c  **** {
 1723               	 .loc 2 168 0
 1724               	 .cfi_startproc
 1725               	.LVL41:
 1726 030c CF93      	 push r28
 1727               	.LCFI18:
 1728               	 .cfi_def_cfa_offset 3
 1729               	 .cfi_offset 28,-2
 1730               	 
 1731               	 
 1732               	 
 1733               	.L__stack_usage =1
 1734 030e C82F      	 mov r28,r24
 1735               	.LVL42:
 1736               	.L62:
 169:net_compat.c  **** 	while( len-- )
GAS LISTING  			page 82


 1737               	 .loc 2 169 0 discriminator 1
 1738 0310 CC23      	 tst r28
 1739 0312 01F0      	 breq .L64
 170:net_compat.c  **** 		et_pop8();
 1740               	 .loc 2 170 0
 1741 0314 0E94 0000 	 call et_pop8
 1742               	.LVL43:
 1743 0318 C150      	 subi r28,lo8(-(-1))
 1744               	.LVL44:
 1745 031a 00C0      	 rjmp .L62
 1746               	.LVL45:
 1747               	.L64:
 1748               	 
 171:net_compat.c  **** }
 1749               	 .loc 2 171 0
 1750 031c CF91      	 pop r28
 1751               	.LVL46:
 1752 031e 0895      	 ret
 1753               	 .cfi_endproc
 1754               	.LFE109:
 1756               	.global et_pop16
 1758               	et_pop16:
 1759               	.LFB111:
 190:net_compat.c  **** 
 191:net_compat.c  **** 
 192:net_compat.c  **** uint16_t et_pop16()
 193:net_compat.c  **** {
 1760               	 .loc 2 193 0
 1761               	 .cfi_startproc
 1762 0320 CF93      	 push r28
 1763               	.LCFI19:
 1764               	 .cfi_def_cfa_offset 3
 1765               	 .cfi_offset 28,-2
 1766               	 
 1767               	 
 1768               	 
 1769               	.L__stack_usage =1
 194:net_compat.c  **** 	uint16_t ret = et_pop8();
 1770               	 .loc 2 194 0
 1771 0322 0E94 0000 	 call et_pop8
 1772               	.LVL47:
 1773 0326 C82F      	 mov r28,r24
 1774               	.LVL48:
 195:net_compat.c  **** 	return (ret<<8) | et_pop8();
 1775               	 .loc 2 195 0
 1776 0328 0E94 0000 	 call et_pop8
 1777               	.LVL49:
 194:net_compat.c  **** 	uint16_t ret = et_pop8();
 1778               	 .loc 2 194 0
 1779 032c 2C2F      	 mov r18,r28
 1780 032e 30E0      	 ldi r19,0
 1781               	 .loc 2 195 0
 1782 0330 322F      	 mov r19,r18
 1783 0332 2227      	 clr r18
 196:net_compat.c  **** }
 1784               	 .loc 2 196 0
 1785 0334 A901      	 movw r20,r18
GAS LISTING  			page 83


 1786 0336 482B      	 or r20,r24
 1787 0338 CA01      	 movw r24,r20
 1788               	 
 1789 033a CF91      	 pop r28
 1790               	.LVL50:
 1791 033c 0895      	 ret
 1792               	 .cfi_endproc
 1793               	.LFE111:
 1795               	.global et_popblob
 1797               	et_popblob:
 1798               	.LFB112:
 197:net_compat.c  **** 
 198:net_compat.c  **** void et_popblob( uint8_t * data, uint8_t len )
 199:net_compat.c  **** {
 1799               	 .loc 2 199 0
 1800               	 .cfi_startproc
 1801               	.LVL51:
 1802 033e 0F93      	 push r16
 1803               	.LCFI20:
 1804               	 .cfi_def_cfa_offset 3
 1805               	 .cfi_offset 16,-2
 1806 0340 1F93      	 push r17
 1807               	.LCFI21:
 1808               	 .cfi_def_cfa_offset 4
 1809               	 .cfi_offset 17,-3
 1810 0342 CF93      	 push r28
 1811               	.LCFI22:
 1812               	 .cfi_def_cfa_offset 5
 1813               	 .cfi_offset 28,-4
 1814 0344 DF93      	 push r29
 1815               	.LCFI23:
 1816               	 .cfi_def_cfa_offset 6
 1817               	 .cfi_offset 29,-5
 1818 0346 1F92      	 push __zero_reg__
 1819               	.LCFI24:
 1820               	 .cfi_def_cfa_offset 7
 1821 0348 CDB7      	 in r28,__SP_L__
 1822 034a DEB7      	 in r29,__SP_H__
 1823               	.LCFI25:
 1824               	 .cfi_def_cfa_register 28
 1825               	 
 1826               	 
 1827               	 
 1828               	.L__stack_usage =5
 200:net_compat.c  **** 	while( len-- )
 1829               	 .loc 2 200 0
 1830 034c 8C01      	 movw r16,r24
 1831 034e 680F      	 add r22,r24
 1832               	.LVL52:
 1833               	.L67:
 1834               	 .loc 2 200 0 is_stmt 0 discriminator 1
 1835 0350 6017      	 cp r22,r16
 1836 0352 01F0      	 breq .L69
 1837               	.LVL53:
 201:net_compat.c  **** 	{
 202:net_compat.c  **** 		*(data++) = et_pop8();
 1838               	 .loc 2 202 0 is_stmt 1
GAS LISTING  			page 84


 1839 0354 6983      	 std Y+1,r22
 1840 0356 0E94 0000 	 call et_pop8
 1841               	.LVL54:
 1842 035a F801      	 movw r30,r16
 1843 035c 8193      	 st Z+,r24
 1844               	.LVL55:
 1845 035e 8F01      	 movw r16,r30
 1846               	.LVL56:
 1847 0360 6981      	 ldd r22,Y+1
 1848 0362 00C0      	 rjmp .L67
 1849               	.LVL57:
 1850               	.L69:
 1851               	 
 203:net_compat.c  **** 	}
 204:net_compat.c  **** }
 1852               	 .loc 2 204 0
 1853 0364 0F90      	 pop __tmp_reg__
 1854 0366 DF91      	 pop r29
 1855 0368 CF91      	 pop r28
 1856 036a 1F91      	 pop r17
 1857 036c 0F91      	 pop r16
 1858               	.LVL58:
 1859 036e 0895      	 ret
 1860               	 .cfi_endproc
 1861               	.LFE112:
 1863               	.global et_pushpgmstr
 1865               	et_pushpgmstr:
 1866               	.LFB113:
 205:net_compat.c  **** 
 206:net_compat.c  **** void et_pushpgmstr( const char * msg )
 207:net_compat.c  **** {
 1867               	 .loc 2 207 0
 1868               	 .cfi_startproc
 1869               	.LVL59:
 1870 0370 CF93      	 push r28
 1871               	.LCFI26:
 1872               	 .cfi_def_cfa_offset 3
 1873               	 .cfi_offset 28,-2
 1874 0372 DF93      	 push r29
 1875               	.LCFI27:
 1876               	 .cfi_def_cfa_offset 4
 1877               	 .cfi_offset 29,-3
 1878               	 
 1879               	 
 1880               	 
 1881               	.L__stack_usage =2
 1882 0374 FC01      	 movw r30,r24
 1883               	.LVL60:
 1884               	.L72:
 1885               	.LBB114:
 208:net_compat.c  **** 	uint8_t r;
 209:net_compat.c  **** 	do
 210:net_compat.c  **** 	{
 211:net_compat.c  **** 		r = pgm_read_byte(msg++);
 1886               	 .loc 2 211 0
 1887               	 
 1888               	 
GAS LISTING  			page 85


 1889 0376 8491      	 lpm r24,Z
 1890               	 
 1891               	 
 1892               	.LVL61:
 1893               	 
 1894 0378 EF01      	 movw r28,r30
 1895 037a 2196      	 adiw r28,1
 1896               	.LVL62:
 1897               	.LBE114:
 212:net_compat.c  **** 		if( !r ) break;
 1898               	 .loc 2 212 0
 1899 037c 8823      	 tst r24
 1900 037e 01F0      	 breq .L70
 213:net_compat.c  **** 		et_push8( r );
 1901               	 .loc 2 213 0
 1902 0380 0E94 0000 	 call et_push8
 1903               	.LVL63:
 1904 0384 FE01      	 movw r30,r28
 214:net_compat.c  **** 	} while( 1 );
 1905               	 .loc 2 214 0
 1906 0386 00C0      	 rjmp .L72
 1907               	.LVL64:
 1908               	.L70:
 1909               	 
 215:net_compat.c  **** }
 1910               	 .loc 2 215 0
 1911 0388 DF91      	 pop r29
 1912 038a CF91      	 pop r28
 1913               	.LVL65:
 1914 038c 0895      	 ret
 1915               	 .cfi_endproc
 1916               	.LFE113:
 1918               	.global et_pushpgmblob
 1920               	et_pushpgmblob:
 1921               	.LFB114:
 216:net_compat.c  **** 
 217:net_compat.c  **** void et_pushpgmblob( const uint8_t * data, uint8_t len )
 218:net_compat.c  **** {
 1922               	 .loc 2 218 0
 1923               	 .cfi_startproc
 1924               	.LVL66:
 1925 038e 0F93      	 push r16
 1926               	.LCFI28:
 1927               	 .cfi_def_cfa_offset 3
 1928               	 .cfi_offset 16,-2
 1929 0390 1F93      	 push r17
 1930               	.LCFI29:
 1931               	 .cfi_def_cfa_offset 4
 1932               	 .cfi_offset 17,-3
 1933 0392 CF93      	 push r28
 1934               	.LCFI30:
 1935               	 .cfi_def_cfa_offset 5
 1936               	 .cfi_offset 28,-4
 1937 0394 DF93      	 push r29
 1938               	.LCFI31:
 1939               	 .cfi_def_cfa_offset 6
 1940               	 .cfi_offset 29,-5
GAS LISTING  			page 86


 1941 0396 1F92      	 push __zero_reg__
 1942               	.LCFI32:
 1943               	 .cfi_def_cfa_offset 7
 1944 0398 CDB7      	 in r28,__SP_L__
 1945 039a DEB7      	 in r29,__SP_H__
 1946               	.LCFI33:
 1947               	 .cfi_def_cfa_register 28
 1948               	 
 1949               	 
 1950               	 
 1951               	.L__stack_usage =5
 219:net_compat.c  **** 	while( len-- )
 1952               	 .loc 2 219 0
 1953 039c 8C01      	 movw r16,r24
 1954 039e 680F      	 add r22,r24
 1955               	.LVL67:
 1956               	.L74:
 1957               	 .loc 2 219 0 is_stmt 0 discriminator 1
 1958 03a0 6017      	 cp r22,r16
 1959 03a2 01F0      	 breq .L76
 1960               	.LVL68:
 1961               	.LBB115:
 220:net_compat.c  **** 	{
 221:net_compat.c  **** 		et_push8( pgm_read_byte(data++) );
 1962               	 .loc 2 221 0 is_stmt 1
 1963 03a4 F801      	 movw r30,r16
 1964               	 
 1965               	 
 1966 03a6 8491      	 lpm r24,Z
 1967               	 
 1968               	 
 1969               	.LVL69:
 1970               	 
 1971               	.LBE115:
 1972 03a8 6983      	 std Y+1,r22
 1973 03aa 0E94 0000 	 call et_push8
 1974               	.LVL70:
 1975 03ae 0F5F      	 subi r16,-1
 1976 03b0 1F4F      	 sbci r17,-1
 1977               	.LVL71:
 1978 03b2 6981      	 ldd r22,Y+1
 1979 03b4 00C0      	 rjmp .L74
 1980               	.LVL72:
 1981               	.L76:
 1982               	 
 222:net_compat.c  **** 	}
 223:net_compat.c  **** }
 1983               	 .loc 2 223 0
 1984 03b6 0F90      	 pop __tmp_reg__
 1985 03b8 DF91      	 pop r29
 1986 03ba CF91      	 pop r28
 1987 03bc 1F91      	 pop r17
 1988 03be 0F91      	 pop r16
 1989               	.LVL73:
 1990 03c0 0895      	 ret
 1991               	 .cfi_endproc
 1992               	.LFE114:
GAS LISTING  			page 87


 1994               	.global et_pushstr
 1996               	et_pushstr:
 1997               	.LFB115:
 224:net_compat.c  **** 
 225:net_compat.c  **** 
 226:net_compat.c  **** void et_pushstr( const char * msg )
 227:net_compat.c  **** {
 1998               	 .loc 2 227 0
 1999               	 .cfi_startproc
 2000               	.LVL74:
 2001 03c2 CF93      	 push r28
 2002               	.LCFI34:
 2003               	 .cfi_def_cfa_offset 3
 2004               	 .cfi_offset 28,-2
 2005 03c4 DF93      	 push r29
 2006               	.LCFI35:
 2007               	 .cfi_def_cfa_offset 4
 2008               	 .cfi_offset 29,-3
 2009               	 
 2010               	 
 2011               	 
 2012               	.L__stack_usage =2
 2013 03c6 EC01      	 movw r28,r24
 2014               	.LVL75:
 2015               	.L78:
 228:net_compat.c  **** 	for( ; *msg; msg++ ) 
 2016               	 .loc 2 228 0 discriminator 1
 2017 03c8 8991      	 ld r24,Y+
 2018               	.LVL76:
 2019 03ca 8823      	 tst r24
 2020 03cc 01F0      	 breq .L80
 229:net_compat.c  **** 		et_push8( *msg );
 2021               	 .loc 2 229 0 discriminator 2
 2022 03ce 0E94 0000 	 call et_push8
 2023               	.LVL77:
 2024 03d2 00C0      	 rjmp .L78
 2025               	.LVL78:
 2026               	.L80:
 2027               	 
 230:net_compat.c  **** }
 2028               	 .loc 2 230 0
 2029 03d4 DF91      	 pop r29
 2030 03d6 CF91      	 pop r28
 2031               	.LVL79:
 2032 03d8 0895      	 ret
 2033               	 .cfi_endproc
 2034               	.LFE115:
 2036               	.global et_pushblob
 2038               	et_pushblob:
 2039               	.LFB116:
 231:net_compat.c  **** 
 232:net_compat.c  **** void et_pushblob( const uint8_t * data, uint8_t len )
 233:net_compat.c  **** {
 2040               	 .loc 2 233 0
 2041               	 .cfi_startproc
 2042               	.LVL80:
 2043 03da 0F93      	 push r16
GAS LISTING  			page 88


 2044               	.LCFI36:
 2045               	 .cfi_def_cfa_offset 3
 2046               	 .cfi_offset 16,-2
 2047 03dc 1F93      	 push r17
 2048               	.LCFI37:
 2049               	 .cfi_def_cfa_offset 4
 2050               	 .cfi_offset 17,-3
 2051 03de CF93      	 push r28
 2052               	.LCFI38:
 2053               	 .cfi_def_cfa_offset 5
 2054               	 .cfi_offset 28,-4
 2055 03e0 DF93      	 push r29
 2056               	.LCFI39:
 2057               	 .cfi_def_cfa_offset 6
 2058               	 .cfi_offset 29,-5
 2059 03e2 1F92      	 push __zero_reg__
 2060               	.LCFI40:
 2061               	 .cfi_def_cfa_offset 7
 2062 03e4 CDB7      	 in r28,__SP_L__
 2063 03e6 DEB7      	 in r29,__SP_H__
 2064               	.LCFI41:
 2065               	 .cfi_def_cfa_register 28
 2066               	 
 2067               	 
 2068               	 
 2069               	.L__stack_usage =5
 234:net_compat.c  **** 	while( len-- )
 2070               	 .loc 2 234 0
 2071 03e8 8C01      	 movw r16,r24
 2072 03ea 680F      	 add r22,r24
 2073               	.LVL81:
 2074               	.L82:
 2075               	 .loc 2 234 0 is_stmt 0 discriminator 1
 2076 03ec 6017      	 cp r22,r16
 2077 03ee 01F0      	 breq .L84
 2078               	.LVL82:
 235:net_compat.c  **** 	{
 236:net_compat.c  **** 		et_push8( *(data++) );
 2079               	 .loc 2 236 0 is_stmt 1
 2080 03f0 F801      	 movw r30,r16
 2081 03f2 8191      	 ld r24,Z+
 2082               	.LVL83:
 2083 03f4 8F01      	 movw r16,r30
 2084               	.LVL84:
 2085 03f6 6983      	 std Y+1,r22
 2086 03f8 0E94 0000 	 call et_push8
 2087               	.LVL85:
 2088 03fc 6981      	 ldd r22,Y+1
 2089 03fe 00C0      	 rjmp .L82
 2090               	.LVL86:
 2091               	.L84:
 2092               	 
 237:net_compat.c  **** 	}
 238:net_compat.c  **** }
 2093               	 .loc 2 238 0
 2094 0400 0F90      	 pop __tmp_reg__
 2095 0402 DF91      	 pop r29
GAS LISTING  			page 89


 2096 0404 CF91      	 pop r28
 2097 0406 1F91      	 pop r17
 2098 0408 0F91      	 pop r16
 2099               	.LVL87:
 2100 040a 0895      	 ret
 2101               	 .cfi_endproc
 2102               	.LFE116:
 2104               	.global et_push16
 2106               	et_push16:
 2107               	.LFB117:
 239:net_compat.c  **** 
 240:net_compat.c  **** void et_push16( uint16_t p )
 241:net_compat.c  **** {
 2108               	 .loc 2 241 0
 2109               	 .cfi_startproc
 2110               	.LVL88:
 2111 040c CF93      	 push r28
 2112               	.LCFI42:
 2113               	 .cfi_def_cfa_offset 3
 2114               	 .cfi_offset 28,-2
 2115               	 
 2116               	 
 2117               	 
 2118               	.L__stack_usage =1
 2119 040e C82F      	 mov r28,r24
 242:net_compat.c  **** 	et_push8( p>>8 );
 2120               	 .loc 2 242 0
 2121 0410 892F      	 mov r24,r25
 2122               	.LVL89:
 2123 0412 0E94 0000 	 call et_push8
 2124               	.LVL90:
 243:net_compat.c  **** 	et_push8( p&0xff );
 2125               	 .loc 2 243 0
 2126 0416 8C2F      	 mov r24,r28
 2127               	 
 244:net_compat.c  **** }
 2128               	 .loc 2 244 0
 2129 0418 CF91      	 pop r28
 243:net_compat.c  **** 	et_push8( p&0xff );
 2130               	 .loc 2 243 0
 2131 041a 0C94 0000 	 jmp et_push8
 2132               	.LVL91:
 2133               	 .cfi_endproc
 2134               	.LFE117:
 2136               	.global et_init
 2138               	et_init:
 2139               	.LFB118:
 245:net_compat.c  **** 
 246:net_compat.c  **** 
 247:net_compat.c  **** //return 0 if OK, otherwise nonzero.
 248:net_compat.c  **** int8_t et_init( const unsigned char * macaddy )
 249:net_compat.c  **** {
 2140               	 .loc 2 249 0
 2141               	 .cfi_startproc
 2142               	.LVL92:
 2143               	 
 2144               	 
GAS LISTING  			page 90


 2145               	 
 2146               	.L__stack_usage =0
 2147 041e FC01      	 movw r30,r24
 250:net_compat.c  **** 	if( macaddy )
 2148               	 .loc 2 250 0
 2149 0420 0097      	 sbiw r24,0
 2150 0422 01F0      	 breq .L87
 251:net_compat.c  **** 	{
 252:net_compat.c  **** 		MyMAC[0] = macaddy[0];
 2151               	 .loc 2 252 0
 2152 0424 8081      	 ld r24,Z
 2153               	.LVL93:
 2154 0426 8093 0000 	 sts MyMAC,r24
 253:net_compat.c  **** 		MyMAC[1] = macaddy[1];
 2155               	 .loc 2 253 0
 2156 042a 8181      	 ldd r24,Z+1
 2157 042c 8093 0000 	 sts MyMAC+1,r24
 254:net_compat.c  **** 		MyMAC[2] = macaddy[2];
 2158               	 .loc 2 254 0
 2159 0430 8281      	 ldd r24,Z+2
 2160 0432 8093 0000 	 sts MyMAC+2,r24
 255:net_compat.c  **** 		MyMAC[3] = macaddy[3];
 2161               	 .loc 2 255 0
 2162 0436 8381      	 ldd r24,Z+3
 2163 0438 8093 0000 	 sts MyMAC+3,r24
 256:net_compat.c  **** 		MyMAC[4] = macaddy[4];
 2164               	 .loc 2 256 0
 2165 043c 8481      	 ldd r24,Z+4
 2166 043e 8093 0000 	 sts MyMAC+4,r24
 257:net_compat.c  **** 		MyMAC[5] = macaddy[5];
 2167               	 .loc 2 257 0
 2168 0442 8581      	 ldd r24,Z+5
 2169 0444 8093 0000 	 sts MyMAC+5,r24
 2170               	.L87:
 258:net_compat.c  **** 	}
 259:net_compat.c  **** 
 260:net_compat.c  **** 	return 0;
 261:net_compat.c  **** }
 2171               	 .loc 2 261 0
 2172 0448 80E0      	 ldi r24,0
 2173 044a 0895      	 ret
 2174               	 .cfi_endproc
 2175               	.LFE118:
 2177               	.global et_xmitpacket
 2179               	et_xmitpacket:
 2180               	.LFB119:
 262:net_compat.c  **** 
 263:net_compat.c  **** int8_t et_xmitpacket( uint16_t start, uint16_t len )
 264:net_compat.c  **** {
 2181               	 .loc 2 264 0
 2182               	 .cfi_startproc
 2183               	.LVL94:
 2184               	 
 2185               	 
 2186               	 
 2187               	.L__stack_usage =0
 265:net_compat.c  **** 	//If we're here, ETbuffer[start] points to the first byte (dst MAC address)
GAS LISTING  			page 91


 266:net_compat.c  **** 	//Gotta calculate the checksum.
 267:net_compat.c  **** 	if( FrameOutLength ) return 1;
 2188               	 .loc 2 267 0
 2189 044c 2091 0000 	 lds r18,FrameOutLength
 2190 0450 3091 0000 	 lds r19,FrameOutLength+1
 2191 0454 232B      	 or r18,r19
 2192 0456 01F4      	 brne .L93
 268:net_compat.c  **** 
 269:net_compat.c  **** 	FrameOutLength = len;
 2193               	 .loc 2 269 0
 2194 0458 7093 0000 	 sts FrameOutLength+1,r23
 2195 045c 6093 0000 	 sts FrameOutLength,r22
 270:net_compat.c  **** 	FrameOutStart = start;
 2196               	 .loc 2 270 0
 2197 0460 9093 0000 	 sts FrameOutStart+1,r25
 2198 0464 8093 0000 	 sts FrameOutStart,r24
 271:net_compat.c  **** 	return 0;
 2199               	 .loc 2 271 0
 2200 0468 80E0      	 ldi r24,0
 2201               	.LVL95:
 2202 046a 0895      	 ret
 2203               	.LVL96:
 2204               	.L93:
 267:net_compat.c  **** 	if( FrameOutLength ) return 1;
 2205               	 .loc 2 267 0
 2206 046c 81E0      	 ldi r24,lo8(1)
 2207               	.LVL97:
 272:net_compat.c  **** }
 2208               	 .loc 2 272 0
 2209 046e 0895      	 ret
 2210               	 .cfi_endproc
 2211               	.LFE119:
 2213               	.global et_recvpack
 2215               	et_recvpack:
 2216               	.LFB120:
 273:net_compat.c  **** 
 274:net_compat.c  **** unsigned short et_recvpack()
 275:net_compat.c  **** {
 2217               	 .loc 2 275 0
 2218               	 .cfi_startproc
 2219               	 
 2220               	 
 2221               	 
 2222               	.L__stack_usage =0
 276:net_compat.c  **** 	//Stub function.
 277:net_compat.c  **** 	return 0;
 278:net_compat.c  **** }
 2223               	 .loc 2 278 0
 2224 0470 80E0      	 ldi r24,0
 2225 0472 90E0      	 ldi r25,0
 2226 0474 0895      	 ret
 2227               	 .cfi_endproc
 2228               	.LFE120:
 2230               	.global et_start_checksum
 2232               	et_start_checksum:
 2233               	.LFB121:
 279:net_compat.c  **** 
GAS LISTING  			page 92


 280:net_compat.c  **** void et_start_checksum( uint16_t start, uint16_t len )
 281:net_compat.c  **** {
 2234               	 .loc 2 281 0
 2235               	 .cfi_startproc
 2236               	.LVL98:
 2237 0476 CF93      	 push r28
 2238               	.LCFI43:
 2239               	 .cfi_def_cfa_offset 3
 2240               	 .cfi_offset 28,-2
 2241 0478 DF93      	 push r29
 2242               	.LCFI44:
 2243               	 .cfi_def_cfa_offset 4
 2244               	 .cfi_offset 29,-3
 2245               	 
 2246               	 
 2247               	 
 2248               	.L__stack_usage =2
 2249 047a 9B01      	 movw r18,r22
 282:net_compat.c  **** 	uint16_t i;
 283:net_compat.c  **** 	const uint16_t * wptr = (uint16_t*)&ETbuffer[start];
 2250               	 .loc 2 283 0
 2251 047c 8050      	 subi r24,lo8(-(ETbuffer))
 2252 047e 9040      	 sbci r25,hi8(-(ETbuffer))
 2253               	.LVL99:
 2254 0480 DC01      	 movw r26,r24
 284:net_compat.c  **** 	uint32_t csum = 0;
 2255               	 .loc 2 284 0
 2256 0482 40E0      	 ldi r20,0
 2257 0484 50E0      	 ldi r21,0
 2258 0486 BA01      	 movw r22,r20
 285:net_compat.c  **** 	for (i=1;i<len;i+=2)
 2259               	 .loc 2 285 0
 2260 0488 E1E0      	 ldi r30,lo8(1)
 2261 048a F0E0      	 ldi r31,0
 2262               	.LVL100:
 2263               	.L96:
 2264               	 .loc 2 285 0 is_stmt 0 discriminator 1
 2265 048c E217      	 cp r30,r18
 2266 048e F307      	 cpc r31,r19
 2267 0490 00F4      	 brsh .L104
 2268               	.LVL101:
 286:net_compat.c  **** 	{
 287:net_compat.c  **** 		csum = csum + (uint32_t)(*(wptr++));	
 2269               	 .loc 2 287 0 is_stmt 1 discriminator 2
 2270 0492 CD91      	 ld r28,X+
 2271 0494 DD91      	 ld r29,X+
 2272 0496 4C0F      	 add r20,r28
 2273 0498 5D1F      	 adc r21,r29
 2274 049a 611D      	 adc r22,__zero_reg__
 2275 049c 711D      	 adc r23,__zero_reg__
 2276               	.LVL102:
 285:net_compat.c  **** 	for (i=1;i<len;i+=2)
 2277               	 .loc 2 285 0 discriminator 2
 2278 049e 3296      	 adiw r30,2
 2279               	.LVL103:
 2280 04a0 00C0      	 rjmp .L96
 2281               	.L104:
GAS LISTING  			page 93


 2282 04a2 F901      	 movw r30,r18
 2283               	.LVL104:
 2284 04a4 EE7F      	 andi r30,254
 2285 04a6 E80F      	 add r30,r24
 2286 04a8 F91F      	 adc r31,r25
 288:net_compat.c  **** 	}
 289:net_compat.c  **** 	if( len & 1 )  //See if there's an odd number of bytes?
 2287               	 .loc 2 289 0
 2288 04aa 20FF      	 sbrs r18,0
 2289 04ac 00C0      	 rjmp .L99
 2290               	.LVL105:
 2291               	.LBB116:
 290:net_compat.c  **** 	{
 291:net_compat.c  **** 		uint8_t * tt = (uint8_t*)wptr;
 292:net_compat.c  **** 		csum += *tt;
 2292               	 .loc 2 292 0
 2293 04ae 8081      	 ld r24,Z
 2294               	.LVL106:
 2295 04b0 480F      	 add r20,r24
 2296 04b2 511D      	 adc r21,__zero_reg__
 2297 04b4 611D      	 adc r22,__zero_reg__
 2298 04b6 711D      	 adc r23,__zero_reg__
 2299               	.LVL107:
 2300               	.L99:
 2301               	.LBE116:
 293:net_compat.c  **** 	}
 294:net_compat.c  **** 	while (csum>>16)
 2302               	 .loc 2 294 0 discriminator 1
 2303 04b8 CB01      	 movw r24,r22
 2304 04ba AA27      	 clr r26
 2305 04bc BB27      	 clr r27
 2306 04be 0097      	 sbiw r24,0
 2307 04c0 A105      	 cpc r26,__zero_reg__
 2308 04c2 B105      	 cpc r27,__zero_reg__
 2309 04c4 01F0      	 breq .L105
 295:net_compat.c  **** 		csum = (csum & 0xFFFF)+(csum >> 16);
 2310               	 .loc 2 295 0
 2311 04c6 6627      	 clr r22
 2312 04c8 7727      	 clr r23
 2313               	.LVL108:
 2314 04ca 480F      	 add r20,r24
 2315 04cc 591F      	 adc r21,r25
 2316 04ce 6A1F      	 adc r22,r26
 2317 04d0 7B1F      	 adc r23,r27
 2318               	.LVL109:
 2319 04d2 00C0      	 rjmp .L99
 2320               	.L105:
 296:net_compat.c  **** 	csum = (csum>>8) | ((csum&0xff)<<8);
 2321               	 .loc 2 296 0
 2322 04d4 BB27      	 clr r27
 2323 04d6 A72F      	 mov r26,r23
 2324 04d8 962F      	 mov r25,r22
 2325 04da 852F      	 mov r24,r21
 2326 04dc 762F      	 mov r23,r22
 2327 04de 652F      	 mov r22,r21
 2328 04e0 542F      	 mov r21,r20
 2329 04e2 4427      	 clr r20
GAS LISTING  			page 94


 2330               	.LVL110:
 2331 04e4 6627      	 clr r22
 2332 04e6 7727      	 clr r23
 2333               	.LVL111:
 2334 04e8 482B      	 or r20,r24
 2335 04ea 592B      	 or r21,r25
 2336 04ec 6A2B      	 or r22,r26
 2337 04ee 7B2B      	 or r23,r27
 2338               	.LVL112:
 297:net_compat.c  **** 	ETchecksum = ~csum;
 2339               	 .loc 2 297 0
 2340 04f0 4095      	 com r20
 2341 04f2 5095      	 com r21
 2342               	.LVL113:
 2343 04f4 5093 0000 	 sts ETchecksum+1,r21
 2344 04f8 4093 0000 	 sts ETchecksum,r20
 2345               	 
 298:net_compat.c  **** }
 2346               	 .loc 2 298 0
 2347 04fc DF91      	 pop r29
 2348 04fe CF91      	 pop r28
 2349 0500 0895      	 ret
 2350               	 .cfi_endproc
 2351               	.LFE121:
 2353               	.global et_write_ctrl_reg16
 2355               	et_write_ctrl_reg16:
 2356               	.LFB122:
 299:net_compat.c  **** 
 300:net_compat.c  **** 
 301:net_compat.c  **** 
 302:net_compat.c  **** #ifndef NOCOPY_MAC
 303:net_compat.c  **** void et_copy_memory( uint16_t to, uint16_t from, uint16_t length, uint16_t range_start, uint16_t ra
 304:net_compat.c  **** {
 305:net_compat.c  **** 	uint16_t i;
 306:net_compat.c  **** 	if( to == from )
 307:net_compat.c  **** 	{
 308:net_compat.c  **** 		return;
 309:net_compat.c  **** 	}
 310:net_compat.c  **** 	else if( to < from )
 311:net_compat.c  **** 	{
 312:net_compat.c  **** 		for( i = 0; i < length; i++ )
 313:net_compat.c  **** 		{
 314:net_compat.c  **** 			ETbuffer[to++] = ETbuffer[from++];
 315:net_compat.c  **** 		}
 316:net_compat.c  **** 	}
 317:net_compat.c  **** 	else
 318:net_compat.c  **** 	{
 319:net_compat.c  **** 		to += length;
 320:net_compat.c  **** 		from += length;
 321:net_compat.c  **** 		for( i = 0; i < length; i++ )
 322:net_compat.c  **** 		{
 323:net_compat.c  **** 			ETbuffer[to--] = ETbuffer[from--];
 324:net_compat.c  **** 		}
 325:net_compat.c  **** 	}
 326:net_compat.c  **** }
 327:net_compat.c  **** #endif
 328:net_compat.c  **** 
GAS LISTING  			page 95


 329:net_compat.c  **** void et_write_ctrl_reg16( uint8_t addy, uint16_t value )
 330:net_compat.c  **** {
 2357               	 .loc 2 330 0
 2358               	 .cfi_startproc
 2359               	.LVL114:
 2360               	 
 2361               	 
 2362               	 
 2363               	.L__stack_usage =0
 331:net_compat.c  **** 	switch (addy )
 2364               	 .loc 2 331 0
 2365 0502 8150      	 subi r24,lo8(-(-1))
 2366               	.LVL115:
 2367 0504 8230      	 cpi r24,lo8(2)
 2368 0506 00F4      	 brsh .L106
 332:net_compat.c  **** 	{
 333:net_compat.c  **** 		case EERXRDPTL:
 334:net_compat.c  **** 		case EEGPWRPTL:
 335:net_compat.c  **** 			ETsendplace = value;
 2369               	 .loc 2 335 0
 2370 0508 7093 0000 	 sts ETsendplace+1,r23
 2371 050c 6093 0000 	 sts ETsendplace,r22
 2372               	.L106:
 2373 0510 0895      	 ret
 2374               	 .cfi_endproc
 2375               	.LFE122:
 2377               	.global et_read_ctrl_reg16
 2379               	et_read_ctrl_reg16:
 2380               	.LFB123:
 336:net_compat.c  **** 		default:
 337:net_compat.c  **** 			break;
 338:net_compat.c  **** 	}
 339:net_compat.c  **** }
 340:net_compat.c  **** 
 341:net_compat.c  **** uint16_t et_read_ctrl_reg16( uint8_t addy )
 342:net_compat.c  **** {
 2381               	 .loc 2 342 0
 2382               	 .cfi_startproc
 2383               	.LVL116:
 2384               	 
 2385               	 
 2386               	 
 2387               	.L__stack_usage =0
 343:net_compat.c  **** 	switch( addy )
 2388               	 .loc 2 343 0
 2389 0512 8150      	 subi r24,lo8(-(-1))
 2390               	.LVL117:
 2391 0514 8230      	 cpi r24,lo8(2)
 2392 0516 00F4      	 brsh .L112
 344:net_compat.c  **** 	{
 345:net_compat.c  **** 		case EERXRDPTL:
 346:net_compat.c  **** 		case EEGPWRPTL:
 347:net_compat.c  **** 			return ETsendplace;
 2393               	 .loc 2 347 0
 2394 0518 8091 0000 	 lds r24,ETsendplace
 2395 051c 9091 0000 	 lds r25,ETsendplace+1
 2396               	.LVL118:
GAS LISTING  			page 96


 2397 0520 0895      	 ret
 2398               	.L112:
 348:net_compat.c  **** 		default:
 349:net_compat.c  **** 			return 0;
 2399               	 .loc 2 349 0
 2400 0522 80E0      	 ldi r24,0
 2401 0524 90E0      	 ldi r25,0
 350:net_compat.c  **** 	}
 351:net_compat.c  **** }
 2402               	 .loc 2 351 0
 2403 0526 0895      	 ret
 2404               	 .cfi_endproc
 2405               	.LFE123:
 2407               	 .comm FrameOutStart,2,1
 2408               	 .comm FrameOutLength,2,1
 2409               	 .comm FrameInRemain,2,1
 2410               	 .comm FrameInLength,2,1
 2411               	 .comm ETchecksum,2,1
 2412               	 .comm sendbaseaddress,2,1
 2413               	 .comm ETsendplace,2,1
 2414               	 .comm ETbuffer,256,1
 2415               	.Letext0:
 2416               	 .file 4 "/usr/lib/avr/include/stdint.h"
 2417               	 .file 5 "./LUFA/Drivers/USB/Core/AVR8/../StdRequestType.h"
 2418               	 .file 6 "./LUFA/Drivers/USB/Class/Device/../Common/RNDISClassCommon.h"
 2419               	 .file 7 "./LUFA/Drivers/USB/Core/USBTask.h"
 2420               	 .file 8 "myRNDIS.h"
 2421               	 .file 9 "./LUFA/Drivers/USB/Core/AVR8/../AVR8/EndpointStream_AVR8.h"
GAS LISTING  			page 97


DEFINED SYMBOLS
                            *ABS*:0000000000000000 net_compat.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:1059   .text:0000000000000000 et_push8
                            *COM*:0000000000000002 ETsendplace
                            *COM*:0000000000000100 ETbuffer
    {standard input}:1093   .text:0000000000000028 IsSendBufferFree
                            *COM*:0000000000000002 FrameOutLength
    {standard input}:1116   .text:000000000000003a crc32b
    {standard input}:1261   .text:00000000000000cc internet_checksum
    {standard input}:1379   .text:000000000000014e et_pop8
                            *COM*:0000000000000002 FrameInRemain
    {standard input}:1450   .text:0000000000000190 HandleUSB
                            *COM*:0000000000000002 FrameInLength
                            *COM*:0000000000000002 sendbaseaddress
    {standard input}:1721   .text:000000000000030c et_dumpbytes
    {standard input}:1758   .text:0000000000000320 et_pop16
    {standard input}:1797   .text:000000000000033e et_popblob
    {standard input}:1865   .text:0000000000000370 et_pushpgmstr
    {standard input}:1920   .text:000000000000038e et_pushpgmblob
    {standard input}:1996   .text:00000000000003c2 et_pushstr
    {standard input}:2038   .text:00000000000003da et_pushblob
    {standard input}:2106   .text:000000000000040c et_push16
    {standard input}:2138   .text:000000000000041e et_init
    {standard input}:2179   .text:000000000000044c et_xmitpacket
                            *COM*:0000000000000002 FrameOutStart
    {standard input}:2215   .text:0000000000000470 et_recvpack
    {standard input}:2232   .text:0000000000000476 et_start_checksum
                            *COM*:0000000000000002 ETchecksum
    {standard input}:2355   .text:0000000000000502 et_write_ctrl_reg16
    {standard input}:2379   .text:0000000000000512 et_read_ctrl_reg16
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
Endpoint_WaitUntilReady
ResponseReady
Endpoint_Write_Stream_LE
CurrRNDISState
Endpoint_Read_Stream_LE
et_receivecallback
MyMAC
__do_copy_data
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "iparpetc.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.289497c5fc10d8a0,"",@progbits
  10 0000 789C 7D51 	 .ascii "x\234}Q\273\016\3020\f\3649mA\024\225\016 \001#b\347\027\370"
  10      BB0E C230 
  10      0CF4 396D 
  10      4114 950E 
  10      2001 2362 
  11 0017 0F7E A143 	 .ascii "\017~\241C\247,,\031\020B|2\023I\234\272\017*2Dg\237\357l'LL"
  11      A72C 2C19 
  11      1042 7C32 
  11      1349 9CBA 
  11      0F2A 3244 
  12 0032 73E7 92D2 	 .ascii "s\347\222\322%\301\230L\212\nZ\002\306\003K\304|\247\217{\271"
  12      25C1 984C 
  12      8A0A 5A02 
  12      C603 4BC4 
  12      7CA7 8F7B 
  13 0047 BA01 B588 	 .ascii "\272\001\265\210\245|C\003\024S\016#\256\244\340%\341jT\312-"
  13      A57C 4303 
  13      1453 0E23 
  13      AEA4 E025 
  13      E16A 54CA 
  14 005c B82F CDFE 	 .ascii "\270/\315\376\267@D\206\025=\326\036j\244({\326Q\327Ik\331\252"
  14      B740 4486 
  14      153D D61E 
  14      6AA4 287B 
  14      D651 D749 
  15 0073 5AB0 DF03 	 .ascii "Z\260\337\003v\276\333\317$\311\325\247\302\305\266\313\340\252"
  15      76BE DBCF 
  15      24C9 D5A7 
  15      C2C5 B6CB 
  15      E0AA 
  16 0085 9C73 98D6 	 .ascii "\234s\230\326\221\355\331\267g7\241I\f\317\321]\360~\200O\003"
  16      91ED D9B7 
  16      6737 A149 
  16      0CCF D15D 
  16      F07E 804F 
  17 009a 5CA5 FE66 	 .ascii "\\\245\376f\033\027\033z+\n\303\350\324y\033s\242*\372\027pi"
  17      1B17 1B7A 
  17      2B0A C3E8 
  17      D479 1B73 
  17      A22A FA17 
  18 00b0 E79D 4A91 	 .ascii "\347\235J\221K\237yiXX\216\3678\244w\377\363\243Pt$\372\002\374"
  18      4B9F 7969 
  18      5858 8EF7 
  18      38A4 77FF 
  18      F3A3 5074 
  19 00c8 4F3F 53   	 .ascii "O?S"
  20               	 .text
  21               	 .section .gnu.lto_.inline.289497c5fc10d8a0,"",@progbits
GAS LISTING  			page 2


  22 0000 789C 6D52 	 .string "x\234mR\255N\304@\020\376f\272\331n\257\345\256$G\3701\247@ \260\300\275\002I_"
  22      AD4E C440 
  22      10FE 66BA 
  22      D96E AFE5 
  22      AE24 47F8 
  23 001f CB39 1C0F 	 .string "\3139\034\017B5A\234\300\342p .\301\241x\t\002\222 \320\314n\267\333ni\305t2?\337\317d\031\214\261\357\316\227s K\t\\\274\\@\257\027\256\232 \325\304D6\267A\251\365\242i\362\373L\331`\244j\240\220m\313\252\376>\351V\013\200\353\252\2564\362Lz\345\303M\350\031\344\207\344\344\264\025\026v\252+\267\344wEQy\372+\264|t\377\225\204I\232 \f\304?\207\321\217u5,I\240h\276\201\353\262)v?\021K\363FFX\376\343\017\0323\234?\313\361\370x\363\301c\006Z\303\303\277\223\351P(\266\245\266dU\264\364-9\274\316\306\016\316\036-\347\362\355V\307\234\376"
  23      4235 419C 
  23      C0E2 7020 
  23      2EC1 A178 
  23      0902 9220 
  24 00df F162 8FB0 	 .string "\361b\217\260\033\030\314\267\246\366\2617\247\004W\227tMI*\365U\310\334\343h\217&\217\244D\261)\215\2476\016\301\304y\023\205\336\370\253\032\0019\300\344\325\312\233>\375\244A<\376"
  24      1B18 CCB7 
  24      A6F6 B137 
  24      A704 5797 
  24      744D 492A 
  25 011b 64A2 2F68 	 .ascii "d\242/h"
  26               	 .text
  27               	 .section .gnu.lto_.pureconst.289497c5fc10d8a0,"",@progbits
  28 0000 789C 6362 	 .string "x\234cb`b\020g\200"
  28      6062 1067 
  28      8000 
  29 000a 6E06 0966 	 .string "n\006\tf\t\026\t6\t\016\tn\013>\t~\tQ\tI\t)\013"
  29      0916 0936 
  29      090E 096E 
  29      0B3E 097E 
  29      0951 0949 
  30 0022 153B 01F4 	 .ascii "\025;\001\364"
  31               	 .text
  32               	 .section .gnu.lto_et_push8.289497c5fc10d8a0,"",@progbits
  33 0000 789C 8D50 	 .string "x\234\215P\317KBA\020\236\331\335\367\220H\360/\260\020:E\nE\347N\035\272\007\006\005!j\204\274\354\201\336:8O\r\204.\322)\362$\"t\b\362\324)\312S\024Q\020x\363\342\251?\242\3136\373~XI\207\006v\277\335\235\371\276of\005\b\230\215U^c\004XfD\013P\264\337"
  33      CF4B 4241 
  33      109E D9DD 
  33      F790 48F0 
  33      2FB0 103A 
  34 0060 BC98 1072 	 .string "\274\230\020r\224\001\232SwI\240y\211*xV\210\346"
  34      9401 9A53 
  34      7749 A079 
  34      892A 7856 
  34      88E6 00
  35 0073 0835 2115 	 .ascii "\b5!\025\326\366\320h\210\024t\211\316'\375\316\275u:\240\026"
  35      D6F6 D068 
  35      8814 7489 
  35      CE27 FDCE 
  35      BD75 3AA0 
  36 0088 695D 7390 	 .ascii "i]s\220\315\022\b\007\b\273\350 &|\0203\r\004D\032?\326\227."
  36      CD12 0807 
  36      08BB E820 
  36      267C 1033 
  36      0D04 441A 
  37 00a0 A839 D47A 	 .ascii "\2509\324z\303\347%\377\344\271\370M\274\021\303\211\326WgvL"
  37      C3E7 25FF 
  37      E4B9 F84D 
  37      BC11 C389 
  37      D657 6776 
  38 00b5 4201 BB98 	 .ascii "B\001\273\230\002\305\330c\264\321EShA\223\250\275\bF\211#\313"
  38      02C5 D863 
  38      B4D1 4553 
GAS LISTING  			page 3


  38      6841 93A8 
  38      BD08 4689 
  39 00cb BB69 7D07 	 .ascii "\273i}\007\205A\371\n\365\347\366B\001\373<t\te\007.=\242\004"
  39      8541 F90A 
  39      F5E7 F642 
  39      01FB 3C74 
  39      0965 072E 
  40 00e2 BB9F C027 	 .ascii "\273\237\300'O\300'\031\370\031{\031\272>A\363\303{\300)\313"
  40      4FC0 2719 
  40      F819 7B19 
  40      BA3E 41F3 
  40      C37B C029 
  41 00f7 E440 FF68 	 .ascii "\344@\377h\213\345%\2142\254\336h5n\343Q\241\212jM);o\005\211"
  41      8BE5 258C 
  41      32AC DE68 
  41      356E E351 
  41      A18A 6A4D 
  42 0110 FF98 32D9 	 .ascii "\377\2302\331\247\274\f*\001i\005\256\211cl;\250\246\002\326"
  42      A7BC 0C2A 
  42      0169 05AE 
  42      8963 6C3B 
  42      A8A6 02D6 
  43 0124 54C0 7651 	 .ascii "T\300vQ\204\002v(\020u_\n_\270I\345\377\301;x\303p\230(\262\374"
  43      8402 7628 
  43      1075 5F0A 
  43      5FB8 49E5 
  43      FFC1 3B78 
  44 013e 779C 3212 	 .ascii "w\2342\022\361r\261\272\237?>rs\325\364!\3047\267+\305r\301u"
  44      F172 B1BA 
  44      9F3F 3E72 
  44      73D5 F421 
  44      C437 B72B 
  45 0156 72F9 627A 	 .ascii "r\371bz\355\327m\375\013D\232~m"
  45      EDD7 6DFD 
  45      0B44 9A7E 
  45      6D
  46               	 .text
  47               	 .section .gnu.lto_et_alter_word.289497c5fc10d8a0,"",@progbits
  48 0000 789C 8D50 	 .ascii "x\234\215P\273J\003A\024=\347N\326]\204\020[;\177@\377\303/H"
  48      BB4A 0341 
  48      143D E74E 
  48      D65D 8410 
  48      5B3B 7F40 
  49 0018 4041 C407 	 .ascii "@A\304\007\262\254\272E:\213\314f\202\244L\255\225\255H\254\264"
  49      B2AC BA45 
  49      3A8B CC66 
  49      82A4 4CAD 
  49      95AD 48AC 
  50 002d 1084 5476 	 .ascii "\020\204Tv\021\374\003\261\265\267\260\211\367\356\272[h\223"
  50      11FC 03B1 
  50      B5B7 B089 
  50      F7EE BA5B 
  50      6893 
  51 003f 0B73 9FE7 	 .ascii "\013s\237\347\23633\002\301_[\327sL\240\243\221\016\224\311+"
  51      9E33 3302 
  51      C15F 5BD7 
  51      734C A0A3 
GAS LISTING  			page 4


  51      910E 94C9 
  52 0054 5024 425A 	 .ascii "P$BZ\002b \034\354\262\304\336\313\354}\261\230>^\276\024\344"
  52      0262 201C 
  52      ECB2 C4DE 
  52      CBEC 7DB1 
  52      983E 5EBE 
  53 006a 2A99 5309 	 .ascii "*\231S\t3\302\251c\244%c+\023+\025\036a\344\375d\243\342\007"
  53      33C2 A963 
  53      A425 632B 
  53      132B 151E 
  53      61E4 FD64 
  54 0081 BAEA 8DB3 	 .ascii "\272\352\215\263G\261\350\346\b\323\360\325>\344\r#\244\224\224"
  54      47B1 E8E6 
  54      08D3 F0D5 
  54      3EE4 0D23 
  54      A494 94
  55 0094 DC61 4649 	 .ascii "\334aFI\024;\307\3603|43\247\343\262\271]u6q\347\325\236WT\350"
  55      143B C7F0 
  55      337C 3433 
  55      A7E3 B2B9 
  55      5D75 3671 
  56 00ae 1A57 85F7 	 .ascii "\032W\205\367k\031\335\005\276\375\330\262Vnp\030[\253\274x\252"
  56      6B19 DD05 
  56      BEFD D8B2 
  56      566E 7018 
  56      5BAB BC78 
  57 00c3 3BF8 CD9C 	 .ascii ";\370\315\234\021\205q\270\355\324\354\261\216\r\033\261V~jf"
  57      1185 71B8 
  57      EDD4 ECB1 
  57      8E0D 1BB1 
  57      567E 6A66 
  58 00d7 496A 4FF9 	 .ascii "IjO\371\247\374\020/\255\0347\312\372\2607\0243VL\265uU@\277"
  58      A7FC 102F 
  58      AD1C 37CA 
  58      FAB0 3714 
  58      3356 4CB5 
  59 00ef C3D6 DA67 	 .ascii "\303\326\332gG\375\275\203\363\323|\277\277u\202\037z\235UL"
  59      47FD BD83 
  59      F3D3 7CBF 
  59      BF75 821F 
  59      7A9D 554C 
  60               	 .text
  61               	 .section .gnu.lto_et_endsend.289497c5fc10d8a0,"",@progbits
  62 0000 789C 8590 	 .ascii "x\234\205\220\277J\303P\024\306\277\357\346\217]\224\342\246"
  62      BF4A C350 
  62      14C6 BFEF 
  62      E68F 5D94 
  62      E2A6 
  63 0012 8BD2 0728 	 .ascii "\213\322\007(t\323\007pp\027*(HlR\244\304\032L\267\016\275\361"
  63      74D3 0770 
  63      7017 2A28 
  63      486C 52A4 
  63      C41A 4CB7 
  64 0029 0F58 A720 	 .ascii "\017X\247 \016\242\203\024q\326\301\007\310\352\240\342\033t"
  64      0EA2 8314 
  64      71D6 C107 
  64      C8EA A0E2 
GAS LISTING  			page 5


  64      1B74 
  65 003b F125 1C8C 	 .ascii "\361%\034\214\347\366O\204.\036H\276s\303\367;\337\311UP\230"
  65      E7F6 4F84 
  65      2E1E 48BE 
  65      73C3 F73B 
  65      DFC9 5550 
  66 0050 AD25 79BA 	 .ascii "\255%y\272\004j\242\264@\225\276\003II\221\246\001\321S\354\355"
  66      046A A2B4 
  66      4095 BE03 
  66      4949 91A6 
  66      01D1 53EC 
  67 0065 D258 5505 	 .ascii "\322XU\005\003\255\257\206_\367/\316\371\263\276\320y\336\013"
  67      03AD AF86 
  67      5FF7 2FCE 
  67      F9B3 BED0 
  67      79DE 0B
  68 0078 2933 CB44 	 .ascii ")3\313D\223\330aH\226G\242fr\306\240\276\274\316\230\352\237"
  68      93D8 6148 
  68      9647 A266 
  68      72C6 A0BE 
  68      BCCE 98EA 
  69 008d 3C17 8BA5 	 .ascii "<\027\213\245\260\362\037\366\244\262a\236\337\364]W\301\347"
  69      B0F2 1FF6 
  69      A4B2 619E 
  69      DFF4 5D57 
  69      C1E7 
  70 009f 8015 58A2 	 .ascii "\200\025X\242\017\2426d\2028\034\234i\235\256\302\f\222\252\313"
  70      0FA2 3664 
  70      8238 1C9C 
  70      699D AEC2 
  70      0C92 AACB 
  71 00b3 DBAC BD4D 	 .ascii "\333\254\275Me\324z\303\311k\272\354\363\221\016ZTw\270M\264"
  71      65D4 7AC3 
  71      C96B BAEC 
  71      F391 0E5A 
  71      5477 B84D 
  72 00c8 2ECB CE5D 	 .ascii ".\313\316]|\313\376\322\331\321\b4\351\366$U\240\315)b\025\210"
  72      7CCB FED2 
  72      D9D1 0834 
  72      E9F6 2455 
  72      A0CD 2962 
  73 00de 5320 6E44 	 .ascii "S nDN\020\267@N\373\326\224\261%\251e\266\373\2003\376\206\277"
  73      4E10 B740 
  73      4EFB D694 
  73      B125 A965 
  73      B6FB 8033 
  74 00f5 BCB9 E608 	 .ascii "\274\271\346\b\206\231-\326\220%\340\023I\306\251s\\uq\311\017"
  74      8699 2DD6 
  74      9025 E013 
  74      49C6 A973 
  74      5C75 71C9 
  75 010a 98FB 986F 	 .ascii "\230\373\230o\007\235\275\306\321a\344u\252\007X\330\330\212"
  75      079D BDC6 
  75      D161 E475 
  75      AA07 58D8 
  75      D88A 
  76 011c 83B6 1F85 	 .ascii "\203\266\037\205^#\250\326\326\026\315a\337\213\003\317\367\217"
GAS LISTING  			page 6


  76      5E23 A8D6 
  76      D616 CD61 
  76      DF8B 03CF 
  76      F78F 
  77 012e 8338 AED6 	 .ascii "\2038\256\326\326\177\001\027cdo"
  77      D67F 0117 
  77      6364 6F
  78               	 .text
  79               	 .section .gnu.lto_NetGetScratch.289497c5fc10d8a0,"",@progbits
  80 0000 789C 8D50 	 .string "x\234\215P\261J\003A\020\235\331\335K.\227 \n\"6\001Mc\027B\376\302\0370\001m\302\305\240\341\212\020\323Yd\223\030\bbq\210\205\230*\210\205 hii@\202\n\021\345\032\313tv~\200\205\347\354^rF\261\310\301\316\314\315\333\367\346\3152`\360\367\313\322\331\240\366*e4"
  80      B14A 0341 
  80      109D D9DD 
  80      4B2E 9720 
  80      0A22 3601 
  81 005e 99FB 0CD0 	 .string "\231\373\f\3200\031\343\203$HK<e@&8\212\240-\020U\001\bu\306\005\326\267Pi\360\024\364\244<\036\265\275#\321\276\221\035\351\373u\007i\330\034B\ta\023\035DS'\206\277\247\007D\3319\351\243+\277|\0375m\371_Ze\212K\3655\273\033\371\376\325\345\313Z\234C\021{\230\002A\371\234rt\374o\202\203<\246\202EA\020\317\200\003)\335\025-U\322z9\212j\245<2\225\371\020\232\217\247^\242\210\027\364\032e\344]8kH9\357\240\261\017\237\264\032U\221\300\2112\026\031\373\031B\253\303'\034A4\005\032\250\221\346z"
  81      3019 E383 
  81      2448 4B3C 
  81      6540 2638 
  81      8AA0 2D10 
  82 010d CCA2 5456 	 .ascii "\314\242TV.\037\340\376\275\337]\b\345\024\f\323\017\227G\016"
  82      2E1F E0FE 
  82      BDDF 5D08 
  82      E514 0CD3 
  82      0F97 470E 
  83 0121 83A4 B27A 	 .ascii "\203\244\262z\353.\315.\256=\375h\210p\3377oq2,:\353\276\315"
  83      EB2E CD2E 
  83      AE3D FD68 
  83      8870 DF37 
  83      6F71 322C 
  84 0139 8F70 5F93 	 .ascii "\217p_\223h\372\t\016\303V\214\272\352>\227l|\273eM0\213`\200"
  84      68FA 090E 
  84      C356 8CBA 
  84      EA3E 976C 
  84      7CBB 654D 
  85 0151 57C0 B011 	 .ascii "W\300\260\021h\346\020\225#E\210\357V\n\325\312v\315N\333\020"
  85      68E6 1095 
  85      2345 88EF 
  85      560A D5CA 
  85      76CD 4EDB 
  86 0166 DBB3 AB85 	 .ascii "\333\263\253\205\232\275\223\316\204U\366\033\342#\221\351"
  86      9ABD 93CE 
  86      8455 F61B 
  86      E223 91E9 
  87               	 .text
  88               	 .section .gnu.lto_send_etherlink_header.289497c5fc10d8a0,"",@progbits
  89 0000 789C 6362 	 .string "x\234cb`b@\007\222@\374\017\210y\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\373qi\301iF\0266\026\306\002\2600+CKC\303\004\005\006\206407\034H\202\264F02\201h\346\363\f\255\017\366z\2460.dd\005\312V3\374j\350h\020\310a\004\252\206\030\n\022\341\310a\004\032\306\bU\024\315\230\303\310\304\306\220\003t\016\003P\367\202\023\234\304\350f\302\252\273e\301)L\335,i\214\220\200\310bd\311\001I]dh|pZ\023\246\016\002\302\2016"
  89      6062 4007 
  89      9240 FC0F 
  89      8879 8198 
  89      9199 8191 
  90 00ae DD0F 52C8 	 .string "\335\017R\310\235Y\220XT\220Z\222\254\227\314"
  90      9D59 9058 
  90      5490 5A92 
  90      AC97 CC00 
  91 00be 00        	 .string ""
  92 00bf 55CC 4146 	 .ascii "U\314AF"
  93               	 .text
GAS LISTING  			page 7


  94               	 .section .gnu.lto_HandleArp.289497c5fc10d8a0,"",@progbits
  95 0000 789C 8D55 	 .string "x\234\215U[l\024U\030\376\3773\227\235\275\225\265\335\255\013x\013<\340\203\326\020\360\302\203\341\315\304\007\237\251\221\244\331\354\005\332\354v'\355>Ibg\331]SM\213\215\251im1\024\r1F\r&F!\224\300B0\320T\251F\023\254\215a}Pb"
  95      5B6C 1455 
  95      18FE FF33 
  95      979D BD95 
  95      B5DD AD0B 
  96 0054 A94F 144D 	 .string "\251O\024M\\\377s\316\314\354\364\276\223\354\2349\347|\337\367_\316\371\377e\300`\3453H\277}~\200Wi\304\020 \033\271\016P4\030\013\234\177\036,C\371\251\235\277\321'\227U\246M\275"
  96      5CFF 73CE 
  96      CCEC F4BE 
  96      93EC 9C39 
  96      E77C DFF7 
  97 0093 5640 5F8C 	 .string "V@_\214\201\025\322P\227\313\272\334\277d\370\230:t\025\b`\224}\0040X\340\301\2134\363\217Eh\346\307\240\204\007\234\217 \"\377"
  97      8115 D250 
  97      97CB BADC 
  97      BF64 F898 
  97      3A74 1508 
  98 00c0 8401 A6A8 	 .ascii "\204\001\246\250\232\3563\374\201 \016\034D\356\231\266\003N"
  98      9AEE 33FC 
  98      8120 0E1C 
  98      44EE 99B6 
  98      034E 
  99 00d2 5AD6 BBB5 	 .ascii "Z\326\273\265\312\205\005Vy\273f\215X\377\325\0070\213\024D\013"
  99      CA85 0556 
  99      79BB 668D 
  99      58FF D507 
  99      308B 1444 
 100 00e7 4206 E135 	 .ascii "B\006\3415\232`D\flE`\222"
 100      9A60 440C 
 100      6C45 6092 
 101 00f3 5ABD B930 	 .string "Z\275\2710\246\235\372\302\032\264\352\365\001Al[\223h\342rfu\244Z\237\030E\313e*\f\342\r\246%G\026Y\323\346{\013\243\232\345\265\271\247Ig/L\262q\253\\\255\327\367gQe\260\257A3$\r\227\323N\263j\255^\277s\243r\371\215'\021R\370\t\356 kr\364\323\3701\215!\310\242\026\246\227\036\241\225\223\264\322J\023\265\315\236D\371$F\223\217h\022\347\330]\374\305\223\017e\313\032y\"\205\247hGj\331n\216M\216\252\215\370\310\321\375\2339\n|\237\236\003\364>\021\207Nd4(sP\252]\177%\205\237\n{G\340\037\222\214d\321\227AI\317\222\032p\320\334\260.Q=\350_\0076\003LB\244\247\004\224\324\237\233\321\237\277\353\352\207\326\325?Z\335\352X\370\214,\024\240\237b'\202\243\017\337Aiz'\220\306.Z\345Y\320\352(\226\217\376U\272\3675s,\204\t"
 101      A69D FAC2 
 101      1AB4 EAF5 
 101      0141 6C5B 
 101      9368 E272 
 102 01f4 F02D 28EE 	 .ascii "\360-(\356\3020\f\025\313V\365\354\343Y\3565\300!\333\260\275"
 102      C230 0C15 
 102      CB56 F5EC 
 102      E359 EE35 
 102      C021 DBB0 
 103 0209 7E6E 3BAD 	 .ascii "~n;\255s=\025\305\246\367\356t\242\002e\2372K\225$\345\304\366"
 103      733D 15C5 
 103      A6F7 EE74 
 103      A202 659F 
 103      324B 9524 
 104 0220 1C54 6A7F 	 .ascii "\034Tj\177\346\334\003\344\327\001\300\365\323\223\212@\306V"
 104      E6DC 03E4 
 104      D701 C0F5 
 104      D393 8A40 
 104      C656 
 105 0232 3B02 AF67 	 .ascii ";\002\257g1\350\234\365W\034\310-\206\"\024}XD_\273\375\271."
 105      31E8 9CF5 
 105      571C C82D 
 105      8622 147D 
 105      5844 5FBB 
 106 0249 77A4 A0EB 	 .ascii "w\244\240\353\020\305wvi\372G\224\233\2230Q\264\270t\303H\213"
 106      10C5 7776 
 106      69FA 4794 
GAS LISTING  			page 8


 106      9B93 3051 
 106      B4B8 74C3 
 107 025f 2C2E 4E68 	 .ascii ",.Nh\001\347\313\023\201\n\3240\304eX\032\266M\364`\253K\337"
 107      01E7 CB13 
 107      810A D430 
 107      C465 581A 
 107      B64D F460 
 108 0276 92A1 18E5 	 .ascii "\222\241\030\3459D\204\265\231\305\200\203jk\306\234 \035t(\321"
 108      3944 84B5 
 108      99C5 8083 
 108      6A6B C69C 
 108      201D 7428 
 109 028b A7E1 29F2 	 .ascii "\247\341)\362\334%>\344\022[Ma\210\023[\005\215\364]7\257A\371"
 109      DC25 3EE4 
 109      125B 4D61 
 109      8813 5B05 
 109      8DF4 5D37 
 110 02a2 4E31 EC7A 	 .ascii "N1\354zG:\336C\320`|\217\302\223\364\340\356\352$5`\272\210\224"
 110      473A DE43 
 110      D060 7C8F 
 110      C293 F4E0 
 110      EEEA 2435 
 111 02ba 7006 D880 	 .ascii "p\006\330\200\036~\324tq\006K\027\317<\343\250\307\310\260\310"
 111      1E7E D474 
 111      7106 4B17 
 111      CF3C E3A8 
 111      C7C8 B0C8 
 112 02ce 919D DE97 	 .ascii "\221\235\336\227\233O-\221\3710\017\330\203LE\333\276v\374f\216"
 112      9B4F 2D91 
 112      F930 0FD8 
 112      834C 45DB 
 112      BE76 FC66 
 113 02e3 DBF7 01F5 	 .ascii "\333\367\001\365\332\025\366\231\314\351\322\364,s\354G\232\313"
 113      DA15 F699 
 113      CCE9 D2F4 
 113      2C73 EC47 
 113      9ACB 
 114 02f5 2AA5 E48F 	 .ascii "*\245\344\217\242\317%\t\217\0257)\363\300\354+\242\234\3775"
 114      A2CF 2509 
 114      8F15 3729 
 114      F3C0 EC2B 
 114      A29C FF35 
 115 0309 4D71 EAC8 	 .ascii "Mq\352\310]0\370u\275\006Wn]\272\277\340\032d\313\362$s\345\207"
 115      5D30 F875 
 115      BD06 576E 
 115      5DBA BFE0 
 115      1A64 CBF2 
 116 0321 7328 2EC5 	 .ascii "s(.\305[\367\\\033qoq\252\366\245h\263\213\237C\354\006\365\357"
 116      5BF7 5C1B 
 116      716F 71AA 
 116      F6A5 68B3 
 116      8B9F 43EC 
 117 0338 2FC7 3C0D 	 .ascii "/\307<\r8\312\340\245\315\0320i\213<\314\036\277\365\375\231"
 117      38CA E0A5 
 117      CD1A 3069 
 117      8B3C CC1E 
 117      BFF5 FD99 
GAS LISTING  			page 9


 118 034c 67ED CA71 	 .ascii "g\355\312qz`u\366\312}\252\326o\3542\342\2062\262\224\326N\224"
 118      7A60 75F6 
 118      CA7D AAD6 
 118      6FEC 32E2 
 118      8632 B294 
 119 0363 BAE2 48A4 	 .ascii "\272\342H\244\364\fI\337\330\235\302\253\336\243\214\272\274"
 119      F40C 49DF 
 119      D89D C2AB 
 119      DEA3 8CBA 
 119      BC
 120 0374 9829 2439 	 .ascii "\230)$9/\326\340\315Ay\361\303\277\177\263\213\313S\271\355\031"
 120      2FD6 E0CD 
 120      4179 F1C3 
 120      BF7F B38B 
 120      CB53 B9ED 
 121 0389 BA4D 6E31 	 .ascii "\272Mn1\275\311\353\364a\001\257\r\345W\201\343\031:z\007\034"
 121      BDC9 EBF4 
 121      6101 AF0D 
 121      E557 81E3 
 121      193A 7A07 
 122 039e 45C2 6E15 	 .ascii "E\302n\025\330\251\341-\353c\251\205\272\270c\033\340\204f9\324"
 122      D8A9 E12D 
 122      EB63 A985 
 122      BAB8 631B 
 122      E084 6639 
 123 03b3 107D 6733 	 .ascii "\020}g30s\260\225\251\367Wc\267ex\277\265W\214,n7Q\367\266$\235"
 123      3073 B095 
 123      A9F7 5763 
 123      B765 78BF 
 123      B557 8C2C 
 124 03ce D88F 48F6 	 .ascii "\330\217H\366\304\346l^\324^\266\332`On\310^\273\037\006\034"
 124      C4E6 6C5E 
 124      D45E B6DA 
 124      604F 6EC8 
 124      5EBB 1F06 
 125 03e3 7AA9 F6C1 	 .ascii "z\251\366\301i\337*\376\243\031\331\301\t\365\030?\364\313\267"
 125      69DF 2AFE 
 125      A319 D9C1 
 125      09F5 183F 
 125      F4CB B7
 126 03f6 DD7F 25AE 	 .ascii "\335\177%\256\264\027\276\264\006I\306\251\222N\f\300\357\355"
 126      B417 BEB4 
 126      0649 C6A9 
 126      924E 0CC0 
 126      EFED 
 127 0408 A27B DB5D 	 .ascii "\242{\333]\237S\306/\356\334\230\024\344\177\236?\b\222\363\034"
 127      9F53 C62F 
 127      EEDC 9814 
 127      E47F 9E3F 
 127      0892 F31C 
 128 041c 20F2 8938 	 .ascii " \362\2118\277\324\301n3\321g\246\013\311\216$\250\335\035\273"
 128      BFD4 C16E 
 128      33D1 67A6 
 128      0BC9 8E24 
 128      A8DD 1DBB 
 129 0430 F7F2 D773 	 .ascii "\367\362\327s\333\372\323\275\251t_.\221\354\3526\273\022\275"
 129      DBFA D3BD 
GAS LISTING  			page 10


 129      A974 5F2E 
 129      91EC EA36 
 129      BB12 BD
 130 0443 A9AE 42A2 	 .ascii "\251\256B\242\357P\272@\013\232\331\227/\344\265\\\242\220<\254"
 130      EF50 BA40 
 130      0B9A D997 
 130      2FE4 B55C 
 130      A290 3CAC 
 131 0457 E7CD 643E 	 .ascii "\347\315d>\225\326\372i\267\020\356M\027\272\222\371\234\231"
 131      95D6 FA69 
 131      B710 EE4D 
 131      17BA 92F9 
 131      9C99 
 132 0469 2874 1C86 	 .ascii "(t\034\206\377\001\276\330A\363"
 132      FF01 BED8 
 132      41F3 
 133               	 .text
 134               	 .section .gnu.lto_send_ip_header.289497c5fc10d8a0,"",@progbits
 135 0000 789C 6362 	 .string "x\234cb`b@\007\222@\314\b\024\346\005\321\314@\346\204s\f\f\215\034L\214\214 \006\003#C=\023c}\f#X\355z\246\003\017\376\377_7\347\362\202\277\214,|\314\214\005\214\f\034@\202\221\007H\200Lfehih\230\240\300\300\220\006V\037\016$A\206D"
 135      6062 4007 
 135      9240 CC08 
 135      14E6 05D1 
 135      CC40 E684 
 136 0058 2581 34F3 	 .string "%\2014\363y\206\226\007/<S\030\0272\262\002e\253\031~5t4\b\3440\002UC\214\217f\314adl\350bd\310\001\231\006T\275\340%'n\325Y\214\314pu\257\361\250\003\233\312\2000\363\r!\265\r\rH.x\207\251\2329\215\221\t\256\232\305\001\250\226\025\242\366=\036\265Y\214\034pu?\211vm\353\202\337\230j\331\322\200\361\304"
 136      7986 9607 
 136      2F3C 5318 
 136      1732 B202 
 136      65AB 197E 
 137 00c7 1501 9ACA 	 .string "\025\001\232\312^\300\310\fU\004v\021\013P7\007D\367\037<\272\263\030y\220\225_dh|\360W\023\246\034\002\302\201N\001F\034\310\007\334\231\005\211E\005\251%\311z\311\f"
 137      5EC0 C80C 
 137      5504 7611 
 137      0B50 3707 
 137      44F7 1F3C 
 138 0100 15B1 76FA 	 .ascii "\025\261v\372"
 139               	 .text
 140               	 .section .gnu.lto_HandleICMP.289497c5fc10d8a0,"",@progbits
 141 0000 789C 9D55 	 .string "x\234\235Uoh[U\024?\347\375\315\2225k\353\332\325uh\267\025D\320j\213\373\352\237\217\352\007\277\271\301\304\022\232<\227.m\236m&N\221\336\264\t\f\333\316:\332\342\332M;e\352(\243\023\205\215\241,\205\r\327v\265l\037*:\301\210\"B\007\n\"\302\220=\317\275\367\275\2274II\331\203\346\334\236{~\347w\316\271\347\334\253\200\002\245\337\313\364\267\030\004\370\230$\006"
 141      6F68 5B55 
 141      143F E7FD 
 141      CD92 356B 
 141      EBDA D575 
 142 007c 95B1 EF00 	 .string "\225\261\357"
 143 0080 D201 4531 	 .string "\322\001E1W\237"
 143      579F 00
 144 0087 1650 2F3F 	 .ascii "\026P/?\304\177Q\227jM.\346\003\272\242\215|\013\300\202F\306"
 144      C47F 5197 
 144      6A4D 2EE6 
 144      03BA A28D 
 144      7C0B C082 
 145 009d 04B6 D540 	 .ascii "\004\266\325@S\032\230\210|\001\b\003\212\252\351\206\211\003"
 145      531A 9888 
 145      7C01 0803 
 145      8AAA E986 
 145      8903 
 146 00af AF20 E731 	 .ascii "\257 \3471\367\300\031\306N\344\317\376zK\317\276\233gc\354\236"
 146      F7C0 19C6 
 146      4EE4 CFFE 
GAS LISTING  			page 11


 146      7A4B CFBE 
 146      9B67 63EC 
 147 00c4 3380 09A4 	 .ascii "3\200\t\244\220\302\b\026\302A\372\007k\205PJ\302\224\320\334"
 147      90C2 0816 
 147      C241 FA07 
 147      6B85 504A 
 147      C294 D0DC 
 148 00d8 97AB 2366 	 .ascii "\227\253#f\366\002;\306\034g \201\252\002\273\n\300\026\t\324"
 148      F602 3BC6 
 148      1C67 2081 
 148      AA02 BB0A 
 148      C016 09D4 
 149 00ec 2A01 D9F1 	 .ascii "*\001\331\361\361y\344|\016\n\330#\025a6\226\021\336\376qt=a"
 149      F179 E47C 
 149      0E0A D823 
 149      1561 3696 
 149      11DE FE71 
 150 0103 C7FD 113E 	 .ascii "\307\375\021>\275\001!\226\022\236\234\034\327\230O\250)\360"
 150      BD01 2196 
 150      129E 9C1C 
 150      D798 4FA8 
 150      29F0 
 151 0115 4201 1990 	 .ascii "B\001\031\220H\254D\230\233^\035\327\013@\252\351K\325j:\247"
 151      48AC 4498 
 151      9B5E 1DD7 
 151      0B40 AAE9 
 151      4BD5 6A3A 
 152 012a E4F2 8E73 	 .ascii "\344\362\216s\352\213\354\255\303T\217(\236\307=\240\223<C\322"
 152      EA8B ECAD 
 152      C354 8F28 
 152      9EC7 3DA0 
 152      933C 43D2 
 153 013e 20F9 0949 	 .ascii " \371\tI\223\344Y\222A\222\263$\303\220@\275\3165jpA\215\256"
 153      93E4 5992 
 153      4192 B324 
 153      C390 40BD 
 153      CE35 6A70 
 154 0155 6CA2 4DAD 	 .ascii "l\242M\255\231[\264\220\3463\322\354&y\216\344^R\032\255\374"
 154      995B B490 
 154      E633 D2EC 
 154      2679 8EE4 
 154      5E52 1AAD 
 155 016a 8778 75C8 	 .ascii "\207xu\31006\326\"\342\036\314M\224\306}pS\2750\230\233\\U>`"
 155      3036 D622 
 155      E21E CC4D 
 155      94C6 7D70 
 155      53BD 3098 
 156 0183 999C E33C 	 .ascii "\231\234\343<#`\257V\203\311\004d\244\256\213\017\327\273\210"
 156      2360 AF56 
 156      83C9 0464 
 156      A4AE 8B0F 
 156      D7BB 88
 157 0196 6D8E 994D 	 .ascii "m\216\231MO0\206\351\031\366\237\343\250\002\370f5 \360}\372"
 157      4F30 86E9 
 157      19F6 9FE3 
 157      A802 F866 
 157      3520 F07D 
GAS LISTING  			page 12


 158 01ab F6D3 6FB6 	 .ascii "\366\323o\266\036\016\240BB]\206\301\205K4\fQ\234C\035\272Q\237"
 158      1E0E A042 
 158      425D 86C1 
 158      854B 340C 
 158      519C 431D 
 159 01c2 86A9 3463 	 .ascii "\206\2514c\265\344\363m\270K%\241\225i#\367\305\235\232\256\253"
 159      B5E4 F36D 
 159      B84B 25A1 
 159      9569 23F7 
 159      C59D 9AAE 
 160 01d7 0518 CC3D 	 .ascii "\005\030\314=*12\233\347\340Y\202\020\236[\351\2779*\310"
 160      2A31 329B 
 160      E7E0 5982 
 160      109E 5BE9 
 160      BF39 2AC8 
 161 01eb 5DFA 04C5 	 .string "]\372\004\305\357\213\350Q\030>\205\352S\004d\337sp\300\245X\206\241c\252\2071\t\3067U\224\016\237\227\033\233\361\324\315\203^\201\241\374\364\232\037B\3207\337b\271\375\237\300 OK\361\222\342\007\325\315u\034z\352E/\233\r\200d4s:Tf\024\262Pq\215\266\002\334 \243\317C~\f\2430\222\316p\253\032n\361\032\252\302Rjs\223;H\317\223\320\002b\263x\302\017\220i\306T\227\350\242+\356\343\023\271\213S\023\353\373x\030\253w\205\177N\202\204g\373\363\232\031\305\253\"\310pq*\252\233J\330-\0247q\231\337_=^\304l(\360^U\346n\356\207\216r\351\353\331\233\027\367\271\211x\223\231[\372\363\037:\374\353t\b<B\316d\311\032T\356O}]\177z\256\027\310\365\367\355Q\\,n\025\303\307m\263\305]\300q\333\n\270\025\310\3745\370\315/(Y\213\016\263\326\222u\022"
 161      EF8B E851 
 161      183E 85EA 
 161      5304 64DF 
 161      7370 C0A5 
 162 02ec 60B5 5489 	 .string "`\265T\211:\267\273\357.*^\305\35267@+`\224\021\324[\"\036\036G\235T2*\346\0036\272\307!\034hH\274\333E\230\371\265\303e>\032,\227\202\333\032\374\264\032\205\355\314\235\320\346l\371\330\r\375=\367\260\227O\203;\323\360\207\243B\321\301\313\261\247}\257'5\240\247X\345\375so\030=t\323\206\363\242\225\205\263\303\362'\266)\201M\236_\035\350)W\351\302\t\200O\212n\234\377\316\355\364\230\032I+\342t*\307I\251]\207\314\235t\273\007\020\326z\241\037\177"
 162      3AB7 BBEF 
 162      2E2A 5EC5 
 162      EA36 3740 
 162      2B60 9411 
 163 0387 A46C D41B 	 .ascii "\244l\324\033W\336!c\355\247+qNn\360A[\201l~j\264\274~\017Z\270"
 163      57DE 2163 
 163      EDA7 2B71 
 163      4E6E F041 
 163      5B81 6C7E 
 164 03a2 A550 BFB0 	 .ascii "\245P\277\260\024\333)\301\235^\367\315\237\274\204e\235\275"
 164      14DB 29C1 
 164      9D5E F7CD 
 164      9FBC 8465 
 164      9DBD 
 165 03b4 FCA9 5EE8 	 .ascii "\374\251^\350\351\240Lxo\345\256\t@\351\265\353guM\214\206w^"
 165      E9A0 4C78 
 165      6FE5 AE09 
 165      40E9 B5EB 
 165      6775 4D8C 
 166 03cb 5F3D E6A5 	 .ascii "_=\346\245\325\354\325\301\024]\246W\211\232\227\246YD\314\263"
 166      D5EC D5C1 
 166      145D A657 
 166      899A 97A6 
 166      5944 CCB3 
 167 03df 3C3D 1AAC 	 .ascii "<=\032\254d\037*\3307\361`\253d8\274\362FY\202\255\367\235 \217"
 167      641F 2AD8 
 167      37F1 60AB 
 167      6438 BCF2 
 167      4659 82AD 
 168 03f7 EBA3 AA71 	 .ascii "\353\243\252q\265r\0167\217\241\374\271\363f\231}\263\305\357"
 168      B572 0E37 
 168      8FA1 FCB9 
 168      F366 997D 
 168      B3C5 EF
 169 040a 60D1 80BB 	 .ascii "`\321\200\273\334\261\235\275\3557jK\345\247\004\241\342\243"
 169      DCB1 9DBD 
GAS LISTING  			page 13


 169      ED37 6A4B 
 169      E5A7 04A1 
 169      E2A3 
 170 041c 2431 BB09 	 .ascii "$1\273\tV\362(]\335\360QZ\357\211\300^\177\233\374\031\346w\271"
 170      56F2 285D 
 170      DDF0 515A 
 170      EF89 C05E 
 170      7F9B FC19 
 171 0433 BC88 C53B 	 .ascii "\274\210\305;p\023\322\371\313\217\3737\263\370\366\223\213l"
 171      7013 D2F9 
 171      CB8F FB37 
 171      B3F8 F693 
 171      8B6C 
 172 0445 3DBF 4742 	 .ascii "=\277GBq;\322g\307R]m]P\023\267S\311T$\221\210\365\266u<\031"
 172      713B D267 
 172      C752 5D6D 
 172      5D50 13B7 
 172      53C9 5424 
 173 0460 8C77 F5D8 	 .ascii "\214w\365\330\235qZ\266\027\226\035!\261L\036I\265u<U\264\336"
 173      9D71 5AB6 
 173      1796 1D21 
 173      B14C 1E49 
 173      B575 3C55 
 174 0476 A7A5 8EDA 	 .ascii "\247\245\216\332\261\220\0359\232HF\242\375\361\267bJ<j\364\307"
 174      B190 1D39 
 174      9A48 46A2 
 174      FDF1 B762 
 174      4A3C 6AF4 
 175 048b 5EEF 3DD2 	 .ascii "^\357=\322S\357j;\255\276dOg\177*\322\227\362U\321X\177J\252"
 175      53EF 6A3B 
 175      ADBE 644F 
 175      677F 2AD2 
 175      97F2 55D1 
 176 04a3 54DB 4EE8 	 .ascii "T\333N\350bU\323\033Kuv%{\354H\252\355\020\374\017VU\266\366"
 176      6255 D31B 
 176      4B75 7625 
 176      7BEC 48AA 
 176      ED10 FC0F 
 177               	 .text
 178               	 .section .gnu.lto_et_receivecallback.part.0.289497c5fc10d8a0,"",@progbits
 179 0000 789C AD56 	 .string "x\234\255V]h\034U\024\276\347\316\316\317\316\316\376$m\265\370SBA\004\261\321(h\004\251\317\372\344[\027Z\b!\273\233l\234\270C\272\017\202B&\331\215\224\222@(\001\305\266$%\244Z\242\244\313R\024Re\243\325$\3326\021,4\211\305\310B\023\212J\300\007%\232\256\347\336;3\233\354&q\225.d\316\334{\277\357\374\237;\241\204\222\312\337\027\370g\005\b9\207\022\"\004\302C7\361%\f\224K\n*\223\275\232D\345\365\003\304\326}\243\315\3046|\316J\341+\031\024\001R\004zZS\251T8\212\347\332B\030\3175\352_\326q\245_\371\212\340\322\017\272\200\3534t\365\020\356\007~x\006\267\003R\250\377\021bk\006\177\006\305;\204\0044\350\276\204"
 179      5D68 1C55 
 179      14BE E7CE 
 179      CECF CECE 
 179      FE24 6DB5 
 180 00d6 D80B 01D2 	 .string "\330\013\001\322\023\246\222OVT\315\257\007\214`\bzN"
 180      13A6 924F 
 180      5654 CDAF 
 180      078C 6008 
 180      7A4E 00
 181 00e9 8B27 7498 	 .string "\213't\230\\\260\3553+_o\344e\373\262}\312.\225zL\300\300C@\022@\216\203\t\030&\023\264\"\031\202XX.\316\322\254\275b\017\331\367K=\b\223(9X\246j\202\n;Ro\027\033\354L\301\376\263TR9\357\321\032ywF\206}e_\221\370x\215\304\245\021\372\276\235-\224J\257p\332\0235\322\026G\006\267\330\363Q\362d\215\304\221\3255\350\377\266\234\033\231\222\227wL\253\005\225\\\373\364p\001\030\257\204\030\205\222\327j,\307\271\325\217^\357\363\222\212\006\243\273\030\204J\346\331\325\365Jg\343\273pi%w\263X\025\350\311Z\355\376U\254\262\333S\253\335[\305u\232=\275\255\371\006\240\306\342\344\253}\036\202\177\255\316$\265WJ\245\305\215\001x\nH\f\246\3400\316J\f>D)\241\274\204\322GLPe|H\n\356\214\343\216\212r\f\245\3066\375\354\241;\330"
 181      5CB0 ED33 
 181      2B5F 6FE4 
 181      65FB B27D 
 181      CA2E 957A 
 182 01e5 CA4F 511A 	 .string "\312OQ\032(\257\240\f\242\234@\031B\231G\031F\231C\031A9\211\262\016\345'(\353\035\034\376d\222\265\355\241\006\261\026Z\205?1\270\300\021\t\356\3761|\342\365\022\2050\ni\216|\251\261\300$\013|\204\314\221>\\\t<\356\211H\243\230nD\316\223\314\312|N\213\301\347 \343\356\333d\003\007!b\202\226pJi\202\237\020\206Z\314\275#P\235"
 182      28AF A00C 
GAS LISTING  			page 14


 182      A29C 4019 
 182      4299 4719 
 182      4699 4319 
 183 0258 1E4C 4F38 	 .ascii "\036LO8U3\001o\315\033\244o\356\262*Pg\311\007\2756\203(\036"
 183      5533 016F 
 183      CD1B A46F 
 183      EEB2 2A50 
 183      67C9 07BD 
 184 0270 D810 9966 	 .ascii "\330\020\231f\21178\251\223\331\230'\331\225\245\334[U\036\004"
 184      8937 38A9 
 184      93D9 9827 
 184      D995 A5DC 
 184      5B55 1E04 
 185 0284 138E AB0C 	 .ascii "\023\216\253\f\357c\t\017\tG\226s\035\256#t\027\177\347\b\025"
 185      EF63 090F 
 185      0947 9673 
 185      1DAE 2374 
 185      177F E708 
 186 0299 1091 AA4E 	 .ascii "\020\221\252N\346$\243\336\331!\322\355!\314\223\376\321\237"
 186      E624 A3DE 
 186      D921 D2ED 
 186      21CC 93FE 
 186      D19F 
 187 02ab 9AAA 40E1 	 .ascii "\232\252@\341\004K\244\263\243\231\020\261@v@\334=\326\024u<"
 187      044B A4B3 
 187      A399 10B1 
 187      4076 40DC 
 187      3DD6 1475 
 188 02c0 D32B F772 	 .ascii "\323+\367r1\3276+\026;\226\334\366\212\342k\341\250\204y\372"
 188      31D7 362B 
 188      163B 96DC 
 188      F68A E26B 
 188      E1A8 8479 
 189 02d5 2D93 9F99 	 .ascii "-\223\237\231V\275\342\216\363\202\216\361\202\272\306\321m_"
 189      56BD E28E 
 189      F382 8EF1 
 189      82BA C6D1 
 189      6D5F 
 190 02e7 27E3 22FC 	 .ascii "'\343\"\374D\ffx\304\362\021\3624*\364\262[\357\271\270\317\002"
 190      440C 6678 
 190      C4F2 11F2 
 190      342A F4B2 
 190      5BEF B9B8 
 191 02fd C5C9 D63E 	 .ascii "\305\311\326>'\273>\257\257Q\305\325\314Ep\265(\235\314\002\317"
 191      27BB 3EAF 
 191      AF51 C5D5 
 191      CC45 70B5 
 191      289D CC02 
 192 0312 D20C F774 	 .string "\322\f\367t\234gI\341Y\032\375\265\311\305\251{\345W0\3078S\345&~\234\2352\\\252\266\227\243\352\256\216\316\222k\253\275\001\317>\352)\017g\024q\366\021\314^f*s\221\272\030?\207)\016\365\270\267\315\023_\332z9D\361`\360\220t\217\330\003\315\002\346\356+\254*\356\230L\360\210\352YD\231S\231\211\231\237e\267\335t,\007W\313\264n\351\261K\234\2413]\213\244\2367\004!\276\277\317\277\373X'\004e`\026T\202\037j\317\204 H\345\321\0246\203,\210\354\335\351[\305\210kR\330\363\032\b\365\007\271~\374\206_\337L\242\233\n,\022\311i2\372\361\371o\ftDY\223\231M\215\r8\313\312\364\037\305\006od8\266n[Z\374\344\f\3457\301fn\024\\``\217!_\330s\310i\305\220\007\304\360\335/_ \306\377\276@\240B\267\341\306\240{\301\346\356z\301\006\267M\237"
 192      9C67 49E1 
 192      591A FDB5 
 192      C9C5 A97B 
 192      E557 30C7 
 193 0413 06C8 35BF 	 .ascii "\006\3105\277t\035/\235\211\274\346%e\220\f\364f\355\302g\355"
 193      741D 2F9D 
 193      89BC E625 
 193      6590 0CF4 
GAS LISTING  			page 15


 193      66ED C267 
 194 0428 26EC 67B0 	 .ascii "&\354g\260v\247\357\234\375\245\004\356{\225og#P>\034nw\017\025"
 194      76A7 EF9C 
 194      FDA5 04EE 
 194      7B95 6F67 
 194      2350 3E1C 
 195 0440 7EA8 6F33 	 .ascii "~\250o3g\220\367$\351;\374_M\330jw\257\323\311|\272\352\2269"
 195      6790 F724 
 195      E93B FC5F 
 195      4DD8 6A77 
 195      AFD3 C97C 
 196 0458 9070 7AD2 	 .ascii "\220pz\322\204\207\\~\260\222\257\013\376\215|\271T\241\007V"
 196      8487 5C7E 
 196      B092 AF0B 
 196      FE8D 7CB9 
 196      54A1 0756 
 197 046c 2AE7 8ABD 	 .ascii "*\347\212\275\231\367J\025~`\245\n\013\322\332\357\206\253;R"
 197      99F7 4A15 
 197      7E60 A50A 
 197      0BD2 DAEF 
 197      86AB 3B52 
 198 0480 CB47 42CC 	 .ascii "\313GB\314\241\344r\352\220\306\016\345_J\022?\353{\365\277|"
 198      A1E4 72EA 
 198      90C6 0EE5 
 198      5F4A 123F 
 198      EB7B F5BF 
 199 0495 70EA C407 	 .ascii "p\352\304\007\347v\336\252\312\376\303\t~\201r\224\t\007\335"
 199      E776 DEAA 
 199      CAFE C309 
 199      7E81 7294 
 199      0907 DD
 200 04a8 0284 5863 	 .ascii "\002\204Xc\261\0028]\361=\177u\177\3070\314\2050\313K i\265v"
 200      B102 385D 
 200      F13D 7F75 
 200      7FC7 30CC 
 200      8530 CB4B 
 201 04c0 5BF1 745B 	 .ascii "[\361t[c\033\361[\255mo\304\323f\374M\332\326\001]j\322\262\272"
 201      631B F15B 
 201      AD6D 6FC4 
 201      D366 FC4D 
 201      DAD6 015D 
 202 04d8 53E9 1424 	 .ascii "S\351\024$\367'O\266\244;\342-\342\274%\221\352n\351\212\007"
 202      F727 4FB6 
 202      A43B E22D 
 202      E2BC 2591 
 202      EA6E E98A 
 203 04ed 9356 3A95 	 .ascii "\223V:\225n5\021\336\330\364\374\266\325s\206\231jk5\255Tw\272"
 203      6E35 11DE 
 203      D8F4 FCB6 
 203      D573 8699 
 203      6A6B 35AD 
 204 0504 B1A9 29D8 	 .ascii "\261\251)\330\035\357J\245\343b\365l\240|\364\222\261\345\244"
 204      1DEF 4AA5 
 204      E362 F56C 
 204      A07C F492 
 204      B1E5 A4
 205 0517 594A 36BE 	 .ascii "YJ6\276hl\321\362\302?\265v\352c"
GAS LISTING  			page 16


 205      686C D1F2 
 205      C23F B576 
 205      EA63 
 206               	 .text
 207               	 .section .gnu.lto_et_receivecallback.289497c5fc10d8a0,"",@progbits
 208 0000 789C 8D53 	 .string "x\234\215S\317k\023A\024~\337\354\356\354$\033S\017\036\364R\244\352M\364?\320\223\177C\013\025BI\2636u%K\314A\360\220\251F\350A\245\210\207\322K\254w\255\271\366b\004Q\253`\360R\020\005\367\244 \365,\210\260\276\231\315O\203\330\007;og\346\373\276\367cf\004\t\372\333V\370;\355\020\235e\217\034Al\274'ZSB\250\375\363\244\363\316\356,\351\202#\324\333\013<s_\315\360\314\025\336k\366y\271\307k\005\017*\243\310>\310\267 ?[\206\002\214'PS8\256'}\205\346e\330\320;\242\233\244\351\323\375/\217\276\343D\021\210A\222\"\2202C`\0066\217ZZo\234\234\243m\255\037t?\266\357\271\372\231^\327i\332\214"
 208      CF6B 1341 
 208      147E DFEC 
 208      EEEC 241B 
 208      530F 1EF4 
 209 00d1 4145 5008 	 .ascii "AEP\bZD\004\241\254s0Y_\237\370\251\375p\214\310}8uH\342\347"
 209      5A44 04A1 
 209      AC73 3059 
 209      5F9F F8A9 
 209      FD70 8CC8 
 210 00eb B6D8 D4AD 	 .ascii "\266\330\324\255n\232^\264\2643\377\243\221\331g\233\347\321"
 210      6E9A 5EB4 
 210      B433 FFA3 
 210      91D9 679B 
 210      E7D1 
 211 00fd 14BE C049 	 .string "\024\276\300I\262w\366\350Vr\320\223\313\330\206G\313x\2149K\207\001\277\241\326\327\027?\333\"\333\\\005\314\216\353\217i.\300\241\335Y\247G\255\344n\347F\206#\272I\277\270\242\243\021\274\020Y\032V\3224Q\022\365\350Nr\277\243\246\300~\210\354\032\230\025\025A\305@\0374\244\347\f\375v\262\3259>\310I\016\371\371\220\2231\026!\260\271\037\254\345\206(\243\300\0078\236\271K\353\3221jOFj\352\237j/\277\215\324\224U\223\023j\036m\301\252\355t\342\251\322\n!G\313\304\216\f\b\222~\270\226\360|\024>8T1\201\r\177i\"\274O\277\355Y\366\333\032C\254\232\326\263\376t\243\213\241\235\033\355\231\001_\331\313\360\216\237\013\321\025\023\372\203\375\035\330<\2131\300\234OP\215\227\352q\245Q>W\246c\325\353\245\306J\245\024/\225\257V\032\245\260V/]\253\240\352W\343\270^k\324\376"
 211      B277 F6E8 
 211      5672 D093 
 211      CBD8 8647 
 211      CB78 8C39 
 212 01fe 347B CC74 	 .ascii "4{\314t"
 213               	 .text
 214               	 .section .gnu.lto_SwitchToBroadcast.289497c5fc10d8a0,"",@progbits
 215 0000 789C 8D91 	 .string "x\234\215\221\261J\003A\020\206g\366v/!\212\004,\304\024\"i\305\024\202b\343\003\370\004\th#\211B\216\024\207\330Yd/\271@\020\003\207\225hc\020;!\020\020,c\243F\210`!6\026gcae)\026\236\263\267\311\251\301\"\003\26737\273\363\375\263;\f\030\f\333\n}s\224\236\"\217& \363\356\001\2348C\256\003C\007Wq\316\214\375\033"
 215      B14A 0341 
 215      1086 67F6 
 215      762F 218A 
 215      042C C414 
 216 0074 9910 6E0C 	 .string "\231\020n\f\344\270@Ty@(3\203\013,\257\243\302\26144\245<\360k\355F\252\266\347KO~\005e,!)O l!\254\321\017&C\307\206\272\321\245\235\340\355\235\325\356\376\224N\376[j\343Om\213u\374 x~\272>\351b*\316\241\200ML\203I\376\224<\231"
 216      E4B8 4054 
 216      7940 2833 
 216      830B 2CAF 
 216      A3C2 B134 
 217 00ce 574A 6F16 	 .ascii "WJo\026\024\210,K+\335#\207\214\234\321\203\312\345G\2531]\300"
 217      1488 2C4B 
 217      2BDD 2387 
 217      8C9C D183 
 217      CAE5 47AB 
 218 00e5 3314 700C 	 .ascii "3\024p\fG\216\224IR\336\205OYW\221\241\265\224\264\001\203(\022"
 218      478E 9449 
 218      52DE 854F 
 218      5957 91A1 
 218      B594 B401 
 219 00fc CF51 92DE 	 .ascii "\317Q\222\336&\304\034\266\0333\0323\017\347\222l\261\204<\""
 219      26C4 1CB6 
 219      1B33 1A33 
 219      0FE7 926C 
 219      B184 3C22 
 220 0110 8A88 68DA 	 .ascii "\212\210h\332\210}\216\031B,\344}\234\312\361@\355\366\240Z\257"
 220      887D 8E19 
 220      422C E47D 
 220      9CCA F140 
GAS LISTING  			page 17


 220      EDF6 A05A 
 221 0125 068F 2F42 	 .ascii "\006\217/B\023-4\351T(\255w+\253\243wl\365u\250[\0164:\325m\327"
 221      132D 34E9 
 221      5428 AD77 
 221      2BAB A377 
 221      6CF5 75A8 
 222 0140 4B0C C87C 	 .ascii "K\f\310|\024\006\300-\270\257N\324\216\356E\374\232a\216\362"
 222      1406 C02D 
 222      B8AF 4ED4 
 222      8EEE 45FC 
 222      9A61 8EF2 
 223 0154 F4A0 0FE0 	 .ascii "\364\240\017\340\370\335\013\256\317\r,K7vcjrcE{c\333\336\334"
 223      F8DD 0BAE 
 223      CF0D 2C4B 
 223      3776 636A 
 223      7263 457B 
 224 016c C967 F2C0 	 .ascii "\311g\362\300\213\231\205%\265,\177\003z\326\215#"
 224      8B99 8525 
 224      B52C 7F03 
 224      7AD6 8D23 
 225               	 .text
 226               	 .section .gnu.lto_.symbol_nodes.289497c5fc10d8a0,"",@progbits
 227 0000 789C 4DD0 	 .string "x\234M\320\315n\323@\020\007\360\361\216\355\272uj\003\305\200i\022\247)\337\337 \304\r\361$H\360 0U,%=\362\002p\260_\001\236\300R\220\370h\244F\202+\211\201\023W8\"fv\227\256s\360/\377\331\311\3548\n\024<C0\037\025\021\300\253#"
 227      CD6E D340 
 227      1007 F0F1 
 227      8EED BA75 
 227      6A03 C580 
 228 0055 A2D7 87CF 	 .string "\242\327\207\317\203\253>\020\004\327\002~\252\224<w\242z\244:}wC\351\330%\264\2657\207^0\336\360\tU\237\374N-\363\002\236w\t\244\273\240\2403\341b\304\335\301\025%'\003\n\335o\324\2206:}\371\246\364\355l\311\234s(\317\007\261\354x\266\307\337\325#\212Nz\275\340\366\266\234\234O\244\353B*\347#\332\354L\336\243-\227\274{\024\233tp\340y\227\251\347\302>m\273p\223\022\027nP\352\302-:\345\302}:\355\302u:\343\302\035\3329\t\350\357B\373\355\257\207\321"
 228      83AB 3E10 
 228      04D7 027E 
 228      AA94 3C77 
 228      A27A A43A 
 229 00f2 4A6B ADED 	 .ascii "Jk\255\355C#\306#Sgkk\373\277\276\022\013h\246?|\214\207P\317"
 229      4323 C623 
 229      5367 6B6B 
 229      FBBF BE12 
 229      0B68 A63F 
 230 010b FE3C C538 	 .ascii "\376<\3058\204\352\3501\306\021T\013\206\247\030ZCy\254\251\205"
 230      84EA E831 
 230      C611 540B 
 230      86A7 185A 
 230      4379 ACA9 
 231 0120 0134 86D6 	 .ascii "\0014\206\326P.\031\037*&\351\233[\331\332\332X\365\355\t\300"
 231      502E 191F 
 231      2A26 E99B 
 231      5BD9 DADA 
 231      58F5 ED09 
 232 0135 6465 AC56 	 .ascii "de\254V\366\\\313\303\254\345\364W\201)o%\231\325\365td\353!"
 232      F65C CBC3 
 232      ACE5 F457 
 232      8129 6F25 
 232      99D5 F574 
 233 014c ACE7 F310 	 .ascii "\254\347\363\020\323\b\326\357\305\004\252\017\"\317\261\266"
 233      D308 D6EF 
 233      C504 AA0F 
 233      22CF B1B6 
 234 015c DA21 341F 	 .ascii "\332!4\037\177\276\300\024`\255\335\203r!u\366XD\250\254\223"
GAS LISTING  			page 18


 234      7FBE C014 
 234      60AD DD83 
 234      7221 75F6 
 234      5844 A8AC 
 235 0171 A528 EBB3 	 .ascii "\245(\353\263\331>\324_?#f|\337\027c\263\024S\3563\271]|Rb\255"
 235      D93E D45F 
 235      3F23 667C 
 235      DF17 63B3 
 235      1453 EE33 
 236 018b E5FD 66DF 	 .ascii "\345\375f\337_bV@-\373evO\256\353\367\312\306\346=2\373\357K"
 236      5F62 5640 
 236      2DFB 6576 
 236      4FAE EBF7 
 236      CAC6 E63D 
 237 01a3 5DCC C7D0 	 .ascii "]\314\307\320\274}\210y\001\2550\204\362\235\246\371\335\303"
 237      BC7D 8879 
 237      01AD 3084 
 237      F29D A6F9 
 237      DDC3 
 238 01b5 3C86 C93C 	 .ascii "<\206\311<\225TO\237`\236\301d\226\300?=V\364\373"
 238      9554 4F9F 
 238      609E C164 
 238      96C0 3F3D 
 238      56F4 FB
 239               	 .text
 240               	 .section .gnu.lto_.refs.289497c5fc10d8a0,"",@progbits
 241 0000 789C 258C 	 .ascii "x\234%\214\211\016\200 \fC\333\212\007\b\212\367\361\247\376"
 241      890E 8020 
 241      0C43 DB8A 
 241      0708 8AF7 
 241      F1A7 FE
 242 0013 BD43 FBB2 	 .ascii "\275C\373\262&]\266\n\302\203_\025@\223TQ\346\016D\355\032\264"
 242      265D B60A 
 242      C283 5F15 
 242      4093 5451 
 242      E60E 44ED 
 243 0029 34D0 AA93 	 .ascii "4\320\252\223W\360=#\"Rq\273\255\025\2248(\365#2&Ne\207\254\031"
 243      57F0 3D23 
 243      2252 71BB 
 243      AD15 9438 
 243      28F5 2332 
 244 0043 8BB1 720D 	 .ascii "\213\261r\r\033K\332\355\343\340Y\006\231\231\227\274\273\031"
 244      1B4B DAED 
 244      E3E0 5906 
 244      9999 97BC 
 244      BB19 
 245 0055 E9BF B617 	 .ascii "\351\277\266\027\324\226\003\240"
 245      D496 03A0 
 246               	 .text
 247               	 .section .gnu.lto_.decls.289497c5fc10d8a0,"",@progbits
 248 0000 789C AD58 	 .string "x\234\255Xmp\023\307\031\336=Y\310\362\0076\fa\bCc\227\t)!S\033\247SB&S\302\307\020B[24\230\366G\332:\262\356\2105\310\226*\235I\371\305\331\340\204qJ\261\001\0174\224b\022\023\3004\3244\004;\005\022\361\021\233\201&\023\240v\003-A\224b\032\310"
 248      6D70 13C7 
 248      19DE 3D59 
 248      C8F2 0736 
 248      0C61 0843 
 249 005c 2D43 026D 	 .string "-C\002mj\365\335\333=\335\335\336\207d\322\233yu{\247}\337}\236g\337\375\270\025\220\200\306\215@(\005\327\300\004\204b\002B\005\b\241\031`>\260m`\035`;\301:\301<`o\202aD\2571`]`\335`\207\301z\301N\200\235\002\353\007\033\004\273\nv\035\3546\330\035D\235\0050?X\001\330h\2601`c\301\306\201\025C\225\361p\237"
 249      6AF5 DDDB 
GAS LISTING  			page 19


 249      3DDD DDDE 
 249      8764 D29B 
 249      7975 7BA7 
 250 00ce F600      	 .string "\366"
 251 00d0 5829 D844 	 .string "X)\330D\260\007\301&\203M\001\373&X9X\005\330\267\300\276\r\366\030\330\343`Oh\340\330\325\305\270\020\354#\021\345\367\035L9L\202\237\031\254>fuI=\322\336>D\3334^\204'\310\205\274\254~\216!F'\322\343t\2638\357\202\035\264\211C\264\362s\230\274\f\027\211\363$\334g\202\335e\365\005\346s\207\225'2-\214W/\343\211\r1sX\277\221>,2\360\354e\367)\\\214\023\214\337,\254\367\275\007\312\263\301n\260:\036V\217\364!\tB\236?D\264\277\306s\361H\036\224p<\3470\355\275\f\337\\x\350C4\347\236\202\362<L\333-\304T\217\247\301\362\300v!\232\207\363\r\032}\027\354$\322\361i\270\t\346\357\201\035a8\362\030\226\321,\347H\356\021\r\276\217)\027-'\0173\rI~\375"
 251      B007 C126 
 251      834D 01FB 
 251      2658 3958 
 251      05D8 B7C0 
 252 01b8 EC59 9683 	 .ascii "\354Y\226\203\232\336<\277~\326\217\263\031&\202a\021\303\277"
 252      9ADE 3CBF 
 252      7ED6 8FB3 
 252      1926 8261 
 252      11C3 BF
 253 01cb 97E1 D9C9 	 .ascii "\227\341\331\311\360 \306\267\237\265\327\3054$"
 253      F020 C6B7 
 253      9FB5 D7C5 
 253      3424 
 254 01d9 EF2E 805D 	 .string "\357.\200]\002\273\210h{\306\213\214\241\257q\032j\375\354e\375Kt\2524he\324\224\350e\324j1\246cx\300\240\033\301L\360\376\020\356=\310\254]!\303\340gc\325\250\233\221\013\031\303?\302\372\\@t\251`c\223\214\325\347\300~l\320\262\224\215]\343E\346\212\373\031'\215+\251\322\301\270z\230\206<O\302_\343\360\024\343Wh\310\031\242\303O\340\371\n2\347\262\217\265\251q\033\313\362\203\360%sQ>\242\330\237`s\313O\301\376\205(\366\307XnT\201=\017\026\340\270\2209\257\330\200_\343\323\211\314X\2671\254\032\247j\260\323\360.\b\367k,\326\b\026O\303G\360\236b\330\211\036\004\023\031\177\"\230\304\341\270\215\234\347\277\327\020m\237u\243Z\227\314/$\377'pq\362Q\263\2424*\355\r\312\230M#G\241\026\005\256v0\214E\214\375\320\275\"\036\351GS\325B\201_\205L"
 254      02BB 8868 
 254      7BC6 8B8C 
 254      A1AF 711A 
 254      6AFD EC65 
 255 02da BD86 47A9 	 .ascii "\275\206G\251%?Z\255z\250\356j\r\346Q\254y\b\314\343u\354WK\354"
 255      253F 5AAD 
 255      7AA8 EE6A 
 255      0DE6 51AC 
 255      7908 CCE3 
 256 02f3 75BA E065 	 .ascii "u\272\340e@\234\374\266\341|\r\253\332X\243\242\264*\005\233"
 256      409C FCB6 
 256      E17C 0DAB 
 256      DA58 A3A2 
 256      B42A 059B 
 257 0307 46A6 3D72 	 .ascii "F\246=r5\017\302l\022\352P\224\226\344\373C7\005E\311\021q\007"
 257      350F C26C 
 257      12EA 5094 
 257      96E4 FB43 
 257      3705 45C9 
 258 031e 2691 BE8E 	 .ascii "&\221\276\216\321\024\264\013p\002\275\326t8\303\245r\345\237"
 258      D114 B40B 
 258      7002 BDD6 
 258      7438 C3A5 
 258      72E5 9F
 259 0331 45BC 034F 	 .ascii "E\274\003Oa\310\260_/\244\260\213l?3\205\022\361.&T\006\226;"
 259      61C8 B05F 
 259      2FA4 B08B 
 259      6C3F 3385 
 259      12F1 2E26 
 260 0349 2D2C 6968 	 .ascii "-,ih{\017\3122q\307\007\257:U\206Sq\032.\r\350\345\370x\315|"
 260      7B0F CA32 
 260      71C7 07AF 
 260      3A55 8653 
 260      711A 2E0D 
 261 0363 BC7E BD90 	 .ascii "\274~\275\220Jy\354\t%\033\322\204\030\212R\rE\016\013\273g\330"
 261      4A79 EC09 
 261      251B D284 
 261      188A 520D 
GAS LISTING  			page 20


 261      450E 0BBB 
 262 0379 79F0 3B87 	 .ascii "y\360;\207<\360dP\350M]\241\022\364\033%q3y"
 262      3CF0 6450 
 262      E84D 5DA1 
 262      12F4 1B25 
 262      7133 79
 263 038c EBED 4B42 	 .string "\353\355KB\223\222T\022\251\324\223\305cQ\033\001\2404(3\001\361\214\373l\263\203\304\331\213\307\252%\017\215LSD\304\213\265\366\311P\231gV\363A\364\272\242\254S\266\264\322aAsj!\251\323\205Kl\033\242\225\340z\bm'\250\316*;UW\300\205\230\233\251w\336\302\202\361\005%\230\330\337+lRn\246Rk\225\334\254\351\365\360\364H~\230\036\324\202\211\356\263\266t\337i\243ti\202=O\352t\353tM\375\303\0023\307\377\232\034k\262pt\322\251\233\327\351\200\255NC\244\301\006\005v\273\312\314,\205\312Z\317\243LO\353%\240\260Y\2674\013eCB\347p\230\347p\314\312!y3y\241\257c\274\226\314\034\272N}\374Y\340\365\231\341\th%\266\005\325\2504\253\240\250\334\"\356u\350\020\026\366\270\035\306\304\027\353\036QV*C\251\024\316Z\276\223|:z,\203\255\025\273\246\237\207"
 263      9392 5412 
 263      A9D4 93C5 
 263      6351 1B01 
 263      A034 2833 
 264 048d DBA1 D639 	 .string "\333\241\3269\341\230E\036c\022\255I4\216Ci\375O\360\372\177`\233C\3779\367K\257\322\245$S\251\222{N\016\001\375\326^}.%N\361\220\316\330\312\275y\375\260\345\036\260\221\233\225M\023|z%mw_I\311\202I\027=\001\355\307\334\326A\307\237a\261t\232\322\317b\343Z\234\306l;G\035\263\317\222\315\306,9\243\326\351w\315\022\315\257W\030G\001\b\350\257\031\334T\230\314\357\302K\304O\325\343\002\357\306\255"
 264      E198 451E 
 264      6312 AD49 
 264      348E 4369 
 264      FD4F F0FA 
 265 0516 D839 27FB 	 .ascii "\3309'\373\371\004\370\3046'[\007\376\0379y9\253\234\034\344"
 265      F904 F8C4 
 265      3627 5B07 
 265      FE1F 3979 
 265      39AB 9C1C 
 266 052b 21FD C306 	 .ascii "!\375\303\006R2\321\277u\367\314\341&\3455\206H\357Q\001\335"
 266      5232 D1BF 
 266      75F7 CCE1 
 266      26E5 3586 
 266      48EF 5101 
 267 0540 B407 D562 	 .ascii "\264\007\325b\006u\225\007\365\231\025T{RiV\022\030\346\315\367"
 267      0675 9507 
 267      F599 1554 
 267      7B52 6956 
 267      1218 E6CD 
 268 0555 94EC 31DD 	 .ascii "\224\3541\335\260[&\271\224k\026lSn\243iy\333\242V\272\236\345"
 268      B05B 26B9 
 268      946B 166C 
 268      536E A369 
 268      79DB A256 
 269 056c FA66 4E83 	 .ascii "\372fN\203\353<\275\177\332\321K\334\271:\231IN{\027\246C!\233"
 269      EB3C BD7F 
 269      DAD1 4BDC 
 269      B93A 9949 
 269      4E7B 17A6 
 270 0583 2EBD CD87 	 .ascii ".\275\315\207\377\334f\232iI\336\272}\0307)\027\255+\017\333"
 270      FFDC 669A 
 270      6949 DEBA 
 270      7D18 3729 
 270      17AD 2B0F 
 271 0598 D365 B1DD 	 .ascii "\323e\261\335\336>\224\244\333\355\177\253\232\274#\360\273Q"
 271      DE3E 94A4 
 271      DBED 7FAB 
 271      9ABC 23F0 
 271      BB51 
 272 05aa C4ED 4691 	 .ascii "\304\355F\221y\302\200G\262z\253\027^\301\336\254\260o\222\270"
 272      79C2 8047 
 272      B27A AB17 
 272      5EC1 DEAC 
 272      B06F 92B8 
 273 05be DFBD 874D 	 .ascii "\337\275\207MN\302\242\031\255\224\262\027\345\320[\336\004\033"
GAS LISTING  			page 21


 273      4EC2 A219 
 273      AD94 B217 
 273      E5D0 5BDE 
 273      041B 
 274 05d0 7A34 5B04 	 .ascii "z4[\004\364\241C\204\006\301&Bb\240MY\245nJVd\235\224+\005\023"
 274      F4A1 4384 
 274      06C1 2642 
 274      62A0 4D59 
 274      A56E 4A56 
 275 05ea ADE1 CED8 	 .ascii "\255\341\316\330\"\336\216'\335\373l\334$\244gc\323\336\330*"
 275      22DE 8E27 
 275      DDFB 6CDC 
 275      24A4 6763 
 275      D3DE D82A 
 276 05fe E5C7 0E42 	 .ascii "\345\307\016B\254\266\025\342\320\345\311\253\354f\214\016\227"
 276      ACB6 15E2 
 276      D0E5 C9AB 
 276      EC66 8C0E 
 276      97
 277 060f 6D4D B3C0 	 .ascii "mM\263\300Mb\177wh\362\025\333&\273\3176\316Tw\316EYk\277\306"
 277      4D62 7F77 
 277      68F2 15DB 
 277      26BB CF36 
 277      CE54 77CE 
 278 0628 457B 1356 	 .ascii "E{\023V\213nk\263\326\3553\007\022\255\266$\016|\252\351F\267"
 278      8B6E 6BB3 
 278      D6ED 3307 
 278      12AD B624 
 278      0E7C AAE9 
 279 063e 7902 FAC2 	 .ascii "y\002\372\302\301\177\275\255\377\346\227\036I\373\367\250\376"
 279      C17F BDAD 
 279      FFE6 971E 
 279      49FB F7A8 
 279      FE
 280 064f 8AC7 DEBF 	 .ascii "\212\307\336\277\315\326\277'\235\300\364\243I@\353\034\3747"
 280      CDD6 BF27 
 280      9DC0 F4A3 
 280      4940 EB1C 
 280      FC37 
 281 0661 DAF9 2787 	 .ascii "\332\371'\207^\335g\031B\273\035\"\374\312\034a\"\332F\020\334"
 281      5EDD 6719 
 281      42BB 1D22 
 281      FCCA 1C61 
 281      22DA 4610 
 282 0676 EAF1 AF5A 	 .ascii "\352\361\257Z\271Z\271\223J\371\350\211\203\200\336N\007p:\231"
 282      B95A B993 
 282      4AF9 E889 
 282      8380 DE4E 
 282      0770 3A99 
 283 068a D8AC 8752 	 .ascii "\330\254\207R\303|\004[\353\r%\r\260\265n\0041V`-\322\201\214"
 283      C37C 045B 
 283      EB0D 250D 
 283      B0B5 6E04 
 283      3156 602D 
 284 06a1 91B6 7091 	 .ascii "\221\266p\221Z\222\251s\033\313\032`\252\324\"\355R#\035\265"
 284      5A92 A973 
 284      1BCB 1A60 
GAS LISTING  			page 22


 284      AAD4 22ED 
 284      5223 1DB5 
 285 06b5 9012 F156 	 .ascii "\220\022\361V+\212\227\333J^6\240\330\243\372\036\347QX\276\260"
 285      2B8A 97DB 
 285      4A5E 36A0 
 285      D8A3 FA1E 
 285      E751 58BE 
 286 06ca B799 23B5 	 .ascii "\267\231#\265\257\203\357\336\273B\223\001\205\272\3679\305\007"
 286      AF83 EFDE 
 286      BB42 9301 
 286      85BA F739 
 286      C507 
 287 06dc B21E C0F0 	 .ascii "\262\036\300\360t\022gu}\035O~\224t\034E\013\264]\030\3567\377"
 287      7412 6775 
 287      7D1D 4F7E 
 287      9474 1C45 
 287      0BB4 5D18 
 288 06f3 1B82 FD37 	 .ascii "\033\202\3757\177J\333Q\n\350<\217\337\246\341\035\274\024\211"
 288      7F4A DB51 
 288      0AE8 3C8F 
 288      DFA6 E11D 
 288      BC14 89
 289 0706 0B1D 0FEB 	 .ascii "\013\035\017\353\031B\027\344\301\214B\3542\207QN'?\351\333\236"
 289      1942 17E4 
 289      C18C 42EC 
 289      3287 514E 
 289      273F E9DB 
 290 071b 031B ADD5 	 .ascii "\003\033\255\3254\331\351\367\375\347j\234^\207\355\035\201<"
 290      34D9 E9F7 
 290      FDE7 6A9C 
 290      5E87 ED1D 
 290      813C 
 291 072d C4CE 7F9F 	 .ascii "\304\316\177\237\303\351\001O\343%\316\037|\030Vl\006K\355\236"
 291      C3E9 014F 
 291      E325 CE1F 
 291      7C18 566C 
 291      064B ED9E 
 292 0741 5772 32A1 	 .ascii "Wr2\241\332\303\243J\234\333\240~\326*_\246R\036\026fM\3060]"
 292      DAC3 A34A 
 292      9CDB A07E 
 292      D62A 5FA6 
 292      521E 1666 
 293 0759 9C46 A713 	 .ascii "\234F\247\023\207\276\234\256\203\361\221\232\233\370(\226\244"
 293      87BE 9CAE 
 293      83F1 919A 
 293      9BF8 2896 
 293      A4
 294 076a FB3D 8B42 	 .ascii "\373=\213B^\373\322\314H\356]\264\311\275\366\214\250\366\361"
 294      5EFB D2CC 
 294      48EE 5DB4 
 294      C9BD F68C 
 294      A8F6 F1
 295 077d A860 50AE 	 .ascii "\250`P\256U\207\203\302\002\251\300vg\004\266\337\026\030\031"
 295      5587 83C2 
 295      02A9 C076 
 295      6704 B6DF 
 295      1618 19
GAS LISTING  			page 23


 296 0790 9AAF FEDA 	 .ascii "\232\257\376\332fh\356\313\261\016\315\036\033,m\223\233\fCS"
 296      6668 EECB 
 296      B10E CD1E 
 296      1B2C 6D93 
 296      9B0C 4353 
 297 07a4 2575 2023 	 .ascii "%u #\251?X\244\376X\355\261U\306\036\353\315\030\346\240\036"
 297      A93F 58A4 
 297      FE58 EDB1 
 297      55C6 1EEB 
 297      CD18 E6A0 
 298 07b9 865B 753C 	 .ascii "\206[u<\316#\352\220\276\350pNdt:y\275\353\350\325\351\262\300"
 298      CE23 EA90 
 298      BEE8 704E 
 298      6474 3A79 
 298      BDEB E8D5 
 299 07d0 BDE7 E845 	 .ascii "\275\347\350E\366aN^\tG/\262\315q\362:\354\350u\303\245\255#"
 299      F661 4E5E 
 299      0947 2FB2 
 299      CD71 F23A 
 299      ECE8 75C3 
 300 07e7 BA97 F52C 	 .ascii "\272\227\365,V\233O\260\346U\314\274\216\016{\036;\3460\217\025"
 300      569B 4FB0 
 300      E655 CCBC 
 300      8E0E 7B1E 
 300      3BE6 308F 
 301 07fc D943 EE73 	 .ascii "\331C\356s\201\374\276#\3215.\362\364:z\035u\351\366>G\257f\227"
 301      81FC BE23 
 301      D135 2EF2 
 301      F43A 7A1D 
 301      75E9 F63E 
 302 0814 B68E EB5E 	 .ascii "\266\216\353^\367|\036\3055w\322E\220\023\216 \217\270x\235\024"
 302      F77C 1EC5 
 302      3577 D245 
 302      9013 8E20 
 302      8FB8 789D 
 303 0829 2CA7 C29F 	 .ascii ",\247\302\237\246O\205\341\203\260X\333y|\224c\3731\327m\372"
 303      A64F 85E1 
 303      83B0 58DB 
 303      797C 9463 
 303      FB31 D76D 
 304 083e 983B AF56 	 .ascii "\230;\257V\372\243pO\207\225\304\315p\211\370\003\363\246\246"
 304      FAA3 704F 
 304      8795 C4CD 
 304      7089 F803 
 304      F3A6 A6
 305 0851 146D 856F 	 .ascii "\024m\205o\245\226D#\266?\b\242\377\303dt\375!\2459\307\276\016"
 305      A596 4423 
 305      B63F 08A2 
 305      FFC3 6474 
 305      FD21 A539 
 306 0868 A7CC 5E17 	 .ascii "\247\314^\027e\3168\352\351sN\360?9:\r\2704\325\357\350\325\343"
 306      65CE 38EA 
 306      E973 4EF0 
 306      3F39 3A0D 
 306      B834 D5EF 
 307 087f E235 60ED 	 .ascii "\3425`\355\272\213\277\230\256w]K\356W8\006\275d\231\370m\217"
 307      BA8B BF98 
GAS LISTING  			page 24


 307      AE77 5D4B 
 307      EE57 3806 
 307      BD64 99F8 
 308 0895 41FF ECD0 	 .ascii "A\377\354\320\325,\354\331\214=8h\333\203\227'\031{p\320\245"
 308      D52C ECD9 
 308      8C3D 3868 
 308      DB83 9727 
 308      197B 70D0 
 309 08aa 07AF B808 	 .ascii "\007\257\270\bt^\027\350\033\350\r\320!\261\376"
 309      745E 17E8 
 309      1BE8 0DD0 
 309      21B1 FE
 310 08b9 DA6A EF2A 	 .string "\332j\357*!\235\207\256\310\256Z\221%\3762X\334$\270\326\330pEYXl_\203C~\332\005\371\337\034\023\342\232\213\327\245\257\304\327|\230\362@y}<V\036\016U\227\007\226\305\312Cu\301p\275(\225\307e1T'\227\325 _=\334\247W\311#\346=\263\270t\016\312%\217\025\323\252\344\302:I\256\nFj\243\001R+\027\036\242\365\361\232\351X,\204b ,K\261\252\027#1\321\027\020\305\230\024\217{\226\005\302y\360\217T'\306\301\362C\321@,*\311\301\262 *|F\222\347I\362\242`, \007k\356#\177WIr\215\024\013\207\352\226V\325H\001Q\212\345\310\313\243\222\377\351@\235\030\226f\305\242\205\365u\361\320\013u\222X\032\254\t\304F\252.\241(\253\233+G\344@8,\325\tr\304\033\215E\344H\036u\234?g\301\302\373\001CL\nJ\241eR\020*U\007\202K\313"
 310      219D 87AE 
 310      C8AE 5A91 
 310      25FE 3258 
 310      DC24 B8D6 
 311 09ba 8A5C 3675 	 .string "\212\\6u\264\365\037\177\024~$\031B\215Z\364b\b\300UFf\307\"\0011\030\210\313#\250,\204\355\317kC2\255\351g2TL\313g\245\352p\244\332G\312\221\350\364<z'\257ri\261b\332((\304e"
 311      B4F5 1F7F 
 311      147E 2419 
 311      428D 5AF4 
 311      6208 C055 
 312 0a00 5015 AC91 	 .ascii "P\025\254\221\202K\343\365\265\005\360F\254\257\215V/\227\245"
 312      824B E3F5 
 312      B505 F046 
 312      ACAF 8D56 
 312      2F97 A5
 313 0a13 B8AE 530D 	 .ascii "\270\256S\rb\364+\347,\364.X\276`\326\034_m \270$\026\251\315"
 313      62F4 2BE7 
 313      2CF4 2E58 
 313      BE60 D61C 
 313      5F6D 20B8 
 314 0a2b 59B0 7CFE 	 .ascii "Y\260|\376\302\334P4\036\251\217\005\245\374\271\225D\216h8\020"
 314      C2DC 5034 
 314      1EA9 8F05 
 314      A5FC B995 
 314      448E 6838 
 315 0a40 9472 E756 	 .ascii "\224r\347VV\327/Y\"\305\212\310\253\352@\\b\275\341\213S\261"
 315      56D7 2F59 
 315      22C5 8AC8 
 315      ABEA 405C 
 315      62BD E18B 
 316 0a56 0BD8 BDEC 	 .ascii "\013\330\275\354\321G+\036\307\241\274PT\323\316\027\n\326F\253"
 316      D147 2B1E 
 316      C7A1 BC50 
 316      54D3 CE17 
 316      0AD6 46AB 
 317 0a6a 4275 7973 	 .ascii "Buys+5`\271\352\253H\275<\002\232\017\304\227\346\305\244\332"
 317      2B35 60B9 
 317      EAAB 48BD 
 317      3C02 9A0F 
 317      C497 E6C5 
 318 0a80 882C 4523 	 .ascii "\210,E#1\331\037\216\200f\244T\240\361!-z\325R\021\274zA\322"
 318      31D9 1F8E 
 318      8066 A454 
 318      A0F1 212D 
 318      7AD5 5211 
GAS LISTING  			page 25


 319 0a98 09FE 0F1A 	 .ascii "\t\376\017\032\322\324\214"
 319      D2D4 8C
 320               	 .text
 321               	 .section .gnu.lto_.symtab.289497c5fc10d8a0,"",@progbits
 322 0000 4E65 7447 	 .string "NetGetScratch"
 322      6574 5363 
 322      7261 7463 
 322      6800 
 323 000e 00        	 .string ""
 324 000f 00        	 .string ""
 325 0010 00        	 .string ""
 326 0011 00        	 .string ""
 327 0012 00        	 .string ""
 328 0013 00        	 .string ""
 329 0014 00        	 .string ""
 330 0015 00        	 .string ""
 331 0016 00        	 .string ""
 332 0017 00        	 .string ""
 333 0018 00        	 .string ""
 334 0019 C600      	 .string "\306"
 335 001b 00        	 .string ""
 336 001c 00        	 .string ""
 337 001d 7365 6E64 	 .string "send_etherlink_header"
 337      5F65 7468 
 337      6572 6C69 
 337      6E6B 5F68 
 337      6561 6465 
 338 0033 00        	 .string ""
 339 0034 00        	 .string ""
 340 0035 00        	 .string ""
 341 0036 00        	 .string ""
 342 0037 00        	 .string ""
 343 0038 00        	 .string ""
 344 0039 00        	 .string ""
 345 003a 00        	 .string ""
 346 003b 00        	 .string ""
 347 003c 00        	 .string ""
 348 003d 00        	 .string ""
 349 003e CA00      	 .string "\312"
 350 0040 00        	 .string ""
 351 0041 00        	 .string ""
 352 0042 6D61 6366 	 .string "macfrom"
 352      726F 6D00 
 353 004a 00        	 .string ""
 354 004b 0400      	 .string "\004"
 355 004d 0600      	 .string "\006"
 356 004f 00        	 .string ""
 357 0050 00        	 .string ""
 358 0051 00        	 .string ""
 359 0052 00        	 .string ""
 360 0053 00        	 .string ""
 361 0054 00        	 .string ""
 362 0055 1C01 00   	 .string "\034\001"
 363 0058 00        	 .string ""
 364 0059 7365 6E64 	 .string "send_ip_header"
 364      5F69 705F 
 364      6865 6164 
GAS LISTING  			page 26


 364      6572 00
 365 0068 00        	 .string ""
 366 0069 00        	 .string ""
 367 006a 00        	 .string ""
 368 006b 00        	 .string ""
 369 006c 00        	 .string ""
 370 006d 00        	 .string ""
 371 006e 00        	 .string ""
 372 006f 00        	 .string ""
 373 0070 00        	 .string ""
 374 0071 00        	 .string ""
 375 0072 00        	 .string ""
 376 0073 D500      	 .string "\325"
 377 0075 00        	 .string ""
 378 0076 00        	 .string ""
 379 0077 6963 6D70 	 .string "icmp_in"
 379      5F69 6E00 
 380 007f 00        	 .string ""
 381 0080 00        	 .string ""
 382 0081 00        	 .string ""
 383 0082 00        	 .string ""
 384 0083 00        	 .string ""
 385 0084 00        	 .string ""
 386 0085 00        	 .string ""
 387 0086 00        	 .string ""
 388 0087 00        	 .string ""
 389 0088 00        	 .string ""
 390 0089 00        	 .string ""
 391 008a 3101 00   	 .string "1\001"
 392 008d 00        	 .string ""
 393 008e 6970 736F 	 .string "ipsource"
 393      7572 6365 
 393      00
 394 0097 00        	 .string ""
 395 0098 0400      	 .string "\004"
 396 009a 0400      	 .string "\004"
 397 009c 00        	 .string ""
 398 009d 00        	 .string ""
 399 009e 00        	 .string ""
 400 009f 00        	 .string ""
 401 00a0 00        	 .string ""
 402 00a1 00        	 .string ""
 403 00a2 2001 00   	 .string " \001"
 404 00a5 00        	 .string ""
 405 00a6 6963 6D70 	 .string "icmp_out"
 405      5F6F 7574 
 405      00
 406 00af 00        	 .string ""
 407 00b0 00        	 .string ""
 408 00b1 00        	 .string ""
 409 00b2 00        	 .string ""
 410 00b3 00        	 .string ""
 411 00b4 00        	 .string ""
 412 00b5 00        	 .string ""
 413 00b6 00        	 .string ""
 414 00b7 00        	 .string ""
 415 00b8 00        	 .string ""
GAS LISTING  			page 27


 416 00b9 00        	 .string ""
 417 00ba 3501 00   	 .string "5\001"
 418 00bd 00        	 .string ""
 419 00be 7265 6D6F 	 .string "remoteport"
 419      7465 706F 
 419      7274 00
 420 00c9 00        	 .string ""
 421 00ca 0400      	 .string "\004"
 422 00cc 0200      	 .string "\002"
 423 00ce 00        	 .string ""
 424 00cf 00        	 .string ""
 425 00d0 00        	 .string ""
 426 00d1 00        	 .string ""
 427 00d2 00        	 .string ""
 428 00d3 00        	 .string ""
 429 00d4 3901 00   	 .string "9\001"
 430 00d7 00        	 .string ""
 431 00d8 6C6F 6361 	 .string "localport"
 431      6C70 6F72 
 431      7400 
 432 00e2 00        	 .string ""
 433 00e3 0400      	 .string "\004"
 434 00e5 0200      	 .string "\002"
 435 00e7 00        	 .string ""
 436 00e8 00        	 .string ""
 437 00e9 00        	 .string ""
 438 00ea 00        	 .string ""
 439 00eb 00        	 .string ""
 440 00ec 00        	 .string ""
 441 00ed 3B01 00   	 .string ";\001"
 442 00f0 00        	 .string ""
 443 00f1 6574 5F72 	 .string "et_receivecallback"
 443      6563 6569 
 443      7665 6361 
 443      6C6C 6261 
 443      636B 00
 444 0104 00        	 .string ""
 445 0105 00        	 .string ""
 446 0106 00        	 .string ""
 447 0107 00        	 .string ""
 448 0108 00        	 .string ""
 449 0109 00        	 .string ""
 450 010a 00        	 .string ""
 451 010b 00        	 .string ""
 452 010c 00        	 .string ""
 453 010d 00        	 .string ""
 454 010e 00        	 .string ""
 455 010f EE00      	 .string "\356"
 456 0111 00        	 .string ""
 457 0112 00        	 .string ""
 458 0113 5377 6974 	 .string "SwitchToBroadcast"
 458      6368 546F 
 458      4272 6F61 
 458      6463 6173 
 458      7400 
 459 0125 00        	 .string ""
 460 0126 00        	 .string ""
GAS LISTING  			page 28


 461 0127 00        	 .string ""
 462 0128 00        	 .string ""
 463 0129 00        	 .string ""
 464 012a 00        	 .string ""
 465 012b 00        	 .string ""
 466 012c 00        	 .string ""
 467 012d 00        	 .string ""
 468 012e 00        	 .string ""
 469 012f 00        	 .string ""
 470 0130 F500      	 .string "\365"
 471 0132 00        	 .string ""
 472 0133 00        	 .string ""
 473 0134 4554 7365 	 .string "ETsendplace"
 473      6E64 706C 
 473      6163 6500 
 474 0140 00        	 .string ""
 475 0141 0200      	 .string "\002"
 476 0143 00        	 .string ""
 477 0144 00        	 .string ""
 478 0145 00        	 .string ""
 479 0146 00        	 .string ""
 480 0147 00        	 .string ""
 481 0148 00        	 .string ""
 482 0149 00        	 .string ""
 483 014a 00        	 .string ""
 484 014b 2201 00   	 .string "\"\001"
 485 014e 00        	 .string ""
 486 014f 4554 6275 	 .string "ETbuffer"
 486      6666 6572 
 486      00
 487 0158 00        	 .string ""
 488 0159 0200      	 .string "\002"
 489 015b 00        	 .string ""
 490 015c 00        	 .string ""
 491 015d 00        	 .string ""
 492 015e 00        	 .string ""
 493 015f 00        	 .string ""
 494 0160 00        	 .string ""
 495 0161 00        	 .string ""
 496 0162 00        	 .string ""
 497 0163 2401 00   	 .string "$\001"
 498 0166 00        	 .string ""
 499 0167 7365 6E64 	 .string "sendbaseaddress"
 499      6261 7365 
 499      6164 6472 
 499      6573 7300 
 500 0177 00        	 .string ""
 501 0178 0200      	 .string "\002"
 502 017a 00        	 .string ""
 503 017b 00        	 .string ""
 504 017c 00        	 .string ""
 505 017d 00        	 .string ""
 506 017e 00        	 .string ""
 507 017f 00        	 .string ""
 508 0180 00        	 .string ""
 509 0181 00        	 .string ""
 510 0182 2801 00   	 .string "(\001"
GAS LISTING  			page 29


 511 0185 00        	 .string ""
 512 0186 4D79 4D41 	 .string "MyMAC"
 512      4300 
 513 018c 00        	 .string ""
 514 018d 0200      	 .string "\002"
 515 018f 00        	 .string ""
 516 0190 00        	 .string ""
 517 0191 00        	 .string ""
 518 0192 00        	 .string ""
 519 0193 00        	 .string ""
 520 0194 00        	 .string ""
 521 0195 00        	 .string ""
 522 0196 00        	 .string ""
 523 0197 1A01 00   	 .string "\032\001"
 524 019a 00        	 .string ""
 525 019b 4D79 4950 	 .string "MyIP"
 525      00
 526 01a0 00        	 .string ""
 527 01a1 0200      	 .string "\002"
 528 01a3 00        	 .string ""
 529 01a4 00        	 .string ""
 530 01a5 00        	 .string ""
 531 01a6 00        	 .string ""
 532 01a7 00        	 .string ""
 533 01a8 00        	 .string ""
 534 01a9 00        	 .string ""
 535 01aa 00        	 .string ""
 536 01ab 1E01 00   	 .string "\036\001"
 537 01ae 00        	 .string ""
 538 01af 4554 6368 	 .string "ETchecksum"
 538      6563 6B73 
 538      756D 00
 539 01ba 00        	 .string ""
 540 01bb 0200      	 .string "\002"
 541 01bd 00        	 .string ""
 542 01be 00        	 .string ""
 543 01bf 00        	 .string ""
 544 01c0 00        	 .string ""
 545 01c1 00        	 .string ""
 546 01c2 00        	 .string ""
 547 01c3 00        	 .string ""
 548 01c4 00        	 .string ""
 549 01c5 3301 00   	 .string "3\001"
 550 01c8 00        	 .string ""
 551 01c9 4D79 4D61 	 .string "MyMask"
 551      736B 00
 552 01d0 00        	 .string ""
 553 01d1 0200      	 .string "\002"
 554 01d3 00        	 .string ""
 555 01d4 00        	 .string ""
 556 01d5 00        	 .string ""
 557 01d6 00        	 .string ""
 558 01d7 00        	 .string ""
 559 01d8 00        	 .string ""
 560 01d9 00        	 .string ""
 561 01da 00        	 .string ""
 562 01db 3701 00   	 .string "7\001"
GAS LISTING  			page 30


 563 01de 00        	 .string ""
 564 01df 6574 5F78 	 .string "et_xmitpacket"
 564      6D69 7470 
 564      6163 6B65 
 564      7400 
 565 01ed 00        	 .string ""
 566 01ee 0200      	 .string "\002"
 567 01f0 00        	 .string ""
 568 01f1 00        	 .string ""
 569 01f2 00        	 .string ""
 570 01f3 00        	 .string ""
 571 01f4 00        	 .string ""
 572 01f5 00        	 .string ""
 573 01f6 00        	 .string ""
 574 01f7 00        	 .string ""
 575 01f8 F800      	 .string "\370"
 576 01fa 00        	 .string ""
 577 01fb 00        	 .string ""
 578 01fc 6574 5F70 	 .string "et_push16"
 578      7573 6831 
 578      3600 
 579 0206 00        	 .string ""
 580 0207 0200      	 .string "\002"
 581 0209 00        	 .string ""
 582 020a 00        	 .string ""
 583 020b 00        	 .string ""
 584 020c 00        	 .string ""
 585 020d 00        	 .string ""
 586 020e 00        	 .string ""
 587 020f 00        	 .string ""
 588 0210 00        	 .string ""
 589 0211 00        	 .string ""
 590 0212 0100      	 .string "\001"
 591 0214 00        	 .string ""
 592 0215 6574 5F70 	 .string "et_pushblob"
 592      7573 6862 
 592      6C6F 6200 
 593 0221 00        	 .string ""
 594 0222 0200      	 .string "\002"
 595 0224 00        	 .string ""
 596 0225 00        	 .string ""
 597 0226 00        	 .string ""
 598 0227 00        	 .string ""
 599 0228 00        	 .string ""
 600 0229 00        	 .string ""
 601 022a 00        	 .string ""
 602 022b 00        	 .string ""
 603 022c 0201 00   	 .string "\002\001"
 604 022f 00        	 .string ""
 605 0230 6574 5F70 	 .string "et_pop8"
 605      6F70 3800 
 606 0238 00        	 .string ""
 607 0239 0200      	 .string "\002"
 608 023b 00        	 .string ""
 609 023c 00        	 .string ""
 610 023d 00        	 .string ""
 611 023e 00        	 .string ""
GAS LISTING  			page 31


 612 023f 00        	 .string ""
 613 0240 00        	 .string ""
 614 0241 00        	 .string ""
 615 0242 00        	 .string ""
 616 0243 0901 00   	 .string "\t\001"
 617 0246 00        	 .string ""
 618 0247 6574 5F70 	 .string "et_popblob"
 618      6F70 626C 
 618      6F62 00
 619 0252 00        	 .string ""
 620 0253 0200      	 .string "\002"
 621 0255 00        	 .string ""
 622 0256 00        	 .string ""
 623 0257 00        	 .string ""
 624 0258 00        	 .string ""
 625 0259 00        	 .string ""
 626 025a 00        	 .string ""
 627 025b 00        	 .string ""
 628 025c 00        	 .string ""
 629 025d 0C01 00   	 .string "\f\001"
 630 0260 00        	 .string ""
 631 0261 6574 5F70 	 .string "et_pop16"
 631      6F70 3136 
 631      00
 632 026a 00        	 .string ""
 633 026b 0200      	 .string "\002"
 634 026d 00        	 .string ""
 635 026e 00        	 .string ""
 636 026f 00        	 .string ""
 637 0270 00        	 .string ""
 638 0271 00        	 .string ""
 639 0272 00        	 .string ""
 640 0273 00        	 .string ""
 641 0274 00        	 .string ""
 642 0275 1201 00   	 .string "\022\001"
 643 0278 00        	 .string ""
 644 0279 6574 5F73 	 .string "et_start_checksum"
 644      7461 7274 
 644      5F63 6865 
 644      636B 7375 
 644      6D00 
 645 028b 00        	 .string ""
 646 028c 0200      	 .string "\002"
 647 028e 00        	 .string ""
 648 028f 00        	 .string ""
 649 0290 00        	 .string ""
 650 0291 00        	 .string ""
 651 0292 00        	 .string ""
 652 0293 00        	 .string ""
 653 0294 00        	 .string ""
 654 0295 00        	 .string ""
 655 0296 1401 00   	 .string "\024\001"
 656 0299 00        	 .string ""
 657 029a 6574 5F64 	 .string "et_dumpbytes"
 657      756D 7062 
 657      7974 6573 
 657      00
GAS LISTING  			page 32


 658 02a7 00        	 .string ""
 659 02a8 0200      	 .string "\002"
 660 02aa 00        	 .string ""
 661 02ab 00        	 .string ""
 662 02ac 00        	 .string ""
 663 02ad 00        	 .string ""
 664 02ae 00        	 .string ""
 665 02af 00        	 .string ""
 666 02b0 00        	 .string ""
 667 02b1 00        	 .string ""
 668 02b2 1601 00   	 .string "\026\001"
 669 02b5 00        	 .string ""
 670 02b6 4861 6E64 	 .string "HandleTCP"
 670      6C65 5443 
 670      5000 
 671 02c0 00        	 .string ""
 672 02c1 0200      	 .string "\002"
 673 02c3 00        	 .string ""
 674 02c4 00        	 .string ""
 675 02c5 00        	 .string ""
 676 02c6 00        	 .string ""
 677 02c7 00        	 .string ""
 678 02c8 00        	 .string ""
 679 02c9 00        	 .string ""
 680 02ca 00        	 .string ""
 681 02cb 1801 00   	 .string "\030\001"
 682 02ce 00        	 .string ""
 683               	 .text
 684               	 .section .gnu.lto_.opts,"",@progbits
 685 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 685      6375 3D61 
 685      746D 6567 
 685      6133 3275 
 685      3227 2027 
 686               	 .text
 687               	 .cfi_sections .debug_frame
 689               	et_push8:
 690               	.LFB8:
 691               	 .file 1 "net_compat.h"
   1:net_compat.h  **** #ifndef _ENC424JCOMPAT_H
   2:net_compat.h  **** #define _ENC424JCOMPAT_H
   3:net_compat.h  **** 
   4:net_compat.h  **** //enc424j600 compat lib.
   5:net_compat.h  **** //We're using the IP library from AVRCraft... but we're using our own PHY+MAC
   6:net_compat.h  **** 
   7:net_compat.h  **** //TODO: Should probably use Timer1 (since we can't use Timer0)
   8:net_compat.h  **** //to make sure we send media detect pulses at the right points.
   9:net_compat.h  **** //Also, as a user, you cannot use the USI or Timer0
  10:net_compat.h  **** 
  11:net_compat.h  **** #include <stdint.h>
  12:net_compat.h  **** #include "eth_config.h"
  13:net_compat.h  **** 
  14:net_compat.h  **** void HandleUSB();
  15:net_compat.h  **** 
  16:net_compat.h  **** uint8_t IsSendBufferFree();
  17:net_compat.h  **** 
  18:net_compat.h  **** //You must define 'mymac'
GAS LISTING  			page 33


  19:net_compat.h  **** extern unsigned char MyMAC[6];
  20:net_compat.h  **** extern unsigned char ETbuffer[ETBUFFERSIZE];
  21:net_compat.h  **** extern unsigned short ETsendplace;
  22:net_compat.h  **** //For telling where the current transaction started.
  23:net_compat.h  **** extern uint16_t sendbaseaddress;
  24:net_compat.h  **** extern unsigned short ETchecksum;
  25:net_compat.h  **** 
  26:net_compat.h  **** //return 0 if OK, otherwise nonzero.
  27:net_compat.h  **** int8_t et_init( const unsigned char * macaddy );
  28:net_compat.h  **** 
  29:net_compat.h  **** int8_t et_xmitpacket( uint16_t start, uint16_t len );
  30:net_compat.h  **** 
  31:net_compat.h  **** //This waits for 8ms, sends an autoneg notice, then waits for 8 more ms.
  32:net_compat.h  **** //Ordinarily this would if packets were processed and still ned processing, but
  33:net_compat.h  **** //that doesn't make sense for this driver.  Do not put this in a loop unto itself.
  34:net_compat.h  **** unsigned short et_recvpack();
  35:net_compat.h  **** 
  36:net_compat.h  **** //You have to write this! (Or the underlying IP core must)
  37:net_compat.h  **** void et_receivecallback( uint16_t packetlen );
  38:net_compat.h  **** 
  39:net_compat.h  **** //Finish up any reading. 							//CLOSURE
  40:net_compat.h  **** static inline void et_finish_callback_now() { }
  41:net_compat.h  **** 
  42:net_compat.h  **** //Raw, on-wire pops. (assuming already in read)
  43:net_compat.h  **** void et_popblob( uint8_t * data, uint8_t len );
  44:net_compat.h  **** void et_dumpbytes( uint8_t len );
  45:net_compat.h  **** uint16_t et_pop16();
  46:net_compat.h  **** uint8_t et_pop8();
  47:net_compat.h  **** 
  48:net_compat.h  **** //Raw, on-wire push. (assuming already in write)
  49:net_compat.h  **** void et_pushpgmstr( const char * msg );
  50:net_compat.h  **** void et_pushstr( const char * msg );
  51:net_compat.h  **** void et_pushblob( const uint8_t * data, uint8_t len );
  52:net_compat.h  **** void et_pushpgmblob( const uint8_t * data, uint8_t len );
  53:net_compat.h  **** static inline void et_push8( uint8_t d ) { if (ETsendplace < ETBUFFERSIZE ) ETbuffer[ETsendplace++]
 692               	 .loc 1 53 0
 693               	 .cfi_startproc
 694               	.LVL0:
 695               	 
 696               	 
 697               	 
 698               	.L__stack_usage =0
 699               	 .loc 1 53 0
 700 0000 2091 0000 	 lds r18,ETsendplace
 701 0004 3091 0000 	 lds r19,ETsendplace+1
 702 0008 2F3F      	 cpi r18,-1
 703 000a 3105      	 cpc r19,__zero_reg__
 704 000c 01F0      	 breq .+2
 705 000e 00F4      	 brsh .L1
 706               	 .loc 1 53 0 is_stmt 0 discriminator 1
 707 0010 A901      	 movw r20,r18
 708 0012 4F5F      	 subi r20,-1
 709 0014 5F4F      	 sbci r21,-1
 710 0016 5093 0000 	 sts ETsendplace+1,r21
 711 001a 4093 0000 	 sts ETsendplace,r20
 712 001e F901      	 movw r30,r18
 713 0020 E050      	 subi r30,lo8(-(ETbuffer))
GAS LISTING  			page 34


 714 0022 F040      	 sbci r31,hi8(-(ETbuffer))
 715 0024 8083      	 st Z,r24
 716               	.L1:
 717 0026 0895      	 ret
 718               	 .cfi_endproc
 719               	.LFE8:
 722               	et_endsend:
 723               	.LFB12:
  54:net_compat.h  **** static inline void et_pushzeroes( uint8_t nrzeroes ) { while( nrzeroes-- ) et_push8(0); }
  55:net_compat.h  **** void et_push16( uint16_t v );
  56:net_compat.h  **** 
  57:net_compat.h  **** //Start a new send.									//OPENING
  58:net_compat.h  **** static inline void et_startsend( uint16_t start ) { sendbaseaddress = ETsendplace = start; }
  59:net_compat.h  **** 
  60:net_compat.h  **** static inline uint16_t et_get_write_length() { return ETsendplace - sendbaseaddress + 6; } //XXX: T
  61:net_compat.h  **** 
  62:net_compat.h  **** //End sending (calls xmitpacket with correct flags)	//CLOSURE
  63:net_compat.h  **** static inline void et_endsend() { et_xmitpacket( sendbaseaddress, ETsendplace - sendbaseaddress ); 
 724               	 .loc 1 63 0 is_stmt 1
 725               	 .cfi_startproc
 726               	 
 727               	 
 728               	 
 729               	.L__stack_usage =0
 730               	 .loc 1 63 0
 731 0028 8091 0000 	 lds r24,sendbaseaddress
 732 002c 9091 0000 	 lds r25,sendbaseaddress+1
 733 0030 6091 0000 	 lds r22,ETsendplace
 734 0034 7091 0000 	 lds r23,ETsendplace+1
 735 0038 681B      	 sub r22,r24
 736 003a 790B      	 sbc r23,r25
 737 003c 0C94 0000 	 jmp et_xmitpacket
 738               	.LVL1:
 739               	 .cfi_endproc
 740               	.LFE12:
 742               	.global NetGetScratch
 744               	NetGetScratch:
 745               	.LFB19:
 746               	 .file 2 "iparpetc.c"
   1:iparpetc.c    **** //Copyright 2012 Charles Lohr under the MIT/x11, newBSD, LGPL or GPL licenses.  You choose.
   2:iparpetc.c    **** 
   3:iparpetc.c    **** #include <avr/io.h>
   4:iparpetc.c    **** #include <avr/interrupt.h>
   5:iparpetc.c    **** #include <util/delay.h>
   6:iparpetc.c    **** #include <stdio.h>
   7:iparpetc.c    **** #include "iparpetc.h"
   8:iparpetc.c    **** #include "net_compat.h"
   9:iparpetc.c    **** #include <alloca.h>
  10:iparpetc.c    **** #include <string.h>
  11:iparpetc.c    **** #include <avr/pgmspace.h>
  12:iparpetc.c    **** #include <string.h>
  13:iparpetc.c    **** 
  14:iparpetc.c    **** unsigned long icmp_in = 0;
  15:iparpetc.c    **** unsigned long icmp_out = 0;
  16:iparpetc.c    **** 
  17:iparpetc.c    **** unsigned char macfrom[6];
  18:iparpetc.c    **** unsigned char ipsource[4];
GAS LISTING  			page 35


  19:iparpetc.c    **** unsigned short remoteport;
  20:iparpetc.c    **** unsigned short localport;
  21:iparpetc.c    **** static unsigned short iptotallen;
  22:iparpetc.c    **** static unsigned short i;  //For use within the scope of an in-file function, not out of that functi
  23:iparpetc.c    **** 
  24:iparpetc.c    **** #define POP et_pop8()
  25:iparpetc.c    **** #define POP16 et_pop16()
  26:iparpetc.c    **** #define POPB(x,s) et_popblob( x,s )
  27:iparpetc.c    **** 
  28:iparpetc.c    **** #define PUSH(x) et_push8(x)
  29:iparpetc.c    **** #define PUSH16(x) et_push16(x)
  30:iparpetc.c    **** #define PUSHB(x,s) et_pushblob(x,s)
  31:iparpetc.c    **** #define SIZEOFICMP 28
  32:iparpetc.c    **** 
  33:iparpetc.c    **** uint16_t NetGetScratch()
  34:iparpetc.c    **** {
 747               	 .loc 2 34 0
 748               	 .cfi_startproc
 749               	 
 750               	 
 751               	 
 752               	.L__stack_usage =0
  35:iparpetc.c    **** 	static uint8_t scratch = 0;
  36:iparpetc.c    **** 	scratch++;
 753               	 .loc 2 36 0
 754 0040 8091 0000 	 lds r24,scratch.2219
 755 0044 8F5F      	 subi r24,lo8(-(1))
  37:iparpetc.c    **** 	if( scratch == TX_SCRATCHES ) scratch = 0;
 756               	 .loc 2 37 0
 757 0046 8130      	 cpi r24,lo8(1)
 758 0048 01F0      	 breq .L6
  36:iparpetc.c    **** 	scratch++;
 759               	 .loc 2 36 0
 760 004a 8093 0000 	 sts scratch.2219,r24
 761 004e 00C0      	 rjmp .L7
 762               	.L6:
 763               	 .loc 2 37 0 discriminator 1
 764 0050 1092 0000 	 sts scratch.2219,__zero_reg__
 765               	.L7:
  38:iparpetc.c    **** 	return scratch * MAX_FRAMELEN;
  39:iparpetc.c    **** }
 766               	 .loc 2 39 0
 767 0054 80E0      	 ldi r24,0
 768 0056 9091 0000 	 lds r25,scratch.2219
 769 005a 0895      	 ret
 770               	 .cfi_endproc
 771               	.LFE19:
 773               	.global send_etherlink_header
 775               	send_etherlink_header:
 776               	.LFB20:
  40:iparpetc.c    **** 
  41:iparpetc.c    **** 
  42:iparpetc.c    **** #ifdef ENABLE_DHCP_CLIENT
  43:iparpetc.c    **** 
  44:iparpetc.c    **** #ifndef INCLUDE_UDP
  45:iparpetc.c    **** #error ERROR: You must have UDP support for DHCP support.
  46:iparpetc.c    **** #endif
GAS LISTING  			page 36


  47:iparpetc.c    **** 
  48:iparpetc.c    **** void RequestNewIP( uint8_t mode, uint8_t * negotiating_ip, uint8_t * dhcp_server );
  49:iparpetc.c    **** 
  50:iparpetc.c    **** uint8_t dhcp_clocking = 1;
  51:iparpetc.c    **** uint16_t dhcp_seconds_remain = 0;
  52:iparpetc.c    **** uint8_t dhcp_ticks_in_sec = 0;
  53:iparpetc.c    **** const char * DHCPName = 0;
  54:iparpetc.c    **** 
  55:iparpetc.c    **** void HandleDHCP( uint16_t len )
  56:iparpetc.c    **** {
  57:iparpetc.c    **** 	uint8_t tmpip[4];
  58:iparpetc.c    **** 	uint8_t tmp[4];
  59:iparpetc.c    **** 	uint8_t optionsleft = 48; //We only allow for up to 48 options
  60:iparpetc.c    **** 	uint8_t is_ack_packet = 0;
  61:iparpetc.c    **** 	uint16_t first4, second4;
  62:iparpetc.c    **** 
  63:iparpetc.c    **** 	POP16; //Clear out checksum
  64:iparpetc.c    **** 
  65:iparpetc.c    **** 	//Process DHCP!
  66:iparpetc.c    **** 	if( POP != 2 ) return; //Not a reply?
  67:iparpetc.c    **** 	if( POP != 1 ) return; //Not Ethernet?
  68:iparpetc.c    **** 	POP16; //size of packets + Hops
  69:iparpetc.c    **** 
  70:iparpetc.c    **** 	//Make sure transaction IDs match.
  71:iparpetc.c    **** 	et_popblob( tmp, 4 );
  72:iparpetc.c    **** 	if( strncmp( tmp, MyMAC, 4 ) != 0 )
  73:iparpetc.c    **** 	{
  74:iparpetc.c    **** 		//Not our request?
  75:iparpetc.c    **** 		return;
  76:iparpetc.c    **** 	}
  77:iparpetc.c    **** 
  78:iparpetc.c    **** 	et_dumpbytes( 8 ); //time elapsed + bootpflags + Client IP address
  79:iparpetc.c    **** 
  80:iparpetc.c    **** 	et_popblob( tmpip, 4 );	//MY IP ADDRESS!!!	
  81:iparpetc.c    **** 	
  82:iparpetc.c    **** 	et_dumpbytes( 0x18 + 0xc0 ); //Next IP + Relay IP + Mac + Padding + server name + boot name
  83:iparpetc.c    **** 
  84:iparpetc.c    **** 	first4 = POP16;
  85:iparpetc.c    **** 	second4 = POP16;
  86:iparpetc.c    **** 
  87:iparpetc.c    **** 	if( first4 != 0x6382 || second4 != 0x5363 )
  88:iparpetc.c    **** 	{
  89:iparpetc.c    **** 		return;
  90:iparpetc.c    **** 	}
  91:iparpetc.c    **** 
  92:iparpetc.c    **** 	//Ok, we know we have a valid DHCP packet.
  93:iparpetc.c    **** 
  94:iparpetc.c    **** 	//We dont want to get stuck, so we will eventually bail if we have an issue pasrsing.
  95:iparpetc.c    **** 	while( optionsleft-- )
  96:iparpetc.c    **** 	{
  97:iparpetc.c    **** 		uint8_t option = POP;
  98:iparpetc.c    **** 		uint8_t length = POP;
  99:iparpetc.c    **** 
 100:iparpetc.c    **** 		switch(option)
 101:iparpetc.c    **** 		{
 102:iparpetc.c    **** 		case 0x35: //DHCP Message Type
 103:iparpetc.c    **** 		{
GAS LISTING  			page 37


 104:iparpetc.c    **** 			if( length < 1 ) return;
 105:iparpetc.c    **** 			uint8_t rqt = POP;
 106:iparpetc.c    **** 
 107:iparpetc.c    **** 			if( rqt == 0x02 ) 
 108:iparpetc.c    **** 			{
 109:iparpetc.c    **** 				//We have an offer, extend a request.
 110:iparpetc.c    **** 				//We will ignore the rest of the packet.
 111:iparpetc.c    **** 				et_finish_callback_now();
 112:iparpetc.c    **** 				RequestNewIP( 3, tmpip, ipsource );  //Request
 113:iparpetc.c    **** 				return;
 114:iparpetc.c    **** 			}
 115:iparpetc.c    **** 			else if( rqt == 0x05 ) // We received an ack, accept it.
 116:iparpetc.c    **** 			{
 117:iparpetc.c    **** 				//IP Is valid.
 118:iparpetc.c    **** 				is_ack_packet = 1;
 119:iparpetc.c    **** 				if( 0 == dhcp_seconds_remain )
 120:iparpetc.c    **** 					dhcp_seconds_remain = 0xffff;
 121:iparpetc.c    **** 				memcpy( MyIP, tmpip, 4 );
 122:iparpetc.c    **** 			}
 123:iparpetc.c    **** 
 124:iparpetc.c    **** 			length--;
 125:iparpetc.c    **** 			break;
 126:iparpetc.c    **** 		}
 127:iparpetc.c    **** 		case 0x3a: //Renewal time
 128:iparpetc.c    **** 		{
 129:iparpetc.c    **** 			if( length < 4 || !is_ack_packet ) break;
 130:iparpetc.c    **** 			first4 = POP16;
 131:iparpetc.c    **** 			second4 = POP16;
 132:iparpetc.c    **** //			printf( "LEASE TIME: %d %d\n", first4, second4 );
 133:iparpetc.c    **** 			if( first4 )
 134:iparpetc.c    **** 			{
 135:iparpetc.c    **** 				dhcp_seconds_remain = 0xffff;
 136:iparpetc.c    **** 			}
 137:iparpetc.c    **** 			else
 138:iparpetc.c    **** 			{
 139:iparpetc.c    **** 				dhcp_seconds_remain = second4;
 140:iparpetc.c    **** 			}
 141:iparpetc.c    **** 
 142:iparpetc.c    **** 			length -= 4;
 143:iparpetc.c    **** 			break;
 144:iparpetc.c    **** 		}
 145:iparpetc.c    **** 		case 0x01: //Subnet mask
 146:iparpetc.c    **** 		{
 147:iparpetc.c    **** 			if( length < 4 || !is_ack_packet ) break;
 148:iparpetc.c    **** 			et_popblob( MyMask, 4 );
 149:iparpetc.c    **** 			length -= 4;
 150:iparpetc.c    **** 			break;
 151:iparpetc.c    **** 		}
 152:iparpetc.c    **** 		case 0x03: //Router mask
 153:iparpetc.c    **** 		{
 154:iparpetc.c    **** 			if( length < 4 || !is_ack_packet ) break;
 155:iparpetc.c    **** 			et_popblob( MyGateway, 4 );
 156:iparpetc.c    **** 			length -= 4;
 157:iparpetc.c    **** 			break;
 158:iparpetc.c    **** 		}
 159:iparpetc.c    **** 		case 0xff:  //End of list.
 160:iparpetc.c    **** 			et_finish_callback_now();
GAS LISTING  			page 38


 161:iparpetc.c    **** 			if( is_ack_packet )
 162:iparpetc.c    **** 				GotDHCPLease();
 163:iparpetc.c    **** 			return; 
 164:iparpetc.c    **** 		case 0x42: //Time server
 165:iparpetc.c    **** 		case 0x06: //DNS server
 166:iparpetc.c    **** 		default:
 167:iparpetc.c    **** 			break;
 168:iparpetc.c    **** 		}
 169:iparpetc.c    **** 		et_dumpbytes( length );
 170:iparpetc.c    **** 	}
 171:iparpetc.c    **** }
 172:iparpetc.c    **** 
 173:iparpetc.c    **** void SetupDHCPName( const char * name  )
 174:iparpetc.c    **** {
 175:iparpetc.c    **** 	DHCPName = name;
 176:iparpetc.c    **** }
 177:iparpetc.c    **** 
 178:iparpetc.c    **** void TickDHCP()
 179:iparpetc.c    **** {
 180:iparpetc.c    **** 	if( dhcp_ticks_in_sec++ < DHCP_TICKS_PER_SECOND )
 181:iparpetc.c    **** 	{
 182:iparpetc.c    **** 		return;
 183:iparpetc.c    **** 	}
 184:iparpetc.c    **** 
 185:iparpetc.c    **** 	dhcp_ticks_in_sec = 0;
 186:iparpetc.c    **** //		sendhex4( dhcp_seconds_remain );
 187:iparpetc.c    **** 
 188:iparpetc.c    **** 	if( dhcp_seconds_remain == 0 )
 189:iparpetc.c    **** 	{
 190:iparpetc.c    **** 		//No DHCP received yet.
 191:iparpetc.c    **** 		if( dhcp_clocking == 250 ) dhcp_clocking = 0;
 192:iparpetc.c    **** 		dhcp_clocking++;
 193:iparpetc.c    **** 		RequestNewIP( 1, MyIP, 0 );
 194:iparpetc.c    **** 	}
 195:iparpetc.c    **** 	else
 196:iparpetc.c    **** 	{
 197:iparpetc.c    **** 		dhcp_seconds_remain--;
 198:iparpetc.c    **** 	}
 199:iparpetc.c    **** }
 200:iparpetc.c    **** 
 201:iparpetc.c    **** //Mode = 1 for discover, Mode = 3 for request - if discover, dhcp_server should be 0.
 202:iparpetc.c    **** void RequestNewIP( uint8_t mode, uint8_t * negotiating_ip, uint8_t * dhcp_server )
 203:iparpetc.c    **** {
 204:iparpetc.c    **** 	uint8_t oldip[4];
 205:iparpetc.c    **** 	SwitchToBroadcast();
 206:iparpetc.c    **** 
 207:iparpetc.c    **** 	et_stopop();
 208:iparpetc.c    **** 	et_startsend( NetGetScratch() );
 209:iparpetc.c    **** 	send_etherlink_header( 0x0800 );
 210:iparpetc.c    **** 
 211:iparpetc.c    **** 	//Tricky - backup our IP - we want to spoof it to 0.0.0.0
 212:iparpetc.c    **** 	memcpy( oldip, MyIP, 4 );
 213:iparpetc.c    **** 	MyIP[0] = 0; MyIP[1] = 0; MyIP[2] = 0; MyIP[3] = 0;
 214:iparpetc.c    **** 	send_ip_header( 0, "\xff\xff\xff\xff", 17 ); //UDP Packet to 255.255.255.255
 215:iparpetc.c    **** 	memcpy( MyIP, oldip, 4 );
 216:iparpetc.c    **** 	
 217:iparpetc.c    **** /*
GAS LISTING  			page 39


 218:iparpetc.c    **** 	et_push16( 68 );  //From bootpc
 219:iparpetc.c    **** 	et_push16( 67 );  //To bootps
 220:iparpetc.c    **** 	et_push16( 0 ); //length for later
 221:iparpetc.c    **** 	et_push16( 0 ); //csum for later
 222:iparpetc.c    **** 
 223:iparpetc.c    **** 	//Payload of BOOTP packet.
 224:iparpetc.c    **** 	//	1, //Bootp request
 225:iparpetc.c    **** 	//	1, //Ethernet
 226:iparpetc.c    **** 	et_push16( 0x0101 );
 227:iparpetc.c    **** 	//	6, //MAC Length
 228:iparpetc.c    **** 	//	0, //Hops
 229:iparpetc.c    **** 	et_push16( 0x0600 );
 230:iparpetc.c    **** */
 231:iparpetc.c    **** 	et_pushpgmblob( PSTR("\x00\x44\x00\x43\x00\x00\x00\x00\x01\x01\x06"), 12 ); //NOTE: Last digit is 
 232:iparpetc.c    **** 
 233:iparpetc.c    **** 	et_pushblob( MyMAC, 4 );
 234:iparpetc.c    **** 
 235:iparpetc.c    **** 	et_push16( dhcp_clocking ); //seconds
 236:iparpetc.c    **** 	et_pushzeroes( 10 ); //unicast, CLIADDR, YIADDR
 237:iparpetc.c    **** 	if( dhcp_server )
 238:iparpetc.c    **** 		et_pushblob( dhcp_server, 4 );
 239:iparpetc.c    **** 	else
 240:iparpetc.c    **** 		et_pushzeroes( 4 );
 241:iparpetc.c    **** 	et_pushzeroes( 4 ); //GIADDR IP
 242:iparpetc.c    **** 	et_pushblob( MyMAC, 6 ); //client mac
 243:iparpetc.c    **** 	et_pushzeroes( 10 + 0x40 + 0x80 ); //padding + Server Host Name
 244:iparpetc.c    **** 	et_push16( 0x6382 ); //DHCP Magic Cookie
 245:iparpetc.c    **** 	et_push16( 0x5363 );
 246:iparpetc.c    **** 
 247:iparpetc.c    **** 	//Now we are on our DHCP portion
 248:iparpetc.c    **** 	et_push8( 0x35 );  //DHCP Message Type
 249:iparpetc.c    **** 	et_push16( 0x0100 | mode );
 250:iparpetc.c    **** 
 251:iparpetc.c    **** 	{
 252:iparpetc.c    **** 		et_push16( 0x3204 ); //Requested IP address. (4 length)
 253:iparpetc.c    **** 		et_pushblob( negotiating_ip, 4 );
 254:iparpetc.c    **** 	}
 255:iparpetc.c    **** 
 256:iparpetc.c    **** 	if( dhcp_server ) //request
 257:iparpetc.c    **** 	{
 258:iparpetc.c    **** 		et_push16( 0x3604 );
 259:iparpetc.c    **** 		et_pushblob( dhcp_server, 4 );
 260:iparpetc.c    **** 	}
 261:iparpetc.c    **** 
 262:iparpetc.c    **** 	if( DHCPName )
 263:iparpetc.c    **** 	{
 264:iparpetc.c    **** 		uint8_t namelen = strlen( DHCPName );
 265:iparpetc.c    **** 		et_push8( 0x0c ); //Name
 266:iparpetc.c    **** 		et_push8( namelen );
 267:iparpetc.c    **** 		et_pushblob( DHCPName, namelen );
 268:iparpetc.c    **** 	}
 269:iparpetc.c    **** 
 270:iparpetc.c    **** 	et_push16( 0x3702 ); //Parameter request list
 271:iparpetc.c    **** 	et_push16( 0x0103 ); //subnet mask, router
 272:iparpetc.c    **** //	et_push16( 0x2a06 ); //NTP server, DNS server  (We don't use either NTP or DNS)
 273:iparpetc.c    **** 	et_push8( 0xff ); //End option
 274:iparpetc.c    **** 
GAS LISTING  			page 40


 275:iparpetc.c    **** 	et_pushzeroes( 32 ); //Padding
 276:iparpetc.c    **** 
 277:iparpetc.c    **** 	util_finish_udp_packet();
 278:iparpetc.c    **** }
 279:iparpetc.c    **** 
 280:iparpetc.c    **** #endif
 281:iparpetc.c    **** 
 282:iparpetc.c    **** 
 283:iparpetc.c    **** void send_etherlink_header( unsigned short type )
 284:iparpetc.c    **** {
 777               	 .loc 2 284 0
 778               	 .cfi_startproc
 779               	.LVL2:
 780 005c CF93      	 push r28
 781               	.LCFI0:
 782               	 .cfi_def_cfa_offset 3
 783               	 .cfi_offset 28,-2
 784 005e DF93      	 push r29
 785               	.LCFI1:
 786               	 .cfi_def_cfa_offset 4
 787               	 .cfi_offset 29,-3
 788               	 
 789               	 
 790               	 
 791               	.L__stack_usage =2
 792 0060 EC01      	 movw r28,r24
 285:iparpetc.c    **** 	PUSHB( macfrom, 6 );
 793               	 .loc 2 285 0
 794 0062 66E0      	 ldi r22,lo8(6)
 795 0064 80E0      	 ldi r24,lo8(macfrom)
 796 0066 90E0      	 ldi r25,hi8(macfrom)
 797               	.LVL3:
 798 0068 0E94 0000 	 call et_pushblob
 799               	.LVL4:
 286:iparpetc.c    **** 
 287:iparpetc.c    **** // The mac does this for us.
 288:iparpetc.c    **** 	PUSHB( MyMAC, 6 );
 800               	 .loc 2 288 0
 801 006c 66E0      	 ldi r22,lo8(6)
 802 006e 80E0      	 ldi r24,lo8(MyMAC)
 803 0070 90E0      	 ldi r25,hi8(MyMAC)
 804 0072 0E94 0000 	 call et_pushblob
 805               	.LVL5:
 289:iparpetc.c    **** 
 290:iparpetc.c    **** 	PUSH16( type );
 806               	 .loc 2 290 0
 807 0076 CE01      	 movw r24,r28
 808               	 
 291:iparpetc.c    **** }
 809               	 .loc 2 291 0
 810 0078 DF91      	 pop r29
 811 007a CF91      	 pop r28
 812               	.LVL6:
 290:iparpetc.c    **** 	PUSH16( type );
 813               	 .loc 2 290 0
 814 007c 0C94 0000 	 jmp et_push16
 815               	.LVL7:
GAS LISTING  			page 41


 816               	 .cfi_endproc
 817               	.LFE20:
 819               	.global send_ip_header
 821               	send_ip_header:
 822               	.LFB21:
 292:iparpetc.c    **** 
 293:iparpetc.c    **** void send_ip_header( unsigned short totallen, const unsigned char * to, unsigned char proto )
 294:iparpetc.c    **** {
 823               	 .loc 2 294 0
 824               	 .cfi_startproc
 825               	.LVL8:
 826 0080 EF92      	 push r14
 827               	.LCFI2:
 828               	 .cfi_def_cfa_offset 3
 829               	 .cfi_offset 14,-2
 830 0082 FF92      	 push r15
 831               	.LCFI3:
 832               	 .cfi_def_cfa_offset 4
 833               	 .cfi_offset 15,-3
 834 0084 0F93      	 push r16
 835               	.LCFI4:
 836               	 .cfi_def_cfa_offset 5
 837               	 .cfi_offset 16,-4
 838 0086 1F93      	 push r17
 839               	.LCFI5:
 840               	 .cfi_def_cfa_offset 6
 841               	 .cfi_offset 17,-5
 842 0088 CF93      	 push r28
 843               	.LCFI6:
 844               	 .cfi_def_cfa_offset 7
 845               	 .cfi_offset 28,-6
 846 008a DF93      	 push r29
 847               	.LCFI7:
 848               	 .cfi_def_cfa_offset 8
 849               	 .cfi_offset 29,-7
 850 008c 1F92      	 push __zero_reg__
 851               	.LCFI8:
 852               	 .cfi_def_cfa_offset 9
 853 008e CDB7      	 in r28,__SP_L__
 854 0090 DEB7      	 in r29,__SP_H__
 855               	.LCFI9:
 856               	 .cfi_def_cfa_register 28
 857               	 
 858               	 
 859               	 
 860               	.L__stack_usage =7
 861 0092 7C01      	 movw r14,r24
 862 0094 8B01      	 movw r16,r22
 295:iparpetc.c    **** /*
 296:iparpetc.c    **** 	//This uses about 50 bytes less of flash, but 12 bytes more of ram.  You can choose that tradeoff.
 297:iparpetc.c    **** 	static unsigned char data[] = { 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 64, 0x00, 0x00, 0x
 298:iparpetc.c    **** 	data[2] = totallen >> 8;
 299:iparpetc.c    **** 	data[3] = totallen & 0xFF;
 300:iparpetc.c    **** 	data[9] = proto;
 301:iparpetc.c    **** 	PUSHB( data, 12 );
 302:iparpetc.c    **** */
 303:iparpetc.c    **** 
GAS LISTING  			page 42


 304:iparpetc.c    **** 	PUSH16( 0x4500 );
 863               	 .loc 2 304 0
 864 0096 80E0      	 ldi r24,0
 865 0098 95E4      	 ldi r25,lo8(69)
 866               	.LVL9:
 867 009a 4983      	 std Y+1,r20
 868 009c 0E94 0000 	 call et_push16
 869               	.LVL10:
 305:iparpetc.c    **** 	PUSH16( totallen );
 870               	 .loc 2 305 0
 871 00a0 C701      	 movw r24,r14
 872 00a2 0E94 0000 	 call et_push16
 873               	.LVL11:
 306:iparpetc.c    **** 
 307:iparpetc.c    **** 	PUSH16( 0x0000 ); //ID
 874               	 .loc 2 307 0
 875 00a6 80E0      	 ldi r24,0
 876 00a8 90E0      	 ldi r25,0
 877 00aa 0E94 0000 	 call et_push16
 878               	.LVL12:
 308:iparpetc.c    **** 	PUSH16( 0x4000 ); //Don't frgment, no fragment offset
 879               	 .loc 2 308 0
 880 00ae 80E0      	 ldi r24,0
 881 00b0 90E4      	 ldi r25,lo8(64)
 882 00b2 0E94 0000 	 call et_push16
 883               	.LVL13:
 309:iparpetc.c    **** 
 310:iparpetc.c    **** 	PUSH( 64 ); // TTL
 884               	 .loc 2 310 0
 885 00b6 80E4      	 ldi r24,lo8(64)
 886 00b8 0E94 0000 	 call et_push8
 887               	.LVL14:
 311:iparpetc.c    **** 	PUSH( proto ); // protocol
 888               	 .loc 2 311 0
 889 00bc 4981      	 ldd r20,Y+1
 890 00be 842F      	 mov r24,r20
 891 00c0 0E94 0000 	 call et_push8
 892               	.LVL15:
 312:iparpetc.c    **** 
 313:iparpetc.c    **** 	PUSH16( 0 ); //Checksum
 893               	 .loc 2 313 0
 894 00c4 80E0      	 ldi r24,0
 895 00c6 90E0      	 ldi r25,0
 896 00c8 0E94 0000 	 call et_push16
 897               	.LVL16:
 314:iparpetc.c    **** 
 315:iparpetc.c    **** 	PUSHB( MyIP, 4 );
 898               	 .loc 2 315 0
 899 00cc 64E0      	 ldi r22,lo8(4)
 900 00ce 80E0      	 ldi r24,lo8(MyIP)
 901 00d0 90E0      	 ldi r25,hi8(MyIP)
 902 00d2 0E94 0000 	 call et_pushblob
 903               	.LVL17:
 316:iparpetc.c    **** 	PUSHB( to, 4 );
 904               	 .loc 2 316 0
 905 00d6 64E0      	 ldi r22,lo8(4)
 906 00d8 C801      	 movw r24,r16
GAS LISTING  			page 43


 907               	 
 317:iparpetc.c    **** }
 908               	 .loc 2 317 0
 909 00da 0F90      	 pop __tmp_reg__
 910 00dc DF91      	 pop r29
 911 00de CF91      	 pop r28
 912 00e0 1F91      	 pop r17
 913 00e2 0F91      	 pop r16
 914               	.LVL18:
 915 00e4 FF90      	 pop r15
 916 00e6 EF90      	 pop r14
 917               	.LVL19:
 316:iparpetc.c    **** 	PUSHB( to, 4 );
 918               	 .loc 2 316 0
 919 00e8 0C94 0000 	 jmp et_pushblob
 920               	.LVL20:
 921               	 .cfi_endproc
 922               	.LFE21:
 924               	.global et_receivecallback
 926               	et_receivecallback:
 927               	.LFB24:
 318:iparpetc.c    **** 
 319:iparpetc.c    **** 
 320:iparpetc.c    **** static void HandleICMP()
 321:iparpetc.c    **** {
 322:iparpetc.c    **** 	unsigned short id;
 323:iparpetc.c    **** 	unsigned short seqnum;
 324:iparpetc.c    **** 	unsigned char type;
 325:iparpetc.c    **** 	unsigned short payloadsize = iptotallen - SIZEOFICMP;
 326:iparpetc.c    **** 
 327:iparpetc.c    **** 	unsigned short payload_from_start, payload_dest_start;
 328:iparpetc.c    **** 
 329:iparpetc.c    **** 	icmp_in++;
 330:iparpetc.c    **** 
 331:iparpetc.c    **** 	type = POP;
 332:iparpetc.c    **** 	POP; //code
 333:iparpetc.c    **** 	POP16; //Checksum
 334:iparpetc.c    **** 
 335:iparpetc.c    **** 
 336:iparpetc.c    **** 	switch( type )
 337:iparpetc.c    **** 	{
 338:iparpetc.c    **** #ifdef PING_CLIENT_SUPPORT
 339:iparpetc.c    **** 	case 0: //Response
 340:iparpetc.c    **** {
 341:iparpetc.c    **** 		uint16_t id;
 342:iparpetc.c    **** 
 343:iparpetc.c    **** 		id = POP16;
 344:iparpetc.c    **** 		if( id < PING_RESPONSES_SIZE )
 345:iparpetc.c    **** 		{
 346:iparpetc.c    **** 			ClientPingEntries[id].last_recv_seqnum = POP16; //Seqnum
 347:iparpetc.c    **** 		}
 348:iparpetc.c    **** 		et_stopop();
 349:iparpetc.c    **** 
 350:iparpetc.c    **** 		et_finish_callback_now();
 351:iparpetc.c    **** }
 352:iparpetc.c    **** 		break;
 353:iparpetc.c    **** #endif
GAS LISTING  			page 44


 354:iparpetc.c    **** 
 355:iparpetc.c    **** 	case 8: //ping request
 356:iparpetc.c    **** 
 357:iparpetc.c    **** 		//Tricky: We would ordinarily POPB to read out the payload, but we're using
 358:iparpetc.c    **** 		//the DMA engine to copy that data.
 359:iparpetc.c    **** 		//	POPB( payload, payloadsize );
 360:iparpetc.c    **** 		//Suspend reading for now (but don't allow over-writing of the data)
 361:iparpetc.c    **** 
 362:iparpetc.c    **** //		printf( "PING: %d\n", payloadsize );
 363:iparpetc.c    **** #ifndef NOCOPY_MAC
 364:iparpetc.c    **** 		et_stopop();
 365:iparpetc.c    **** 		payload_from_start = et_read_ctrl_reg16( EERXRDPTL );
 366:iparpetc.c    **** #endif
 367:iparpetc.c    **** 		et_startsend( NetGetScratch() );
 368:iparpetc.c    **** 		send_etherlink_header( 0x0800 );
 369:iparpetc.c    **** 		send_ip_header( iptotallen, ipsource, 0x01 );
 370:iparpetc.c    **** 
 371:iparpetc.c    **** 		PUSH16( 0 ); //ping reply + code
 372:iparpetc.c    **** 		PUSH16( 0 ); //Checksum
 373:iparpetc.c    **** 	//	PUSH16( id );
 374:iparpetc.c    **** 	//	PUSH16( seqnum );
 375:iparpetc.c    **** 
 376:iparpetc.c    **** 		//Packet confiugred.  Need to copy payload.
 377:iparpetc.c    **** 		//Ordinarily, we'd PUSHB for the payload, but we're currently using the DMA engine for our work h
 378:iparpetc.c    **** 
 379:iparpetc.c    **** #ifdef NOCOPY_MAC
 380:iparpetc.c    **** 		payloadsize += 4;
 381:iparpetc.c    **** 		while( payloadsize-- )
 382:iparpetc.c    **** 			PUSH( POP );
 383:iparpetc.c    **** #else
 384:iparpetc.c    **** 		et_stopop();
 385:iparpetc.c    **** 		payload_dest_start = et_read_ctrl_reg16( EEGPWRPTL );
 386:iparpetc.c    **** 
 387:iparpetc.c    **** 		//+4 = id + seqnum (we're DMAing that, too)
 388:iparpetc.c    **** 		et_copy_memory( payload_dest_start, payload_from_start, payloadsize + 4, RX_BUFFER_START, RX_BUFF
 389:iparpetc.c    **** 		et_write_ctrl_reg16( EEGPWRPTL, payload_dest_start + payloadsize + 4 );
 390:iparpetc.c    **** #endif
 391:iparpetc.c    **** 		et_finish_callback_now();
 392:iparpetc.c    **** 
 393:iparpetc.c    **** 		//Calculate header and ICMP checksums
 394:iparpetc.c    **** 		et_start_checksum( 8+6, 20 );
 395:iparpetc.c    **** 		unsigned short ppl = et_get_checksum();
 396:iparpetc.c    **** 		et_start_checksum( 28+6, payloadsize + 8 );
 397:iparpetc.c    **** 		et_alter_word( 18+6, ppl );
 398:iparpetc.c    **** 		ppl = et_get_checksum();
 399:iparpetc.c    **** 		et_alter_word( 30+6, ppl );
 400:iparpetc.c    **** 
 401:iparpetc.c    **** 		et_endsend();
 402:iparpetc.c    **** 
 403:iparpetc.c    **** 
 404:iparpetc.c    **** 
 405:iparpetc.c    **** 		icmp_out++;
 406:iparpetc.c    **** 
 407:iparpetc.c    **** 		break;
 408:iparpetc.c    **** 	}
 409:iparpetc.c    **** 
 410:iparpetc.c    **** }
GAS LISTING  			page 45


 411:iparpetc.c    **** 
 412:iparpetc.c    **** 
 413:iparpetc.c    **** static void HandleArp( )
 414:iparpetc.c    **** {
 415:iparpetc.c    **** 	unsigned char sendermac_ip_and_targetmac[16];
 416:iparpetc.c    **** //	unsigned char senderip[10]; //Actually sender ip + target mac, put in one to shrink code.
 417:iparpetc.c    **** 
 418:iparpetc.c    **** 	unsigned short proto;
 419:iparpetc.c    **** 	unsigned char opcode;
 420:iparpetc.c    **** //	unsigned char ipproto;
 421:iparpetc.c    **** 
 422:iparpetc.c    **** 	POP16; //Hardware type
 423:iparpetc.c    **** 	proto = POP16;
 424:iparpetc.c    **** 	POP16; //hwsize, protosize
 425:iparpetc.c    **** 	opcode = POP16;  //XXX: This includes "code" as well, it seems.
 426:iparpetc.c    **** 
 427:iparpetc.c    **** 	switch( opcode )
 428:iparpetc.c    **** 	{
 429:iparpetc.c    **** 	case 1:	//Request
 430:iparpetc.c    **** {
 431:iparpetc.c    **** 		unsigned char match;
 432:iparpetc.c    **** 
 433:iparpetc.c    **** 		POPB( sendermac_ip_and_targetmac, 16 );
 434:iparpetc.c    **** 
 435:iparpetc.c    **** 		match = 1;
 436:iparpetc.c    **** //sendhex2( 0xff );
 437:iparpetc.c    **** 
 438:iparpetc.c    **** 		//Target IP (check for copy)
 439:iparpetc.c    **** 		for( i = 0; i < 4; i++ )
 440:iparpetc.c    **** 			if( POP != MyIP[i] )
 441:iparpetc.c    **** 				match = 0;
 442:iparpetc.c    **** 
 443:iparpetc.c    **** 		if( match == 0 )
 444:iparpetc.c    **** 			return;
 445:iparpetc.c    **** 
 446:iparpetc.c    **** 		//We must send a response, so we termiante the packet now.
 447:iparpetc.c    **** 		et_finish_callback_now();
 448:iparpetc.c    **** 
 449:iparpetc.c    **** 		et_startsend( NetGetScratch() );
 450:iparpetc.c    **** 		send_etherlink_header( 0x0806 );
 451:iparpetc.c    **** 
 452:iparpetc.c    **** 		PUSH16( 0x0001 ); //Ethernet
 453:iparpetc.c    **** 		PUSH16( proto );  //Protocol
 454:iparpetc.c    **** 		PUSH16( 0x0604 ); //HW size, Proto size
 455:iparpetc.c    **** 		PUSH16( 0x0002 ); //Reply
 456:iparpetc.c    **** 
 457:iparpetc.c    **** 		PUSHB( MyMAC, 6 );
 458:iparpetc.c    **** 		PUSHB( MyIP, 4 );
 459:iparpetc.c    **** 		PUSHB( sendermac_ip_and_targetmac, 10 ); // do not send target mac.
 460:iparpetc.c    **** 
 461:iparpetc.c    **** 		et_endsend();
 462:iparpetc.c    **** 
 463:iparpetc.c    **** //		sendstr( "have match!\n" );
 464:iparpetc.c    **** 
 465:iparpetc.c    **** 		break;
 466:iparpetc.c    **** }
 467:iparpetc.c    **** #ifdef ARP_CLIENT_SUPPORT
GAS LISTING  			page 46


 468:iparpetc.c    **** 	case 2: //ARP Reply
 469:iparpetc.c    **** {
 470:iparpetc.c    **** 		uint8_t sender_mac_and_ip_and_comp_mac[16];
 471:iparpetc.c    **** 		POPB( sender_mac_and_ip_and_comp_mac, 16 );
 472:iparpetc.c    **** 		et_finish_callback_now();
 473:iparpetc.c    **** 
 474:iparpetc.c    **** 
 475:iparpetc.c    **** 		//First, make sure that we're the ones who are supposed to receive the ARP.
 476:iparpetc.c    **** 		for( i = 0; i < 6; i++ )
 477:iparpetc.c    **** 		{
 478:iparpetc.c    **** 			if( sender_mac_and_ip_and_comp_mac[i+10] != MyMAC[i] )
 479:iparpetc.c    **** 				break;
 480:iparpetc.c    **** 		}
 481:iparpetc.c    **** 
 482:iparpetc.c    **** 		if( i != 6 )
 483:iparpetc.c    **** 			break;
 484:iparpetc.c    **** 
 485:iparpetc.c    **** 		//We're the right recipent.  Put it in the table.
 486:iparpetc.c    **** 		memcpy( &ClientArpTable[ClientArpTablePointer], sender_mac_and_ip_and_comp_mac, 10 );
 487:iparpetc.c    **** 
 488:iparpetc.c    **** 		ClientArpTablePointer = (ClientArpTablePointer+1)%ARP_CLIENT_TABLE_SIZE;
 489:iparpetc.c    **** }
 490:iparpetc.c    **** #endif
 491:iparpetc.c    **** 
 492:iparpetc.c    **** 	default:
 493:iparpetc.c    **** 		//???? don't know what to do.
 494:iparpetc.c    **** 		return;
 495:iparpetc.c    **** 	}
 496:iparpetc.c    **** }
 497:iparpetc.c    **** 
 498:iparpetc.c    **** void et_receivecallback( uint16_t packetlen )
 499:iparpetc.c    **** {
 928               	 .loc 2 499 0
 929               	 .cfi_startproc
 930               	.LVL21:
 931 00ec BF92      	 push r11
 932               	.LCFI10:
 933               	 .cfi_def_cfa_offset 3
 934               	 .cfi_offset 11,-2
 935 00ee CF92      	 push r12
 936               	.LCFI11:
 937               	 .cfi_def_cfa_offset 4
 938               	 .cfi_offset 12,-3
 939 00f0 DF92      	 push r13
 940               	.LCFI12:
 941               	 .cfi_def_cfa_offset 5
 942               	 .cfi_offset 13,-4
 943 00f2 EF92      	 push r14
 944               	.LCFI13:
 945               	 .cfi_def_cfa_offset 6
 946               	 .cfi_offset 14,-5
 947 00f4 FF92      	 push r15
 948               	.LCFI14:
 949               	 .cfi_def_cfa_offset 7
 950               	 .cfi_offset 15,-6
 951 00f6 0F93      	 push r16
 952               	.LCFI15:
GAS LISTING  			page 47


 953               	 .cfi_def_cfa_offset 8
 954               	 .cfi_offset 16,-7
 955 00f8 1F93      	 push r17
 956               	.LCFI16:
 957               	 .cfi_def_cfa_offset 9
 958               	 .cfi_offset 17,-8
 959 00fa CF93      	 push r28
 960               	.LCFI17:
 961               	 .cfi_def_cfa_offset 10
 962               	 .cfi_offset 28,-9
 963 00fc DF93      	 push r29
 964               	.LCFI18:
 965               	 .cfi_def_cfa_offset 11
 966               	 .cfi_offset 29,-10
 967 00fe CDB7      	 in r28,__SP_L__
 968 0100 DEB7      	 in r29,__SP_H__
 969               	.LCFI19:
 970               	 .cfi_def_cfa_register 28
 971 0102 6097      	 sbiw r28,16
 972               	.LCFI20:
 973               	 .cfi_def_cfa_offset 27
 974 0104 0FB6      	 in __tmp_reg__,__SREG__
 975 0106 F894      	 cli
 976 0108 DEBF      	 out __SP_H__,r29
 977 010a 0FBE      	 out __SREG__,__tmp_reg__
 978 010c CDBF      	 out __SP_L__,r28
 979               	 
 980               	 
 981               	 
 982               	.L__stack_usage =25
 983               	.LVL22:
 500:iparpetc.c    **** 	uint8_t is_the_packet_for_me = 1;
 501:iparpetc.c    **** 	unsigned char i;
 502:iparpetc.c    **** 	unsigned char ipproto;
 503:iparpetc.c    **** 
 504:iparpetc.c    **** 
 505:iparpetc.c    **** 
 506:iparpetc.c    **** 	//First and foremost, make sure we have a big enough packet to work with.
 507:iparpetc.c    **** 	if( packetlen < 8 )
 984               	 .loc 2 507 0
 985 010e 0897      	 sbiw r24,8
 986 0110 00F4      	 brsh .+2
 987 0112 00C0      	 rjmp .L10
 508:iparpetc.c    **** 	{
 509:iparpetc.c    **** #ifdef ETH_DEBUG
 510:iparpetc.c    **** 		sendstr( "Runt\n" );
 511:iparpetc.c    **** #endif
 512:iparpetc.c    **** 		return;
 513:iparpetc.c    **** 	}
 514:iparpetc.c    **** 
 515:iparpetc.c    **** 	//macto (ignore) our mac filter handles this.
 516:iparpetc.c    **** 	et_dumpbytes( 6 );
 988               	 .loc 2 516 0
 989 0114 86E0      	 ldi r24,lo8(6)
 990               	.LVL23:
 991 0116 0E94 0000 	 call et_dumpbytes
 992               	.LVL24:
GAS LISTING  			page 48


 517:iparpetc.c    **** 
 518:iparpetc.c    **** 	POPB( macfrom, 6 );
 993               	 .loc 2 518 0
 994 011a 66E0      	 ldi r22,lo8(6)
 995 011c 80E0      	 ldi r24,lo8(macfrom)
 996 011e 90E0      	 ldi r25,hi8(macfrom)
 997 0120 0E94 0000 	 call et_popblob
 998               	.LVL25:
 519:iparpetc.c    **** 
 520:iparpetc.c    **** 
 521:iparpetc.c    **** 	//Make sure it's ethernet!
 522:iparpetc.c    **** 	if( POP != 0x08 )
 999               	 .loc 2 522 0
 1000 0124 0E94 0000 	 call et_pop8
 1001               	.LVL26:
 1002 0128 8830      	 cpi r24,lo8(8)
 1003 012a 01F0      	 breq .+2
 1004 012c 00C0      	 rjmp .L10
 523:iparpetc.c    **** 	{
 524:iparpetc.c    **** #ifdef ETH_DEBUG
 525:iparpetc.c    **** 		sendstr( "Not ethernet.\n" );
 526:iparpetc.c    **** #endif
 527:iparpetc.c    **** 		return;
 528:iparpetc.c    **** 	}
 529:iparpetc.c    **** 
 530:iparpetc.c    **** 
 531:iparpetc.c    **** 
 532:iparpetc.c    **** 	//Is it ARP?
 533:iparpetc.c    **** 	if( POP == 0x06 )
 1005               	 .loc 2 533 0
 1006 012e 0E94 0000 	 call et_pop8
 1007               	.LVL27:
 1008 0132 8630      	 cpi r24,lo8(6)
 1009 0134 01F0      	 breq .+2
 1010 0136 00C0      	 rjmp .L14
 1011               	.LBB38:
 1012               	.LBB39:
 422:iparpetc.c    **** 	POP16; //Hardware type
 1013               	 .loc 2 422 0
 1014 0138 0E94 0000 	 call et_pop16
 1015               	.LVL28:
 423:iparpetc.c    **** 	proto = POP16;
 1016               	 .loc 2 423 0
 1017 013c 0E94 0000 	 call et_pop16
 1018               	.LVL29:
 1019 0140 8C01      	 movw r16,r24
 1020               	.LVL30:
 424:iparpetc.c    **** 	POP16; //hwsize, protosize
 1021               	 .loc 2 424 0
 1022 0142 0E94 0000 	 call et_pop16
 1023               	.LVL31:
 425:iparpetc.c    **** 	opcode = POP16;  //XXX: This includes "code" as well, it seems.
 1024               	 .loc 2 425 0
 1025 0146 0E94 0000 	 call et_pop16
 1026               	.LVL32:
 427:iparpetc.c    **** 	switch( opcode )
 1027               	 .loc 2 427 0
GAS LISTING  			page 49


 1028 014a 8130      	 cpi r24,lo8(1)
 1029 014c 01F0      	 breq .+2
 1030 014e 00C0      	 rjmp .L10
 1031               	.LBB40:
 433:iparpetc.c    **** 		POPB( sendermac_ip_and_targetmac, 16 );
 1032               	 .loc 2 433 0
 1033 0150 60E1      	 ldi r22,lo8(16)
 1034 0152 CE01      	 movw r24,r28
 1035               	.LVL33:
 1036 0154 0196      	 adiw r24,1
 1037 0156 0E94 0000 	 call et_popblob
 1038               	.LVL34:
 439:iparpetc.c    **** 		for( i = 0; i < 4; i++ )
 1039               	 .loc 2 439 0
 1040 015a 1092 0000 	 sts i+1,__zero_reg__
 1041 015e 1092 0000 	 sts i,__zero_reg__
 435:iparpetc.c    **** 		match = 1;
 1042               	 .loc 2 435 0
 1043 0162 FF24      	 clr r15
 1044 0164 F394      	 inc r15
 1045               	.LVL35:
 1046               	.L17:
 439:iparpetc.c    **** 		for( i = 0; i < 4; i++ )
 1047               	 .loc 2 439 0
 1048 0166 8091 0000 	 lds r24,i
 1049 016a 9091 0000 	 lds r25,i+1
 1050 016e 0497      	 sbiw r24,4
 1051 0170 00F4      	 brsh .L39
 440:iparpetc.c    **** 			if( POP != MyIP[i] )
 1052               	 .loc 2 440 0
 1053 0172 0E94 0000 	 call et_pop8
 1054               	.LVL36:
 1055 0176 2091 0000 	 lds r18,i
 1056 017a 3091 0000 	 lds r19,i+1
 1057 017e F901      	 movw r30,r18
 1058 0180 E050      	 subi r30,lo8(-(MyIP))
 1059 0182 F040      	 sbci r31,hi8(-(MyIP))
 1060 0184 9081      	 ld r25,Z
 1061 0186 8913      	 cpse r24,r25
 441:iparpetc.c    **** 				match = 0;
 1062               	 .loc 2 441 0
 1063 0188 F12C      	 mov r15,__zero_reg__
 1064               	.LVL37:
 1065               	.L18:
 439:iparpetc.c    **** 		for( i = 0; i < 4; i++ )
 1066               	 .loc 2 439 0
 1067 018a 2F5F      	 subi r18,-1
 1068 018c 3F4F      	 sbci r19,-1
 1069 018e 3093 0000 	 sts i+1,r19
 1070 0192 2093 0000 	 sts i,r18
 1071 0196 00C0      	 rjmp .L17
 1072               	.L39:
 443:iparpetc.c    **** 		if( match == 0 )
 1073               	 .loc 2 443 0
 1074 0198 FF20      	 tst r15
 1075 019a 01F4      	 brne .+2
 1076 019c 00C0      	 rjmp .L10
GAS LISTING  			page 50


 449:iparpetc.c    **** 		et_startsend( NetGetScratch() );
 1077               	 .loc 2 449 0
 1078 019e 0E94 0000 	 call NetGetScratch
 1079               	.LVL38:
 1080               	.LBB41:
 1081               	.LBB42:
  58:net_compat.h  **** static inline void et_startsend( uint16_t start ) { sendbaseaddress = ETsendplace = start; }
 1082               	 .loc 1 58 0
 1083 01a2 9093 0000 	 sts ETsendplace+1,r25
 1084 01a6 8093 0000 	 sts ETsendplace,r24
 1085 01aa 9093 0000 	 sts sendbaseaddress+1,r25
 1086 01ae 8093 0000 	 sts sendbaseaddress,r24
 1087               	.LBE42:
 1088               	.LBE41:
 450:iparpetc.c    **** 		send_etherlink_header( 0x0806 );
 1089               	 .loc 2 450 0
 1090 01b2 86E0      	 ldi r24,lo8(6)
 1091 01b4 98E0      	 ldi r25,lo8(8)
 1092               	.LVL39:
 1093 01b6 0E94 0000 	 call send_etherlink_header
 1094               	.LVL40:
 452:iparpetc.c    **** 		PUSH16( 0x0001 ); //Ethernet
 1095               	 .loc 2 452 0
 1096 01ba 81E0      	 ldi r24,lo8(1)
 1097 01bc 90E0      	 ldi r25,0
 1098 01be 0E94 0000 	 call et_push16
 1099               	.LVL41:
 453:iparpetc.c    **** 		PUSH16( proto );  //Protocol
 1100               	 .loc 2 453 0
 1101 01c2 C801      	 movw r24,r16
 1102 01c4 0E94 0000 	 call et_push16
 1103               	.LVL42:
 454:iparpetc.c    **** 		PUSH16( 0x0604 ); //HW size, Proto size
 1104               	 .loc 2 454 0
 1105 01c8 84E0      	 ldi r24,lo8(4)
 1106 01ca 96E0      	 ldi r25,lo8(6)
 1107 01cc 0E94 0000 	 call et_push16
 1108               	.LVL43:
 455:iparpetc.c    **** 		PUSH16( 0x0002 ); //Reply
 1109               	 .loc 2 455 0
 1110 01d0 82E0      	 ldi r24,lo8(2)
 1111 01d2 90E0      	 ldi r25,0
 1112 01d4 0E94 0000 	 call et_push16
 1113               	.LVL44:
 457:iparpetc.c    **** 		PUSHB( MyMAC, 6 );
 1114               	 .loc 2 457 0
 1115 01d8 66E0      	 ldi r22,lo8(6)
 1116 01da 80E0      	 ldi r24,lo8(MyMAC)
 1117 01dc 90E0      	 ldi r25,hi8(MyMAC)
 1118 01de 0E94 0000 	 call et_pushblob
 1119               	.LVL45:
 458:iparpetc.c    **** 		PUSHB( MyIP, 4 );
 1120               	 .loc 2 458 0
 1121 01e2 64E0      	 ldi r22,lo8(4)
 1122 01e4 80E0      	 ldi r24,lo8(MyIP)
 1123 01e6 90E0      	 ldi r25,hi8(MyIP)
 1124 01e8 0E94 0000 	 call et_pushblob
GAS LISTING  			page 51


 1125               	.LVL46:
 459:iparpetc.c    **** 		PUSHB( sendermac_ip_and_targetmac, 10 ); // do not send target mac.
 1126               	 .loc 2 459 0
 1127 01ec 6AE0      	 ldi r22,lo8(10)
 1128 01ee CE01      	 movw r24,r28
 1129 01f0 0196      	 adiw r24,1
 1130 01f2 0E94 0000 	 call et_pushblob
 1131               	.LVL47:
 461:iparpetc.c    **** 		et_endsend();
 1132               	 .loc 2 461 0
 1133 01f6 0E94 0000 	 call et_endsend
 1134               	.LVL48:
 1135 01fa 00C0      	 rjmp .L10
 1136               	.LVL49:
 1137               	.L14:
 1138               	.LBE40:
 1139               	.LBE39:
 1140               	.LBE38:
 534:iparpetc.c    **** 	{
 535:iparpetc.c    **** 		HandleArp( );
 536:iparpetc.c    **** 		return;
 537:iparpetc.c    **** 	}
 538:iparpetc.c    **** 
 539:iparpetc.c    **** 	//otherwise it's standard IP
 540:iparpetc.c    **** 
 541:iparpetc.c    **** 	//So, we're expecting a '45
 542:iparpetc.c    **** 
 543:iparpetc.c    **** 	if( POP != 0x45 )
 1141               	 .loc 2 543 0
 1142 01fc 0E94 0000 	 call et_pop8
 1143               	.LVL50:
 1144 0200 8534      	 cpi r24,lo8(69)
 1145 0202 01F0      	 breq .+2
 1146 0204 00C0      	 rjmp .L10
 1147               	.LVL51:
 1148               	.LBB43:
 1149               	.LBB44:
 544:iparpetc.c    **** 	{
 545:iparpetc.c    **** #ifdef ETH_DEBUG
 546:iparpetc.c    **** 		sendstr( "Not IP.\n" );
 547:iparpetc.c    **** #endif
 548:iparpetc.c    **** 		return;
 549:iparpetc.c    **** 	}
 550:iparpetc.c    **** 
 551:iparpetc.c    **** 	POP; //differentiated services field.
 1150               	 .loc 2 551 0
 1151 0206 0E94 0000 	 call et_pop8
 1152               	.LVL52:
 552:iparpetc.c    **** 
 553:iparpetc.c    **** 	iptotallen = POP16;
 1153               	 .loc 2 553 0
 1154 020a 0E94 0000 	 call et_pop16
 1155               	.LVL53:
 1156 020e 9093 0000 	 sts iptotallen+1,r25
 1157 0212 8093 0000 	 sts iptotallen,r24
 554:iparpetc.c    **** 	et_dumpbytes( 5 ); //ID, Offset+FLAGS+TTL
 1158               	 .loc 2 554 0
GAS LISTING  			page 52


 1159 0216 85E0      	 ldi r24,lo8(5)
 1160 0218 0E94 0000 	 call et_dumpbytes
 1161               	.LVL54:
 555:iparpetc.c    **** 	ipproto = POP;
 1162               	 .loc 2 555 0
 1163 021c 0E94 0000 	 call et_pop8
 1164               	.LVL55:
 1165 0220 D82E      	 mov r13,r24
 1166               	.LVL56:
 556:iparpetc.c    **** 
 557:iparpetc.c    **** 	POP16; //header checksum
 1167               	 .loc 2 557 0
 1168 0222 0E94 0000 	 call et_pop16
 1169               	.LVL57:
 558:iparpetc.c    **** 
 559:iparpetc.c    **** 	POPB( ipsource, 4 );
 1170               	 .loc 2 559 0
 1171 0226 64E0      	 ldi r22,lo8(4)
 1172 0228 80E0      	 ldi r24,lo8(ipsource)
 1173 022a 90E0      	 ldi r25,hi8(ipsource)
 1174 022c 0E94 0000 	 call et_popblob
 1175               	.LVL58:
 1176 0230 00E0      	 ldi r16,lo8(MyMask)
 1177 0232 10E0      	 ldi r17,hi8(MyMask)
 1178 0234 80E0      	 ldi r24,lo8(MyIP)
 1179 0236 E82E      	 mov r14,r24
 1180 0238 80E0      	 ldi r24,hi8(MyIP)
 1181 023a F82E      	 mov r15,r24
 500:iparpetc.c    **** 	uint8_t is_the_packet_for_me = 1;
 1182               	 .loc 2 500 0
 1183 023c CC24      	 clr r12
 1184 023e C394      	 inc r12
 1185               	.LVL59:
 1186               	.L22:
 1187               	.LBB45:
 560:iparpetc.c    **** 
 561:iparpetc.c    **** 
 562:iparpetc.c    **** 	for( i = 0; i < 4; i++ )
 563:iparpetc.c    **** 	{
 564:iparpetc.c    **** 		unsigned char m = ~MyMask[i];
 1188               	 .loc 2 564 0
 1189 0240 F801      	 movw r30,r16
 1190 0242 B190      	 ld r11,Z+
 1191 0244 8F01      	 movw r16,r30
 1192               	.LVL60:
 565:iparpetc.c    **** 		unsigned char ch = POP;
 1193               	 .loc 2 565 0
 1194 0246 0E94 0000 	 call et_pop8
 1195               	.LVL61:
 566:iparpetc.c    **** 		if( ch == MyIP[i] || (ch & m) == 0xff  ) continue;
 1196               	 .loc 2 566 0
 1197 024a F701      	 movw r30,r14
 1198 024c 9191      	 ld r25,Z+
 1199 024e 7F01      	 movw r14,r30
 1200 0250 8917      	 cp r24,r25
 1201 0252 01F0      	 breq .L20
 564:iparpetc.c    **** 		unsigned char m = ~MyMask[i];
GAS LISTING  			page 53


 1202               	 .loc 2 564 0
 1203 0254 9B2D      	 mov r25,r11
 1204 0256 9095      	 com r25
 1205               	.LVL62:
 1206               	 .loc 2 566 0
 1207 0258 9823      	 and r25,r24
 1208               	.LVL63:
 1209 025a 9F3F      	 cpi r25,lo8(-1)
 1210 025c 01F0      	 breq .L20
 567:iparpetc.c    **** 		is_the_packet_for_me = 0;
 1211               	 .loc 2 567 0
 1212 025e C12C      	 mov r12,__zero_reg__
 1213               	.LVL64:
 1214               	.L20:
 1215               	.LBE45:
 562:iparpetc.c    **** 	for( i = 0; i < 4; i++ )
 1216               	 .loc 2 562 0
 1217 0260 F0E0      	 ldi r31,hi8(MyMask+4)
 1218 0262 0030      	 cpi r16,lo8(MyMask+4)
 1219 0264 1F07      	 cpc r17,r31
 1220 0266 01F4      	 brne .L22
 568:iparpetc.c    **** 	}
 569:iparpetc.c    **** 
 570:iparpetc.c    **** 	//Tricky, for DHCP packets, we have to detect it even if it is not to us.
 571:iparpetc.c    **** 	if( ipproto == 17 )
 1221               	 .loc 2 571 0
 1222 0268 81E1      	 ldi r24,lo8(17)
 1223               	.LVL65:
 1224 026a D812      	 cpse r13,r24
 1225 026c 00C0      	 rjmp .L23
 572:iparpetc.c    **** 	{
 573:iparpetc.c    **** 		remoteport = POP16;
 1226               	 .loc 2 573 0
 1227 026e 0E94 0000 	 call et_pop16
 1228               	.LVL66:
 1229 0272 9093 0000 	 sts remoteport+1,r25
 1230 0276 8093 0000 	 sts remoteport,r24
 574:iparpetc.c    **** 		localport = POP16;
 1231               	 .loc 2 574 0
 1232 027a 0E94 0000 	 call et_pop16
 1233               	.LVL67:
 1234 027e 9093 0000 	 sts localport+1,r25
 1235 0282 8093 0000 	 sts localport,r24
 1236 0286 00C0      	 rjmp .L10
 1237               	.L23:
 575:iparpetc.c    **** #ifdef ENABLE_DHCP_CLIENT
 576:iparpetc.c    **** 		if( localport == 68 && !dhcp_seconds_remain )
 577:iparpetc.c    **** 		{
 578:iparpetc.c    **** 			HandleDHCP( POP16 );
 579:iparpetc.c    **** 			return;
 580:iparpetc.c    **** 		}
 581:iparpetc.c    **** #endif
 582:iparpetc.c    **** 	}
 583:iparpetc.c    **** 
 584:iparpetc.c    **** 	if( !is_the_packet_for_me )
 1238               	 .loc 2 584 0
 1239 0288 CC20      	 tst r12
GAS LISTING  			page 54


 1240 028a 01F4      	 brne .+2
 1241 028c 00C0      	 rjmp .L10
 585:iparpetc.c    **** 	{
 586:iparpetc.c    **** #ifdef ETH_DEBUG
 587:iparpetc.c    **** 		sendstr( "not for me\n" );
 588:iparpetc.c    **** #endif
 589:iparpetc.c    **** 		return;
 590:iparpetc.c    **** 	}
 591:iparpetc.c    **** 
 592:iparpetc.c    **** 	//XXX TODO Handle IPL > 5  (IHL?)
 593:iparpetc.c    **** 
 594:iparpetc.c    **** 
 595:iparpetc.c    **** 	switch( ipproto )
 1242               	 .loc 2 595 0
 1243 028e E1E0      	 ldi r30,lo8(1)
 1244 0290 DE16      	 cp r13,r30
 1245 0292 01F0      	 breq .L24
 1246 0294 F6E0      	 ldi r31,lo8(6)
 1247 0296 DF12      	 cpse r13,r31
 1248 0298 00C0      	 rjmp .L10
 596:iparpetc.c    **** 	{
 597:iparpetc.c    **** 	case 1: //ICMP
 598:iparpetc.c    **** 
 599:iparpetc.c    **** 		HandleICMP();
 600:iparpetc.c    **** 		break;
 601:iparpetc.c    **** #ifdef INCLUDE_UDP
 602:iparpetc.c    **** 	case 17:
 603:iparpetc.c    **** 	{
 604:iparpetc.c    **** 		//err is this dangerous?
 605:iparpetc.c    **** 		HandleUDP( POP16 );
 606:iparpetc.c    **** 		break;	
 607:iparpetc.c    **** 	}
 608:iparpetc.c    **** #endif
 609:iparpetc.c    **** #ifdef INCLUDE_TCP
 610:iparpetc.c    **** 	case 6: // TCP
 611:iparpetc.c    **** 	{
 612:iparpetc.c    **** 
 613:iparpetc.c    **** 		remoteport = POP16;
 1249               	 .loc 2 613 0
 1250 029a 0E94 0000 	 call et_pop16
 1251               	.LVL68:
 1252 029e 9093 0000 	 sts remoteport+1,r25
 1253 02a2 8093 0000 	 sts remoteport,r24
 614:iparpetc.c    **** 		localport = POP16;
 1254               	 .loc 2 614 0
 1255 02a6 0E94 0000 	 call et_pop16
 1256               	.LVL69:
 1257 02aa 9093 0000 	 sts localport+1,r25
 1258 02ae 8093 0000 	 sts localport,r24
 615:iparpetc.c    **** 		iptotallen-=20;
 1259               	 .loc 2 615 0
 1260 02b2 8091 0000 	 lds r24,iptotallen
 1261 02b6 9091 0000 	 lds r25,iptotallen+1
 1262 02ba 4497      	 sbiw r24,20
 1263 02bc 9093 0000 	 sts iptotallen+1,r25
 1264 02c0 8093 0000 	 sts iptotallen,r24
 616:iparpetc.c    **** 		HandleTCP( iptotallen );
GAS LISTING  			page 55


 1265               	 .loc 2 616 0
 1266 02c4 0E94 0000 	 call HandleTCP
 1267               	.LVL70:
 1268 02c8 00C0      	 rjmp .L10
 1269               	.L24:
 1270               	.LBB46:
 1271               	.LBB47:
 325:iparpetc.c    **** 	unsigned short payloadsize = iptotallen - SIZEOFICMP;
 1272               	 .loc 2 325 0
 1273 02ca E090 0000 	 lds r14,iptotallen
 1274 02ce F090 0000 	 lds r15,iptotallen+1
 1275               	.LVL71:
 329:iparpetc.c    **** 	icmp_in++;
 1276               	 .loc 2 329 0
 1277 02d2 8091 0000 	 lds r24,icmp_in
 1278 02d6 9091 0000 	 lds r25,icmp_in+1
 1279 02da A091 0000 	 lds r26,icmp_in+2
 1280 02de B091 0000 	 lds r27,icmp_in+3
 1281 02e2 0196      	 adiw r24,1
 1282 02e4 A11D      	 adc r26,__zero_reg__
 1283 02e6 B11D      	 adc r27,__zero_reg__
 1284 02e8 8093 0000 	 sts icmp_in,r24
 1285 02ec 9093 0000 	 sts icmp_in+1,r25
 1286 02f0 A093 0000 	 sts icmp_in+2,r26
 1287 02f4 B093 0000 	 sts icmp_in+3,r27
 331:iparpetc.c    **** 	type = POP;
 1288               	 .loc 2 331 0
 1289 02f8 0E94 0000 	 call et_pop8
 1290               	.LVL72:
 1291 02fc 182F      	 mov r17,r24
 1292               	.LVL73:
 332:iparpetc.c    **** 	POP; //code
 1293               	 .loc 2 332 0
 1294 02fe 0E94 0000 	 call et_pop8
 1295               	.LVL74:
 333:iparpetc.c    **** 	POP16; //Checksum
 1296               	 .loc 2 333 0
 1297 0302 0E94 0000 	 call et_pop16
 1298               	.LVL75:
 336:iparpetc.c    **** 	switch( type )
 1299               	 .loc 2 336 0
 1300 0306 1830      	 cpi r17,lo8(8)
 1301 0308 01F0      	 breq .+2
 1302 030a 00C0      	 rjmp .L10
 1303               	.LBB48:
 367:iparpetc.c    **** 		et_startsend( NetGetScratch() );
 1304               	 .loc 2 367 0
 1305 030c 0E94 0000 	 call NetGetScratch
 1306               	.LVL76:
 1307               	.LBB49:
 1308               	.LBB50:
  58:net_compat.h  **** static inline void et_startsend( uint16_t start ) { sendbaseaddress = ETsendplace = start; }
 1309               	 .loc 1 58 0
 1310 0310 9093 0000 	 sts ETsendplace+1,r25
 1311 0314 8093 0000 	 sts ETsendplace,r24
 1312 0318 9093 0000 	 sts sendbaseaddress+1,r25
 1313 031c 8093 0000 	 sts sendbaseaddress,r24
GAS LISTING  			page 56


 1314               	.LBE50:
 1315               	.LBE49:
 368:iparpetc.c    **** 		send_etherlink_header( 0x0800 );
 1316               	 .loc 2 368 0
 1317 0320 80E0      	 ldi r24,0
 1318 0322 98E0      	 ldi r25,lo8(8)
 1319               	.LVL77:
 1320 0324 0E94 0000 	 call send_etherlink_header
 1321               	.LVL78:
 369:iparpetc.c    **** 		send_ip_header( iptotallen, ipsource, 0x01 );
 1322               	 .loc 2 369 0
 1323 0328 41E0      	 ldi r20,lo8(1)
 1324 032a 60E0      	 ldi r22,lo8(ipsource)
 1325 032c 70E0      	 ldi r23,hi8(ipsource)
 1326 032e 8091 0000 	 lds r24,iptotallen
 1327 0332 9091 0000 	 lds r25,iptotallen+1
 1328 0336 0E94 0000 	 call send_ip_header
 1329               	.LVL79:
 371:iparpetc.c    **** 		PUSH16( 0 ); //ping reply + code
 1330               	 .loc 2 371 0
 1331 033a 80E0      	 ldi r24,0
 1332 033c 90E0      	 ldi r25,0
 1333 033e 0E94 0000 	 call et_push16
 1334               	.LVL80:
 372:iparpetc.c    **** 		PUSH16( 0 ); //Checksum
 1335               	 .loc 2 372 0
 1336 0342 80E0      	 ldi r24,0
 1337 0344 90E0      	 ldi r25,0
 1338 0346 0E94 0000 	 call et_push16
 1339               	.LVL81:
 1340 034a 8701      	 movw r16,r14
 1341               	.LVL82:
 1342               	.L27:
 381:iparpetc.c    **** 		while( payloadsize-- )
 1343               	 .loc 2 381 0
 1344 034c 0831      	 cpi r16,24
 1345 034e 1105      	 cpc r17,__zero_reg__
 1346 0350 01F0      	 breq .L40
 382:iparpetc.c    **** 			PUSH( POP );
 1347               	 .loc 2 382 0
 1348 0352 0E94 0000 	 call et_pop8
 1349               	.LVL83:
 1350 0356 0E94 0000 	 call et_push8
 1351               	.LVL84:
 1352 035a 0150      	 subi r16,1
 1353 035c 1109      	 sbc r17,__zero_reg__
 1354               	.LVL85:
 1355 035e 00C0      	 rjmp .L27
 1356               	.LVL86:
 1357               	.L40:
 394:iparpetc.c    **** 		et_start_checksum( 8+6, 20 );
 1358               	 .loc 2 394 0
 1359 0360 64E1      	 ldi r22,lo8(20)
 1360 0362 70E0      	 ldi r23,0
 1361 0364 8EE0      	 ldi r24,lo8(14)
 1362 0366 90E0      	 ldi r25,0
 1363 0368 0E94 0000 	 call et_start_checksum
GAS LISTING  			page 57


 1364               	.LVL87:
 1365               	.LBB51:
 1366               	.LBB52:
  64:net_compat.h  **** 
  65:net_compat.h  **** //Deselects the chip, can halt operation.
  66:net_compat.h  **** static inline void et_stopop() { }
  67:net_compat.h  **** 
  68:net_compat.h  **** //Start a checksum
  69:net_compat.h  **** void et_start_checksum( uint16_t start, uint16_t len );
  70:net_compat.h  **** 
  71:net_compat.h  **** //Get the results of a checksum (little endian)
  72:net_compat.h  **** static inline uint16_t et_get_checksum() { return ETchecksum; }
 1367               	 .loc 1 72 0
 1368 036c 1091 0000 	 lds r17,ETchecksum
 1369               	.LVL88:
 1370 0370 0091 0000 	 lds r16,ETchecksum+1
 1371               	.LVL89:
 1372               	.LBE52:
 1373               	.LBE51:
 396:iparpetc.c    **** 		et_start_checksum( 28+6, payloadsize + 8 );
 1374               	 .loc 2 396 0
 1375 0374 67E0      	 ldi r22,lo8(7)
 1376 0376 70E0      	 ldi r23,0
 1377 0378 82E2      	 ldi r24,lo8(34)
 1378 037a 90E0      	 ldi r25,0
 1379 037c 0E94 0000 	 call et_start_checksum
 1380               	.LVL90:
 1381               	.LBB53:
 1382               	.LBB54:
  73:net_compat.h  **** 
  74:net_compat.h  **** //Modify a word of memory (little endian)
  75:net_compat.h  **** static inline void et_alter_word( uint16_t address, uint16_t val ) { ETbuffer[address] = val>>8; ET
 1383               	 .loc 1 75 0
 1384 0380 0093 0000 	 sts ETbuffer+24,r16
 1385 0384 1093 0000 	 sts ETbuffer+25,r17
 1386               	.LBE54:
 1387               	.LBE53:
 1388               	.LBB55:
 1389               	.LBB56:
  72:net_compat.h  **** static inline uint16_t et_get_checksum() { return ETchecksum; }
 1390               	 .loc 1 72 0
 1391 0388 8091 0000 	 lds r24,ETchecksum
 1392 038c 9091 0000 	 lds r25,ETchecksum+1
 1393               	.LVL91:
 1394               	.LBE56:
 1395               	.LBE55:
 1396               	.LBB57:
 1397               	.LBB58:
 1398               	 .loc 1 75 0
 1399 0390 9093 0000 	 sts ETbuffer+36,r25
 1400 0394 8093 0000 	 sts ETbuffer+37,r24
 1401               	.LBE58:
 1402               	.LBE57:
 401:iparpetc.c    **** 		et_endsend();
 1403               	 .loc 2 401 0
 1404 0398 0E94 0000 	 call et_endsend
 1405               	.LVL92:
GAS LISTING  			page 58


 405:iparpetc.c    **** 		icmp_out++;
 1406               	 .loc 2 405 0
 1407 039c 8091 0000 	 lds r24,icmp_out
 1408 03a0 9091 0000 	 lds r25,icmp_out+1
 1409 03a4 A091 0000 	 lds r26,icmp_out+2
 1410 03a8 B091 0000 	 lds r27,icmp_out+3
 1411 03ac 0196      	 adiw r24,1
 1412 03ae A11D      	 adc r26,__zero_reg__
 1413 03b0 B11D      	 adc r27,__zero_reg__
 1414 03b2 8093 0000 	 sts icmp_out,r24
 1415 03b6 9093 0000 	 sts icmp_out+1,r25
 1416 03ba A093 0000 	 sts icmp_out+2,r26
 1417 03be B093 0000 	 sts icmp_out+3,r27
 1418               	.LVL93:
 1419               	.L10:
 1420               	 
 1421               	.LBE48:
 1422               	.LBE47:
 1423               	.LBE46:
 1424               	.LBE44:
 1425               	.LBE43:
 617:iparpetc.c    **** 		break;
 618:iparpetc.c    **** 	}
 619:iparpetc.c    **** #endif // HAVE_TCP_SUPPORT
 620:iparpetc.c    **** 	default:
 621:iparpetc.c    **** 		break;
 622:iparpetc.c    **** 	}
 623:iparpetc.c    **** 
 624:iparpetc.c    **** //finishcb:
 625:iparpetc.c    **** //	et_finish_callback_now();
 626:iparpetc.c    **** }
 1426               	 .loc 2 626 0
 1427 03c2 6096      	 adiw r28,16
 1428 03c4 0FB6      	 in __tmp_reg__,__SREG__
 1429 03c6 F894      	 cli
 1430 03c8 DEBF      	 out __SP_H__,r29
 1431 03ca 0FBE      	 out __SREG__,__tmp_reg__
 1432 03cc CDBF      	 out __SP_L__,r28
 1433 03ce DF91      	 pop r29
 1434 03d0 CF91      	 pop r28
 1435 03d2 1F91      	 pop r17
 1436 03d4 0F91      	 pop r16
 1437 03d6 FF90      	 pop r15
 1438 03d8 EF90      	 pop r14
 1439 03da DF90      	 pop r13
 1440 03dc CF90      	 pop r12
 1441 03de BF90      	 pop r11
 1442 03e0 0895      	 ret
 1443               	 .cfi_endproc
 1444               	.LFE24:
 1446               	.global SwitchToBroadcast
 1448               	SwitchToBroadcast:
 1449               	.LFB25:
 627:iparpetc.c    **** 
 628:iparpetc.c    **** 
 629:iparpetc.c    **** #ifdef INCLUDE_UDP
 630:iparpetc.c    **** 
GAS LISTING  			page 59


 631:iparpetc.c    **** void util_finish_udp_packet( )// unsigned short length )
 632:iparpetc.c    **** {
 633:iparpetc.c    **** 	volatile unsigned short ppl, ppl2;
 634:iparpetc.c    **** 
 635:iparpetc.c    **** 	//Packet loaded.
 636:iparpetc.c    **** 	et_stopop();
 637:iparpetc.c    **** 
 638:iparpetc.c    **** 	unsigned short length = et_get_write_length() - 6; //6 = my mac
 639:iparpetc.c    **** 
 640:iparpetc.c    **** 	//Write length in packet
 641:iparpetc.c    **** 	et_alter_word( 10+6, length-14 ); //Experimentally determined 14, 0 was used for a long time.
 642:iparpetc.c    **** 	et_start_checksum( 8+6, 20 );
 643:iparpetc.c    **** 	et_alter_word( 32+6, length-34 );
 644:iparpetc.c    **** 
 645:iparpetc.c    **** 	ppl = et_get_checksum();
 646:iparpetc.c    **** 	et_alter_word( 18+6, ppl );
 647:iparpetc.c    **** 
 648:iparpetc.c    **** 	//Addenudm for UDP checksum
 649:iparpetc.c    **** 
 650:iparpetc.c    **** 	et_alter_word( 34+6, 0x11 + 0x8 + length-42 ); //UDP number + size + length (of packet)
 651:iparpetc.c    **** 		//XXX I THINK 
 652:iparpetc.c    **** 
 653:iparpetc.c    **** 	et_start_checksum( 20+6, length - 42 + 16 ); //sta
 654:iparpetc.c    **** 
 655:iparpetc.c    **** 	ppl2 = et_get_checksum();
 656:iparpetc.c    **** 	if( ppl2 == 0 ) ppl2 = 0xffff;
 657:iparpetc.c    **** 
 658:iparpetc.c    **** 	et_alter_word( 34+6, ppl2 );
 659:iparpetc.c    **** 
 660:iparpetc.c    **** 	et_endsend();
 661:iparpetc.c    **** }
 662:iparpetc.c    **** 
 663:iparpetc.c    **** 
 664:iparpetc.c    **** #endif
 665:iparpetc.c    **** 
 666:iparpetc.c    **** 
 667:iparpetc.c    **** 
 668:iparpetc.c    **** void SwitchToBroadcast()
 669:iparpetc.c    **** {
 1450               	 .loc 2 669 0
 1451               	 .cfi_startproc
 1452               	 
 1453               	 
 1454               	 
 1455               	.L__stack_usage =0
 670:iparpetc.c    **** 	//Set the address we want to send to (broadcast)
 671:iparpetc.c    **** 	for( i = 0; i < 6; i++ )
 1456               	 .loc 2 671 0
 1457 03e2 80E0      	 ldi r24,0
 1458 03e4 90E0      	 ldi r25,0
 672:iparpetc.c    **** 		macfrom[i] = 0xff;
 1459               	 .loc 2 672 0
 1460 03e6 2FEF      	 ldi r18,lo8(-1)
 1461               	.L42:
 1462 03e8 FC01      	 movw r30,r24
 1463 03ea E050      	 subi r30,lo8(-(macfrom))
 1464 03ec F040      	 sbci r31,hi8(-(macfrom))
GAS LISTING  			page 60


 1465               	 .loc 2 672 0 is_stmt 0 discriminator 2
 1466 03ee 2083      	 st Z,r18
 671:iparpetc.c    **** 	for( i = 0; i < 6; i++ )
 1467               	 .loc 2 671 0 is_stmt 1 discriminator 2
 1468 03f0 0196      	 adiw r24,1
 1469 03f2 8630      	 cpi r24,6
 1470 03f4 9105      	 cpc r25,__zero_reg__
 1471 03f6 00F0      	 brlo .L42
 1472 03f8 9093 0000 	 sts i+1,r25
 1473 03fc 8093 0000 	 sts i,r24
 1474 0400 0895      	 ret
 1475               	 .cfi_endproc
 1476               	.LFE25:
 1478               	 .local scratch.2219
 1479               	 .comm scratch.2219,1,1
 1480               	 .local i
 1481               	 .comm i,2,1
 1482               	 .local iptotallen
 1483               	 .comm iptotallen,2,1
 1484               	 .comm localport,2,1
 1485               	 .comm remoteport,2,1
 1486               	 .comm ipsource,4,1
 1487               	 .comm macfrom,6,1
 1488               	.global icmp_out
 1489               	 .section .bss
 1492               	icmp_out:
 1493 0000 0000 0000 	 .zero 4
 1494               	.global icmp_in
 1497               	icmp_in:
 1498 0004 0000 0000 	 .zero 4
 1499               	 .text
 1500               	.Letext0:
 1501               	 .file 3 "/usr/lib/avr/include/stdint.h"
 1502               	 .file 4 "iparpetc.h"
GAS LISTING  			page 61


DEFINED SYMBOLS
                            *ABS*:0000000000000000 iparpetc.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:689    .text:0000000000000000 et_push8
    {standard input}:722    .text:0000000000000028 et_endsend
    {standard input}:744    .text:0000000000000040 NetGetScratch
                             .bss:0000000000000008 scratch.2219
    {standard input}:775    .text:000000000000005c send_etherlink_header
                            *COM*:0000000000000006 macfrom
    {standard input}:821    .text:0000000000000080 send_ip_header
    {standard input}:926    .text:00000000000000ec et_receivecallback
    {standard input}:1479   .bss:0000000000000009 i
    {standard input}:1481   .bss:000000000000000b iptotallen
                            *COM*:0000000000000004 ipsource
                            *COM*:0000000000000002 remoteport
                            *COM*:0000000000000002 localport
    {standard input}:1497   .bss:0000000000000004 icmp_in
    {standard input}:1492   .bss:0000000000000000 icmp_out
    {standard input}:1448   .text:00000000000003e2 SwitchToBroadcast
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
ETsendplace
ETbuffer
sendbaseaddress
et_xmitpacket
et_pushblob
MyMAC
et_push16
MyIP
et_dumpbytes
et_popblob
et_pop8
et_pop16
MyMask
HandleTCP
et_start_checksum
ETchecksum
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "dumbgame.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.9d85ca12287e6601,"",@progbits
  10 0000 789C 7D4E 	 .string "x\234}N;\n\302@\020}\263\331|Pc\"XXH\020\254l<A\3204\236@;+\211\022\202\253B\n\033\233\034#\215\027\265\3211\313&\026\301\205\335y\263\3573# \320u\266\004L\271\366\371\222\330\223\","
  10      3B0A C240 
  10      107D B3D9 
  10      7C50 6322 
  10      5858 4810 
  11 0047 211E 7895 	 .ascii "!\036x\225U\031*\242\b\364,\253D\221\016\320\2327\031\2715kP"
  11      5519 2AA2 
  11      08F4 2CAB 
  11      4491 0ED0 
  11      9A37 19B9 
  12 005e 2919 9A4E 	 .ascii ")\031\232N6\377X\263M\242u\3131\367\226\003\027\266\026X&61\200"
  12      36FF 58B3 
  12      4DA2 75CB 
  12      31F7 9603 
  12      17B6 1658 
  13 0076 67B5 2BD8 	 .ascii "g\265+\330\021\002\275\202\243C\032\306\2150\321\214W3\177\363"
  13      1102 BD82 
  13      A343 1AC6 
  13      8D30 D18C 
  13      5733 7FF3 
  14 008a CC2E 1A0C 	 .ascii "\314.\032\f\200\036?>\206@`\013\266\340\216\332\311%\354J2p\376"
  14      801E 3F3E 
  14      8640 600B 
  14      B6E0 8EDA 
  14      C925 EC4A 
  15 00a1 3349 76F0 	 .ascii "3Iv\360\233/\034\t\370\305\341z\274]\226\251\312\3233\274]\221"
  15      9B2F 1C09 
  15      F8C5 E17A 
  15      BC5D 96A9 
  15      CAD3 33BC 
  16 00b7 67D9 A980 	 .ascii "g\331\251\200\214W1>\216.1\214"
  16      8C57 313E 
  16      8E2E 318C 
  17               	 .text
  18               	 .section .gnu.lto_.inline.9d85ca12287e6601,"",@progbits
  19 0000 789C 6D50 	 .string "x\234mP\273\021\3020\f}\262\215\363%\237\206\202\313\221\016:F\311\002\264pP\300\030\324\244`\200\024\f\300\036\364T\f\301\006 %GH\b\366\235\365\364$KORP\370wN\324\330"
  19      BB11 C230 
  19      0C7D B28D 
  19      F325 9F86 
  19      82CB 910E 
  20 003e 98BF 4050 	 .ascii "\230\277@P\323\362F\260U^\247\223\317\217\342\030A\207\220\022"
  20      D3F2 46B0 
  20      555E A793 
  20      CF8F E218 
  20      4187 9012 
  21 0052 8DD3 79CB 	 .ascii "\215\323y\313\242K\325\037F\021`\312B.\f\334\021ilW\264'\317"
  21      A24B D51F 
  21      4611 60CA 
GAS LISTING  			page 2


  21      422E 0CDC 
  21      1169 6C57 
  22 0069 7070 D722 	 .ascii "pp\327\"\351,\266nf\252<\201}\244B\300B+\252\005\177\2048\230"
  22      E92C B66E 
  22      66AA 3C81 
  22      7DA4 42C0 
  22      422B AA05 
  23 0081 2C98 89AE 	 .ascii ",\230\211\256\207\226\2621wB\037\371H\003N\313\356\307\357\f"
  23      8796 B231 
  23      7742 1FF9 
  23      4803 4ECB 
  23      EEC7 EF0C 
  24 0095 E1A0 D878 	 .ascii "\341\240\330x\300Dp<f\354s\331\037=\206\033\220Vk\321\314\016"
  24      C044 703C 
  24      66EC 73D9 
  24      1F3D 861B 
  24      9056 6BD1 
  25 00ab D4A6 45A2 	 .ascii "\324\246E\242^\367\324\013\021\362DJ\006O\220\315d\233\2273\375"
  25      5EF7 D40B 
  25      11F2 444A 
  25      064F 90CD 
  25      649B 9733 
  26 00c0 2AE6 AD94 	 .ascii "*\346\255\224E\027\247\003=x\003\007\341#\264"
  26      4517 A703 
  26      3D78 0307 
  26      E123 B4
  27               	 .text
  28               	 .section .gnu.lto_.pureconst.9d85ca12287e6601,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b\020g\200"
  29      6062 1067 
  29      8000 
  30 000a 6E06 0916 	 .string "n\006\t\026\t6\006v).)\036\006^\006>\t~\t\001)A\006"
  30      0936 0676 
  30      292E 291E 
  30      065E 063E 
  30      097E 0901 
  31 0022 106D 0147 	 .ascii "\020m\001G"
  32               	 .text
  33               	 .section .gnu.lto_GameTick.part.0.9d85ca12287e6601,"",@progbits
  34 0000 789C BD55 	 .string "x\234\275UMh\024Y\020\256z\335=\323\223\311$\223I\374\2270\b\n\313\256AQ\004\017\376\334E\324SD\005\311\246\323\222\261\343\206\250\027\367\220\027'\243\022P\243\027\307?0\306$\032\024\275,\354ea.\013\211\240a\016\202\336\372\342u\301\233\312b[\365^\367L\222\031\235\354\036l\230W\335U_\365W_\325{=\002\004,\277~\246\337A\033\340\bY\264"
  34      4D68 1459 
  34      10AE 7ADD 
  34      3DD3 93C9 
  34      2493 49FC 
  35 0076 CDF1 D774 	 .ascii "\315\361\327tc\242PV\240\301v\3046\020\371\006\020\206Ma\340"
  35      63A2 5056 
  35      A0C1 76C4 
  35      3610 F906 
  35      1086 4D61 
  36 008b F009 E464 	 .ascii "\360\t\344d{\023LHy\323/\314~\300Q\351\313q\371%\030F\017\211"
  36      7B13 4C48 
  36      79D3 2FCC 
  36      7EC0 51E9 
  36      CB71 F925 
  37 00a3 A705 C145 	 .ascii "\247\005\301E8N\017h+#p)\261N\225c\262\204\234\026\020\304\020"
  37      384E 0F68 
  37      2B23 7029 
GAS LISTING  			page 3


  37      B14E 9563 
  37      B284 9C16 
  38 00ba B0A6 9A96 	 .ascii "\260\246\232\226\326i\242nZ\371\206\2248\362@\376\033\004\006"
  38      D669 A26E 
  38      5AF9 8694 
  38      38F2 40FE 
  38      1B04 06
  39 00cd F139 F810 	 .ascii "\3619\370\020\305\377 t\360\321\242\274\3572\276\271$\212r\264"
  39      C5FF 2074 
  39      F0D1 A2BC 
  39      EF32 BEB9 
  39      248A 72B4 
  40 00e1 1404 FB7E 	 .ascii "\024\004\373~\b_\351\217\227\267\314\302\013yE\006\301\260\207"
  40      085F E98F 
  40      97B7 CCC2 
  40      0B79 4506 
  40      C1B0 87
  41 00f4 A680 ECCA 	 .ascii "\246\200\354\312:Z\27256yX\346K\362c\020\304U\342\226F\211\317"
  41      3A5A BA35 
  41      3679 58E6 
  41      4BF2 6310 
  41      C455 E296 
  42 010b 85F4 83E0 	 .ascii "\205\364\203\340\335l\"\313\312\236\340&\232\237\207\226\301"
  42      DD6C 22CB 
  42      CA9E E026 
  42      9A9F 8796 
  42      C1
  43 011c 8B49 4BCC 	 .ascii "\213IK\314\242%\036\013cqv\333\274$xi\242\305NR\3541\305\232"
  43      A225 1E0B 
  43      6371 76DB 
  43      BC24 7869 
  43      A2C5 4E52 
  44 0134 C9CE 904D 	 .ascii "\311\316\220Mq\244\205#\255\344\231&O\232\354\024\3316vf\350"
  44      71A4 8523 
  44      ADE4 9926 
  44      4F9A EC14 
  44      D936 7666 
  45 0149 6192 1EDA 	 .ascii "a\222\036\332\311N\220\245\313\202Q)\307\263\300\245\322\325"
  45      C94E 90A5 
  45      CB82 5129 
  45      C7B3 C0A5 
  45      D2D5 
  46 015b 4D2B 6FB8 	 .ascii "M+o\270n4\331\032G\251ml\027 \357_-\304\035|F\233\025\340w\370"
  46      6E34 D91A 
  46      47A9 6D6C 
  46      1720 EF5F 
  46      2DC4 1D7C 
  47 0175 4C1D 4A7B 	 .ascii "L\035J{\230pQ\213\362\260\t`\001F\375k\205X\r*\351\242n6w\001"
  47      9870 518B 
  47      F2B0 0960 
  47      0146 FD6B 
  47      8558 0D2A 
  48 018f 7E22 7033 	 .ascii "~\"p3\203\013\376\365\277k\301)\027\r\005fOQ\312\335\036\266"
  48      830B FEF5 
  48      BF6B C129 
  48      170D 0566 
  48      4F51 CADD 
GAS LISTING  			page 4


  49 01a5 74C2 B6FB 	 .ascii "t\302\266\373\262\270\337C\226\245\360\352M\001\322\253\322\232"
  49      B2B8 DF43 
  49      96A5 F0EA 
  49      4D01 D2AB 
  49      D29A 
  50 01b7 B7F8 1E6B 	 .ascii "\267\370\036k^\325\346\222\214\2107\223%p\273\002?\270m5\300"
  50      5ED5 E692 
  50      8C88 3793 
  50      2570 BB02 
  50      3FB8 6D35 
  51 01cc 4A53 835F 	 .ascii "JS\203_\301\305\371\267\323\237\204\206\347\020\357\302\235\021"
  51      C1C5 F9B7 
  51      D39F 8486 
  51      E710 EFC2 
  51      9D11 
  52 01de C9F8 6A66 	 .ascii "\311\370jf\307 Fy\035\341d)\355\037#\312\0219\356\321+\310?\253"
  52      C720 4679 
  52      1DE1 6429 
  52      ED1F 23CA 
  52      1139 EED1 
  53 01f6 B80C F232 	 .ascii "\270\f\3622\3362Bp\336\215Bf\216\345+_g\344\263r\\\333\002\230"
  53      DE32 4270 
  53      DE8D 4266 
  53      8EE5 2B5F 
  53      67E4 B372 
  54 020e DFAE 9A40 	 .ascii "\337\256\232@\221:\377\356TmWW\271\352Y\227iq+Vk\360\275\206"
  54      913A FFEE 
  54      546D 5757 
  54      B9EA 5997 
  54      6971 2B56 
  55 0226 F3DA 17CD 	 .ascii "\363\332\027\315+\357\337\177_\013\246-\020\253n\001*\374\317"
  55      2BEF DF7F 
  55      5F0B A62D 
  55      10AB 6E01 
  55      2AFC CF
  56 0239 B999 7014 	 .ascii "\271\231p\024\365\233\205K\232\245(\302\236\315\027g\313\353"
  56      F59B 854B 
  56      9AA5 28C2 
  56      9ECD 1767 
  56      CBEB 
  57 024b C31D A937 	 .ascii "\303\035\2517\266\336\326\020M\235u\306\376\323\b\376R\r\214"
  57      B6DE D610 
  57      4D9D 75C6 
  57      FED3 08FE 
  57      520D 8C
  58 025e E7B8 461A 	 .ascii "\347\270F\032\301X\305e\223w\321\b\362W*\221\004\005UD\350\327"
  58      C158 C565 
  58      9377 D108 
  58      F257 2A91 
  58      0405 5544 
  59 0274 7CAE 449A 	 .ascii "|\256D\232\230\220\350\354\255\360\224\355\232A\036nb\361\231"
  59      9890 E8EC 
  59      ADF0 94ED 
  59      9A41 1E6E 
  59      62F1 99
  60 0287 5E42 9BCC 	 .ascii "^B\233\314qK\346Ah\207\226Dn\200\327\221\217\273\261\327\340"
  60      714B E641 
GAS LISTING  			page 5


  60      6887 9644 
  60      6E80 D791 
  60      8FBB B1D7 
  61 029c 3F08 43FF 	 .ascii "?\bC\377Kt\302\001\275\325\327j\271\324yX\032?\244\343\353t<"
  61      4B74 C201 
  61      BDD5 D76A 
  61      B9D4 7958 
  61      1A3F A4E3 
  62 02b3 A968 1771 	 .ascii "\251h\027q\314(\216f-*\377\320\250\364sZ\365sjy?S\221\\\254\312"
  62      CC28 8E66 
  62      2D2A FFD0 
  62      A8F4 735A 
  62      F573 6A79 
  63 02cd 9D53 E5B7 	 .ascii "\235S\345\267\324\225\233\252#W\343[)%,eN\2252\255Ji\r\345\316"
  63      D495 9BAA 
  63      2357 E35B 
  63      2925 2C65 
  63      4E95 32AD 
  64 02e6 AD44 6EBA 	 .ascii "\255Dn\272\201\334\326\252\\\3151\2458\322\272\364\374\205\212"
  64      81DC D6AA 
  64      5CCD 31A5 
  64      38D2 BAF4 
  64      FC85 8A
  65 02f9 DA49 A576 	 .ascii "\332I\245vb\271\332\266\272\232\354:\232\312JS\206RB\276\262"
  65      62B9 DAB6 
  65      BA9A EC3A 
  65      9ACA 4A53 
  65      8652 42BE 
  66 030e E29B 547C 	 .ascii "\342\233T|\231PSy%\232\332\033h\312T5i\216\t\305\241N\363\345"
  66      9950 5379 
  66      259A DA1B 
  66      68CA 5435 
  66      698E 09C5 
  67 0326 D2C6 9A13 	 .ascii "\322\306\232\023\267\336\305xx\350\333I:\r[\315\257\203N\340"
  67      B7DE C578 
  67      78E8 DB49 
  67      3A0D 5BCD 
  67      AF83 4EE0 
  68 033a 062D E128 	 .ascii "\006-\341(}C\370\263]\206\021\177vsE\276\272\272\251^\212q%I"
  68      7D43 F8B3 
  68      5D86 117F 
  68      7673 45BE 
  68      BABA A95E 
  69 0352 E7FC C0AF 	 .ascii "\347\374\300\257\247z\006\372\272z\301>yr\250\357\354y\357\034"
  69      A77A 06FA 
  69      BA7A C13E 
  69      7972 A8EF 
  69      EC79 EF1C 
  70 0366 DDF4 38CE 	 .ascii "\335\3648\316\320\366]\326\331>\257kg\302\351w\\\257\177\260"
  70      D0F6 5DD6 
  70      D93E AF6B 
  70      67C2 E977 
  70      5CAF 7FB0 
  71 037a 6B47 6AA8 	 .ascii "kGj\250\347\214\363\333@W\257\327\337{\032\232\275\301\201\354"
  71      E78C F3DB 
  71      4057 AFD7 
  71      DF7B 1A9A 
GAS LISTING  			page 6


  71      BDC1 81EC 
  72 038e E66D BF64 	 .ascii "\346m\277d\2175%\300\3303\004\342\002|\005\304\313\311\003"
  72      8F35 25C0 
  72      D833 04E2 
  72      027C 05C4 
  72      CBC9 03
  73               	 .text
  74               	 .section .gnu.lto_PlayerClick.part.1.9d85ca12287e6601,"",@progbits
  75 0000 789C 8D90 	 .ascii "x\234\215\220=K\003A\020\206\347\335\335\213\347\007\"\"\210"
  75      3D4B 0341 
  75      1086 E7DD 
  75      DD8B E707 
  75      2222 88
  76 0013 4540 D2D8 	 .ascii "E@\322\330\005\033\021\374#\th\243^\024C\002\207b!\026\331\004"
  76      051B 11FC 
  76      2309 68A3 
  76      5E14 4302 
  76      8762 2116 
  77 0029 05B5 F1B0 	 .ascii "\005\265\361\260\022\255B\020\013!j\027\273(\022LD\301\322B\b"
  77      12AD 4210 
  77      0B21 6A17 
  77      BB28 124C 
  77      44C1 D242 
  78 003e 36D6 692D 	 .ascii "6\326i-<g\3570$\022\304\205\333\231\233w\237\371\022$\350\367"
  78      3C67 EF30 
  78      2412 C485 
  78      DB99 9B77 
  78      9FF9 1224 
  79 0054 99E3 6F   	 .ascii "\231\343o"
  80 0057 96C3 136C 	 .string "\226\303\023l\021!X\3363;\026D`\205\220\265(\351\001\325\230&=$\241L4o+\3008\004\312YB*\344\026`r\311\030\025\265>j\356^\\+}\245\367\264\357\3472\340\242\303\240\025\320<2\200\035\030\201\356.B\220\211*<\375\345\373\b\260\321\377a\325\326\301\241:k\327\223\202\306z\202n\007})t\323\367o\336\373m\300\005\353.\314n,\332\321\332\233tPD\214\034\224\370&\223\212O\202o3t\022\226\261\262Nw\266\311)](\242:\025\370/\3448f\002\241l\271\274\325\266\\\nd+\354!\311%M\246\007\272\377\270}k\214;8g)\r\230\216\245\352\2303\311\031kQ\371D\205\307\343r\013\341\303S:\311k=\302\233\332\246O\036\236=\345\242\217\237\033>\304\323f*\306\352^\344/\210zB\225J\371\365\317Zv\027f<B\273c\025\314\366B\371\346\376T\230\344\347$"
  80      1121 58DE 
  80      333B 1644 
  80      6085 90B5 
  80      28E9 01D5 
  81 0158 A399 7D0F 	 .ascii "\243\231}\017:\233\331\245\325\305l*\276L\322Y[\307\226\265\221"
  81      3A9B D9A5 
  81      D5C5 6C2A 
  81      BE4C D259 
  81      5BC7 96B5 
  82 016d CAC4 67BE 	 .ascii "\312\304g\276\001l\205\213{"
  82      016C 858B 
  82      7B
  83               	 .text
  84               	 .section .gnu.lto_InitDumbgame.9d85ca12287e6601,"",@progbits
  85 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034"
  85      6062 4007 
  85      9240 1C00 
  86 000c C4BC 40CC 	 .string "\304\274@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\355k=\305\0062\210\225\241\245\241a\202\002\003C\032X:\034H\202\364D02\201h\346\213\f\214)\214\013\031Y\341V\20532\202$@Z\271SJs\223\322\023sS\365\222\031"
  86      C8CC C0C8 
  86      34E1 1C03 
  86      4323 0713 
  86      2323 88C1 
  87 006d 3ACC 19C3 	 .ascii ":\314\031\303"
  88               	 .text
  89               	 .section .gnu.lto_DoCustomPreloadStep.9d85ca12287e6601,"",@progbits
  90 0000 789C 8D92 	 .ascii "x\234\215\222\317k\023A\024\307\337wf\267I\323\037\246\307\240"
  90      CF6B 1341 
GAS LISTING  			page 7


  90      14C7 DF77 
  90      66B7 49D3 
  90      1FA6 C7A0 
  91 0014 54A9 1E44 	 .ascii "T\251\036D\261x\364Pj\377\b\241\202z\250\346\007\225)\304\200"
  91      B178 F450 
  91      6AFF 08A1 
  91      827A A8E6 
  91      0795 29C4 
  92 0029 0711 C94B 	 .ascii "\007\021\311K\253\340\255\241\024\2724\212-R\220\322\242\307"
  92      ABE0 ADA1 
  92      14BA 348A 
  92      2D52 90D2 
  92      A2C7 
  93 003b 3DF6 1AB0 	 .ascii "=\366\032\260\212\007\301\233\201B\361\344Y\212\260\276\331\331"
  93      8A07 C19B 
  93      8142 F1E4 
  93      598A B0BE 
  93      D9D9 
  94 004d 6D34 AD90 	 .ascii "m4\255\220\007\273o\346\315|\336\217\357\256\"E\275V\220\347"
  94      07BB 6FE6 
  94      CD7C DE8F 
  94      EFAE 2245 
  94      BD56 90E7 
  95 0061 9D26 BA2C 	 .ascii "\235&\272,\036\232\240\232\237\210\032Y\005\330\005\201\352\n"
  95      1E9A A09A 
  95      9F88 1A59 
  95      05D8 0581 
  95      EA0A 
  96 0073 F5BB B057 	 .ascii "\365\273\260W\325\004m2\257t\266Zo\274\027\037\370%GQ\335@r\216"
  96      D504 6D32 
  96      AF74 B65A 
  96      6FBC 171F 
  96      F825 4751 
  97 008b 82CA A03B 	 .ascii "\202\312\240;0@6v\n\377\026q \177]eFc\203\177G\2216\320\212\n"
  97      3040 3676 
  97      0AFF 1671 
  97      207F 5D65 
  97      4663 837F 
  98 00a5 5D30 EFC0 	 .ascii "]0\357\300\236\006\337\253\275N\024}\334m\356cDQ\021\233\230"
  98      9E06 DFAB 
  98      BD4E 147D 
  98      DC6D EE63 
  98      4451 119B 
  99 00ba 204D 069E 	 .ascii " M\006\236'\233\267\262\021\363\3519s\363B\272/\307\265g\345"
  99      279B B7B2 
  99      11F3 E939 
  99      73F3 42BA 
  99      2FC7 B567 
 100 00cf 6D07 B80D 	 .ascii "m\007\270\re\275\336\247\305v\330:_\304\026|z\b\325\242\365\006"
 100      65BD DEA7 
 100      C576 D83A 
 100      5FC4 167C 
 100      7A08 D5A2 
 101 00e5 73DE C07F 	 .ascii "s\336\300\177JG2\212\254\006\2521i\333\030H\312\013\365S\247"
 101      4A47 328A 
 101      AC06 AA31 
 101      69DB 1848 
GAS LISTING  			page 8


 101      CA0B F553 
 102 00fa 8C16 2C0E 	 .ascii "\214\026,\016\035-m#\rz\026\027\273'\363\\\243\035\273|f\220"
 102      1D2D 6D23 
 102      0D7A 1617 
 102      BB27 F35C 
 102      A31D BB7C 
 103 0110 A902 02FC 	 .ascii "\251\002\002\374=I\233\026\367\2568\312u*,\321g\n\370\325r\316"
 103      3D49 9B16 
 103      F7AE 38CA 
 103      752A 2CD1 
 103      670A F8D5 
 104 0126 C589 8E7B 	 .ascii "\305\211\216{\311\226\341$\264\335\370\332\271\031\347\224s7"
 104      C996 E124 
 104      B4DD F8DA 
 104      B919 E794 
 104      7337 
 105 0138 9D1B 1635 	 .ascii "\235\033\0265\006]\242\235\345\314\211D\2712\324\377\023\331"
 105      065D A29D 
 105      E5CC 8944 
 105      B932 D4FF 
 105      13D9 
 106 014a 6B01 F323 	 .ascii "k\001\363#\203\241q:\373\232\203\031\203aJ\222$\207krud\234."
 106      83A1 713A 
 106      FB9A 8319 
 106      8361 4A92 
 106      2487 6B72 
 107 0162 B9D3 D1F4 	 .ascii "\271\323\321\364\324\340L,F\030|?\347BWi\333\216\237\221\314"
 107      D4E0 4C2C 
 107      4618 7C3F 
 107      E742 5769 
 107      DB8E 9F91 
 108 0177 A2AE 5019 	 .ascii "\242\256P\031\031\321\026r:\224\222\177\".\235\210\033\206\007"
 108      19D1 1672 
 108      3A94 927F 
 108      222E 9D88 
 108      1B86 07
 109 018a 377A E1FC 	 .ascii "7z\341\374\351pW\016/\237\300\337\372\206\273\022x\\pt\373\327"
 109      E970 570E 
 109      2F9F C0DF 
 109      FA86 BB12 
 109      785C 7074 
 110 01a0 4107 7DE2 	 .ascii "A\007}\342\272\213o$x\030\034\366[\334;\331yx\370C\367\322c\247"
 110      BA8B 6F24 
 110      7818 1CF6 
 110      5BDC 3BD9 
 110      7978 F843 
 111 01b8 D3FE 313D 	 .ascii "\323\3761=f%\370B\215\316\372\305\3643;\233\025q\344\037\267"
 111      6625 F842 
 111      8DCE FAC5 
 111      F433 3B9B 
 111      1571 E41F 
 112 01cd 430E 151F 	 .ascii "C\016\025\037/\334\257\314-\224&\037P\256j\346\236\224j\363\305"
 112      2FDC AFCC 
 112      2D94 261F 
 112      50AE 6AE6 
 112      9E94 6AF3 
 113 01e2 C9EB A866 	 .ascii "\311\353\250fo\325\346+\225R\215\274\251\351)\372\003<9\333\222"
GAS LISTING  			page 9


 113      6FD5 E62B 
 113      9552 8DBC 
 113      A9E9 29FA 
 113      033C 39DB 
 114               	 .text
 115               	 .section .gnu.lto_PlayerTickUpdate.9d85ca12287e6601,"",@progbits
 116 0000 789C 8D92 	 .string "x\234\215\222Ak\023A\024\200\337\233\331I\262\331b\343\261TD\352-\301\224\372\017\374\025-\250HLRi\335\302R\352AD2\333F\021OA\020\213^,\"B\021\024\274\004\2544\007\221\366\240\020\350\241\210\207\\J%\205\320c\350\301\365\275\235\315\246\251-f`wf\336\3147\363\315\233\021 \340d\271F\337\270\005\220\243\032\023\200\242\366\003\300O\t!w&A\247\325\306E\320#RX\315\013\334\333\234\242\236\205\312LR\210\334"
 116      416B 1341 
 116      1480 DF9B 
 116      D949 B2D9 
 116      62E3 B154 
 117 008b 848A 9096 	 .string "\204\212\220\226\302\312\r\344%\345\004\254i\375\254\265\267\177(\253O[\272\246\377\004\025t\221v?\2070\213p\235:\230\n+\201\203:\006m4\277\275P\217>\352':\b*.J\001c}0c@q*\270\371\370\271\3221h\t\310\376\017\374 \032\255 \370\365\251\332\036\037\225P\3025\234"
 117      C2CA 0DE4 
 117      25E5 04AC 
 117      69FD ACB5 
 117      B77F 28AB 
 118 00e9 0B5C 548A 	 .string "\013\\T\212:o\251\223\240\372\r\325I\nJ\233G\210RP\325\272v\311\314"
 118      3A6F A993 
 118      A0FA 0DD5 
 118      490A 4A9B 
 118      4788 5250 
 119 0103 DE82 CA34 	 .ascii "\336\202\3124\3759!3(\270\226\337ay\273KI(\341;\202\346Q\276"
 119      FD39 2133 
 119      28B8 96DF 
 119      6179 BB4B 
 119      4928 E13B 
 120 011b 8297 BED6 	 .ascii "\202\227\276\326\031\027\023\017\340\210$\251\225\364B\224\315"
 120      1917 130F 
 120      E088 24A9 
 120      95F4 4294 
 120      CD
 121 012c 9291 1161 	 .ascii "\222\221\021a\235\230\261\b\013CG+\353\330\013*\306\251\334\244"
 121      9D98 B108 
 121      0B43 472B 
 121      EBD8 0B2A 
 121      C6A9 DCA4 
 122 0140 235E 81F7 	 .ascii "#^\201\367\334|\350b\312C$\340\370\341\266a\271\2215\224Q\235"
 122      DC7C E862 
 122      CA43 24E0 
 122      F8E1 B661 
 122      B991 3594 
 123 0156 677B F65A 	 .ascii "g{\366ZmwEo\271D\354e\307^i\017E\344\225\216\275V>\307^I\302"
 123      6D77 456F 
 123      B944 EC65 
 123      C75E 690F 
 123      45E4 958E 
 124 0171 78D0 1EA5 	 .ascii "x\320\036\245\221-\370\272\357\333\361P\030?\2561Cg\330\231\344"
 124      912D F8BA 
 124      EFDB F150 
 124      183F AE31 
 124      4367 D899 
 125 0186 7CD4 77DB 	 .ascii "|\324w\333\277\2435r\260\316\342\266\213\016\355OH\212\344\030"
 125      BFA3 3572 
 125      B0CE E2B6 
 125      8B0E ED4F 
 125      488A E418 
 126 019a 3527 2847 	 .ascii "5'(G/\203#\016\232\264\374\\=h\304I\260s\220uq\344t\266\367\254"
GAS LISTING  			page 10


 126      2F83 230E 
 126      9AB4 FC5C 
 126      3D68 C449 
 126      B073 9075 
 127 01b4 C86C CF77 	 .ascii "\310l\317wb\204\247\250A3\0136\316\033\263\203-\0340s\316\\]"
 127      6284 A7A8 
 127      4133 0B36 
 127      CE1B B383 
 127      2D1C 3073 
 128 01cb C466 2A63 	 .ascii "\304f*c\314\352\335\341i\354\323z\f\242\353\350\034\016\213\313"
 128      CCEA DDE1 
 128      69EC D37A 
 128      0CA2 EBE8 
 128      1C0E 8BCB 
 129 01df 3EFE 3AC2 	 .ascii ">\376:\302\353\365\316\320\273[\377\272\357v\272\362$}\306\235"
 129      EBF5 CED0 
 129      BB5B FFBA 
 129      EF76 BAF2 
 129      247D C69D 
 130 01f3 A8C1 3B31 	 .ascii "\250\301;1)T\341ko\202\337\372r\331\254\323+\323tX\032\343|9"
 130      2954 E16B 
 130      6F82 DFFA 
 130      72D9 ACD3 
 130      2BD3 7458 
 131 020b A57B 0BB7 	 .ascii "\245{\013\267\357\024\026\312\371\"\244=\267p\277\2748W\312O"
 131      EF14 16CA 
 131      F922 A43D 
 131      B770 BFBC 
 131      3857 CA4F 
 132 021f 6538 5C5C 	 .ascii "e8\\\\,\314.\335Z\232+\336\315_E\357/\204^\377T"
 132      2CCC 2EDD 
 132      5A9A 2BDE 
 132      CD5F 45EF 
 132      2F84 5EFF 
 133               	 .text
 134               	 .section .gnu.lto_PlayerBlockAction.9d85ca12287e6601,"",@progbits
 135 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\004\304\274@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327M8\276\340$##\310(V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\002(\t\244\231/20\2460.dd\205[\026\316\310\b\222"
 135      6062 4007 
 135      9240 1C04 
 135      C4BC 40CC 
 135      C8CC C0C8 
 136 0061 69E5 4E29 	 .string "i\345N)\315MJO\314M\325Kf"
 136      CD4D 4A4F 
 136      CC4D D54B 
 136      6600 
 137 006f 00        	 .string ""
 138 0070 895F 1A74 	 .ascii "\211_\032t"
 139               	 .text
 140               	 .section .gnu.lto_PlayerChangeSlot.9d85ca12287e6601,"",@progbits
 141 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\004\304\274@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\3158\276\340,##\310(V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\002(\t\244\231/20\2460.dd\205[\026\316\310\b\222"
 141      6062 4007 
 141      9240 1C04 
 141      C4BC 40CC 
 141      C8CC C0C8 
 142 0061 69E5 4E29 	 .string "i\345N)\315MJO\314M\325Kf"
 142      CD4D 4A4F 
 142      CC4D D54B 
GAS LISTING  			page 11


 142      6600 
 143 006f 00        	 .string ""
 144 0070 8D1F 1A80 	 .ascii "\215\037\032\200"
 145               	 .text
 146               	 .section .gnu.lto_GameTick.9d85ca12287e6601,"",@progbits
 147 0000 789C 5D50 	 .ascii "x\234]P\261J\003A\024\234\331\335\223\213\212\330\331\205 \330"
 147      B14A 0341 
 147      149C D9DD 
 147      938B 8AD8 
 147      D985 20D8 
 148 0014 5844 821F 	 .ascii "XD\202\037\223\2006\352y!r\2014V\026\267\247'XX\004K\255\022"
 148      9380 36EA 
 148      7921 7281 
 148      3456 16B7 
 148      A727 5858 
 149 002c 3B1B B54D 	 .ascii ";\033\265Me\251\205J,R_c\347\007\210\315\371\366\316\004\342"
 149      65A9 854A 
 149      2C52 5F63 
 149      E707 88CD 
 149      F9F6 CE04 
 150 0041 C0EE 3CF6 	 .ascii "\300\356<\366\315\274y\254\202\302\1774\344\324\b\254\t\323\003"
 150      CDBC 79AC 
 150      82C2 7F34 
 150      E4D4 08AC 
 150      09D3 03
 151 0054 55FF 0D48 	 .ascii "U\377\rH|\245\364\250\n\273h&[\260\313\232\306=\323\220\216A"
 151      7CA5 F4A8 
 151      0ABB 6826 
 151      5BB0 CB9A 
 151      C63D D390 
 152 006a C44A 1BC6 	 .ascii "\304J\033\306\273t#\270\216\201\265W\331\347\360\321\234?\330"
 152      BB74 23B8 
 152      8E81 B557 
 152      D9E7 F0D1 
 152      9C3F D8
 153 007d 0B9B E771 	 .ascii "\013\233\347qD\311Z!Bb\207\021\351\027\2448\037~\257\236\262"
 153      44C9 5A21 
 153      4262 8711 
 153      E917 A438 
 153      1F7E AF9E 
 154 0092 3CBF 1CA7 	 .ascii "<\277\034\247\037\233\236B\300\201\214\022xH\255\355\327\340"
 154      1F9B 9E42 
 154      C081 8C12 
 154      7848 ADED 
 154      D7E0 
 155 00a4 DC82 A6DC 	 .ascii "\334\202\246\334.\266E\345X\277\342\364\345{\330\bx+\013\037"
 155      2EB6 45E5 
 155      58BF E2F4 
 155      E57B D808 
 155      782B 0B1F 
 156 00b8 51DD E03A 	 .ascii "Q\335\340:\261v5\242>\301\217\304Kez\205\323e\232\277\254g\244"
 156      B176 35A2 
 156      3EC1 8FC4 
 156      4B65 7A85 
 156      D365 9ABF 
 157 00cf 5F49 6566 	 .ascii "_Iefr\255\271]Z\324\030U\365;\316\374R\004\314\306y!Kq\304\205"
 157      72AD B95D 
GAS LISTING  			page 12


 157      5AD4 1855 
 157      F53B CEFC 
 157      5204 CCC6 
 158 00e9 A9DA 14BB 	 .ascii "\251\332\024\273\214\221dw\033SC\211\246\210\245\347\376z)8\356"
 158      8C91 6477 
 158      1B53 4389 
 158      A688 A5E7 
 158      FE7A 2938 
 159 00fe EEB7 F7BA 	 .ascii "\356\267\367\272\207\365\003T\202N\020F\235^}\373\027\213\245"
 159      87F5 0354 
 159      824E 1046 
 159      9D5E 7DFB 
 159      178B A5
 160 0111 4E23      	 .ascii "N#"
 161               	 .text
 162               	 .section .gnu.lto_PlayerClick.9d85ca12287e6601,"",@progbits
 163 0000 789C 5D4E 	 .string "x\234]N=j\002a\024\234y\337\267\262\370C<A\260K\027\3614\n\246\321\030\003\313\n\333\244J\341\247(\250\225G0\027\210\027\2600]\222\"A\260\n\004\254lr\003\033\363\276\335\b\222\007\363\036\314\233\031F \370?5\305\217\242\244`"
 163      3D6A 0261 
 163      149C 79DF 
 163      B7B2 F843 
 163      3C41 B04B 
 164 004f CAFC 0318 	 .ascii "\312\374\003\030\204\"f[\205\313\333\325%\\\321\320z\232\226"
 164      8422 665B 
 164      85CB DBD5 
 164      255C D1D0 
 164      7A9A 96
 165 0062 F417 445F 	 .ascii "\364\027D_\214e\377\206i\306R\326\273\343\361\371\353}1\245\t"
 165      8C65 FF86 
 165      69C6 52D6 
 165      BBE3 F1F9 
 165      EB7D 31A5 
 166 0077 C984 105D 	 .ascii "\311\204\020]*O(9]FE\001F\316\315+@75\325u\373\254\006\305_\363"
 166      2A4F 2839 
 166      5D46 4501 
 166      46CE CD2B 
 166      4037 35D5 
 167 0092 8AD1 FEE5 	 .ascii "\212\321\376\345{&\035>i\215\210\322dL\\\2345mh\314\266j\336"
 167      7B26 1D3E 
 167      698D 88D2 
 167      644C 5C9C 
 167      356D 68CC 
 168 00a9 300C 3351 	 .ascii "0\f3QB\033Qc\316\231 b\016\370\304\370\217\001\036qp\023W\216"
 168      421B 5163 
 168      CE99 2062 
 168      0EF8 C4F8 
 168      8F01 1E71 
 169 00c1 C92E B3BA 	 .ascii "\311.\263\272\221\367IL9\345\332\264\301\006\203\335\364\352"
 169      91F7 494C 
 169      39E5 DAB4 
 169      C106 83DD 
 169      F4EA 
 170 00d3 64CB A6AE 	 .ascii "d\313\246\256\026\375ye\241\363\320k\337\267zw\327\267\370\005"
 170      16FD 7965 
 170      A1F3 D06B 
 170      DFB7 7A77 
 170      D7B7 F805 
 171 00e7 0C0D 3B7E 	 .ascii "\f\r;~"
GAS LISTING  			page 13


 172               	 .text
 173               	 .section .gnu.lto_PlayerUpdate.9d85ca12287e6601,"",@progbits
 174 0000 789C 8D54 	 .string "x\234\215TMHTQ\024>\347\336w\337s\306\360g\021\324&\3046\2454\342\306\224\202\332\264\250\326\241P-\254\031C\031\351\221\272\210\210\271\243\006\0225X H\026(!MVX;\243\2021\n\022*\021\\X\253\021a\204\210Hj%\321\353\334{\347=G\033\230\2710s\316\271\367~\337\371\316\367\336\f\003\006;\327i\372\334\027"
 174      4D48 5451 
 174      143E E7DE 
 174      77DF 73C6 
 174      F067 11D4 
 175 006c 4729 A203 	 .string "G)\242\003\310F?\003$+\030\343\313M \303\366\353} wq&~\356\246\312\232l\245\312Ba.\t\264Mb#\252\004\020\022\214[\302\306\3049T\344N=LIy7\373~m\203\017\337\314\312Q\371\327K`\034IG\025B\027\302Y*\260B\007\206\333\205\031h\346e*e\335x.G\244\347%4po\231\3007\251\261\002 gPW\036P\276\270\223\226\230\234\224\177<\217\353\216\007\312\354\270\224\272eM\027J\215\024\005\272\370\037\362AjL\310"
 175      C846 3F03 
 175      242B 18E3 
 175      CB4D 20C3 
 175      F6EB 7D20 
 176 00ff 6931 68D9 	 .string "i1h\331B\326\030$+\332R\271#\013\207l-\245u\226e\262\236\367qc\370\355\251Z\204(Nc=X\024\247(\n\210\243\260\251xB\205C\005\204\250xHE\230\3423\212\225\024\037Q\254\312\357WS|L\221\226\200a)G\353\264\260\301\314D\352\366vaGJ\t3]A\335\242\325N\337\352\225\352@\246\"\377\004\203\013+\364\026Eq\026\005\364\2405\001\367\222R\326\020\3675\330\244>\224\331.*\254\"\267\363\244\004\373\021`\004\301\364\326\346\320\f\372\233\266\202\323:O\276\037\202\247*\275\036G\307EF\200B}\0130\230i0(#\265Gu!\266\257\343\2716\237\315i\204\006\222D\342H\204C7\224\030K\343c\301\274\037\340].\031\n \352\n?V\320\251\0039,7\251\221\347Vr\253,o\254y"
 176      42D6 1824 
 176      2BDA 52B9 
 176      230B 876C 
 176      2DA5 7596 
 177 01e6 CAA7 5923 	 .string "\312\247Y#\254\021f\224\332P\211~\232\376\270\361ba|}\225&\237\323\215C\305-\3641[\026\016\275\342>&L0MX\255\035af\337H\243S\323de}^\370\200\312\342M\370\216&d\311z\362L"
 177      AC11 6694 
 177      DA50 897E 
 177      9AFE B8F1 
 177      6261 7C7D 
 178 022a D254 FE6A 	 .string "\322T\376j\247\201\322\365\274\203\216\310\225E\330c\256\001\004\204\025]\210[\263Z\376\310\304\242\263\023\224Q\f\001,\302\270\374\335W\002\317w\342\367\253L\343\265\205\337\346\003\013\253\312\266p$\260\260\232`\232\026\31539i\016\312a\"\260\n_"
 178      A781 D2F5 
 178      BC83 8EC8 
 178      9545 D863 
 178      AE01 0484 
 179 0279 3541 2DF0 	 .ascii "5A-\360\357\277\322&\017\201\245\337\034[\377Z\226 \231M\037"
 179      EFBF D226 
 179      0F81 A5DF 
 179      1C5B FF5A 
 179      9620 994D 
 180 028e 0CDE 94BC 	 .ascii "\f\336\224\274\215\250\316\324\377Het\240\367\302\245\316\336"
 180      8DA8 CED4 
 180      FF48 6574 
 180      A0F7 C2A5 
 180      CEDE 
 181 02a0 58E4 2284 	 .ascii "X\344\"\204\335x\347\325\330\225\356h\244\305\356\277<\340F\016"
 181      DD78 E7D5 
 181      D895 EE68 
 181      A4C5 EEBF 
 181      3CE0 460E 
 182 02b4 3BDD 5DFD 	 .ascii ";\335]\375\275n\244U\364\305\342\2216Go67\243\313\334\001\354"
 182      BD6E A455 
 182      F4C5 E291 
 182      3647 6F36 
 182      37A3 CBDC 
 183 02ca FE07 20D6 	 .ascii "\376\007 \326XY"
 183      5859 
 184               	 .text
 185               	 .section .gnu.lto_ClientHandleChat.9d85ca12287e6601,"",@progbits
 186 0000 789C 6362 	 .string "x\234cb`b@\007\222@\034\r\304\274@\314\310\314\300\3104\341\034\003C#\007\023##\210\301\300\310P\317\304X\037\303\bV\273\236\351\300\203\377\377\327\335\271\264`\007#\0133#c\001X\230\225\241\245\241a\202\002\003C\032\230\033\016$AZ#\030\231@4\363E\206\306\007\353=S\030\0272\2622d1B\f\002*b\004I\202\234\303\235R\232\233\224\236\230\233\252\227\314"
 186      6062 4007 
 186      9240 1C0D 
 186      C4BC 40CC 
 186      C8CC C0C8 
 187 0079 00        	 .string ""
GAS LISTING  			page 14


 188 007a CA80 1DFE 	 .ascii "\312\200\035\376"
 189               	 .text
 190               	 .section .gnu.lto_.symbol_nodes.9d85ca12287e6601,"",@progbits
 191 0000 789C 4DCB 	 .string "x\234M\313=N\303@\020\206\341ov\275v~m\307\316\237C\301%\270\337\027\311\022I\211\322\207\306\r\007\240\242$}\316"
 191      3D4E C340 
 191      1086 E16F 
 191      76BD 767E 
 191      6DC7 CE9F 
 192 0029 5874 9C01 	 .ascii "Xt\234\001\341\261#v]\314\253g\306k`\360&\030>\263#\360t\005"
 192      E1B1 2376 
 192      5DCC AB67 
 192      C66B 60F0 
 192      2618 3EB3 
 193 0041 C8F3 515C 	 .ascii "\310\363Q\\\002G\270Xt\216M7\315\035%\270\217\254\356\204\346"
 193      0247 B858 
 193      748E 4D37 
 193      CD1D 25B8 
 193      8FAC EE84 
 194 0056 B67B 3E8A 	 .ascii "\266{>\2121\264^.\215\320\275\315\\7\215e\024\\\212Xw\021]\360"
 194      31B4 5E2E 
 194      8DD0 BDCD 
 194      5C37 8D65 
 194      145C 8A58 
 195 006e D631 0E34 	 .ascii "\3261\0164a\022h\312Q\240\031\307\201\346\234xI\311\351\240\375"
 195      6112 68CA 
 195      51A0 19C7 
 195      81E6 9C78 
 195      49C9 E9A0 
 196 0083 5E64 C999 	 .ascii "^d\311\231\307\212s\2175S\217\r3\217-s\217\212\013\217\005\013"
 196      C78A 738F 
 196      3553 8F0D 
 196      338F 2D73 
 196      8F8A 0B8F 
 197 0099 8F9C E53F 	 .ascii "\217\234\345?,\266hO?\367\026\0334\007m\211\272\357\032\355\243"
 197      2CB6 684F 
 197      3FF7 161B 
 197      3407 6D89 
 197      BAEF 1AED 
 198 00ae 7685 CBAD 	 .ascii "v\205\313\255\365\347\257h\333\017\355\022\227\276%\232\276\005"
 198      F5E7 AF68 
 198      DB0F ED12 
 198      97BE 259A 
 198      BE05 
 199 00c0 6A6D B21B 	 .ascii "jm\262\033\376K*4\332\024x\177}\260Y\204\257\227\253\330\274"
 199      FE4B 2A34 
 199      DA14 787F 
 199      7DB0 5984 
 199      AF97 ABD8 
 200 00d5 3B1F BE2B 	 .ascii ";\037\276+m\323\025\177 ZxA"
 200      6DD3 157F 
 200      205A 7841 
 201               	 .text
 202               	 .section .gnu.lto_.refs.9d85ca12287e6601,"",@progbits
 203 0000 789C 2586 	 .string "x\234%\206\013\n\200@\020\205\364M\263\375 \272M\367\277Yl)\210!<\374\f\320`jZ\213\332&+[\366:f9\275\310\270\277o\244m^!\020"
 203      0B0A 8040 
 203      1085 F44D 
 203      B3FD 20BA 
GAS LISTING  			page 15


 203      4DF7 BF59 
 204 0033 FA        	 .ascii "\372"
 205               	 .text
 206               	 .section .gnu.lto_.decls.9d85ca12287e6601,"",@progbits
 207 0000 789C AD5A 	 .string "x\234\255Z\177p\024\325\035\337\335\273\313\345\310\017B@\f\210\022\024\224\242M\220\252\265\323\321b\361G\355L[g\"\323\231\372\307\365\270]\222k.\273\347\335F\2103\312\022\001\243\005\363\303\020b@HT\002HU~:\301F=\261\202\n\323\021\374\001\255I9\252\320aF[Z-\321Zr\375\276\335\367\366\356\275\335\275\354\305\356\3147\273\373\331\367\375|\177\276\267?.\002'pQ/\307\245a\033\276\226\343^\367p\\1\307q\267\202L"
 207      7F70 14D5 
 207      1DDF DDBB 
 207      CBE5 C80F 
 207      4240 0C88 
 208 008e E903 D90A 	 .string "\351\003\331\n\322\017\262\023\004\206r/\202\274\004\262\033d\017\b\317\031\333\024\220} \003 \007A\336\002y\033\344\b\310\020\310' gA\276"
 208      D20F B213 
 208      0486 722F 
 208      82BC 04B2 
 208      1B64 0F08 
 209 00bc B980 F440 	 .string "\271\200\364@\321\003\342\003)\006)\003\271\024d\032H%\310\\\020?\214\233\007\373\353@\252@\276\017\362\003\220\037\202t\022\303xC\266g`\237K9#\216\333x\303?\344\267\2173\370\272"
 209      D103 E203 
 209      2906 2903 
 209      B914 641A 
 209      4825 C85C 
 210 00f9 D800      	 .string "\330"
 211 00fb B21F 8EBB 	 .string "\262\037\216\273a?\f\373\247\370L\234\005p\334\303\033\361\226\300~#\310&\220I \363A\236\006\331\002\322\0072\035\373P\210\355\347\212\311\303\304\222\275\r`\377\262}GC6\342q<\036\023\340\214\034\274\n\373\327A\236\201\343\363\260\177\026\366\177\317\342\317\336\016f\035\363\3149\331P\255\312\361ub\3779\336\310[\037\366\343\026\224#\220\243(O\274\265\017f\0016\031$\bR"
 211      613F 0CFB 
 211      A7F8 4C9C 
 211      0570 DCC3 
 211      1BF1 96C0 
 212 0174 E71A ECEF 	 .string "\347\032\354\357"
 212      00
 213 0179 B913 E42E 	 .string "\271\023\344.\220\273A\036\304y@\366\346\342:\013\\\246\246\331\033\352\235\022\306'\237\203_\250\316\333\260\355\311\330\376rl\373\016\306>\217\271=\234s/\035arv\204\263nC\314\230!\2331\250\347\375L\f\304o\322\203h\023\360\330}x,[\303\263\330_\244\273\035\256\035\310\322C\327Po\240\230Q\017\374\003\344s\316\350\213\0350\366y\206\013\315\277\t6>\221\274\262\265F\343\036\305uB\272s\361\270\354\2718\217\261q\201\311\315\005\274\037e\362\023\340Z4\255Y\323\332\265\342n\360\345>^\344K\0030\233\320Aq@W\231\303=\247im\251\267F\317\013\232\346\025\371>>"
 213      90BB 411E 
 213      C479 40F6 
 213      E6E2 3A0B 
 213      5CA6 A6D9 
 214 0234 AE40 B3CD 	 .ascii "\256@\263\315\343vhp\005\224\213l2/\362|\300r.\362\317\361\363"
 214      E376 6870 
 214      0594 8B6C 
 214      322F F27C 
 214      C072 2EF2 
 215 024b 38C3 8E7E 	 .ascii "8\303\216~\031\037\244\301P\021\3678r\245w\2456\245\273t\022"
 215      191F A4C1 
 215      5011 F738 
 215      72A5 77A5 
 215      36A5 BB74 
 216 0260 07BC 9AD6 	 .ascii "\007\274\232\326\013\302\337\257;\251\351NV\344\360\021\271\002"
 216      0BC2 DFAF 
 216      3BA9 E94E 
 216      56E4 F011 
 216      B902 
 217 0272 D036 DDBF 	 .ascii "\3206\335\277\371\274\215O\272\033\333\260_\367\341\261Z\032"
 217      F9BC 8D4F 
 217      BA1B DBB0 
 217      5FF7 E1B1 
 217      5A1A 
 218 0284 6FFC 0A02 	 .ascii "o\374\n\002\2550\255\324\021+%X\273\237\237\224I\234\206\275"
 218      AD30 ADD4 
 218      112B 2558 
 218      BB9F 9F94 
 218      499C 86BD 
GAS LISTING  			page 16


 219 0298 D547 608D 	 .ascii "\325G`\2152\242!`\215\347\263\354\025\0072\007\305\330#'\275"
 219      32A2 2160 
 219      8DE7 B3EC 
 219      1507 3207 
 219      C5D8 2327 
 220 02ad ADBC 9956 	 .ascii "\255\274\231V\\\245\324JmvV\225*\211\206\327\254R\362\277~\200"
 220      5CA5 D44A 
 220      6D76 5695 
 220      2A89 86D7 
 220      AC52 F2BF 
 221 02c3 76EA 19B8 	 .ascii "v\352\031\270\2217\323m\020\372\231z\370\351z\370\003\231\003"
 221      9137 D36D 
 221      10FA 997A 
 221      F8E9 7AF8 
 221      0399 03
 222 02d6 948E 89B9 	 .ascii "\224\216\211\271Jb\344\t;\262\2208R\210\231_\312;I\273\034\222"
 222      4A62 E409 
 222      3BB2 9038 
 222      5288 995F 
 222      CA3B 49BB 
 223 02ec E41F 2349 	 .ascii "\344\037#I/f\222d\347,d\214u\226\312\032\242\330\223\267\263"
 223      2F66 9264 
 223      E72C 648C 
 223      7596 CA1A 
 223      A2D8 93B7 
 224 0301 7B1D 9CF5 	 .ascii "{\035\234\365\214\341\354\356\214\2633\271\315Z2\225\272x\261"
 224      8CE1 ECEE 
 224      8CB3 33B9 
 224      CD5A 3295 
 224      BA78 B1
 225 0314 B560 754B 	 .ascii "\265`uKJK\246\323?\342\246r\353\3656_\251-\004\227o\275\304\266"
 225      4A4B A6D3 
 225      3FE2 A672 
 225      EBF5 365F 
 225      A92D 0497 
 226 032c D311 CF   	 .ascii "\323\021\317"
 227 032f 7E7E 6A76 	 .string "~~jv%\005\356\247t\2519\356jn\253>\035:\223\274\316\204\264\366\3613\351\372\277\314\013\331\200\341R\362\344\273\315\336n\355<\324\337\265?\007\260?\036#Rc\211\240N\364\203\305\036\323\226\300\375\212vy6\367\254\246uh#h\n\363d\215i@c\006\300m;\303\230\030+\276\337\236\255\250\270P4\223\264.\331\\\301\231Y\032`\2634h\315\322\256Tr\020R\303\257\204\245c\205Q\016\201\273\337\266\006\032]\203\203,\373\233V\366\336T\362#\013\373\303n\330\337b\331\017\331\262\017\034\022\214\002\023\362\016\336\r\373\333,\373;\266\231\031%\354\256\333\347\250\233\366\311\367\234i\267gy\233~k\326\236\244\332f\277>\350\210\213\206k\246\032N\344_\203T\270\325\374\232\2629\230\207\315-k\204\nb1\231\207\305\017M=\201{\315\215=\263\001\350\271q\204\355\200\343\266\035\320u8\337\016\030\266\353"
 227      2505 EEA7 
 227      74A9 39EE 
 227      6A6E AB3E 
 227      1D3A 93BC 
 228 0430 A682 6FDA 	 .ascii "\246\202o\332W\260\235\312\346\007\372\240\241qE7\304Fw\312v"
 228      57B0 9DCA 
 228      E607 FAA0 
 228      A171 4537 
 228      C446 77CA 
 229 0445 F68C E2E8 	 .ascii "\366\214\342\350Z+\311\364\371\330\325\364\371\204\245\377\324"
 229      5A2B C9F4 
 229      F9D8 D5F4 
 229      F984 A5FF 
 229      D4
 230 0456 96FE E4BB 	 .ascii "\226\376\344\273\204\336u\366\376\366\377\230?L\266?\265\313"
 230      84DE 75F6 
 230      FEF6 FF98 
 230      3F4C B63F 
 230      B5CB 
 231 0468 36BD 3E93 	 .ascii "6\275>\223\256?\353\252\007\237\246\346\313\t\327\232\035\314"
GAS LISTING  			page 17


 231      AE3F EBAA 
 231      079F A6E6 
 231      CB09 D79A 
 231      1DCC 
 232 047a 4C4B E661 	 .ascii "LK\346a\223\236i\347\365\220\306\320t\350\215\263l\361>\263-"
 232      939E 69E7 
 232      F590 C6D0 
 232      74E8 8DB3 
 232      6CF1 3EB3 
 233 048f 5ED7 1F99 	 .ascii "^\327\037\231\225\365KW\255\361\005\313\376\245\355\274\372\370"
 233      95F5 4B57 
 233      ADF1 05CB 
 233      FEA5 EDBC 
 233      FAF8 
 234 04a1 F85A 9FB6 	 .ascii "\370Z\237\266KK\245\3233\231g\205\276\314\343\215\245;F\350\356"
 234      4B4B A5D3 
 234      3399 6785 
 234      BECC E38D 
 234      A53B 46E8 
 235 04b6 A09E 92A8 	 .ascii "\240\236\222\250\007#\313\343\312\327\231\307\2251\272e\245`"
 235      0723 CBE3 
 235      CAD7 99C7 
 235      9531 BA65 
 235      A560 
 236 04c8 3B37 D7AF 	 .ascii ";7\327\2577\362\217\210\340.\243\017\272\220\311?e\020\233\303"
 236      37F2 8F88 
 236      E02E A30F 
 236      BA90 C93F 
 236      6510 9BC3 
 237 04dc 353F 4655 	 .ascii "5?FUn\003\253\231\243r\315\332\336\266\355\246.\227C\017G\371"
 237      6E03 AB99 
 237      A372 CDDA 
 237      DEB6 EDA6 
 237      2E97 430F 
 238 04f2 8D35 D7A9 	 .ascii "\2155\327\251\266T\372\370\231\320j\355\264\361`F\252y@`\253"
 238      B654 FAF8 
 238      99D0 6AED 
 238      B4F1 6046 
 238      AA79 4060 
 239 0507 6950 340B 	 .ascii "iP4\0136\024\311\236\303\315\013I7\f\353\372o:\350\257\262\325"
 239      3614 C99E 
 239      C3CD 0B49 
 239      370C EBFA 
 239      6F3A E8AF 
 240 051d 1F34 F55D 	 .ascii "\0374\365]\257\004k\004\347Z\233/Q\275\216oz\"\277\235\237\223"
 240      AF04 6B04 
 240      E75A 9B2F 
 240      51BD 8E6F 
 240      7A22 BF9D 
 241 0533 EF1B 92A5 	 .ascii "\357\033\222\245mZ\004\267m\363\216C>~k\233\217\201\374\363\261"
 241      6D5A 04B7 
 241      6DF3 8E43 
 241      3E7E 6B9B 
 241      8F81 FCF3 
 242 0548 4E60 56C6 	 .ascii "N`V\306\235\326\373\3121\007'Zm\2358\231\277\023\355\264\023"
 242      9DD6 FBCA 
 242      3107 275A 
GAS LISTING  			page 18


 242      6D9D 3899 
 242      BF13 EDB4 
 243 055d D46B 867D 	 .ascii "\324k\206}\026\361\033\367\231\321\224\361\306\375\244\200\360"
 243      16F1 1BF7 
 243      99D1 94F1 
 243      C6FD A480 
 243      F0
 244 056e 8F04 F685 	 .ascii "\217\004\366\205\316\313\274\320y\351\027:8\325\264\321\354\312"
 244      CECB BCD0 
 244      79E9 173A 
 244      38D5 B4D1 
 244      ECCA 
 245 0580 79D1 9B1D 	 .ascii "y\321\233\035o\251\303_\034R\320e\227\202T\272\343\254uj\234"
 245      6FA9 C35F 
 245      1C52 D065 
 245      9782 54BA 
 245      E3AC 756A 
 246 0595 71A0 E8B6 	 .ascii "q\240\350\266\245\030\334\320\357K\332\256d9\362\330\303\026"
 246      A518 DCD0 
 246      EF4B DAAE 
 246      6439 F2D8 
 246      C316 
 247 05a7 33AF DB9C 	 .ascii "3\257\333\234\327\256\001\277r\360z\213\255\327\235\177n"
 247      D7AE 01BF 
 247      72F0 7A8B 
 247      ADD7 9D7F 
 247      6E
 248 05b8 CDDF EBBE 	 .string "\315\337\353\276o\3455\236K\3549\023\306&\217}\030\333l[\370\203Nm\025y\2718\252\027o\233\203\376\016Z\377J\256O\353=\236\272x\346\211i\253\264\224\206zk\205\271F\277lr8eb'f\273\317\\\2331cr\327\243BwR\357'\302\366\312\230l/d|C,\347\337K\0368\274\201\207\333\243\206\"\263~>j\036c\345{F_\371\306\370D\205U5\017\321\235\257;\300|\031\311\272\033\263#E~\267\220\357\327\206=\202\375\327\206j\252Vd\024\250\035d\223\227\355\205\336J\002\367\266'\353\026\270\027\347\362\006n\257\326\222\324JD\376%\360\022+\233\t\030\346\t\304[!\301\ny\b\364\261\ty\t\364\020A|\004\271\225 \005\004\331k\252\371\tt\017]<@\006\315A\001\002\325\023d\002A\0367\007\025\021\350\035\023*&\320n\023*!P\277\t\225\022\350\032\202L$\310mt\345"
 248      6FE5 359E 
 248      4BEC 3913 
 248      C626 8F7D 
 248      18DB 6C5B 
 249 06b9 79D1 549B 	 .ascii "y\321T\233D\240\233\tRN\220\367\314A\223\t\264\312\204\246\020"
 249      44A0 9B09 
 249      524E 90F7 
 249      CC41 9309 
 249      B4CA 84A6 
 250 06ce E829 13BA 	 .ascii "\350)\023\272\204@\013\t2\325\202\\jA*\b\322c\022M#P\237\tM\267"
 250      8440 0B09 
 250      32D5 825C 
 250      6A41 2A08 
 250      D263 124D 
 251 06e8 4297 11A8 	 .ascii "B\227\021\250\212 3\b\"\023\344r\202<f\252]A\240\207\t2\223 "
 251      8A20 3308 
 251      2213 E472 
 251      823C 66AA 
 251      5D41 A087 
 252 0700 B710 A492 	 .ascii "\267\020\244\222 \373M\265Y\026kWZ2w\025A\326\231j\263\t\364"
 252      20FB 4DB5 
 252      5916 6B57 
 252      5A32 7715 
 252      41D6 996A 
 253 0717 0B82 CC21 	 .ascii "\013\202\314!\310\002\202\\M\020\363)\360\032\202\334H\220\271"
 253      C802 825C 
 253      4D10 F329 
 253      F01A 82DC 
 253      4890 B9
GAS LISTING  			page 19


 254 072a 04B9 9320 	 .ascii "\004\271\223 \337!\310e\004\231G\220.\323\374\265\004\272\201"
 254      DF21 C865 
 254      0499 4790 
 254      2ED3 FCB5 
 254      04BA 81
 255 073d 20D7 1164 	 .ascii " \327\021d>A\276K\220i\004\251\"\310T\202Tg\020sM\334\177x\255"
 255      3E41 BE4B 
 255      9069 04A9 
 255      22C8 5482 
 255      5467 1073 
 256 0756 97AC 66E6 	 .ascii "\227\254f\346\333\355\230\253\342\200\303\032\333\001\017\264"
 256      DBED 98AB 
 256      E280 C31A 
 256      DB01 0FB4 
 257 0766 A756 F207 	 .ascii "\247V\362\007\265\266\265\275p\003[1\223P\376iL\312W\350\205"
 257      B5B6 B5BD 
 257      7003 5B31 
 257      9350 FE69 
 257      4CCA 57E8 
 258 077b 166E 2023 	 .ascii "\026n #\207\002\253\036i\321\276J\247\375\324\312W\316\265gN"
 258      8702 AB1E 
 258      69D1 BE4A 
 258      A7FD D4CA 
 258      57CE B567 
 259 0790 CCC5 7297 	 .ascii "\314\305r\227\271\370\334\244\257N\177\325-\276*\224c\273\306"
 259      B9F8 DCA4 
 259      AF4E 7FD5 
 259      2DBE 2A94 
 259      63BB C6
 260 07a3 A7FB E489 	 .ascii "\247\373\344\211\207\312\f\224\263\271\025\341m\026\007\334\315"
 260      87CA 0C94 
 260      B3B9 15E1 
 260      6D16 07DC 
 260      CD
 261 07b4 C9E1 CFE7 	 .ascii "\311\341\317\347j\217x\360\252\356\3429ju\032\377r\361\206\376"
 261      6A8F 78F0 
 261      AAEE E239 
 261      6A75 1AFF 
 261      72F1 86FE 
 262 07c8 1C75 CEC3 	 .ascii "\034u\316\303>G\371\230"
 262      3E47 F998 
 263 07d0 E728 1F7D 	 .ascii "\347(\037}\027\360\0052\007\351\264\007\005\361/3\b;\273\346"
 263      17F0 0532 
 263      07E9 B407 
 263      05F1 2F33 
 263      083B BBE6 
 264 07e4 4A4D 4A51 	 .ascii "JMJQ\032\240B\200\nt\fN_\255\245~m<\333\2217\3511\370\004G>\355"
 264      1AA0 4280 
 264      0A74 0C4E 
 264      5FAD A57E 
 264      6D3C DB91 
 265 0800 F79D 90F3 	 .ascii "\367\235\220\3637xBw\302\r\235\327\231\356X6\235\300\215\272"
 265      3778 4277 
 265      C20D 9DD7 
 265      99EE 5836 
 265      9DC0 8DBA 
 266 0814 89B6 C099 	 .ascii "\211\266\300\231\356\237\264wI7\336\025:\323\215\320\336\255"
GAS LISTING  			page 20


 266      EE9F B477 
 266      4937 DE15 
 266      3AD3 8DD0 
 266      DEAD 
 267 0826 F6BA F06E 	 .ascii "\366\272\360n\2023]\373z\212\35617t\305\216t\311/\316\241\356"
 267      8233 5DFB 
 267      7A8A EE31 
 267      3774 C58E 
 267      74C9 2FCE 
 268 083c 246C AD6E 	 .ascii "$l\255n\330J\235\235{\225\216\265\303\r]\2313\335\2074\335z7"
 268      D84A 9D9D 
 268      7B95 8EB5 
 268      C30D 5D99 
 268      33DD 8734 
 269 0853 74E5 CE74 	 .ascii "t\345\316t\3034]\267\033\272)\316t\377\246\3516\272\241\233\352"
 269      C334 5DB7 
 269      1BBA 29CE 
 269      74FF A6E9 
 269      36BA A19B 
 270 0868 4C77 91A6 	 .ascii "Lw\221\246\333\354\206\256\302\211\25699r\256R/\254\261p\366"
 270      DBEC 86AE 
 270      C289 AE39 
 270      3972 AE52 
 270      2FAC B170 
 271 087d B16C D4C2 	 .ascii "\261l\324\302\211\017\247;\262i\307\332\260s\006]\277\033\272"
 271      890F A73B 
 271      B269 C7DA 
 271      B073 065D 
 271      BF1B BA
 272 0890 CB9C 9DFB 	 .ascii "\313\234\235\373\372\\e\347\f\362\240\2732\2710\263\376Z\026"
 272      FA5C 65E7 
 272      0CF2 A0BB 
 272      32B9 30B3 
 272      FE5A 16
 273 08a3 F453 59CF 	 .ascii "\364SY\317\223\30619\322\177c~\201\365\204\267\361d\006~W\301"
 273      93C6 3139 
 273      D27F 637E 
 273      81F5 84B7 
 273      F164 067E 
 274 08b9 3D3F 7268 	 .ascii "=?rhn[\005^(\307L\361\f\233(lc\272\210b2<\023\270\367\363qK\344"
 274      6E5B 055E 
 274      28C7 4CF1 
 274      0C9B 286C 
 274      63BA 8862 
 275 08d6 4F0B B332 	 .ascii "O\013\2632\003\263IG\333\265)\245\204th\334\244\002E\332\266"
 275      03B3 4947 
 275      DBB5 29A5 
 275      8474 68DC 
 275      A402 45DA 
 276 08eb A679 E169 	 .ascii "\246y\341i\236\260\236\0337\253\207b\355\244X/\214\233\325K\261"
 276      9EB0 9E1B 
 276      37AB 8762 
 276      EDA4 582F 
 276      8C9B D54B 
 277 0900 7651 ACA3 	 .ascii "vQ\254\243\343f\365Q\254=\024\353\023\276\361\262\026P\254\233"
 277      E366 F551 
 277      AC3D 14EB 
GAS LISTING  			page 21


 277      13BE F1B2 
 277      1650 AC9B 
 278 0914 28D6 0DE3 	 .ascii "(\326\r\343f\365S\254\233)\326\315nX/\267c\245\273u\017\305\372"
 278      66F5 53AC 
 278      9B29 D6CD 
 278      6E58 2FB7 
 278      63A5 BB75 
 279 092b BB71 B3D2 	 .ascii "\273q\263\322\355\272\217b\375\303\270Y\351~}\231b=>nV\272_\007"
 279      EDBA 8F62 
 279      FDC3 B859 
 279      E97E 7D99 
 279      623D 3E6E 
 280 0943 28D6 D4B8 	 .ascii "(\326\324\270Y\351~}\205b\035\0317+\335\257\203\024kk\301xY\351"
 280      59E9 7E7D 
 280      8562 1D19 
 280      372B DDAF 
 280      8314 6B6B 
 281 095b 7E7D 6D8D 	 .ascii "~}m\215\320m\376\322\266\225%\265[\322\257p^\376\336\313&\033"
 281      D06D FED2 
 281      B695 25B5 
 281      5BD2 AF70 
 281      5EFE DECB 
 282 0971 7043 36D3 	 .ascii "pC6\323\231\354\003*\336\243n\342\255d\327\370J\264\306\363\226"
 282      99EC 032A 
 282      DEA3 6EE2 
 282      AD64 D7F8 
 282      4AB4 C6F3 
 283 0986 35DE CE93 	 .ascii "5\336\316\223J\267k\374\2115\353\3405g>\ts\310M\230\263\234\351"
 283      4AB7 6BFC 
 283      8935 EBE0 
 283      3567 3E09 
 283      73C8 4D98 
 284 099d 4E66 E7EC 	 .ascii "Nf\347\35437dW:\223\rQ9\373\217\233\234]\365-rv\225\333\234\235"
 284      3337 6457 
 284      3A93 0D51 
 284      39FB 8F9B 
 284      9C5D F52D 
 285 09b7 A273 B6D6 	 .ascii "\242s\266\326\357\"\314\331NtZ\362\374\235\335\025\316_\260Z"
 285      EF22 CCD9 
 285      4E74 5AF2 
 285      FC9D DD15 
 285      CE5F B05A 
 286 09cb CC30 8DEF 	 .ascii "\3140\215\357V\"\337\352\311\367\013V\233\307\376\013V\031v\004"
 286      5622 DFEA 
 286      C9F7 0B56 
 286      9BC7 FE0B 
 286      5619 7604 
 287 09df 1661 3606 	 .ascii "\026a6\006\332,>\234c\023\204\271a\230~\335\324\377\201#\357"
 287      DA2C 3E9C 
 287      6313 84B9 
 287      6198 7EDD 
 287      D4FF 8123 
 288 09f4 2F6E 1D0E 	 .ascii "/n\035\016\376\222M\340v\370\231\327f\253\331'=\324{soG\362\233"
 288      FE92 4DE0 
 288      76F8 99D7 
 288      66AB D927 
 288      3DD4 7B73 
GAS LISTING  			page 22


 289 0a0c 439D E8FB 	 .ascii "C\235\350\3731\376\364j\274\214\356f\211,\316\254\317\3600\277"
 289      31FE F46A 
 289      BC8C EE66 
 289      892C CEAC 
 289      CFF0 30BF 
 290 0a20 DDED 129C 	 .ascii "\335\355\022\234C\350\362\330\377_\224\361\275\336Ik\203\243"
 290      43E8 F2D8 
 290      FF5F 94F1 
 290      BDDE 496B 
 290      83A3 
 291 0a32 D670 0EAD 	 .ascii "\326p\016\255nG-\364{\224\223\326S\216Z\353rh\3658je\365\254"
 291      6E47 2DF4 
 291      7B94 93D6 
 291      538E 5AEB 
 291      7268 F538 
 292 0a4a 456B A3A3 	 .ascii "Ek\243\243V{\016[\2332Zx~$\255\377NVA\264<X\353\351\274\247\307"
 292      567B 0E5B 
 292      9B32 5A78 
 292      7E24 ADFF 
 292      4E56 41B4 
 293 0a65 6687 7613 	 .ascii "f\207v\023h\343\275V\343\026\252-y\033\357u0N>\0173\371\352\311"
 293      68E3 BD56 
 293      E316 AA2D 
 293      791B EF75 
 293      304E 3E0F 
 294 0a7d 91AF BE4C 	 .ascii "\221\257\276L\276\256\341\372\321g\216\213\247\267\362\253Z\274"
 294      BEAE E1FA 
 294      D167 8E8B 
 294      A7B7 F2AB 
 294      5ABC 
 295 0a8f E6B7 A8CC 	 .ascii "\346\267\250\314f\f\320Z\332\nm.26\235\336'\364/E\216\225=\232"
 295      660C D05A 
 295      DA0A 6D2E 
 295      3236 9DDE 
 295      27F4 2F45 
 296 0aa7 A363 B73A 	 .ascii "\243c\267:wQ\216\370\372\035\265\336\3101\023\2679j\035\310\341"
 296      7751 8EF8 
 296      FA1D B5DE 
 296      C831 13B7 
 296      396A 1DC8 
 297 0abc E176 3697 	 .ascii "\341v6\227\016\251\312y\221\273\242\2721\021\257\216F\226T\207"
 297      0EA9 CA79 
 297      91BB A2BA 
 297      3111 AF8E 
 297      4696 5487 
 298 0ad0 1E88 5747 	 .ascii "\036\210WG\344p\264Q\224\252\023\252\030\221\325\252:\316\337"
 298      E470 B451 
 298      94AA 13AA 
 298      1891 D5AA 
 298      3ACE DF
 299 0ae3 08FB 9B83 	 .ascii "\b\373\233\203j\301]?_\\\271\210\363\206\353B\361B\204}oAP-\022"
 299      6AC1 5D3F 
 299      5F5C B988 
 299      F386 EB42 
 299      F142 847D 
 300 0afc 1B1B 96D4 	 .ascii "\033\033\226\324\206\032\244\25207\361.\330\337\033\t\327W\305"
 300      861A A4AA 
GAS LISTING  			page 23


 300      3037 F12E 
 300      D8DF 1B09 
 300      D757 C5
 301 0b0f 4271 B56A 	 .ascii "Bq\265j~\371=\321P\223\024_\0245\241\353\371\345\374\203\305"
 301      7EF9 3DD1 
 301      5093 145F 
 301      1435 A1EB 
 301      F9E5 FC83 
 302 0b24 77CB 11F5 	 .ascii "w\313\021\365v\2546\371veQcBU\032\356\211KQ%$\326\250R\254\314"
 302      76AC 36F9 
 302      7665 5163 
 302      4255 1AEE 
 302      894B 5125 
 303 0b3e D043 4C8B 	 .ascii "\320CL\213cbH\225&\031\300\217\243J\270\376\266\260\032Q\344"
 303      6362 4895 
 303      2619 C08F 
 303      A34A B8FE 
 303      B6B0 1A51 
 304 0b53 8284 1A52 	 .ascii "\202\204\032R\033\023|\223wi(,a\205Eu!\271V\252\211*jA\002\376"
 304      1B13 7C93 
 304      7769 282C 
 304      6185 4575 
 304      21B9 56AA 
 305 0b6d C84A 2171 	 .ascii "\310J!q\250(\313\023\217\030\211\027\033\347\006{\031\300\222"
 305      A828 CB13 
 305      8F18 8917 
 305      1BE7 067B 
 305      19C0 92
 306 0b80 ACFE 2424 	 .ascii "\254\376$$\213Q\t8T\024\241\352G\177\242\222<\255\252\252\032"
 306      8B51 0938 
 306      5414 A1EA 
 306      477F A292 
 306      3CAD AAAA 
 307 0b95 C518 8E87 	 .ascii "\305\030\216\207\226\252\231#\310K\240F\205\230j$Y\364\325,i"
 307      96AA 9923 
 307      C84B A046 
 307      8598 6A24 
 307      59F4 D52C 
 308 0baa 5225 7F4D 	 .ascii "R%\177MB\215G\344Zo\r\344\306\017r\375M\220\264\232\245\020\226"
 308      428D 47E4 
 308      5A6F 0DE4 
 308      C60F 72FD 
 308      4D90 B49A 
 309 0bc1 5A78 BB22 	 .ascii "Zx\273\"Khh`Yb\301\315\327/\320\325%\365g!\271\351\2275V\023"
 309      4B68 6860 
 309      5962 C1CD 
 309      D72F D0D5 
 309      25F5 6721 
 310 0bdb 8D6A 249A 	 .ascii "\215j$\232\2001\023j\"\265\362\275\322ruq\254\264f\t\n\377nY"
 310      8031 136A 
 310      22B5 F2BD 
 310      D272 7571 
 310      ACB4 6609 
 311 0bf3 95E2 7228 	 .ascii "\225\342r(\352IHQ\277\030\021\227F#1\3372E\211&\212\202\301X"
 311      EA49 4851 
 311      BF18 1197 
 311      4623 31DF 
GAS LISTING  			page 24


 311      3245 8926 
 312 0c0b 5CA9 6D90 	 .ascii "\\\251m\220\032\202A\257\2524\306\ncz\220\021\261\300\210V\257"
 312      1A82 41AF 
 312      AA34 C60A 
 312      637A 9011 
 312      B1C0 8856 
 313 0c20 19F2 A948 	 .ascii "\031\362\251HiT\303\221xX\rE\242(\221rX\3624\205\226\371b\021"
 313      6954 C391 
 313      7858 0D45 
 313      A228 9172 
 313      58F2 3485 
 314 0c38 355C 2728 	 .ascii "5\\'(\313\005\245IP\022\202\362\240\240,\023\224\230W\206\213"
 314      CB05 A549 
 314      5012 82F2 
 314      A0A0 2C13 
 314      9498 5786 
 315 0c4d 05B2 7E75 	 .ascii "\005\262~u\016\230\f\312\212\032\fG\245\220\034\004\242\340\222"
 315      0E98 0CCA 
 315      8A1A 0C47 
 315      A590 1C04 
 315      A2E0 92
 316 0c60 3894 2D1C 	 .ascii "8\224-\034J\250\301(\372\243F\032\244B4\252Ay@*F\007\272\"P\024"
 316      4AA8 C128 
 316      FAA3 461A 
 316      A442 34AA 
 316      4179 402A 
 317 0c7a FF06 0A1D 	 .ascii "\377\006\n\035L\304B\313dI\364\307\033e\031\2225Q\204\3044\352"
 317      4CC4 42CB 
 317      6449 F4C7 
 317      1B65 1992 
 317      3551 84C4 
 318 0c90 7548 C424 	 .ascii "uH\304$I,T\344\332\270\322(\213\005!(\364\003RI](\021\214*\265"
 318      492C 54E4 
 318      DAB8 D228 
 318      8B05 2128 
 318      F403 5249 
 319 0caa B592 1854 	 .ascii "\265\222\030T\344Ke\030\022T\225`\002R\0314\342\213F\022j\211"
 319      E44B 6518 
 319      1254 9560 
 319      0252 1934 
 319      E28B 4612 
 320 0cc0 8923 76F3 	 .ascii "\211#v\363\f\364\"\362TJ\247^\222b\241(\020\323TQE\2517\274\270"
 320      0CF4 22F2 
 320      544A A75E 
 320      9262 A128 
 320      10D3 5451 
 321 0cd9 84E0 7129 	 .ascii "\204\340q)\026mB\0071p\263\\\206\"\004\303u\215r\275A\034\022"
 321      166D 4207 
 321      3170 B35C 
 321      8622 04C3 
 321      758D 72BD 
 322 0cf0 2787 F5BE 	 .ascii "'\207\365\276\205\244\353\215\033L@\347N\314(\353\236L\204\216"
 322      85A4 EB8D 
 322      1B4C 40E7 
 322      4ECC 28EB 
 322      9E4C 848E 
 323 0d04 1413 75A1 	 .ascii "\024\023u\241z)\210\032V*1l\004e\250\261\024\237\244B;\006\023"
GAS LISTING  			page 25


 323      7A29 881A 
 323      562A 316C 
 323      0465 A8B1 
 323      149F A442 
 324 0d1b 30E1 A4A0 	 .ascii "0\341\244\240qAG\022\030\252\223Bqq\202\021\244\f\215\3547\312"
 324      7141 4712 
 324      18AA 9342 
 324      7171 8211 
 324      A40C 8DEC 
 325 0d31 9828 357B 	 .ascii "\230(5{%\210\206\377\017J\344I\260"
 325      2588 86FF 
 325      0F4A E449 
 325      B0
 326               	 .text
 327               	 .section .gnu.lto_.symtab.9d85ca12287e6601,"",@progbits
 328 0000 7365 6C00 	 .string "sel"
 329 0004 00        	 .string ""
 330 0005 00        	 .string ""
 331 0006 00        	 .string ""
 332 0007 00        	 .string ""
 333 0008 00        	 .string ""
 334 0009 00        	 .string ""
 335 000a 00        	 .string ""
 336 000b 00        	 .string ""
 337 000c 00        	 .string ""
 338 000d 00        	 .string ""
 339 000e 00        	 .string ""
 340 000f 2A01 00   	 .string "*\001"
 341 0012 00        	 .string ""
 342 0013 6469 6466 	 .string "didflip"
 342      6C69 7000 
 343 001b 00        	 .string ""
 344 001c 0400      	 .string "\004"
 345 001e 0100      	 .string "\001"
 346 0020 00        	 .string ""
 347 0021 00        	 .string ""
 348 0022 00        	 .string ""
 349 0023 00        	 .string ""
 350 0024 00        	 .string ""
 351 0025 00        	 .string ""
 352 0026 2C01 00   	 .string ",\001"
 353 0029 00        	 .string ""
 354 002a 776F 6F6C 	 .string "wools"
 354      7300 
 355 0030 00        	 .string ""
 356 0031 00        	 .string ""
 357 0032 00        	 .string ""
 358 0033 00        	 .string ""
 359 0034 00        	 .string ""
 360 0035 00        	 .string ""
 361 0036 00        	 .string ""
 362 0037 00        	 .string ""
 363 0038 00        	 .string ""
 364 0039 00        	 .string ""
 365 003a 00        	 .string ""
 366 003b 2E01 00   	 .string ".\001"
 367 003e 00        	 .string ""
GAS LISTING  			page 26


 368 003f 746F 7570 	 .string "toup"
 368      00
 369 0044 00        	 .string ""
 370 0045 00        	 .string ""
 371 0046 00        	 .string ""
 372 0047 00        	 .string ""
 373 0048 00        	 .string ""
 374 0049 00        	 .string ""
 375 004a 00        	 .string ""
 376 004b 00        	 .string ""
 377 004c 00        	 .string ""
 378 004d 00        	 .string ""
 379 004e 00        	 .string ""
 380 004f 3701 00   	 .string "7\001"
 381 0052 00        	 .string ""
 382 0053 496E 6974 	 .string "InitDumbgame"
 382      4475 6D62 
 382      6761 6D65 
 382      00
 383 0060 00        	 .string ""
 384 0061 00        	 .string ""
 385 0062 00        	 .string ""
 386 0063 00        	 .string ""
 387 0064 00        	 .string ""
 388 0065 00        	 .string ""
 389 0066 00        	 .string ""
 390 0067 00        	 .string ""
 391 0068 00        	 .string ""
 392 0069 00        	 .string ""
 393 006a 00        	 .string ""
 394 006b C200      	 .string "\302"
 395 006d 00        	 .string ""
 396 006e 00        	 .string ""
 397 006f 446F 4375 	 .string "DoCustomPreloadStep"
 397      7374 6F6D 
 397      5072 656C 
 397      6F61 6453 
 397      7465 7000 
 398 0083 00        	 .string ""
 399 0084 00        	 .string ""
 400 0085 00        	 .string ""
 401 0086 00        	 .string ""
 402 0087 00        	 .string ""
 403 0088 00        	 .string ""
 404 0089 00        	 .string ""
 405 008a 00        	 .string ""
 406 008b 00        	 .string ""
 407 008c 00        	 .string ""
 408 008d 00        	 .string ""
 409 008e C500      	 .string "\305"
 410 0090 00        	 .string ""
 411 0091 00        	 .string ""
 412 0092 506C 6179 	 .string "PlayerTickUpdate"
 412      6572 5469 
 412      636B 5570 
 412      6461 7465 
 412      00
GAS LISTING  			page 27


 413 00a3 00        	 .string ""
 414 00a4 00        	 .string ""
 415 00a5 00        	 .string ""
 416 00a6 00        	 .string ""
 417 00a7 00        	 .string ""
 418 00a8 00        	 .string ""
 419 00a9 00        	 .string ""
 420 00aa 00        	 .string ""
 421 00ab 00        	 .string ""
 422 00ac 00        	 .string ""
 423 00ad 00        	 .string ""
 424 00ae C800      	 .string "\310"
 425 00b0 00        	 .string ""
 426 00b1 00        	 .string ""
 427 00b2 506C 6179 	 .string "PlayerBlockAction"
 427      6572 426C 
 427      6F63 6B41 
 427      6374 696F 
 427      6E00 
 428 00c4 00        	 .string ""
 429 00c5 00        	 .string ""
 430 00c6 00        	 .string ""
 431 00c7 00        	 .string ""
 432 00c8 00        	 .string ""
 433 00c9 00        	 .string ""
 434 00ca 00        	 .string ""
 435 00cb 00        	 .string ""
 436 00cc 00        	 .string ""
 437 00cd 00        	 .string ""
 438 00ce 00        	 .string ""
 439 00cf CB00      	 .string "\313"
 440 00d1 00        	 .string ""
 441 00d2 00        	 .string ""
 442 00d3 506C 6179 	 .string "PlayerChangeSlot"
 442      6572 4368 
 442      616E 6765 
 442      536C 6F74 
 442      00
 443 00e4 00        	 .string ""
 444 00e5 00        	 .string ""
 445 00e6 00        	 .string ""
 446 00e7 00        	 .string ""
 447 00e8 00        	 .string ""
 448 00e9 00        	 .string ""
 449 00ea 00        	 .string ""
 450 00eb 00        	 .string ""
 451 00ec 00        	 .string ""
 452 00ed 00        	 .string ""
 453 00ee 00        	 .string ""
 454 00ef DC00      	 .string "\334"
 455 00f1 00        	 .string ""
 456 00f2 00        	 .string ""
 457 00f3 4761 6D65 	 .string "GameTick"
 457      5469 636B 
 457      00
 458 00fc 00        	 .string ""
 459 00fd 00        	 .string ""
GAS LISTING  			page 28


 460 00fe 00        	 .string ""
 461 00ff 00        	 .string ""
 462 0100 00        	 .string ""
 463 0101 00        	 .string ""
 464 0102 00        	 .string ""
 465 0103 00        	 .string ""
 466 0104 00        	 .string ""
 467 0105 00        	 .string ""
 468 0106 00        	 .string ""
 469 0107 E300      	 .string "\343"
 470 0109 00        	 .string ""
 471 010a 00        	 .string ""
 472 010b 506C 6179 	 .string "PlayerClick"
 472      6572 436C 
 472      6963 6B00 
 473 0117 00        	 .string ""
 474 0118 00        	 .string ""
 475 0119 00        	 .string ""
 476 011a 00        	 .string ""
 477 011b 00        	 .string ""
 478 011c 00        	 .string ""
 479 011d 00        	 .string ""
 480 011e 00        	 .string ""
 481 011f 00        	 .string ""
 482 0120 00        	 .string ""
 483 0121 00        	 .string ""
 484 0122 E600      	 .string "\346"
 485 0124 00        	 .string ""
 486 0125 00        	 .string ""
 487 0126 506C 6179 	 .string "PlayerUpdate"
 487      6572 5570 
 487      6461 7465 
 487      00
 488 0133 00        	 .string ""
 489 0134 00        	 .string ""
 490 0135 00        	 .string ""
 491 0136 00        	 .string ""
 492 0137 00        	 .string ""
 493 0138 00        	 .string ""
 494 0139 00        	 .string ""
 495 013a 00        	 .string ""
 496 013b 00        	 .string ""
 497 013c 00        	 .string ""
 498 013d 00        	 .string ""
 499 013e F300      	 .string "\363"
 500 0140 00        	 .string ""
 501 0141 00        	 .string ""
 502 0142 436C 6965 	 .string "ClientHandleChat"
 502      6E74 4861 
 502      6E64 6C65 
 502      4368 6174 
 502      00
 503 0153 00        	 .string ""
 504 0154 00        	 .string ""
 505 0155 00        	 .string ""
 506 0156 00        	 .string ""
 507 0157 00        	 .string ""
GAS LISTING  			page 29


 508 0158 00        	 .string ""
 509 0159 00        	 .string ""
 510 015a 00        	 .string ""
 511 015b 00        	 .string ""
 512 015c 00        	 .string ""
 513 015d 00        	 .string ""
 514 015e F600      	 .string "\366"
 515 0160 00        	 .string ""
 516 0161 00        	 .string ""
 517 0162 706C 6179 	 .string "playerid"
 517      6572 6964 
 517      00
 518 016b 00        	 .string ""
 519 016c 0200      	 .string "\002"
 520 016e 00        	 .string ""
 521 016f 00        	 .string ""
 522 0170 00        	 .string ""
 523 0171 00        	 .string ""
 524 0172 00        	 .string ""
 525 0173 00        	 .string ""
 526 0174 00        	 .string ""
 527 0175 00        	 .string ""
 528 0176 3901 00   	 .string "9\001"
 529 0179 00        	 .string ""
 530 017a 506C 6179 	 .string "Players"
 530      6572 7300 
 531 0182 00        	 .string ""
 532 0183 0200      	 .string "\002"
 533 0185 00        	 .string ""
 534 0186 00        	 .string ""
 535 0187 00        	 .string ""
 536 0188 00        	 .string ""
 537 0189 00        	 .string ""
 538 018a 00        	 .string ""
 539 018b 00        	 .string ""
 540 018c 00        	 .string ""
 541 018d 3B01 00   	 .string ";\001"
 542 0190 00        	 .string ""
 543 0191 6475 6D62 	 .string "dumbcraft_tick"
 543      6372 6166 
 543      745F 7469 
 543      636B 00
 544 01a0 00        	 .string ""
 545 01a1 0200      	 .string "\002"
 546 01a3 00        	 .string ""
 547 01a4 00        	 .string ""
 548 01a5 00        	 .string ""
 549 01a6 00        	 .string ""
 550 01a7 00        	 .string ""
 551 01a8 00        	 .string ""
 552 01a9 00        	 .string ""
 553 01aa 00        	 .string ""
 554 01ab 9401 00   	 .string "\224\001"
 555 01ae 00        	 .string ""
 556 01af 5374 6172 	 .string "StartSend"
 556      7453 656E 
 556      6400 
GAS LISTING  			page 30


 557 01b9 00        	 .string ""
 558 01ba 0200      	 .string "\002"
 559 01bc 00        	 .string ""
 560 01bd 00        	 .string ""
 561 01be 00        	 .string ""
 562 01bf 00        	 .string ""
 563 01c0 00        	 .string ""
 564 01c1 00        	 .string ""
 565 01c2 00        	 .string ""
 566 01c3 00        	 .string ""
 567 01c4 0101 00   	 .string "\001\001"
 568 01c7 00        	 .string ""
 569 01c8 5362 7974 	 .string "Sbyte"
 569      6500 
 570 01ce 00        	 .string ""
 571 01cf 0200      	 .string "\002"
 572 01d1 00        	 .string ""
 573 01d2 00        	 .string ""
 574 01d3 00        	 .string ""
 575 01d4 00        	 .string ""
 576 01d5 00        	 .string ""
 577 01d6 00        	 .string ""
 578 01d7 00        	 .string ""
 579 01d8 00        	 .string ""
 580 01d9 0301 00   	 .string "\003\001"
 581 01dc 00        	 .string ""
 582 01dd 5373 7472 	 .string "Sstring"
 582      696E 6700 
 583 01e5 00        	 .string ""
 584 01e6 0200      	 .string "\002"
 585 01e8 00        	 .string ""
 586 01e9 00        	 .string ""
 587 01ea 00        	 .string ""
 588 01eb 00        	 .string ""
 589 01ec 00        	 .string ""
 590 01ed 00        	 .string ""
 591 01ee 00        	 .string ""
 592 01ef 00        	 .string ""
 593 01f0 0501 00   	 .string "\005\001"
 594 01f3 00        	 .string ""
 595 01f4 5369 6E74 	 .string "Sint"
 595      00
 596 01f9 00        	 .string ""
 597 01fa 0200      	 .string "\002"
 598 01fc 00        	 .string ""
 599 01fd 00        	 .string ""
 600 01fe 00        	 .string ""
 601 01ff 00        	 .string ""
 602 0200 00        	 .string ""
 603 0201 00        	 .string ""
 604 0202 00        	 .string ""
 605 0203 00        	 .string ""
 606 0204 0C01 00   	 .string "\f\001"
 607 0207 00        	 .string ""
 608 0208 5366 6C6F 	 .string "Sfloat"
 608      6174 00
 609 020f 00        	 .string ""
GAS LISTING  			page 31


 610 0210 0200      	 .string "\002"
 611 0212 00        	 .string ""
 612 0213 00        	 .string ""
 613 0214 00        	 .string ""
 614 0215 00        	 .string ""
 615 0216 00        	 .string ""
 616 0217 00        	 .string ""
 617 0218 00        	 .string ""
 618 0219 00        	 .string ""
 619 021a 1001 00   	 .string "\020\001"
 620 021d 00        	 .string ""
 621 021e 446F 6E65 	 .string "DoneSend"
 621      5365 6E64 
 621      00
 622 0227 00        	 .string ""
 623 0228 0200      	 .string "\002"
 624 022a 00        	 .string ""
 625 022b 00        	 .string ""
 626 022c 00        	 .string ""
 627 022d 00        	 .string ""
 628 022e 00        	 .string ""
 629 022f 00        	 .string ""
 630 0230 00        	 .string ""
 631 0231 00        	 .string ""
 632 0232 1701 00   	 .string "\027\001"
 633 0235 00        	 .string ""
 634 0236 5365 744D 	 .string "SetManyWS"
 634      616E 7957 
 634      5300 
 635 0240 00        	 .string ""
 636 0241 0200      	 .string "\002"
 637 0243 00        	 .string ""
 638 0244 00        	 .string ""
 639 0245 00        	 .string ""
 640 0246 00        	 .string ""
 641 0247 00        	 .string ""
 642 0248 00        	 .string ""
 643 0249 00        	 .string ""
 644 024a 00        	 .string ""
 645 024b 1901 00   	 .string "\031\001"
 646 024e 00        	 .string ""
 647 024f 5369 676E 	 .string "SignTextUp"
 647      5465 7874 
 647      5570 00
 648 025a 00        	 .string ""
 649 025b 0200      	 .string "\002"
 650 025d 00        	 .string ""
 651 025e 00        	 .string ""
 652 025f 00        	 .string ""
 653 0260 00        	 .string ""
 654 0261 00        	 .string ""
 655 0262 00        	 .string ""
 656 0263 00        	 .string ""
 657 0264 00        	 .string ""
 658 0265 2001 00   	 .string " \001"
 659 0268 00        	 .string ""
 660 0269 5362 6C6F 	 .string "SblockInternal"
GAS LISTING  			page 32


 660      636B 496E 
 660      7465 726E 
 660      616C 00
 661 0278 00        	 .string ""
 662 0279 0200      	 .string "\002"
 663 027b 00        	 .string ""
 664 027c 00        	 .string ""
 665 027d 00        	 .string ""
 666 027e 00        	 .string ""
 667 027f 00        	 .string ""
 668 0280 00        	 .string ""
 669 0281 00        	 .string ""
 670 0282 00        	 .string ""
 671 0283 2801 00   	 .string "(\001"
 672 0286 00        	 .string ""
 673               	 .text
 674               	 .section .gnu.lto_.opts,"",@progbits
 675 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 675      6375 3D61 
 675      746D 6567 
 675      6133 3275 
 675      3227 2027 
 676               	 .text
 677               	 .cfi_sections .debug_frame
 678               	.global InitDumbgame
 680               	InitDumbgame:
 681               	.LFB1:
 682               	 .file 1 "dumbgame.c"
   1:dumbgame.c    **** 	//Copyright 2012 <>< Charles Lohr, under the MIT-x11 or NewBSD license.  You choose.
   2:dumbgame.c    **** 
   3:dumbgame.c    **** //Your game code goes here.
   4:dumbgame.c    **** //This file is complete sphagetti code, you'll probably want to gut it for your project.
   5:dumbgame.c    **** 
   6:dumbgame.c    **** //The following functions are exposed to you for use:
   7:dumbgame.c    **** 
   8:dumbgame.c    **** //For receving packets
   9:dumbgame.c    **** //static void Rbuffer( uint8_t * buffer, uint8_t size );
  10:dumbgame.c    **** //static uint16_t Rshort()
  11:dumbgame.c    **** //static uint32_t Rint()
  12:dumbgame.c    **** //static void Rstring( char * data, int16_t maxlen )
  13:dumbgame.c    **** //static int16_t Rdouble()  
  14:dumbgame.c    **** //static int16_t Rfloat()
  15:dumbgame.c    **** 
  16:dumbgame.c    **** //For sending packets
  17:dumbgame.c    **** //Sbyte( uint8_t o )
  18:dumbgame.c    **** //static void Sint( uint32_t o )
  19:dumbgame.c    **** //static void Sshort( uint16_t o )
  20:dumbgame.c    **** //static void Sstring( const unsigned char * str, uint8_t len )
  21:dumbgame.c    **** //static void Sbuffer( const uint8_t * buf, uint8_t len )
  22:dumbgame.c    **** //static void Sdouble( int16_t i )
  23:dumbgame.c    **** //static void Sfloat( int16_t i )
  24:dumbgame.c    **** 
  25:dumbgame.c    **** //Utility
  26:dumbgame.c    **** //static void Str10Print( char * str, uint8_t val )  //fixed 3-digit one-byte readout
  27:dumbgame.c    **** //static void Str16Print( char * str, uint8_t val )  //fixed 2-digit one-byte readout
  28:dumbgame.c    **** //static void StrTack( char * str, uint16_t * optr, const char * strin ) //Send  ((NOTE))
  29:dumbgame.c    **** //static void SignUp( uint8_t x, uint8_t y, uint8_t z, const char* st, uint8_t val ) //Update a spe
GAS LISTING  			page 33


  30:dumbgame.c    **** //static void SblockInternal( uint8_t x, uint8_t y, uint8_t z, uint8_t bt, uint8_t meta ) //Update 
  31:dumbgame.c    **** 
  32:dumbgame.c    **** 
  33:dumbgame.c    **** /* General notes for writing the game portion:
  34:dumbgame.c    ****     1) You have a limited send-size, it's around 512 bytes.  Split up your commands among multiple 
  35:dumbgame.c    **** 	2) Do not send when receiving.  Add extra flags to the player structure to send when it's time to 
  36:dumbgame.c    **** */
  37:dumbgame.c    **** 
  38:dumbgame.c    **** #include "dumbcraft.h"
  39:dumbgame.c    **** #include "dumbutils.h"
  40:dumbgame.c    **** #include <string.h>
  41:dumbgame.c    **** #include <avr/pgmspace.h>
  42:dumbgame.c    **** 
  43:dumbgame.c    **** #include "ws2812.h"
  44:dumbgame.c    **** 
  45:dumbgame.c    **** 
  46:dumbgame.c    **** void InitDumbgame()
  47:dumbgame.c    **** {
 683               	 .loc 1 47 0
 684               	 .cfi_startproc
 685               	 
 686               	 
 687               	 
 688               	.L__stack_usage =0
 689 0000 0895      	 ret
 690               	 .cfi_endproc
 691               	.LFE1:
 693               	 .section .rodata.str1.1,"aMS",@progbits,1
 694               	.LC0:
 695 0000 3C3E 3C00 	 .string "<><"
 696               	.LC1:
 697 0004 5472 6967 	 .string "Trigger"
 697      6765 7200 
 698               	 .text
 699               	.global DoCustomPreloadStep
 701               	DoCustomPreloadStep:
 702               	.LFB2:
  48:dumbgame.c    **** 	//no code.
  49:dumbgame.c    **** }
  50:dumbgame.c    **** 
  51:dumbgame.c    **** void DoCustomPreloadStep( )
  52:dumbgame.c    **** {
 703               	 .loc 1 52 0
 704               	 .cfi_startproc
 705               	 .loc 1 52 0
 706 0002 0F93      	 push r16
 707               	.LCFI0:
 708               	 .cfi_def_cfa_offset 3
 709               	 .cfi_offset 16,-2
 710 0004 1F93      	 push r17
 711               	.LCFI1:
 712               	 .cfi_def_cfa_offset 4
 713               	 .cfi_offset 17,-3
 714 0006 CF93      	 push r28
 715               	.LCFI2:
 716               	 .cfi_def_cfa_offset 5
 717               	 .cfi_offset 28,-4
GAS LISTING  			page 34


 718 0008 DF93      	 push r29
 719               	.LCFI3:
 720               	 .cfi_def_cfa_offset 6
 721               	 .cfi_offset 29,-5
 722               	 
 723               	 
 724               	 
 725               	.L__stack_usage =4
  53:dumbgame.c    **** 	struct Player * p = &Players[playerid];
 726               	 .loc 1 53 0
 727 000a 8091 0000 	 lds r24,playerid
 728 000e 90E0      	 ldi r25,0
 729 0010 66E3      	 ldi r22,lo8(54)
 730 0012 70E0      	 ldi r23,0
 731 0014 0E94 0000 	 call __mulhi3
 732 0018 EC01      	 movw r28,r24
 733 001a C050      	 subi r28,lo8(-(Players))
 734 001c D040      	 sbci r29,hi8(-(Players))
 735               	.LVL0:
  54:dumbgame.c    **** 
  55:dumbgame.c    **** //	printf( "Custom preload.\n" );
  56:dumbgame.c    **** //	SblockInternal( 16, 64, 16, 89, 0 );
  57:dumbgame.c    **** 	SblockInternal( 3, 64, 2, 63, 12 ); //create sign
 736               	 .loc 1 57 0
 737 001e 0CE0      	 ldi r16,lo8(12)
 738 0020 2FE3      	 ldi r18,lo8(63)
 739 0022 42E0      	 ldi r20,lo8(2)
 740 0024 60E4      	 ldi r22,lo8(64)
 741 0026 83E0      	 ldi r24,lo8(3)
 742 0028 0E94 0000 	 call SblockInternal
 743               	.LVL1:
  58:dumbgame.c    **** 	SignTextUp( 3, 64, 2, "Trigger", "<><" );
 744               	 .loc 1 58 0
 745 002c 00E0      	 ldi r16,lo8(.LC0)
 746 002e 10E0      	 ldi r17,hi8(.LC0)
 747 0030 20E0      	 ldi r18,lo8(.LC1)
 748 0032 30E0      	 ldi r19,hi8(.LC1)
 749 0034 42E0      	 ldi r20,lo8(2)
 750 0036 60E4      	 ldi r22,lo8(64)
 751 0038 83E0      	 ldi r24,lo8(3)
 752 003a 0E94 0000 	 call SignTextUp
 753               	.LVL2:
  59:dumbgame.c    **** 
  60:dumbgame.c    **** 	p->custom_preload_step = 0;
 754               	 .loc 1 60 0
 755 003e 1F8E      	 std Y+31,__zero_reg__
  61:dumbgame.c    **** 
  62:dumbgame.c    **** /*	StartSend();
  63:dumbgame.c    **** 	SignTextUp( 3, 64, 1, "Latch", "<><" );
  64:dumbgame.c    **** 
  65:dumbgame.c    **** 
  66:dumbgame.c    **** */
  67:dumbgame.c    **** 
  68:dumbgame.c    **** 	//actually spawns
  69:dumbgame.c    **** 	p->x = (1<<FIXEDPOINT)/2;
 756               	 .loc 1 69 0
 757 0040 80E1      	 ldi r24,lo8(16)
GAS LISTING  			page 35


 758 0042 90E0      	 ldi r25,0
 759 0044 9B83      	 std Y+3,r25
 760 0046 8A83      	 std Y+2,r24
  70:dumbgame.c    **** 	p->y = 100*(1<<FIXEDPOINT);
 761               	 .loc 1 70 0
 762 0048 20E8      	 ldi r18,lo8(-128)
 763 004a 3CE0      	 ldi r19,lo8(12)
 764 004c 3D83      	 std Y+5,r19
 765 004e 2C83      	 std Y+4,r18
  71:dumbgame.c    **** 	p->stance = p->y + (1<<FIXEDPOINT);
 766               	 .loc 1 71 0
 767 0050 20EA      	 ldi r18,lo8(-96)
 768 0052 3CE0      	 ldi r19,lo8(12)
 769 0054 3F83      	 std Y+7,r19
 770 0056 2E83      	 std Y+6,r18
  72:dumbgame.c    **** 	p->z = (1<<FIXEDPOINT)/2;
 771               	 .loc 1 72 0
 772 0058 9987      	 std Y+9,r25
 773 005a 8887      	 std Y+8,r24
  73:dumbgame.c    **** 	p->need_to_send_lookupdate = 1;
 774               	 .loc 1 73 0
 775 005c 8D8D      	 ldd r24,Y+29
 776 005e 8062      	 ori r24,lo8(1<<5)
 777 0060 8D8F      	 std Y+29,r24
 778               	 
  74:dumbgame.c    **** }
 779               	 .loc 1 74 0
 780 0062 DF91      	 pop r29
 781 0064 CF91      	 pop r28
 782               	.LVL3:
 783 0066 1F91      	 pop r17
 784 0068 0F91      	 pop r16
 785 006a 0895      	 ret
 786               	 .cfi_endproc
 787               	.LFE2:
 789               	.global PlayerTickUpdate
 791               	PlayerTickUpdate:
 792               	.LFB3:
  75:dumbgame.c    **** 
  76:dumbgame.c    **** void PlayerTickUpdate( )
  77:dumbgame.c    **** {
 793               	 .loc 1 77 0
 794               	 .cfi_startproc
 795               	 
 796               	 
 797               	 
 798               	.L__stack_usage =0
  78:dumbgame.c    **** 	//printf( "%f %f %f\n", SetDouble(p->x), SetDouble(p->y), SetDouble(p->z) );
  79:dumbgame.c    **** 	struct Player * p = &Players[playerid];
 799               	 .loc 1 79 0
 800 006c 8091 0000 	 lds r24,playerid
 801               	.LVL4:
  80:dumbgame.c    **** 	if( ( dumbcraft_tick & 0x0f ) == 0 )
 802               	 .loc 1 80 0
 803 0070 2091 0000 	 lds r18,dumbcraft_tick
 804 0074 3091 0000 	 lds r19,dumbcraft_tick+1
 805 0078 2F70      	 andi r18,15
GAS LISTING  			page 36


 806 007a 3327      	 clr r19
 807 007c 232B      	 or r18,r19
 808 007e 01F4      	 brne .L3
  79:dumbgame.c    **** 	struct Player * p = &Players[playerid];
 809               	 .loc 1 79 0
 810 0080 90E0      	 ldi r25,0
 811 0082 66E3      	 ldi r22,lo8(54)
 812 0084 70E0      	 ldi r23,0
 813 0086 0E94 0000 	 call __mulhi3
 814               	.LVL5:
 815 008a FC01      	 movw r30,r24
 816 008c E050      	 subi r30,lo8(-(Players))
 817 008e F040      	 sbci r31,hi8(-(Players))
  81:dumbgame.c    **** 	{
  82:dumbgame.c    **** 		p->need_to_send_keepalive = 1;
 818               	 .loc 1 82 0
 819 0090 458D      	 ldd r20,Z+29
 820 0092 4061      	 ori r20,lo8(1<<4)
 821 0094 458F      	 std Z+29,r20
  83:dumbgame.c    **** 
  84:dumbgame.c    **** 		if( p->y < 0 )
 822               	 .loc 1 84 0
 823 0096 8481      	 ldd r24,Z+4
 824 0098 9581      	 ldd r25,Z+5
 825 009a 97FF      	 sbrs r25,7
 826 009c 00C0      	 rjmp .L3
  85:dumbgame.c    **** 		{
  86:dumbgame.c    **** 			p->x = (1<<FIXEDPOINT)/2;
 827               	 .loc 1 86 0
 828 009e 80E1      	 ldi r24,lo8(16)
 829 00a0 90E0      	 ldi r25,0
 830 00a2 9383      	 std Z+3,r25
 831 00a4 8283      	 std Z+2,r24
  87:dumbgame.c    **** 			p->y = 100*(1<<FIXEDPOINT);
 832               	 .loc 1 87 0
 833 00a6 20E8      	 ldi r18,lo8(-128)
 834 00a8 3CE0      	 ldi r19,lo8(12)
 835 00aa 3583      	 std Z+5,r19
 836 00ac 2483      	 std Z+4,r18
  88:dumbgame.c    **** 			p->stance = p->y + (1<<FIXEDPOINT);
 837               	 .loc 1 88 0
 838 00ae 20EA      	 ldi r18,lo8(-96)
 839 00b0 3CE0      	 ldi r19,lo8(12)
 840 00b2 3783      	 std Z+7,r19
 841 00b4 2683      	 std Z+6,r18
  89:dumbgame.c    **** 			p->z = (1<<FIXEDPOINT)/2;
 842               	 .loc 1 89 0
 843 00b6 9187      	 std Z+9,r25
 844 00b8 8087      	 std Z+8,r24
  90:dumbgame.c    **** 			p->need_to_send_lookupdate = 1;
 845               	 .loc 1 90 0
 846 00ba 4062      	 ori r20,lo8(1<<5)
 847 00bc 458F      	 std Z+29,r20
 848               	.L3:
 849 00be 0895      	 ret
 850               	 .cfi_endproc
 851               	.LFE3:
GAS LISTING  			page 37


 853               	.global PlayerBlockAction
 855               	PlayerBlockAction:
 856               	.LFB4:
  91:dumbgame.c    **** 		}
  92:dumbgame.c    **** 	}
  93:dumbgame.c    **** }
  94:dumbgame.c    **** 
  95:dumbgame.c    **** void PlayerBlockAction( uint8_t status, uint8_t x, uint8_t y, uint8_t z, uint8_t face )
  96:dumbgame.c    **** {
 857               	 .loc 1 96 0
 858               	 .cfi_startproc
 859               	.LVL6:
 860               	 
 861               	 
 862               	 
 863               	.L__stack_usage =0
 864 00c0 0895      	 ret
 865               	 .cfi_endproc
 866               	.LFE4:
 868               	.global PlayerChangeSlot
 870               	PlayerChangeSlot:
 871               	.LFB5:
  97:dumbgame.c    **** }
  98:dumbgame.c    **** 
  99:dumbgame.c    **** void PlayerChangeSlot( uint8_t slotno )
 100:dumbgame.c    **** {
 872               	 .loc 1 100 0
 873               	 .cfi_startproc
 874               	.LVL7:
 875               	 
 876               	 
 877               	 
 878               	.L__stack_usage =0
 879 00c2 0895      	 ret
 880               	 .cfi_endproc
 881               	.LFE5:
 883               	 .section .rodata.str1.1
 884               	.LC2:
 885 000c 7261 6E64 	 .string "random.click"
 885      6F6D 2E63 
 885      6C69 636B 
 885      00
 886               	 .text
 887               	.global GameTick
 889               	GameTick:
 890               	.LFB6:
 101:dumbgame.c    **** }
 102:dumbgame.c    **** 
 103:dumbgame.c    **** 
 104:dumbgame.c    **** uint8_t didflip;
 105:dumbgame.c    **** uint8_t sel = 0;
 106:dumbgame.c    **** uint8_t toup = 0;
 107:dumbgame.c    **** 
 108:dumbgame.c    **** const uint8_t PROGMEM wools[48] = {
 109:dumbgame.c    **** 	0xDD, 0xDD, 0xDD,
 110:dumbgame.c    **** 	0xDB, 0x7D, 0x3E,
 111:dumbgame.c    **** 	0xB3, 0x50, 0xBC,
GAS LISTING  			page 38


 112:dumbgame.c    **** 	0x6B, 0x8A, 0xC9,
 113:dumbgame.c    **** 	0xB1, 0xA6, 0x27,
 114:dumbgame.c    **** 	0x41, 0xAE, 0x38,
 115:dumbgame.c    **** 	0xD0, 0x84, 0x99,
 116:dumbgame.c    **** 	0x40, 0x40, 0x40,
 117:dumbgame.c    **** 	0x9A, 0xA1, 0xA1,
 118:dumbgame.c    **** 	0x2E, 0x6E, 0x89,
 119:dumbgame.c    **** 	0x7E, 0x3D, 0xB5,
 120:dumbgame.c    **** 	0x2E, 0x38, 0x8D,
 121:dumbgame.c    **** 	0x4F, 0x32, 0x1F,
 122:dumbgame.c    **** 	0x35, 0x46, 0x1B,
 123:dumbgame.c    **** 	0x96, 0x34, 0x30,
 124:dumbgame.c    **** 	0x19, 0x16, 0x16,
 125:dumbgame.c    **** };
 126:dumbgame.c    **** 
 127:dumbgame.c    **** void GameTick()
 128:dumbgame.c    **** {
 891               	 .loc 1 128 0
 892               	 .cfi_startproc
 893               	 
 894               	 
 895               	 
 896               	.L__stack_usage =0
 129:dumbgame.c    **** 
 130:dumbgame.c    **** 
 131:dumbgame.c    **** 	if( didflip )
 897               	 .loc 1 131 0
 898 00c4 8091 0000 	 lds r24,didflip
 899 00c8 8823      	 tst r24
 900 00ca 01F4      	 brne .+2
 901 00cc 00C0      	 rjmp .L10
 902               	.LBB10:
 903               	.LBB11:
 132:dumbgame.c    **** 	{
 133:dumbgame.c    **** 		StartSend();
 904               	 .loc 1 133 0
 905 00ce 0E94 0000 	 call StartSend
 906               	.LVL8:
 134:dumbgame.c    **** 		Sbyte( 0x29 ); //effect
 907               	 .loc 1 134 0
 908 00d2 89E2      	 ldi r24,lo8(41)
 909 00d4 0E94 0000 	 call Sbyte
 910               	.LVL9:
 135:dumbgame.c    **** 		Sstring( "random.click", -1 );
 911               	 .loc 1 135 0
 912 00d8 6FEF      	 ldi r22,lo8(-1)
 913 00da 80E0      	 ldi r24,lo8(.LC2)
 914 00dc 90E0      	 ldi r25,hi8(.LC2)
 915 00de 0E94 0000 	 call Sstring
 916               	.LVL10:
 136:dumbgame.c    **** 		Sint( (uint16_t)(4<<3) );
 917               	 .loc 1 136 0
 918 00e2 60E2      	 ldi r22,lo8(32)
 919 00e4 70E0      	 ldi r23,0
 920 00e6 80E0      	 ldi r24,0
 921 00e8 90E0      	 ldi r25,0
 922 00ea 0E94 0000 	 call Sint
GAS LISTING  			page 39


 923               	.LVL11:
 137:dumbgame.c    **** 		Sint( (uint16_t)(64<<3) );
 924               	 .loc 1 137 0
 925 00ee 60E0      	 ldi r22,0
 926 00f0 72E0      	 ldi r23,lo8(2)
 927 00f2 80E0      	 ldi r24,0
 928 00f4 90E0      	 ldi r25,0
 929 00f6 0E94 0000 	 call Sint
 930               	.LVL12:
 138:dumbgame.c    **** 		Sint( (uint16_t)(sel<<3) );
 931               	 .loc 1 138 0
 932 00fa 6091 0000 	 lds r22,sel
 933 00fe 70E0      	 ldi r23,0
 934 0100 83E0      	 ldi r24,3
 935               	 1:
 936 0102 660F      	 lsl r22
 937 0104 771F      	 rol r23
 938 0106 8A95      	 dec r24
 939 0108 01F4      	 brne 1b
 940 010a 8827      	 clr r24
 941 010c 77FD      	 sbrc r23,7
 942 010e 8095      	 com r24
 943 0110 982F      	 mov r25,r24
 944 0112 0E94 0000 	 call Sint
 945               	.LVL13:
 139:dumbgame.c    **** 		Sfloat( 32 ); //100% volume
 946               	 .loc 1 139 0
 947 0116 80E2      	 ldi r24,lo8(32)
 948 0118 90E0      	 ldi r25,0
 949 011a 0E94 0000 	 call Sfloat
 950               	.LVL14:
 140:dumbgame.c    **** 		Sbyte( 63 ); //100% speed
 951               	 .loc 1 140 0
 952 011e 8FE3      	 ldi r24,lo8(63)
 953 0120 0E94 0000 	 call Sbyte
 954               	.LVL15:
 141:dumbgame.c    **** 		DoneSend();
 955               	 .loc 1 141 0
 956 0124 0E94 0000 	 call DoneSend
 957               	.LVL16:
 142:dumbgame.c    **** 		didflip = 0;
 958               	 .loc 1 142 0
 959 0128 1092 0000 	 sts didflip,__zero_reg__
 960               	.LBB12:
 143:dumbgame.c    **** 
 144:dumbgame.c    **** 		SetManyWS( pgm_read_byte( &wools[sel*3+0] ), pgm_read_byte( &wools[sel*3+1] ), pgm_read_byte( &wo
 961               	 .loc 1 144 0
 962 012c 8091 0000 	 lds r24,sel
 963 0130 90E0      	 ldi r25,0
 964 0132 63E0      	 ldi r22,lo8(3)
 965 0134 70E0      	 ldi r23,0
 966 0136 0E94 0000 	 call __mulhi3
 967               	.LVL17:
 968 013a FC01      	 movw r30,r24
 969 013c E050      	 subi r30,lo8(-(wools+2))
 970 013e F040      	 sbci r31,hi8(-(wools+2))
 971               	.LVL18:
GAS LISTING  			page 40


 972               	 
 973               	 
 974 0140 4491      	 lpm r20,Z
 975               	 
 976               	 
 977               	.LVL19:
 978               	 
 979               	.LBE12:
 980               	.LBB13:
 981 0142 FC01      	 movw r30,r24
 982               	.LVL20:
 983 0144 E050      	 subi r30,lo8(-(wools+1))
 984 0146 F040      	 sbci r31,hi8(-(wools+1))
 985               	.LVL21:
 986               	 
 987               	 
 988 0148 6491      	 lpm r22,Z
 989               	 
 990               	 
 991               	.LVL22:
 992               	 
 993               	.LBE13:
 994               	.LBB14:
 995 014a FC01      	 movw r30,r24
 996               	.LVL23:
 997 014c E050      	 subi r30,lo8(-(wools))
 998 014e F040      	 sbci r31,hi8(-(wools))
 999               	.LVL24:
 1000               	 
 1001               	 
 1002 0150 8491      	 lpm r24,Z
 1003               	 
 1004               	 
 1005               	.LVL25:
 1006               	 
 1007               	.LBE14:
 1008 0152 24E1      	 ldi r18,lo8(20)
 1009 0154 30E0      	 ldi r19,0
 1010 0156 0C94 0000 	 jmp SetManyWS
 1011               	.LVL26:
 1012               	.L10:
 1013 015a 0895      	 ret
 1014               	.LBE11:
 1015               	.LBE10:
 1016               	 .cfi_endproc
 1017               	.LFE6:
 1019               	.global PlayerClick
 1021               	PlayerClick:
 1022               	.LFB7:
 145:dumbgame.c    **** 	}
 146:dumbgame.c    **** }
 147:dumbgame.c    **** 
 148:dumbgame.c    **** void PlayerClick( uint8_t x, uint8_t y, uint8_t z, uint8_t dir )
 149:dumbgame.c    **** {
 1023               	 .loc 1 149 0
 1024               	 .cfi_startproc
 1025               	.LVL27:
GAS LISTING  			page 41


 1026               	 
 1027               	 
 1028               	 
 1029               	.L__stack_usage =0
 150:dumbgame.c    **** 	if( z >= 0 && z < 16 && x == 4 )
 1030               	 .loc 1 150 0
 1031 015c 4031      	 cpi r20,lo8(16)
 1032 015e 00F4      	 brsh .L12
 1033               	.LVL28:
 1034               	.LBB17:
 1035               	.LBB18:
 1036 0160 8430      	 cpi r24,lo8(4)
 1037 0162 01F4      	 brne .L12
 151:dumbgame.c    **** 	{
 152:dumbgame.c    **** 		toup = sel = z;
 1038               	 .loc 1 152 0
 1039 0164 4093 0000 	 sts sel,r20
 1040 0168 4093 0000 	 sts toup,r20
 153:dumbgame.c    **** 		didflip = 1;
 1041               	 .loc 1 153 0
 1042 016c 81E0      	 ldi r24,lo8(1)
 1043               	.LVL29:
 1044 016e 8093 0000 	 sts didflip,r24
 1045               	.LVL30:
 1046               	.L12:
 1047 0172 0895      	 ret
 1048               	.LBE18:
 1049               	.LBE17:
 1050               	 .cfi_endproc
 1051               	.LFE7:
 1053               	.global PlayerUpdate
 1055               	PlayerUpdate:
 1056               	.LFB8:
 154:dumbgame.c    **** 	}
 155:dumbgame.c    **** /*
 156:dumbgame.c    **** 	struct Player * p = &Players[playerid];
 157:dumbgame.c    **** //printf( "PC: %d %d %d %d\n", playerid, x, y, z );
 158:dumbgame.c    **** 
 159:dumbgame.c    **** 	if( z == 2 && x == 4 )
 160:dumbgame.c    **** 	{
 161:dumbgame.c    **** #ifdef __AVR__
 162:dumbgame.c    **** 		uint8_t * t = (uint8_t*)( (intptr_t)(regaddr_set + 0x20) );
 163:dumbgame.c    **** 		*t = regval_set;
 164:dumbgame.c    **** #endif
 165:dumbgame.c    **** 		hasset_value = 10;
 166:dumbgame.c    **** 		didflip = 2;		
 167:dumbgame.c    **** 	}
 168:dumbgame.c    **** 	else if( z == 1 && x == 4 )
 169:dumbgame.c    **** 	{
 170:dumbgame.c    **** 
 171:dumbgame.c    **** 		latch_setting_value = !latch_setting_value;
 172:dumbgame.c    **** 		didflip = 2;
 173:dumbgame.c    **** 		
 174:dumbgame.c    **** 	}
 175:dumbgame.c    **** 	else if( z >= 4 && z < 12 )
 176:dumbgame.c    **** 	{
 177:dumbgame.c    **** 		z-=4;
GAS LISTING  			page 42


 178:dumbgame.c    **** 		switch( x )
 179:dumbgame.c    **** 		{
 180:dumbgame.c    **** 		case 4: regaddr_set ^= (1<<z); didflip=3; break;
 181:dumbgame.c    **** 		case 7: regval_set ^= (1<<z); didflip=3; break;
 182:dumbgame.c    **** 		case 10: regaddr_get ^= (1<<z); didflip=3; break;
 183:dumbgame.c    **** 		}
 184:dumbgame.c    **** 	}
 185:dumbgame.c    **** 
 186:dumbgame.c    **** 	if( didflip )
 187:dumbgame.c    **** 	{
 188:dumbgame.c    **** 		flipx = x;
 189:dumbgame.c    **** 		flipy = y;
 190:dumbgame.c    **** 		flipz = z;
 191:dumbgame.c    **** 	}
 192:dumbgame.c    **** */
 193:dumbgame.c    **** }
 194:dumbgame.c    **** 
 195:dumbgame.c    **** void PlayerUpdate( )
 196:dumbgame.c    **** {
 1057               	 .loc 1 196 0
 1058               	 .cfi_startproc
 1059 0174 0F93      	 push r16
 1060               	.LCFI4:
 1061               	 .cfi_def_cfa_offset 3
 1062               	 .cfi_offset 16,-2
 1063 0176 CF93      	 push r28
 1064               	.LCFI5:
 1065               	 .cfi_def_cfa_offset 4
 1066               	 .cfi_offset 28,-3
 1067               	 
 1068               	 
 1069               	 
 1070               	.L__stack_usage =2
 197:dumbgame.c    **** 	uint8_t i;
 198:dumbgame.c    **** 	struct Player * p = &Players[playerid];
 1071               	 .loc 1 198 0
 1072 0178 8091 0000 	 lds r24,playerid
 1073 017c 90E0      	 ldi r25,0
 1074 017e 66E3      	 ldi r22,lo8(54)
 1075 0180 70E0      	 ldi r23,0
 1076 0182 0E94 0000 	 call __mulhi3
 1077 0186 FC01      	 movw r30,r24
 1078 0188 E050      	 subi r30,lo8(-(Players))
 1079 018a F040      	 sbci r31,hi8(-(Players))
 1080               	.LVL31:
 199:dumbgame.c    **** 
 200:dumbgame.c    **** 	if( p->update_number >= 64 )
 1081               	 .loc 1 200 0
 1082 018c 82A1      	 ldd r24,Z+34
 1083 018e 8034      	 cpi r24,lo8(64)
 1084 0190 00F0      	 brlo .L14
 1085               	.LBB19:
 201:dumbgame.c    **** 	{
 202:dumbgame.c    **** 		p->update_number = 64;
 1086               	 .loc 1 202 0
 1087 0192 80E4      	 ldi r24,lo8(64)
 1088 0194 82A3      	 std Z+34,r24
GAS LISTING  			page 43


 203:dumbgame.c    **** 
 204:dumbgame.c    **** 			uint8_t pu = toup&0x0f;//(p->update_number&0x0f);
 1089               	 .loc 1 204 0
 1090 0196 C091 0000 	 lds r28,toup
 1091 019a CF70      	 andi r28,lo8(15)
 1092               	.LVL32:
 205:dumbgame.c    **** 			if( p->update_number >= 80 ) p->update_number = 64;
 206:dumbgame.c    **** 			SblockInternal( 4, 64, pu, 69, (sel == pu)?17:9 );
 1093               	 .loc 1 206 0
 1094 019c 8091 0000 	 lds r24,sel
 1095 01a0 8C13      	 cpse r24,r28
 1096 01a2 00C0      	 rjmp .L17
 1097 01a4 01E1      	 ldi r16,lo8(17)
 1098 01a6 00C0      	 rjmp .L16
 1099               	.L17:
 1100 01a8 09E0      	 ldi r16,lo8(9)
 1101               	.L16:
 1102               	 .loc 1 206 0 is_stmt 0 discriminator 3
 1103 01aa 25E4      	 ldi r18,lo8(69)
 1104 01ac 4C2F      	 mov r20,r28
 1105 01ae 60E4      	 ldi r22,lo8(64)
 1106 01b0 84E0      	 ldi r24,lo8(4)
 1107 01b2 0E94 0000 	 call SblockInternal
 1108               	.LVL33:
 207:dumbgame.c    **** 			SblockInternal( 3, 64, pu, 35, (pu&0x0f) );
 1109               	 .loc 1 207 0 is_stmt 1 discriminator 3
 1110 01b6 0C2F      	 mov r16,r28
 1111 01b8 23E2      	 ldi r18,lo8(35)
 1112 01ba 4C2F      	 mov r20,r28
 1113 01bc 60E4      	 ldi r22,lo8(64)
 1114 01be 83E0      	 ldi r24,lo8(3)
 1115 01c0 0E94 0000 	 call SblockInternal
 1116               	.LVL34:
 208:dumbgame.c    **** 			toup++;
 1117               	 .loc 1 208 0 discriminator 3
 1118 01c4 8091 0000 	 lds r24,toup
 1119 01c8 8F5F      	 subi r24,lo8(-(1))
 1120 01ca 8093 0000 	 sts toup,r24
 1121               	.LVL35:
 1122               	.L14:
 1123               	 
 1124               	.LBE19:
 209:dumbgame.c    **** 			//->update_number &= 0xf | 64;
 210:dumbgame.c    **** 	}
 211:dumbgame.c    **** /*
 212:dumbgame.c    **** 	if( latch_setting_value )
 213:dumbgame.c    **** 	{
 214:dumbgame.c    **** #ifdef __AVR__
 215:dumbgame.c    **** 		uint8_t * t = (uint8_t*)(intptr_t)(regaddr_set + 0x20);
 216:dumbgame.c    **** 		*t = regval_set;
 217:dumbgame.c    **** #endif
 218:dumbgame.c    **** 	}
 219:dumbgame.c    **** 	if( hasset_value )
 220:dumbgame.c    **** 	{
 221:dumbgame.c    **** 		hasset_value--;
 222:dumbgame.c    **** 	}
 223:dumbgame.c    **** 	SblockInternal( 4, 64, 2, 69, hasset_value?6:14 );
GAS LISTING  			page 44


 224:dumbgame.c    **** 	SblockInternal( 4, 64, 1, 69, latch_setting_value?6:14 );
 225:dumbgame.c    **** 
 226:dumbgame.c    **** 	switch( p->update_number & 7 )
 227:dumbgame.c    **** 	{
 228:dumbgame.c    **** 	case 0:
 229:dumbgame.c    **** 		SblockInternal( 3, 64, 3, 68, 2 ); //create sign
 230:dumbgame.c    **** 		SignUp( 3, 64, 3, "Addr", regaddr_set );
 231:dumbgame.c    **** 		for( i = 0; i < 8; i++ )
 232:dumbgame.c    **** 		{
 233:dumbgame.c    **** 			SblockInternal( 4, 64, i+4, 69, ((regaddr_set)&(1<<i))?17:9 );
 234:dumbgame.c    **** 			SblockInternal( 3, 64, i+4, 35, ((regaddr_set)&(1<<i))?0:15 );
 235:dumbgame.c    **** 		}
 236:dumbgame.c    **** 		break;
 237:dumbgame.c    **** 	case 1:
 238:dumbgame.c    **** 		SblockInternal( 6, 64, 3, 68, 2 ); //create sign
 239:dumbgame.c    **** 		SignUp( 6, 64, 3, "Value", regval_set );
 240:dumbgame.c    **** 		for( i = 0; i < 8; i++ )
 241:dumbgame.c    **** 		{
 242:dumbgame.c    **** 			SblockInternal( 7, 64, i+4, 69, ((regval_set)&(1<<i))?17:9 );
 243:dumbgame.c    **** 			SblockInternal( 6, 64, i+4, 35, ((regval_set)&(1<<i))?0:15 );
 244:dumbgame.c    **** 		}
 245:dumbgame.c    **** 		break;
 246:dumbgame.c    **** 	case 2:
 247:dumbgame.c    **** 		SblockInternal( 9, 64, 3, 68, 2 ); //create sign
 248:dumbgame.c    **** 		SignUp( 9, 64, 3, "Read", regaddr_get );
 249:dumbgame.c    **** 		for( i = 0; i < 8; i++ )
 250:dumbgame.c    **** 		{
 251:dumbgame.c    **** 			SblockInternal( 10, 64, i+4, 69, ((regaddr_get)&(1<<i))?17:9 );
 252:dumbgame.c    **** 			SblockInternal( 9, 64, i+4, 35, ((regaddr_get)&(1<<i))?0:15 );
 253:dumbgame.c    **** 		}
 254:dumbgame.c    **** 		break;
 255:dumbgame.c    **** 	case 3:
 256:dumbgame.c    **** 	{
 257:dumbgame.c    **** 		SblockInternal( 12, 64, 3, 68, 2 ); //create sign
 258:dumbgame.c    **** #ifdef __AVR__
 259:dumbgame.c    **** 		regval_get = *((uint8_t*)(intptr_t)(regaddr_get+0x20));
 260:dumbgame.c    **** #endif
 261:dumbgame.c    **** 		SignUp( 12, 64, 3, "Read Value", regval_get );
 262:dumbgame.c    **** 		for( i = 0; i < 8; i++ )
 263:dumbgame.c    **** 		{
 264:dumbgame.c    **** 			SblockInternal( 12, 64, i+4, 35, ((regval_get)&(1<<i))?0:15 );
 265:dumbgame.c    **** 		}
 266:dumbgame.c    **** 		break;
 267:dumbgame.c    **** 	}
 268:dumbgame.c    **** 	default:
 269:dumbgame.c    **** 		break;
 270:dumbgame.c    **** 	}
 271:dumbgame.c    **** */
 272:dumbgame.c    **** }
 1125               	 .loc 1 272 0
 1126 01ce CF91      	 pop r28
 1127 01d0 0F91      	 pop r16
 1128 01d2 0895      	 ret
 1129               	 .cfi_endproc
 1130               	.LFE8:
 1132               	.global ClientHandleChat
 1134               	ClientHandleChat:
GAS LISTING  			page 45


 1135               	.LFB9:
 273:dumbgame.c    **** 
 274:dumbgame.c    **** 
 275:dumbgame.c    **** void SetServerName( const char * stname );
 276:dumbgame.c    **** 
 277:dumbgame.c    **** uint8_t ClientHandleChat( char * chat, uint8_t chatlen )
 278:dumbgame.c    **** {
 1136               	 .loc 1 278 0
 1137               	 .cfi_startproc
 1138               	.LVL36:
 1139               	 
 1140               	 
 1141               	 
 1142               	.L__stack_usage =0
 1143 01d4 862F      	 mov r24,r22
 1144               	.LVL37:
 279:dumbgame.c    **** 	return chatlen;
 280:dumbgame.c    **** }
 1145               	 .loc 1 280 0
 1146 01d6 0895      	 ret
 1147               	 .cfi_endproc
 1148               	.LFE9:
 1150               	.global wools
 1151               	 .section .progmem.data,"a",@progbits
 1154               	wools:
 1155 0000 DD        	 .byte -35
 1156 0001 DD        	 .byte -35
 1157 0002 DD        	 .byte -35
 1158 0003 DB        	 .byte -37
 1159 0004 7D        	 .byte 125
 1160 0005 3E        	 .byte 62
 1161 0006 B3        	 .byte -77
 1162 0007 50        	 .byte 80
 1163 0008 BC        	 .byte -68
 1164 0009 6B        	 .byte 107
 1165 000a 8A        	 .byte -118
 1166 000b C9        	 .byte -55
 1167 000c B1        	 .byte -79
 1168 000d A6        	 .byte -90
 1169 000e 27        	 .byte 39
 1170 000f 41        	 .byte 65
 1171 0010 AE        	 .byte -82
 1172 0011 38        	 .byte 56
 1173 0012 D0        	 .byte -48
 1174 0013 84        	 .byte -124
 1175 0014 99        	 .byte -103
 1176 0015 40        	 .byte 64
 1177 0016 40        	 .byte 64
 1178 0017 40        	 .byte 64
 1179 0018 9A        	 .byte -102
 1180 0019 A1        	 .byte -95
 1181 001a A1        	 .byte -95
 1182 001b 2E        	 .byte 46
 1183 001c 6E        	 .byte 110
 1184 001d 89        	 .byte -119
 1185 001e 7E        	 .byte 126
 1186 001f 3D        	 .byte 61
GAS LISTING  			page 46


 1187 0020 B5        	 .byte -75
 1188 0021 2E        	 .byte 46
 1189 0022 38        	 .byte 56
 1190 0023 8D        	 .byte -115
 1191 0024 4F        	 .byte 79
 1192 0025 32        	 .byte 50
 1193 0026 1F        	 .byte 31
 1194 0027 35        	 .byte 53
 1195 0028 46        	 .byte 70
 1196 0029 1B        	 .byte 27
 1197 002a 96        	 .byte -106
 1198 002b 34        	 .byte 52
 1199 002c 30        	 .byte 48
 1200 002d 19        	 .byte 25
 1201 002e 16        	 .byte 22
 1202 002f 16        	 .byte 22
 1203               	.global toup
 1204               	 .section .bss
 1207               	toup:
 1208 0000 00        	 .zero 1
 1209               	.global sel
 1212               	sel:
 1213 0001 00        	 .zero 1
 1214               	 .comm didflip,1,1
 1215               	 .text
 1216               	.Letext0:
 1217               	 .file 2 "/usr/lib/avr/include/stdint.h"
 1218               	 .file 3 "../dumbcraft/dumbcraft.h"
 1219               	 .file 4 "../dumbcraft/dumbutils.h"
 1220               	 .file 5 "ws2812.h"
GAS LISTING  			page 47


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dumbgame.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:680    .text:0000000000000000 InitDumbgame
    {standard input}:701    .text:0000000000000002 DoCustomPreloadStep
    {standard input}:791    .text:000000000000006c PlayerTickUpdate
    {standard input}:855    .text:00000000000000c0 PlayerBlockAction
    {standard input}:870    .text:00000000000000c2 PlayerChangeSlot
    {standard input}:889    .text:00000000000000c4 GameTick
                            *COM*:0000000000000001 didflip
    {standard input}:1212   .bss:0000000000000001 sel
    {standard input}:1154   .progmem.data:0000000000000000 wools
    {standard input}:1021   .text:000000000000015c PlayerClick
    {standard input}:1207   .bss:0000000000000000 toup
    {standard input}:1055   .text:0000000000000174 PlayerUpdate
    {standard input}:1134   .text:00000000000001d4 ClientHandleChat
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
playerid
__mulhi3
Players
SblockInternal
SignTextUp
dumbcraft_tick
StartSend
Sbyte
Sstring
Sint
Sfloat
DoneSend
SetManyWS
__do_copy_data
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "dumbcraft.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.5eb0d06daa7ae5d4,"",@progbits
  10 0000 789C 8D53 	 .string "x\234\215S\315k\023A\024\377\275\2314\263i\372\221~\245\251\332\330\256 \nE\020\265\207R\244w\217\036=\211\335\026!\255\203\304 \024!GO\236{\361\037\365\322\316\367\276M&\322aw\366\315\274\337\373\275\317\025\020\310\255?K\300\221\371\276\204$%\244T-\240\255\224*\200\016\272 \324\317\2524\333\032\255\223?\366$6\b\233\216e\313\274\333*r\356\230\267o!v\355J\263\r\254w\361\211F\004\343/\312d\234\354\3455&\212G\316\217\265\236"
  10      CD6B 1341 
  10      14FF BD99 
  10      34B3 69FA 
  10      917E A5A9 
  11 0091 8F89 47F2 	 .string "\217\211G\362$\234\366e\270r(\302\320\236\237\332\355\300n\207\304=\311@\225\234\001%q\207\031\3003\202\0207\3707\275\235\366F$\264\317\311[\03049\311\232Q\363I\264w\263\007\212V\264\3424\322\311\007\300\031\360\234\232\214\314uk\b\372;\275=\033\321\022\013\341.\261\265\033\324\206\356\205\241v\346\277\255\271\322D\311\254\210B\347\330\366=\204\374\277\230\275(bj\215\310\2265\211D\335\371\340#\217&Mhw\210\201Ob\205%\241\022\232\270]V\342\320(\252T\367\224\335b\311\213\263\331\326\036L\345\353xW\265\353\204\277\306\254vM\333\241Y\244]\327\241S\351\3325\242\247\251\235Aoh\n\177\217"
  11      249C F665 
  11      B872 28C2 
  11      D09E 9FDA 
  11      EDC0 6E87 
  12 0154 0BAE CD3A 	 .ascii "\013\256\315:\261Y\33083D|\306Y!\335\363\032hV\207\3660\217\252"
  12      B159 D838 
  12      3344 7CC6 
  12      5921 DDF3 
  12      1A68 5687 
  13 016c B5FD 05DA 	 .ascii "\265\375\005\332\031\330\356\303`\003\004\367\300\033[\311\371"
  13      19D8 EEC3 
  13      6003 04F7 
  13      C01B 5BC9 
  13      F9
  14 017d E97B 4BEF 	 .ascii "\351{K\357\200\343\\\337\177%\251\fE\251g;H\357\347\207qk\210"
  14      80E3 5CDF 
  14      7F25 A90C 
  14      45A9 673B 
  14      48EF E787 
  15 0194 433F 61DB 	 .ascii "C?a\333l\302\226yP\"\026\231\342&\234b\207\377\036\241\262\363"
  15      6CC2 9679 
  15      5022 1699 
  15      E226 9C62 
  15      87FF 1EA1 
  16 01aa 8A16 F892 	 .ascii "\212\026\370\222\310.\342m)z\315\026ei\023`\342\031\372\227\325"
  16      C82E E26D 
  16      297A CD16 
  16      6569 1360 
  16      E219 FA97 
  17 01bf 75F5 FDEB 	 .ascii "u\365\375\353\227WW\337&\325Uu=\376\250\253\352\034\305yu\361"
  17      9757 57DF 
  17      26D5 5575 
  17      3DFE A8AB 
  17      EA1C C579 
  18 01d5 F9C7 688C 	 .ascii "\371\307h\214\356M9\256~\216\313\223\362\024\367\340\314\214"
  18      EE4D 39AE 
  18      7E8E CB93 
  18      F214 F7E0 
  18      CC8C 
  19 01e7 DC        	 .ascii "\334"
  20               	 .text
  21               	 .section .gnu.lto_.inline.5eb0d06daa7ae5d4,"",@progbits
GAS LISTING  			page 2


  22 0000 789C B555 	 .string "x\234\265U\315k\023A\024\377\275\331i\262\273I\232\364+\375Hm\242\245\245E(Tc/\202\340\245\027!\377\200x\322\252\007\377\007E\212\024\251\222\203x(\202QPJ=\250\005\005\241\364\340\311c\375\202\332\213E<\024Q\250\340]g&\263\263;\233mJ)&\360fy\357\375\336\374\336\327.\003C\322\257\3527\317I\2404@\f\0048 !\301\307\026n2x\2333B\271\223\346\f\351\315\031.]\t\243[ \216\213\347\351\032\271Rs9xR@\031\003\336\361\307[\036\362\357\346\030\330F\276"
  22      CD6B 1341 
  22      14FF BDD9 
  22      69B2 BB49 
  22      9AF4 2BFD 
  23 00a0 DE28 5740 	 .ascii "\336(W@_:\\\246$\350\016\023!\245\004[\342\025\025\230\241\277"
  23      5F3A 5CA6 
  23      24E8 0E13 
  23      21A5 045B 
  23      E215 1598 
  24 00b6 D7A6 30BC 	 .ascii "\327\2460\274\276Npw\247\002\n\336\362\254\362t0\362y\177\nc"
  24      BE4E 7077 
  24      A702 0ADE 
  24      F2AC F274 
  24      30F2 797F 
  25 00cc ABCF 3C64 	 .ascii "\253\317<d\226g\017@\201\303{(\"0\377\326\367\024R\215\262*\032"
  25      9667 0F40 
  25      81C3 7B28 
  25      2230 FFD6 
  25      F714 528D 
  26 00e3 F922 5C0A 	 .ascii "\371\"\\\n\305'\3222\276\364\263\307X\322\350\177.\225\023\365"
  26      C527 D232 
  26      BEF4 B3C7 
  26      58D2 E87F 
  26      2E95 13F5 
  27 00f7 DB7D 46E9 	 .ascii "\333}F\351\302\367e\210\371\323F\3052\222\017\270#\364\202\213"
  27      C2F7 6588 
  27      F9D3 46C5 
  27      3292 0FB8 
  27      23F4 828B 
  28 010b D167 507C 	 .ascii "\321gP|#\361\305\225\033\351\2103\201\3525\211i9r\310\274 \371"
  28      23F1 C595 
  28      1BE9 8833 
  28      81EA 3589 
  28      6939 72C8 
  29 0122 937E D97B 	 .ascii "\223~\331{\0375\212\207\260Nxi\0211\273v\316\004\314\303\033"
  29      1F35 8A87 
  29      B04E 7869 
  29      1131 BB76 
  29      CE04 CCC3 
  30 0137 1208 5285 	 .ascii "\022\bR\205\203F4\312<`\026\206/\300\177j\302\373\367_\245\354"
  30      8346 34CA 
  30      3C60 1686 
  30      2FC0 7F6A 
  30      C2FB F75F 
  31 014d F0E8 427A 	 .ascii "\360\350Bz\201t(\226\372\261\300C\273*R7\272\252\362\362\355"
  31      8174 2896 
  31      FAB1 C043 
  31      BB2A 5237 
  31      BAAA F2F2 
  32 0162 0B76 EA31 	 .ascii "\013v\3521\321#\t\201\t\016\tn\275(}\023\027\260\356\215EBVP"
  32      D123 0981 
  32      090E 096E 
  32      BD28 7D13 
  32      17B0 EE8D 
  33 017a 3366 F203 	 .ascii "3f\362\003\021\213\027\032\372\220\353\223"
  33      118B 171A 
GAS LISTING  			page 3


  33      FA90 EB93 
  34 0186 04EE 9E4D 	 .string "\004\356\236M\210\\D\266\232p\255N?\022E\211~\024\326L-\n\333/]{\036T=\024n\300\365K\244\326+p\34099\314p\262\352\030\344\355\355C\360\362\344`NN\260s]\230/\231\247x\313\n\232\263\253Isy\226\3209\035oojw*\241\275\3661\fw0\216\023\303\231\200;\202\256\327D\016]\221\304\212\177\005\202\256\206\217*@dX\f\315\350\030\213\\\025\331\221\366\023&<\312\373zT\366]\202\243--\321\265\226\225w\3525\340XKS\342\036\243\035\023\017\202Yw\314D\007{\243FDCT\212mK\035\026\001L\304\216\342\264Q\353\352\265q\364\274G\260b\321Q5\203o\256\332\363zL\310\326Z\331)\264\312M\234\223g\032\354+\023\016\037\330\346\333\001{\256\235\254n\233:\214\252I\233\232\367\221\342\033H\311Z\233\364f0\003\r}\rp\017\251\257D\004\026\325\007\346V\251"
  34      885C 44B6 
  34      9A70 AD4E 
  34      3F12 4589 
  34      7E14 D64C 
  35 0287 32E9 38DD 	 .ascii "2\3518\335\246\231\347H\365\263^;\314S<O\n+B\315=M\270Z\023\327"
  35      A699 E748 
  35      F5B3 5E3B 
  35      CC53 3C4F 
  35      0A2B 42CD 
  36 02a1 159D C60A 	 .ascii "\025\235\306\n\375\316\310\242\323\237\325\023vc\0248\314<\226"
  36      FDCE C8A2 
  36      D39F D513 
  36      7663 1438 
  36      CC3C 96
  37 02b4 73FB 921C 	 .ascii "s\373\222\034\310\353\377A-\372\341[\364$\334B0\315\221/\037"
  37      C8EB FF41 
  37      2DFA E15B 
  37      F424 DC42 
  37      30CD 912F 
  38 02c9 0FF7 AC2A 	 .ascii "\017\367\254*?\213I\036\247\220\226\345\022\2572\273X3\316\016"
  38      3F8B 491E 
  38      A790 96E5 
  38      12AF 32BB 
  38      5833 CE0E 
  39 02dd 3DF2 A021 	 .ascii "=\362\240!\237h\376\227X\222E\253\232\366\246 \262a\365Z\260"
  39      9F68 FE97 
  39      5892 45AB 
  39      9AF6 A620 
  39      B261 F55A 
  40 02f2 2331 65D2 	 .ascii "#1e\322N\232\2451\036:\357\226^EG<\322\315\230\320N\035\235b"
  40      4E9A A531 
  40      1E3A EF96 
  40      5E45 473C 
  40      D2CD 98D0 
  41 030a 2C65 44F9 	 .ascii ",eD\371O\362SQ\324\360\005\037\336\303\210h\\=\273V\032\326z"
  41      4FF2 5351 
  41      D4F0 051F 
  41      DEC3 8868 
  41      5C3D BB56 
  42 0321 EBE1 B5F8 	 .ascii "\353\341\265\370Z\206P\340\037dR\353\204"
  42      5A86 50E0 
  42      1F64 52EB 
  42      84
  43               	 .text
  44               	 .section .gnu.lto_.pureconst.5eb0d06daa7ae5d4,"",@progbits
  45 0000 789C 25C1 	 .string "x\234%\301I\016\202@\024E\321\242"
  45      490E 8240 
  45      1445 D1A2 
  45      00
  46 000d 9B10 4450 	 .ascii "\233\020DP\340\376\247\202Hb\250!\261\t\373`\377{q\3409\336y"
  46      E0FE A782 
  46      4862 A821 
  46      B109 FB60 
  46      FF7B 71E0 
  47 0024 B7BA BFE0 	 .ascii "\267\272\277\340\322H>\215\225,\033m\265cO\266\344\034(8\252"
GAS LISTING  			page 4


  47      D248 3E8D 
  47      952C 1B6D 
  47      B563 4FB6 
  47      E41C 2838 
  48 0039 A4E2 C459 	 .ascii "\244\342\304Y5\r\255\300\020\027\256\334\254\263\336\356\f<\030"
  48      350D ADC0 
  48      1017 AEDC 
  48      ACB3 DEEE 
  48      0C3C 18
  49 004c EDC9 44D0 	 .ascii "\355\311D\320\254\027o>|\365\003<\030\b`"
  49      AC17 6F3E 
  49      7CF5 033C 
  49      1808 60
  50               	 .text
  51               	 .section .gnu.lto_DoubleToW.5eb0d06daa7ae5d4,"",@progbits
  52 0000 789C 8554 	 .string "x\234\205T\315KTQ\024?\347\276\271\357\275q\306qF\307\257\231\361sS+\205H\3026\376\005\255\023j\025N\224L&e\320\316\247\317\300\300\302ZI\271QI\211H\013\372@[4F\213\n*\2426E\0137\006\025\210\264I\202x\235s\337{\327\231Ip`\316\275\367\234\337\371\375\3169\357\276'@@\345o\200\376\317%@'\255\030\005\024\323\357"
  52      CD4B 5451 
  52      143F E7BE 
  52      B9EF BD71 
  52      C671 46C7 
  53 0072 C66C 21E4 	 .string "\306l!\344T=8U\306D/8qC\310\311\003t\212\260\215GP\372 )\314\235\004\271\255\231>r\233h\373n+\334\330\210\274\001\204QaD\244i\3318z\022YUt\302\234\343\334\334\330|\177M:\017\234I\307\363F\013H\345\245\021N#\234\300\002bR-\242\242d\2258]\274\361\375\240\343\026\235\035\317\263\nh\bh\332/oE\0247<\357\353\322tO\007\302"
  53      543D 3855 
  53      C644 2F38 
  53      7143 C8C9 
  53      0374 8AB0 
  54 00eb CE61 27A9 	 .ascii "\316a'\251Q\252\201\303\b\222v\021\223\214\264\330\330|\214\362"
  54      51AA 81C3 
  54      0892 7611 
  54      938C B4D8 
  54      D87C 8CF2 
  55 00ff AE8A 4D8C 	 .ascii "\256\212M\214M\234\222\026(\251\232\017\t\006\324\360.\311&\305"
  55      4D9C 9216 
  55      28A9 9A0F 
  55      0906 D4F0 
  55      2EC9 26C5 
  56 0113 A696 7D75 	 .ascii "\246\226}ul\322|\254g\323@\306l\f\344\232H\t\233\331\235\t\270"
  56      6CD2 7CAC 
  56      67D3 40C6 
  56      6C0C E49A 
  56      4809 9BD9 
  57 012a B2C1 9A0B 	 .ascii "\262\301\232\013\020-\024\264Z9\247\215KkgC\245K\230\240\226"
  57      102D 14B4 
  57      5A39 A78D 
  57      4B6B 6743 
  57      A54B 98A0 
  58 013f DBFD 9115 	 .ascii "\333\375\221\025\377n\227tn\013\350\330\257s\237\333W\002\306"
  58      FF6E 9774 
  58      6E0B E8D8 
  58      AF73 9FDB 
  58      5702 C6
  59 0152 D2EF 3859 	 .ascii "\322\3578Y~4\375(x5^\203\030\300;(\t\266H\260A\326}\013\343k"
  59      7E34 FD28 
  59      7835 5E83 
  59      18C0 3B28 
  59      09B6 48B0 
  60 016c 57EE BD09 	 .ascii "W\356\275\t\002\203(o\303-\242\217R\220e\354\200\236`[\356\026"
  60      0283 286F 
GAS LISTING  			page 5


  60      C32D A28F 
  60      5290 65EC 
  60      809E 605B 
  61 0182 8628 9380 	 .ascii "\206(\223\200\354t\357\033\241\313\"/gH\033\002\326eMjW\220b"
  61      EC74 EF1B 
  61      A1CB 222F 
  61      6748 1B02 
  61      D665 4D6A 
  62 0199 09E9 BC46 	 .ascii "\t\351\274FQ\330V\244\253\232\264J\361F\225\367\231\373GCc\024"
  62      51D8 56A4 
  62      AB9A B44A 
  62      F146 95F7 
  62      99FB 4743 
  63 01af 5262 DB1E 	 .ascii "Rb\333\036*\"w\331\035\n\203q\212\253`\204B%=/\250\236\343~\335"
  63      2A22 77D9 
  63      1D0A 8371 
  63      8AAB 6084 
  63      4225 3D2F 
  64 01c8 EECA 0FCD 	 .ascii "\356\312\017\315VM\022*!\026\226\276[T\242\242tQ:\017\215\252"
  64      564D 122A 
  64      2116 96BE 
  64      5B54 A2A2 
  64      7451 3A0F 
  65 01de 2160 C53C 	 .ascii "!`\305<\222\344U\244\206_\340\252\373K\217/\2454\223\201\330"
  65      92E4 55A4 
  65      865F E0AA 
  65      FB4B 8F2F 
  65      A534 9381 
  66 01f3 139D 535B 	 .ascii "\023\235S[!f\204b\324\336|<D\325\021P1\313\240\020\235\237\246"
  66      2166 8462 
  66      D4DE 7C3C 
  66      44D5 1150 
  66      31CB A010 
  67 020a 6020 B6A8 	 .ascii "` \266\250\235\365J/\035\324\274\246i\032(\024\2003\241\257\221"
  67      9DF5 4A2F 
  67      1DD4 BCA6 
  67      691A 2814 
  67      8033 A1AF 
  68 021f DC4C 6D3A 	 .ascii "\334Lm:\216(\037\336\234\032^c\300\362\364\213\356\245y\020\233"
  68      8E28 1FDE 
  68      9C1A 5E63 
  68      C0F2 F48B 
  68      EEA5 7910 
  69 0234 14CD A456 	 .ascii "\024\315\244V\314\250g\320\274\307\3603\ny\325]\325\223\313\262"
  69      CCA8 67D0 
  69      BCC7 F033 
  69      0A79 D55D 
  69      D593 CBB2 
  70 0248 9C71 DDF6 	 .ascii "\234q\335\366\203\377%d\001^\301\313\315\365\207\251\262\004"
  70      83FF 2564 
  70      015E C1CB 
  70      CDF5 87A9 
  70      B204 
  71 025a 597A F5FB 	 .ascii "Yz\365\373\351\036O\364\032\204\373\266\3768_\216\253)\303E\340"
  71      E91E 4FF4 
  71      1A84 FBB6 
  71      FE38 5F8E 
GAS LISTING  			page 6


  71      AB29 C345 
  72 026f 45CE 50D3 	 .ascii "E\316P\323\374}4\304\345T\327\331=\232\315\205i2x{\306m\320A"
  72      FC7D 34C4 
  72      E554 D7D9 
  72      3D9A CD85 
  72      6932 787B 
  73 0287 0C26 E11D 	 .ascii "\f&\341\035\n\211Z\324;\301\325\216E\265\217\213\260vK\370\f"
  73      0A89 5AD4 
  73      3BC1 D58E 
  73      45B5 8F8B 
  73      B076 4BF8 
  74 029c C81E F0E8 	 .ascii "\310\036\360\350\332\212\331\237\376\001\300xD\027:\027\371\024"
  74      DA8A D99F 
  74      FE01 C078 
  74      4417 3A17 
  74      F914 
  75 02ae 6335 1376 	 .ascii "c5\023v\022T\344\370]w\341\243\236r\353\256b\"\364\265\221;,"
  75      1254 E4F8 
  75      5D77 E1A3 
  75      9E72 EBAE 
  75      6222 F4B5 
  76 02c5 D182 993E 	 .ascii "\321\202\231>C\205\227\352\302x\273\312\361\343\266j\341\003"
  76      4385 97EA 
  76      C278 BBCA 
  76      F1E3 B66A 
  76      E103 
  77 02d7 7DAE 8122 	 .ascii "}\256\201\"\302\257E\020\2079u\216\220\326\3541\376\\ \2438\230"
  77      C2AF 4510 
  77      8739 758E 
  77      90D6 EC31 
  77      FE5C 20A3 
  78 02ed EAEA EA2E 	 .ascii "\352\352\352.\234=u\261\373H\317aZ\273\316\200q!?b\347/\017\237"
  78      9C3D 75B1 
  78      FB48 CF61 
  78      5ABB CE80 
  78      7121 3F62 
  79 0305 1FCA 0F8D 	 .ascii "\037\312\017\215\340\245\177\302]Nq"
  79      E0A5 7FC2 
  79      5D4E 71
  80               	 .text
  81               	 .section .gnu.lto_WToDouble.5eb0d06daa7ae5d4,"",@progbits
  82 0000 789C 8D55 	 .string "x\234\215U\335k\\E\024?g\356\235\373\265+\3116\3314)M\262$6\b\206D\254\242\376\t\376\005\026\364Ib1\313R\002\"\024_r77\225\0246%\nB\325<\264\004\t-\324\266\004t\375"
  82      DD6B 5C45 
  82      143F 67EE 
  82      9DFB B52B 
  82      C936 D934 
  83 0042 1329 C594 	 .ascii "\023)\305\224\266 \370`^$\264\264\241\024[K\013F\214\254\347"
  83      B620 F860 
  83      5E24 B4B4 
  83      A114 5B4B 
  83      0B46 8CAC 
  84 0057 CCDC D97B 	 .ascii "\314\334\331{w7\335t!sf\316\307\357\234\363;37\002\0044\377N"
  84      7737 DD74 
  84      2173 66CE 
  84      C7EF 9CF3 
  84      3B33 3702 
  85 006f D2DF 8C   	 .ascii "\322\337\214"
GAS LISTING  			page 7


  86 0072 0730 4A12 	 .string "\0070J\022\263\200b\341&@\331\023\302\252\344!\f\354\3317 \314Z(\265\3326\033\211\236\3368\302\377\331\"G\367\3465 OW\353\327<O8W\326I\023\370\327m\322\373\"\270\332O\247\314\265\227\350\024`FGg\020y\003\b\323\302\262\245\343z~\220\301\351w\220K\263\207\340l\030.l\336\271[\225'.\205sa\2556]B\352\241\033\341(\302\333XB\354TB4\365\245\002?]}t\257\020F\253\341v\255\346\226\320\0220\220\304y:\016w\215{\374\347\013I\234-\240\360\214\371\236|\026\206X>\023\356\324j\226\n|~\257\300\213bu\263V\333\271\260\360\007\216\"Lqs\023\270\204C`\221\374\212\244\035KIr\231\244\213S\\|\t\245\317K\020\2333\244\026YZ\240\203Qr\261\367>\222gIv\305n\335\261>\037g\351\211\317\373\t\313\351\245\305\355\343\335\001^\016\362\322\317\313"
  86      B380 62E1 
  86      2640 D913 
  86      C2AA E421 
  86      0CEC D937 
  87 0173 1B06 7957 	 .ascii "\033\006yW\340e\210\217\303\274;\304\313\b/\324\212\204Y\032"
  87      E065 888F 
  87      C3BC 3BC4 
  87      CB08 2FD4 
  87      8A84 591A 
  88 0187 5641 03EB 	 .ascii "VA\003\353t\032<&\347\237G)R=\001/\356\305\r\260\235~o\321\372"
  88      741A 3C26 
  88      E79F 4729 
  88      523D 012F 
  88      EEC5 0DB0 
  89 01a0 C485 2328 	 .ascii "\304\205#(HX7`\346A\264\365\257\230\300s(\241\210^\021]\200\033"
  89      4858 3760 
  89      E641 B4F5 
  89      AF98 C073 
  89      28A1 885E 
  90 01b8 109D B48C 	 .ascii "\020\235\264\214\312g4y\252\223\255l\242\200c\306\026\220\031"
  90      CA67 3479 
  90      AA93 AD6C 
  90      A280 63C6 
  90      1690 19
  91 01cb 601D E278 	 .ascii "`\035\342x]'\251Y7\263\271\363\272Q\237W\352\f\300/p\345\316"
  91      5D27 A959 
  91      37B3 B9F3 
  91      BA51 9F57 
  91      EA0C C02F 
  92 01e2 DA7F 3913 	 .ascii "\332\1779\023\237U\330\351\"\217\240\005\237\b\256\253z\372\326"
  92      9F55 D8E9 
  92      228F A005 
  92      9F08 AEAB 
  92      7AFA D6
  93 01f5 366A C72F 	 .ascii "6j\307/\341\213r\030\206>];B\341\030O9\363\316\n\271-\362?\027"
  93      E18B 7218 
  93      863E 5D3B 
  93      42E1 184F 
  93      39F3 CE0A 
  94 020e 2D57 1C03 	 .ascii "-W\034\003\334A\330\251\302h\210\2443\031l\270%U\206\352\355"
  94      DC41 D8A9 
  94      C268 88A4 
  94      3319 6CB8 
  94      2555 86EA 
  95 0223 67CA 90D4 	 .ascii "g\312\220\324&\231\263u\365\302\025$\306\204\334\256\364\231"
  95      2699 B375 
  95      F5C2 1524 
  95      C684 DCAE 
  95      F499 
  96 0235 CC39 A54D 	 .ascii "\3149\245MQ\262\254z\317)J\316|n\0315\3175\205\276\001H\025Z"
  96      51B2 AC7A 
  96      CF29 4ACE 
  96      7C6E 1935 
  96      CF35 85BE 
  97 024d 8B97 7BA9 	 .ascii "\213\227{\251r\0339\231\003\364\344\365\204\036V\\\203\277\257"
  97      721B 3999 
GAS LISTING  			page 8


  97      03F4 E4F5 
  97      841E 565C 
  97      83BF AF
  98 0260 C884 318F 	 .ascii "\310\2041\217\345L]\307@\320H\243\013\213W9:\232\213\036'\274"
  98      E54C 5DC7 
  98      40D0 48A3 
  98      0B8B 5739 
  98      3A9A 8B1E 
  99 0276 7415 D162 	 .ascii "t\025\321bg\233\336\024\3542\271.5\374\013\321\337IC\335\224"
  99      679B DE14 
  99      EC32 B92E 
  99      35FC 0BD1 
  99      DF49 43DD 
 100 028b 508D 0961 	 .ascii "P\215\ta\227\276\272U\300\\\264U\0317\001\371\"\n\325YS\300\222"
 100      97BE BA55 
 100      C05C B455 
 100      1937 01F9 
 100      220A D559 
 101 02a2 0AC8 9B02 	 .ascii "\n\310\233\002=\240oUL\246A\223\212%\245\320\365X\211B\207\013"
 101      3DA0 6F55 
 101      4CA6 4193 
 101      8A25 A5D0 
 101      F558 8942 
 102 02b8 EE7D F66E 	 .ascii "\356}\366nY\232l:UG\275\363\r\0201\255\3624\3152\357n\313\r\240"
 102      599A 6C3A 
 102      5547 BDF3 
 102      0D10 31AD 
 102      F234 CD32 
 103 02d1 4D20 171F 	 .ascii "M \027\037:\324\240{}\245w\003$MDVV&\250\001\367\267\303\\\216"
 103      3AD4 A07B 
 103      7DA5 7703 
 103      244D 4456 
 103      5626 A801 
 104 02ea CFA3 255A 	 .ascii "\317\243%Z\267\326~\372X4\200;\235\r\304\006P\023\\\366\352h"
 104      B7D6 7EFA 
 104      5834 803B 
 104      9D0D C406 
 104      5013 5CF6 
 105 0300 9A3A 456A 	 .ascii "\232:Ej\342\224I.\212i\305\216\251]\232\3575\360=m\251\355Q\227"
 105      E294 492E 
 105      8A69 C58E 
 105      A95D 9AEF 
 105      35F0 3D6D 
 106 0318 EBFB 1317 	 .ascii "\353\373\023\027\347\007L\300~\272\247\330|G\025\356\327\321"
 106      E707 4CC0 
 106      7EBA A7D8 
 106      7C47 15EE 
 106      D7D1 
 107 032a 3768 BCE8 	 .ascii "7h\274\350\n\331\nV\352\227q?\372\310\230\372\310\252\374\277"
 107      0AD9 0A56 
 107      EA97 713F 
 107      FAC8 98FA 
 107      C8AA FCBF 
 108 033e ABBF EF03 	 .ascii "\253\277\357\003\004K\006\345\371f\3755\264d!\307\030\354\362"
 108      044B 06E5 
 108      F966 FD35 
 108      B464 21C7 
GAS LISTING  			page 9


 108      18EC F2
 109 0351 7326 F460 	 .ascii "s&\364`\275\253:Z?i\025\377\266\251\353|\235\315\001\352I\325"
 109      BDAB 3A5A 
 109      3F69 15FF 
 109      B6A9 EB7C 
 109      9DCD 01EA 
 110 0367 956D A96B 	 .ascii "\225m\251k\220\254Mu\025\024\330`S]\374J\335Tm\250k+\304\311"
 110      90AC 4D75 
 110      1514 D860 
 110      535D FC4A 
 110      DD54 6DA8 
 111 037f BE9D AF5F 	 .ascii "\276\235\257_\303!\223\315n\3116L\326=p\205\306\035\216C\177"
 111      C321 93CD 
 111      6EC9 364C 
 111      D63D 7085 
 111      C61D 8E43 
 112 0394 4866 7028 	 .ascii "Hfp(\236L\252\351\021\322\246\232n\003ki\330\021\345V\335\276"
 112      9E4C AAE9 
 112      11D2 A69A 
 112      6E03 6B69 
 112      D811 E556 
 113 03aa FF17 3ED5 	 .ascii "\377\027>\325\325n\370\376\250\017\342\2036\356\262\305\275\332"
 113      D56E F8FE 
 113      A80F E283 
 113      36EE B2C5 
 113      BDDA 
 114 03bc CEDD 6971 	 .ascii "\316\335iq\377\275\235\273\333\340\376+\2247\177\034\326\316"
 114      FFBD 9DBB 
 114      DBE0 FE2B 
 114      9437 7F1C 
 114      D6CE 
 115 03ce E6D5 D9F4 	 .ascii "\346\325\331\364X}\214\237A\260\263r\t\371\177\r\322;`*scc\343"
 115      587D 8C9F 
 115      41B0 B372 
 115      09F9 7F0D 
 115      D23B 602A 
 116 03e6 A5C9 773F 	 .ascii "\245\311w?\030\177\355\325WH\216\275\017\376\321\322\344\324"
 116      187F EDD5 
 116      5748 8EBD 
 116      0FFE D1D2 
 116      E4D4 
 117 03f8 E4B1 B197 	 .ascii "\344\261\261\227\017\343\244\365\336\361)G\237\361\303\377\001"
 117      0FE3 A4F5 
 117      DEF1 2947 
 117      9FF1 C3FF 
 117      01
 118 0409 FBED F97F 	 .ascii "\373\355\371\177"
 119               	 .text
 120               	 .section .gnu.lto_FloatToW.5eb0d06daa7ae5d4,"",@progbits
 121 0000 789C 8554 	 .string "x\234\205TAKTQ\024>\347\336w\337{\243\3438\243\2163\352@\345\2466\215\004E\270\360w$\325*4J\304\244\f\332\315\3237\242A\215\022m*Z\230\024\004\245-\2020\221F\t\252E\301\354j'\204n\002\027E;\363u\316}\357\276\306I\360\201\347\276\373}\337\371\3169\367\335Q\200\200\306\347<\375\375\261"
 121      414B 5451 
 121      143E E7DE 
 121      77DF 7BA3 
 121      E338 A38E 
 122 0067 7A69 4517 	 .ascii "ziE\027P\314\177\001\230t\205Pw\262\3405\311r?xI)\324\354q\332"
 122      50CC 7F01 
 122      9874 8550 
GAS LISTING  			page 10


 122      77B2 E035 
 122      C972 3F78 
 123 0081 591C 9316 	 .ascii "Y\034\223\026\252P\244\204]+\020\354\274;E\260\215N\b;\210\374"
 123      AA50 A484 
 123      5D2B 10EC 
 123      BC3B 45B0 
 123      8D4E 083B 
 124 0097 0208 2521 	 .ascii "\002\b%!-e;X\272\210\\K\364\302\202\347\335\333\334\372\371\025"
 124      2D65 3B58 
 124      BA88 5C4B 
 124      F4C2 82E7 
 124      DDDB DCFA 
 125 00ad A7BD 4D6F 	 .ascii "\247\275Mo\336\333\013J8\212\324V\007\302e\204\013\264\301\264"
 125      DEDB 0B4A 
 125      388A D456 
 125      07C2 6584 
 125      0BB4 C1B4 
 126 00c1 5E44 43AB 	 .ascii "^DC\253:u\276\372`\346\256\362^y\263^\020\224FQ\n\310\037\226"
 126      3A75 BEFA 
 126      60E6 AEF2 
 126      5E79 B35E 
 126      1094 4651 
 127 00d9 B82C AA9B 	 .ascii "\270,\252\233A\360b\245\274q\244\007a\b\027\260\227\352QQ\211"
 127      41F0 62A5 
 127      BC71 A407 
 127      6108 17B0 
 127      97EA 5151 
 128 00ee E308 8ADE 	 .ascii "\343\b\212\336,\233\202r8\270\034\022\2145qh\346m\222\222\026"
 128      2C9B 8272 
 128      38B8 1C12 
 128      8C35 7168 
 128      E66D 9292 
 129 0103 29A9 8537 	 .ascii ")\251\2057)\016\255\314\245\371-\303\241\215\202\335\036Yw\220"
 129      290E ADCC 
 129      A5F9 2DC3 
 129      A18D 82DD 
 129      1E59 7790 
 130 0117 2B66 19EE 	 .ascii "+f\031\356\214\362r\321\232\217\024]D:\335\334\001=\n\3124\326"
 130      8CF2 72D1 
 130      9A8F 145D 
 130      443A DDDC 
 130      013D 0ACA 
 131 012d D190 0975 	 .ascii "\321\220\tu\341!U\037\317T\352&u\005\034;lR`\236\236s\024\371"
 131      E121 551F 
 131      CF54 EA26 
 131      7505 1C3B 
 131      6C52 609E 
 132 0145 030C A2E0 	 .ascii "\003\f\242\340U~\0021\204OQ\221\3773\362\037A\t\360\031\246\336"
 132      557E 0231 
 132      844F 5191 
 132      FF33 F21F 
 132      4109 F019 
 133 015b 4E7F AF9C 	 .ascii "N\177\257\234\b\211\021T\217\340!Y&\210dk72$\331\216\377D"
 133      0889 1154 
 133      8FE0 2159 
 133      2688 646B 
 133      3732 24D9 
GAS LISTING  			page 11


 134 0172 1895 4D42 	 .string "\030\225MB\006\375\227\322@\016\241\234\241P\313\375\325\230q\211\324L\020RTp;vJ4\324CS\317_\362\227b\213&\022j\013'\352%f\232\211\324\362\025\177\314`I]\263\031\240n\340E=p2\232\344G\345\244\021\267\220u\303()Bu5\327\364\273\207\206km\350W\324\235\317N\254J\2230\354*6\315h\337\264\221\306\007\320FT4@\267\301\332\tfw\333\363\330\277n\214\005=F{\344\362\253\322cR\262#\330\241mf\343\212\235\372$\262\007\034C\247V\336\366\177\247\2146\307\345d\005C\362\277\204\034\300Gx\277\265\2766#\366e\250\372K7H\367\251\334/I\270\275^\373\220\334/l\335'\264`\243 \3657^\236s\2140\257\007\317\0350o\336\344\251\350\036O\321\2271$F\207\361f\3166N]\372zr\307\223\211\030\3436\234\177M|\003d\004\002\272\225bw\265\2407"
 134      06FD 97D2 
 134      400E A19C 
 134      A150 CBFD 
 134      D598 7189 
 135 0273 F2FE 00   	 .string "\362\376"
 136 0276 D5B3 5E0F 	 .ascii "\325\263^\017p9\033j\334\346\324s\177u.>\326n]2\354\307\321\375"
 136      7039 1B6A 
 136      DCE6 D473 
 136      7F75 2E3E 
 136      D66E 5D32 
 137 028e D4E8 7F1D 	 .ascii "\324\350\177\035\020#B_A\032\233\033S\273k.\377\n\221ULf\212"
 137      1023 425F 
 137      411A 9B1B 
 137      53BB 6B2E 
 137      FF0A 9155 
 138 02a5 C5BE D1AB 	 .ascii "\305\276\321\253\227n\364\235=s\232\326\342\025\220\327\207'"
 138      976E F49D 
 138      3D73 9AD6 
 138      E215 90D7 
 138      8727 
 139 02b7 DCE1 5BE3 	 .ascii "\334\341[\343\327\306\206\307&\360\346_\257/$<"
 139      D7C6 86C7 
 139      26F0 E65F 
 139      AF2F 243C 
 140               	 .text
 141               	 .section .gnu.lto_WToFloat.5eb0d06daa7ae5d4,"",@progbits
 142 0000 789C 8D54 	 .string "x\234\215T\335k\024W\024?\347\316\334\235\217\r\304\230l>\304$K\242}Q6E\f\245O}\356\037 \n\355\223\244\322,\213,H\241\370\222\331\314\206F\033E\305\305\320*(\241\r\t\264\021\n\325\364%I\021i\202\n\242\001\363dhQ\037,\225\200`\025a<\347\336\2713\353\3066.\354\275w\316\307\357\374\316\357\236\031\001\002\032\177'\350\177\301\001\330K;6\001\2123w"
 142      DD6B 1457 
 142      143F E7CE 
 142      DC9D 8F0D 
 142      C498 6C3E 
 143 007b 2AAE 10D6 	 .string "*\256\020\326D\016\002\337\256~\fA\223\205R\233ms\220\350\352CFx\277[\024\350\334Y\001\212t\264}\311uE\346\3062Y|\357\226MvO\3707\273\351)\273\362!=\371\230\325\331YD>"
 143      440E 02DF 
 143      AE7E 0C41 
 143      9385 529B 
 143      6D73 90E8 
 144 00bc C288 B06C 	 .ascii "\302\210\260l\231q\\\317\317\342\310\347\310\324\354>\270\022"
 144      9971 5CCF 
 144      CFE2 C8E7 
 144      C8D4 EC3E 
 144      B812 
 145 00ce 0467 D61F 	 .ascii "\004g\326\037\315\316\313\261\253\301x\020E#%\244\036\332\020"
 145      CDCE CBB1 
 145      ABC1 7810 
 145      4523 25A4 
 145      1EDA 10
 146 00e1 8E20 7C86 	 .ascii "\216 |\206%\304mj\023\r}\251\304s\213\3217\247\354 I\264\004"
 146      25C4 6D6A 
 146      130D 7DA9 
 146      C473 8BD1 
 146      37A7 EC20 
 147 00f8 F4A4 89AE 	 .ascii "\364\244\211\256N\304w&\236]9%\323D[@\376=+\236[\021\223Au1\212"
 147      4EC4 7726 
 147      9E5D 3925 
 147      D344 5B40 
 147      FE3D 2B9E 
GAS LISTING  			page 12


 148 0113 3E51 69BB 	 .ascii ">Qi\273\266J\233\023\213\353Q\364\367B\365\325\236\017\020\312"
 148      B64A 9B13 
 148      8BEB 51F4 
 148      F742 F5D5 
 148      9E0F 10CA 
 149 0127 DCDC 104E 	 .ascii "\334\334\020Na\037X\264\377@\273\035\357\222\366i\332\035,3\367"
 149      611F 58B4 
 149      FF40 BB1D 
 149      EF92 F669 
 149      DA1D 2C33 
 150 013c 124A 8F17 	 .ascii "\022J\217\027?vg"
 150      3F76 67
 151 0143 C92C 9A68 	 .string "\311,\232h\201fFi\211\243\267\323~\205\366\3268\254-\266\347\342*\355\361s\007ae:iq\272\370\264\203\227\235\274t\363\322\303\216^>\345y\351\343\307~>Q\003\022\252tEy\r\247\213h\310X\220\013'O\327)\351\n\330\263\225$\300~\372\035\244\365\271\003\207P\320f\335\206\321\177\302\251\363\205!\234A\tEt\213HC{\033\302\023\2261y\214&O#{\331E\tG\215\317'7\3002\bm\320D\311\314\266\321\365o\307\034c\237U\366,\300\037p\343\321\322\245\223\302 4)\364z\232\207\320\202\263\202\231]\237\374\361%\352\300\357\341\273J\020\004\036\215\033\301p\216\253\202\371d\005\334\030\305\317\204O\316g\fp3a\327Q+3\377fS\301\206?\245\252p}\372\275*\244\334$\253F\315\221SAb,\311T\255\313TnQ\326:Q\246U\363-J\224\3133\322\230\371j\353\320\327"
 151      8166 4669 
 151      89A3 B7D3 
 151      7E85 F6D6 
 151      38AC 2DB6 
 152 0244 89A1 75F1 	 .ascii "\211\241u\361^'1\267\221\213e\200\336u}Gs5\307\340o/\262`,d%"
 152      5E27 31B7 
 152      918B 6580 
 152      DE75 7D47 
 152      7335 C7E0 
 153 025f 9BD8 1808 	 .ascii "\233\330\030\b\336\226\321\201\21379;\034\017\177\251%\272\264"
 153      DE96 D181 
 153      8B37 393B 
 153      1C0F 7FA9 
 153      25BA B4
 154 0272 16D1 E260 	 .ascii "\026\321\342`;\212\270\360\246\273kU\327\377Sx-m\250\215\n\252"
 154      3B8A B8F0 
 154      A6BB 6B55 
 154      D7FF 5378 
 154      2D6D A88D 
 155 0288 6B42 7847 	 .ascii "kBxG_m*a<\234\256\r\230\204\\\021\205\352\254!aJ%\344\fA\027"
 155      5F6D 2A61 
 155      3C9C AE0D 
 155      9884 5C11 
 155      85EA AC21 
 156 02a3 E823 158B 	 .ascii "\350#\025\213i\320\244RI\0314\037+5\350t\301\275W\037W\244\251"
 156      69D0 A452 
 156      4919 341F 
 156      2B35 E874 
 156      C1BD 571F 
 157 02ba A64B 3527 	 .ascii "\246K5'\235\257\201\210e\225\223t\2279\347_\271\006t\360\345"
 157      9DAF 8188 
 157      6595 9374 
 157      9739 E75F 
 157      B906 74F0 
 158 02cf C4DD 1235 	 .ascii "\304\335\0225\350\334Z\355\\\003I7\"'V\207\250\001\347\376\001"
 158      E8DC 5AED 
 158      5C03 4937 
 158      2227 5687 
 158      A801 E7FE 
 159 02e4 A6E3 F1D5 	 .ascii "\246\343\361\325\222\254O\226\036\246\363\251\2402\333\336\022"
 159      92AC 4F96 
 159      1EA6 F3A9 
 159      A032 DBDE 
 159      12
GAS LISTING  			page 13


 160 02f5 D687 4830 	 .ascii "\326\207H0\355\305\275\365\322)Q\323\240l:(\246\025;\226\366"
 160      EDC5 BDF5 
 160      D229 51D3 
 160      A06C 3A28 
 160      A615 3B96 
 161 030a AF5A A781 	 .ascii "\257Z\247\201o\377_i\333\325p\3756\366\254\326c\022:hN\261qF"
 161      6FFF 5F69 
 161      DBD5 70FD 
 161      36F6 ACD6 
 161      6312 3A68 
 162 0322 15EE CFE1 	 .ascii "\025\356\317\341\257h\242h\204\354\004\226 \236\206\307\215\253"
 162      AF68 A268 
 162      84EC 0496 
 162      209E 86C7 
 162      8DAB 
 163 0334 8BBC 2A7E 	 .ascii "\213\274*~>y\303w\020,9T\344\247\311\333\260\251\n\005\306`\033"
 163      3E79 C377 
 163      102C 3954 
 163      E4A7 C9DB 
 163      B0A9 0A05 
 164 034b 3993 BA33 	 .ascii "9\223\2723\351*A\353&\253\322\3371\274f\0235{\250'\305\313\333"
 164      E92A 41EB 
 164      26AB D2DF 
 164      31BC 6613 
 164      357B A827 
 165 0362 C4AB 97BC 	 .ascii "\304\253\227\274\r\274\362\n\254\267\201\027\277\245N\0357\324"
 165      0DBC F20A 
 165      ACB7 8117 
 165      BFA5 4E1D 
 165      37D4 
 166 0374 DCF2 71B1 	 .ascii "\334\362q\261\027\351\030\366\231j\233U\350'\357\026\270B\343"
 166      17E9 18F6 
 166      996A 9B55 
 166      E827 EF16 
 166      B842 E3
 167 0387 F6AB B0E5 	 .ascii "\366\253\260\345\007s\033\370\237\241\226\371P\360\247\033\356"
 167      0773 1BF8 
 167      9FA1 96F9 
 167      50F0 A71B 
 167      EE
 168 0398 4265 7D61 	 .ascii "Be}a\267\0166\023i\323 {\030\217\210\377z\365*\362\227\030iF"
 168      B70E 3613 
 168      69D3 207B 
 168      188F 88FF 
 168      7AF5 2AF2 
 169 03b0 B84C 4BA1 	 .ascii "\270LK\2410P\032>|l\340\243\301\375\264\027\276\004\357Hi\270"
 169      3050 1A3E 
 169      7C6C E0A3 
 169      C1FD B417 
 169      BE04 EF48 
 170 03c6 3C7C B4B0 	 .ascii "<|\264\260o\020\207\255/\276.g\3643~\365\006\251\024\300\345"
 170      6F10 87AD 
 170      2FBE 2E67 
 170      F433 7EF5 
 170      06A9 14C0 
 171               	 .text
 172               	 .section .gnu.lto_DumpRemain.part.1.5eb0d06daa7ae5d4,"",@progbits
GAS LISTING  			page 14


 173 0000 789C 8D90 	 .string "x\234\215\220=K\003A\020\206gvo\357\202\004L+XH:-\316F\374h\305\306_p\001-\2149\003J\"\022\264\262\270Mr\201 \022\202Xi\225B,M\033,\214\205\370\001Q\354\264\273\037`\227J\013\317\331[MB\020t\341\356\235\331\271g\356\235a\300`\370,\321\323E\200ER\264"
 173      3D4B 0341 
 173      1086 6776 
 173      6FEF 8204 
 173      4C2B 5848 
 174 0060 CDFA 2305 	 .string "\315\372#\005&\262H\031\032\221r\255\3271\203\361\303["
 174      26B2 4819 
 174      1A91 72AD 
 174      D731 83F1 
 174      C35B 00
 175 0073 3922 7C0B 	 .string "9\"|\013d\\ \252{@\360L\306\r\201\336*\252\256<\t\r)\217\202\233\313\332T\345!\220u\371\031z\230C20\216\220EX\241\004\023\2210ej\007\373\2264+\017\216\333\250\270Ps\223\277r0\214\265_\273MQi\312\252\fC/\002g\377\002/\230\f\302\260uUC\013\301\3053L\022\345b\203\224\216"
 175      645C 20AA 
 175      7B40 F04C 
 175      C60D 81DE 
 175      2AAA AE3C 
 176 00da 5FCA FA04 	 .ascii "_\312\372\004\250&t\034z\323\350\016\232$\334A\246$\205\034h"
 176      A826 741C 
 176      7AD3 E80E 
 176      9A24 DC41 
 176      A624 851C 
 177 00ef 2DFC 09CA 	 .ascii "-\374\t\312\301{k\315\305s\024\364\355>|\220\217D\016y\026\365"
 177      C17B 6BCD 
 177      C573 14F4 
 177      ED3E 7C90 
 177      8F44 0E79 
 178 0105 7C39 34F4 	 .ascii "|94\364?S\024\320\346x\007J\367/\264$\215l!\236\302IQ*F\364h"
 178      3F53 14D0 
 178      E678 074A 
 178      F72F B424 
 178      8D6C 219E 
 179 0120 532F 4759 	 .ascii "S/GY7\277-w\240\\\345?\f#L\025E\030\362\250VZ\326\245\377\364"
 179      37BF 2D77 
 179      A05C E53F 
 179      0C23 4C15 
 179      4518 F2A8 
 180 013a 221C E00E 	 .ascii "\"\034\340\016\374\267\342h\317C\324lpC)Ji\314g(\306\372\227"
 180      FCB7 E268 
 180      CF43 D46C 
 180      7043 294A 
 180      69CC 6728 
 181 0151 0ECD E45B 	 .ascii "\016\315\344[j\227c\266=\355\356\345\3273\205tv\267\037\331\031"
 181      6A97 63B6 
 181      3DED EEE5 
 181      D733 8574 
 181      76B7 1FD9 
 182 0166 8867 F26E 	 .ascii "\210g\362na#\237\336\334\266g\026\006\223\371\301d\356\0130x"
 182      6123 9FDE 
 182      DCB6 6716 
 182      0693 F9C1 
 182      64EE 0B30 
 183 017b 8DE1      	 .ascii "\215\341"
 184               	 .text
 185               	 .section .gnu.lto_mstrcat.5eb0d06daa7ae5d4,"",@progbits
 186 0000 789C 8554 	 .string "x\234\205TKkSQ\020\2369\347\276ro\372J\037$\251/\352>\375\001\376\220\026t\243-\005/UD\352\306MO\232(\025S\t\256|lZC\021\334\224\342\246XA+J\255\264\245\0257\205.\002Et\245u\345F\2143\347\236\233\334\324\212\007rg\356|\337\314\231\231\357\022\001\002\216\236;\364\373a\001\234&\213i@Q\335\006(z\002\355\310\221\302y#A\371\326\366\007"
 186      4B6B 5351 
 186      109E 39E7 
 186      BE72 6FFA 
GAS LISTING  			page 15


 186      4A1F 24A9 
 187 007b 95B6 A2F8 	 .string "\225\266\242\370\232g\013\251#\276\206\323\016z\034G7\262k\236'\334\312:\343\251\262KxJ\370\237\206\351-xy\212\336|\f\242\352\001\";\2000-\244e;\256\227\362\003\234\276\200\334\232\030\202\005\245\356\327\027\017v\260\254\352\252\252~7\246q\022i\212\023\b\023\b\347\351\005=m\004\266\217\025\245\252\325\252RX\234W\277\032\r\251\023O\375/qI\274\2567\032\233\313\345\217\371\223\b\343\270\200C\224\026YI\266F\326\201I\224.^CH\221'|\3620 \317J\323\303\3560\354Nfu1\241\233\261\036\223\2341\266\227\221>J\025\375\f\017pj\326\244\346\214\3153g\220a\352\314\206\262R\3253\021\022\325"
 187      9A67 0BA9 
 187      23BE 86D3 
 187      0E7A 1C47 
 187      37B2 6B9E 
 188 0140 1E86 CE08 	 .string "\036\206\316\b=\017\035\030EAFn\300L}\256\346\216\343\"\332\206\310\223\352\361\030\273Wsbl!\211\361\031E\t\244\253\334\202\231o\245\203J>\"\206\230\n\221H[P\272+\343P\020\242O"
 188      3D0F 1D18 
 188      4541 466E 
 188      C04C 7DAE 
 188      E68E E322 
 189 0180 4767 5EDC 	 .ascii "Gg^\334\272\031\207\323\217\341\021U\264\211\300\225-S\370=\274"
 189      BA19 87D3 
 189      8FE1 1155 
 189      B489 C095 
 189      2D53 F83D 
 190 0195 FD52 0C9A 	 .ascii "\375R\f\232$\206\234\344\336G\2119\277\316\027\227fK\253\225"
 190      2486 9CE4 
 190      DE47 8939 
 190      BFCE 1797 
 190      664B AB95 
 191 01a9 7331 B383 	 .ascii "s1\263\203.\326\035\242\356^$;'4N\266\201\276#\236\334\203&\250"
 191      2ED6 1DA2 
 191      EE5E 243B 
 191      2734 4EB6 
 191      81BE 239E 
 192 01c1 1BA6 319E 	 .ascii "\033\2461\236`\\\314\321Aj\345s\321"
 192      605C CCD1 
 192      416A E573 
 192      D1
 193 01ce 4EC4 DCB8 	 .string "N\304\334\270\211=@\263\r\361@Ruk\305\345\342\016o\225\321\034\345\333H\017\211{\320c\250\366\376\362\224q\245\356\305\205W\357\314\006\177V\234\370\236\256\220\324i\337`\267\336`\227\216\316&\332\314\204(\217\233\271\246\307\312\230\261\232\033\357%\372\221\312\375!\366\021\020i\323\034u\240)M\177R\032\342l\354\230>\211QTJuhVw\213E\311\246\315\357\225B\\/K#\375[\233l\254\215\007K\233\200\2616\321\020R\177\212\t\261\204\231\352j\\\274S\307\332\265\352l\323J\204\230sH\215\254\373\325\336\003\322\253\207\3372\356\376\363y\344{S,\033\027X\333\275-\216+\301$\037\036Z\221VO\347\232Z\345\377\326jPk\225\327]\256\034\273\255\301\326\266\330\263[w\004\334\310.\024\353\317\316Fy\361\031\241\317\361\320\341?\345\\\2410<~\343\312\245\261\353\027'\246Z^a\f\3602\206\177"
 193      893D 40B3 
 193      0DF1 4052 
 193      756B C5E5 
 193      E20E 6F95 
 194 02cf 20D5 2424 	 .ascii " \325$$"
 195               	 .text
 196               	 .section .gnu.lto_mstrcatp.5eb0d06daa7ae5d4,"",@progbits
 197 0000 789C 8D54 	 .string "x\234\215TIk\024Q\020\256zoz\231\236\311jLt2\211!\342A\320\270\034\274\210(\210\007\177\201A\005QG\301f\002aL.^\362&\0235\242\221\240\027\027\004c\bA\004\343E\024\025LDq\017\n\036\214x\230\213xPD\360\350\322V\275\327=K\214\350\203\351\252\256\257\266W\365M\013\0200\377\234\240_`\001l#\211I@1:\013\220w\005ZF\221\302~ Ay\261\331g"
 197      496B 1451 
 197      10AE 7A6F 
 197      7A99 9EC9 
 197      6A4C 7432 
 198 007f 2A19 33F6 	 .ascii "*\0313\366\031\327\022R[<\r'mt\331\216\216\2213\256+\234S\217"
 198      19D7 1252 
 198      5B3C 0D27 
 198      6D74 D98E 
 198      8E91 33AE 
 199 0097 198F 0F39 	 .ascii "\031\217\0179\204\307\205\367f\r\275%\356\265\323\233\207\t\223"
 199      84C7 85F7 
 199      660D BD25 
 199      EEB5 D39B 
 199      8709 93
 200 00aa 3D81 C80A 	 .ascii "=\201\310\n \f\b\031\263l\307\215{\t\034\330\215\334Z\254\023"
 200      200C 0819 
 200      B36C C78D 
 200      7B09 1CD8 
GAS LISTING  			page 16


 200      8DDC 5AAC 
 201 00bf C694 3A53 	 .ascii "\306\224:S|\364\351\025\016\251\242\032U\277\202\001\314\"\335"
 201      7CF4 E915 
 201      0EA9 A21A 
 201      55BF 8201 
 201      CC22 DD
 202 00d2 228D 7010 	 .ascii "\"\215p\020a\027\275\240\253\205\300\352k\231PuwT)\314_V?\202"
 202      6117 BDA0 
 202      AB85 C0EA 
 202      6B99 5075 
 202      7754 29CC 
 203 00ea 40EA C0F6 	 .ascii "@\352\300\366\377\013\234\376y\354\264\245n\250a\025\004\003"
 203      FF0B 9CFE 
 203      79EC B4A5 
 203      6EA8 6115 
 203      0403 
 204 00fc 5994 023A 	 .ascii "Y\224\002:\312\201\365&P,XqXM#7\032\230FW\376\253\336\224\230"
 204      CA81 F526 
 204      502C 5871 
 204      584D 2337 
 204      1A98 4657 
 205 0115 2E06 C1FB 	 .ascii ".\006\301\373\233C\357\322\313\02028\206\235\024f\244$9N\322"
 205      9B43 EFD2 
 205      CB10 3238 
 205      869D 1466 
 205      A424 394E 
 206 012a 862C C61C 	 .ascii "\206,\306\034\354E\210\223&<\3220A\232\225\244\207]\023z\327"
 206      EC45 8893 
 206      263C D230 
 206      419A 95A4 
 206      875D 137A 
 207 013f B257 1D3B 	 .ascii "\262W\035;\3243\326\020\0067\206r\021#M\024*\026\223\3464\223"
 207      D433 D610 
 207      0637 8672 
 207      1123 4D14 
 207      2A16 93E6 
 208 0155 7982 CC2D 	 .ascii "y\202\314-$'I.\341T\2510Uk(\323\034\323\306\331\250S\013\206"
 208      2427 492E 
 208      E154 A930 
 208      556B 28D3 
 208      1CD3 C6D9 
 209 016d 941A ED30 	 .ascii "\224\032\3550\210\311\t|9:;\350\371\325\206n\024$\344S\030,^"
 209      88C9 097C 
 209      393A 3BE8 
 209      F9D5 866E 
 209      1424 E453 
 210 0184 1F77 3278 	 .ascii "\037w2x\225\342\214#\337\\_\227\261\251q;\302\306*1>\335(\201"
 210      95E2 8C23 
 210      DF5C 5F97 
 210      B1A9 713B 
 210      C2C6 2A31 
 211 019c 7825 5FC2 	 .ascii "x%_\302\340\227\302\307\221\224q\3641\356#9\275\204\302I\031"
 211      E097 C2C7 
 211      9194 71F4 
 211      31EE 2339 
 211      BD84 C249 
 212 01b1 9912 3E7A 	 .ascii "\231\022>z\004\260u\360\316\321#\2219y\021.PF\233\0348\263\025"
GAS LISTING  			page 17


 212      04B0 75F0 
 212      CED1 2391 
 212      3979 112E 
 212      5046 9B1C 
 213 01c8 267E 020F 	 .ascii "&~\002\017?\346\023%'\206\334\312=tc\f.?\346\302\205\341\302"
 213      3FE6 1325 
 213      2786 DCCA 
 213      3D74 630C 
 213      2E3F E6C2 
 214 01df FD91 8D91 	 .ascii "\375\221\215\221g\r\025\326\035\242\356^TvNh\024l\001\361\230"
 214      670D 15D6 
 214      1DA2 EE5E 
 214      5476 4E68 
 214      146C 01F1 
 215 01f4 6F4E 4923 	 .ascii "oNI#P7L\327\270\202Q2[\033\251\225\017y\253\302\346DM\314\001"
 215      5037 4CD7 
 215      B882 5132 
 215      5B1B A995 
 215      0F79 ABC2 
 216 020d 86D3 10E7 	 .ascii "\206\323\020\347$e\217\335v8\271\315Se\264\225\342-\244\207\304"
 216      2465 8FDD 
 216      7638 B9CD 
 216      5365 B495 
 216      E22D A487 
 217 0222 3968 085D 	 .ascii "9h\b]\255\3177\373BU\352^\034\270\377(\234\340\367\021;\252S"
 217      ADCF 37FB 
 217      4255 EA5E 
 217      1CB8 FF28 
 217      9CE0 F711 
 218 0239 E7D3 76AA 	 .ascii "\347\323v\252'X\257'X\247\255\303\205\\i\301\023z\301\223z\301"
 218      2758 AF27 
 218      58A7 ADC3 
 218      855C 69C1 
 218      137A C193 
 219 024f C697 8E8F 	 .ascii "\306\227\216\217\215>\312\352Q\\+-\230Ps[i\254>.\"\357R=cZ\354"
 219      8D3E CAEA 
 219      515C 2B2D 
 219      9850 735B 
 219      69AC 3E2E 
 220 026a 6313 01F3 	 .ascii "c\023\001\363\034\233\t\250\3127\241\3635\003\314F6\236\332z"
 220      1C9B 09A8 
 220      CA37 A1F3 
 220      3503 CC46 
 220      369E DA7A 
 221 027e C95F 2F69 	 .ascii "\311_/i>a\355\260\371\222:\267%\313\353\347\326Z \204J\370V\203"
 221      3E61 EDB0 
 221      F992 3AB7 
 221      25CB EBE7 
 221      D65A 2084 
 222 0296 7B06 6F0E 	 .ascii "{\006o\016\311W\2521\251k\264\204\033\362\243\211,\211l\333\215"
 222      C957 AA31 
 222      A96B B484 
 222      1BF2 A389 
 222      2C89 6CDB 
 223 02ab 85B8 9457 	 .ascii "\205\270\224WJ\325h>\325\227\371D\236\341\324\276\215\254\216"
 223      4AD5 683E 
 223      D597 F944 
GAS LISTING  			page 18


 223      9EE1 D4BE 
 223      8DAC 8E
 224 02be 8253 34E1 	 .ascii "\202S4\341\277S%\025Q\305\205\251\027\200\021U\314\360\244\376"
 224      BF53 2515 
 224      51C5 85A9 
 224      1780 1155 
 224      CCF0 A4FE 
 225 02d2 6754 7047 	 .ascii "gTpG\314\357\254V\333\252\251S[E\035\341c\253M\344H9o\2559 \372"
 225      CCEF AC56 
 225      DBAA A953 
 225      5B45 1DE1 
 225      63AB 4DE4 
 226 02ed 34F0 5BA3 	 .ascii "4\360[\243\363\371V/\227\2153\2118~\346\354q\261P\006v\362\340"
 226      F3F9 562F 
 226      978D 3389 
 226      387E E6EC 
 226      71B1 5006 
 227 0304 7CCC 30E7 	 .ascii "|\3140\347\332\351\022s\322\1772\247M3'\255\233\274\375\312^"
 227      DAE9 1273 
 227      D27F 32A7 
 227      4D33 27AD 
 227      9BBC FDCA 
 228 0319 6058 6DE5 	 .ascii "`Xm\345a\261f\227k$\270\221\327\220/>_^\"\027\230\257\b\022\304"
 228      61B1 6697 
 228      6B24 B891 
 228      D790 2F3E 
 228      5F5E 2217 
 229 0332 FB5B DAD5 	 .ascii "\373[\332\325\265&\323\337\263o\177n\357\301\276\262\326\265"
 229      B526 D3DF 
 229      B36F 7F6E 
 229      EFC1 BEB2 
 229      D6B5 
 230 0344 1FF0 10FA 	 .ascii "\037\360\020\372\356\236={3\231\334\272\r\244\344\016\034\356"
 230      EE9E 3D7B 
 230      3399 DCBA 
 230      0DA4 E40E 
 230      1CEE 
 231 0356 CFF6 25B3 	 .ascii "\317\366%\263\275=\035+\326\256\352\330\351\305An\312\2018\002"
 231      BD3D 1D2B 
 231      D6AE EAD8 
 231      E9C5 416E 
 231      CA81 3802 
 232 036a BF01 B695 	 .ascii "\277\001\266\225_\025"
 232      5F15 
 233               	 .text
 234               	 .section .gnu.lto_dcrbyte.5eb0d06daa7ae5d4,"",@progbits
 235 0000 789C 8D51 	 .string "x\234\215Q\261J\003A\020\235\331\333\325\213Z\244\025\302!\251\254.\242\240\337\340\027\030\320&\336\0310\\D\202V\026\331\230\210)$\004K\255\202\244\023L\235 \244TA\203\215`#i\354\254\243\330\2343w^\022\202\205\013{o\330\2317\357\315\234"
 235      B14A 0341 
 235      109D D9DB 
 235      D58B 5AA4 
 235      15C2 21A9 
 236 0051 0193 6799 	 .string "\001\223g\231n\017\001V\bQ\001\212\372\023@\311\024\302h[\240g\344K\n\364\234\2012|\226\210\034"
 236      6E0F 0156 
 236      0851 018A 
 236      FA13 40C9 
 236      14C2 685B 
 237 0073 4251 1812 	 .string "BQ\030\022\213[\310=D\022\032Z\237\367\337\007-u\322\322U\355\373E\017I,\201\220E\330D\0171\036\200\2300\020\022\273\235\323\232j\216\023\027\377$\356\343\210y#\272}\337\277\356T\036\254\030\202\207\206\004\027\033\230\004ExEh\362#\025*\250h]_"
GAS LISTING  			page 19


 237      8B5B C83D 
 237      4412 1A5A 
 237      9FF7 DF07 
 237      2D75 D2D2 
 238 00c8 6E48 6783 	 .ascii "nHg\203\276<B\032\005\243\361\b\307\367_\203%\027\2334}\016\345"
 238      BE3C 421A 
 238      05A3 F108 
 238      C7F7 5F83 
 238      2517 9B34 
 239 00df 255C 94B4 	 .ascii "%\\\224\264\216{(\217\340\233\034Q\244B]\266\241~\325\357\240"
 239      8E7B 288F 
 239      E09B 1C51 
 239      A442 5DB6 
 239      A17E D5EF 
 240 00f4 F251 8A0D 	 .ascii "\362Q\212\rI\234\222\343s\245I\272mQ\363r\265\374YKD\205*\252"
 240      499C 92E3 
 240      73A5 49BA 
 240      6D51 F372 
 240      B5FC 594B 
 241 010c F57D B646 	 .ascii "\365}\266F\332\353a\352?\2529\306\036\224\373oN\324\317\034V"
 241      DAEB 61EA 
 241      3FAA 39C6 
 241      1E94 FB6F 
 241      4ED4 CF1C 
 242 0121 4F65 315C 	 .ascii "Oe1\\\216\207\323\221\005\031\f\370L\277\215\311A\372\025\220"
 242      8E87 D391 
 242      0519 0CF8 
 242      4CBF 8DC9 
 242      41FA 1590 
 243 0135 5846 D095 	 .ascii "XF\320\225\034\210\263[\223W\202\\\311\033\236\267\355\224{\230"
 243      1C88 B35B 
 243      9357 825C 
 243      C91B 9EB7 
 243      ED94 7B98 
 244 0149 DF76 0A99 	 .ascii "\337v\n\231\354\301(\262\035\230u\362na'\237\331\335\263W\307"
 244      ECC1 28B2 
 244      1D98 75F2 
 244      6E61 279F 
 244      D9DD B357 
 245 015e E2B5 1F10 	 .ascii "\342\265\037\020\264\201 "
 245      B481 20
 246               	 .text
 247               	 .section .gnu.lto_StartSend.5eb0d06daa7ae5d4,"",@progbits
 248 0000 789C 6362 	 .string "x\234cb`b@\007\222@<\001\210\245\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\273w|\301OF\240Z\006\006V\206\226\206\206\t\n\f\fi`\005\341@\022\244+\202\221\tD3\237eh\3321\343\337\r\306\024\306\205\214\254\f\263\031f564\b\34402T3\374j\350"
 248      6062 4007 
 248      9240 3C01 
 248      88A5 8198 
 248      9199 8191 
 249 0071 B118 0BC0 	 .string "\261\030\013\300\372\242\031\201L\006\030\013\314\270\310\320\370\340\2472D#\f\204\003\025\001\215\005\371AROO?\24547)\271(1\255\004\301\322Kf"
 249      FAA2 1981 
 249      4C06 180B 
 249      CCB8 C8D0 
 249      F8E0 A732 
 250 00a2 00        	 .string ""
 251 00a3 3365 30E5 	 .ascii "3e0\345"
 252               	 .text
 253               	 .section .gnu.lto_DoneSend.5eb0d06daa7ae5d4,"",@progbits
GAS LISTING  			page 20


 254 0000 789C 8D54 	 .ascii "x\234\215T\317k\023A\024~o\366g6\322\006R\017E\017R\020A4B\275"
 254      CF6B 1341 
 254      147E 6FF6 
 254      6736 D206 
 254      520F 450F 
 255 001a D883 7F47 	 .ascii "\330\203\177G\013\026D\233\006Z\242\024\253\027=d\322]0H\305"
 255      0B16 449B 
 255      065A A214 
 255      AB17 3D64 
 255      D25D 3048 
 256 002f 5872 F0C7 	 .ascii "Xr\360\307\251\0261'\025<y2\212\242\201j)^\332[.\275\366\322"
 256      A916 3127 
 256      153C 7932 
 256      8AA2 816A 
 256      295E DA5B 
 257 0047 5315 5CBF 	 .ascii "S\025\\\277\331\331\331\266\036L\006\272o\336\233\367\275\357"
 257      D9D9 D9B6 
 257      1E4C 06BA 
 257      6FDE 9BF7 
 257      BDEF 
 258 0059 7D6F 2615 	 .ascii "}o&\025$\350\337u\025\177\3436\321EX\016\210E\363\007Q\335\027"
 258      24E8 DF75 
 258      157F E336 
 258      D145 580E 
 258      8845 F307 
 259 0070 C25A 3E4E 	 .ascii "\302Z>N2\260\243\t\222\307,\366t\330\343\234\332\260m\002\256"
 259      32B0 A309 
 259      92C7 2CF6 
 259      74D8 E39C 
 259      DAB0 6D02 
 260 0085 0E7C F473 	 .ascii "\016|\364s\302]\376J@\370\221\007\204\317\254\342\304T\023\226"
 260      C25D FE4A 
 260      40F8 9107 
 260      84CF ACE2 
 260      C454 1396 
 261 0099 67BB 399F 	 .ascii "g\2739\237k\323\254\b\2551Z\225r\245\367\345\305>G\017z\262)"
 261      6BD3 AC08 
 261      AD31 5A95 
 261      72A5 F7E5 
 261      C53E 470F 
 262 00b0 FFC4 35AE 	 .ascii "\377\3045\2562z;\311Ta\272\002\207\375\304\b>\332l\002m\312F"
 262      327A 3BC9 
 262      5461 BA02 
 262      87FD C408 
 262      3EDA 6C02 
 263 00c7 ABC3 0A16 	 .ascii "\253\303\n\026#\305\022tf \330J\347\367\375\207\266|+\0332\216"
 263      23C5 1274 
 263      6620 D84A 
 263      E7F7 FD87 
 263      B67C 2B1B 
 264 00dd 6B55 B605 	 .ascii "kU\266\005\215\367\003\276\021\235^\034\257\177\210>\235\035"
 264      8DF7 03BE 
 264      119D 5E1C 
 264      AF7F 883E 
 264      9D1D 
 265 00ef 612A F34B 	 .ascii "a*\363K\036C\233\332:\260\253\260.\354\032\254Gh\306\307\207"
 265      1E43 9BDA 
GAS LISTING  			page 21


 265      3AB0 ABB0 
 265      2EEC 1AAC 
 265      4768 C6C7 
 266 0104 82F4 24AF 	 .ascii "\202\364$\257\234\241\324\031\206\343\024T\244\230\026\300r("
 266      9CA1 D419 
 266      86E3 1454 
 266      A498 16C0 
 266      7228 
 267 0116 829E 53C6 	 .ascii "\202\236S\306\257$\364\223\370b\206S,`\254\357\264\324\335\302"
 267      AF24 F493 
 267      F862 8653 
 267      2C60 ACEF 
 267      B4D4 DDC2 
 268 012a A8CA FC8A 	 .ascii "\250\312\374\212\035\232g\3479=\253KY\200\200{\364\013b\260s"
 268      1D9A 67E7 
 268      393D AB4B 
 268      5980 807B 
 268      F40B 62B0 
 269 013f 1712 A052 	 .ascii "\027\022\240R\340\246\235\003\266k\031\214\013\030\3217\372\274"
 269      E0A6 9D03 
 269      B66B 198C 
 269      0B18 D137 
 269      FABC 
 270 0151 53CF 6531 	 .ascii "S\317e1\225m\035\026;\005w\217A\030\276\017\337\265N\230D\017"
 270      956D 1D16 
 270      3B05 778F 
 270      4118 BE0F 
 270      DFB5 4E98 
 271 0167 B9A3 F444 	 .ascii "\271\243\364D\266\245\334\2141\362X\257G\236\206\037!\362\221"
 271      B6A5 DC8C 
 271      31F2 58AF 
 271      479E 861F 
 271      21F2 91
 272 017a 4EB4 41B6 	 .ascii "N\264A\266\016\020e-z\025\326\263ER\025\323V\270n{-\223\025\f"
 272      0E10 652D 
 272      7A15 D6B3 
 272      4552 15D3 
 272      56B8 6E7B 
 273 0192 2A2B 7C9D 	 .ascii "*+|\235\261\345\001S\207\0168\373\221\346\023R-\323Ss%\332&\241"
 273      B1E5 0153 
 273      870E 38FB 
 273      91E6 1352 
 273      2DD3 5373 
 274 01aa D078 FBF6 	 .ascii "\320x\373\366\372\317r\272\265\222\f\233\036;\326\006E\275\247"
 274      FACF 72BA 
 274      B592 0C9B 
 274      1E3B D606 
 274      45BD A7
 275 01bd 3BEE FFAA 	 .ascii ";\356\377\252:\207\252\272\204\367\257\256k7\334\0371-\016\317"
 275      3A87 AABA 
 275      84F7 AFAE 
 275      6B37 DC1F 
 275      312D 0ECF 
 276 01d1 AB5C 04A7 	 .ascii "\253\\\004\247M\244p\236\316\201)\223\233\313\352\006\013I]\325"
 276      4DA4 709E 
 276      CE81 2993 
 276      9BCB EA06 
GAS LISTING  			page 22


 276      0B49 5DD5 
 277 01e5 4890 D61F 	 .ascii "H\220\326\037\316.\247\217\274B:\323\260\021\356\265.\033\256"
 277      CE2E A78F 
 277      BC42 3AD3 
 277      B011 EEB5 
 277      2E1B AE
 278 01f8 22D8 135D 	 .ascii "\"\330\023]*\255KB\307\365k\303\251\351<G\370\251r\227\226P\302"
 278      2AAD 4B42 
 278      C7F5 6BC3 
 278      A9E9 3C47 
 278      F8A9 7297 
 279 020f 1CEA AEBB 	 .ascii "\034\352\256\273\315\300\324\032\032\354\202\222G\346\030\020"
 279      CDC0 D41A 
 279      1AEC 8292 
 279      47E6 1810 
 280 021f 0367 146C 	 .ascii "\003g\024l\023<\341\341St\267<\305\353\253{\330\244z\257}\332"
 280      133C E1E1 
 280      5374 B73C 
 280      C5EB AB7B 
 280      D8A4 7AAF 
 281 0235 68D3 6B12 	 .ascii "h\323k\022\364\221\247\376W\215\226J\027\312wn\\\237\271u\255"
 281      F491 A7FE 
 281      578D 964A 
 281      17CA 776E 
 281      5C9F B975 
 282 024a 72FB 6057 	 .ascii "r\373`W\232\241`q\366fyq\356\356l\351\322\301v\202\347\376\002"
 282      9AA1 6071 
 282      F666 7971 
 282      EEEE 6CE9 
 282      D2C1 7682 
 283 0261 3194 064B 	 .ascii "1\224\006K"
 284               	 .text
 285               	 .section .gnu.lto_SendRawPGMData.5eb0d06daa7ae5d4,"",@progbits
 286 0000 789C 8D52 	 .string "x\234\215RAk\023A\024\376\276\231\335\354\032{\350U\324\022\n\305\203\022\353E\274\004,\376\b\213\n\245v\r\270l\241\304\366\242\207L\232\024\002\025\t\205B/\036\212\004\005\021\275\211 4\202\240-\264\342\301CO\346\342\325\037\340\301\365\315Nv\243=9\260\373f\336\367\276\367\336|o\024\024N\256\232|{\342\276!\226%P\365\216\200V\250\350\271\215v\233\017\241\247\364\343O\200)\373\235"
 286      416B 1341 
 286      14FE BE99 
 286      DDEC 1A7B 
 286      E855 D412 
 287 007e 66C2 27AD 	 .string "f\302'\255\037DSi\317g\363\016m:=\215]c\266\206\033/\217\271a\206\246g~\247M&\224\312\347\210:q[\016\234\314\214:\321\215\243\016\276\037<\361\315\033\3235i\332\314\210S\377G\024\306\200\266^*!Z\341\302\230\026:\032\377\245\275V\203a\232\276\377\3269\270x\232\210\270\313ix\\!|\371\211\026\t\275@\334\317\304\035\212\355\213-\217\302d\371\350\030\323\253\344\347z\226\374\246\374E\236y*1z\037\353\303W\375R\304\347\364GD\333G\321\300<5DS}\210\366f{o\373|\221\322\226t\005\001\307\226\025\263\024\323\217)\374C\254\377\324\021_\b\0203\020"
 287      1F44 5369 
 287      CF67 F30E 
 287      6D3A 3D8D 
 287      5D63 B686 
 288 0139 D887 720E 	 .string "\330\207r\016\307\0267p\224\373,gV\333\351k\367\004\246P{jv\256'y\346\020#\250\300\347\034^rx\220\365\373W\215~VCh_\320\031\234\315{|\204_2\205\311\204A\235\356\232\022\223\3300\271b\267\375v\373\232\213\214Y\226{dZ0\317;\326H\320\\\037\017\362\310\254\216!\nP\030\237\361\361G\313\317s1\226\270\321:\006G\022\253\035-\211t7\260y|;\216\257h\r\337\315\024z\302\r\214\002\331;\237\251V/Gk\313w\227\032\213\365\325\361\256\272\004\336\017\027\026\026\243\250q\345\252l\032\367\036\254%\253\023\311\312ref\366R\345V\371\024t\255\001\365\020\177"
 288      C716 3770 
 288      94FB 2C67 
 288      56DB E96B 
 288      F704 A650 
 289 01f6 A227 A549 	 .ascii "\242'\245I"
 290               	 .text
 291               	 .section .gnu.lto_Sbyte.5eb0d06daa7ae5d4,"",@progbits
 292 0000 789C 8D50 	 .string "x\234\215P?K\303P\020\277{yI[\025t\025D\244 8hJ\355\350'pr\222\026t\321\246\005K\225bu\321!/6Cq*\202\213\342P\244\213\b\365\0038\024A\250\212\202P\320\301!\223\243\270\252`\274\227\244\261\212\203\007/w\271\273\337\237\367\0300\370\035\323t>\020 E\031U@V\273\003\260\242\214)\235\004\210>~>\nb@A\356\2679\242,"
 292      3F4B C350 
 292      10BF 7B79 
 292      495B 1574 
 292      1544 A420 
 293 0077 C164 0A47 	 .ascii "\301d\nGs\021%\007\213C]\210=\347\262\371\206\366\256#j\342\323"
GAS LISTING  			page 23


 293      7311 2507 
 293      8B43 5D88 
 293      3DE7 B2F9 
 293      86F6 AE23 
 294 008e 35B1 8824 	 .ascii "5\261\210$7\202\220GX\240\037\214z\211\341O}\037\332r\257\217"
 294      3782 9047 
 294      58A0 1F8C 
 294      7A89 E14F 
 294      7D1F DA72 
 295 00a4 78E3 4C54 	 .ascii "x\343LT\205\353\232\036p\342O`\251\007\335d-\307u\237\036\354"
 295      85EB 9A1E 
 295      70E2 4F60 
 295      A907 DD64 
 295      2DC7 759F 
 296 00ba 8BC9 9802 	 .ascii "\213\311\230\002\006\3261\016\234\3621e\r\212\250D\260\204r_"
 296      06D6 310E 
 296      9CF2 3165 
 296      0D8A A844 
 296      B084 725F 
 297 00ce 055B 88DA 	 .ascii "\005[\210\332\030HB\2124}\345%2\310dVna\347\352\221\234\033\330"
 297      1848 428A 
 297      347D E525 
 297      32C8 6456 
 297      6E61 E7EA 
 298 00e6 A007 28A0 	 .ascii "\240\007(\240r\b\007\226\020CE\344\333\360N\226\250R}a\351C\r"
 298      7208 0796 
 298      1043 45E4 
 298      DBF0 4E96 
 298      A852 7D61 
 299 00fd E4DB 603F 	 .ascii "\344\333`?[\261\020$G|\256\347b\031T\240\223 \366J\265\342\356"
 299      5BB1 1024 
 299      477C AEE7 
 299      6219 54A0 
 299      9320 F64A 
 300 0114 CF74 1779 	 .ascii "\317t\027ywW\022\222\364\254?\370\217&\201=\310K\345$4\253\021"
 300      7757 1292 
 300      F4AC 3FF8 
 300      8F26 813D 
 300      C84B E524 
 301 012b 9DD7 BC79 	 .ascii "\235\327\274y\035\364{Sp*(\346\211*$\325B\322H\tY@\032\tH\265"
 301      1DF4 7B53 
 301      702A 28E6 
 301      892A 24D5 
 301      42D2 4809 
 302 0145 C070 21E8 	 .ascii "\300p!\350\220s\356=\314=XN{\334g\355F\232^\224f\222cX\327\023"
 302      9073 EE3D 
 302      CC3D 584E 
 302      7BDC 67ED 
 302      469A 5E94 
 303 015f C6E6 EA72 	 .ascii "\306\346\352rv})\277\361]\351Y\350/\347\326\214\362\312VNO&{"
 303      767D 29BF 
 303      F15D E959 
 303      E82F E7D6 
 303      8CF2 CA56 
 304 0177 EAD4 17F8 	 .ascii "\352\324\027\370\210\2152"
 304      888D 32
 305               	 .text
GAS LISTING  			page 24


 306               	 .section .gnu.lto_Svarint.part.0.5eb0d06daa7ae5d4,"",@progbits
 307 0000 789C 8590 	 .string "x\234\205\220\261J\003A\020\206\377\177g\027\265\263T\264\260\025\341|\234\013hc\022\2568V\020\321\312\"\033\317\3022\257`q\255\026\026\222\207\210\342\003\004R\244\363\rl\342\314\036\207`\343\300\316?\2733\377\267\313:8\374\215\023[\004\016T\031@?{\327\302\323eu\024\323\351\266\220V\200\230x'\234\2343\273_\\Zm6\313u\313\035\362\212\312\217\204X\362\232\224\027\363\\\300CJ\263#\240\312\333R\263\321JzS\031\320e]\340\376\253ym\367\306|RkMWS'\027h\346\322\037\211\236\2361\322%#}\300w\r\340\016\337\3511\355FJ\305\356m:\034\365\002\363?7o\355a\217\360J5D\330\2025\365\312a\337\n\265\031\376\241\206L\265\030P\362\273?1]\315\217{O\027\245\316k\317>|\277(N\307\267\227\303\321\365Eu\363[\025#\374"
 307      B14A 0341 
 307      1086 FF7F 
 307      6717 B5B3 
 307      54B4 B015 
 308 00f6 7541 4D43 	 .ascii "uAMC"
 309               	 .text
 310               	 .section .gnu.lto_Rbuffer.5eb0d06daa7ae5d4,"",@progbits
 311 0000 789C 5D52 	 .string "x\234]R=K\003A\020}o\3676\0275\205\225 (\210`i,\254,\374\035\n\332hB\300\020AD+\213l\222+\002Z\004\013\021\255D\254\025\374\001FP4E\f)\375"
 311      3D4B 0341 
 311      107D 6FF7 
 311      3617 3585 
 311      9520 2888 
 312 003b AFB1 F507 	 .string "\257\261\365\007X\030g\357r~\r\334\316\354\316\2337ovOA\341\277\315\313\367J`\\<S\240j<"
 312      5818 67EF 
 312      727E 0DDC 
 312      CEEC CE9B 
 312      376F 764F 
 313 005e 95B4 A217 	 .string "\225\264\242\027\007:\016\256\323\236\322{w\200\0354\201\017\2331\244;\007QV\3323,/\323\321q\022'\326\356\207\267\227]\0066\264\r\373\331+\263D\351<F\024\210%\3310\0359\305\277R\316U3\354\365^\036\203\247\351\f\221\347\211\220y\334 \f\004\234\222\210\276Dz@\026o\250\017\0203\b\254mL$\373BD\273 \253\b]\244\022\247[\250\206\235\263T\236\2474\375B\247\340\273\365\"5d:\335F\365\275\3666\022\343\2124E\n\246\215\332\256N\216\374\"S\222"
 313      073A 0EAE 
 313      D39E D27B 
 313      7780 1D34 
 313      810F 9B31 
 314 00f7 3AA8 35B3 	 .ascii ":\2505\263\311\351\300\016>l\335\016\227h\n\214iKr\233RZm]\370"
 314      C9E9 C00E 
 314      3E6C DD0E 
 314      9768 0A8C 
 314      694B 729B 
 315 0110 31EA 1847 	 .ascii "1\352\030G\025k\355\254\264\025\032\327^G@\251\216z\324kW\007"
 315      156B EDAC 
 315      B415 1AD7 
 315      5E47 40A9 
 315      8E7A D46B 
 316 0126 7309 E190 	 .ascii "s\t\341\220t\216\024:\262\026\324o\345\222MT{\220Gp\323\245\361"
 316      748E 143A 
 316      B216 D46F 
 316      E592 4D54 
 316      7B90 4770 
 317 013d 9D94 8A7B 	 .ascii "\235\224\212{\334\274UL\302\305\242\340\372\366\b\366\007W\207"
 317      DCBC 554C 
 317      C2C5 A2E0 
 317      FAF6 08F6 
 317      0757 87
 318 0150 5A88 F4A1 	 .ascii "Z\210\364\241\357x\214\273\244.*\341\363T\\\225\330\202\320\005"
 318      EF78 8CBB 
 318      A42E 2AE1 
 318      F354 5C95 
 318      D882 D005 
 319 0164 BEFB 6D46 	 .ascii "\276\373mF\263\331\231\374\366\372jns\245\260\365\023es\340\332"
 319      B3D9 99FC 
 319      F6FA 6A6E 
 319      73A5 B0F5 
 319      1365 73E0 
 320 0179 1791 0577 	 .ascii "\027\221\005w\b"
 320      08
 321               	 .text
GAS LISTING  			page 25


 322               	 .section .gnu.lto_Rdump.5eb0d06daa7ae5d4,"",@progbits
 323 0000 789C 5D50 	 .string "x\234]P\261J\304@\020}o6k\202\034j+66\266\361\013\374\216\034h\243w\\\021\"\210h%x\211Iq\205\305}\202\376\200\376\200\205Vz\210\212\245\325\245\021\256\360\003\304&\316f=\016\034\330\231\267;\357\315\033V \370\037;z:\0046\264r\t\224\361+PD\302\300\003\343\301C\024\210\271|\004\362e[\205\310;\226t\357 \206b\002\313\341\036\333y\267r_7\315\315\335\363\325\214\022\022G\204\241&\353\220\206E\225\347\343M`\320^\023\315:/\241h1]\032\250\211yCYO?W\372\274\246U\322\031~\362Q\276\226QE\336%\373\253\3502\200\356a&\270\210\340,R\327yA9*\317\275<\245\325\267]f\224\2461*\231@|\247e\353\374'T_\305\352\234\355\251\213\017\372"
 323      B14A C440 
 323      107D 6F36 
 323      6B82 1C6A 
 323      2B36 36B6 
 324 00e2 531A D164 	 .ascii "S\032\321d\315\267q\216\326\255\372\216\242\236m\3157\364\221"
 324      CDB7 718E 
 324      D6AD FA8E 
 324      A29E 6DCD 
 324      37F4 91
 325 00f5 A877 153A 	 .ascii "\250w\025:\355z\034o\367O\017\017z\307\373\203\223\005\212{\370"
 325      ED7A 1C6F 
 325      F74F 0F0F 
 325      7AC7 FB83 
 325      9305 8A7B 
 326 010a 05F3 7C4A 	 .ascii "\005\363|J\""
 326      22
 327               	 .text
 328               	 .section .gnu.lto_Rint.5eb0d06daa7ae5d4,"",@progbits
 329 0000 789C 8D93 	 .string "x\234\215\223MK\002Q\024\206\317\271\343\3701\3701\250AF\220\364\003\364W\364\033\fjS\332,\3046b\253\026^\035\243\226\322?\220h\023D\353h\3436\350\203\226\005\301l\\j\333r\221\235s\2573\242\21040\347\336\373\236\367\336\367\031\270#@\300\342\223\243wH\362\026\215h"
 329      4D4B 0251 
 329      1486 CFB9 
 329      E3F8 31F8 
 329      31A8 4146 
 330 005c 8AEE 0B40 	 .string "\212\356\013@+*\020y\002\bM\201\315}d+nCO\312K\357\372\341\035\317\245'\273\362w\322\304\032\322\251\233\b\016\302\036-0\257\006\021\232\217\271\023}o2y\372\354|\024\327\f\250\241\021\242\0222\271Dx\031\345Y\214\213\005\025\354QT\234\345\004\0253\311%\305={\332Ks/\303Jv\252\320cBG\312n\336_;\212\271D\225?d\027\005\217\306#\264\275\341 \\\301+4\247[\031W1\276\202\353\215\006I\335\253\242q\ncy!\355\032\206\035\324\216\032F"
 330      2B2A 1079 
 330      0208 4D81 
 330      CD7D 642B 
 330      6E43 4FCA 
 331 00f5 9EA1 3D72 	 .ascii "\236\241=r\253\276+DF\326\334[w\214\276h\222\316\307\232\353"
 331      ABBE 2B44 
 331      46D6 DC5B 
 331      778C BE68 
 331      92CE C79A 
 332 010a B489 22FB 	 .ascii "\264\211\"\373s\201\324\327a_\263\260\310\277\302\242U\255\315"
 332      7381 D4D7 
 332      615F B3B0 
 332      C8BF C2A2 
 332      55AD CD
 333 011d 85C5 4857 	 .ascii "\205\305HWa6\250\336\275\273\341\267,\205\022c\0061O`i\202\357"
 333      6136 A8DE 
 333      BDBB E1B7 
 333      2C85 1263 
 333      0631 4F60 
 334 0134 33CB F7C6 	 .ascii "3\313\367\306W\021\334\004i\trj\004\303\227\222\244*\200(L\355"
 334      5711 DC04 
 334      6909 726A 
 334      04C3 9792 
 334      A42A 8028 
 335 014a 0140 8ABA 	 .ascii "\001@\212\272\032*p\333\n+\265\204\311\326L?3\246\364*\246 $"
 335      1A2A 70DB 
 335      0A2B B584 
 335      C9D6 4C3F 
 335      33A6 F42A 
 336 0161 43C6 8590 	 .ascii "C\306\205\220\254\312\311,\t\311\002\274A\313\033\357\004V}A"
 336      ACCA C92C 
GAS LISTING  			page 26


 336      09C9 02BC 
 336      41CB 1BEF 
 336      0456 7D41 
 337 0175 4B74 3E5D 	 .ascii "Kt>]\020\376Ar\205B\261rr|X\256\0378\215\331\254P\006\243~\324"
 337      10FE 4172 
 337      8542 B172 
 337      727C 58AE 
 337      1F38 8DD9 
 338 018f F803 11F6 	 .ascii "\370\003\021\366\263="
 338      B33D 
 339               	 .text
 340               	 .section .gnu.lto_Rshort.5eb0d06daa7ae5d4,"",@progbits
 341 0000 789C 7D91 	 .string "x\234}\221=N\303@\020\205\337\333\265\215c\232\264AH \016`Zn\300\021\202\004\r$\270@\246\211BE\221\315\017\"PE\334 \242CB\324\320@\233\002\020%4\270I\2078"
 341      3D4E C340 
 341      1085 DFDB 
 341      B58D 639A 
 341      B441 4820 
 342 003c 0566 D68E 	 .string "\005f\326\216\023\024!V\332\231\331\231\267\363\215v\025\024\346WE\366\035\201\025\361\324\240\032<\001m_\2216"
 342      1314 2156 
 342      DA99 D999 
 342      B7F3 8D76 
 342      1514 E657 
 343 0060 D152 6CED 	 .ascii "\321Rl\355\320J\271\206\2411\027\311\370\376\225'&1\003\363\235"
 343      D04A B986 
 343      A131 17C9 
 343      F8FE 9527 
 343      2631 03F3 
 344 0075 B618 53BA 	 .ascii "\266\030S\272.\023\021\261-\007\2263\247\346H7\352!I\323\217"
 344      2E13 11B1 
 344      2D07 9633 
 344      A7E6 4837 
 344      EA21 49D3 
 345 008a F7DE DBC6 	 .ascii "\367\336\333\306\242FL\355\210q\\k<1\256os%\033\005\250s((Y."
 345      A246 4CED 
 345      8871 5C6B 
 345      3C31 AE6F 
 345      7325 1B05 
 346 00a4 7AC6 0C56 	 .ascii "z\306\fV\213s\224MQ\025kG\333\242\262^\217\320I\322\261W\347"
 346      8B73 944D 
 346      5115 6B47 
 346      DBA2 B25E 
 346      8FD0 49D2 
 347 00bb 25DD C955 	 .ascii "%\335\311U;@F}F7\351\237\006y\355\200\372\030_\246o\3121\275"
 347      3B40 467D 
 347      4637 E99F 
 347      0679 ED80 
 347      FA18 5FA6 
 348 00d3 88B9 22E6 	 .ascii "\210\271\"\346\002\360\210\316g\367\212\205\314\021\245Mv\257"
 348      02F0 88CE 
 348      67F7 8A85 
 348      CC11 A54D 
 348      76AF 
 349 00e5 7591 7225 	 .ascii "u\221r%k\273:>&\362\245\242\344I\025\030A\375\236@\3229\375l"
 349      6BBB 3A3E 
 349      26F2 A5A2 
 349      E449 1518 
 349      41FD 9E40 
GAS LISTING  			page 27


 350 00fd 46F7 FFA3 	 .ascii "F\367\377\243O\333\225D\230\301o\247\360 \203\224\376\200\004"
 350      4FDB 9544 
 350      98C1 6FA7 
 350      F020 8394 
 350      FE80 04
 351 0110 C00B DAC9 	 .ascii "\300\013\332\311\371\346T\232\277vU\372\313\333\330?\250\204"
 351      F9E6 549A 
 351      BF76 55FA 
 351      CBDB D83F 
 351      A884 
 352 0122 E17A FDE8 	 .ascii "\341z\375\350p\257\326\330\215\232\263(\254A7\366\233?J.o\251"
 352      70AF D6D8 
 352      8D9A B328 
 352      AC41 37F6 
 352      9B3F 4A2E 
 353               	 .text
 354               	 .section .gnu.lto_Rposition.5eb0d06daa7ae5d4,"",@progbits
 355 0000 789C 8D52 	 .string "x\234\215R=O\002A\020\235\331\363\016\"\020H"
 355      3D4F 0241 
 355      109D D9F3 
 355      0E22 1048 
 355      00
 356 0011 13F0 23C6 	 .string "\023\360#\306\306\016{\377\201\277@\023l\024BA\320\030\242\225\005\313\207\211\235\304J\361\223X\250\205h\253\225\215!\230\250\361\037\\\245\215\211\261\265\020gn9\020\344\242\2330\273\334{\373\336\233\311\n\020\320\273\"\364;\322"
 356      C60E 7BFF 
 356      81BF 4013 
 356      6C14 4241 
 356      D018 A295 
 357 0059 C668 470D 	 .ascii "\306hG\rP\224\037\001\362n\201\310\007@\310\t\314\315#Sq\002"
 357      5094 1F01 
 357      F26E 81C8 
 357      0740 C809 
 357      CCCD 2353 
 358 006f AA52 6E9B 	 .ascii "\252Rn\233w/\317X\222\246,\313\257f\0163H\252#\b)\2048\375A\267"
 358      772F CF58 
 358      92A6 2CCB 
 358      AF66 0E33 
 358      48AA 2308 
 359 0089 B509 ECB6 	 .ascii "\265\t\354\266\271\024\267f\263\371\366Q\272\237\036\325!\203"
 359      B914 B766 
 359      B3F9 F651 
 359      BA9F 1ED5 
 359      2183 
 360 009b 9AC1 C585 	 .ascii "\232\301\305\205+\b\203\220\304*i{\370\213\227\213\217\213\237"
 360      2B08 8390 
 360      C42A 697B 
 360      F88B 978B 
 360      8F8B 9F
 361 00ae 4B80 0818 	 .ascii "K\200\b\030\344S\210K\230K\224\3130\001\334\214\016%)\313\343"
 361      E453 884B 
 361      984B 94CB 
 361      3001 DC8C 
 361      0E25 29CB 
 362 00c3 4A01 3804 	 .ascii "J\0018\004\255Y\252\234~\216(\264kOP4\267N\215$\236\240N\360"
 362      AD59 AA9C 
 362      7E8E 28B4 
 362      6B4F 5034 
 362      B74E 8D24 
GAS LISTING  			page 28


 363 00db 3A7C CA4D 	 .ascii ":|\312M\031\310\340@\nU\314\f\177'\326\361\216\353o\222\271["
 363      19C8 E040 
 363      0A55 CC0C 
 363      7F27 D6F1 
 363      8EEB 6F92 
 364 00f1 6FB1 D2A8 	 .ascii "o\261\322\250;\320\036\240xQ\034\262Y\006\021\343jP\f\025f\024"
 364      3BD0 1EA0 
 364      7851 1CB2 
 364      5906 11E3 
 364      6A50 0C15 
 365 0107 B007 95BC 	 .ascii "\260\007\225\274\224R' \215.&\030\226B\232w6\252\324\r[b\320"
 365      9452 2720 
 365      8D2E 2618 
 365      9642 9A77 
 365      36AA D40D 
 366 011e C1A8 0142 	 .ascii "\301\250\001BQ\324\004\210h9\334l\274\357\353\366]\017\031a\257"
 366      51D4 0488 
 366      6839 DC6C 
 366      BCEF EBF6 
 366      5D0F 1961 
 367 0133 8995 B1A6 	 .ascii "\211\225\261\246\331\034/\335d\320e(\344\272\215\370H\200\360"
 367      D91C 2FDD 
 367      64D0 6528 
 367      E4BA 8DF8 
 367      4880 F0
 368 0146 9EE0 BFF4 	 .ascii "\236\340\277\364\210\330j\373c\304\276\352o\211\202\341\334w"
 368      88D8 6AFB 
 368      63C4 BEEA 
 368      6F89 82E1 
 368      DC77 
 369 0158 E0A7 845F 	 .ascii "\340\247\204_\365}\360\332\036p\320y\300\265\316\200CD\264\322"
 369      F57D F0DA 
 369      1E70 D079 
 369      C0B5 CE80 
 369      4344 B4D2 
 370 016c 8BDE F461 	 .ascii "\213\336\364a+E\250o\372.\353\260\262>\374\32739\372\31739\353"
 370      2B45 A86F 
 370      FA2E EBB0 
 370      B23E FCD7 
 370      3339 FACF 
 371 0183 3C93 A863 	 .ascii "<\223\250c\027\205\306\025\366\231\312\360\317hQ\200g\310\233"
 371      1785 C615 
 371      F699 CAF0 
 371      CF68 5180 
 371      67C8 9B
 372 0196 E793 B6A9 	 .ascii "\347\223\266\251Z\263\244D\257\233[\216\304bS\311\265\245\305"
 372      5AB3 A444 
 372      AF9B 5B8E 
 372      C462 53C9 
 372      B5A5 C5
 373 01a9 4476 21B5 	 .ascii "Dv!\265\3329\305\022 \226\263\337@\375\322?"
 373      DA39 C512 
 373      2096 B3DF 
 373      40FD D23F 
 374               	 .text
 375               	 .section .gnu.lto_Rvarint.5eb0d06daa7ae5d4,"",@progbits
 376 0000 789C 7D52 	 .string "x\234}R=O\002A\020\235\331\275\343\020\001i5\210\306\037"
GAS LISTING  			page 29


 376      3D4F 0241 
 376      109D D9BD 
 376      E310 0169 
 376      3588 C61F 
 377 0015 89AD F6FE 	 .string "\211\255\366\376\004M\260Q\221\202\240\005\301\312\342\026\016\243\205\005\261\247 \306\022\255\205\206R\022?bcbbq\321RcgL,\304\231=\3664\306\270\311\315\356\274y\373\346cO\200\200\337k\236\276<\3013\264\243\r(\232\327"
 377      044D B051 
 377      9182 A005 
 377      C1CA E216 
 377      0EA3 8505 
 378 005f B5A8 10B2 	 .string "\265\250\020\262\233\001\025\263\356r\240\342\022\255"
 378      9B01 15B3 
 378      EE72 A0E2 
 378      12AD 00
 379 006e B610 F900 	 .string "\266\020\371"
 380 0072 08AE 9016 	 .string "\b\256\220\026\272\253\310\0328\007m\245\216\374\223\347{\334S\276j\252\317\241\213e\244ti\204\"B\236\034L\351M\374*\341L\364\375\341\360\362\255\361\270\220B(`\233\304l(\243\214\214\034\207\235(\031+\306\247q2v\234M\202\261\344\2105\3011\222\263\241\241Ts6"
 380      BAAB C81A 
 380      3807 6DA5 
 380      8EFC 93E7 
 380      7BDC 53BE 
 381 00ca 8173 D35A 	 .ascii "\201s\323Z&\313e\257\240\340]\336\200\347w\366\223\005<\246\216"
 381      26CB 65AF 
 381      A0E0 5DDE 
 381      80E7 77F6 
 381      9305 3CA6 
 382 00df 4B68 EFC2 	 .ascii "Kh\357\302\207:P\2512F\212\250/\220\230\003p\005\365Wo\333\260"
 382      873A 50A9 
 382      3246 8AA8 
 382      2F90 9803 
 382      7005 F557 
 383 00f6 2244 0418 	 .ascii "\"D\004\030\200\b\200 \003\301\314\363z^\2575e\230\023\304\344"
 383      8008 8020 
 383      03C1 CCF3 
 383      7A5E AF35 
 383      6598 13C4 
 384 010b 56A5 62B1 	 .ascii "V\245b\261\013h\274\324\306\302\230\016\374\034\300\n\271\335"
 384      0B68 BCD4 
 384      C6C2 980E 
 384      FC1C C00A 
 384      B9DD 
 385 011d 8CD4 224F 	 .ascii "\214\324\"O\255iCt\214\210\013A%\322D\242%.\216z\350/\032(\366"
 385      AD69 4374 
 385      8C88 0B41 
 385      25D2 44A2 
 385      252E 8E7A 
 386 0136 5F07 1F68 	 .ascii "_\007\037hh\343\304\324\345vB\2618\241\234\306vFi\274\323\220"
 386      68E3 C4D4 
 386      E576 42B1 
 386      38A1 9CC6 
 386      7646 69BC 
 387 014c 9EA0 B0A6 	 .ascii "\236\240\260\246\237{\031\203%u\376\304\037\203H\232v,=\343\001"
 387      9F7B 1983 
 387      2575 FEC4 
 387      1F83 489A 
 387      762C 3DE3 
 388 0161 D4A3 1006 	 .ascii "\324\243\020\006\251\246[\250\371\275%\243\243\213\274\007\244"
 388      A9A6 5BA8 
 388      F9BD 25A3 
GAS LISTING  			page 30


 388      A38B BC07 
 388      A4
 389 0172 018A 87B7 	 .ascii "\001\212\207\2672]\227\207\357i~*\344\353\374\223Lf\263\271\302"
 389      325D 9787 
 389      EF69 7E2A 
 389      E4EB FC93 
 389      4C66 B3B9 
 390 0187 CED6 FA46 	 .ascii "\316\326\372Fe\255X\375>e7@V6\253_6%\225z"
 390      65AD 58FD 
 390      3E65 3740 
 390      5636 AB5F 
 390      3625 957A 
 391               	 .text
 392               	 .section .gnu.lto_Rslot.5eb0d06daa7ae5d4,"",@progbits
 393 0000 789C 8D90 	 .ascii "x\234\215\220\261J\003A\020\206\377\177\367\222\213\"\232VP\024"
 393      B14A 0341 
 393      1086 FF7F 
 393      F792 8B22 
 393      9A56 5014 
 394 0014 1F20 067B 	 .ascii "\037 \006{k\037!\001mL\302\025rZH\254,\262\301\023\355\fvv\006"
 394      6B1F 2101 
 394      6D4C C215 
 394      725A 48AC 
 394      2CB2 C113 
 395 002d 2B2B 5F41 	 .ascii "++_A+/\021\"v\332]#i\254l\004\021\317\331;\023%Apawvv\277\231"
 395      2B2F 1122 
 395      76DA 5D23 
 395      69AC 6C04 
 395      11CF D93B 
 396 004b F967 1414 	 .ascii "\371g\024\024F\327\212\354K\002\013b\231\001U\253\0074sJ\351"
 396      46D7 8AEC 
 396      4B02 0B62 
 396      9901 55AB 
 396      0734 734A 
 397 0060 B008 33E9 	 .ascii "\260\b3\351\204\3630S\232N\372\354\220\366\002\242\241\264\303"
 397      84F3 3053 
 397      9A4E FAEC 
 397      90F6 02A2 
 397      A1B4 C3
 398 0073 C606 6D0E 	 .ascii "\306\006m\016.\241m\314i\364\374\372\304C\023\231\226\371\214"
 398      2EA1 6DCC 
 398      69F4 FCFA 
 398      C443 1399 
 398      96F9 8C
 399 0086 1BF4 29E5 	 .ascii "\033\364)\345\346\b\217X\027\207\371\304\250\021\tW\352:\212"
 399      E608 8F58 
 399      1787 F9C4 
 399      A811 0957 
 399      EA3A 8A
 400 0099 E38F B7A0 	 .ascii "\343\217\267\240\273:\341\242\306\266$\223\225A`Lkq\340{I\235"
 400      BB3A E1A2 
 400      C6B6 2493 
 400      9541 604C 
 400      6B71 E07B 
 401 00af 929C B67C 	 .ascii "\222\234\266|\231\312Z}\217\203(\354O\327x!\312\201}\274\233"
 401      99CA 5A7D 
 401      8F83 28EC 
GAS LISTING  			page 31


 401      4FD7 7821 
 401      CA81 7DBC 
 402 00c4 6393 F7A9 	 .ascii "c\223\367\251=&<|:\200\245:\2673cT\306\243\372\246\262\tu\336"
 402      3D26 3C7C 
 402      3A80 A53A 
 402      B733 6354 
 402      C6A3 FAA6 
 403 00dc 75FF 91EA 	 .ascii "u\377\221\352\256\237M\251-\272\177`\035\250\024I\345\013\b\204"
 403      AE9F 4DA9 
 403      2DBA 7F60 
 403      1DA8 1449 
 403      E50B 0884 
 404 00f0 085E 6ECE 	 .ascii "\b^n\316N\3240\326\016\003q\254\177\315\242L\215\260(m\005Q\357"
 404      4ED4 30D6 
 404      0E03 71AC 
 404      7FCD A24C 
 404      8DB0 286D 
 405 0107 283B A6C5 	 .ascii "(;\246\305\365\230\322\022\35537\210q\222Y<\240\031=\256\r\263"
 405      F598 D212 
 405      ED33 3788 
 405      7192 593C 
 405      A019 3DAE 
 406 011d A79F 2551 	 .ascii "\247\237%Q%\237\266\315\331Ba\271\266\267]\251\356nz\365\237"
 406      259F B6CD 
 406      D942 61B9 
 406      B6B7 5DA9 
 406      EE6E 7AF5 
 407 0132 5BA1 0ABD 	 .ascii "[\241\n\275S\251\177\0017\240v\330"
 407      53A9 7F01 
 407      37A0 76D8 
 408               	 .text
 409               	 .section .gnu.lto_Rstring.5eb0d06daa7ae5d4,"",@progbits
 410 0000 789C 8D53 	 .string "x\234\215SKk\024A\020\376\252{\236\373\310&\001AAP\"\230\223\253\271\b^\024\217\376\202,(\350\232\315\036\226\211J\210 $\260\275\331\021\026\315a\361$z\2101\006\361\224\273\344\260\007_\0015x\\P\331\203\342\305\307}C\034\253g\246\023\023\024m\230\256\256\232\357\353\372\252jF@`\357\272\310\317#\t\234`K>H\264\337\002\rO\220\227\034\244\260Z\243P\031[\3579\213\234$l\233\203\223"
 410      4B6B 1441 
 410      10FE AA7B 
 410      9EFB C826 
 410      0141 4150 
 411 0083 CF7A 422E 	 .ascii "\317zB.\274\004\003\335\320e\240"
 411      BC04 03DD 
 411      D065 A0
 412 008e 4BA4 C320 	 .string "K\244\303 \324\205\264l\307s\251~\201tB9\202%\245\356\364\236\367\273t\363VO\265\325\317\250N\001\261\266\203\204*\341<;4\030\033\261GoB\355<\335\020wU\330\211\2423\001I\201\243\377I[\333M;\366/\332\252\350\364\242\350\365f\330?\275\217P\241e\032a\221\025Za\353\244\276\227Z?\265\031\272F\310\262\263\304N.\005\347S;\300/\251\200\200\254!\336\354a\336\034\316c#T\252}8\271 ABK\3435\316;\367\263D\202\215\334@\263\367\341\213S\241\307d\243F\316,\372\252\245\006\003r\253\024\303\371B\017X\207H \311\2155\235d\035\363\017>\272&\254S\350\212\245)\265\304G\036\237|\203\371\357\315'\207L\206l\2152\300+<\373\334\310\232\230\340\360N\217Jd\341\305\021\3465[\315\325\305\375\006\224g\\\234@\313\372M\317J\254'\0170\341\2664\350B\215\006\230"
 412      D485 B46C 
 412      C773 A97E 
 412      8174 4239 
 412      8225 A5EE 
 413 018f 7081 9D53 	 .ascii "p\201\235S&:\264]\236_%\221\226\227\321T\326\370\220\fl\230\221"
 413      263A B45D 
 413      9E5F 2591 
 413      9697 D154 
 413      D6F8 900C 
 414 01a6 71F0 5C12 	 .ascii "q\360\\\022\271\217{\r\245\324\030\367\226o\326\"\254\230\313"
 414      B98F 7B0D 
 414      A5D4 18F7 
 414      966F D622 
 414      AC98 CB
 415 01b9 4823 D9D6 	 .ascii "H#\331\326\222u3\277\231f\002\177I\226\020\234\2709@\027^\215"
 415      9275 33BF 
GAS LISTING  			page 32


 415      9966 027F 
 415      4996 109C 
 415      B839 4017 
 416 01cf 7C7B 616B 	 .ascii "|{ak\216\215\305n\216e\333\304\025Yk[\2274\322\003\177\366\304"
 416      8E8D C56E 
 416      8E65 DBC4 
 416      1559 6B5B 
 416      9734 D203 
 417 01e6 DDE6 3998 	 .ascii "\335\3469\230rE\334\3768\220\314\203\342\372[\315\345\305\355"
 417      7245 DCFE 
 417      3890 CC83 
 417      E2FA 5BCD 
 417      E5C5 ED
 418 01f9 4EFB 1C8D 	 .ascii "N\373\034\215\033\026E\022\177\030\241\257\307\020~m\024\f\201"
 418      1B16 4512 
 418      7F18 A1AF 
 418      C710 7E6D 
 418      140C 81
 419 020c 76CD 4F4B 	 .ascii "v\315OKc\031\3747\362\264\305\373\315\240\013\236S\3161(\361"
 419      6319 FC37 
 419      F2B4 C5FB 
 419      CDA0 0B9E 
 419      53CE 3128 
 420 0221 6956 AB73 	 .ascii "iV\253s\365W\364\016\215\336\217QSw\262\306YS\350\352\272\017"
 420      F557 F40E 
 420      8DDE 8F51 
 420      5377 B2C6 
 420      5953 E8EA 
 421 0237 148B C72B 	 .ascii "\024\213\307+\327\247.OL\227\2533;\247\342\004\374\251\362\215"
 421      D7A7 2E4F 
 421      4C97 AB33 
 421      3BA7 E204 
 421      FCA9 F28D 
 422 024b 60F2 4A71 	 .ascii "`\362Jq\354\2443suz\262\\\221\354\375\002\203\340\343k"
 422      ECA4 3373 
 422      757A B25C 
 422      91EC FD02 
 422      83E0 E36B 
 423               	 .text
 424               	 .section .gnu.lto_Rdouble.5eb0d06daa7ae5d4,"",@progbits
 425 0000 789C 6D90 	 .ascii "x\234m\2201K\003A\020\205\337\333\363\342)\026i\003\026\222N"
 425      314B 0341 
 425      1085 DFDB 
 425      F3E2 2916 
 425      6903 1692 
 426 0015 84D8 0896 	 .ascii "\204\330\b\226Z\352/\210\240\215\311eA9\021\202\301\302\"\033"
 426      5AEA 2F88 
 426      A08D C965 
 426      4139 1182 
 426      C1C2 221B 
 427 0029 4920 E595 	 .ascii "I \345\225i\203HJ\013[\213\303NAC\376\301\365\376\203\024Yg\357"
 427      6983 484A 
 427      0B5B 8BC3 
 427      4E41 43FE 
 427      C1F5 FE83 
 428 0041 48D4 E0C0 	 .ascii "H\324\340\300\336\354\276\235\371\346\335*(,GI\326\200\300\216"
 428      DEEC BE9D 
GAS LISTING  			page 33


 428      F9E6 DD2A 
 428      282C 4749 
 428      D680 C08E 
 429 0055 647A A08A 	 .ascii "dz\240\212?\201N\240H\267\001\321Vl\237\321\225\2522\206&\211"
 429      3F81 4EA0 
 429      48B7 01D1 
 429      566C 9FD1 
 429      95AA 3286 
 430 006b D39E 9DB0 	 .ascii "\323\236\235\260cR\023\233\231m3\242P7\tM\234\312\201\207YR\301"
 430      6352 139B 
 430      996D 33A2 
 430      5037 094D 
 430      9CCA 8187 
 431 0082 DF31 AED5 	 .ascii "\3371\256\325\304\311t\254\006\246\233X{\020\321S\330\376i+\346"
 431      C4C9 74AC 
 431      06A6 9B58 
 431      7B10 D153 
 431      D8FE 692B 
 432 0097 6D4B 069F 	 .ascii "mK\006\237T\222Z\373b\273\357G\276\207\220\017,;\331GWh[!\207"
 432      5492 5AFB 
 432      62BB EF47 
 432      BE87 900F 
 432      2C3B D947 
 433 00b0 729E AB3A 	 .ascii "r\236\253:3Y\225\257s~B\345\2627F/\235\215\n!\037\351\313\365"
 433      3359 95AF 
 433      737E 42E5 
 433      B237 462F 
 433      9D8D 0A21 
 434 00c8 1DA6 A66F 	 .ascii "\035\246\246o\212\021W4\263\372L\221\330\217\350\317yY\251\263"
 434      8A11 5734 
 434      B3FA 4C91 
 434      D88F E8CF 
 434      7959 A9B3 
 435 00dc 5308 1071 	 .ascii "S\b\020q\025p\020;b~sIoA\t4\325o\312\355\177\2245_(\353\300\033"
 435      1570 103B 
 435      627E 7349 
 435      6F41 0934 
 435      D56F CAED 
 436 00f8 EE13 3FD7 	 .ascii "\356\023?\327s\317B\002>\360\372\245\346\252\353\334\303\263"
 436      73CF 4202 
 436      3EF0 FAA5 
 436      E6AA EBDC 
 436      C3B3 
 437 010a E9BB 6795 	 .ascii "\351\273g\225\230\240\223\366\217\027s\363G\251\212s\37157\270"
 437      98A0 93F6 
 437      8F17 73F3 
 437      47A9 8A73 
 437      F935 37B8 
 438 011e 54A9 EC86 	 .ascii "T\251\354\206\255\253Z\275y\256o~v\225:6\302\353V-j\324ZZ7\232"
 438      ADAB 5ABD 
 438      79AE 6F7E 
 438      7695 3A36 
 438      C2EB 562D 
 439 0138 EAA2 F90D 	 .ascii "\352\242\371\r\306\271s\313"
 439      C6B9 73CB 
 440               	 .text
 441               	 .section .gnu.lto_Rfloat.5eb0d06daa7ae5d4,"",@progbits
GAS LISTING  			page 34


 442 0000 789C 6D90 	 .ascii "x\234m\220=K\003A\020\206\337w\357\303\2304\266\001\213`cw6\202"
 442      3D4B 0341 
 442      1086 DF77 
 442      EFC3 9834 
 442      B601 8B60 
 443 0018 BFC1 DA22 	 .ascii "\277\301\332\"\2026\371p\0139\021B\322hq\353G0\235gg\033R\245"
 443      8236 F970 
 443      0B39 1142 
 443      D268 71EB 
 443      4730 9D67 
 444 0030 B2F0 0F04 	 .ascii "\262\360\017\004\301FP\321\332\342z\301\037`a\234\271\013\021"
 444      C146 50D1 
 444      DAE2 7AC1 
 444      1F60 619C 
 444      B90B 11
 445 0043 C581 9DD9 	 .ascii "\305\201\235\331\235y\367\231\33150\370kUY[\004V%\322\003M\372"
 445      9D79 F799 
 445      D935 30F8 
 445      6B55 595B 
 445      0456 25D2 
 446 005a 049C 940C 	 .ascii "\004\234\224\f\251\033\020\211a\262K\225r\005C7I\263\373\321"
 446      A91B 1089 
 446      61B2 4B95 
 446      7205 4337 
 446      49B3 FBD1 
 447 006e 2B2F 5CE6 	 .ascii "+/\\\346R\3675M\030S\250\313\204%v\344\300Z\036\214\377\273\315"
 447      52F7 354D 
 447      1853 A8CB 
 447      8425 76E4 
 447      C05A 1E8C 
 448 0085 8D99 64D3 	 .ascii "\215\231d\323\351\333U\377a3\364\020\323\363\305\251&\300\271"
 448      E9DB 55FF 
 448      6133 F410 
 448      D3F3 C5A9 
 448      26C0 B9
 449 0098 7369 ADCD 	 .ascii "si\255\315\241\340\241\024\261\272xm\277M\243\321{F?\273\034"
 449      A1E0 A114 
 449      B1BA 786D 
 449      BF4D A3D1 
 449      7B46 3FBB 
 450 00ad 876D 8E18 	 .ascii "\207m\216\030H\371\030\237n\340\226b\006\226\271>\317\210m\304"
 450      48F9 189F 
 450      6EE0 9662 
 450      0696 B93E 
 450      CF88 6DC4 
 451 00c1 0C0B D24C 	 .ascii "\f\013\322L\252\243,h\253\022\240\220\353q\271\250\354\323\233"
 451      AAA3 2C68 
 451      AB12 A090 
 451      EB71 B9A8 
 451      ECD3 9B
 452 00d4 5316 2DCD 	 .ascii "S\026-\315\214r\364\037\240\034\b\240\002<\342\364\343l~\337"
 452      8C72 F41F 
 452      A01C 08A0 
 452      023C E2F4 
 452      E36C 7EDF 
 453 00e8 1784 E6EE 	 .ascii "\027\204\346\356\336M\221*\356\255\343\326\r\364S\304^\300\271"
 453      DE4D 912A 
GAS LISTING  			page 35


 453      EEAD E3D6 
 453      0DF4 53C4 
 453      5EC0 B9
 454 00fb BAF8 86BA 	 .ascii "\272\370\206\272\314+\017\322v\325(Zk\367\016\232\255N\303v\177"
 454      CC2B 0FD2 
 454      76D5 285A 
 454      6BF7 0E9A 
 454      AD4E C376 
 455 0110 7651 0B15 	 .ascii "vQ\013\025\033\0376\272\315\236\265{\235o<\277^,"
 455      1B1F 36BA 
 455      CD9E B57B 
 455      9D6F 3CBF 
 455      5E2C 
 456               	 .text
 457               	 .section .gnu.lto_Svarint.5eb0d06daa7ae5d4,"",@progbits
 458 0000 789C 658E 	 .ascii "x\234e\2161K\003A\020\205\337\233\3355\207XX*BHks\367\003\374"
 458      314B 0341 
 458      1085 DF9B 
 458      DD35 8758 
 458      582A 4248 
 459 0019 2109 68A3 	 .ascii "!\th\243\tW\204\025D\264\262\270=Ma\031\374\005Z\330j\035H\241"
 459      0957 8415 
 459      44B4 B2B8 
 459      3D4D 6119 
 459      FC05 5AD8 
 460 0031 6061 A3C1 	 .ascii "`a\243\301\220\364\001\301\306\177`\023w\367\022\024\235b\336"
 460      90F4 01C1 
 460      C67F 6013 
 460      77F7 1214 
 460      9D62 DE
 461 0044 ECBE 791F 	 .ascii "\354\276y\037#\020\374\255\235\320\bl\005Y\001\245\377\n\224"
 461      2310 FCAD 
 461      9DD0 086C 
 461      0559 01A5 
 461      FF0A 94
 462 0057 8988 1AD6 	 .ascii "\211\210\032\326\341V\365$\203[S4\341\233\272\32221d\030|\260"
 462      E156 F524 
 462      835B 5334 
 462      E19B BAD2 
 462      3231 6418 
 463 006d 10A5 0D8B 	 .ascii "\020\245\r\213=F\332\275<\314\346\363\273\361\370z@]#\217\b\003"
 463      3D46 DABD 
 463      3CCC E6F3 
 463      BBF1 F87A 
 463      405D 238F 
 464 0083 1B3D 839E 	 .ascii "\033=\203\236s\375\006\220\307g\323\367\200hQ\202\252g<}<N\257"
 464      73FD 0690 
 464      C767 D3F7 
 464      8068 5182 
 464      AA67 3C7D 
 465 009a A4C3 1B1A 	 .ascii "\244\303\033\032t\311]Z\262\370ui\213\n\303\272\032\241\227T"
 465      74C9 5D5A 
 465      B2F8 7569 
 465      8B0A C3BA 
 465      1AA1 9754 
 466 00ae 4BC0 19BE 	 .ascii "K\300\031\276\334\245[\267\224\234\325\001>h\375\336\"\2401\311"
 466      DCA5 5BB7 
GAS LISTING  			page 36


 466      949C D501 
 466      3E68 FDDE 
 466      22A0 31C9 
 467 00c2 D40B CE3F 	 .ascii "\324\013\316?/\336o7\226d\323\r\273#\350\177\024\235S\026\024"
 467      2FDE 6F37 
 467      9664 D30D 
 467      BB23 E87F 
 467      149D 5316 
 468 00d7 63A3 1529 	 .ascii "c\243\025)&\036\370\206r6\330^f\252jz\222\367Bh3M\263\316\351"
 468      261E F886 
 468      7236 D85E 
 468      66AA 6A7A 
 468      92F7 4268 
 469 00f0 E141 FB78 	 .ascii "\341A\373x??\371\231\3226\276\001\213\373H\352"
 469      3F3F F999 
 469      D236 BE01 
 469      8BFB 48EA 
 470               	 .text
 471               	 .section .gnu.lto_Sint.5eb0d06daa7ae5d4,"",@progbits
 472 0000 789C 8591 	 .string "x\234\205\221\261J\303P\030\205\317\2717m\332\020\244\243\245 N\202K|\234\n\272hK\206\020AD'\207\246\306\301\261\217`\007\327:\273\271v\250\242O\320\335\007Pt\210\377\237x\t\330!\027\356\177\0179\347|\\n\f\f\376\257\276\354'\002\0039iA3{\001\246\035C\252"
 472      B14A C350 
 472      1885 CFB9 
 472      376D DA10 
 472      A4A3 A520 
 473 005b 3131 9C1C 	 .string "11\234\034\263\314>\232\347uQ,\276\336\357\227\364\266\310s\n0%\254\f\266U\371\252\272\252\002U\241\016)\266p\233e\263] .AC\231J?\244\321\323\256\220/\362\317\207\301\230s\266\220\320$\344\021S\232m\t\257p\363\221\3578\313\212\013\274\302\253>"
 473      B3CC 3E9A 
 473      E775 512C 
 473      BEDE EF97 
 473      F4B6 C873 
 474 00b0 D7F8 CEEE 	 .ascii "\327\370\316\356\262^J\033\263\272\245\204RzZ\024\352OMm;jo\203"
 474      B25E 4A1B 
 474      B3BA A584 
 474      527A 5A14 
 474      EA4F 4D6D 
 475 00c8 EA8B DB48 	 .ascii "\352\213\333H\365kjQS\273\216\332\331\240\006\3426R\203?\252"
 475      F56B 6A51 
 475      53BB 8EDA 
 475      D9A0 06E2 
 475      3652 833F 
 476 00dd 14E7 7BAE 	 .ascii "\024\347{\256\031&\35274\303\262\371\206\351z\271\357r\325\032"
 476      1926 EA37 
 476      34C3 B2F9 
 476      86E9 7AB9 
 476      EF72 D51A 
 477 00f1 4A46 DE55 	 .ascii "JF\336U\177v?\212\016\306Wg\247\243\213\223\370\262V\321\b\277"
 477      7F76 3F8A 
 477      0EC6 5767 
 477      A7A3 8B93 
 477      F8B2 56D1 
 478 0107 2330 69C5 	 .ascii "#0i\305"
 479               	 .text
 480               	 .section .gnu.lto_Sshort.5eb0d06daa7ae5d4,"",@progbits
 481 0000 789C 6362 	 .string "x\234cb`b@\007\222@\374\023\210\245\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\233qy\301yF\026\016F\306\002F\240\2019\214\f\314@\202\221\rD"
 481      6062 4007 
 481      9240 FC13 
 481      88A5 8198 
 481      9199 8191 
GAS LISTING  			page 37


 482 004a 15B1 32B4 	 .string "\025\2612\26444LP``H\003k\n\007\222 \223\"\030\231@4\363Y\206\346u\315\333\227I\2470.dde\310bd\312bd\214f\314ad\342"
 482      3434 4C50 
 482      6060 4803 
 482      6B0A 0792 
 482      2093 2218 
 483 007d 2A3E CBD0 	 .string "*>\313\320\364\272Y\016&\305\f\224e`8\317\300\002\021``\250f\370\325\320\321 \220\303\310\234\306\bq\021PQ\016#\013T\343N5\230N\266,\220<\001\235l`\235\027\031\032\037\234\327\204\251\203\200p\240\032\240[A\201%\251\247\247\237R\232\233\224\\\224\230V\202`\351%3"
 483      F4BA 590E 
 483      26C5 0C94 
 483      6560 38CF 
 483      C002 1160 
 484 00d9 00        	 .string ""
 485 00da 6BB4 42A2 	 .ascii "k\264B\242"
 486               	 .text
 487               	 .section .gnu.lto_Sstring.5eb0d06daa7ae5d4,"",@progbits
 488 0000 789C 6D52 	 .ascii "x\234mR\277k\024A\024~ofvg7\331\034ga\0210 v6g\233\316\377\300"
 488      BF6B 1441 
 488      147E 6F66 
 488      7667 37D9 
 488      1C67 6111 
 489 001d D204 4C63 	 .ascii "\322\004Lcr,\270\254 \242\225\305\315\335\255p\240\305\241\215"
 489      722C B8AC 
 489      20A2 95C5 
 489      CDDD AD70 
 489      A0C5 A18D 
 490 0031 784D 8224 	 .ascii "xM\202$)-EQI \020\003\306\240]l<\b\301\" \326*\256\337\354\354"
 490      292D 4551 
 490      4920 1003 
 490      C6A0 5D6C 
 490      3C08 C122 
 491 004c 9C3F 70E0 	 .ascii "\234?p\340\336\314\276\371\336\373\276\357\315\t\022\364\357"
 491      DECC BEF9 
 491      DEFB BEEF 
 491      CD09 12F4 
 491      EF
 492 005d BA8C DF11 	 .ascii "\272\214\337\021\322s\3309\"\026\303wD\335H\b\371\3654\231)\265"
 492      D273 D839 
 492      2216 C377 
 492      44DD 4808 
 492      F9F5 3499 
 493 0073 3A4F 2691 	 .ascii ":O&\221\254\\Zq\350\016\201;lG\241\b\356\357\022\220\272\320"
 493      AC5C 5A71 
 493      E80E 813B 
 493      6C47 A108 
 493      EEEF 1290 
 494 0089 406A 669B 	 .ascii "@jf\233'\246\216\220*\b5w\226\330\362\3609Z3\346\301x\375\331"
 494      27A6 8E90 
 494      2A08 3577 
 494      96D8 F2F0 
 494      395A 33E6 
 495 00a1 072E CCD8 	 .ascii "\007.\314\330\f\315\317\262\3039C\322\031\246\224\351\n> \300"
 495      0CCD CFB2 
 495      C339 43D2 
 495      19A6 94E9 
 495      0A3E 20C0 
 496 00b5 6E82 FFD6 	 .ascii "n\202\377\326\370Tl\215\313\362\345\350\356\307K\247\230n"
 496      F854 6C8D 
 496      CBF2 E5E8 
GAS LISTING  			page 38


 496      EEC7 4BA7 
 496      986E 
 497 00c7 D89A 36AF 	 .string "\330\2326\257\241\243b|\204\b\254)g\031\331\273\330\236\246\021D\202\240f\020\202\006B\330\254\213\260\002*\214\031\236\365\337i\305\267\200\b\017\213,\260\3117\264\363y\373\371C\321\346'\034P\306\312\n\013\313?\225-\262\244\037,\017\250\330\272\350a\372\016}3\003\323\314Y\247\354\300\031\2079\214\321>\365N\372\257\331##\200\211\366\250f\200\362\314\242\\ce%\354Q\017\211\352\202\253\362/\375\357\033\263\276>\256\262\007\244\\\202h\302\034\247,j\3468\347)K\322[\375\024;\234\363l\315\324.\016\211\341N D\362\355\350\025[\372\200\360\246\262b\334\334\234\363\214\323\231\355\273O\375{\322\247\022\230\303E\245\356E\340\2633#z\f\002\340\023K\244j\246\252\337\262\0075\200\373\277\376$\305`\235\376FnA\240\034\364\313\215y_\332\204\220\312\201\3650\231\240s\206[?\304\220\360W\254\247\350/a"
 497      A1A3 627C 
 497      8408 AC29 
 497      6719 D9BB 
 497      D89E A611 
 498 01c8 2F7B DC9D 	 .ascii "/{\334\235h\025\031O\336\364\220D=\030\365H\242Q0\320\266\217"
 498      6815 194F 
 498      DEF4 9044 
 498      3D18 F548 
 498      A251 30D0 
 499 01de B68F F19E 	 .ascii "\266\217\361\236\272\343\223\363^\253[\013(-\264\235\365l\253"
 499      BAE3 93F3 
 499      5EAB 5B0B 
 499      282D B49D 
 499      F56C AB
 500 01f1 75A1 7DFB 	 .ascii "u\241}\373\372\362\312\315\253\351\255\337\247\326\n\361\265"
 500      FAF2 CACD 
 500      ABE9 ADDF 
 500      A7D6 0AF1 
 500      B5
 501 0202 5FF4 7EAD 	 .ascii "_\364~\255s"
 501      73
 502               	 .text
 503               	 .section .gnu.lto_Sbuffer.5eb0d06daa7ae5d4,"",@progbits
 504 0000 789C 5D52 	 .ascii "x\234]R=K\003A\020}o\367\366\356\210\026\266\202\202\330\331"
 504      3D4B 0341 
 504      107D 6FF7 
 504      F6EE 8816 
 504      B682 82D8 
 505 0015 C4D6 C6DF 	 .ascii "\304\326\306\337`i@\0335\004\f\021D\264\262\310\346\013\002Z"
 505      6069 401B 
 505      3504 0C11 
 505      44B4 B2C8 
 505      E60B 025A 
 506 0029 042B 512C 	 .ascii "\004+Q,\304B\254\354-DAP\213(\332\t\026\327\210`\241\265\242"
 506      C442 ACEC 
 506      2D44 4150 
 506      8B28 DA09 
 506      16D7 8860 
 507 0040 C6D9 DC9D 	 .ascii "\306\331\334\235_\003\2673;\363\346\315\233\273SP\370o\343\362"
 507      5F03 B733 
 507      3BF3 E6CD 
 507      9BBB 5350 
 507      F86F E3F2 
 508 0054 DC13 1814 	 .ascii "\334\023\030\024O\037T\255+\240\022*zq\240\343\3404\364\224^"
 508      4F1F 54AD 
 508      2BA0 122A 
 508      7A71 A0E3 
 508      E034 F494 
 509 0069 3F07 6CC6 	 .ascii "?\007l\306\324\003\330^C\272<\210\262\322\236ay\232\216\216\303"
 509      D403 D85E 
 509      43BA 3C88 
 509      B2D2 9E61 
 509      799A 8E8E 
 510 007e D8B5 7623 	 .ascii "\330\265v#j\034\337\262n#\333\262\237\2352K\224\311\003D\201"
GAS LISTING  			page 39


 510      6A1C DFB2 
 510      6E23 DBB2 
 510      9F9D 324B 
 510      94C9 0344 
 511 0093 9892 0BC3 	 .ascii "\230\222\013\303\256S\374+\345P\235D\235\316\373N\343i\242\207"
 511      AE53 FC2B 
 511      E550 9D44 
 511      9DCE FB4E 
 511      E369 A287 
 512 00a7 C873 57C8 	 .ascii "\310sW\310<.\022\006\002\366%b \221\016\345\3602\t@\314\240n"
 512      3C2E 1206 
 512      02F6 2562 
 512      2091 0EE5 
 512      F032 0940 
 513 00be 6D6B 28BD 	 .ascii "mk(\275\027\272\264\223r\212\320\034\2258}\211j\364z\340\347"
 513      17BA B493 
 513      728A D01C 
 513      9538 7D89 
 513      6AF4 7AE0 
 514 00d3 B947 9334 	 .ascii "\271G\2234:\005\337\243s\324\220\355t\033\325\347\332\313\376"
 514      3A05 DFA3 
 514      73D4 90ED 
 514      741B D5E7 
 514      DACB FE
 515 00e6 600C 2CD2 	 .ascii "`\f,\322\024)\2406jk:M\005E\372Rp\331\352Qc6M\207\333\330\022"
 515      1429 A036 
 515      6A6B 3A4D 
 515      0545 FA52 
 515      70D9 EA51 
 516 0101 4669 081C 	 .ascii "Fi\b\034\263N\210\257\341\305\b`\025o\266i\373J\364\013\214'"
 516      B34E 88AF 
 516      E1C5 0860 
 516      156F B669 
 516      FB4A F40B 
 517 0117 4B57 4956 	 .ascii "KWIVr\374\315\332\343\376X\312\225\221\251]y\016v\t\365[\266"
 517      72FC CDDA 
 517      E3FE 58CA 
 517      9591 A95D 
 517      790E 7609 
 518 012e 5453 C91E 	 .ascii "TS\311\036\344\013\270\325B|\027\245\343\002g\017\025\223r\261"
 518      E40B B8D5 
 518      427C 17A5 
 518      E302 670F 
 518      1593 72B1 
 519 0142 28B8 C4EE 	 .ascii "(\270\304\356\300dk\265\251\205H7\003\307c\334\033\272A%\372"
 519      C064 6BB5 
 519      A985 4837 
 519      03C7 63DC 
 519      1BBA 4125 
 520 0157 1849 B5C6 	 .ascii "\030I\265\3066)t\365\300\3753\375\331\354h~eavni\246\260\374"
 520      3629 74F5 
 520      C0FD 33FD 
 520      D9EC 687E 
 520      6561 766E 
 521 016f 1365 E7C0 	 .ascii "\023e\347\300\371/\203\271t\234"
 521      F92F 83B9 
 521      749C 
GAS LISTING  			page 40


 522               	 .text
 523               	 .section .gnu.lto_SbufferWide.5eb0d06daa7ae5d4,"",@progbits
 524 0000 789C 5D52 	 .string "x\234]R=K\003A\020}o\3676w~\024\266\202\212\330\n\261\265\361w\030\320F\r\007\206\b\"ZYd\363!\004\025\tV\242\225\210U\004\021;+\005ASD\321\316\356\020l-\304\312\3028\233\273\363k\340fgg\336\276y\263{\n\n\377mJ\276w\002\303\2622\003\252\306\035P\016\024\2758\320qp\025xJo\337"
 524      3D4B 0341 
 524      107D 6FF7 
 524      3677 7E14 
 524      B682 8AD8 
 525 006a B6D7 D47C 	 .ascii "\266\327\324|\330~C\272<\210\222\322\236ai\226\216\216c8\264"
 525      D87E 43BA 
 525      3C88 92D2 
 525      9E61 6996 
 525      8E8E 6338 
 526 007f 7637 3A7E 	 .ascii "v7:~~d\315F\266a?;%\026)\235\207\210\220\230\221\r\203\356\242"
 526      7E64 CD46 
 526      B661 3F3B 
 526      2516 299D 
 526      8788 9098 
 527 0098 F857 CAA9 	 .ascii "\370W\312\251\272\214:\235\355\263\215\267\\?\221\347\241\220"
 527      BA8C 3A9D 
 527      EDB3 8DB7 
 527      5C3F 91E7 
 527      A190 
 528 00aa 795C 260C 	 .ascii "y\\&\f\004\234\221\210\276D:\020\347\365\2103}\tJ\314\240fmc"
 528      049C 9188 
 528      BE44 3A10 
 528      E7F5 8833 
 528      7D09 4ACC 
 529 00c2 34DD 875D 	 .ascii "4\335\207]\356i\361\2426G%\213n\241\022m63y\036\321$\007\235"
 529      EE69 F1A2 
 529      3647 258B 
 529      6EA1 126D 
 529      3633 791E 
 530 00da 8CEF FE39 	 .ascii "\214\357\3769j\310\210\272\215\312k\365\374d$\006\026h\n\024"
 530      6AC8 88BA 
 530      8DCA 6BF5 
 530      FC64 2406 
 530      1668 0A14 
 531 00ee 501B D52D 	 .ascii "P\033\325-\235\246\374\0023Rp\331\312\205I\263\301\001\366\205"
 531      9DA6 FC02 
 531      3352 70D9 
 531      CA85 49B3 
 531      C101 F685 
 532 0102 502A BE23 	 .ascii "P*\276#\326\to\227/LA=\202\003\356\341\305\t`\035\037\266n\007"
 532      D609 6F97 
 532      2F4C 413D 
 532      8203 EEE1 
 532      C509 601D 
 533 011a 8AF4 43C6 	 .ascii "\212\364C\306b\004Tt iY\2576O&\323\243}\"\244\253\330\301ZP\277"
 533      6204 5474 
 533      2069 59AF 
 533      364F 26D3 
 533      A37D 22A4 
 534 0134 2791 6A3A 	 .ascii "'\221j:\205\007y\0317\255P\244E9q\213\353\227\362\267V\026\004"
 534      8507 7919 
 534      37AD 50A4 
 534      4539 718B 
 534      EB97 F2B7 
GAS LISTING  			page 41


 535 014b 97D8 1398 	 .ascii "\227\330\023\230\\\204\332\323B\244\353\276\3431\356\322\036"
 535      5C84 DAD3 
 535      42A4 EBBE 
 535      E331 EED2 
 535      1E
 536 015c 508E 76C6 	 .ascii "P\216v\306S\255\261M\013]\315w\377\322`6;\221_[\232_X\231\013"
 536      53AD B14D 
 536      0B5D CD77 
 536      FFD2 6036 
 536      3B91 5F5B 
 537 0175 577F A2EC 	 .ascii "W\177\242\354\002\270\370\005[ax#"
 537      02B8 F805 
 537      5B61 7823 
 538               	 .text
 539               	 .section .gnu.lto_SbufferPGM.5eb0d06daa7ae5d4,"",@progbits
 540 0000 789C 8552 	 .ascii "x\234\205RAk\023A\024\376\276\231\335d\323\346\320\243\212\224"
 540      416B 1341 
 540      14FE BE99 
 540      DD64 D3E6 
 540      D0A3 8A94 
 541 0014 5010 0F4A 	 .ascii "P\020\017J\254\027\361\022\264\370#,U(\265k\300e\013%\266\027"
 541      AC17 F112 
 541      B4F8 232C 
 541      5528 B56B 
 541      C065 0B25 
 542 002a 3D64 D244 	 .ascii "=d\322D\b\350!\364\224\203\036\212\024\013\006<x\365\020E\320"
 542      08E8 21F4 
 542      9483 1E8A 
 542      140B 063C 
 542      78F5 1045 
 543 003f 1E5A      	 .ascii "\036Z"
 544 0041 5150 F096 	 .string "QP\360\226K=z\361\246\340\372f'\273Q\021\034\330}o\336\367\276\367\315{3\n\n\177\257\232|\037%|E,\013\240\352\035\002\255@\321s\216v\316\313\300S\372\301\033\300L\371\235\"L\331'm\034DSi\317g\363:m9=\207\035c\266GG_>\260cF\246g~&M\306\024\345\223D\235\270&\033\006\251Q\374\363(\216:|\361I\365Mg\230$\227bj\205\331\tm\306\321\324\277h\246k\206\264j\211S;\375?\265gj8J\222\301\363{\257\226\312D\310\035\316\301\343:\341C\222\013\342\261(\236\027\b\366X\260\222\330]\261\323\343\\Y>:\306\364*\331\276\236*\\\225\277Lh\221J\214\336\307\326\350\341\323B\310'\364\307D{\230\374\024\213\324\220\261\352\003l}m\377\030\234\310KZI'\b8\266\254\210~D!\037\240}_\207\334\223h\304b\304Bdq[#\217\006\002"
 544      4B3D 7AF1 
 544      A6E0 FA66 
 544      27BB 5111 
 544      1CD8 7D6F 
 545 0142 FB50 2EE0 	 .ascii "\373P.\340\nJ\0308\314b\266\322\274\266oB\273\2071\213\332#\323"
 545      0A4A 1838 
 545      CC62 B6D2 
 545      BCB6 6F42 
 545      BB87 318B 
 546 0159 BF1C 6762 	 .ascii "\277\034gb%\214\241\034_px\301\341A\332\302o\032\273\251\206"
 546      258C A11C 
 546      5F70 78C1 
 546      E141 DAC2 
 546      6F1A BBA9 
 547 016e D0DE A133 	 .ascii "\320\336\2413<\226\035\373.\276\313\355\314\304,\326\351:\227"
 547      3C96 1DFB 
 547      2EBE CBED 
 547      CCC4 2CD6 
 547      E93A 97
 548 0181 9CD8 B2A5 	 .ascii "\234\330\262\245\217n\373\333\340\242\313\2148-\335\245\343a"
 548      8F6E FBDB 
 548      E0A2 CB8C 
 548      382D DDA5 
 548      E361 
 549 0193 5677 3236 	 .ascii "Vw26A\263\221y\220\247gG\033 \007\205\361\026\257\217Z~V\213"
GAS LISTING  			page 42


 549      41B3 9179 
 549      90A7 6747 
 549      1B20 0785 
 549      F116 AF8F 
 550 01ab 91E4 8DD7 	 .ascii "\221\344\215\327gp<u\325\327RHw\213\266\216oo\350=Z\243\2753"
 550      6770 3C75 
 550      D5D7 5248 
 550      778B B68E 
 550      6F6F E83D 
 551 01c3 F988 E1EE 	 .ascii "\371\210\341\356\220\002\331\236\217W\253\347\302\315\265\033"
 551      9002 D99E 
 551      8F57 ABE7 
 551      C2CD B51B 
 552 01d3 AB8D 95FA 	 .ascii "\253\215\225\372\306\304\253\256\202\267\202\345\345\2250l\234"
 552      C6C4 ABAE 
 552      82B7 82E5 
 552      E595 306C 
 552      9C
 553 01e4 BF20 4EE3 	 .ascii "\277 N\343\346\355\315x\243\034\257\257UN\315\237\255,M\225\240"
 553      E6ED CD78 
 553      A31C AFAF 
 553      554E CD9F 
 553      AD2C 4D95 
 554 01f9 6B0D A83B 	 .ascii "k\r\250;\370\005]h\251\336"
 554      F805 5D68 
 554      A9DE 
 555               	 .text
 556               	 .section .gnu.lto_Sdouble.5eb0d06daa7ae5d4,"",@progbits
 557 0000 789C 6590 	 .string "x\234e\220\261K\303@\024\306\277\357\245\211qs-8\024W!.\202\253\203\377C\205\272\304\206\f\022A\244N\016\275\200\225\216\331\235\2128\tv\020\301\261tV\213\376\005\267\347?p0\276K*b\375\340\356\335\335{\357\367\335\235@\260\252\266\216\003\002\035\215\364@)\336\200<\024\322-@\f\205\303#\272Rnabf\205\275+?\230\033k\n\363U\r\231Q\251\233DJ\364t\303\375:H\370\327f*3[U/O\243y/\020\236\325<\037W\306\024\235\204\023%\303\001T]\235\235\363!\305Eo\201k\373P\006\to\351k\372\022\237fl62z)\353z\234P\234a\313\257s\252\033\335\371\rt\331\2251"
 557      B14B C340 
 557      14C6 BFEF 
 557      A589 7173 
 557      2D38 1457 
 558 00c6 1618 D9E9 	 .ascii "\026\030\331\351\375\177\320Z\312\346W\226\355{\253\335\216\036"
 558      FD7F D05A 
 558      CAE6 5796 
 558      ED7B ABDD 
 558      8E1E 
 559 00d8 860A 5907 	 .ascii "\206\nY\007^1/\2459ojv\361h\306\356\017T\357\310\355\363\366"
 559      5E31 2FA5 
 559      396F 6A76 
 559      F168 C6EE 
 559      0F54 EFC8 
 560 00ef 8F41 A3AE 	 .ascii "\217A\243\256\336R\237\341\034\332Q\264\223\\\234\036\367\317"
 560      DE52 9FE1 
 560      1CDA 51B4 
 560      935C 9C1E 
 560      F7CF 
 561 0101 E374 F0BB 	 .ascii "\343t\360\273\212\372h%\361 \376\006\244\270[\257"
 561      8AFA 6825 
 561      F120 FE06 
 561      A4B8 5BAF 
 562               	 .text
 563               	 .section .gnu.lto_Sfloat.5eb0d06daa7ae5d4,"",@progbits
 564 0000 789C 6590 	 .ascii "x\234e\220?O\3030\020\305\337\273$\245l\254\225\030\"V\244\260"
 564      3F4F C330 
 564      10C5 DFBB 
GAS LISTING  			page 43


 564      24A5 6CAC 
 564      9518 2256 
 565 0016 20F1 05F8 	 .ascii " \361\005\370\016E*Kh\224\001\005\t\24121\304\225\bt\314\306"
 565      0E45 2A4B 
 565      6894 0105 
 565      09A1 3231 
 565      C495 0874 
 566 002c 5C31 3230 	 .ascii "\\1200\260\360\247bEP\301'\360\316\300\336\201pN\212\020\345"
 566      30B0 F0A7 
 566      6245 50C1 
 566      27F0 CEC0 
 566      DE81 704E 
 567 0043 49F6 D9BE 	 .ascii "I\366\331\276\273\337\263-\020,\252\243c\233@\250\221\036(\345"
 567      BBDF B32D 
 567      102C AAA3 
 567      639B 40A8 
 567      911E 28E5 
 568 0057 2B30 6C0B 	 .ascii "+0l\013\351\026 ra\276KW\3125\214\315\244\264\305\347;\317\215"
 568      E916 2072 
 568      61BE 4B57 
 568      CA35 8CCD 
 568      A4B4 C5E7 
 569 006e 35A5 F9AA 	 .ascii "5\245\371\252rfT\352*\221\022=\3350\254\203\370\177m\256eb\253"
 569      7266 54EA 
 569      2A91 123D 
 569      DD30 AC83 
 569      F87F 6DAE 
 570 0085 EAEE B698 	 .ascii "\352\356\266\230\365Z\302\303\232\027\340\324\2302L8V2\034@\325"
 570      F55A C2C3 
 570      9A17 E0D4 
 570      9832 4C38 
 570      5632 1C40 
 571 009a D5D9 39EF 	 .ascii "\325\3319\357P\\\364\2468\263\367\317\255\204\227\f4}\202\231"
 571      505C F4A6 
 571      38B3 F7CF 
 571      AD84 970C 
 571      347D 8299 
 572 00ae 1999 958C 	 .ascii "\031\231\225\214^\312\272\036\373\024g\350\007uNu\241\273\240"
 572      5ECA BA1E 
 572      FB14 67E8 
 572      0775 4E75 
 572      A1BB A0
 573 00c1 81CE BB32 	 .ascii "\201\316\2732\266\200)\n\373p\365\037\264\224\262\371\225y\373"
 573      B680 290A 
 573      FB70 F51F 
 573      B494 B2F9 
 573      9579 FB
 574 00d4 D662 B7A3 	 .ascii "\326b\267\243\267}\205,\003/x\372\220\346\274\251\331\304\215"
 574      B77D 852C 
 574      032F 78FA 
 574      90E6 BCA9 
 574      D9C4 8D
 575 00e7 19B9 3F50 	 .ascii "\031\271?P\275ah\037\327\177\f\032u\365\226\372\f\347\320\211"
 575      BD61 681F 
 575      D77F 0C1A 
 575      75F5 96FA 
 575      0CE7 D089 
GAS LISTING  			page 44


 576 00fb A28D E4F8 	 .ascii "\242\215\344\370`\257\177\024\247\203\337U\324\207\237\304\203"
 576      60AF 7F14 
 576      A783 DF55 
 576      D487 9FC4 
 576      83
 577 010c F81B 80A3 	 .ascii "\370\033\200\243[\234"
 577      5B9C 
 578               	 .text
 579               	 .section .gnu.lto_SSpawnPlayer.5eb0d06daa7ae5d4,"",@progbits
 580 0000 789C 8D54 	 .string "x\234\215T\317k\023A\024~ov\223\264\351\257\330\330\330\304Zk/J\213\361\242(\202\376\017\236*\250\2106\356\241l!\330z\261H\247M\003\201^\202\247\242\027\213\bR$\"^\364\344\342\315\212\212^,Rd/\342\241X\017\036\254)t}ovg\033\223\264uag\337\314\274\357\373\336{\363f\005\b\250\177\322\364\036\215\002\f\322\027\r@Q~\0170\323\"\020\331"
 580      CF6B 1341 
 580      147E 6F76 
 580      93B4 E9AF 
 580      D8D8 D8C4 
 581 0078 8469 81D3 	 .string "\204i\201\323\227\221]\305 ,Jy\327\375\366\353\223(JW\226\345\2267\2156\022k\037\202\205p\211&\230P\037Q\247\304P\247\354<\373\334&\013\216\334\360\274\230\215\206\200\376m\3341\037\027\371\027\367T8\256\347\255\276,._=\202\230g-\033M\003r\270\210\203`\322$\322\312+q\032\242\0354\304\272x\232\240\241\245\233\255$[=l\245\330\352eD\206\007\"\217\300\234\224\345\001\237+\207\017\221\213`\251\\Gh\344\002\\D\301_\343\035\314\256\027^U\316\347\360\021A\307P\214!y\320j\265\260\204z\321\230\202\252\244\347\n\325\3448<a\363\216\215\255yD\002\324f\365\006f\235!\037\345\213\023\226\331\n\245\302\367J\277\2463I\203k\022\037 \310\007\210\370\353"
 581      9791 5DC5 
 581      202C 4A79 
 581      D7FD F6EB 
 581      9328 4A57 
 582 0150 AC52 9209 	 .string "\254R\222\t\033\333,T\301B\240{\301\306v?\215\300\2258l\354Pq\276X\330Z\301 a\235\271\374\221\205\300\325\362\003\274\017\367f$S\307C\221\316\274\332\342@:\225\230\n\tTHs\356\352\0326\204\325eq6\332\263\235\212\235\b\222\373]9\254\223k\245\222\360\276\311\311\251\352Zz+N\273\314n60\357\263\320T\314\344dc7;\025\037|mk\360KZ\030\251-\314\351\372\302\250\310<\244\320\366\007\247\350U\316h\375\216)\270M\2154\fK\214\235\260\261\207\312B"
 582      1BDB 2C54 
 582      C142 A07B 
 582      C1C6 763F 
 582      8DC0 9538 
 583 01eb 0AD9 60A0 	 .ascii "\n\331`\240\177\2067\260\346@)\016'\275s\030\304Y\257\370\345"
 583      7F86 37B0 
 583      E640 290E 
 583      27BD 7318 
 583      C459 AFF8 
 584 0200 7155 68C1 	 .ascii "qUh\301\256a\030\2621\325\\E\313\250\032e4$A\250\3465:`a4\020"
 584      AE61 18B2 
 584      31D5 5C45 
 584      CBA8 1A65 
 584      3424 41A8 
 585 021b A559 AF2F 	 .ascii "\245Y\257/\266R]\016\273\264{75\321T-9\346\027{W\265d\250\266"
 585      B652 5D0E 
 585      BBB4 7B37 
 585      35D1 542D 
 585      39E6 177B 
 586 0234 51A3 D6B3 	 .ascii "Q\243\326\263\233\232\321T-E\250=\325R\241\332\302\346Y\215\354"
 586      9B9A D154 
 586      2D45 A83D 
 586      D552 A1DA 
 586      C2E6 598D 
 587 0249 5562 71BF 	 .ascii "Ubq\277\213\345\251FA3<\2579'\266s\343\022S\320\264tN\233\341"
 587      8BE5 A946 
 587      4133 3CAF 
 587      3927 B673 
 587      E312 53D0 
 588 0262 3965 F6A2 	 .ascii "9e\366\242\217\374/}F\321\363\005Z\237\2176k\363Xx\201\350\007"
 588      8FFC 2F7D 
 588      46D1 F305 
 588      5A9F 8F36 
 588      6BF3 5878 
 589 0279 AD5B DDFD 	 .ascii "\255[\335\3759\337\310\232\261\260%\354\365\005)\317\331x0\217"
 589      39DF C89A 
 589      B1B0 25EC 
GAS LISTING  			page 45


 589      F505 29CF 
 589      D978 308F 
 590 028d 466D A31B 	 .ascii "Fm\243\033\304\320\307\f\005w\343m\243\334!\213\357\033\260N"
 590      C4D0 C70C 
 590      0577 E36D 
 590      A3DC 218B 
 590      EF1B B04E 
 591 02a1 3FE7 FC7A 	 .ascii "?\347\374zM\350\177\023_\231\223\360\\\226\210\206c\377\b3\356"
 591      4DE8 7F13 
 591      5F99 93F0 
 591      5C96 8886 
 591      63FF 0833 
 592 02b6 9F61 CDE0 	 .ascii "\237a\315\340?#\324\242\364\213\344\316Ig\263'r\267\306\257\217"
 592      3F23 D4A2 
 592      F48B E4CE 
 592      4967 B327 
 592      72B7 C6AF 
 593 02cb DEBC 664D 	 .ascii "\336\274fMn[\331Q\300\274919\236\377\013\365\331f\355"
 593      6E5B D951 
 593      C0BC 3931 
 593      399E FF0B 
 593      F5D9 66ED 
 594               	 .text
 595               	 .section .gnu.lto_UpdatePlayerSpeed.5eb0d06daa7ae5d4,"",@progbits
 596 0000 789C 7552 	 .ascii "x\234uRMkSA\024=g\222\227&\251\265\365\253\020\020)\256\334\370"
 596      4D6B 5341 
 596      143D 6792 
 596      9726 A9B5 
 596      F5AB 1010 
 597 0018 0A6E BA13 	 .ascii "\nn\272\023\377\203\213\n\272\251\311\0335Lj(U\020\027\231\330"
 597      FF83 8B0A 
 597      BAA9 C91B 
 597      354C 6A28 
 597      5510 1799 
 598 002d 146A A912 	 .ascii "\024j\251\022\\\005?\300\342Z\272q\341N\267\212\261\270s\371"
 598      5C05 3FC0 
 598      E25A BA71 
 598      E14E B78A 
 598      B1B8 73F9 
 599 0041 36AE 0417 	 .ascii "6\256\004\027\202 .\362\2743\223\264\324\324\013\357\315y\363"
 599      8220 2EF2 
 599      BC33 93B4 
 599      D4D4 0BEF 
 599      CD79 F3
 600 0054 CEBD F79C 	 .ascii "\316\275\367\234;\243\240\360oT\344y.\333\027ee\016T\335\317"
 600      3BA3 A0F0 
 600      6F54 E479 
 600      2EDB 1765 
 600      650E 54DD 
 601 0069 40BB A848 	 .ascii "@\273\250H\007@\264\024[\327\350\250<\213mk\237\244\337\262\217"
 601      0740 B414 
 601      5BD7 E8A8 
 601      3C8B 6D6B 
 601      9FA4 DFB2 
 602 007e EC6C A6B6 	 .ascii "\354l\246\266k\007Y\213\206R\3654\241\211\253\362\301\242_\024"
 602      6B07 598B 
 602      8652 F534 
GAS LISTING  			page 46


 602      A189 ABF2 
 602      C1A2 5F14 
 603 0092 0FB6 D951 	 .ascii "\017\266\331Q\357\323,\373\364n\375\347\315\351<j\334\226b\021"
 603      EFD3 2CFB 
 603      F46E FDE7 
 603      CDE9 3C6A 
 603      DC96 6211 
 604 00a6 0C73 2536 	 .ascii "\fs%6\211\262\240\274\260\"t\254\355\316\301\025\223X\224\267"
 604      89B2 A0BC 
 604      B022 74AC 
 604      EDCE C115 
 604      9358 94B7 
 605 00ba 5371 85CA 	 .ascii "Sq\205\312\255\271>\036\274\355\r\276r\217\026\200\3755\017)"
 605      ADB9 3E1E 
 605      BCED 0DBE 
 605      728F 1680 
 605      FD35 0F29 
 606 00ce F94A F635 	 .ascii "\371J\3665}\3423<m[;c\030\335\307\037\273\341P\241\351\1779m"
 606      7DE2 333C 
 606      6D5B 3B63 
 606      18DD C71F 
 606      BBE1 50A1 
 607 00e6 05AF C8A1 	 .ascii "\005\257\310\241\310\201]t\322\301w\206\002\300^\306\204\246"
 607      C881 5D74 
 607      D2C1 7786 
 607      02C0 5EC6 
 607      84A6 
 608 00f8 DA67 CE89 	 .ascii "\332g\316\211\304\" \022>\374\026\377\201]g\376\360V\352@+\237"
 608      C422 2012 
 608      3EFC 16FF 
 608      815D 67FE 
 608      F056 EA40 
 609 010e F623 37CA 	 .ascii "\366#7\312\211\352\316\354.\362c-KZ\216\300\205\220\f\313A\333"
 609      89EA CEEC 
 609      2EF2 632D 
 609      4B5A 8EC0 
 609      8590 0CCB 
 610 0124 467F 5CDB 	 .ascii "F\177\\\333\244\366\363\nM\216P\264M9\362z\372\360ua\214|T\007"
 610      A4F6 F30A 
 610      4D8E 50B4 
 610      4D39 F27A 
 610      FAF0 7561 
 611 013c A37E A767 	 .ascii "\243~\247g\355\202\341\364\031\234{a{\227\fg\206\223\013.3W\352"
 611      ED82 E1F4 
 611      199C 7B61 
 611      7B97 0C67 
 611      8693 0B2E 
 612 0153 58D0 BBB6 	 .ascii "X\320\273\266\363\2462\222\\\256\263t\270\344\343zhRH\206'\274"
 612      F3A6 3292 
 612      5CAE B374 
 612      B8E4 E37A 
 612      6852 4886 
 613 0169 E497 5B53 	 .ascii "\344\227[S\377\267\346\372\234\004\206\366\326\322G\375q\305"
 613      FFB7 E6FA 
 613      9C04 86F6 
 613      D6D2 47FD 
 613      71C5 
GAS LISTING  			page 47


 614 017b A734 273C 	 .ascii "\2474'<\331p\026\370\202v\372\370\374\210\024bQNS\256\204\233"
 614      D970 16F8 
 614      8276 FAF8 
 614      FC88 1462 
 614      514E 53AE 
 615 0191 7325 8EE7 	 .ascii "s%\216\347kw\032\327\253+Kzu\037\305UL6\315\322\275d\345V-\276"
 615      6B77 1AD7 
 615      AB2B 4B7A 
 615      751F C555 
 615      4C36 CDD2 
 616 01ab B030 7B23 	 .ascii "\2600{#Y\026X\215\033\267\357&\215dy\365r3Ij\370\013\272C\263"
 616      5916 588D 
 616      1BB7 EF26 
 616      8D64 79F5 
 616      7233 496A 
 617 01c4 79        	 .ascii "y"
 618               	 .text
 619               	 .section .gnu.lto_InitDumbcraft.5eb0d06daa7ae5d4,"",@progbits
 620 0000 789C 6362 	 .string "x\234cb`b@\007\222@|\004\210\245\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\273v{\301OF6\026\240"
 620      6062 4007 
 620      9240 7C04 
 620      88A5 8198 
 620      9199 8191 
 621 003c 2B43 4B43 	 .string "+CKC\303\004\005\006\2064\260\202p \t\322\025\301\310\004\242\231\3173\264=x\323\313\226\302\270\220\221\025(]\315\360\253\241\243A \207\021\250\034b D\244\3014\207\221\261\200\221\001\252.\2321\007\250\037L1\2331\3440\002-:\317\320\374\340\307Yv\f\203X\323\030!>\312adc`\270\310\320\370\340\247.L\021\004\204\003m\002:\005\244JROO?\24547)\271(1\255\004\301\322Kf"
 621      C304 0506 
 621      8634 B082 
 621      7020 09D2 
 621      15C1 C804 
 622 00bf 00        	 .string ""
 623 00c0 3243 3CE3 	 .ascii "2C<\343"
 624               	 .text
 625               	 .section .gnu.lto_UpdateServer.5eb0d06daa7ae5d4,"",@progbits
 626 0000 789C AD3A 	 .ascii "x\234\255:kpTU\232\347\273\335\235\356\274\003$\020\036y\020"
 626      6B70 5455 
 626      9AE7 BBDD 
 626      9DEE BC03 
 626      2410 1E79 
 627 0015 0284 8404 	 .ascii "\002\204\204\004H\007\022@\205\331\375\265\265?\306\231\022a"
 627      4807 1240 
 627      85D9 FDB5 
 627      B53F C699 
 627      1261 
 628 0027 65C5 0974 	 .ascii "e\305\tt\232\307\264\322#\217q\306\032\351\320q\213u:\032\034"
 628      9AC7 B4D2 
 628      238F 71C6 
 628      1AE9 D071 
 628      8B75 3A1A 
 629 003c 287A B494 	 .ascii "(z\264\224\227\002\242\013h\004#\004\b\202 (0S\345\314DY!3\326"
 629      9702 A20B 
 629      6804 2304 
 629      0882 2028 
 629      3053 E5CC 
 630 0055 8245 6660 	 .ascii "\202Ef`\034\253\206\254\214f\317\367\235\307"
 630      1CAB 86AC 
 630      8C66 CFF7 
 630      9DC7 
 631 0063 BD9D BE21 	 .string "\275\235\276!\027\263\267\252\317\275\347\234\357\373\316\367>\2576\230\301\372>\177\344My\325\214}\304\277a6\003\243\345\002c\215>\003f\212\017\227\341\3360\221E\322<Xf\270\301#\232=\206\267\275\2267\247|<\2347\247\310\232\217j^\250\023@>#\025\033\322\322\2603#\025\322Ds\232\221N\315\031\324\234\016\031\2429\303\310\244\221\262i\244L\243\206Hf\021\311,\310\026@\331F\016\001\345\022P\2161\204jC\2516\004\206\n\240\241\3060\013\3200\310\025\315\271F\0365\017\247\346<\030.\232\207\033#\2509\237\232G@\276h\3167F\022\227\243\210\313\2210J4\2172FS\363Xj\036\r\305\242y\214Q\260\255\2167\027\3755\2177\027\030\205\004TD@\205P$\200\212\004\364\t_\2611\206\206\034KC\2165J\bz\034A\227\3008\001=\316(%\2402\002*5\306Sm\002\325\306C\231"
GAS LISTING  			page 48


 631      17B3 B7AA 
 631      CFBD E79C 
 631      EFFB CEF7 
 631      3EAF 3698 
 632 0164 9A60 4C24 	 .string "\232`L$\3342\302\235\250\232\313\214I\324\\I\315\223\240B4\227\213\217\023\276\n\243<v\206q\200\311M^\0160\031*\005@\245QE\243L\241Q\252`\212h\236bL\245\346\032j\236jL\263\324\246\031~\252US\255\032\374\002\305\0175\342\243\306\230N\375\265\324?\335\230A\214\325\022c3\240V"
 632      DC32 C29D 
 632      A89A CB8C 
 632      49D4 5C49 
 632      CD93 A042 
 633 01c6 D52A 97A9 	 .string "\325*\227\251\023~w\3027\323p\t\016g\021\207\263"
 633      137E 77C2 
 633      37D3 7009 
 633      0E67 1187 
 633      B300 
 634 01d8 B09D 015B 	 .string "\260\235\001[g\270\334\236\024\257/5-=#3+;g\310\320a\271y\303G\344\217\0345zLAaQ\361\330\222q\245\343'L,\233T^1\271\262j\312\324i\325\376\232\3513j\353f\316\202u\377\016\350\3629%l{$\362|\327\253\177\272\355jz\246+\322\022\371\266w\035\204\200G\307\030`A`\013y\005|\3642 1\\\004j\307\225\3131O\323\201\310\206Ho\357\272t\366L$\262>\262\2551\222\033\317\032\302Z\"\374\331\306\177\360\223\020\270\004|$\266\251\003p\230^\244\314\364\030\371b\f\227\335\030\221\327N\254\317\217\254\357\352\355-\n\201\333`e&k9\002-9\230Y"
 634      67B8 DC9E 
 634      14AF 2F35 
 634      2D3D 2333 
 634      2B3B 67C8 
 635 0297 5E85 21F4 	 .string "^\205!\364\225\3126\020#\304\025\007NF\f\300k\220J_\324\250\307m\335\264-\002\215\333\"\377\350\355uQ\373\300\3032\033\200"
 635      95CA 3610 
 635      23C4 1507 
 635      4E46 0CC0 
 635      6B90 4A5F 
 636 02c2 BC02 E9AA 	 .string "\274\002\351\252\333`\325\003\261/5\373\277\2277\271\237\226\232%\223\314vd\222\226\216\333/?\3531\021=\006{\300\341\210\227.\277v\177$\332\021\351\351\355\365\206 \305`\213\034\"\036\354\376\302\260\372\217\327`\217:\364\237\336K\207\334\257Z\245\\k\213\030\206$\314\333/6\273#\032\223\017\271\036\034\216\371\217\027\215x\244\251\243\267w\016\34159\305\373\325\345\315\036sD\237\3016\203C\005}v\371Y\013&\367\341-\2160;Z:\276\274\034\003\0233\325`/[0\177$03l1\377\266H\013\311\321^s\204\306Y\275\365y\0274E,\266\f\300;\334\367\035)h\363\265/\340i\013n\232\301\336v*\350\346\353\037@\243\0057\335`\357Zp\017\030\002yB\"\362~\243\203\347\205\217\256<\375\336~\200\337s\370"
 636      DB60 D503 
 636      B12F 35FB 
 636      BF97 37B9 
 636      9F96 9A25 
 637 03a9 1C82 12EE 	 .string "\034\202\022\356F\001h\343o\227|\273\371\373=\376\366\360\367[\374]\300\337\333\371\273\220\361"
 637      4601 68E3 
 637      6F97 7CBB 
 637      F9FB 3DFE 
 637      F6F0 F75B 
 638 03c7 29E2 95C3 	 .string ")\342\225\303\274R\314+l,\026%\022\255\024+\343\261\230\200E\231\304*\307J\005\026U\274\310\250\306/?\026\3239\300\001\0160\203W\334\265\274\322\316+3\371{'\177\337\303\337o\360\367\275\2743s\016\257\354\343\225\357#\332\375X\374"
 638      BC52 CC2B 
 638      6C2C 1625 
 638      12AD 142B 
 638      E3B1 9880 
 639 0414 8B1F 62F1 	 .string "\213\037b\361"
 639      00
 640 0419 16F3 B078 	 .string "\026\363\260x\020\331\233\217\305CX,\304\342a,\026aQ\217\305b,\002\b\334\200\305R,\226a\261\022\2130\026k\021\344\t,~\201\325\247\260h\004)\313z\300j\024\313\314\026\325\270\021\253\236\347\261\314\332\004Rw\233\tr\013\225q\002\3705\225/ \300I\016\360\022um\305\322\275\235\276wP\271S\221}\205\252\273\b`\2672\325\036\"\262WU\337\306j\306\273\004y\230\312v*\217Ry\214\312\343TvPy\222\312ST\276O\345i*\317`\231}\226\276\317\221 \347\025\033\027\360\343m\376\301\037\017k\342)\263X\214-\214\276T\316K\374\231\317K>\351.\340\376\337\344u\235e\353\273\276=\237\022\2003\340\221\260\350\222^\204<\317\326\267\365\034?i\210\316\027\331\013\215\221H\016\357{\222}\315c\227\177\345\210\f\206\b9L}y\225\033/"
 640      10D9 9B8F 
 640      C543 582C 
 640      C4E2 612C 
 640      1661 518F 
 641 050b 17E3 93BC 	 .string "\027\343\223\274\213\223\271\021\335\335>G\263u\230\330\024T\371\263\002\nW@\001\r\367ut\037\004\340\034o_\001E8\f\177\036\341Y\251\222\275\201\237<Y\f\t\203\301\021\254\341\302E\350\250\020X\2026\307%j\227z\3764[Q+\236\314*\270\326\204\020\221i\234\020\207Bv}\232qC\244\001\350\222y\340<\213\036\211\026*\002c9\r\354f\021\354\376\2005\375\2711]\367Q\207\365Y"
 641      8B93 B911 
 641      DDDD 3E47 
 641      B375 98D8 
 641      1454 F9B3 
 642 0589 6E76 7A1C 	 .string "nvz\034\027=\272!\272\317Pp%+\300E*\002b\333PL\267\021\323%\n\325Cj\343b\371\230\3564p\314S\327N\274x\331\350o\324O\030\327\214\313\005\234\222\273\375\313\3772\220T\n\273\230\353\272\310\232\272\232\367g+\274Rm\277\241A\020\004\270\376C0L\f\3218O\003\332\210\345e\317\235`\256\353,\022\253\023`\252\303\307\276\361\240\251?\355\371|\234\"0\276\202\225si\271\322\241\257\302\0334a\241#m\366\t\034M\353\210\323\373\027\321Q\301\366\242\007\244\016@\216\343\023\326\331\370\325\3175\3112'\256\313\330E\346V\"i\260\334 \030\222pY\b\362\204[u^\325nU\356\334\255\276\260u\253\nN\203\324<7\311\253*l\324\237\312.\003j\271-\376m'\310\200R\001\037\371\252\275"
 642      173D BA21 
 642      BACF 5070 
 642      252B C045 
 642      2A02 62DB 
 643 066c 1D06 B183 	 .ascii "\035\006\261\203@\253N{\301]\3661\213n\362\322\376\024;\035\270"
GAS LISTING  			page 49


 643      40AB 4E7B 
 643      C15D F631 
 643      8B6E F2D2 
 643      FE14 3B1D 
 644 0681 4D48 4C3B 	 .ascii "MHL;y2Xo\267\027(f\253\236d?\3479N\232\351\336\020\f\2677\223"
 644      7932 586F 
 644      B717 2866 
 644      AB9E 643F 
 644      E739 4E9A 
 645 069c 45A0 8BEC 	 .ascii "E\240\213\354\351\216\321I\243\215\bJ\247\3424i@\037\0370\037"
 645      E98E D149 
 645      A38D 084A 
 645      A7E2 3469 
 645      401F 1F30 
 646 06b1 A1A3 5D5B 	 .ascii "\241\243][\237\363&\301\217\fr'\307'\004\243D\312\212_\357v%"
 646      9FF3 26C1 
 646      8F0C 7227 
 646      C727 04A3 
 646      44CA 8A5F 
 647 06c8 384D 3A4F 	 .ascii "8M:O\224\366\334\030Z\256,S\307i\322\223/\305\273\265\235\253"
 647      94F6 DC18 
 647      5AAE 2C53 
 647      C769 D293 
 647      2FC5 BBB5 
 648 06de 076B 673F 	 .ascii "\007kg?\247\261P\354B\372\332\331oc\347t\2643\027\331\247\223"
 648      A7B1 50EC 
 648      42FA DAD9 
 648      6F63 E774 
 648      B433 17D9 
 649 06f4 26CE BA72 	 .ascii "&\316\272rUq\205\226O-\264|\022[\002\203O\"\264\254\b\300.\312"
 649      5571 8596 
 649      4F2D B47C 
 649      125B 0283 
 649      4F22 B4AC 
 650 070c F9BB 299B 	 .ascii "\371\273)\233T\2637\371\036!G\300\210\t;\361\t\3001\002\357\220"
 650      54B3 37F9 
 650      1E21 47C0 
 650      8809 3BF1 
 650      09C0 3102 
 651 0722 19F9 9CCA 	 .ascii "\031\371\234\312\310\323\265~G\007eF\017\301\030\341#\373\366"
 651      C8D3 B57E 
 651      4707 6546 
 651      0FC1 18E1 
 651      23FB F6
 652 0735 3F15 806B 	 .ascii "?\025\200k\304\372\f\rV\020\224\252\300\026_\b\n\303\340\026"
 652      C4FA 0C0D 
 652      5610 94AA 
 652      C016 5F08 
 652      0AC3 E016 
 653 0749 501C B148 	 .ascii "P\034\261HF\371Z\205W\313QQj\367*&\023\3415J\204\355\224\353"
 653      46F9 5A85 
 653      57CB 5151 
 653      6AF7 2A26 
 653      13E1 354A 
 654 0761 6A29 A777 	 .ascii "j)\247w\355G_\304\3660x~\312\326\362\t\225wI\232\026\2540\244"
 654      ED47 5FC4 
 654      F630 787E 
GAS LISTING  			page 50


 654      CAD6 F209 
 654      9577 499A 
 655 0779 7C8F CDE5 	 .ascii "|\217\315\345\275\034\fizz\325\003\353\222\241\003\260\227\217"
 655      BD1C 0C69 
 655      7A7A D503 
 655      EB92 A103 
 655      B097 8F
 656 078c 41E4 0C8E 	 .ascii "A\344\f\216\251\001\2703\226*\356fj\251\212\203r\017\305G\226"
 656      A901 B833 
 656      962A EE66 
 656      6AA9 8A83 
 656      720F C547 
 657 07a1 360E C1D8 	 .ascii "6\016\301\330\004r;\211\345\231\302\365:ot\203\350\2203\226\237"
 657      0472 3B89 
 657      E599 C2F5 
 657      3A6F 7483 
 657      E890 3396 
 658 07b6 6F12 C969 	 .ascii "o\022\311i\212\205\0218\344B\260\354\235\210am\016\254\271$7"
 658      8A85 1138 
 658      E442 B0EC 
 658      9D88 616D 
 658      0EAC B924 
 659 07cb 5D47 F6A7 	 .ascii "]G\366\247)"
 659      29
 660 07d0 EE34 3F25 	 .string "\3564?%A\356\235J\313\374\231\037\202q\312\206\004\212\024J1D\307\3134x\363CC\211u\217}6\360\262\3044\210\323\265K\341\334\313\321\220\035\217CV:LV8\262b\343F\364\326\3211\212\344\0342\360E\226\222DrBP\252E\232 \036\211,\f\301\3040\3704I\276\356/C\344\377\350:v3\231\300\244 dX\t\360=\362\277%\270\"\021(\027\004\216c2q\304AE\030Rm8\370\300\001\007\021\342 \321FV&\316:fbr\030\322l\2308w7Lt\3303\361\241c&*\303\220\336\207\211\376&\243\326c4\031]\033\304dt~\177\262l\211\223\021\023\223\021\206\313\005\033ET\005!S\tA\360\275\030\032S\304dr\321F\352\344\311\244\355\357\267e0\f8\231\2704_YR\002_\322"
 660      41EE 9D4A 
 660      CBFC 991F 
 660      8271 CA86 
 660      048A 144A 
 661 08b5 5383 72A6 	 .string "S\203r\246\341)6\004\323p\214\367\272u.A'\251a\255\221\r\234F*\353\323\331\321\247SL\024\031j\262\352\274\245'\253\357\017v\262\272\237\323\240I)y\251{\277\315d\225\311z\r1a~}R/\272~\220\300\204\337\361\202{\261\"\360CN#\221\211L\335e\303D\026\273\311p\306\354\372\013\346\315\344EB\266\264k\265B\310f7\\Bs\273b^E\371\201\301\252n\036\247\321\217\352\346\331p\235\303n\321z\356\323\266\275\261\221\n\360AZ6\373\355\275\314-q\371R\375\177L\215<H\023Id\227\236\371\254\203\fa\267Y\337\255\310|\215\363\020K^g\347\f0<\307\027\341\321\022LXi\035\205~\243\303cF\207\\\331\177\372\233\245\212\233\207\356$q\n\323\212\336\020=\254E^\310\321\020\314o\273Q8\2322"
 661      E129 3604 
 661      D370 8CF7 
 661      BA75 2E41 
 661      27A9 61AD 
 662 099f 3D4E 40E9 	 .ascii "=N@\351g\2502B\247\305\b\017;4\302U\323\b\017\233\n5\225?\314"
 662      67A8 3242 
 662      A7C5 080F 
 662      3B34 C255 
 662      D308 0F9B 
 663 09b8 46F9 8B34 	 .ascii "F\371\2134\254\325`wo\204E\377\257F\250\377\016FX\314\321\006"
 663      ACD5 6077 
 663      6F84 45FF 
 663      AF46 A8FF 
 663      0E46 58CC 
 664 09ce 6584 C54A 	 .ascii "e\204\305JO\271*\034\333\366\231\341\030p\036\216q\303.\034\033"
 664      4FB9 2A1C 
 664      DBF6 99E1 
 664      1870 1E8E 
 664      71C3 2E1C 
 665 09e3 388D 7EC2 	 .ascii "8\215~\302\261\301&\034\363\244'\264\365\354\213\315t\270\207"
 665      B1C1 261C 
 665      F3A4 27B4 
 665      F5EC 8BCD 
 665      74B8 87
 666 09f6 F09A 3A35 	 .ascii "\360\232:5\t\rW\322\364\3547\245Y\352\\\232\210\2554\3138\215"
 666      090D 57D2 
 666      F4EC 37A5 
GAS LISTING  			page 51


 666      59EA 5C9A 
 666      88AD 34CB 
 667 0a0c 7EA4 5966 	 .ascii "~\244Yf#\315\b%M\333[\312\257Mi\372\261\213\311\212'\207\311"
 667      23CD 0825 
 667      4DDB 5BCA 
 667      AF4D 69FA 
 667      B18B C98A 
 668 0a23 45AD 736C 	 .ascii "E\255sl\363\302\301\023\031)\320\317\366\274\025+t\210\236b\242"
 668      F3C2 C113 
 668      1929 D0CF 
 668      F6BC 152B 
 668      7488 9E62 
 669 0a38 6F93 E86D 	 .ascii "o\223\350m\361V\307\243\247%\363\336\326\032\233\343\320\216"
 669      F156 C7A3 
 669      A725 F3DE 
 669      D61A 9BE3 
 669      D08E 
 670 0a4a C9B1 D1D6 	 .ascii "\311\261\321\326\331\032\233\342\020;\335\316\013\362\265O\037"
 670      D91A 9BE2 
 670      103B DDCE 
 670      0BF2 B54F 
 670      1F
 671 0a5b 32BD 60E5 	 .ascii "2\275`\345`\247\2300\247A\326.N\362\202\260\215\027\214d\317"
 671      60A7 9830 
 671      A741 D62E 
 671      4EF2 82B0 
 671      8D17 8C64 
 672 0a70 F57F 6470 	 .ascii "\365\177dp\363\364o]\203=3\370\3577\003\003\234\031\370\3242"
 672      F3F4 6F5D 
 672      833D 33F8 
 672      EF37 0303 
 672      9C19 F8D4 
 673 0a85 ADA9 EBB3 	 .ascii "\255\251\353\2637CI\3005A\013Y\3320N'\340m\227\2479\207\275\342"
 673      3743 49C0 
 673      3541 0B59 
 673      DA30 4E27 
 673      E06D 97A7 
 674 0a9d 1016 735E 	 .ascii "\020\026s^\374pl\224R\331Z\235\365\320\034\263\373\317\365|\220"
 674      FC70 6C94 
 674      52D9 5A9D 
 674      F5D0 1CB3 
 674      FBCF F57C 
 675 0ab2 8E51 7663 	 .ascii "\216Qvc\210\0339NI\323\337s8C\221\177b \362\031N\311?\241D\355"
 675      881B 394E 
 675      49D3 DF73 
 675      3843 917F 
 675      6220 F219 
 676 0acc BA3E A0C2 	 .ascii "\272>\240\302\275J\341\321\256\3567\303\016\316L\332\216|\227"
 676      BD4A E1D1 
 676      AEEE 37C3 
 676      0ECE 4CDA 
 676      8E7C 97
 677 0adf 3831 9D6C 	 .ascii "81\235l\224\366\364c\246\247\377b\260\236\376\024\247A\036\355"
 677      94F6 F463 
 677      A6A7 FF62 
 677      B09E FE14 
 677      A741 1EED 
GAS LISTING  			page 52


 678 0af3 4EF2 F4A7 	 .ascii "N\362\364\247l<}\364\235<\375\326\031\364t}\234\362^\342\211"
 678      6C3C 7DF4 
 678      9D3C FDD6 
 678      19F4 747D 
 678      9CF2 5EE2 
 679 0b08 C777 F5FD 	 .ascii "\307w\365\375o\321\024\237\030\216\316\313\316\366\034G\267C"
 679      6FD1 149F 
 679      188E CECB 
 679      CEF6 1C47 
 679      B743 
 680 0b1a E815 D008 	 .ascii "\350\025\320\b\316\016%q\276u)\244\365\200\210\372\270\220v\326"
 680      CE0E 2571 
 680      BE75 29A4 
 680      F580 88FA 
 680      B890 76D6 
 681 0b2e 8B55 6714 	 .ascii "\213Ug\024\020@\036c\366aiF\220/r\204\033E9v\255`~C\353@\314"
 681      1040 1E63 
 681      F661 6946 
 681      902F 7284 
 681      1B45 3976 
 682 0b49 EBFD 55D3 	 .ascii "\353\375U\323\266\377\364;\207}\346.`\1779\020,\230{\274Xk(\t"
 682      B6FF F43B 
 682      877D E62E 
 682      607F 3910 
 682      2C98 7BBC 
 683 0b61 58EF F1E4 	 .ascii "X\357\361\344.\225\207X]!;\005/E\342sC\200\367T\204\240\303b"
 683      2E95 8758 
 683      5D21 3B05 
 683      2F45 E273 
 683      4380 F754 
 684 0b79 8A90 BDD9 	 .ascii "\212\220\275\331\271\354\321\256g[\303I\3006\347\216Wc\225\002"
 684      B9EC D1AE 
 684      675B C349 
 684      C036 E78E 
 684      5763 9502 
 685 0b8d 6CC0 18CA 	 .ascii "l\300\030\312L\214!\232k\256\306f\365\305\356\347\250;\313\252"
 685      4C8C 219A 
 685      6BAE C666 
 685      F5C5 EEE7 
 685      A83B CBAA 
 686 0ba1 1C79 4DE3 	 .ascii "\034yM\343|\354lsl\205\035\277\026\233\354\020;'\021\033\317"
 686      7CEC 6C73 
 686      6C85 1DBF 
 686      169B EC10 
 686      3B27 111B 
 687 0bb6 E9B6 2AAB 	 .ascii "\351\266*\253\210"
 687      88
 688 0bbb A8D2 F121 	 .string "\250\322\361!\202r\214\f\312\263{\256g(Wmq\350\374\024\362\331\n\313\215\210\326x/`\327\344\355\322[\206\002\332\310\243\300MR=\244\232\236\007\312\301Y\362H\356W(\225\036\177\226\036\177v\230\216\203q\374\3312V6\252\341\032d\026\226,=b\222N\310\203\202\255BVHW.{[\367\200\235\217\r\223\324\335\344_\002\247Hh\211\257\255{?\332\236\252\310oBa\264\235\351\320\321\3243v+\364b\366\262\241/\214D\247[\336\346hb\356\004\303\340u\221j\031\335\346BbE{R\221\326X\231\312?\355\354\216\345\253t\273\031\356t\2253\324\252\234t\023\307&G\227\240\240\030Sm\255\355`71\345\312\240\322\373\364q\212\237\370\337L~\266\334\221\237,[~\266\330\361S*\327\3107\242\257_\330\236\256\247\207\223}\017\304\343\200\004t>\376\206T\372k\300\216\276\207\31621\257UP/"
 688      8272 8C0C 
 688      CAB3 7BAE 
 688      6728 576D 
 688      71E8 FC14 
 689 0cbc 424A FB7D 	 .string "BJ\373}C\366;I&z\001\304\016\362\304\226kS\025\260d2'\201\311\361b\017\311\247\351\257b\263\005\244\f\324L'I\002?(\305|\025\273\307!\366P\023\0334\033\023\364V\266\373\302v\257\342\370%P\\[\256\354\356\202E\244 '\376\233\027\276\324\272\335\n\250 \004O\313f\322\227\263\315N\352H4\345DV\352\302Y\342\263\326\003 "
 689      43F6 3B49 
 689      267A 01C4 
 689      0EF2 C496 
 689      6B53 15B0 
GAS LISTING  			page 53


 690 0d2c 2D9E 754F 	 .string "-\236uOP\006\233\234&\036\016\301\275a\310\220pH\315\375\257\334\353\356S\304\312\324\202&\276\243Y/h\266\303`W4;"
 690      5006 9B9C 
 690      261E 0EC1 
 690      BD61 C890 
 690      7048 CDFD 
 691 0d56 A990 897D 	 .string "\251\220\211}I\016\272\303\316A'\251\374\331\263\243\271L\373\347\373}\375s\347\335\255'6\270p\300W"
 691      490E BAC3 
 691      CE41 27A9 
 691      FCD9 B3A3 
 691      B94C FBE7 
 692 0d78 11C9 7473 	 .string "\021\311ts\231<\346\307\036\213\336\346\004\371^V\351\215?\363B0W\f/A\221J\b\276'f\325\330\3017@\021\337\005v\227C?\357\213/o\207\326wG\037S\230\273\001\261e\300`\223\370'\003v(\255\224\263\335\351\"l\337\371x\243\226g\017G\004\341\353\007\274\242\321r\017#\206E(\251\013\024\3345U*%\332\372\361\037S\025\241\275H(1\361Z\371\330\253\371\250`\357d\350\304+:)\250\233\2566jb\202\3208m\323O\030\240(\2230\353\356\205\362/(\353NVk\327\316\235\315\005\t\254O\323\254S\242)eV\356Uh\367\354l\036s',_\002V\245\304\212\357\272\363X\231\266Xm\003`\r\265\305\352\034"
 692      993C E6C7 
 692      1E8B DEE6 
 692      04F9 5E56 
 692      E98D 3FF3 
 693 0e43 6B84 2D56 	 .ascii "k\204-V\317\256\346J\2015\340\312d\230\306\326k*\333K\362\217"
 693      CFAE E64A 
 693      8135 E0CA 
 693      6498 C6D6 
 693      6B2A DB4B 
 694 0e59 C58E 1769 	 .ascii "\305\216\027i~\347[\362\203\201\244@I\\<\032\346\242\365\345"
 694      7EE7 5BF2 
 694      8381 A440 
 694      495C 3C1A 
 694      E6A2 F5E5 
 695 0e6d 83A1 24E0 	 .ascii "\203\241$\340\204E\253\330\027&F\005\021Q\267\025t\327\276\363"
 695      8445 ABD8 
 695      1726 4605 
 695      1151 B715 
 695      74D7 BEF3 
 696 0e81 77DB BDCA 	 .ascii "w\333\275\312\243\336\206\204\333\366\237\336\305m{\177\214 "
 696      A3DE 8684 
 696      DBF6 9FDE 
 696      C56D 7B7F 
 696      8C20 
 697 0e93 D184 4171 	 .ascii "\321\204Aq\216~\375`8\t#y\335\333\371\272c\033Y\326\275b\256"
 697      8E7E FD60 
 697      3809 2379 
 697      DDDB F9BA 
 697      631B 59D6 
 698 0eaa A0FB 0D11 	 .ascii "\240\373\r\021Z\357[\3567\324?K\027@\245>H\333g\346\341w\007"
 698      5AEF 5BEE 
 698      37D4 3F4B 
 698      1740 A53E 
 698      48DB 67E6 
 699 0ec1 9D87 0F03 	 .ascii "\235\207\017\003R\321Smb\036>l\227\207\253\324aZ\274\265\371"
 699      52D1 536D 
 699      621E 3E6C 
 699      9787 ABD4 
 699      615A BCB5 
 700 0ed6 3E87 5BE5 	 .ascii ">\207[\345\334D\227\024\204\246\350\231\345\220)Q\373\240%:\n"
 700      DC44 9714 
 700      84A6 E899 
 700      E590 2951 
 700      FBA0 253A 
 701 0eeb 48A5 9FD3 	 .ascii "H\245\237\323\301\243v\022M\225\022]\372k\226\202;\226\310\306"
 701      C1A3 7612 
GAS LISTING  			page 54


 701      4D95 125D 
 701      FA6B 9682 
 701      3B96 C8C6 
 702 0eff 938E 6F6D 	 .ascii "\223\216omn\350{\237\343\200d,\347S|\336\376\211\331i\303\307"
 702      6EE8 7B9F 
 702      E380 642C 
 702      E753 7CDE 
 702      FE89 D969 
 703 0f15 34B9 AC38 	 .ascii "4\271\2548\022\355\376\375\306T\005\332a\322\321\026Zhv&\321"
 703      12ED FEFD 
 703      C654 05DA 
 703      61D2 D116 
 703      5A68 7626 
 704 0f2a 99CF 578C 	 .ascii "\231\317W\214\367\271\026\200\037\251\365\363W\236\021\322\325"
 704      F7B9 1680 
 704      1FA9 F5F3 
 704      579E 11D2 
 704      D5
 705 0f3b 3D6A 4BDE 	 .ascii "=jK\336\326s\250\331\351\t_^\242\357b\036\247\377\033x=l\332"
 705      D673 A8D9 
 705      E909 5F5E 
 705      A2EF 621E 
 705      A7FF 1B78 
 706 0f52 1B97 4E0F 	 .ascii "\033\227N\017\247o\027\253&\231j\360Z\356C\326\350\023\304\227"
 706      A76F 17AB 
 706      2699 6AF0 
 706      5AEE 43D6 
 706      E813 C497 
 707 0f66 CA69 E952 	 .ascii "\312i\351R\374\260i\363\223\203\266\371)@*\375\330\374\224\235"
 707      FCB0 69F3 
 707      9383 B6F9 
 707      2940 2AFD 
 707      D8FC 949D 
 708 0f7a AEA7 ABAB 	 .ascii "\256\247\253\253:\323\346\357\017\336\346\247\001\311XV5V\233"
 708      3AD3 E6EF 
 708      0FDE E6A7 
 708      01C9 5856 
 708      3556 9B
 709 0f8d 9FB6 E363 	 .ascii "\237\266\343c\006\336\326Q^{\375\017_\372\025\350\031\221\327"
 709      06DE D651 
 709      5E7B FD0F 
 709      5FFA 15E8 
 709      1991 D7
 710 0fa0 B2A5 2DFE 	 .ascii "\262\245-\376\220\302\327x\366\306\030n\022\303\203\263\255."
 710      90C2 D778 
 710      F6C6 186E 
 710      12C3 83B3 
 710      AD2E 
 711 0fb2 45E2 ACB9 	 .ascii "E\342\254\271\352\370\247 \376o\210\f~\206\243\376\263\\\227"
 711      EAF8 A720 
 711      FE6F 880C 
 711      7E86 A3FE 
 711      B35C 97
 712 0fc5 FF5D 5FC3 	 .ascii "\377]_\303\234\003\204\267\271\267\350\337\t\224\007\235\323"
 712      9C03 84B7 
 712      B9B7 E8DF 
 712      0994 079D 
GAS LISTING  			page 55


 712      D3
 713 0fd6 2B80 5AB4 	 .ascii "+\200Z\2644\335;\036\\f\267\237\031Ip\226\375L\235\372S\344\331"
 713      34DD 3B1E 
 713      5C66 B79F 
 713      1949 7096 
 713      FD4C 9DFA 
 714 0fed 9EE3 DDF2 	 .ascii "\236\343\335\362\217\227+\340\374\335\255\337\004\322\005@\304"
 714      8F97 2BE0 
 714      FCDD ADDF 
 714      04D2 0540 
 714      C4
 715 0ffe 3E4B      	 .ascii ">K"
 716 1000 6FA7 FFD5 	 .string "o\247\377\325Dt\305\323L\326r\241\357?\016]\342\320\3527\331j\264\002\247\233vn}\217FJ\332u\272d\213\361\347+\313W\200Q\007\310\300,\374/*\351\344Hs\335\235d\360\366\221\201s\371[\326\330\325s\320\255\377O*\323\001p\222\270\241\037YU5%\260\346\321\305K\036\257\017\2566\277\252\226\260\364p\250\376g\r\217/\017TU\327\245\206\032\036[\272zY\225\177\252o\361\232`pe\225\277:_\303>\""
 716      4474 C5D3 
 716      4CD6 72A1 
 716      EF3F 0E5D 
 716      E2D0 EA37 
 717 1088 97AC 5CF3 	 .ascii "\227\254\\\363\330\352*\277_\303\326d\255\252_\333\020xd\325"
 717      D8EA 2ABF 
 717      5FC3 D664 
 717      ADAA 5FDB 
 717      1078 64D5 
 718 109c EAFA 253F 	 .ascii "\352\372%?\256\362O\367-\017\256~4\\\345\2573)\327L\205\3459"
 718      AEF2 4FF7 
 718      2D0F AE7E 
 718      345C E5AF 
 718      3329 D74C 
 719 10b3 A195 4BEA 	 .ascii "\241\225K\352C\026\032\020N\021$\322\036\255\177B\264\257J[\262"
 719      4316 1A10 
 719      4E11 24D2 
 719      1EAD 7F42 
 719      B4AF 4A5B 
 720 10c8 E671 F9E9 	 .ascii "\346q\371\351^\276d\331\217\335\2538)\017\361\342\0134\004\353"
 720      5EBE 64D9 
 720      8FDD AB38 
 720      290F F1E2 
 720      0B34 04EB 
 721 10dc D784 56B3 	 .ascii "\327\204V\263\377\003\365\342\037&"
 721      FF03 F5E2 
 721      1F26 
 722               	 .text
 723               	 .section .gnu.lto_TickServer.5eb0d06daa7ae5d4,"",@progbits
 724 0000 789C AD59 	 .ascii "x\234\255Y}lS\327\025\277\367=\177\333\211?\022\307q\222\001"
 724      7D6C 53D7 
 724      15BF F73D 
 724      7FDB 893F 
 724      12C7 7192 
 725 0015 0D05 5242 	 .ascii "\r\005RB\202\006\021M\031B\023\342\217RQ\025\025\241Db(J\023"
 725      8206 114D 
 725      1942 13E2 
 725      8F52 5115 
 725      15A1 4462 
 726 002c AC25 9891 	 .ascii "\254%\230\2212(\313\206\210\023\247R\306j\344M\223\226\322M\205"
 726      3228 CB86 
 726      8813 A752 
 726      C66A E44D 
 726      9396 D24D 
GAS LISTING  			page 56


 727 0041 B22D AC69 	 .ascii "\262-\254i\201\252\322B\004\035Aj;\202\324\026\244IK\263\002"
 727      81AA D242 
 727      041D 416A 
 727      3B82 D416 
 727      A449 4BB3 
 728 0056 9956 9616 	 .ascii "\231V\226\026\266\300>42&%;\347~\371\331q\354\007\305\177\234"
 728      B6C0 3E34 
 728      3226 253B 
 728      E77E F9D9 
 728      71EC 07C5 
 729 006c 773F CEEF 	 .ascii "w?\316\357\234\337\273\367\334s\357\273\326\210F2\177M\224\220"
 729      9CDF BBF7 
 729      DC73 EFBB 
 729      D688 4632 
 729      7F4D 9490 
 730 0080 990A 42F6 	 .ascii "\231\nB\366A\231V\020\252%?&\244\333\241\3212^\3205K\3372\022"
 730      4199 5610 
 730      AA25 3F26 
 730      A4DB A1D1 
 730      325E D035 
 731 0098 7359 517A 	 .ascii "sYQz,4\314\233\255\232\2155\333Y\263\215\332y\263]s\374\241\004"
 731      2C34 CC9B 
 731      AD9A 8D35 
 731      DB59 B38D 
 731      DA79 B35D 
 732 00b0 9A9D E79F 	 .ascii "\232\235\347\237\204f\007u\362f\247Vp\254\036\232]w\203\320\354"
 732      8466 0775 
 732      F266 A756 
 732      70AC 1E9A 
 732      5D77 83D0 
 733 00c5 1235 37AB 	 .ascii "\02257\253\271E\315\303j\036Q\013\262Z\201\026`\346\n\231\271"
 733      B945 CDC3 
 733      6A1E 510B 
 733      B25A 8116 
 733      60E6 0A99 
 734 00da 422D C07C 	 .ascii "B-\300|z\231O\257\250\371X\315'j~V\363k\001D\270\212\020\355"
 734      7A99 4FAF 
 734      A8F9 58CD 
 734      276A 7E56 
 734      F36B 0144 
 735 00f2 09D0 624E 	 .ascii "\t\320bN\243H\026\212i\220\027\202Z(^\005\212%\211\245\240X"
 735      A348 168A 
 735      6990 1782 
 735      5A28 5E05 
 735      8A25 89A5 
 736 0108 A285 98F3 	 .string "\242\205\230\363R\346<DK\271R\251|\3510\037\224\213\2162M\177\345\367\0044\313{\355\240YN)\266\023J\2724\335b\265\331\035N\227\333SP\350\365\371\003E\305\301\222Pi\270\254\234v}\213\342\200;+\311\361X\354'\023\037\\HT\275|x\"\226\214\315\314v\321(\205\271\251\240$B\311v\250P\037{h\031\363\305\241\261\303?\275H\0216\313a\265Ya\0354\0237\362\336\324\264\336kp\251k\344\233)\254\203ci6\227#\257\337\371B3\262\265hd\2639\266#\303S_\330z/\247y\335\226\325k\007\245s\031\217i/\307RX\253F\232M\271M\216\274zg\202\032\2416\215\264\230\204\036\275S\025\213\217\304\246gg\355\f\327f\022\367\363\f\334\236|\270\323\332\310\304\354\354g7><v\231V\034\246N\322J\217\323J\342\202\347\txz\341\371+x\372H\224\332\375P\031\204J"
 736      52E6 3C44 
 736      4BB9 52A9 
 736      7CE9 301F 
 736      948B 8E32 
 737 0209 2A7A 118A 	 .string "*z\021\212b\241\036\204\n\taK\005\226\026\242\366\"\024\217\241\250D\261\030\305\343(\226\240X\212b\031\300\337\006x\025V\236@\261\034ZNCK5VV\240\250\201\226w\240\245\026\236\003\360\\\t\215\226U\202\326jtY\207.\327`\251\036\305Z\024\353P\254G\261\001\215lD\361\264"
 737      62A1 1E84 
 737      0A09 614B 
 737      0596 16A2 
 737      F622 148F 
 738 0266 6DC2 E667 	 .ascii "m\302\346g\020\264\031"
 738      10B4 19
GAS LISTING  			page 57


 739 026d 9B9F 05E1 	 .string "\233\237\005\341x\016K[\260\364<\226\266bi\033\3525\240\330\216m;P4\241hF\321\202\242\025\305N\024\021\024m\302C;\202v\241\207\335X\332\203b\277\350{\t+\007\260\257\023K\007\021w\bE\017\025\032q,\374\006\n\360\263\222^\230\326E\004g\021~\r a\2757R\r\036\372G\244gt\f\326p+}\227ZI;u\276F\216v\307b\276(u\376\200\334\217\365a\311\305\027!N\275KL\371G$\336\247K\214\013`\330\351\244\254\247g\023\3570c\251\035\237\237\220\370D\377\320I\312a\204(uwD\254\245(\365p\265\243C\337\316\246\245\245\264\300\377\331\376I\371B\212C\201R/\344\013\0249\024\022\311\246@\306r#\325\t$E\034\227\251\370\377>\373\207]\214\036\217ZB\244w`\356k\247^\346\357~\374\024p?\317\306\302\217~\340\327\004\253\274\206\274\205\305\256(\365vP\r"
 739      780E 4B5B 
 739      B0F4 3C96 
 739      B662 691B 
 739      EA35 A0D8 
 740 036e C645 334A 	 .string "\306E3JzF\2529\212\333\006,\263\366\247\351\311\204]\232\013\254 \3250\303\3745b\253\301\022\250!a\253\242\256\361\334C'\250\232\232s\361\005\322@\021\330\300n=\206\335\227\310\373\223\335n\325\307:\214\244\032\251\205|\270X\277Eb\257\324s-\331n\305v\026,\267\022\365\322@\261\351`9\247KL\020`,XV\316\341\023d\355\351|l\344/~\235\315\351\355\304z\256XM\336\304auG\251\017\374\323\3141\331)\306\001[|T\031\262\363\027\200\261\271p\355E\3511$G\307\301\310\364\376-E&\224ep\034d\300\305\310\214M%V\230$CSd\260\360\t\351\23587t\214\312\321U\343\346\217\bo\020UQ\032\340\341\376\336\320/\347jB\274[\322W\305\357\206\316k\222w\205\322+\212\b\022QZ\314\"k\364\256+\223\2643;iM0\251\340\366/\f\235\311J\303\2608\371"
 740      7A46 AA39 
 740      8ADB 062C 
 740      B3F6 A7E9 
 740      C984 5D9A 
 741 046e 3945 948C 	 .ascii "9E\224\214\217\3753Q*\031-\254&\313a#\311\356I\2160\202\222."
 741      8FFD 3351 
 741      2A19 2DAC 
 741      26CB 6123 
 741      C9EE 498E 
 742 0486 0959 940B 	 .ascii "\tY\224\013b\021\220\364\371Z\b(\343\\\271\310}'\243r\246P\252"
 742      6211 90F4 
 742      F95A 0828 
 742      E35C B9C8 
 742      7D27 A372 
 743 049d 3C96 CBAA 	 .ascii "<\226\313\252\325@\344L@B*sAlF\"\333\225\227v\236v%\0217\271"
 743      D540 E44C 
 743      4042 2A73 
 743      416C 4622 
 743      DB95 9776 
 744 04b7 A931 2257 	 .ascii "\2511\"WJ\244\312\342\\V\355\006\"w\313%\344\361\\\020\207\221"
 744      4AA4 CAE2 
 744      5C56 ED06 
 744      2277 CB25 
 744      E4F1 5C10 
 745 04cd C82F 542E 	 .ascii "\310/T.Z\f0#\023\017\371\234%\266\361\344\013ReI.\263N\003\223"
 745      5A0C 3023 
 745      130F F99C 
 745      25B6 F1E4 
 745      0B52 6549 
 746 04e6 6444 4296 	 .ascii "dDB\226\346\202\270\214L\376\253\230,\001\230\221I\001y\223-"
 746      E682 B88C 
 746      4CFE AB98 
 746      2C01 9891 
 746      4901 7993 
 747 04fb C6        	 .ascii "\306"
 748 04fc 1FC6 DFBD 	 .string "\037\306\337\275~QW)\026\367q\276w\363\375\032\323\355y\231n\227\3119\036%\020\354\327X\336|\233\345\315e\234\342\331\177%jxG;\2552;\325I\257\204<af\252\031\347\275\022\262\034\034\0010\215\322iFi9\267>f\240Tmz\250\025\245\025f\206:\235R\r8\002`\032\245w\030\245\032f}*~\341\372U\253\324\256\025\203\3076s\336\264\022Z\321\215\245\213M\343\373\177\355.P]\254}\306x\264n\204=\364Ga\035\364nv\277J\325\270\240\242\275{V\374h\227\021\340%\037xtf\370\323\f@W\232a\0379a\343\206\177fSo\227\313\260\237\374X\347\206\377\230\001H7\034 \277\255\344[\312\314\030U\207#^\210M^\377\263\216a\207\360\b\237\366\354g\bL\\Y\316\020\230\337\307\361\220rmNz\267\2474K\tK\361\230\223\247\377\223X \331>m\346\270\2221_\233"
 748      7E51 5729 
 748      16F7 71BE 
 748      77F3 FD1A 
 748      D3ED 7999 
 749 05fd C6B6 AA45 	 .string "\306\266\252EDL\260\212\205g\240\027\031Y\346\260\tFD\316"
 749      444C B08A 
 749      8567 A017 
 749      1959 E6B0 
 749      0946 44CE 
 750 0612 A528 2DE1 	 .string "\245(-\341q\327wO\315\364f\223){*\036\221\220g\001\225\335Y(\"\302\033\224\242\264T,\326{\211\n\t}\316\344b5x\333\002\250\274\336\266(oc\006o\317\233\\\207\006o[\001\225\327\333V\345m\372^\242LB\2671o\005\342"
 750      71D7 774F 
 750      CDF4 6693 
 750      297B 2A1E 
 750      9190 6701 
 751 0661 F78D B91E 	 .ascii "\367\215\271\036\335\302#\004\316H\331\374a\003\226d\310\214"
GAS LISTING  			page 58


 751      DDC2 2304 
 751      CE48 D9FC 
 751      6103 9664 
 751      C88C 
 752 0673 F7DD 5713 	 .ascii "\367\335W\023\325\220\317\274\307\254\371\006q\350\350=\366\345"
 752      D590 CFBC 
 752      C7AC F906 
 752      71E8 E83D 
 752      F6E5 
 753 0685 9379 A297 	 .ascii "\223y\242\227\022u@\2715\264o\2162\034\fxn\212\322\260\\sE\344"
 753      1275 40B9 
 753      35B4 6F8E 
 753      321C 0C78 
 753      6E8A D2B0 
 754 069d DF64 DE35 	 .ascii "\337d\3365w\356\306W"
 754      77EE C657 
 755 06a5 5F73 77F2 	 .string "_sw\362\256\271Pj\315\365\317\244\326\334\252\207Xs\253\0016\317\232\253\203\336\274k\256N\256\271\333\361\311\033\307\225\3315,\033g\303\032\346i\215|\213\333\361/o\250\004Z\317\266\234<\320\372\024\364\357)\350Z\2665\344\201\256M\005\337\254\n\276u\217,\266\327)\363'S\346\327?\262\330^\257b{\346\001b{6ol#\341\3767\216\250X\332\220+\265\310OLv\020\027\033\2248\210\027\314\013*\024o\260A\034\r\002\322\325\306\\\256\274\006Wg\274i\256^\234\027\344\023\2566\3125[\314\017i\220=\3378\3625\351w\273\311\235a\364J\372+\272\363\034\347\301\262H\236\006g;Ln\f\346\235\331\204\263\035b\362N\244\2345\231\334\027\314;\223W\034Mb\31338k6\371\005`\336\231\314-\315r\372\202\362[\254\377\327G\324\267X\213\311\b\035O\252\017\253\326\\\020\231\036\323\277\305Z"
 755      AEB9 506A 
 755      CDF5 CFA4 
 755      D6DC AA87 
 755      5873 AB01 
 756 07a6 45D4 AF11 	 .ascii "E\324\257\021\222\335\240\237\177\213y\245\312N\223\361;~\267"
 756      92DD A09F 
 756      7F8B 79A5 
 756      CA4E 93F1 
 756      3B7E B7
 757 07b9 4842 22B9 	 .ascii "HB\"\271 >#\221\357*/\2002\022\t\221O\027\314\273\r\335\376"
 757      203E 2391 
 757      EF2A 2F80 
 757      3212 0991 
 757      4F17 CCBB 
 758 07d0 FCAA 2EBF 	 .string "\374\252.\2778\036v\033zm\2705\333\227\275!\301\224\030\266\241\001\f\b\316\264\355\201\266!\216i\007X\3726\364\035\331\265\013zER\317`c\330\206v\251\243\337\331\201#a\t\335\235\226v\237\312\235\325\303\363\277-XRY\375\322\200\372\b\337\223\317\274\307\254\371=*\253\277\376T\236A7d\365\223\303\035\331\2562\322\263z\326\370\030\274\371\325\343c0o|\204\r\3611\230\212\217\375\017\021\037/\001l\236\3708"
 758      381E 761B 
 758      7A6D B835 
 758      DB97 BD21 
 758      C194 18B6 
 759 0856 BD79 E3E3 	 .ascii "\275y\343\343@*>\006S\361\321\371\310\342\243SM\312)3\2232\336"
 759      402A 3E06 
 759      53F1 D1F9 
 759      C8E2 A353 
 759      4DCA 2933 
 760 086d 7F2A 351E 	 .ascii "\177*5\036\007\315n\265\230@\323\357\274\362l\265\007E\336Q\251"
 760      07CD 6EB5 
 760      9840 D3EF 
 760      BCF2 6CB5 
 760      0745 DE51 
 761 0882 EA90 D9AD 	 .ascii "\352\220\331\2556\351Ms\325\224w\253=\304\261\215\360\341\300"
 761      36E9 4D73 
 761      D594 77AB 
 761      3DC4 B18D 
 761      F0E1 C0
 762 0895 73F5 D9E9 	 .ascii "s\365\331\351SG\352\323\2148\347\275X\364\253\230a\267\234\354"
 762      5347 EAD3 
 762      8C38 E7BD 
 762      58F4 AB98 
 762      61B7 9CEC 
 763 08a9 BA70 F8AD 	 .ascii "\272p\370\255\254\367tn1\216\352\236.,\357\270G\373'\023\273"
GAS LISTING  			page 59


 763      ACF7 746E 
 763      318E EA9E 
 763      2E2C EFB8 
 763      47FB 2713 
 764 08be E53D 7E0F 	 .ascii "\345=~\017}\240 \343\2408E\240XeY\257\377s\330B\270\344TF\222"
 764      7DA0 20E3 
 764      A038 45A0 
 764      5865 59AF 
 764      FF73 D842 
 765 08d7 1F73 4E57 	 .ascii "\037sNW\274\322\270\327\034!v\215lU\240\264\013}n\274\034\377"
 765      BCD2 B8D7 
 765      1C21 768D 
 765      6C55 A0B4 
 765      0B7D 6EBC 
 766 08ed EBC0 21BA 	 .ascii "\353\300!\2724|0\333\037\b\206\013\325\253\244{\342\362\260E"
 766      347C 30DB 
 766      1F08 860B 
 766      D5AB A47B 
 766      E2F2 B045 
 767 0901 5DF4 B35F 	 .ascii "]\364\263_\003\370\354\265\343\265h\270\266ve\353\376\335/\264"
 767      03F8 ECB5 
 767      E3B5 68B8 
 767      B676 65EB 
 767      FEDD 2FB4 
 768 0915 EC6D 8EEC 	 .ascii "\354m\216\354K\225j[\210_U\232\366\265\265\354\252\255\373\372"
 768      4B95 6A5B 
 768      885F 559A 
 768      F6B5 B5EC 
 768      AAAD FBFA 
 769 0929 9C96 55EE 	 .ascii "\234\226U\356\216hs\347\316\275m\255\265u\253\035\255m\221\310"
 769      8E68 73E7 
 769      CEBD 6DAD 
 769      B575 AB1D 
 769      AD6D 91C8 
 770 093d F76A EBEA 	 .ascii "\367j\353\352\f\215kh\207\22553\331\311\344\367\377\017>\277"
 770      0C8D 6B68 
 770      8795 3533 
 770      D9C9 E4F7 
 770      FF0F 3EBF 
 771 0951 BD25      	 .ascii "\275%"
 772               	 .text
 773               	 .section .gnu.lto_AddPlayer.5eb0d06daa7ae5d4,"",@progbits
 774 0000 789C 5D8F 	 .string "x\234]\2171K\003A\020\205\337\333\315%WZ\032l\354\305\263\020l\374\001\376\0029A\033M\274\3428\341\020mL\221=#\222JRXH\254\322\212h'Z\231?\020\305\322.\225\245\215]\2328s\227Sq`w\206\331y\337\27450\370\037u9\033\004\026$\323\202\246\367\002d\276!\265"
 774      314B 0341 
 774      1085 DFDB 
 774      CD25 575A 
 774      1A6C ECC5 
 775 005f D136 6CEF 	 .string "\3216l\3570\237\2757\303\361tz\327\377\352^rdkdJ!&\204\225KG<\2349\327[\004\242\\\020\312\255\224-\032\315v\204\323\317\316\363\307\300kr@\0171M\2542iO:q\331\263-\234\bm\031\267Nb3\241II\031\375k\372\025\347\303\371B"
 775      309F BD37 
 775      C3F1 747A 
 775      D7FF EA5E 
 775      7264 6B64 
 776 00b5 B430 715D 	 .ascii "\2640q]7\227\320F,|\nd\233\211\326\232*k\342\316\313\327<^=\\"
 776      3797 D046 
 776      2C7C 0A64 
 776      9B89 D69A 
 776      2A6B E2CE 
GAS LISTING  			page 60


 777 00cf AC17 BA25 	 .ascii "\254\027\272%\334(?LX\235\255Z\225U\327\350gNY\265\037\252\237"
 777      DC28 3F4C 
 777      589D AD5A 
 777      9555 D7E8 
 777      674E 59B5 
 778 00e6 B224 F933 	 .ascii "\262$\3713z\351e\277X\227\277U\265~C6~\177\252\224\316\212\b"
 778      7AE9 65BF 
 778      5897 BF55 
 778      B57E 4336 
 778      7E7F AA94 
 779 00fd 452F BF57 	 .ascii "E/\277WQ=\bV\232\307\007{\215\303\335\350\350\267\n\032\370\006"
 779      513D 0856 
 779      9AC7 077B 
 779      8DC3 DDE8 
 779      E8B7 0A1A 
 780 0113 CED4 55A3 	 .ascii "\316\324U\243"
 781               	 .text
 782               	 .section .gnu.lto_RemovePlayer.5eb0d06daa7ae5d4,"",@progbits
 783 0000 789C 6362 	 .string "x\234cb`b@\007\222@|\023\210\245\201\230\221\231\201\221i\3029\006\206F\016&FF\020\203\201\221\241\236\211\261>\206\021\254v=\323\201\007\377\377\257\333\361\271\243\205\361\0343+#c\001#\320\304\034\260$+CKC\303\004\005\006\206407\034H\202\f\210`d\002\321\314g\031\232\3365\377~\266\2215\205q!#+C\026#S\026#P\tPx\307\007>\210\2306\303\252\006 \b\317ad\324eX\003b\032\34702\315f\230\325\330\320 \220\303\310\\\315\360\253\241\003\304b)"
 783      6062 4007 
 783      9240 7C13 
 783      88A5 8198 
 783      9199 8191 
 784 009e 6965 8866 	 .string "ie\210f\0042\301\356\002\232\006\365M*\304\241`90\363\"C\343\203\027;Y 6\300@8P\016\350(\220&I==\375\224\322\334\244\344\242\304\264\022\004K/\231\001"
 784      0432 C1EE 
 784      029A 06F5 
 784      4D2A C4A1 
 784      6039 30F3 
 785 00d7 6D82 40A2 	 .ascii "m\202@\242"
 786               	 .text
 787               	 .section .gnu.lto_DumpRemain.5eb0d06daa7ae5d4,"",@progbits
 788 0000 789C 5D50 	 .string "x\234]P\261J\003A\024\234\331\335\213\321\244H+\006\021+\253\013\202\340\247$\240M\314\031P.\"A+\213\333\323\004\304B\016+Q\004\203\037\340\007\230B\210\240\026*\202\037p\235\377 h|\0335\221<\330\235\367v\337\233\231]\005\205\361X\2245C`A\220\036\250\222g \316*e\272\263\260S\372\255\004\233\3274\356\230\206t\b\"R\3320Z\245\243\340<:\326\236\244\355\233\343L\373(\265\211\375\352G\f)jE\242N\254H\301\302"
 788      B14A 0341 
 788      149C D9DD 
 788      8BD1 A448 
 788      2B06 112B 
 789 008f D498 836B 	 .ascii "\324\230\203ku\233\366\373\335\213\373\313O\0263\032\001;B'\341"
 789      759B F6FB 
 789      DD8B FBCB 
 789      4F16 331A 
 789      013B 4227 
 790 00a4 A165 6D32 	 .ascii "\241em2\0077/Q\226\275\227C\205J@?a\377\361T\324\002^\211\347"
 790      0737 2F51 
 790      96BD 9743 
 790      854A 403F 
 790      61FF F154 
 791 00bd 4DEA 739C 	 .ascii "M\352s\234\305\326\026B\352=|\330C\227\231\355\301\240\0235\277"
 791      C5D6 1642 
 791      EA3D 7CD8 
 791      4397 99ED 
 791      C1A0 1335 
 792 00d2 620F B87B 	 .ascii "b\017\270{\217'\207C\356J\3777S\221\2625\241_p\220\375i\002\206"
 792      8F27 8743 
 792      EE4A FF37 
 792      5391 B235 
 792      A15F 7090 
 793 00ea 745E 9D03 	 .ascii "t^\235\003>\204\314\374u\033\347\345U~kDQ\226\256^\316=r\332"
GAS LISTING  			page 61


 793      3E84 CCFC 
 793      751B E7E5 
 793      557E 6B44 
 793      5196 AE5E 
 794 0102 F74B C16E 	 .ascii "\367K\301nc\255\326\254\326wF\231_C\276\326\b\232\353\215\352"
 794      63AD D6AC 
 794      D677 4699 
 794      5F43 BED6 
 794      089A EB8D 
 795 0117 C696 BFB4 	 .ascii "\306\226\277\264\374\r\353\267P\276"
 795      FC0D EBB7 
 795      50BE 
 796               	 .text
 797               	 .section .gnu.lto_GotData.5eb0d06daa7ae5d4,"",@progbits
 798 0000 789C AD19 	 .ascii "x\234\255\031kpT\325\371\234{\367\225l\222\315\373\235\220\027"
 798      6B70 54D5 
 798      F99C 7BF7 
 798      956C 92CD 
 798      FB9D 9017 
 799 0014 0FB1 0641 	 .ascii "\017\261\006A\302#\210\210v\2462\265u\212\303\030[\254\002\311"
 799      C223 8888 
 799      76A6 32B5 
 799      758A C318 
 799      5BAC 02C9 
 800 0028 0A71 C10C 	 .ascii "\nq\301\fRQ\030\313\r\t%\"$\370\250\006D\t(P\021\n1\245>B\232"
 800      5251 18CB 
 800      0D09 2522 
 800      24F8 A806 
 800      4409 2850 
 801 0043 D0E9 8828 	 .ascii "\320\351\210(\"\030m\023\260v[[q\204\":\235\004AI\277\357\274"
 801      2218 6D13 
 801      B076 5B5B 
 801      7184 223A 
 801      9D04 4149 
 802 005a F6DE BB9B 	 .ascii "\366\336\273\233du\330\037\337=\367|\357\327\271\347\234\325"
 802      6475 D81F 
 802      DF3D F77C 
 802      EFD7 B9E7 
 802      9CD5 
 803 006c 8846 ECBF 	 .ascii "\210F\354\277X\230z\274\204\220\3450\246\243\t\3256\036#\244"
 803      5898 7ABC 
 803      8490 E530 
 803      A6A3 09D5 
 803      361E 23A4 
 804 0080 D6A3 D122 	 .ascii "\326\243\321\">\3205G\303hb\304z\020\30694\347\007\351\360\346"
 804      3ED0 3547 
 804      C368 62C4 
 804      7A10 C639 
 804      34E7 07E9 
 805 0096 3B38 19DE 	 .ascii ";8\031\336\234\232\253n\f\274\2717\214\2027\027us\0267\365\361"
 805      9C9A AB6E 
 805      0CBC B937 
 805      8C82 3717 
 805      7573 1637 
 806 00ac 8147 8B39 	 .ascii "\201G\2139\237\006\370\270\226)\200\217\321}k\262\211\341\211"
 806      9F06 F8B8 
 806      9629 808F 
GAS LISTING  			page 62


 806      D17D 6BB2 
 806      89E1 89
 807 00bf 65D0 CBC7 	 .ascii "e\320\313\307\222\324+\007qZ<\343\3611\236x\215i\362$\240VO\202"
 807      92D4 2B07 
 807      715A 3CE3 
 807      F131 9E78 
 807      8D69 F224 
 808 00d7 24F2 C515 	 .ascii "$\362\305\025\036r\301D\"\203I\ff0\230\311`\026\2039\ff3\230"
 808      1E72 C144 
 808      2283 490C 
 808      6630 98C9 
 808      6016 8339 
 809 00ef CB60 1E83 	 .ascii "\313`\036\203\371\f\026p\t\264\220\213L\242i|\220\254\2450\027"
 809      F90C 1670 
 809      09B4 908B 
 809      4CA2 697C 
 809      90AC A530 
 810 0104 5399 8B29 	 .ascii "S\231\213)4\225O\247r\374\3144-y\375a\002\370\364z7\340\323%"
 810      3495 4FA7 
 810      72FC CC34 
 810      2D79 FD61 
 810      02F8 F47A 
 811 011c 7F86 1C64 	 .ascii "\177\206\034d\312A\226\034d\323\034>\310\2213\271r\220'\007\371"
 811      CA41 961C 
 811      64D3 1C3E 
 811      C891 33B9 
 811      7290 2707 
 812 0131 5A21 06D8 	 .ascii "Z!\006\3303\202C9] \007\205<\037\207<E\232\316\365\0273\375\305"
 812      3382 4339 
 812      5D20 0785 
 812      3C1F 873C 
 812      459A CEF5 
 813 0149 5AC9 1BF9 	 .ascii "Z\311\033\371\3606\352\257\343\340\255D\033iz\033IGq\346Q\224"
 813      F036 EAAF 
 813      E3E0 AD44 
 813      1B69 7A1B 
 813      4947 71E6 
 814 015f E280 50B2 	 .ascii "\342\200P\262J\323\035N\227\333\023\023\353\215\213O\360%&%\247"
 814      4AD3 1D4E 
 814      97DB 1313 
 814      EB8D 8B4F 
 814      F025 2625 
 815 0174 A4A6 A567 	 .ascii "\244\246\245gdfe\347\344\346\345\217((,*.\0319\212\256\232K\261"
 815      6466 65E7 
 815      E4E6 E58F 
 815      2828 2C2A 
 815      2E19 398A 
 816 018c 3612 8BC8 	 .ascii "6\022\213\3106\303x\"\270\346\323\306\033"
 816      36C3 7822 
 816      B8E6 D3C6 
 816      1B
 817 0199 EAD7 058D 	 .string "\352\327\005\215\215\306\345\201U4@\241\214r)\361S\362\013x\241\036\366\320\250\265\2568k\327\251\276\363\332\232\267C\254\272F\306\204X\0239+Ve\r\r\343}u\340\002\265\251-\213N\255\321\360T\027E\266\001\316V\376\375\330fD\351\344\263}\307i\275\0212\324\241\221\037F\311\372\\_\017]cbuj\344G\021\343\023\316\332\332w\\3\263\2724\362\343(Y\333\372\202\026\255n\215\374$J\326\003\341\276\316\216\322\327/\301W\033\353\317\243a\355z\242k\323@\320\316\372\313\350X\215\316\215\206Ak[\214o\006\006t\306xO\224\214\037\332\031\347G\233\323pc+\243d=\260\253\327\316\272p8\326}Z\327g\003\003[Z\017\267\\\246W\275B)({\231\026\021T\272\027\236:<[\341\351\020O'<\333\340\351\022O\037\255\2414\211\004\250'\031f\366\301L*\274\220\fxy\001^\262\341y"
 817      8DC6 E581 
 817      5534 40A1 
 817      8C72 29F1 
 817      53F2 0B78 
 818 029a 9E39 3899 	 .string "\23698\231'd\346\303s\033<\213aR/A\314h"
GAS LISTING  			page 63


 818      2764 E6C3 
 818      731B 3C8B 
 818      6152 2F41 
 818      CC68 00
 819 02ad 3163 114C 	 .string "1c\021L\0204\327!n\242PR\206\362'!\230\214\323S\205-\345\202v\232\260\371z@j\323\001\270g\240\320\231\202\373&\234\276\031\247o\301\351Y"
 819      1034 D721 
 819      6EA2 5052 
 819      86F2 2721 
 819      988C D353 
 820 02df 626F 4561 	 .string "boEa\267!\230\215`\016\202\n\304\336\211\330\271\370z7\202\371\b\252\020,Dp\037\202\305\b\226 \270\0379\226\342\350\001\034=\210`9\nX\t\252;@\265\201\341\334\001\203Z\034\354\202\301j\034\274\004\203F\212\324MT\370\360$\276\352O#\214y\206\215\233\021\325\t\250\315\214\362y\204\236\255\f\2660\270\215\301\355\214x\207\314\333~\366\332\312 d\327I\352\rcc\001\307qM<K<\202<@\004K\004~w"
 820      B721 988D 
 820      600E 820A 
 820      C4DE 89D8 
 820      B9F8 7A37 
 821 0367 6C70 930A 	 .string "lp\223\n\252\301C\177\227\254~\347\302'\2159\225\364\020u\222g\311\346Z\303H\204\232ZI.\032\r8r\327Plr,*7+\245j\352#\004\330\316\325}r\366\237n\316WM\223\344\364\305\272\335TN&\243\024\370\335\005\013\3175d\017\016\037\tPo\r\325\201\301\\\236G\310\352\256\261\234\213\033\016\274l6\270\251\275F\316\243+\312\f\304mn_(qm\002\347\220\022+ 0\360\rD\377^k>\323\230\247Bt\200\205\202\363\301Oy\354T\036\307\361\317\f\212\213#r\244C\203\303\360=R\027\334\333\376\032x\370&\3630Cq\305\373)\357\271"
 821      AAC1 437F 
 821      97AC 7EE7 
 821      C227 8D39 
 821      95F4 1075 
 822 041b 4D60 8138 	 .string "M`\2018\262\337\315\251\242Q\001\222\270\360\327\332\003Rv\266\"\367\371\251&d'\242\353\032'\341\316"
 822      B2DF CDA9 
 822      A251 0192 
 822      B8F0 D7DA 
 822      0352 76B6 
 823 043d 21D3 77B2 	 .string "!\323w\262\347\213\306L\311\233s5\031\013\321"
 823      E78B C64C 
 823      C99B 7335 
 823      190B D100 
 824 044d D5A0 C20B 	 .ascii "\325\240\302\013\321DU.&\243J-\ro\221\277\234\256\365*\026$\261"
 824      D144 552E 
 824      26A3 4A2D 
 824      0D6F 91BF 
 824      9CAE F52A 
 825 0464 2C1A 1510 	 .ascii ",\032\025\020\3167\213u$;\364x\377\265\312\256\b\204N\262+"
 825      CE37 8B75 
 825      243B F478 
 825      FFB5 CAAE 
 825      0884 4EB2 
 826 0479 5647 FBDF 	 .string "VG\373\337n\257\224ty\203\304\306d\377^f\177\036\232R\177\366\3203\375S\024/\352p\216\263\350p\221\027\235\230\317#\315}\215\245\2220?\232\222\305\320:9\007!\212,\311\317\232\007\203\237\317j\007;;Yjss\217\326\004Ob\005\332XS\374\242\322\220/\225?<\350^\032\317\342)\231E\023O\272\237W\034P\211\\\177\324\376\242&\375(\036\274\220\316\324\375K\325[\tP\262\311Y|\346j\262\033\273*~\230\\\003\243\364\313\243R\372a\377qjM\2769\253\0254\206\\\214\321\217\222\372\340\331\366D\225\373\rd}m\275\321u\251\177L\200f\"\335\275\"\022\002\361\321r\230W\235x\257pY \277RH\312\220.\213\276X\362\222\256\277\003[Q\256\214\361b\373^\270\324h\365\326\007kodo\251JJ,Ur\275v\271.\261P\235\371\342K]:6z%Y\001\213\262\320\360\263"
 826      6EAF 9474 
 826      7983 C4C6 
 826      64FF 5E66 
 826      7F1E 9A52 
 827 057a CD8A ACC1 	 .ascii "\315\212\254\301\264\341\201\342\350\312\013Ks\266_\320\202L"
 827      B4E1 81E2 
 827      E8CA 0B4B 
 827      73B6 5FD0 
 827      824C 
 828 058c E6AA 0712 	 .ascii "\346\252\007\022\231#<\271\3348#JO\364H\236\304\221\243Y<w\233"
 828      9923 3CB9 
 828      DC38 234A 
 828      4FF4 489E 
 828      C491 A359 
 829 05a3 2EDA 7367 	 .ascii ".\332sg\336\211U\320"
 829      DE89 55D0 
 830 05ab 78F2 5B37 	 .string "x\362[7\344\256.\330\330\021\226\273\017VDN\335\376\025\326\324\271-\022\023\310:\315\022E\267\210\342\351\377\235pJ\025c-Q\274+\332(\346\016\336` \2235W\"o.\214b\317\316\246\237r\006\361M\231\003&\207\032aH\225B\226\370)gYrv6\225\332\233j\220\344\204z\237%\207}cv5M\371N-\311t\353*\274>\366\265\302\370\212\274\034%\317\031\007\377v\230\332\263\367\325N\252\322\3471\247\357\033[\372b\314\310\315+\255\235\027kF~\254\220\032Cz\315\310\013\n\2513d\234\031\271\361\327\022\351`\310x3\362\r\205t2d\202\245\330\024\322\305\220>3\362\251U\022\351a\310D3\362\362\013Tb\323\0306\311\"w\247\302\2463l\262\031\333\023\302f0l\212\245\306\023I\237\323R\3431\2424\3665\335`I\256w\320\322pZK\003\227\371\267:\356\t\253\357\\\277h\257"
 830      E4AE 2ED8 
GAS LISTING  			page 64


 830      D811 96BB 
 830      0F56 444E 
 830      DDFE 15D6 
 831 06ac 7EFD B8F6 	 .string "~\375\270\366$\273\366X\306\337rl\272\254\201\t\321~Q'\240\335u\273\353>\351;\021#\231\257\203i\366U\255$\342\263\262T\242&\002\326\"\245\215I\231\310\244\264\027c\027\356\247@\3037B\242\344\317\325\235\356kU\353g\031\2220\372\00657\t\246Y\303I\016\205\231\fHt\256\276+KNMU\276\345\373Ea\003]\200\216\260\030\326\312\f\233\312\367\177';r\345\374\313\341\373\277dr~\032.\226\3779tp\245TB\231S!\232\024\262/IG\233\353^\350?\241\254\233\006\204\252WL\312_f\312\247\t\357\253%\371\365\325\224{\376\230\2220\035l\004\004\313_W\271\234\2351\310\206\216m\026c\315\233E\243\f\264\203\030\363\256{\2064:\025\035#\244\227\354"
 831      24BB F658 
 831      C6DF 726C 
 831      BAAC 8109 
 831      D17E 5127 
 832 0784 77A6 A5F4 	 .ascii "w\246\245\364\300f\232&\323^8eT\323\362\224\243\247\326\372\340"
 832      C066 9A26 
 832      D35E 3865 
 832      54D3 F294 
 832      A3A7 D6FA 
 833 0799 99CC 48D3 	 .ascii "\231\314H\323\310\247\207\b\205Xy\210\252\r\215\005\217Mp\207"
 833      C8A7 8708 
 833      8558 7988 
 833      AA0D 8D05 
 833      8F4D 7087 
 834 07ad EC69 2B07 	 .ascii "\354i+\007\032V(|\313\033V\\\345|\273V{\235d\340\324\241\270"
 834      1A56 287C 
 834      CB1B 565C 
 834      E57C BB56 
 834      7B9D 64E0 
 835 07c4 F612 B064 	 .ascii "\366\022\260d\007M\245\"#I{N"
 835      074D A522 
 835      2349 7B4E 
 836 07d0 1DD6 7B89 	 .ascii "\035\326{\211VM\233`\022\3120\351l\357\3328\264/\035K\236\305"
 836      564D 9B60 
 836      12CA 30E9 
 836      6CEF DA38 
 836      B42F 1D4B 
 837 07e6 7F5F 7FA8 	 .ascii "\177_\177\250\226fB\226\"\305\237W\345L\021\377\266\376Z\305"
 837      9666 4296 
 837      22C5 9F57 
 837      E54C 11FF 
 837      B6FE 5AC5 
 838 07fa 7153 780A 	 .ascii "qSx\nnf)\270\2117\260u+n\214g\321\2759\024][\351d\330;\321\313"
 838      6E66 29B8 
 838      8937 B075 
 838      2B6E 8C67 
 838      D1BD 3914 
 839 0816 3BF1 C2F4 	 .ascii ";\361\302\364a\032\031\333\375\353\216\360\275"
 839      611A 19DB 
 839      FDEB 8EF0 
 839      BD
 840 0823 9F35 DF5C 	 .string "\2375\337\\I\246]I\034\347\377\266\343\337j\321\277e\360\2129W\267]\221\315\002\312\b\273\302\301W)\271C\231%\215\311\262\033\023\317\215y\264\363wJ\313\255\312\230\002\277\370\272\004h\241(_\227]sQd\315\262\232o\345\362\327\231\344\337v%\344\313\225\3436.\377\261\316\203J\376\354!\344\037wG)?F\310\237\315\345\2577\331?\347J\330\037+\344\317\341\3627t\206\212\241\"\272b\270\023(\277W1\334)\213!\333^\f>n\314&\223\263s\257d1\314\345\3627\233\344\337}%\213\341n.\377YS1\314\277\222\3050\237\313\337b\262\277\352J\026C\225\314L\0169\353\265d&\201k~\276s\217\322\274\320\2549Vh\346\207\306#\347\243\325\354\025\232\027r\371[;\377\240\344\3377\204\374\375\321FN\336z\334\307\257.\232?o\032!\345/fW\027C\332\305\226\372\ru\257(\233\226"
 840      49A6 5D49 
 840      1CE7 FFB6 
 840      E3DF 6AD1 
 840      BF65 F08A 
 841 0924 1BDB 695C 	 .string "\033\333i\\C\354{\233\373\001\033\271\035\006\331\236\307\013\323\356\027Zv}[\353\226\302\226\202\305V=+$\352\001\300~'=\tB\317\003<\304\273M\235\376`t\235\276\034(\277W\247/\227\365\224k\357\364D4\3467\301w;\227\251\013\263W\331\r\342\353\f\2663\330!\256\320\336\224\037}en\211_d\210\235\003\335\222\271Ms\206\246^\017\237j\017M\005\350H\036\217c\2355|\252\232\256\034\352\"\fI\270I@\310Y\337\353<K\205\270\220i\243\374\242\350\002t4'\353\351\f\204QY\025\3407\277wF\024D'\207#\302\346\270\320\207E\316]2(\367Z\246\217\317\326R\036\036\353\354j\312\343\210\252\334az\306\370U\305\256\246(\002\205C(\002\364*\024\363\3473*F(c\"i3\032\304f\307\202|}(d\273\r\311\213'\317^<I\3544\037l\350\016\337"
 841      43EC 7B9B 
 841      FB01 1BB9 
 841      1D06 D99E 
 841      C70B D3EE 
 842 0a1e 0D73 61D6 	 .ascii "\rsa\326\362\350\355\303\354\231\220h]4D\217EC\264>\032\242\r"
 842      F2E8 EDC3 
GAS LISTING  			page 65


 842      EC99 9068 
 842      5D34 448F 
 842      4543 B43E 
 843 0a35 C311 F130 	 .ascii "\303\021\3610\344\333\303\220,\276\226\335\2415\271\221\016\""
 843      E4DB C390 
 843      2CBE 96DD 
 843      A135 B991 
 843      0E22 
 844 0a47 E228 9C0F 	 .ascii "\342(\234\017\034!*qL\375\323`g\374?\252\363+\341\330T\022\372"
 844      1C21 2A71 
 844      4CFD D360 
 844      67FC 3FAA 
 844      F32B E1D8 
 845 0a5e 55C0 59E9 	 .ascii "U\300Y\351\222\365\216&U\\N\234~*\354rb\220%\302\247\262d\272"
 845      92F5 8E26 
 845      555C 4E9C 
 845      7E2A EC72 
 845      6290 25C2 
 846 0a76 772A B0BB 	 .ascii "w*\260\273\230\3023\275\367\273g:\370\373nuA\374d(*\366\313Q"
 846      98C2 33BD 
 846      F7BB 673A 
 846      F8FB 6E75 
 846      41FC 6428 
 847 0a8e 4798 DCB1 	 .ascii "G\230\334\261~\265b>\t\"\257\226\266\025\222\006\323\305\211"
 847      7EB5 623E 
 847      0922 AF96 
 847      B615 9206 
 847      D3C5 89
 848 0aa1 2774 B8E1 	 .ascii "'t\270\341\247\005gh\202\237\035un\306\273\335\313\302T\374\300"
 848      A705 6768 
 848      829F 1D75 
 848      6EC6 BBDD 
 848      CBC2 54FC 
 849 0ab6 2FDC 0F50 	 .ascii "/\334\017P\\\337\341\034\003G+G\"t\323\324\364-\247\016\307\301"
 849      5CDF E11C 
 849      0347 2B47 
 849      2274 D3D4 
 849      F42D A70E 
 850 0acc 4B06 BC38 	 .ascii "K\006\27482\021d!\310A\220\213 \017A>\202\002\004>\004#\340P"
 850      3211 6421 
 850      C841 908B 
 850      200F 413E 
 850      8202 043E 
 851 0ae4 E6AC A62E 	 .ascii "\346\254\246.\22403\375\340\337\017\307\303\013Jp\241\004\027"
 851      9430 33FD 
 851      E0DF 0FC7 
 851      C30B 4A70 
 851      A104 17
 852 0af7 4A70 A104 	 .ascii "Jp\241\004\027Jp\241\004\027Jp\241\004\027Jp\215\240\350b\021"
 852      174A 70A1 
 852      0417 4A70 
 852      A104 174A 
 852      708D A0E8 
 853 0b0d D978 8CE8 	 .ascii "\331x\214\350V\277\\v\277\034"
 853      56BF 5C76 
 853      BF1C 
 854 0b17 E233 D2DE 	 .string "\3423\322\336\242\376~IU\236\225\372E\275\006\3508qz\363)*\333u~/q\210\203\221\266\245mm\002D\254\020\374p\211#\222\266\247m-\270\341,d\226\025\223z\267\316\356\356[w\025J\201\256\b\377\017\224\220\177h:\277t=\266:F}[:\255\177\306T\323\247\251\345\006\0213\035\315\025b}\327\270Jz\202\255\226\317\204\212\352Z\277\270\033B\271\001:^|\262\227H\322f\212\344\342;r\202\255t\235,\226\315\224\327\367G\335\270a\344\304\233Cr'\370\305\255R5\036#]\001\274<a1\365\206\210#\304`$y\224\262\377H>\356\336/\304\232\212o\242_\\F\005h\231\350\332\313=TDJ\376\305g\f\034{_\307\200!\263\237w\177\344?@\322\210\371\017\020u\276\205P\005?\303\016\264i\237\344g\034\202R\003#&\213\355\306\256\367\336wJ\267\236\247\325\374\362\\\\\n\265\262"
GAS LISTING  			page 66


 854      A2FE 7E49 
 854      559E 95FA 
 854      45BD 06E8 
 854      3871 7AF3 
 855 0c18 5A6F 8574 	 .string "Zo\205tI\274\225\"\201\272[\340\223-\224K\331*\020u\257h\022\265\215\"\232-\027\tBV(U\333)\022\210\225\301f;\254\f\351\"\035\333\371\312"
 855      49BC 9522 
 855      81BA 5BE0 
 855      932D 944B 
 855      D92A 1075 
 856 0c4b B96B F9FC 	 .ascii "\271k\371\374\3660\302)~\\\\\304L\263a\3007rj>\t<g4\337\030\240"
 856      F630 C229 
 856      7E5C 5CC4 
 856      4CB3 61C0 
 856      3772 6A3E 
 857 0c66 E522 AA3C 	 .ascii "\345\"\252<\002\261\020\201i\274\b\316\340\"7\230$\254,\254\027"
 857      02B1 1081 
 857      69BC 08CE 
 857      E022 3798 
 857      24AC 2CAC 
 858 0c7b 415D 1F3C 	 .ascii "A]\037<;lpo\340\301\005\342\226\377\206\333h\245-\220\264k\202"
 858      3B6C 706F 
 858      E0C1 05E2 
 858      96FF 86DB 
 858      68A5 2D90 
 859 0c92 E786 3683 	 .ascii "\347\2066\203\027\2420\342\213a\215(\n\031qa8#\036\t\321~=\034"
 859      17A2 30E2 
 859      8B61 8D28 
 859      0A19 7161 
 859      3823 1E09 
 860 0caa 2D91 B475 	 .ascii "-\221\264u\301\213\3355\221\212<S\0249\277\034\013^\352~1b/d"
 860      C18B DD35 
 860      918A 3C53 
 860      1439 BF1C 
 860      0B5E EA7E 
 861 0cc2 857A 8177 	 .ascii "\205z\201w\317(\\jN\220\332\340\345n\207Z0\330\357\016J\001\207"
 861      CF28 5C6A 
 861      4E90 DAE0 
 861      E56E 875A 
 861      30D8 EF0E 
 862 0cd9 EB41 5669 	 .ascii "\353AVi\351\270\312_-\236\277`\351<\377\262\320\250t\001\361"
 862      E9B8 CA5F 
 862      2D9E BF60 
 862      E93C FFB2 
 862      D0A8 7401 
 863 0cee D604 E63D 	 .ascii "\326\004\346=\\\265tQei\331\265q\013\026W.\255Z<o\321\222\322"
 863      5CB5 7451 
 863      6569 D9B5 
 863      710B 1657 
 863      2EAD 5A3C 
 864 0d06 B2F1 8E15 	 .ascii "\262\361\216\025\245ee\216\207K\313&9\036*-\233\254-\232\242"
 864      A565 658E 
 864      874B CB26 
 864      391E 2A2D 
 864      9BAC 2D9A 
 865 0d1b 2F1A 3F89 	 .ascii "/\032?\211\3268\026,\234\267\314\215 P\265D\007\016\372\020}"
 865      D638 162C 
 865      9CB7 CC8D 
GAS LISTING  			page 67


 865      2050 B544 
 865      070E FA10 
 866 0d30 98AE D02B 	 .ascii "\230\256\320+\027-\325k\002\001\357\312\242eU\017-+*/\272\236"
 866      172D D56B 
 866      0201 EFCA 
 866      A265 550F 
 866      2D2B 2A2F 
 867 0d46 FC1F CE9E 	 .ascii "\374\037\316\236\322\254"
 867      D2AC 
 868               	 .text
 869               	 .section .gnu.lto_.symbol_nodes.5eb0d06daa7ae5d4,"",@progbits
 870 0000 789C 4D95 	 .ascii "x\234M\225\333oTU\024\207\327\314\236i\007\206\336\3573\235\336"
 870      DB6F 5455 
 870      1487 D7CC 
 870      9E69 0786 
 870      DEEF 339D 
 871 0015 0686 0E85 	 .ascii "\006\206\016\205\302\320vhK\271\350\037\340\253\017\306\007\337"
 871      C2D0 7668 
 871      4BB9 E81F 
 871      E0AB 0FC6 
 871      07DF 
 872 0027 FC0F 7C5C 	 .ascii "\374\017|\\d7)\004\0230\222H\002\312\303\236\004D\022L0\202\301"
 872      6437 2904 
 872      1330 9248 
 872      02CA C39E 
 872      0444 124C 
 873 003e A8F4 1428 	 .ascii "\250\364\024(m\241\300\003\0214H9M\254\200\264\240\001\344Z\327"
 873      6DA1 C003 
 873      1134 4839 
 873      4DAC 80B4 
 873      A001 E45A 
 874 0053 DA7B 1FCE 	 .ascii "\332{\037\316\356\303\371~\337\276\236\275\316\231\323(D\341"
 874      EEC3 F97E 
 874      DFBE 9EBD 
 874      CE99 D328 
 874      44E1 
 875 0065 9324 98BF 	 .ascii "\223$\230\277h\004\001>\233\005@\374j\317G\321(F\034\023\030"
 875      6804 013E 
 875      9B05 40FC 
 875      6ACF 47D1 
 875      2846 1C13 
 876 007a 752C 86C2 	 .ascii "u,\206\302\261\333\200\261\267\032\211\327&\342\b\321j\214\333"
 876      B1DB 80B1 
 876      B71A 89D7 
 876      26E2 08D1 
 876      6A8C DB
 877 008d B623 7B22 	 .ascii "\266#{\"\321\032,s"
 877      D11A 2C73 
 878 0095 AC0E CB1D 	 .string "\254\016\313\035k\304Dh\361\206\025\264x\264\tW8m\365+\271\255\031W:\263Z0\351\330u\300U\341-DSX\341t\246\261\322\261V\254r,\203\325\216\265a\215c\355X\353X\007\3269\326\211\365\216ua\203cYltl569\266\006\233\035\313a\213ck1\345X7\246\035\313c\253c\3530\343X\017\2669\266\036\333\035\333\200\035N!\313\"\364h\342+\201\037P/v:=\345In\333\210]\316\334M\230uF\354(\003\232[\265\212WH\226\363uU\234\257\0251\276V\n\276\256\210\362*\005\\\355\314KTp\333f\\\343\254\334\2079\307\372q\255c\003\330\035Z\244\210yc\273vE\"[p](\203\330\023\312\020\256\017e+n\be\030{C\271\b\2701\264\013\200\233B;\017X\bm\002psh\036`_h\343\200\375\241\235\003\034\bm;\026C\331\206[B\031\301\301P\246"
 878      6BC4 4468 
 878      F186 15B4 
 878      78B4 0957 
 878      386D F52B 
 879 0196 8742 9B01 	 .string "\207B\233\001\034\016m\022pkh\323\200#\241]\002\334\026\3325\300\355\241]\005\334\021\332,\340\316\320\256"
 879      1C0E 6D12 
 879      706B 68D3 
 879      8023 A15D 
GAS LISTING  			page 68


 879      02DC 16DA 
 880 01b9 BE13 DA65 	 .string "\276\023\332e\300w\337\232\210m\201\321WK=\"A\374\276_$\007\241\364|5ct\354jL\353\330\355\264\366\311\345\237\342\242b\020&^\323\360\252JPw\337D\230\336\034\261:\001>/S\223"
 880      C077 DF9A 
 880      886D 81D1 
 880      574B 3D22 
 880      41FC BE5F 
 881 01f9 C9AC 4D80 	 .string "\311\254M\200\342v\346]Co\354\357v\246\334K\254\263\375D\217\373\353\251}\316PYz\201\333~\265\233\3461\367\032z\226>\263\301\316'\372t\214\306:\243\215v9r\317\322\327\254\001\357\311lD45\230qM4\375\342\362\021\301\301\327\241\271\332\3644\203Y\241\305zK\324x\252\n\324\017\375\"U\t\376\327\264P\332\326!m\353B\224|^ng\266\332~\242\344\376\314\020\224\346\326\210L\312\034?C\315\272\276m\024\270\276\355\255\240\230\035\264>\2633b\266\357l3\333w\t\343]\326\263\3030\312\013e+\315\202\331\024(\3367\2331\373\023%\327/\233\006\337R\327\217\250>e\322>\226j\037\263\025<\315\016\3605\223 \367\023s\225f\277\\\312\234#\2276\347\315e\314\276\271Ns\356\234\335?\2274\373w\217\300(\317\353\336J\347&\346/\002\214\356~\372\241\310_"
 881      E276 E65D 
 881      436F ECEF 
 881      76A6 DC4B 
 881      ACB3 FD44 
 882 02f2 98DF 7B23 	 .string "\230\337{##\362t\362}\317\204\310\267\321\316\314$\355\314<O#?\347@%\323\234\240\031\0078x"
 882      23F2 74F2 
 882      7DCF 84C8 
 882      B7D1 CECC 
 882      24ED CC3C 
 883 0314 135F D850 	 .string "\023_\330P:\310\241\034|\3152\220\207\214\253C\306=\353\276uy\330\366k\322\3515\251JG\314\336Js\234\266\322\341\034\335\304\374\315v\036\251\236>\352\021\371N\360,}K\371\214\331\005\236\245|\301\244\361\232T\007\353\362\r3\rr\331\366[z\226\276\245T\217{\370\216\224&\365kRU4\263\340\035\233\212\211\374\016(\235`\257"
 883      3AC8 A11C 
 883      7CCD 3290 
 883      878C AB43 
 883      C63D EBBE 
 884 0380 FFD4 785C 	 .string "\377\324x\\\344\207\241t\232}\b&N\333y?\233u|K\365\213Y\307\323\314\201Z\030\317\213\374v\230\177p\213\316\267\r&\026\257\377&Da\212\216\316O\2520\003\346\325*dA\316\274\352\025\205I\252\266\016\323T\177\035h\354\350,\007\272\373\337\357|I\263S\340\377\241\003\275gwlP\376\1773}\034\344\274\016tkA\220\177\332\240L\240\273\013Z\344\302\271n^O\336g\322\034K\371\300\272\245\\\264n\351k\322k\273d\373_\3745U\320\013\275\324\201F\006A\276\261A\231@\273\007-r9\230\245\356\331Y&\360s\320\341\022U\343\350\363\245>]\227\371c\343\257\205\350\033\201\t.\335@\f<\3768\024\033\300?\376\260G\024\351k4v\203~\345\324\340M>\351\025\305kT\301\351\207iQl\002\177\232\033\350\2735\303l"
 884      E487 A174 
 884      9A7D 0826 
 884      4EDB 793F 
 884      9B75 7C4B 
 885 046c A559 0DDE 	 .ascii "\245Y\r\336\376_\313\271_\036X\210\211b-\310\203\223\031\275"
 885      FE5F CBB9 
 885      5F1E 5888 
 885      8962 2DC8 
 885      8393 19BD 
 886 0480 80E6 55DA 	 .ascii "\200\346U\332\3630\007\372n\335\271\375\236\036\260\360\350\246"
 886      F330 07FA 
 886      6EDD B9FD 
 886      9E1E B0F0 
 886      E8A6 
 887 0492 D07B 05C1 	 .ascii "\320{\005\3017\241\031\374\3736\250\007AK\020\324b0x1\350Z\n"
 887      37A1 19FC 
 887      FB36 A807 
 887      414B 10D4 
 887      6230 7831 
 888 04a9 BAFE 095A 	 .ascii "\272\376\tZ\202\240\376\325\241\005\344\323\271\343\345\034<"
 888      82A0 FED5 
 888      A105 E4D3 
 888      B9E3 E51C 
 888      3C
 889 04ba 1368 FA0B 	 .ascii "\023h\372\013\035\352\301\177i\027\244\367\235C#\0255\330\"\b"
 889      1DEA C17F 
 889      6917 A4F7 
 889      9D43 2315 
 889      35D8 2208 
 890 04ce F413 B0B7 	 .ascii "\364\023\260\267j\002\375S*\251\307\234\232\300+=\266\243\203"
 890      6A02 FD53 
 890      2AA9 C79C 
 890      9AC0 2B3D 
 890      B6A3 83
 891 04e1 208F DAA0 	 .ascii " \217\332\240\202\340\005\301\177\333u,\230\376\215\016\364\275"
GAS LISTING  			page 69


 891      82E0 05C1 
 891      7FDB 752C 
 891      98FE 8D0E 
 891      F4BD 
 892 04f3 37A1 06E4 	 .ascii "7\241\006\344\t\035\006@\236\274w\353}Q\274B\245;yo\366\003Q"
 892      091D 0640 
 892      9EBC 77EB 
 892      7D51 BC42 
 892      A53B 796F 
 893 050a 1C82 F96F 	 .ascii "\034\202\371o\357~,\212\227\351i\234\342\300\357\363w\317\327"
 893      EF7E 2C8A 
 893      97E9 699C 
 893      E2C0 EFF3 
 893      77CF D7
 894 051d 8922 3D6E 	 .ascii "\211\"=nM\372\232\235a\322\267\311\322?c\372\345YCu\326\366["
 894      4DFA 9A9D 
 894      61D2 B7C9 
 894      D23F 63FA 
 894      E559 4375 
 895 0534 F72D E58F 	 .ascii "\367-\345\217\266_\223\336,M~U(\300\377[\273\327$"
 895      B65F 93DE 
 895      2C4D 7E55 
 895      28C0 FF5B 
 895      BBD7 24
 896               	 .text
 897               	 .section .gnu.lto_.refs.5eb0d06daa7ae5d4,"",@progbits
 898 0000 789C 4D8E 	 .string "x\234M\216\333\016\302@\bDg\246]\243\330\030\037}\027\255\266^\267\352\037\373\237\262\333\027!C\270\034\002\202\360\305lj\221\230\264,\221+Z\273\206\205w\260f\003\243\261k\366r\232\016:\322\320\363$\337\235\331\313#7\r\030u\321\240\253n\272\263\360\301\204\273\036e\036\212\212\343\366\211\314\\\267r\355\376if4\305\025\347+\364FZ|\n\033\037\245\312\374"
 898      DB0E C240 
 898      0844 67A6 
 898      5DA3 D818 
 898      1F7D 17AD 
 899 0075 31DB 0A54 	 .ascii "1\333\nT"
 900               	 .text
 901               	 .section .gnu.lto_.decls.5eb0d06daa7ae5d4,"",@progbits
 902 0000 789C A55D 	 .ascii "x\234\245]\tx\024U\266\256\252\356N'$\254\212\342J\214:2.,\352"
 902      0978 1455 
 902      B6AE AAEE 
 902      4E27 24AC 
 902      8AE2 4A8C 
 903 0019 A0E3 7B4F 	 .ascii "\240\343{OPp\233\347\314\370%:\31673\337\213M\252!\031Cw\246"
 903      5070 9BE7 
 903      CCF8 253A 
 903      CE37 33DF 
 903      8B4D AA21 
 904 0031 D311 713E 	 .ascii "\323\021q>\036\305&\f(/\321\200A\024\301\020D\020\b\273l\332"
 904      1EC5 260C 
 904      282F D180 
 904      4114 C110 
 904      4410 08BB 
 905 0047 2812 3794 	 .ascii "(\0227\224\260C@\202\350 \002\003\f\222\200\021\362\316\251\272"
 905      B043 4082 
 905      E820 0203 
 905      0C92 8011 
 905      F2CE A9BA 
 906 005b B796 5BF7 	 .ascii "\267\226[\367V\272c\177\036\252\372\364="
 906      56BA 637F 
 906      1EAA FAF4 
GAS LISTING  			page 70


 906      3D
 907 0068 FF3D CB7F 	 .string "\377=\313\177o\335[\235j\025I\221\266^\"I\255\360Z5D\222n\013J\322\315\222$\335\013r9\310\034\220\032\220\371 \213@jA\226\202\254\002Y\003\342\007\t\200\\*KR\017\220+@\256\002\311\006\271\001\244\027\310\315 Y\320\34668\346\200\364\006\201\377\364\327 \220>\360\346\327 \203A\036\005\371\003\310\237A\206\201\304@F\200<\0072\nd2H\005H\025H5\310\002\220\305 \313@\326\203$@6\201l\001\251\007\331\001\262\007\344 \310a\220\343 M -\350\200\"IA\220L\220. \335Az\200\\\005r-\310\365 7\201\334\f\322\033\244/\310\355 \367\201<\b\3620\310\023 O\202\374\005\344\177@\236\002\t\201\f\005\031\006R\b\362W\220\bH\tH\f$\016\362\f\310\263 \243@F\203<\0172\021\244\023\270\365\002\034\313A^\002\231\016\362*\310,\2207A\346\202\314\007Y"
 907      6FDD 5B9D 
 907      6A15 4991 
 907      B65E 2249 
 907      ADF0 5A35 
 908 0169 F20E 482D 	 .string "\362\016H-\3102\220\025\212\344xaN;\220\232!&\346\177\243d\344\235\326l\025\330\314\224\215\372J\3443\264C\250;\341\330_vbb\2152\340\270Z\2610kH\037~b\217\2703e\013\017m|p\034"
 908      C832 9015 
 908      8AE4 7861 
 908      4E3B 909A 
 908      2126 E67F 
 909 01ad C7FB 40EE 	 .ascii "\307\373@\356g0\007\267\323\317\301\304\317G\340\370\033\006"
 909      6730 07B7 
 909      D3CF C1C4 
 909      CF47 E0F8 
 909      1B06 
 910 01bf F3D1 76F8 	 .ascii "\363\321v\370\371(\3613\027\216y \2173\230\310\311 \261\243\230"
 910      F928 F133 
 910      178E 7920 
 910      8F33 98C8 
 910      C920 B1A3 
 911 01d4 EF62 2D65 	 .ascii "\357b-e\003\367O$\377\ni\213|A\210\371L]\376Lpjl8\350\023\216"
 911      03F7 4F24 
 911      FF0A 698B 
 911      7C41 88F9 
 911      4C5D FE4C 
 912 01ef 8965 B676 	 .ascii "\211e\266v2i\213>\251p\f\201\0240>\341\370\310d\260\0261xO\023"
 912      3269 8B3E 
 912      A970 0C81 
 912      1430 3EE1 
 912      F8C8 64B0 
 913 0208 9B35 E0C7 	 .ascii "\2335\340\307Z\305\302\036F\260K\340\030\001\2112\3308\356\322"
 913      5AC5 C21E 
 913      46B0 4BE0 
 913      1801 8932 
 913      D838 EED2 
 914 021c 9978 690E 	 .ascii "\231xi\0161V\032;\2159\346\021\363\bR\253\032&\347#\310<\260"
 914      3156 1A3B 
 914      8D39 E611 
 914      F308 52AB 
 914      1A26 E723 
 915 0233 8069 FF1C 	 .ascii "\200i\377\034\211K\266\365\215\034\250!\261!\306zx?\005s\017"
 915      894B B6F5 
 915      8D1C A821 
 915      B121 C67A 
 915      783F 0573 
 916 0248 C70D B6DC 	 .ascii "\307\r\266\334\243-\216SE\262\306\210\3755\212p\303\3167\304"
 916      A32D 8E53 
 916      45B2 C688 
 916      FD35 8A70 
 916      C3CE 37C4 
 917 025c D564 2B47 	 .ascii "\325d+G\024\233b\216\262aN\204\363\tL\256&\223\\\331\375\365"
 917      149B 628E 
 917      B261 4E84 
 917      F309 4CAE 
 917      2693 5CD9 
 918 0272 DBE2 B5FB 	 .ascii "\333\342\265\373(\223\366>\342\337T\331\355#\316oi\222\305S\304"
GAS LISTING  			page 71


 918      2893 F63E 
 918      E2DF 54D9 
 918      ED23 CE6F 
 918      6992 C553 
 919 0287 A13E F925 	 .ascii "\241>\371%\313\257\n2\037b\273i\214OU\034\236\315$m\337\003\343"
 919      CBAF 0A32 
 919      1F62 BB69 
 919      8C4F 551C 
 919      9ECD 246D 
 920 029e 525B 7C55 	 .ascii "R[|Ud\236\305\363\331p\234\305`U\023\177\251\335\"\233\017\325"
 920      649E C5F3 
 920      D970 9CC5 
 920      6055 137F 
 920      A9DD 229B 
 921 02b4 C416 4DDE 	 .ascii "\304\026M\336b\354\026\220\274\254\262\371\200M\202$?\254\037"
 921      62EC 1690 
 921      BCAC B2F9 
 921      804D 8224 
 921      3FAC 1F
 922 02c7 0B08 16FB 	 .ascii "\013\b\026\373ZLp\02618t~`q\026\013p\226\021\234\032\006\207"
 922      5A4C 7016 
 922      3138 747E 
 922      6071 160B 
 922      7096 119C 
 923 02de DACF 64F2 	 .ascii "\332\317d\362\273\214\340`\354\357\"?@\3262\270\353\005\276\005"
 923      BB8C E060 
 923      ECEF 223F 
 923      40D6 32B8 
 923      EB05 BE05 
 924 02f2 0431 AE17 	 .ascii "\0041\256\027\370\226\340\360\362}0H(\026\306F\234\377\211\255"
 924      F896 E0F0 
 924      F27D 3048 
 924      2816 C646 
 924      9CFF 89AD 
 925 0306 9FD8 D058 	 .ascii "\237\330\320X\2539\230\233\3108\262\217a\304\247\327_\234\037"
 925      AB39 989B 
 925      C838 B28F 
 925      61C4 A7D7 
 925      5F9C 1F
 926 0319 3E        	 .ascii ">"
 927 031a 406E CA4E 	 .string "@n\312N?}\304\226\372\212~\177\006\307O\230>\266\020\374\017\025\347\334\275\t\336\177D\306\353\fh\263Y1\326\021}m\370h\213\274\353\303\361\033\257\333\210Ug\303\r\330\260?\261a\177J\260\037\260a\327\023\354\301\034\354\035\266\261\205\271\370\f\257\263\262s\314\373H;\373\370\332\305`\341\232\002}\nJ\026\027\331yc\217\315~?c\177\220\330\007<\354\017\332\354\0171\366\270\226\301\334\330\271\214X8\337/#\230\237\003\310\035\212\305\233k\2308\375\004\007\3274;H_\330\357\367p\374\216\351\3578g\354\234$\276-\340\370~\334\206\367\003\034\377\315\3405\021\276\363\360\002\004\323\316w\205\330\034$\230\347\341x\216\301l\341`.\"\270\242\271\275\305\346\347E8^`9\243\030\353\023;\307\267\020\316!\307\357\201\366_\020>\236\260\361\007\355p\355s\234\304\344g\346\370 \301\265s\374K\202\213\374\376\255"
 927      3F7D C496 
 927      FA8A 7E7F 
 927      06C7 4F98 
 927      3EB6 10FC 
 928 041b 17ED 1EB5 	 .ascii "\027\355\036\265\341f0\270\270\226\355\t\307\2556\334z\305\271"
 928      E166 30B8 
 928      B896 ED09 
 928      C7AD 36DC 
 928      7AC5 B9
 929 042e EED9 AE18 	 .ascii "\356\331\256\030\274]Gr\265\003\336\357\004\271_q^[i\376w\301"
 929      BC5D 4772 
 929      B503 DEEF 
 929      04B9 5F71 
 929      5E5B 69FE 
 930 0444 F11B 3876 	 .ascii "\361\0338v\221\2151\270\033\336\357\225\215\334\242\217\363\211"
 930      918D 31B8 
GAS LISTING  			page 72


 930      1BDE EF95 
 930      8DDC A28F 
 930      F389 
 931 0456 8F7B 50AF 	 .ascii "\217{P\257\030\343\2533\274O`\2160\036\220\006\220\003\222\021"
 931      18E3 AB33 
 931      BC4F 608E 
 931      301E 9006 
 931      9003 9211 
 932 046a 33FA 886B 	 .ascii "3\372\210k\350\021$\367\310=\344!]\247cM\360:\216>wT\214\265"
 932      E811 24F7 
 932      C83D E421 
 932      5DA7 634D 
 932      F03A 8E3E 
 933 0482 305E 2B5F 	 .ascii "0^+_`b\3055\373\345\222\363\272K\347]z\355ecA\337\361z\264\227"
 933      6062 C535 
 933      FBE5 92F3 
 933      BA4B E75D 
 933      7AED 6563 
 934 049c C445 F733 	 .ascii "\304E\3673\030\337>\\\277(F\\4\026|\245\223\276\354\376\356!"
 934      18DF 3E5C 
 934      BF28 465C 
 934      3416 7CA5 
 934      93BE ECFE 
 935 04b2 3E63 9DD1 	 .ascii ">c\235\321W\254M7\342g-\343gw\222\357\006\305\271gzD1\372\371"
 935      57AC 4D37 
 935      E267 2DE3 
 935      6777 92EF 
 935      06C5 B967 
 936 04cb A3AD BED8 	 .ascii "\243\255\276\330\026\367\025\270\277@u9\203\205\373\223\301L"
 936      16F7 15B8 
 936      BF40 7539 
 936      8385 FB93 
 936      C14C 
 937 04dd CCCB 6C71 	 .ascii "\314\313lq\017 \261c\375\367\223X\276R\254\2327J\306\372\rs\203"
 937      0F20 B163 
 937      FDF7 9358 
 937      BE52 AC9A 
 937      374A C6FA 
 938 04f4 F56F 84F3 	 .ascii "\365o\204\363\247m\343\242\013\341\235\275\236\207@\276V\214"
 938      A76D E3A2 
 938      0BE1 9DBD 
 938      9E87 40BE 
 938      568C 
 939 0506 F904 F773 	 .ascii "\371\004\367s8\247\034FN\200\034\001\371\216\344t\b\034\217*"
 939      38A7 1C46 
 939      4E80 1C01 
 939      F98E E474 
 939      081C 8F2A 
 940 051a C67E AF10 	 .ascii "\306~\257\020\344{8\377\213l\354\003q?x\225\215K\307\340x\234"
 940      E47B 38FF 
 940      8B6C EC03 
 940      713F 7895 
 940      8D4B C7E0 
 941 0530 C48E 9CA2 	 .ascii "\304\216\234\242\271\247\334\242{\311\265\222\221\263\177)\306"
 941      B9A7 DCA2 
 941      7BC9 B592 
 941      91B3 7F29 
GAS LISTING  			page 73


 941      C6
 942 0541 1EF3 7F65 	 .ascii "\036\363\177e\203\257'\t_O!\006H\017\254\223l\360\356\002\234"
 942      83AF 2709 
 942      5F4F 2106 
 942      480F AC93 
 942      6CF0 EE02 
 943 0556 9F01 F90C 	 .ascii "\237\001\371\f\244\005\244\016y\307\360\321\007\357\267\300\361"
 943      A405 A40E 
 943      79C7 F0D1 
 943      07EF B7C0 
 943      F1
 944 0567 2C48 2BC8 	 .ascii ",H+\310i\220# '1\267\360Y3\034\317\203\034\003y\017\344 \310"
 944      6990 2320 
 944      2731 B7F0 
 944      5933 1CCF 
 944      831C 0379 
 945 057f 9524 FFB8 	 .ascii "\225$\377\270\237+\264\361\3418\341+\356\367p.\305\275\037\356"
 945      9F2B B4F1 
 945      E138 E12B 
 945      EEF7 702E 
 945      C5BD 1FEE 
 946 0593 0171 8DFD 	 .ascii "\001q\215\375g\302\023\334\027\342\376\220\3569\221?8\016p\337"
 946      67C2 13DC 
 946      17E2 FE90 
 946      EE39 913F 
 946      380E 70DF 
 947 05a7 88EB 4B1C 	 .ascii "\210\353K\034\017\3101\334K\342\236\262\243d\360\350\264\215"
 947      0FC8 31DC 
 947      4BE2 9EB2 
 947      A364 F0E8 
 947      B48D 
 948 05b9 FFB8 FF3B 	 .ascii "\377\270\377;\003\362\203b\354\371p/\210\373B\334\037\342>\361"
 948      03F2 8362 
 948      ECF9 702F 
 948      88FB 42DC 
 948      1FE2 3EF1 
 949 05cd 2586 2BB8 	 .ascii "%\206+\270\217\275Rr^\377\2217W\021~l$"
 949      8FBD 5272 
 949      5EFF 9137 
 949      5711 7E6C 
 949      24
 950 05de 9C41 5ED0 	 .string "\234A^\320u=\345#\035?\353\bg(?pM\262\204\031OX/\344I7\222\263#$g\230\357/I\316\353I\035\266\223\374\357\224\2549\001\353\260\227\324k7\251U\026\361\037\367\313\270W\306\\\341\036:\316\031\207\230\373\0222\307\255 \343\217\346\314\376\302=}\006\211\031\343_G\306$\035\213\030'\345\233L\270\240\020;\034\223x\236\255\270\307\344\365\2125\376\020c\035\007G&\355\320\364F\016\306M\212{\177Ikr\026ya\273fa\333?\310\374\275\026\336\253\370/\311='\322\275\333V\305Z\347nW,\177\261\037v-\330\004\307I \315\212\261f\374H\266\326\244x\177\b\347\n\\\217\341:\354\034\034\317\203\374\b\322\002r\001\344\"\341X+\372\b\223\333r\364\031\216\033\361z\013GM\261xDc\244\373J\272v\361A\273\2216^R\036\342\034E\357'\235 \374\353\002\335\244\311\306\330\247\363"
 950      753D E523 
 950      1D3F EB08 
 950      6728 3F70 
 950      4DB2 8419 
 951 06df 1DC7 2724 	 .ascii "\035\307'$k\374\327\021\016~F\270Gy\210s\302\225$\207t\355\213"
 951      6BFC D711 
 951      0E7E 46B8 
 951      4779 8873 
 951      C295 2487 
 952 06f6 F764 702D 	 .ascii "\367dp-\214\353l\\S\342\036\005\357\325\320\373K\270G\300u8\336"
 952      8CEB 6C5C 
 952      53E2 1E05 
 952      EFD5 D0FB 
 952      4BB8 47C0 
 953 070d C3C1 3538 	 .ascii "\303\30158\326f\024\231\007\236%\374\265\363\225\316\025\310"
GAS LISTING  			page 74


 953      D666 1499 
 953      079E 25FC 
 953      B5F3 95CE 
 953      15C8 
 954 071f E5CB 48FD 	 .ascii "\345\313H\375n\265q\326\017\361\006@\322@\202 \351 \031 \035"
 954      6EB5 71D6 
 954      0FF1 0640 
 954      D240 8220 
 954      E920 1920 
 955 0734 4032 41B2 	 .ascii "@2A\262@:\202t\002\351\f\322\005\244+H7\220K@.\365\271y\237!"
 955      403A 8274 
 955      02E9 0CD2 
 955      05A4 2B48 
 955      3790 4B40 
 956 074e 4DD2 F055 	 .ascii "M\322\360U\241eUu\302)I\225;e\300U\rO\2622t\252\334(\315\325"
 956      A165 5575 
 956      C229 4995 
 956      3B65 C055 
 956      0D4F B232 
 957 0768 B4F2 C69A 	 .ascii "\264\362\306\232\213\215\212\246\371Uy\216\234\001T\273N\226"
 957      8B8D 8AA6 
 957      F955 798E 
 957      9C01 54BB 
 957      4E96 
 958 077a 6E96 DE06 	 .ascii "n\226\336\006\313rM\033\223)\271_\252\254\017(\347{U\236+\343"
 958      CB72 4D1B 
 958      9329 B95F 
 958      AAAC 0F28 
 958      E77B 559E 
 959 0790 2D44 8487 	 .ascii "-D\204\207\267Z+y\311\243\211f4qil\022.%\316N\274\\ST\271Fw\b"
 959      B75A 2B79 
 959      C9A3 8966 
 959      3471 696C 
 959      122E 25CE 
 960 07ad 760B 14DD 	 .ascii "v\013\024\335\350Nf\272\227\235\335\353\037\223\223V\234q\245"
 960      E84E 66BA 
 960      979D DDEB 
 960      1F93 9356 
 960      9C71 A5
 961 07c0 C9D8 EDEC 	 .ascii "\311\330\355\3541\332\245U\235\272J\345\230\225\304\030"
 961      31DA A555 
 961      9DBA 4AE5 
 961      9895 C418 
 962 07d0 4D93 FF66 	 .ascii "M\223\377f:4[\350\220*\317\223ol\273\017b\332\203\232\352\253"
 962      3A34 5BE8 
 962      902A CF93 
 962      6F6C BB0F 
 962      62DA 839A 
 963 07e6 41C9 D199 	 .ascii "A\311\321\231\021\016\277\241*/\224\273\332\313f8\253\267 \026"
 963      110E BFA1 
 963      2A2F 94BB 
 963      DACB 6638 
 963      ABB7 2016 
 964 07fa 5DA8 8542 	 .ascii "]\250\205B,\336!i j\311\371\271\304\264\022\302\314\227\315\032"
 964      2CDE 2169 
 964      206A C9F9 
 964      B9C4 B412 
GAS LISTING  			page 75


 964      C2CC 97CD 
 965 080f 9374 187D 	 .ascii "\223t\030}\363-H}\316\005A\265H\257\316]lu\002Lu\002\316\314"
 965      F32D 487D 
 965      CE05 41B5 
 965      48AF CE5D 
 965      6C75 024C 
 966 0827 0532 AC93 	 .ascii "\0052\254\223\326V\037\277<\2635\263<\006\205{x\320\005\211\n"
 966      D656 1FBF 
 966      3CB3 35B3 
 966      3C06 857B 
 966      78D0 0589 
 967 083c AA65 BA3B 	 .ascii "\252e\272;\003e\016cu?\226\331\362\205\347\fEQ5\332\354\245V"
 967      0365 0E63 
 967      753F 96D9 
 967      F285 E70C 
 967      4551 35DA 
 968 0853 A6DD 5C46 	 .ascii "\246\335\\F\314\227\246\\\240\225\202\002u\227\274+R\353\252"
 968      CC97 A65C 
 968      A095 8202 
 968      7597 BC2B 
 968      52EB AA
 969 0866 48E3 18ED 	 .ascii "H\343\030\355\006[E\262\251\205\337\252\310OX\221Uz\n\036`+\022"
 969      065B 45B2 
 969      A985 DFAA 
 969      C84F 5891 
 969      557A 0A1E 
 970 087d 642A 1274 	 .ascii "d*\022tV$\230a\235`>:{\325\244\233Ta\275\261\322\345\243.\365"
 970      5624 9861 
 970      9D60 3E3A 
 970      7BD5 A49B 
 970      5461 BDB1 
 971 0896 97F0 72F5 	 .ascii "\227\360r\365;ta\235\334\215\364c\224\251\261a\363\312\236\372"
 971      3B74 619D 
 971      DC8D F463 
 971      94A9 B161 
 971      F3CA 9EFA 
 972 08aa 4483 9F48 	 .ascii "D\203\237H\016'\035\257\353$\200\037\2338p\242\2276\316Gy\026"
 972      0E27 1DAF 
 972      EB24 801F 
 972      9B38 70A2 
 972      9736 CE47 
 973 08c0 A590 BCB4 	 .ascii "\245\220\274\264\231)\266\345\325\016\246%N\037E0G\361\274\030"
 973      9929 B6E5 
 973      D50E A625 
 973      4E1F 4530 
 973      47F1 BC18 
 974 08d4 DEF8 2D9D 	 .ascii "\336\370-\235\0247\352\275\377\235\315\251\237\311\251\337\231"
 974      1437 EABD 
 974      FF9D CDA9 
 974      9FC9 A9DF 
 974      99
 975 08e5 5378 AB69 	 .ascii "Sx\253i\027\355\374\362cr\361\032(\215\223\223\bE\021\206\322"
 975      17ED FCF2 
 975      6372 F11A 
 975      288D 9393 
 975      0845 1186 
 976 08fa D8F0 FCFA 	 .ascii "\330\360\374\372k&h\215OQ\337&$\203\347\027\342i\365\225P\313"
GAS LISTING  			page 76


 976      6B26 688D 
 976      4F51 DF26 
 976      2483 E717 
 976      E269 F595 
 977 0910 8D32 859B 	 .ascii "\2152\205\233\230\f\\\232\030\356\264\023nj2p\351b\270f'\\y2"
 977      980C 5C9A 
 977      18EE B413 
 977      6E6A 3270 
 977      E962 B866 
 978 0928 701D C470 	 .ascii "p\035\304p\025\323\034p\225\311\300e\211iu\346\250\301Q\003\355"
 978      15D3 1C70 
 978      95C9 C065 
 978      8969 75E6 
 978      A8C1 5103 
 979 093d D564 D03A 	 .ascii "\325d\320:\211\235\333\340\214\365\365d\340\272\210\341v:\341"
 979      899D DBE0 
 979      8CF5 F564 
 979      E0BA 88E1 
 979      763A E1
 980 0950 6627 03D7 	 .ascii "f'\003\327M\fw\300\tW\235\f\334\245b\270\263N\270y\311\300]&"
 980      4D0C 77C0 
 980      0957 9D0C 
 980      DCA5 62B8 
 980      B34E B879 
 981 0968 86BB E084 	 .ascii "\206\273\340\204{;\031\270\036\"\270\261\211\346\243\331za\215"
 981      7B3B 19B8 
 981      1E22 B8B1 
 981      89E6 A3D9 
 981      7A61 8D
 982 097b 25C8 3B2C 	 .ascii "%\310;,\232\343*DN\257\024\242i\365\345\3049\003ni2pW\211\235"
 982      9AE3 2A44 
 982      4EAF 14A2 
 982      69F5 E5C4 
 982      3903 6E69 
 983 0994 3B7F 34BB 	 .ascii ";\1774\273\362j\272x\031\223\030hM\304\016 \234\227\032m\027"
 983      F26A BA78 
 983      1993 1868 
 983      4DC4 0E20 
 983      9C97 1A6D 
 984 09a9 A146 73D5 	 .ascii "\241Fs\325\202g\372\\\364.\353\211\314\361\344j\311p\234p\276"
 984      8267 FA5C 
 984      F42E EB89 
 984      CCF1 E46A 
 984      C970 9C70 
 985 09be 7973 AFF2 	 .ascii "ys\257\362\036\344B\336f\212\257\346D\301\215\351\002\306dx\246"
 985      1EE4 42DE 
 985      668A AFE6 
 985      44C1 8DE9 
 985      02C6 6478 
 986 09d3 485F A5E2 	 .ascii "H_\245\342\226*\177-_g5\264\203^\254\320.\355DA\217\264\033T"
 986      962A 7F2D 
 986      5F67 35B4 
 986      835E ACD0 
 986      2EED 4441 
 987 09eb 7180 963F 	 .ascii "q\200\226??v\340!\231\242\376\320nT\237\003\265\322\201:Fi/\252"
 987      3F76 E021 
 987      99A2 FED0 
GAS LISTING  			page 77


 987      6E54 9F03 
 987      B5D2 813A 
 988 0a03 DF81 3ADD 	 .ascii "\337\201:\335\201\372\217v\243\006\034\250\257:Pg\264\0335\315"
 988      81FA 8F76 
 988      A306 1CA8 
 988      AF3A 5067 
 988      B41B 35CD 
 989 0a17 81FA 9A03 	 .ascii "\201\372\232\003\365\315v\243\006\035\250\263\034\250o'\203z"
 989      F5CD 76A3 
 989      061D A8B3 
 989      1CA8 6F27 
 989      837A 
 990 0a29 0D0F D5C9 	 .ascii "\r\017\325\311\326e\016\324\325\355Fu\322u\205\003\365\313v\243"
 990      D665 0ED4 
 990      D5ED 4675 
 990      D275 8503 
 990      F5CB 76A3 
 991 0a3d 3AF9 BACA 	 .ascii ":\371\272\312\201z\240\335\250N\276\276\353@=\326nT'_\327:P\307"
 991      817A A0DD 
 991      A84E BEBE 
 991      EB40 3DD6 
 991      6E54 275F 
 992 0a55 FADA 8BEA 	 .ascii "\372\332\213\352\344\353z\007\352\253\355Fu\362\365\275\347\225"
 992      E4EB 7A07 
 992      EAAB ED46 
 992      75F2 F5BD 
 992      E795 
 993 0a67 AA1E 744A 	 .ascii "\252\036tJ\257eAyS\372\265\342\351o\253\035\354\303d\300z\212"
 993      AF65 4179 
 993      53FA B5E2 
 993      E96F AB1D 
 993      ECC3 64C0 
 994 0a7d C176 38E2 	 .ascii "\301v8\342\335\235L\274\331\354\034\237\215s\274\354\232\343"
 994      DD9D 4CBC 
 994      D9EC 1C9F 
 994      8D73 BCEC 
 994      9AE3 
 995 0a8f 799E 6427 	 .ascii "y\236d';\307\357~\376E\277V\333\227\206y$\2310\257\023\303\355"
 995      3BC7 EF7E 
 995      FE45 BF56 
 995      DB97 8679 
 995      2499 30AF 
 996 0aa6 B1E7 AC39 	 .ascii "\261\347\2549\031\260\0341\330~G\316&\370\223\310\331\365?#g"
 996      19B0 1C31 
 996      D87E 47CE 
 996      26F8 93C8 
 996      D9F5 3F23 
 997 0abb D727 9BB3 	 .ascii "\327'\233\263\203\316\234\275\302:\306\003\277A\004\247%N=X\325"
 997      83CE 9CBD 
 997      C23A C603 
 997      BF41 04A7 
 997      254E 3D58 
 998 0ad0 C3B1 A173 	 .ascii "\303\261\241s\334\226\230d\206ilvU\271\\Iu\333[\241\360\267\275"
 998      DC96 9864 
 998      8669 6C76 
 998      55B9 5C49 
 998      75DB 5BA1 
GAS LISTING  			page 78


 999 0ae7 5D88 2330 	 .ascii "]\210#0\t\26318\273%\2477r\2020_D\355\334wb\357kS\336\246\277"
 999      09B3 3138 
 999      BB25 A737 
 999      7282 305F 
 999      44ED DC77 
 1000 0b02 2CF0 97E9 	 .ascii ",\360\227\351\312e\267\306\332\246\213\267\313\252\274\300\312"
 1000      CA65 B7C6 
 1000      DAA6 8BB7 
 1000      CBAA BCC0 
 1000      CA
 1001 0b13 EE1E 3FC5 	 .ascii "\356\036?\305\370o\335L\\\007\266\245*OO\271\016\257\b\342\372"
 1001      F86F DD4C 
 1001      5C07 B6A5 
 1001      2A4F 4FB9 
 1001      0EAF 08E2 
 1002 0b28 8D2D 8D56 	 .ascii "\215-\215V+!L\245\222T\230\313,\347\007R\210t\0021#e\337_\025"
 1002      2B21 4CA5 
 1002      9254 98CB 
 1002      2CE7 0752 
 1002      8874 0231 
 1003 0b41 F81E 6CA3 	 .ascii "\370\036l\243&U\3118k\336V\362\272\353\267\\\277\353\227\322"
 1003      2655 C938 
 1003      6BDE 56F2 
 1003      BAEB B75C 
 1003      BFEB 97D2 
 1004 0b55 3DA3 AD0A 	 .ascii "=\243\255\n\205\270\231W^[\206\330\226\252<+\345\024\275!H\321"
 1004      85B8 9957 
 1004      5E5B 86D8 
 1004      96AA 3C2B 
 1004      E514 BD21 
 1005 0b6b 2F1D E57D 	 .ascii "/\035\345}\243\255\362\316L\256\274\257+\246'\177\244\020\231"
 1005      A3AD F2CE 
 1005      4CAE BCAF 
 1005      2BA6 277F 
 1005      A410 99
 1006 0b7e 6D44 C934 	 .ascii "mD\3114T\3457S\016\262Z\020d\007G\220\325m\0059;\345 \347\233"
 1006      54E5 3753 
 1006      0EB2 5A10 
 1006      6407 4790 
 1006      D56D 0539 
 1007 0b97 3352 F736 	 .ascii "3R\3676\242d[\252\362\274\224\303|K\020\346\245\2160\337j+\314"
 1007      A264 5BAA 
 1007      F2BC 94C3 
 1007      7C4B 10E6 
 1007      A58E 30DF 
 1008 0bae B9C9 0F55 	 .ascii "\271\311\017U\013\365m\342\255\344\215=?\345\024\262\327\022"
 1008      0BF5 6DE2 
 1008      ADE4 8D3D 
 1008      3FE5 14B2 
 1008      D712 
 1009 0bc0 710A DD57 	 .ascii "q\n\335W\235w\024zF\257&\354[\221\237\013\004~\032\354\023Y-"
 1009      9D77 147A 
 1009      46AF 26EC 
 1009      5B91 9F0B 
 1009      047E 1AEC 
 1010 0bd7 125A D9DC 	 .ascii "\022Z\331\334tY-\266\254zJ\263\340\332\332\270\367p\3438y\233"
 1010      7459 2DB6 
GAS LISTING  			page 79


 1010      AC7A 4AB3 
 1010      E0DA DAB8 
 1010      F770 E338 
 1011 0bed A6BD A09D 	 .ascii "\246\275\240\235km\rB\240\227I\323\364\271f\2146\360o\306\255"
 1011      6B6D 0D42 
 1011      A097 49D3 
 1011      F4B9 668C 
 1011      36F0 6FC6 
 1012 0c02 09DE 74A3 	 .ascii "\t\336t\243\337\365U\214\233\033>\003^\225\357\316\264\316\347"
 1012      DFF5 558C 
 1012      9B1B 3E03 
 1012      5E95 EFCE 
 1012      B4CE E7
 1013 0c15 1825 53E5 	 .ascii "\030%S\345'|f2\024i\263\337yW\362\006\251Z\323^\322f\340-.Y\007"
 1013      277C 6632 
 1013      1469 B3DF 
 1013      7957 F206 
 1013      A95A D35E 
 1014 0c30 50A4 AD7A 	 .ascii "P\244\255z\233%JOn\024z#\303\256\\\333Pa\330\031_\003mc\r\231"
 1014      9B25 4A4F 
 1014      6E14 7A23 
 1014      C3AE 5CDB 
 1014      5061 D819 
 1015 0c4a 0992 B8F4 	 .ascii "\t\222\270\364\013\251\006\343\253\257\234\257\333n$\253\037"
 1015      0BA9 06E3 
 1015      ABAF 9CAF 
 1015      DB6E 24AB 
 1015      1F
 1016 0c5b 5187 24D8 	 .ascii "Q\207$\330\345\212\343\333*#{\211\003g{i\343\360\256)\223\266"
 1016      E58A E3DB 
 1016      2A23 7B89 
 1016      0367 7B69 
 1016      E3F0 AE29 
 1017 0c71 7BBB 0BB3 	 .ascii "{\273\013\263\266\226\315\032:\300\246\315\236Rw\026"
 1017      B696 CD1A 
 1017      3AC0 A6CD 
 1017      9E52 7716 
 1018 0c81 F7F0 B258 	 .string "\367\360\262Xn\334(\224\351\355\244\257\365Fk\204i\324\343&\226\253myT\345\325\020\252\303\222\227GR\271f\253r\252\274\2225\344T\316\314\377:\315\310\377\275\335\365\317\320\312\366R\345\367\270\t\177\271\2562\240\325j\215\255\255=\375\316\224/\362`\352Gl\316\373\267\311\324o\371L}\205\304\333\337\212w\2230\336\376\026S\327q2\274))\246\216\325\266\023\246.\"L\025uH\202\375\230\233\270\226\272\2514qR\322\\\335\222\022W\373\363\270\372/>W[+-\256\252rB\317\307\347Iqu%'\223\237'\305\3253\356\332\211\273\354\357\301\325\317Y\256\326\363R\336x\360\310\326/\344C\223\313\023c`\0216 \331\031\"\351\342\354!\305q\277\024\251\"\340\314:\211\004.g\225\t+\216]l\034{\335q4\236JL\337\254Ti\247Z[;'\355\332~\2267x\335q\274\261\177\350\347\215\277\352"
 1018      6EDC 2894 
 1018      E9ED A4AF 
 1018      F546 6B84 
 1018      69D4 E326 
 1019 0d82 77FC 1D20 	 .ascii "w\374\035 \274A\fEZ\2507j\020\026Q\357\211XN\233fYR\306%c\t\214"
 1019      BC41 0C45 
 1019      5AA8 376A 
 1019      1016 51EF 
 1019      8958 4E9B 
 1020 0d9e 2396 7EFC 	 .ascii "#\226~\374pI\033]\372\355\327\230\027\023c{Hf\272\033\330t7r"
 1020      7049 1B5D 
 1020      FAED D798 
 1020      1713 637B 
 1020      4866 BA1B 
 1021 0db6 D3BD 27E5 	 .ascii "\323\275'\345t\177\347\221nfq`[\355\270\026\007\307\024\373\337"
 1021      747F E791 
 1021      6E66 7160 
 1021      5BED B816 
 1021      07C7 14FB 
GAS LISTING  			page 80


 1022 0dcb 4E78 9767 	 .ascii "Nx\227g\025\277<\007+\355I\376ZO\362\221\244\312\263\234$\371"
 1022      15BF 3C07 
 1022      2BED 49FE 
 1022      5A4F F291 
 1022      A4CA B39C 
 1023 0de1 98AD 3C62 	 .ascii "\230\255<b\313c\266\362l\267\312\243\312\337\266a\350Q\236#l"
 1023      CB63 B6F2 
 1023      6CB7 CAA3 
 1023      CADF B661 
 1023      E851 9E23 
 1024 0df6 794E 70CB 	 .ascii "yNp\313\263\274\356\005\301DZ#\274\002%\333N\225\177\360\030"
 1024      B3BC EE05 
 1024      C144 5A23 
 1024      BC02 25DB 
 1024      4E95 7FF0 
 1025 0e0b D4EF F307 	 .ascii "\324\357\363\007\365Xm\222>\250k\310\345\341\337\202\311\220"
 1025      F558 6D92 
 1025      3EA8 6BC8 
 1025      E5E1 DF82 
 1025      C990 
 1026 0e1d F470 961B 	 .ascii "\364p\226\033\325\201\211\267\030\013\2311~cfQ\244:~w\232s\016"
 1026      D581 89B7 
 1026      180B 9931 
 1026      7E63 6651 
 1026      A43A 7E77 
 1027 0e34 6966 B376 	 .ascii "if\263v\216\213\337TGHM\321\353\223B\377\221Eo\341\242\357\370"
 1027      8E8B DF54 
 1027      4748 4DD1 
 1027      EB93 42FF 
 1027      9145 6FE1 
 1028 0e4b 34D5 2173 	 .ascii "4\325!s\3219d\230Q\262\200\273\204\326\333*\322\276\200-\233"
 1028      D139 6498 
 1028      51B2 80BB 
 1028      84D6 DB2A 
 1028      D2BE 802D 
 1029 0e60 9ACF 1C33 	 .ascii "\232\317\0343\346\200Y\304]P\374\223?b6\020\366\"\220\"\235\325"
 1029      E680 59C4 
 1029      5D50 FC93 
 1029      3F62 3610 
 1029      F622 9022 
 1030 0e76 1B5D 10D2 	 .ascii "\033]\020\322W\357\216X\236'\226\306\037\033\234o\303r\221,f"
 1030      57EF 8E58 
 1030      9E27 96C6 
 1030      1F1B 9C6F 
 1030      C372 912C 
 1031 0e8b FE05 36CB 	 .ascii "\376\0056\313\343}\274,\237K9\313S|\314\304d\334\237v\344\345"
 1031      E37D BC2C 
 1031      9F4B 39CB 
 1031      537C CCC4 
 1031      64DC 9F76 
 1032 0ea1 023F 2F0D 	 .ascii "\002?/\r\345Ft\306=\304qi\330h\262Ot\231\257\361\210\016\255"
 1032      E546 74C6 
 1032      3DC4 7169 
 1032      D868 B24F 
 1032      7499 AFF1 
 1033 0eb8 1CD1 BDE8 	 .ascii "\034\321\275\350\216\016\026H[\267\215\365\247\030\336Klx\213"
 1033      8E0E 1648 
GAS LISTING  			page 81


 1033      5BB7 8DF5 
 1033      A718 DE4B 
 1033      6C78 8B
 1034 0ecb DCE1 4D48 	 .ascii "\334\341MH\343\206w\272\322^\274J\275Q\205/\231\342\2253\341"
 1034      E386 77BA 
 1034      D25E BC4A 
 1034      BD51 852F 
 1034      99E2 9533 
 1035 0ee0 55B0 E155 	 .ascii "U\260\341Ur\213W\365Y\252\305\233\341\363\032\"5\334!bX\316\344"
 1035      728B 57F5 
 1035      59AA C59B 
 1035      E1F3 1A22 
 1035      35DC 2162 
 1036 0ef7 0C8A 1AEE 	 .ascii "\f\212\032\356\240\230\316\317\316\031\222\235\231\372\240\230"
 1036      A098 CECF 
 1036      CE19 929D 
 1036      99FA A098 
 1037 0f07 A537 AA12 	 .ascii "\2457\252\022fg\246mP,\257\260\323\246\206\265L\2016Ul^_\347"
 1037      6667 A66D 
 1037      502C AFB0 
 1037      D3A6 86B5 
 1037      4C81 3655 
 1038 0f1f E675 6DCA 	 .ascii "\346um\312y\235\233\004k\026\360\363r\300\301\232Z\275QuR\254"
 1038      799D 9B04 
 1038      6B16 F0F3 
 1038      72C0 C19A 
 1038      5ABD 5175 
 1039 0f35 61A3 AB66 	 .ascii "a\243\253f\243\233\307\215n\367\224\027\005\027\273U\036\027"
 1039      A39B C78D 
 1039      6EF7 9417 
 1039      0517 BB55 
 1039      1E17 
 1040 0f47 B185 3EC7 	 .ascii "\261\205>\307EL\221V\247\t\256\\S\365\311~\025\271r-\260Bq\374"
 1040      454C 9156 
 1040      A709 AE5C 
 1040      53F5 C97E 
 1040      15B9 722D 
 1041 0f5f C118 817D 	 .ascii "\301\030\201}\207\353\342\217\374\002xm\007\227\260\376\255\027"
 1041      87EB E28F 
 1041      FC02 786D 
 1041      0797 B0FE 
 1041      AD17 
 1042 0f71 F937 59F7 	 .ascii "\3717Y\367\217n\274\026\013RM`k\271\376\315\234zK\252\267\b\226"
 1042      8F6E BC16 
 1042      0B52 4D60 
 1042      6BB9 FECD 
 1042      9C7A 4BAA 
 1043 0f88 B30C 4186 	 .ascii "\263\fA\206;\336\260\037J\256\221\365!\237A\315\266\221\005;"
 1043      3BDE B01F 
 1043      4AAE 91F5 
 1043      219F 41CD 
 1043      B691 053B 
 1044 0f9c 4919 574B 	 .ascii "I\031WK"
 1045 0fa0 CB92 1A59 	 .ascii "\313\222\032YK\247\331-7\247`\331\340\260\3744\031K\001k\227"
 1045      4BA7 D92D 
 1045      37A7 60D9 
 1045      E0B0 FC34 
GAS LISTING  			page 82


 1045      194B 016B 
 1046 0fb5 B1AC 5DCD 	 .ascii "\261\254]\315g\355T\021kSb\305\226\344X\261\336\233\025\357q"
 1046      67ED 5411 
 1046      6B53 62C5 
 1046      96E4 58B1 
 1046      DE9B 15EF 
 1047 0fca 5DFC E98B 	 .ascii "]\374\351\213\237\317\332\235\311\371\227\360\366\357\003\256"
 1047      9FCF DA9D 
 1047      C9F9 97F0 
 1047      F6EF 03AE 
 1048 0fda 7FAB FF2F 	 .ascii "\177\253\377/e\326~\304\262\326\261\351\333\310\235\377\033\274"
 1048      65D6 7EC4 
 1048      B2D6 B1E9 
 1048      DBC8 9DFF 
 1048      1BBC 
 1049 0fec E739 6397 	 .ascii "\3479c\227wXo\264I\310\030\373^m\3064\373}\005c"
 1049      7758 6FB4 
 1049      49C8 18FB 
 1049      5E6D C634 
 1049      FB7D 0563 
 1050 1000 3720 B6DC 	 .ascii "7 \266\334\3501Cnb\271\36617Qg\277\024m\007\274n\235~\301\326"
 1050      E831 436E 
 1050      62B9 F631 
 1050      3751 67BF 
 1050      146D 07BC 
 1051 1019 F23B 7E2D 	 .ascii "\362;~-5RKz\223r\213w-\277\344_\372\267\231ko\354W\221N%\327"
 1051      3552 4B7A 
 1051      9372 8B77 
 1051      2DBF E45F 
 1051      FAB7 996B 
 1052 1034 59BD 7767 	 .ascii "Y\275wg\333\270\235\325\277d\333H\314\325\273kn{\t\244\312\323"
 1052      DBB8 9DD5 
 1052      BF64 DB48 
 1052      CCD5 BB6B 
 1052      6E7B 09A4 
 1053 104a 7D58 AA1D 	 .ascii "}X\252\035\355\272\230\355`K\265\223\353Z\323\266T/\325{YJ\257"
 1053      EDBA 98ED 
 1053      604B B593 
 1053      EB5A D3B6 
 1053      542F D57B 
 1054 1061 725F AA5B 	 .ascii "r_\252[\371\3215\274fDg\374\201\363\370 6\332#\270\276\321+ "
 1054      F9D1 35BC 
 1054      6644 67FC 
 1054      81F3 F820 
 1054      36DA 23B8 
 1055 1079 3FBA 3D6C 	 .ascii "?\272=lt\r\334\350\246o7\253l\244\375\371\240\347\026\335H\373"
 1055      740D DCE8 
 1055      A66F 37AB 
 1055      6CA4 FDF9 
 1055      A0E7 16DD 
 1056 108f 013D ED07 	 .ascii "\001=\355\007\333\225\366\203\254c\215\\\307VlO5\355\337\260"
 1056      DB95 F683 
 1056      AC63 8D5C 
 1056      C756 6C4F 
 1056      35ED DFB0 
 1057 10a3 693F 669F 	 .ascii "i?f\237I\370+\311\027\371\321\236\257\264n+(\3224\275\321aa\264"
 1057      49F8 2BC9 
GAS LISTING  			page 83


 1057      17F9 D19E 
 1057      AFB4 6E2B 
 1057      28D2 34BD 
 1058 10bb C714 FE4A 	 .ascii "\307\024\376JR\225'\351y:\334\256\225\344a6OG\270y\332\237r\236"
 1058      5295 27E9 
 1058      793A DCAE 
 1058      95E4 6136 
 1058      4F47 B879 
 1059 10d3 4E78 AED0 	 .ascii "Nx\256\320\371\233X\303\362d\322+\364\031\374\274\322\373\267"
 1059      F99B 58C3 
 1059      F264 D22B 
 1059      F419 FCBC 
 1059      D2FB B7
 1060 10e6 27F5 15FA 	 .ascii "'\365\025\372\034\275\321qa^O\332V\003k8y=\336\256\274\036g\363"
 1060      1CBD D171 
 1060      615E 4FDA 
 1060      5603 6B38 
 1060      793D DEAE 
 1061 10fe 7ADA 9DD7 	 .ascii "z\332\235\327\331\215\211\213\326\3008\241\017\214\032~H\364"
 1061      D98D 898B 
 1061      D6C0 38A1 
 1061      0F8C 1A7E 
 1061      48F4 
 1062 1110 D6FE 497D 	 .ascii "\326\376I}\231rFw\254)\251\220\3529!5\265+\244&6\244f.U\226\355"
 1062      9972 4677 
 1062      AC29 A990 
 1062      EA39 2135 
 1062      B52B A426 
 1063 112b 6242 5ACA 	 .ascii "bBZ\312\017i\032'\244\226\244Bz\237\023RK\273BjaC\372\211\033"
 1063      0F69 1A27 
 1063      A496 A442 
 1063      7A9F 1352 
 1063      4BBB 426A 
 1064 1144 D2AE 5DA9 	 .ascii "\322\256]\251\262\177\214\237\363\345\004\303\336\365\274\274"
 1064      B27F 8C9F 
 1064      F3E5 04C3 
 1064      DEF5 BCBC 
 1065 1154 949B 73A0 	 .ascii "\224\233s\240\361M\331&\275\221\346o\317*\001\255\034\321\215"
 1065      F14D D926 
 1065      BD91 E66F 
 1065      CF2A 01AD 
 1065      1CD1 8D
 1066 1167 F3F3 A2FB 	 .ascii "\363\363\242\373\301*\030\272\255H\233\371\216\035p|-2\301\217"
 1066      C12A 18BA 
 1066      AD48 9BF9 
 1066      8E1D 707C 
 1066      2D32 C18F 
 1067 117b 699F D82E 	 .ascii "i\237\330.\307&\262\216M\342:V\265\333tl\212\316\244-\202y\324"
 1067      C726 B28E 
 1067      4DE2 3A56 
 1067      B5DB 746C 
 1067      8ACE A42D 
 1068 1192 713B 669F 	 .ascii "q;f\237\336h\212\277=|\230\302:\366\002\327\261&\326\261\257"
 1068      DE68 8ABF 
 1068      3D7C 98C2 
 1068      3AF6 02D7 
 1068      B126 D6B1 
GAS LISTING  			page 84


 1069 11a7 F88E BDEC 	 .ascii "\370\216\275\354\330\360\237\322\033\225\267\313\261r\326\261"
 1069      D8F0 9FD2 
 1069      1B95 B7CB 
 1069      B172 D6B1 
 1070 11b7 0AB7 6330 	 .ascii "\n\267c0\235\354h`\356d6\005\005\253)\307\235\314i,\372t.z\023"
 1070      9DEC 6860 
 1070      EE64 3605 
 1070      05AB 29C7 
 1070      9DCC 692C 
 1071 11d0 8B3E 3E3D 	 .ascii "\213>>=\031\364*\026}\006\027\375\3341\372u5\205\257H\n~&\013"
 1071      19F4 2A16 
 1071      7D06 17FD 
 1071      DC31 FA75 
 1071      3585 AF48 
 1072 11e8 FF1A 17BE 	 .ascii "\377\032\027\276\352\214\005o\024\355\265tn\321\3168\3304Oo4"
 1072      EA8C 056F 
 1072      14ED B574 
 1072      6ED1 CE38 
 1072      D834 4F6F 
 1073 11fd AB5D 459B 	 .ascii "\253]E\233\305z\366\006\327\263U.\317\226\360=\263\363\\\225"
 1073      C57A F606 
 1073      D7B3 552E 
 1073      CF96 F03D 
 1073      B3F3 5C95 
 1074 1211 E7E8 03B0 	 .ascii "\347\350\003\260\272]\236U\263\236\315\345\362|\007\365\f\327"
 1074      BA5D 9E55 
 1074      B39E CDE5 
 1074      F27C 07F5 
 1074      0CD7 
 1075 1223 CBBB F59A 	 .ascii "\313\273\365\232\254O\252&o\261\370\363\271\221\2277Q|\205\206"
 1075      AC4F AA26 
 1075      6FB1 F8F3 
 1075      B991 9737 
 1075      517C 8586 
 1076 1237 5EC7 0FFD 	 .ascii "^\307\017\375 '\364\005\355\n}\001\353\332BN\350\345\215\r\233"
 1076      2027 F405 
 1076      ED0A 7D01 
 1076      EBDA 424E 
 1076      E8E5 8D0D 
 1077 124c E75E 3141 	 .ascii "\347^1A;\244%Z[\007H\306W\037\212\364\245+x\003b\t\017\"1s\357"
 1077      3BA4 255A 
 1077      5B07 48C6 
 1077      571F 8AF4 
 1077      A52B 7803 
 1078 1267 D881 CE69 	 .ascii "\330\201\316ib\247\300~)\307\276\266\361\302\274\243\275\336"
 1078      62A7 C07E 
 1078      29C7 BEB6 
 1078      F1C2 BCA3 
 1078      BDDE 
 1079 1279 98AC 7DA0 	 .ascii "\230\254}\240\177C\273TK|\036\260_~\222~\272\264\261\345\255"
 1079      7F43 BB54 
 1079      4B7C 1EB0 
 1079      5F7E 927E 
 1079      BAB4 B1E5 
 1080 128e 43F7 2CD1 	 .ascii "C\367,\321\264tU^\241\177K8/\343\347>c\352\316:\371\372aQ\206"
 1080      B474 555E 
 1080      A17F 4B38 
GAS LISTING  			page 85


 1080      2FE3 E73E 
 1080      63EA CE3A 
 1081 12a7 EDEB 87E5 	 .ascii "\355\353\207\345\3545\320\370\372\314q\r\\\351\360\205\240\254"
 1081      EC35 D0F8 
 1081      FACC 710D 
 1081      5CE9 F085 
 1081      A0AC 
 1082 12b9 D751 C89B 	 .ascii "\327Q\310\233M\024\222\274\377\304\352\202\367\"\345\333\260"
 1082      4D14 92BC 
 1082      FFC4 EA82 
 1082      F722 E5DB 
 1082      B0
 1083 12ca 78E3 10B3 	 .ascii "x\343\020\263|I_\265?`=^\334\366\332\2761\203_\323\217\270\264"
 1083      7C49 5FB5 
 1083      3F60 3D5E 
 1083      DCF6 DABE 
 1083      3183 5FD3 
 1084 12e1 DAB7 7993 	 .ascii "\332\267y\223b\243\2251\317\235\020@\324\th\361I\317Y\026-\264"
 1084      62A3 9531 
 1084      CF9D 1040 
 1084      D409 68F1 
 1084      49CF 5916 
 1085 12f7 1501 677C 	 .ascii "\025\001g|\0032E\365Q\345wuD\222\311\0373d\032\334\265\322\330"
 1085      0332 45F5 
 1085      51E5 7775 
 1085      4492 C91F 
 1085      3364 1ADC 
 1086 130e 0EAF 6BE9 	 .ascii "\016\257k\351\022\343\300'l>\006d\262_\275\232oWp\277\212\035"
 1086      12E3 C027 
 1086      6C3E 0664 
 1086      B25F BD9A 
 1086      6F57 70BF 
 1087 1324 DFC1 555F 	 .ascii "\337\301U_U^oy\241\312\357\261\277\352\303\255g\303\346\267\322"
 1087      555E 6F79 
 1087      A1CA EFB1 
 1087      BFEA C3AD 
 1087      67C3 E6B7 
 1088 1339 5C79 9BD2 	 .ascii "\\y\233\322\201\237\267]\334\341\270\374\333^\343yw\215\274\276"
 1088      819F B75D 
 1088      DCE1 B8FC 
 1088      DB5E E379 
 1088      778D BCBE 
 1089 134d F1DC E3F7 	 .ascii "\361\334\343\367\332\304,\362\330\304\354\363gZ\0169R\362\262"
 1089      DAC4 2CF2 
 1089      D8C4 ECF3 
 1089      675A 0E39 
 1089      52F2 B2
 1090 1360 C0EB 06AE 	 .ascii "\300\353\006\256\327\025\223o\031\357\274*\256\020\330\037\340"
 1090      D715 936F 
 1090      19EF BC2A 
 1090      AE10 D81F 
 1090      E0
 1091 1371 DA9F ABB3 	 .ascii "\332\237\253\263&!\303\376c\201\375A\247\375\237d\337\233~\232"
 1091      2621 C3FE 
 1091      6381 FD41 
 1091      A7FD 9F64 
 1091      DF9B 7E9A 
GAS LISTING  			page 86


 1092 1385 FEF5 8BEB 	 .ascii "\376\365\213\353\345\324\207\323\327\236\303i\025w8\355\024x"
 1092      E5D4 87D3 
 1092      D79E C369 
 1092      1577 38ED 
 1092      1478 
 1093 1397 F7AD CBBB 	 .ascii "\367\255\313\273j?\376;\307\364q\337\363\363\002\tr\263\213N"
 1093      6A3F FE3B 
 1093      C7F4 71DF 
 1093      F3F3 0209 
 1093      72B3 8B4E 
 1094 13ab B887 0568 	 .ascii "\270\207\005hG\271\271z\275\035\f9\306\306\310\371\026\361\204"
 1094      47B9 B97A 
 1094      BD1D 0C39 
 1094      C6C6 C8F9 
 1094      16F1 84
 1095 13be C08B 135C 	 .ascii "\300\213\023\\/\326\354e+vV`"
 1095      2FD6 EC65 
 1095      2B76 5660 
 1096 13ca 7F92 6B7F 	 .string "\177\222k\177\321U\361q\231|\373\323\\\373U\323\264\3612N.\243\251}\245\300\376\f\327~\345\321^&c\227\030{Z\201\375Y\256}\313D\226\361\357\n\354\233\271\366\315u/\230<H\276\216\347\3331\365o\024\370\365\023\327\257J[^\215\345\3046\201\375E\256\375\0053/I\017@-\300!'\033T[\357\231\240\367\t\234\236\020`\007\350;>\352z\255\031z\322\256OJ\306u\366\257\030\004\256Mq\272\226#\315\321Nmm<x\244\261I>\204\177\\\f\\\031\335S\225\337\226\273\342\ra\023\204\270f\373m\021r\311\032k\335$P\345\027\t\370\235\322rmR\242\257\001CL\231\0377\351D\237{\262k\024\252\031M\\k\334\232\2708\036V\273c\306k?\301j\313x\006G\221\246f1~\271\037\326\251\260\3424bL\254\232\200@\032\001\232\246 \320t\026\310\376t\f/\302\227\035\021\326\336a"
 1096      D155 F171 
 1096      997C FBD3 
 1096      5CFB 55D3 
 1096      B4F1 324E 
 1097 14cb B121 2AAE 	 .ascii "\261!*\256\020\037t\205h\006\355\243\232_S\215\237j\246\312T"
 1097      101F 7485 
 1097      6806 EDA3 
 1097      9A5F 538D 
 1097      9F6A A6CA 
 1098 14e0 15A0 2A95 	 .ascii "\025\240*\225j\322\250\346Y\252\tR\315>\331I%P\2350U\031TUo\252"
 1098      6AD2 A8E6 
 1098      59AA 0952 
 1098      CD3E D949 
 1098      2550 9D30 
 1099 14fa 3A50 553F 	 .ascii ":PU?\252\311\244\032\263M\226\313\357\216T\223M5\235\250&\213"
 1099      AAC9 A41A 
 1099      B34D 96CB 
 1099      EF8E 5493 
 1099      4D35 9DA8 
 1100 1510 6A3A 534D 	 .ascii "j:SM\302\004\352BU\265\246\252\253\333\313nT5\210j.\241\2324"
 1100      C204 EA42 
 1100      55B5 A6AA 
 1100      ABDB CB6E 
 1100      5435 886A 
 1101 1528 AAB9 D495 	 .ascii "\252\271\324\225\201\356.\253\313\250&\235j.\247\232mfg=\250"
 1101      81EE 2EAB 
 1101      CBA8 269D 
 1101      6A2E A79A 
 1101      6D66 673D 
 1102 153d AAD9 545D 	 .ascii "\252\331T]AUOQ\315\225\256\342^E5\323M\263\253]\365\276\206j"
 1102      4155 4F51 
 1102      CD95 AEE2 
 1102      5E45 35D3 
 1102      4DB3 AB5D 
 1103 1555 EEA7 9A6B 	 .ascii "\356\247\232k\251\346I\252\351I5\373M\240l\252\272\235j\256\243"
 1103      A9E6 49AA 
 1103      E949 35FB 
 1103      4DA0 6CAA 
GAS LISTING  			page 87


 1103      BA9D 6AAE 
 1104 156a 9ACD 66A3 	 .ascii "\232\315f\243\034\252\332k\252\256\247\252;\250\346\006W\341"
 1104      1CAA DA6B 
 1104      AAAE A7AA 
 1104      3BA8 E606 
 1104      57E1 
 1105 157c 6E74 697E 	 .ascii "nti~\341\322"
 1105      E1D2 
 1106 1582 DCE4 D2F4 	 .string "\334\344\322\364ri~\351\322\334\354\322\334B5\232\351\342\255T\265\333T\335FU\217PMo\252y\311l\324\207\252n\240\232\276.\263~n\263\333\251j\256\251\272\203\252ZM\325\235T\365\231\251\372\025U\375\323T\365\247\2522\252\271\313\ru7U\345S\315\257\251\346oTs\017\325\204\250\346?\\\364\372O\252\271\215j\376\213j:R\315\275\256A1\3005(\006\272\247\205\373\250\252\224j\356\247\232\026\263\321 \252\352L5\203\251\306O5\017P\315O\246\331\203.\016<\344\002z\230j\026\232f\217\270\260\177C5\271\326\034\336r:]\033\247\351O\300\250\362k\372\024>\207\235\302\355O\300\361\246\360W\310\024~\255\2640\353u\255j\240\001dvq\316q\231\230\243\367\261\213\355\303\366\374\031\257\213\231f\027\215\244\2139\366.\232\034]\324\350]\034g\273\260?\374\305\353\343\r\263\217&\322G\215\331\007\354"
 1106      7269 7EE9 
 1106      D2DC ECD2 
 1106      DC42 359A 
 1106      E9E2 AD54 
 1107 1683 D67C 7F7E 	 .ascii "\326|\177~\233\\\241\225\2770\233^\321\365n^\353\310.\013T\271"
 1107      9B5C A195 
 1107      BF30 9B5E 
 1107      D1F5 6E5E 
 1107      EBC8 2E0B 
 1108 1699 9ABD 54E2 	 .ascii "\232\275T\342\037\304\327\201\261\265\034X\250\033/\354\310\370"
 1108      1FC4 D781 
 1108      B1B5 1C58 
 1108      A81B 2FEC 
 1108      C8F8 
 1109 16ab 687F BA8A 	 .ascii "h\177\272\212\347c\215\351\343\312\216\206\217\013M\037goK\274"
 1109      E763 8DE9 
 1109      E3CA 8E86 
 1109      8F0B 4D1F 
 1109      676F 4BBC 
 1110 16bf 3151 FFF3 	 .ascii "1Q\377\363\017\315X\007\032\177+U\307\366\341\332M\276M@QM\276"
 1110      0FCD 5807 
 1110      1A7F 2B55 
 1110      C7F6 E1DA 
 1110      4DBE 4D40 
 1111 16d6 F544 3C6D 	 .ascii "\365D<m[b\357\304J\277\205g\334\263\254g\361\334\177\004\345"
 1111      5B62 EFC4 
 1111      4ABF 8567 
 1111      DCB3 AC67 
 1111      F1DC 7F04 
 1112 16eb 0C3F B135 	 .ascii "\f?\2615\261\353\241*M\337\336\211\237\242\325\002\024\3461\002"
 1112      B1EB A12A 
 1112      4DDF DE89 
 1112      9FA2 D502 
 1112      14E6 3102 
 1113 16ff B328 90EA 	 .ascii "\263(\220\352\243y\213\003\374G\363~O\274\201\365%\353\274\273"
 1113      A379 8B03 
 1113      FC47 F37E 
 1113      4FBC 81F5 
 1113      25EB BCBB 
 1114 1713 DB25 4EEF 	 .ascii "\333%N\357!\253\025\337fk\343&\2211b$\341\3736\223\260\324\005"
 1114      21AB 15DF 
 1114      666B E326 
 1114      9131 6224 
 1114      E1FB 3693 
 1115 172a 73B1 C2BE 	 .ascii "s\261\302\276\3562p\316\264\211\263\334\205\363:\376\214\021"
 1115      EE32 70CE 
 1115      B489 B3DC 
 1115      85F3 3AFE 
GAS LISTING  			page 88


 1115      8C11 
 1116 173c 1DB2 468D 	 .ascii "\035\262F\215\377\321\251\255\032\257t\327\230>Z;F\374\013\177"
 1116      FFD1 A9AD 
 1116      1AAF 74D7 
 1116      983E 5A3B 
 1116      46FC 0B7F 
 1117 1750 FA4E DA96 	 .ascii "\372N\332\226T<g\036\253E\325h\246H\342'\376V\333\300\360\234"
 1117      543C 671E 
 1117      AB45 D568 
 1117      A648 E227 
 1117      FE56 DBC0 
 1118 1766 F9DD ADD5 	 .ascii "\371\335\255\325\001\362\303[\314\275\020\334\321\210 \337\r"
 1118      01F2 C35B 
 1118      CCBD 10DC 
 1118      D188 20DF 
 1118      0D
 1119 1777 98F7 4298 	 .ascii "\230\367B\230\237\360\263=\016\350\372\t\2775\001\363\361E9\303"
 1119      9FF0 B33D 
 1119      0EE8 FA09 
 1119      BF35 01F3 
 1119      F145 39C3 
 1120 178b 613D DB6D 	 .ascii "a=\333m\355\352sm\312\324\\'\240&\275\335\310\004\2147\030DP"
 1120      EDEA 736D 
 1120      CAD4 5C27 
 1120      A026 BDDD 
 1120      C804 8C37 
 1121 17a2 EB03 A2E7 	 .ascii "\353\003\242\347\037q\304\210\2546\b\255\316x$\367=\241\325\022"
 1121      1F71 C488 
 1121      AC36 08AD 
 1121      CE78 24F7 
 1121      3DA1 D512 
 1122 17b6 0F0F DFB7 	 .ascii "\017\017\337\267\254\332\375G^Lws=\272\333(tr\203\207\325\007"
 1122      ACDA FD47 
 1122      5E4C 7773 
 1122      3DBA DB28 
 1122      7472 8387 
 1123 17cc 2EDE 7066 	 .ascii ".\336pf"
 1124 17d0 25D7 E3F1 	 .ascii "%\327\343\361\037\232\274\241\217\275\263}\316\360\350s\223\320"
 1124      1F9A BCA1 
 1124      8FBD B37D 
 1124      CEF0 E873 
 1124      93D0 
 1125 17e2 D30F 3D4A 	 .ascii "\323\017=J\367\221\320\252\326\243t\233]\3615\272\177\332\222"
 1125      F791 D0AA 
 1125      D6A3 749B 
 1125      5DF1 35BA 
 1125      7FDA 92
 1126 17f5 F963 5355 	 .ascii "\371cSU\256K\231\331\037\013\230\355\343\273\\\347\021\350'\302"
 1126      AE4B 99D9 
 1126      1F0B 98ED 
 1126      E3BB 5CE7 
 1126      11E8 27C2 
 1127 1809 403F F208 	 .ascii "@?\362\b\364S\241\325K\036\245\370Lh\205\337,\210\254>\027Z\255"
 1127      F453 A1D5 
 1127      4B1E A5F8 
 1127      4C68 85DF 
 1127      2C88 AC3E 
GAS LISTING  			page 89


 1128 1820 F5F0 708B 	 .ascii "\365\360p\213\320\352\204\207\207_\b\255\266x\364\365\245\320"
 1128      D0EA 8487 
 1128      875F 08AD 
 1128      B678 F4F5 
 1128      A5D0 
 1129 1832 4AF4 E35F 	 .ascii "J\364\343_h\265U8\030l\323`/j\025 V\365)\223e\233\200,~\276\313"
 1129      68B5 5538 
 1129      186C D360 
 1129      2F6A 1520 
 1129      56F5 2993 
 1130 184d E51E 8F81 	 .ascii "\345\036\217\201o\027\006\372\201G\001w\b\255\352=\210\271Sh"
 1130      6F17 06FA 
 1130      8147 0177 
 1130      08AD EA3D 
 1130      88B9 5368 
 1131 1861 F58D 4701 	 .ascii "\365\215G\001w\t\255\366zX\355\026Z\355\361(\373\036\321\224"
 1131      7709 ADF6 
 1131      7A58 ED16 
 1131      5AED F128 
 1131      FB1E D194 
 1132 1875 9BFC 6394 	 .ascii "\233\374c\224Loc<\262\270O\350\343'\036V\r|\222\311\016\222="
 1132      4C6F 633C 
 1132      B2B8 4FE8 
 1132      E327 1E56 
 1132      0D7C 92C9 
 1133 188c 45AD B288 	 .ascii "E\255\262\210\325\376\224Iv@@\262\3146;\2575w:\277 X_\245\334"
 1133      D5FE 9449 
 1133      7640 40B2 
 1133      CC36 3BAF 
 1133      3577 3ABF 
 1134 18a5 FB41 41EF 	 .ascii "\373AA\3577\362\023v\314#a\215\2024'\361\225\234\001\360u\200"
 1134      37F2 1376 
 1134      CC23 618D 
 1134      8234 27F1 
 1134      959C 01F0 
 1135 18bb FE22 2EBD 	 .ascii "\376\".\275\225)\352\352\320\317\355\352\033\366\226j \303q\356"
 1135      9529 EAEA 
 1135      D0CF EDEA 
 1135      1BF6 966A 
 1135      20C3 71EE 
 1136 18cf F0C2 C391 	 .ascii "\360\302\303\221\303Bj}\355\221\251#B\253\375\036\303\372;\241"
 1136      C342 6A7D 
 1136      ED91 A923 
 1136      42AB FD1E 
 1136      C3FA 3BA1 
 1137 18e3 D577 1E43 	 .ascii "\325w\036C\355\250\270/\017\253\357\223J\260\307h=\316&x@fr\031"
 1137      EDA8 B82F 
 1137      0FAB EF93 
 1137      4AB0 C768 
 1137      3DCE 2678 
 1138 18fb 3D26 F4F7 	 .ascii "=&\364\367\242\207\277\377\022Z}\345\221\321\223\342\311\313"
 1138      A287 BFFF 
 1138      125A 7DE5 
 1138      91D1 93E2 
 1138      C9CB 
 1139 190d A37A A72C 	 .ascii "\243z\247,\253l\351\r\374\205\344\r\307\322\3617\305!\035\212"
 1139      AB6C E90D 
GAS LISTING  			page 90


 1139      FC85 E40D 
 1139      C7D2 F137 
 1139      C521 1D8A 
 1140 1921 54A5 6F6E 	 .ascii "T\245on\254\277\363Qe\374\337\017\334$\315\303\245\376Oo\275"
 1140      ACBF F351 
 1140      65FC DF0F 
 1140      DC24 CDC3 
 1140      A5FE 4F6F 
 1141 1936 3DB0 0BFB 	 .ascii "=\260\013\373\013\277\364Smry\272\3733\306\261\335\036I8+\f\007"
 1141      0BBF F453 
 1141      6D72 79BA 
 1141      FB33 C6B1 
 1141      DD1E 4938 
 1142 194d BF41 1059 	 .ascii "\277A\020Y5\211\2271\036\363~\263\320j\241\207\3259\321\274\237"
 1142      3589 9731 
 1142      1EF3 7EB3 
 1142      D06A A187 
 1142      D539 D1BC 
 1143 1962 C253 4AED 	 .ascii "\302SJ\355\033\360-\234\001\237\024\037\177\024\006\372\205G"
 1143      1BF0 2D9C 
 1143      019F 141F 
 1143      7F14 06FA 
 1143      8547 
 1144 1974 A017 4481 	 .ascii "\240\027D\201\246\360\260A\273\r\331\025\242\207\237Z\232(\272"
 1144      A6F0 B041 
 1144      BB0D D915 
 1144      A287 9F5A 
 1144      9A28 BA
 1145 1987 8D1E 5663 	 .ascii "\215\036Vc\204V\232\007\321\306\n\255\316{\214\266qi\314h+O\214"
 1145      8456 9A07 
 1145      D1C6 0AAD 
 1145      CE7B 8CB6 
 1145      7169 CC68 
 1146 199e 95F9 7FC1 	 .ascii "\225\371\177\301DF\343\201\346^\023\024\317\026\377n\326"
 1146      4446 E381 
 1146      E65E 1314 
 1146      CF16 FF6E 
 1146      D6
 1147 19af 1EEB E2D9 	 .string "\036\353\342\331b\351\217\331\336\030mzq\341\307\036mx\361jK[^|\325f\213sm\266(\277\330V\213\265m\266\250m\263Eek[-.V\217i\253\227ym\265\330\323f\213\325\363\256\023e]\272\266OYi\254Oq\321\220>\241gb}\212\"\005\305ej\270Oi\\-\212\304{\027Jip\270;?\236\366\320\357\236\310\036$\005\313\214\267\351x\354\327??\356/(\f\305\364ww\334\016\255\036+\016\215\f\307\256\350\335\273\217Z6|HA,44n\235\001Zf\264,^P\024+\210\207\212\212\203\004B~V\036\231V\032\017E\n\302\362s\276\221\241\021\201\222\242xA\241\022}V\211\216T\242\245J\3649%:B\211\226\370#\360aZD\377\364F\265H\315\217D\343\371\005\305\341P$\037`\363\207\304\242!\265 T\032\317/\306\177\342E\303\303\351\330jx\364\231p\026\236\350\206"
 1147      62E9 8FD9 
 1147      DE18 6D7A 
 1147      71E1 C71E 
 1147      6D78 F16A 
 1148 1ab0 91F5 D732 	 .string "\221\365\3272\370\274\264$4\"\022V\203\261\262H\244(2\254\263\032\215\204\313J\324P<\\Z\022\016\253\351\321\310\260X\264,\242\246\205\n\342E\317\204;\026\206J\363\213\243\303\206\205\325\374h\344\362\b4\311\217G\363K\303\021"
 1148      F8BC B424 
 1148      3422 1256 
 1148      83B1 B248 
 1148      A428 32AC 
 1149 1afa D6A3 2E2E 	 .string "\326\243..*\215w4\365\210n\276\003\273\242\310e\016\233\247\303\341\222P1"
 1149      2A8D 7734 
 1149      F588 6EBE 
 1149      03BB A2C8 
 1149      650E 9BA7 
 1150 1b14 3BA1 8AA3 	 .string ";\241\212\243\321\247\r/\272S},\\R<\022OJ\300\315n\221\360\263\020taY\344i\0038\244^R"
 1150      D1A7 0D2F 
 1150      BA53 7D2C 
 1150      5C52 3C12 
GAS LISTING  			page 91


 1150      4F4A C0CD 
 1151 1b38 E144 87E7 	 .ascii "\341D\207\347\227\304\302\3706\2774\036.\351l\031\353\236t.\f"
 1151      97C4 C2F8 
 1151      36BF 341E 
 1151      2EE9 6C19 
 1151      EB9E 742E 
 1152 1b4d 45D4 D2C2 	 .ascii "E\324\322\302\320\323a\370\030\300;\032}\344G\2406\341X\327x"
 1152      D0D3 61F8 
 1152      18C0 3B1A 
 1152      7DE4 47A0 
 1152      36E1 58D7 
 1153 1b62 51C1 D3F9 	 .ascii "Q\301\323\371\245P\373p\276\361\201\256)%\252\302p(\246v0\202"
 1153      A550 FB70 
 1153      BEF1 81AE 
 1153      2925 AAC2 
 1153      7028 A676 
 1154 1b78 8C84 8687 	 .ascii "\214\204\206\207\273By\201/\245}\356\372\325\235p\204\262f\f"
 1154      BB42 7981 
 1154      2FA5 7DEE 
 1154      FAD5 9D70 
 1154      84B2 660C 
 1155 1b8c 8E96 0D29 	 .ascii "\216\226\r)\016?\036}RV\003\245\205EC\343\031O>\0365\224JQ$\375"
 1155      0E3F 1E7D 
 1155      5256 03A5 
 1155      8545 43E3 
 1155      194F 3E1E 
 1156 1ba6 4170 2C0E 	 .ascii "Ap,\016\237\246\203V?\0271\244@\352:\270lxInxx\250(\322\273$"
 1156      9FA6 8356 
 1156      3F17 31A4 
 1156      40EA 3AB8 
 1156      6C78 496E 
 1157 1bc1 148B F7EE 	 .ascii "\024\213\367\356\027\034^\032\217\025\204\342>(r\332\360\320"
 1157      171C 5E1A 
 1157      8F15 84E2 
 1157      3E28 72DA 
 1157      F0D0 
 1158 1bd3 B3C5 E148 	 .ascii "\263\305\341H:Q\225\004\325\202\330\220\221\361pF^\034\332\346"
 1158      3A51 9504 
 1158      D582 D890 
 1158      91F1 7046 
 1158      5E1C DAE6 
 1159 1be7 4106 D307 	 .ascii "A\006\323\007C\035\361$3\0372\022\0356<<<?\277\023*rC#\036{\350"
 1159      431D F124 
 1159      331F 3212 
 1159      1D36 3C3C 
 1159      3C3F BF13 
 1160 1c02 B783 43F1 	 .ascii "\267\203C\361\220\017B\364\001L \017m\345!\235\362\236\t\305"
 1160      900F 42F4 
 1160      014C 200F 
 1160      6DE5 219D 
 1160      F29E 09C5 
 1161 1c16 90EE 7A87 	 .ascii "\220\356z\207}\345g\202\271C\312\206\016\r\307\322\214\203\277"
 1161      7DE5 6782 
 1161      B943 CA86 
 1161      0E0D C7D2 
 1161      8C83 BF
 1162 1c29 B4E8 B970 	 .ascii "\264\350\271p \027\334,I\003\263a\361B\177.4O\313--\214\306\342"
GAS LISTING  			page 92


 1162      2017 DC2C 
 1162      4903 B361 
 1162      F142 7F2E 
 1162      344F CB2D 
 1163 1c41 19B9 25D1 	 .ascii "\031\271%\321\322\242xQ4\022\3145p\002\271\245\305\321x0\027"
 1163      D2A2 7851 
 1163      3412 CC35 
 1163      7002 B9A5 
 1163      C5D1 7830 
 1164 1c56 9C84 92F9 	 .ascii "\234\204\222\371\241\267P0W\325\263\221\226;\024\343\017\222"
 1164      A1B7 5030 
 1164      57D5 B391 
 1164      963B 14E3 
 1164      0F92 
 1165 1c68 1EFD 79F0 	 .ascii "\036\375y\360\217\034M\313\323\221\202y\206\205\017\016\301<"
 1165      8F1C 4DCB 
 1165      D391 8279 
 1165      8685 0F0E 
 1165      C13C 
 1166 1c7a A36F 1F1C 	 .ascii "\243o\037\0342\311\371\223Ej\270\0039\207P\202y\006\246\\\224"
 1166      32C9 F993 
 1166      456A B803 
 1166      3987 5082 
 1166      7906 A65C 
 1167 1c8f 96A7 A366 	 .ascii "\226\247\243f\345\345a\261\215A\350+)R\273>\241W\323P\344!\255"
 1167      E5E5 61B1 
 1167      8D41 E82B 
 1167      2952 BB3E 
 1167      A157 D350 
 1168 1ca6 033A B93B 	 .ascii "\003:\271;>\022)\212\017\246Y\3172Z\345\205c\317\204c\035\036"
 1168      3E12 298A 
 1168      0FA6 59CF 
 1168      325A E585 
 1168      63CF 8463 
 1169 1cbc 87CA 1BA7 	 .ascii "\207\312\033\247\031\367\251\252a\232N\212\037\315\202\312\300"
 1169      19F7 A9AA 
 1169      619A 4E8A 
 1169      1FCD 82CA 
 1169      C0
 1170 1ccd 7032 B41D 	 .ascii "p2\264\035\254R\005\037\212\3061\263\201\\\314h:pTO\255hn\301"
 1170      AC52 051F 
 1170      8AC6 31B3 
 1170      815C CC68 
 1170      3A70 544F 
 1171 1ce5 2081 36BD 	 .ascii " \2016\275\314\217\207\025\024\350M\356\354}w\357\333\355\223"
 1171      CC8F 8715 
 1171      14E8 4DEE 
 1171      EC7D 77EF 
 1171      DBED 93
 1172 1cf8 901A 1E8A 	 .ascii "\220\032\036\212\223\020\026 ?\036\214D#\221\262\342b\230-bP"
 1172      9310 1620 
 1172      3F1E 8C44 
 1172      2391 B2E2 
 1172      6298 2D62 
 1173 1d0d 0778 1B2F 	 .ascii "\007x\033/\214EG\370a\n\030\352/)\213Y\314,\213\027\025\367\353"
 1173      8C45 47F8 
 1173      610A 18EA 
GAS LISTING  			page 93


 1173      2F29 8B59 
 1173      CC2C 8B17 
 1174 1d24 0B96 594F 	 .ascii "\013\226YO\340\204\365x\264_\377\274x,\213\206=\fX\034\034\032"
 1174      E084 F578 
 1174      B45F FFBC 
 1174      782C 8B86 
 1174      3D0C 581C 
 1175 1d3a C986 6414 	 .ascii "\311\206d\024\310\375\322\200#\245\341x\360\201\210\212<\311"
 1175      C8FD D280 
 1175      23A5 E178 
 1175      F081 888A 
 1175      3CC9 
 1176 1d4c 7E22 82E3 	 .ascii "~\"\202\343h\020LSe\305\241\330\375z\272\177\037y\274\260\250"
 1176      6810 4C53 
 1176      65C5 A1D8 
 1176      FD7A BA7F 
 1176      1F79 BCB0 
 1177 1d61 7450 7151 	 .ascii "tPqQ8\022\277dpt\220>\344\0363F\\\036\f\270,#%F&;>\241\317\207"
 1177      3812 BF64 
 1177      7074 903E 
 1177      E41E 3346 
 1177      5C1E 0CB8 
 1178 1d7f D06B 5FE8 	 .ascii "\320k_\3505\003Au~\006\007\205\"\370\246#r\364~:]u1L1\357\206"
 1178      3503 4175 
 1178      7E06 0785 
 1178      22F8 A623 
 1178      72F4 7E3A 
 1179 1d9a 7917 BD71 	 .ascii "y\027\275qY\211\331\242\333C\341\370\240\262X\f\372F\257\036"
 1179      5989 D9A2 
 1179      DB43 E1F8 
 1179      A0B2 580C 
 1179      FA46 AF1E 
 1180 1dae 0E87 D4F4 	 .ascii "\016\207\324\364\207 \0044\351b\370\3640\214\357\342\360\240"
 1180      8720 0434 
 1180      E962 F8F4 
 1180      308C EFE2 
 1180      F0A0 
 1181 1dc0 C290 DE49 	 .ascii "\302\220\336I.\264\3104`\341ch\364`4V\020\246\212hi\3702\310"
 1181      2EB4 C834 
 1181      60E1 6368 
 1181      F460 3456 
 1181      10A6 8A68 
 1182 1dd8 6BA8 AC98 	 .ascii "k\250\254\230\314\202\371\303\303\361\220\316R\243Ii\207\202"
 1182      CC82 F9C3 
 1182      C3F1 90CE 
 1182      52A3 4969 
 1182      8782 
 1183 1dea E8F0 92B0 	 .ascii "\350\360\222\260\212\252\f\234u\376Z\032\215\334y\363\250[s\200"
 1183      8AAA 0C9C 
 1183      75FE 5A1A 
 1183      8DDC 79F3 
 1183      A85B 7380 
 1184 1dfe 15A5 40F4 	 .ascii "\025\245@\364\234{\376\236\2033A\316=9\375z\337\235sk\016\214"
 1184      9C7B FE9E 
 1184      8333 41CE 
 1184      3D39 FD7A 
 1184      DF9D 736B 
GAS LISTING  			page 94


 1185 1e14 B478 B420 	 .ascii "\264x\264 Z\234s\317\235w\215\032%\231Fwd\336\232\023\215\024"
 1185      5A9C 73CF 
 1185      9D77 8D1A 
 1185      2599 4677 
 1185      64DE 9A13 
 1186 1e2a 1745 A0A9 	 .ascii "\027E\240\251\245\275\275{\316\255\3319\006\247J\021\013F5|\336"
 1186      A5BD BD7B 
 1186      CEAD D939 
 1186      06A7 4A11 
 1186      0B46 357C 
 1187 1e3f 99CC 09D1 	 .ascii "\231\314\t\321\310\320\"\244G\247\341#aRD&\346cg\246y\277\256"
 1187      C8D0 22A4 
 1187      47A7 E123 
 1187      6152 4426 
 1187      E663 67A6 
 1188 1e56 7FCF 51C3 	 .ascii "\177\317Q\303\245\005\261\242\222\270\356L\216\224Q0\\\215\351"
 1188      A505 B1A2 
 1188      92B8 EE4C 
 1188      8E94 5130 
 1188      5C8D E9
 1189 1e69 4C4C C769 	 .ascii "LL\307i\024\351\322\2718Z\020*\306w\306\200!\034.R\273\233\323"
 1189      14E9 D2B9 
 1189      385A 102A 
 1189      C677 C680 
 1189      211C 2E52 
 1190 1e80 0D99 B80B 	 .ascii "\r\231\270\013`\232\217w\262\2648\367u\217DG\35032\364i]Y\376"
 1190      609A 8F77 
 1190      B2B4 38F7 
 1190      758F 4447 
 1190      E833 32F4 
 1191 1e98 1FB3 462B 	 .ascii "\037\263F+]"
 1191      5D
 1192               	 .text
 1193               	 .section .gnu.lto_.symtab.5eb0d06daa7ae5d4,"",@progbits
 1194 0000 636D 6472 	 .string "cmdremain"
 1194      656D 6169 
 1194      6E00 
 1195 000a 00        	 .string ""
 1196 000b 00        	 .string ""
 1197 000c 00        	 .string ""
 1198 000d 00        	 .string ""
 1199 000e 00        	 .string ""
 1200 000f 00        	 .string ""
 1201 0010 00        	 .string ""
 1202 0011 00        	 .string ""
 1203 0012 00        	 .string ""
 1204 0013 00        	 .string ""
 1205 0014 00        	 .string ""
 1206 0015 A802 00   	 .string "\250\002"
 1207 0018 00        	 .string ""
 1208 0019 6D73 7472 	 .string "mstrcat"
 1208      6361 7400 
 1209 0021 00        	 .string ""
 1210 0022 00        	 .string ""
 1211 0023 00        	 .string ""
 1212 0024 00        	 .string ""
 1213 0025 00        	 .string ""
GAS LISTING  			page 95


 1214 0026 00        	 .string ""
 1215 0027 00        	 .string ""
 1216 0028 00        	 .string ""
 1217 0029 00        	 .string ""
 1218 002a 00        	 .string ""
 1219 002b 00        	 .string ""
 1220 002c 5B01 00   	 .string "[\001"
 1221 002f 00        	 .string ""
 1222 0030 6D73 7472 	 .string "mstrcatp"
 1222      6361 7470 
 1222      00
 1223 0039 00        	 .string ""
 1224 003a 00        	 .string ""
 1225 003b 00        	 .string ""
 1226 003c 00        	 .string ""
 1227 003d 00        	 .string ""
 1228 003e 00        	 .string ""
 1229 003f 00        	 .string ""
 1230 0040 00        	 .string ""
 1231 0041 00        	 .string ""
 1232 0042 00        	 .string ""
 1233 0043 00        	 .string ""
 1234 0044 6701 00   	 .string "g\001"
 1235 0047 00        	 .string ""
 1236 0048 6463 7262 	 .string "dcrbyte"
 1236      7974 6500 
 1237 0050 00        	 .string ""
 1238 0051 00        	 .string ""
 1239 0052 00        	 .string ""
 1240 0053 00        	 .string ""
 1241 0054 00        	 .string ""
 1242 0055 00        	 .string ""
 1243 0056 00        	 .string ""
 1244 0057 00        	 .string ""
 1245 0058 00        	 .string ""
 1246 0059 00        	 .string ""
 1247 005a 00        	 .string ""
 1248 005b 7201 00   	 .string "r\001"
 1249 005e 00        	 .string ""
 1250 005f 5374 6172 	 .string "StartSend"
 1250      7453 656E 
 1250      6400 
 1251 0069 00        	 .string ""
 1252 006a 00        	 .string ""
 1253 006b 00        	 .string ""
 1254 006c 00        	 .string ""
 1255 006d 00        	 .string ""
 1256 006e 00        	 .string ""
 1257 006f 00        	 .string ""
 1258 0070 00        	 .string ""
 1259 0071 00        	 .string ""
 1260 0072 00        	 .string ""
 1261 0073 00        	 .string ""
 1262 0074 7701 00   	 .string "w\001"
 1263 0077 00        	 .string ""
 1264 0078 446F 6E65 	 .string "DoneSend"
 1264      5365 6E64 
GAS LISTING  			page 96


 1264      00
 1265 0081 00        	 .string ""
 1266 0082 00        	 .string ""
 1267 0083 00        	 .string ""
 1268 0084 00        	 .string ""
 1269 0085 00        	 .string ""
 1270 0086 00        	 .string ""
 1271 0087 00        	 .string ""
 1272 0088 00        	 .string ""
 1273 0089 00        	 .string ""
 1274 008a 00        	 .string ""
 1275 008b 00        	 .string ""
 1276 008c 7A01 00   	 .string "z\001"
 1277 008f 00        	 .string ""
 1278 0090 5365 6E64 	 .string "SendRawPGMData"
 1278      5261 7750 
 1278      474D 4461 
 1278      7461 00
 1279 009f 00        	 .string ""
 1280 00a0 00        	 .string ""
 1281 00a1 00        	 .string ""
 1282 00a2 00        	 .string ""
 1283 00a3 00        	 .string ""
 1284 00a4 00        	 .string ""
 1285 00a5 00        	 .string ""
 1286 00a6 00        	 .string ""
 1287 00a7 00        	 .string ""
 1288 00a8 00        	 .string ""
 1289 00a9 00        	 .string ""
 1290 00aa 7D01 00   	 .string "}\001"
 1291 00ad 00        	 .string ""
 1292 00ae 5362 7974 	 .string "Sbyte"
 1292      6500 
 1293 00b4 00        	 .string ""
 1294 00b5 00        	 .string ""
 1295 00b6 00        	 .string ""
 1296 00b7 00        	 .string ""
 1297 00b8 00        	 .string ""
 1298 00b9 00        	 .string ""
 1299 00ba 00        	 .string ""
 1300 00bb 00        	 .string ""
 1301 00bc 00        	 .string ""
 1302 00bd 00        	 .string ""
 1303 00be 00        	 .string ""
 1304 00bf 8A01 00   	 .string "\212\001"
 1305 00c2 00        	 .string ""
 1306 00c3 5262 7566 	 .string "Rbuffer"
 1306      6665 7200 
 1307 00cb 00        	 .string ""
 1308 00cc 00        	 .string ""
 1309 00cd 00        	 .string ""
 1310 00ce 00        	 .string ""
 1311 00cf 00        	 .string ""
 1312 00d0 00        	 .string ""
 1313 00d1 00        	 .string ""
 1314 00d2 00        	 .string ""
 1315 00d3 00        	 .string ""
GAS LISTING  			page 97


 1316 00d4 00        	 .string ""
 1317 00d5 00        	 .string ""
 1318 00d6 9801 00   	 .string "\230\001"
 1319 00d9 00        	 .string ""
 1320 00da 5264 756D 	 .string "Rdump"
 1320      7000 
 1321 00e0 00        	 .string ""
 1322 00e1 00        	 .string ""
 1323 00e2 00        	 .string ""
 1324 00e3 00        	 .string ""
 1325 00e4 00        	 .string ""
 1326 00e5 00        	 .string ""
 1327 00e6 00        	 .string ""
 1328 00e7 00        	 .string ""
 1329 00e8 00        	 .string ""
 1330 00e9 00        	 .string ""
 1331 00ea 00        	 .string ""
 1332 00eb A301 00   	 .string "\243\001"
 1333 00ee 00        	 .string ""
 1334 00ef 5269 6E74 	 .string "Rint"
 1334      00
 1335 00f4 00        	 .string ""
 1336 00f5 00        	 .string ""
 1337 00f6 00        	 .string ""
 1338 00f7 00        	 .string ""
 1339 00f8 00        	 .string ""
 1340 00f9 00        	 .string ""
 1341 00fa 00        	 .string ""
 1342 00fb 00        	 .string ""
 1343 00fc 00        	 .string ""
 1344 00fd 00        	 .string ""
 1345 00fe 00        	 .string ""
 1346 00ff AA01 00   	 .string "\252\001"
 1347 0102 00        	 .string ""
 1348 0103 5273 686F 	 .string "Rshort"
 1348      7274 00
 1349 010a 00        	 .string ""
 1350 010b 00        	 .string ""
 1351 010c 00        	 .string ""
 1352 010d 00        	 .string ""
 1353 010e 00        	 .string ""
 1354 010f 00        	 .string ""
 1355 0110 00        	 .string ""
 1356 0111 00        	 .string ""
 1357 0112 00        	 .string ""
 1358 0113 00        	 .string ""
 1359 0114 00        	 .string ""
 1360 0115 AE01 00   	 .string "\256\001"
 1361 0118 00        	 .string ""
 1362 0119 5270 6F73 	 .string "Rposition"
 1362      6974 696F 
 1362      6E00 
 1363 0123 00        	 .string ""
 1364 0124 00        	 .string ""
 1365 0125 00        	 .string ""
 1366 0126 00        	 .string ""
 1367 0127 00        	 .string ""
GAS LISTING  			page 98


 1368 0128 00        	 .string ""
 1369 0129 00        	 .string ""
 1370 012a 00        	 .string ""
 1371 012b 00        	 .string ""
 1372 012c 00        	 .string ""
 1373 012d 00        	 .string ""
 1374 012e B201 00   	 .string "\262\001"
 1375 0131 00        	 .string ""
 1376 0132 5276 6172 	 .string "Rvarint"
 1376      696E 7400 
 1377 013a 00        	 .string ""
 1378 013b 00        	 .string ""
 1379 013c 00        	 .string ""
 1380 013d 00        	 .string ""
 1381 013e 00        	 .string ""
 1382 013f 00        	 .string ""
 1383 0140 00        	 .string ""
 1384 0141 00        	 .string ""
 1385 0142 00        	 .string ""
 1386 0143 00        	 .string ""
 1387 0144 00        	 .string ""
 1388 0145 BC01 00   	 .string "\274\001"
 1389 0148 00        	 .string ""
 1390 0149 5273 6C6F 	 .string "Rslot"
 1390      7400 
 1391 014f 00        	 .string ""
 1392 0150 00        	 .string ""
 1393 0151 00        	 .string ""
 1394 0152 00        	 .string ""
 1395 0153 00        	 .string ""
 1396 0154 00        	 .string ""
 1397 0155 00        	 .string ""
 1398 0156 00        	 .string ""
 1399 0157 00        	 .string ""
 1400 0158 00        	 .string ""
 1401 0159 00        	 .string ""
 1402 015a C001 00   	 .string "\300\001"
 1403 015d 00        	 .string ""
 1404 015e 5273 7472 	 .string "Rstring"
 1404      696E 6700 
 1405 0166 00        	 .string ""
 1406 0167 00        	 .string ""
 1407 0168 00        	 .string ""
 1408 0169 00        	 .string ""
 1409 016a 00        	 .string ""
 1410 016b 00        	 .string ""
 1411 016c 00        	 .string ""
 1412 016d 00        	 .string ""
 1413 016e 00        	 .string ""
 1414 016f 00        	 .string ""
 1415 0170 00        	 .string ""
 1416 0171 C401 00   	 .string "\304\001"
 1417 0174 00        	 .string ""
 1418 0175 5264 6F75 	 .string "Rdouble"
 1418      626C 6500 
 1419 017d 00        	 .string ""
 1420 017e 00        	 .string ""
GAS LISTING  			page 99


 1421 017f 00        	 .string ""
 1422 0180 00        	 .string ""
 1423 0181 00        	 .string ""
 1424 0182 00        	 .string ""
 1425 0183 00        	 .string ""
 1426 0184 00        	 .string ""
 1427 0185 00        	 .string ""
 1428 0186 00        	 .string ""
 1429 0187 00        	 .string ""
 1430 0188 CD01 00   	 .string "\315\001"
 1431 018b 00        	 .string ""
 1432 018c 5266 6C6F 	 .string "Rfloat"
 1432      6174 00
 1433 0193 00        	 .string ""
 1434 0194 00        	 .string ""
 1435 0195 00        	 .string ""
 1436 0196 00        	 .string ""
 1437 0197 00        	 .string ""
 1438 0198 00        	 .string ""
 1439 0199 00        	 .string ""
 1440 019a 00        	 .string ""
 1441 019b 00        	 .string ""
 1442 019c 00        	 .string ""
 1443 019d 00        	 .string ""
 1444 019e D101 00   	 .string "\321\001"
 1445 01a1 00        	 .string ""
 1446 01a2 5376 6172 	 .string "Svarint"
 1446      696E 7400 
 1447 01aa 00        	 .string ""
 1448 01ab 00        	 .string ""
 1449 01ac 00        	 .string ""
 1450 01ad 00        	 .string ""
 1451 01ae 00        	 .string ""
 1452 01af 00        	 .string ""
 1453 01b0 00        	 .string ""
 1454 01b1 00        	 .string ""
 1455 01b2 00        	 .string ""
 1456 01b3 00        	 .string ""
 1457 01b4 00        	 .string ""
 1458 01b5 D401 00   	 .string "\324\001"
 1459 01b8 00        	 .string ""
 1460 01b9 5369 6E74 	 .string "Sint"
 1460      00
 1461 01be 00        	 .string ""
 1462 01bf 00        	 .string ""
 1463 01c0 00        	 .string ""
 1464 01c1 00        	 .string ""
 1465 01c2 00        	 .string ""
 1466 01c3 00        	 .string ""
 1467 01c4 00        	 .string ""
 1468 01c5 00        	 .string ""
 1469 01c6 00        	 .string ""
 1470 01c7 00        	 .string ""
 1471 01c8 00        	 .string ""
 1472 01c9 D801 00   	 .string "\330\001"
 1473 01cc 00        	 .string ""
 1474 01cd 5373 686F 	 .string "Sshort"
GAS LISTING  			page 100


 1474      7274 00
 1475 01d4 00        	 .string ""
 1476 01d5 00        	 .string ""
 1477 01d6 00        	 .string ""
 1478 01d7 00        	 .string ""
 1479 01d8 00        	 .string ""
 1480 01d9 00        	 .string ""
 1481 01da 00        	 .string ""
 1482 01db 00        	 .string ""
 1483 01dc 00        	 .string ""
 1484 01dd 00        	 .string ""
 1485 01de 00        	 .string ""
 1486 01df DF01 00   	 .string "\337\001"
 1487 01e2 00        	 .string ""
 1488 01e3 5373 7472 	 .string "Sstring"
 1488      696E 6700 
 1489 01eb 00        	 .string ""
 1490 01ec 00        	 .string ""
 1491 01ed 00        	 .string ""
 1492 01ee 00        	 .string ""
 1493 01ef 00        	 .string ""
 1494 01f0 00        	 .string ""
 1495 01f1 00        	 .string ""
 1496 01f2 00        	 .string ""
 1497 01f3 00        	 .string ""
 1498 01f4 00        	 .string ""
 1499 01f5 00        	 .string ""
 1500 01f6 E301 00   	 .string "\343\001"
 1501 01f9 00        	 .string ""
 1502 01fa 5362 7566 	 .string "Sbuffer"
 1502      6665 7200 
 1503 0202 00        	 .string ""
 1504 0203 00        	 .string ""
 1505 0204 00        	 .string ""
 1506 0205 00        	 .string ""
 1507 0206 00        	 .string ""
 1508 0207 00        	 .string ""
 1509 0208 00        	 .string ""
 1510 0209 00        	 .string ""
 1511 020a 00        	 .string ""
 1512 020b 00        	 .string ""
 1513 020c 00        	 .string ""
 1514 020d EC01 00   	 .string "\354\001"
 1515 0210 00        	 .string ""
 1516 0211 5362 7566 	 .string "SbufferWide"
 1516      6665 7257 
 1516      6964 6500 
 1517 021d 00        	 .string ""
 1518 021e 00        	 .string ""
 1519 021f 00        	 .string ""
 1520 0220 00        	 .string ""
 1521 0221 00        	 .string ""
 1522 0222 00        	 .string ""
 1523 0223 00        	 .string ""
 1524 0224 00        	 .string ""
 1525 0225 00        	 .string ""
 1526 0226 00        	 .string ""
GAS LISTING  			page 101


 1527 0227 00        	 .string ""
 1528 0228 F601 00   	 .string "\366\001"
 1529 022b 00        	 .string ""
 1530 022c 5362 7566 	 .string "SbufferPGM"
 1530      6665 7250 
 1530      474D 00
 1531 0237 00        	 .string ""
 1532 0238 00        	 .string ""
 1533 0239 00        	 .string ""
 1534 023a 00        	 .string ""
 1535 023b 00        	 .string ""
 1536 023c 00        	 .string ""
 1537 023d 00        	 .string ""
 1538 023e 00        	 .string ""
 1539 023f 00        	 .string ""
 1540 0240 00        	 .string ""
 1541 0241 00        	 .string ""
 1542 0242 FB01 00   	 .string "\373\001"
 1543 0245 00        	 .string ""
 1544 0246 5364 6F75 	 .string "Sdouble"
 1544      626C 6500 
 1545 024e 00        	 .string ""
 1546 024f 00        	 .string ""
 1547 0250 00        	 .string ""
 1548 0251 00        	 .string ""
 1549 0252 00        	 .string ""
 1550 0253 00        	 .string ""
 1551 0254 00        	 .string ""
 1552 0255 00        	 .string ""
 1553 0256 00        	 .string ""
 1554 0257 00        	 .string ""
 1555 0258 00        	 .string ""
 1556 0259 00        	 .string ""
 1557 025a 0200      	 .string "\002"
 1558 025c 00        	 .string ""
 1559 025d 5366 6C6F 	 .string "Sfloat"
 1559      6174 00
 1560 0264 00        	 .string ""
 1561 0265 00        	 .string ""
 1562 0266 00        	 .string ""
 1563 0267 00        	 .string ""
 1564 0268 00        	 .string ""
 1565 0269 00        	 .string ""
 1566 026a 00        	 .string ""
 1567 026b 00        	 .string ""
 1568 026c 00        	 .string ""
 1569 026d 00        	 .string ""
 1570 026e 00        	 .string ""
 1571 026f 0702 00   	 .string "\007\002"
 1572 0272 00        	 .string ""
 1573 0273 5353 7061 	 .string "SSpawnPlayer"
 1573      776E 506C 
 1573      6179 6572 
 1573      00
 1574 0280 00        	 .string ""
 1575 0281 00        	 .string ""
 1576 0282 00        	 .string ""
GAS LISTING  			page 102


 1577 0283 00        	 .string ""
 1578 0284 00        	 .string ""
 1579 0285 00        	 .string ""
 1580 0286 00        	 .string ""
 1581 0287 00        	 .string ""
 1582 0288 00        	 .string ""
 1583 0289 00        	 .string ""
 1584 028a 00        	 .string ""
 1585 028b 0B02 00   	 .string "\013\002"
 1586 028e 00        	 .string ""
 1587 028f 506C 6179 	 .string "Players"
 1587      6572 7300 
 1588 0297 00        	 .string ""
 1589 0298 0400      	 .string "\004"
 1590 029a 3600      	 .string "6"
 1591 029c 00        	 .string ""
 1592 029d 00        	 .string ""
 1593 029e 00        	 .string ""
 1594 029f 00        	 .string ""
 1595 02a0 00        	 .string ""
 1596 02a1 00        	 .string ""
 1597 02a2 9002 00   	 .string "\220\002"
 1598 02a5 00        	 .string ""
 1599 02a6 6465 6661 	 .string "default_spawn_metadata"
 1599      756C 745F 
 1599      7370 6177 
 1599      6E5F 6D65 
 1599      7461 6461 
 1600 02bd 00        	 .string ""
 1601 02be 00        	 .string ""
 1602 02bf 00        	 .string ""
 1603 02c0 00        	 .string ""
 1604 02c1 00        	 .string ""
 1605 02c2 00        	 .string ""
 1606 02c3 00        	 .string ""
 1607 02c4 00        	 .string ""
 1608 02c5 00        	 .string ""
 1609 02c6 00        	 .string ""
 1610 02c7 00        	 .string ""
 1611 02c8 8C02 00   	 .string "\214\002"
 1612 02cb 00        	 .string ""
 1613 02cc 5570 6461 	 .string "UpdatePlayerSpeed"
 1613      7465 506C 
 1613      6179 6572 
 1613      5370 6565 
 1613      6400 
 1614 02de 00        	 .string ""
 1615 02df 00        	 .string ""
 1616 02e0 00        	 .string ""
 1617 02e1 00        	 .string ""
 1618 02e2 00        	 .string ""
 1619 02e3 00        	 .string ""
 1620 02e4 00        	 .string ""
 1621 02e5 00        	 .string ""
 1622 02e6 00        	 .string ""
 1623 02e7 00        	 .string ""
 1624 02e8 00        	 .string ""
GAS LISTING  			page 103


 1625 02e9 1002 00   	 .string "\020\002"
 1626 02ec 00        	 .string ""
 1627 02ed 706C 6179 	 .string "playerid"
 1627      6572 6964 
 1627      00
 1628 02f6 00        	 .string ""
 1629 02f7 0400      	 .string "\004"
 1630 02f9 0100      	 .string "\001"
 1631 02fb 00        	 .string ""
 1632 02fc 00        	 .string ""
 1633 02fd 00        	 .string ""
 1634 02fe 00        	 .string ""
 1635 02ff 00        	 .string ""
 1636 0300 00        	 .string ""
 1637 0301 B002 00   	 .string "\260\002"
 1638 0304 00        	 .string ""
 1639 0305 496E 6974 	 .string "InitDumbcraft"
 1639      4475 6D62 
 1639      6372 6166 
 1639      7400 
 1640 0313 00        	 .string ""
 1641 0314 00        	 .string ""
 1642 0315 00        	 .string ""
 1643 0316 00        	 .string ""
 1644 0317 00        	 .string ""
 1645 0318 00        	 .string ""
 1646 0319 00        	 .string ""
 1647 031a 00        	 .string ""
 1648 031b 00        	 .string ""
 1649 031c 00        	 .string ""
 1650 031d 00        	 .string ""
 1651 031e 1502 00   	 .string "\025\002"
 1652 0321 00        	 .string ""
 1653 0322 5570 6461 	 .string "UpdateServer"
 1653      7465 5365 
 1653      7276 6572 
 1653      00
 1654 032f 00        	 .string ""
 1655 0330 00        	 .string ""
 1656 0331 00        	 .string ""
 1657 0332 00        	 .string ""
 1658 0333 00        	 .string ""
 1659 0334 00        	 .string ""
 1660 0335 00        	 .string ""
 1661 0336 00        	 .string ""
 1662 0337 00        	 .string ""
 1663 0338 00        	 .string ""
 1664 0339 00        	 .string ""
 1665 033a 1802 00   	 .string "\030\002"
 1666 033d 00        	 .string ""
 1667 033e 6475 6D62 	 .string "dumbcraft_playercount"
 1667      6372 6166 
 1667      745F 706C 
 1667      6179 6572 
 1667      636F 756E 
 1668 0354 00        	 .string ""
 1669 0355 0400      	 .string "\004"
GAS LISTING  			page 104


 1670 0357 0100      	 .string "\001"
 1671 0359 00        	 .string ""
 1672 035a 00        	 .string ""
 1673 035b 00        	 .string ""
 1674 035c 00        	 .string ""
 1675 035d 00        	 .string ""
 1676 035e 00        	 .string ""
 1677 035f B202 00   	 .string "\262\002"
 1678 0362 00        	 .string ""
 1679 0363 7069 6E67 	 .string "pingjson1"
 1679      6A73 6F6E 
 1679      3100 
 1680 036d 00        	 .string ""
 1681 036e 00        	 .string ""
 1682 036f 00        	 .string ""
 1683 0370 00        	 .string ""
 1684 0371 00        	 .string ""
 1685 0372 00        	 .string ""
 1686 0373 00        	 .string ""
 1687 0374 00        	 .string ""
 1688 0375 00        	 .string ""
 1689 0376 00        	 .string ""
 1690 0377 00        	 .string ""
 1691 0378 A402 00   	 .string "\244\002"
 1692 037b 00        	 .string ""
 1693 037c 7069 6E67 	 .string "pingjson2"
 1693      6A73 6F6E 
 1693      3200 
 1694 0386 00        	 .string ""
 1695 0387 00        	 .string ""
 1696 0388 00        	 .string ""
 1697 0389 00        	 .string ""
 1698 038a 00        	 .string ""
 1699 038b 00        	 .string ""
 1700 038c 00        	 .string ""
 1701 038d 00        	 .string ""
 1702 038e 00        	 .string ""
 1703 038f 00        	 .string ""
 1704 0390 00        	 .string ""
 1705 0391 9E02 00   	 .string "\236\002"
 1706 0394 00        	 .string ""
 1707 0395 7069 6E67 	 .string "pingjson3"
 1707      6A73 6F6E 
 1707      3300 
 1708 039f 00        	 .string ""
 1709 03a0 00        	 .string ""
 1710 03a1 00        	 .string ""
 1711 03a2 00        	 .string ""
 1712 03a3 00        	 .string ""
 1713 03a4 00        	 .string ""
 1714 03a5 00        	 .string ""
 1715 03a6 00        	 .string ""
 1716 03a7 00        	 .string ""
 1717 03a8 00        	 .string ""
 1718 03a9 00        	 .string ""
 1719 03aa 9A02 00   	 .string "\232\002"
 1720 03ad 00        	 .string ""
GAS LISTING  			page 105


 1721 03ae 7069 6E67 	 .string "pingjson4"
 1721      6A73 6F6E 
 1721      3400 
 1722 03b8 00        	 .string ""
 1723 03b9 00        	 .string ""
 1724 03ba 00        	 .string ""
 1725 03bb 00        	 .string ""
 1726 03bc 00        	 .string ""
 1727 03bd 00        	 .string ""
 1728 03be 00        	 .string ""
 1729 03bf 00        	 .string ""
 1730 03c0 00        	 .string ""
 1731 03c1 00        	 .string ""
 1732 03c2 00        	 .string ""
 1733 03c3 9602 00   	 .string "\226\002"
 1734 03c6 00        	 .string ""
 1735 03c7 636F 6D70 	 .string "compeddata"
 1735      6564 6461 
 1735      7461 00
 1736 03d2 00        	 .string ""
 1737 03d3 00        	 .string ""
 1738 03d4 00        	 .string ""
 1739 03d5 00        	 .string ""
 1740 03d6 00        	 .string ""
 1741 03d7 00        	 .string ""
 1742 03d8 00        	 .string ""
 1743 03d9 00        	 .string ""
 1744 03da 00        	 .string ""
 1745 03db 00        	 .string ""
 1746 03dc 00        	 .string ""
 1747 03dd 9202 00   	 .string "\222\002"
 1748 03e0 00        	 .string ""
 1749 03e1 5469 636B 	 .string "TickServer"
 1749      5365 7276 
 1749      6572 00
 1750 03ec 00        	 .string ""
 1751 03ed 00        	 .string ""
 1752 03ee 00        	 .string ""
 1753 03ef 00        	 .string ""
 1754 03f0 00        	 .string ""
 1755 03f1 00        	 .string ""
 1756 03f2 00        	 .string ""
 1757 03f3 00        	 .string ""
 1758 03f4 00        	 .string ""
 1759 03f5 00        	 .string ""
 1760 03f6 00        	 .string ""
 1761 03f7 1B        	 .ascii "\033"
 1762 03f8 0200      	 .string "\002"
 1763 03fa 00        	 .string ""
 1764 03fb 6475 6D62 	 .string "dumbcraft_tick"
 1764      6372 6166 
 1764      745F 7469 
 1764      636B 00
 1765 040a 00        	 .string ""
 1766 040b 00        	 .string ""
 1767 040c 00        	 .string ""
 1768 040d 00        	 .string ""
GAS LISTING  			page 106


 1769 040e 00        	 .string ""
 1770 040f 00        	 .string ""
 1771 0410 00        	 .string ""
 1772 0411 00        	 .string ""
 1773 0412 00        	 .string ""
 1774 0413 00        	 .string ""
 1775 0414 00        	 .string ""
 1776 0415 B402 00   	 .string "\264\002"
 1777 0418 00        	 .string ""
 1778 0419 4164 6450 	 .string "AddPlayer"
 1778      6C61 7965 
 1778      7200 
 1779 0423 00        	 .string ""
 1780 0424 00        	 .string ""
 1781 0425 00        	 .string ""
 1782 0426 00        	 .string ""
 1783 0427 00        	 .string ""
 1784 0428 00        	 .string ""
 1785 0429 00        	 .string ""
 1786 042a 00        	 .string ""
 1787 042b 00        	 .string ""
 1788 042c 00        	 .string ""
 1789 042d 00        	 .string ""
 1790 042e 1E02 00   	 .string "\036\002"
 1791 0431 00        	 .string ""
 1792 0432 5265 6D6F 	 .string "RemovePlayer"
 1792      7665 506C 
 1792      6179 6572 
 1792      00
 1793 043f 00        	 .string ""
 1794 0440 00        	 .string ""
 1795 0441 00        	 .string ""
 1796 0442 00        	 .string ""
 1797 0443 00        	 .string ""
 1798 0444 00        	 .string ""
 1799 0445 00        	 .string ""
 1800 0446 00        	 .string ""
 1801 0447 00        	 .string ""
 1802 0448 00        	 .string ""
 1803 0449 00        	 .string ""
 1804 044a 2302 00   	 .string "#\002"
 1805 044d 00        	 .string ""
 1806 044e 4475 6D70 	 .string "DumpRemain"
 1806      5265 6D61 
 1806      696E 00
 1807 0459 00        	 .string ""
 1808 045a 00        	 .string ""
 1809 045b 00        	 .string ""
 1810 045c 00        	 .string ""
 1811 045d 00        	 .string ""
 1812 045e 00        	 .string ""
 1813 045f 00        	 .string ""
 1814 0460 00        	 .string ""
 1815 0461 00        	 .string ""
 1816 0462 00        	 .string ""
 1817 0463 00        	 .string ""
 1818 0464 2702 00   	 .string "'\002"
GAS LISTING  			page 107


 1819 0467 00        	 .string ""
 1820 0468 476F 7444 	 .string "GotData"
 1820      6174 6100 
 1821 0470 00        	 .string ""
 1822 0471 00        	 .string ""
 1823 0472 00        	 .string ""
 1824 0473 00        	 .string ""
 1825 0474 00        	 .string ""
 1826 0475 00        	 .string ""
 1827 0476 00        	 .string ""
 1828 0477 00        	 .string ""
 1829 0478 00        	 .string ""
 1830 0479 00        	 .string ""
 1831 047a 00        	 .string ""
 1832 047b 2A02 00   	 .string "*\002"
 1833 047e 00        	 .string ""
 1834 047f 6D79 5F73 	 .string "my_server_name"
 1834      6572 7665 
 1834      725F 6E61 
 1834      6D65 00
 1835 048e 00        	 .string ""
 1836 048f 0200      	 .string "\002"
 1837 0491 00        	 .string ""
 1838 0492 00        	 .string ""
 1839 0493 00        	 .string ""
 1840 0494 00        	 .string ""
 1841 0495 00        	 .string ""
 1842 0496 00        	 .string ""
 1843 0497 00        	 .string ""
 1844 0498 00        	 .string ""
 1845 0499 A202 00   	 .string "\242\002"
 1846 049c 00        	 .string ""
 1847 049d 5262 7974 	 .string "Rbyte"
 1847      6500 
 1848 04a3 00        	 .string ""
 1849 04a4 0200      	 .string "\002"
 1850 04a6 00        	 .string ""
 1851 04a7 00        	 .string ""
 1852 04a8 00        	 .string ""
 1853 04a9 00        	 .string ""
 1854 04aa 00        	 .string ""
 1855 04ab 00        	 .string ""
 1856 04ac 00        	 .string ""
 1857 04ad 00        	 .string ""
 1858 04ae 2E02 00   	 .string ".\002"
 1859 04b1 00        	 .string ""
 1860 04b2 6578 7453 	 .string "extSbyte"
 1860      6279 7465 
 1860      00
 1861 04bb 00        	 .string ""
 1862 04bc 0200      	 .string "\002"
 1863 04be 00        	 .string ""
 1864 04bf 00        	 .string ""
 1865 04c0 00        	 .string ""
 1866 04c1 00        	 .string ""
 1867 04c2 00        	 .string ""
 1868 04c3 00        	 .string ""
GAS LISTING  			page 108


 1869 04c4 00        	 .string ""
 1870 04c5 00        	 .string ""
 1871 04c6 3002 00   	 .string "0\002"
 1872 04c9 00        	 .string ""
 1873 04ca 5569 6E74 	 .string "Uint8To16Str"
 1873      3854 6F31 
 1873      3653 7472 
 1873      00
 1874 04d7 00        	 .string ""
 1875 04d8 0200      	 .string "\002"
 1876 04da 00        	 .string ""
 1877 04db 00        	 .string ""
 1878 04dc 00        	 .string ""
 1879 04dd 00        	 .string ""
 1880 04de 00        	 .string ""
 1881 04df 00        	 .string ""
 1882 04e0 00        	 .string ""
 1883 04e1 00        	 .string ""
 1884 04e2 4102 00   	 .string "A\002"
 1885 04e5 00        	 .string ""
 1886 04e6 496E 6974 	 .string "InitDumbgame"
 1886      4475 6D62 
 1886      6761 6D65 
 1886      00
 1887 04f3 00        	 .string ""
 1888 04f4 0200      	 .string "\002"
 1889 04f6 00        	 .string ""
 1890 04f7 00        	 .string ""
 1891 04f8 00        	 .string ""
 1892 04f9 00        	 .string ""
 1893 04fa 00        	 .string ""
 1894 04fb 00        	 .string ""
 1895 04fc 00        	 .string ""
 1896 04fd 00        	 .string ""
 1897 04fe 4602 00   	 .string "F\002"
 1898 0501 00        	 .string ""
 1899 0502 456E 6453 	 .string "EndSend"
 1899      656E 6400 
 1900 050a 00        	 .string ""
 1901 050b 0200      	 .string "\002"
 1902 050d 00        	 .string ""
 1903 050e 00        	 .string ""
 1904 050f 00        	 .string ""
 1905 0510 00        	 .string ""
 1906 0511 00        	 .string ""
 1907 0512 00        	 .string ""
 1908 0513 00        	 .string ""
 1909 0514 00        	 .string ""
 1910 0515 5502 00   	 .string "U\002"
 1911 0518 00        	 .string ""
 1912 0519 556E 6C6F 	 .string "UnloadCircularBufferOnThisClient"
 1912      6164 4369 
 1912      7263 756C 
 1912      6172 4275 
 1912      6666 6572 
 1913 053a 00        	 .string ""
 1914 053b 0200      	 .string "\002"
GAS LISTING  			page 109


 1915 053d 00        	 .string ""
 1916 053e 00        	 .string ""
 1917 053f 00        	 .string ""
 1918 0540 00        	 .string ""
 1919 0541 00        	 .string ""
 1920 0542 00        	 .string ""
 1921 0543 00        	 .string ""
 1922 0544 00        	 .string ""
 1923 0545 5702 00   	 .string "W\002"
 1924 0548 00        	 .string ""
 1925 0549 446F 4375 	 .string "DoCustomPreloadStep"
 1925      7374 6F6D 
 1925      5072 656C 
 1925      6F61 6453 
 1925      7465 7000 
 1926 055d 00        	 .string ""
 1927 055e 0200      	 .string "\002"
 1928 0560 00        	 .string ""
 1929 0561 00        	 .string ""
 1930 0562 00        	 .string ""
 1931 0563 00        	 .string ""
 1932 0564 00        	 .string ""
 1933 0565 00        	 .string ""
 1934 0566 00        	 .string ""
 1935 0567 00        	 .string ""
 1936 0568 5C02 00   	 .string "\\\002"
 1937 056b 00        	 .string ""
 1938 056c 506C 6179 	 .string "PlayerUpdate"
 1938      6572 5570 
 1938      6461 7465 
 1938      00
 1939 0579 00        	 .string ""
 1940 057a 0200      	 .string "\002"
 1941 057c 00        	 .string ""
 1942 057d 00        	 .string ""
 1943 057e 00        	 .string ""
 1944 057f 00        	 .string ""
 1945 0580 00        	 .string ""
 1946 0581 00        	 .string ""
 1947 0582 00        	 .string ""
 1948 0583 00        	 .string ""
 1949 0584 5E02 00   	 .string "^\002"
 1950 0587 00        	 .string ""
 1951 0588 5569 6E74 	 .string "Uint32To10Str"
 1951      3332 546F 
 1951      3130 5374 
 1951      7200 
 1952 0596 00        	 .string ""
 1953 0597 0200      	 .string "\002"
 1954 0599 00        	 .string ""
 1955 059a 00        	 .string ""
 1956 059b 00        	 .string ""
 1957 059c 00        	 .string ""
 1958 059d 00        	 .string ""
 1959 059e 00        	 .string ""
 1960 059f 00        	 .string ""
 1961 05a0 00        	 .string ""
GAS LISTING  			page 110


 1962 05a1 6102 00   	 .string "a\002"
 1963 05a4 00        	 .string ""
 1964 05a5 5365 6E64 	 .string "SendStart"
 1964      5374 6172 
 1964      7400 
 1965 05af 00        	 .string ""
 1966 05b0 0200      	 .string "\002"
 1967 05b2 00        	 .string ""
 1968 05b3 00        	 .string ""
 1969 05b4 00        	 .string ""
 1970 05b5 00        	 .string ""
 1971 05b6 00        	 .string ""
 1972 05b7 00        	 .string ""
 1973 05b8 00        	 .string ""
 1974 05b9 00        	 .string ""
 1975 05ba 6802 00   	 .string "h\002"
 1976 05bd 00        	 .string ""
 1977 05be 4361 6E53 	 .string "CanSend"
 1977      656E 6400 
 1978 05c6 00        	 .string ""
 1979 05c7 0200      	 .string "\002"
 1980 05c9 00        	 .string ""
 1981 05ca 00        	 .string ""
 1982 05cb 00        	 .string ""
 1983 05cc 00        	 .string ""
 1984 05cd 00        	 .string ""
 1985 05ce 00        	 .string ""
 1986 05cf 00        	 .string ""
 1987 05d0 00        	 .string ""
 1988 05d1 6A02 00   	 .string "j\002"
 1989 05d4 00        	 .string ""
 1990 05d5 446F 6E65 	 .string "DoneBroadcast"
 1990      4272 6F61 
 1990      6463 6173 
 1990      7400 
 1991 05e3 00        	 .string ""
 1992 05e4 0200      	 .string "\002"
 1993 05e6 00        	 .string ""
 1994 05e7 00        	 .string ""
 1995 05e8 00        	 .string ""
 1996 05e9 00        	 .string ""
 1997 05ea 00        	 .string ""
 1998 05eb 00        	 .string ""
 1999 05ec 00        	 .string ""
 2000 05ed 00        	 .string ""
 2001 05ee 6E02 00   	 .string "n\002"
 2002 05f1 00        	 .string ""
 2003 05f2 506C 6179 	 .string "PlayerTickUpdate"
 2003      6572 5469 
 2003      636B 5570 
 2003      6461 7465 
 2003      00
 2004 0603 00        	 .string ""
 2005 0604 0200      	 .string "\002"
 2006 0606 00        	 .string ""
 2007 0607 00        	 .string ""
 2008 0608 00        	 .string ""
GAS LISTING  			page 111


 2009 0609 00        	 .string ""
 2010 060a 00        	 .string ""
 2011 060b 00        	 .string ""
 2012 060c 00        	 .string ""
 2013 060d 00        	 .string ""
 2014 060e 7002 00   	 .string "p\002"
 2015 0611 00        	 .string ""
 2016 0612 5374 6172 	 .string "StartupBroadcast"
 2016      7475 7042 
 2016      726F 6164 
 2016      6361 7374 
 2016      00
 2017 0623 00        	 .string ""
 2018 0624 0200      	 .string "\002"
 2019 0626 00        	 .string ""
 2020 0627 00        	 .string ""
 2021 0628 00        	 .string ""
 2022 0629 00        	 .string ""
 2023 062a 00        	 .string ""
 2024 062b 00        	 .string ""
 2025 062c 00        	 .string ""
 2026 062d 00        	 .string ""
 2027 062e 7202 00   	 .string "r\002"
 2028 0631 00        	 .string ""
 2029 0632 4765 7443 	 .string "GetCurrentCircHead"
 2029      7572 7265 
 2029      6E74 4369 
 2029      7263 4865 
 2029      6164 00
 2030 0645 00        	 .string ""
 2031 0646 0200      	 .string "\002"
 2032 0648 00        	 .string ""
 2033 0649 00        	 .string ""
 2034 064a 00        	 .string ""
 2035 064b 00        	 .string ""
 2036 064c 00        	 .string ""
 2037 064d 00        	 .string ""
 2038 064e 00        	 .string ""
 2039 064f 00        	 .string ""
 2040 0650 7402 00   	 .string "t\002"
 2041 0653 00        	 .string ""
 2042 0654 4761 6D65 	 .string "GameTick"
 2042      5469 636B 
 2042      00
 2043 065d 00        	 .string ""
 2044 065e 0200      	 .string "\002"
 2045 0660 00        	 .string ""
 2046 0661 00        	 .string ""
 2047 0662 00        	 .string ""
 2048 0663 00        	 .string ""
 2049 0664 00        	 .string ""
 2050 0665 00        	 .string ""
 2051 0666 00        	 .string ""
 2052 0667 00        	 .string ""
 2053 0668 7602 00   	 .string "v\002"
 2054 066b 00        	 .string ""
 2055 066c 436C 6965 	 .string "ClientHandleChat"
GAS LISTING  			page 112


 2055      6E74 4861 
 2055      6E64 6C65 
 2055      4368 6174 
 2055      00
 2056 067d 00        	 .string ""
 2057 067e 0200      	 .string "\002"
 2058 0680 00        	 .string ""
 2059 0681 00        	 .string ""
 2060 0682 00        	 .string ""
 2061 0683 00        	 .string ""
 2062 0684 00        	 .string ""
 2063 0685 00        	 .string ""
 2064 0686 00        	 .string ""
 2065 0687 00        	 .string ""
 2066 0688 7802 00   	 .string "x\002"
 2067 068b 00        	 .string ""
 2068 068c 4361 6E52 	 .string "CanRead"
 2068      6561 6400 
 2069 0694 00        	 .string ""
 2070 0695 0200      	 .string "\002"
 2071 0697 00        	 .string ""
 2072 0698 00        	 .string ""
 2073 0699 00        	 .string ""
 2074 069a 00        	 .string ""
 2075 069b 00        	 .string ""
 2076 069c 00        	 .string ""
 2077 069d 00        	 .string ""
 2078 069e 00        	 .string ""
 2079 069f 7D02 00   	 .string "}\002"
 2080 06a2 00        	 .string ""
 2081 06a3 506C 6179 	 .string "PlayerClick"
 2081      6572 436C 
 2081      6963 6B00 
 2082 06af 00        	 .string ""
 2083 06b0 0200      	 .string "\002"
 2084 06b2 00        	 .string ""
 2085 06b3 00        	 .string ""
 2086 06b4 00        	 .string ""
 2087 06b5 00        	 .string ""
 2088 06b6 00        	 .string ""
 2089 06b7 00        	 .string ""
 2090 06b8 00        	 .string ""
 2091 06b9 00        	 .string ""
 2092 06ba 7F02 00   	 .string "\177\002"
 2093 06bd 00        	 .string ""
 2094 06be 466F 7263 	 .string "ForcePlayerClose"
 2094      6550 6C61 
 2094      7965 7243 
 2094      6C6F 7365 
 2094      00
 2095 06cf 00        	 .string ""
 2096 06d0 0200      	 .string "\002"
 2097 06d2 00        	 .string ""
 2098 06d3 00        	 .string ""
 2099 06d4 00        	 .string ""
 2100 06d5 00        	 .string ""
 2101 06d6 00        	 .string ""
GAS LISTING  			page 113


 2102 06d7 00        	 .string ""
 2103 06d8 00        	 .string ""
 2104 06d9 00        	 .string ""
 2105 06da 8702 00   	 .string "\207\002"
 2106 06dd 00        	 .string ""
 2107               	 .text
 2108               	 .section .gnu.lto_.opts,"",@progbits
 2109 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 2109      6375 3D61 
 2109      746D 6567 
 2109      6133 3275 
 2109      3227 2027 
 2110               	 .text
 2111               	 .cfi_sections .debug_frame
 2112               	.global mstrcat
 2114               	mstrcat:
 2115               	.LFB6:
 2116               	 .file 1 "../dumbcraft/dumbcraft.c"
   1:../dumbcraft/dumbcraft.c **** //Copyright 2012 <>< Charles Lohr, under the MIT-x11 or NewBSD license.  You choose.
   2:../dumbcraft/dumbcraft.c **** 
   3:../dumbcraft/dumbcraft.c **** //Protocol thanks to #mcdevs, http://www.wiki.vg/Protocol http://www.wiki.vg/Entities#Entity_Metada
   4:../dumbcraft/dumbcraft.c **** //Special thanks on the 0x14 packet problem to SirCmpwn for helping me out.
   5:../dumbcraft/dumbcraft.c **** 
   6:../dumbcraft/dumbcraft.c **** //This file is designed to work both on x86 and on 8-bit AVR architectures.
   7:../dumbcraft/dumbcraft.c **** //Whenever I had to choose between more features or smaller code size, I normally
   8:../dumbcraft/dumbcraft.c **** //sided with the code size.
   9:../dumbcraft/dumbcraft.c **** 
  10:../dumbcraft/dumbcraft.c **** #include "dumbcraft.h"
  11:../dumbcraft/dumbcraft.c **** #include <string.h>
  12:../dumbcraft/dumbcraft.c **** #include <stdio.h>
  13:../dumbcraft/dumbcraft.c **** #include "754lib.h"
  14:../dumbcraft/dumbcraft.c **** #include <util10.h>
  15:../dumbcraft/dumbcraft.c **** #include <alloca.h>
  16:../dumbcraft/dumbcraft.c **** 
  17:../dumbcraft/dumbcraft.c **** #define ONGROUND 1
  18:../dumbcraft/dumbcraft.c **** 
  19:../dumbcraft/dumbcraft.c **** #ifdef __AVR__
  20:../dumbcraft/dumbcraft.c **** #include "avr_print.h"
  21:../dumbcraft/dumbcraft.c **** #include <avr/pgmspace.h> 
  22:../dumbcraft/dumbcraft.c **** #else
  23:../dumbcraft/dumbcraft.c **** 
  24:../dumbcraft/dumbcraft.c **** #define pgm_read_byte(x) (*(x))
  25:../dumbcraft/dumbcraft.c **** 
  26:../dumbcraft/dumbcraft.c **** #define PROGMEM
  27:../dumbcraft/dumbcraft.c **** #define PSTR
  28:../dumbcraft/dumbcraft.c **** #define memcpy_P memcpy
  29:../dumbcraft/dumbcraft.c **** #endif
  30:../dumbcraft/dumbcraft.c **** 
  31:../dumbcraft/dumbcraft.c **** struct Player Players[MAX_PLAYERS];
  32:../dumbcraft/dumbcraft.c **** uint8_t playerid;
  33:../dumbcraft/dumbcraft.c **** 
  34:../dumbcraft/dumbcraft.c **** //#define DEBUG_DUMBCRAFT
  35:../dumbcraft/dumbcraft.c **** 
  36:../dumbcraft/dumbcraft.c **** //Tick # (could be used for time of day? Or doing work every nth tick?)
  37:../dumbcraft/dumbcraft.c **** //You could reset it every 24,000 ticks to make the day/night cycle right.
  38:../dumbcraft/dumbcraft.c **** uint16_t dumbcraft_tick = 0;
  39:../dumbcraft/dumbcraft.c **** 
GAS LISTING  			page 114


  40:../dumbcraft/dumbcraft.c **** //This is the raw data we're supposed to put on the wire for
  41:../dumbcraft/dumbcraft.c **** //sending "compress packets; here's the 0,0 chunk; don't compress packets"
  42:../dumbcraft/dumbcraft.c **** //look in 'mkmk2' for more info.
  43:../dumbcraft/dumbcraft.c **** const uint8_t compeddata[] PROGMEM = {
  44:../dumbcraft/dumbcraft.c **** 	0x02, 0x46, 0x00, 0x39, 0x8e, 0x64, 0x78, 0xda, 0xed, 0xd1, 0x31, 0x01, 0x00, 0x20, 0x0c, 0xc0, 
  45:../dumbcraft/dumbcraft.c **** 	0xb0, 0xed, 0x43, 0x06, 0x78, 0x43, 0x08, 0xd2, 0xf7, 0x60, 0x02, 0x96, 0x46, 0x42, 0x57, 0xdc, 
  46:../dumbcraft/dumbcraft.c **** 	0x32, 0xc6, 0xd9, 0x33, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xd7, 0x49, 0x92, 0x24, 
  47:../dumbcraft/dumbcraft.c **** 	0x49, 0x92, 0xa4, 0xff, 0xcb, 0xe6, 0x75, 0xff, 0x5f, 0x71, 0x61, 0x02, 0x2d, 0x0d, 0x06, 0x78, 
  48:../dumbcraft/dumbcraft.c **** 	0xda, 0x73, 0xfb, 0x0f, 0x04, 0xfc, 0x00, 0x0f, 0xab, 0x04, 0x52, };
  49:../dumbcraft/dumbcraft.c **** 
  50:../dumbcraft/dumbcraft.c **** //#include "mkmk2/final.h"
  51:../dumbcraft/dumbcraft.c **** 
  52:../dumbcraft/dumbcraft.c **** const uint8_t default_spawn_metadata[] PROGMEM = { 
  53:../dumbcraft/dumbcraft.c **** 	0x00, //Type: Byte, Key: 0 (Masks)
  54:../dumbcraft/dumbcraft.c **** 	0x00, //No masks
  55:../dumbcraft/dumbcraft.c **** 	0x7F // EOL
  56:../dumbcraft/dumbcraft.c **** };
  57:../dumbcraft/dumbcraft.c **** 
  58:../dumbcraft/dumbcraft.c **** const char pingjson1[] PROGMEM = "{\"description\":\"";
  59:../dumbcraft/dumbcraft.c **** const char pingjson2[] PROGMEM = "\", \"players\":{\"max\":";
  60:../dumbcraft/dumbcraft.c **** const char pingjson3[] PROGMEM = ",\"online\":";
  61:../dumbcraft/dumbcraft.c **** const char pingjson4[] PROGMEM = "},\"version\":{\"name\":\""LONG_PROTO_VERSION"\",\"protocol\":"PR
  62:../dumbcraft/dumbcraft.c **** 
  63:../dumbcraft/dumbcraft.c **** uint8_t dumbcraft_playercount;
  64:../dumbcraft/dumbcraft.c **** 
  65:../dumbcraft/dumbcraft.c **** /////////////////////////////////////////BIZARRE UTILITIES/////////////////////
  66:../dumbcraft/dumbcraft.c **** 
  67:../dumbcraft/dumbcraft.c **** void mstrcat( char * out, char * in, int maxlen )
  68:../dumbcraft/dumbcraft.c **** {
 2117               	 .loc 1 68 0
 2118               	 .cfi_startproc
 2119               	.LVL0:
 2120 0000 CF93      	 push r28
 2121               	.LCFI0:
 2122               	 .cfi_def_cfa_offset 3
 2123               	 .cfi_offset 28,-2
 2124 0002 DF93      	 push r29
 2125               	.LCFI1:
 2126               	 .cfi_def_cfa_offset 4
 2127               	 .cfi_offset 29,-3
 2128               	 
 2129               	 
 2130               	 
 2131               	.L__stack_usage =2
 2132               	.LVL1:
  69:../dumbcraft/dumbcraft.c **** 	uint8_t i, j = 0;
  70:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < maxlen; i++ )
 2133               	 .loc 1 70 0
 2134 0004 A0E0      	 ldi r26,0
 2135               	.LVL2:
 2136               	.L2:
 2137               	 .loc 1 70 0 is_stmt 0 discriminator 1
 2138 0006 2A2F      	 mov r18,r26
 2139 0008 30E0      	 ldi r19,0
 2140 000a 2417      	 cp r18,r20
 2141 000c 3507      	 cpc r19,r21
 2142 000e 04F4      	 brge .L9
GAS LISTING  			page 115


  71:../dumbcraft/dumbcraft.c **** 	{
  72:../dumbcraft/dumbcraft.c **** 		if( out[i] == 0 ) break;
 2143               	 .loc 1 72 0 is_stmt 1
 2144 0010 FC01      	 movw r30,r24
 2145 0012 E20F      	 add r30,r18
 2146 0014 F31F      	 adc r31,r19
 2147 0016 2081      	 ld r18,Z
 2148 0018 2223      	 tst r18
 2149 001a 01F0      	 breq .L9
  70:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < maxlen; i++ )
 2150               	 .loc 1 70 0
 2151 001c AF5F      	 subi r26,lo8(-(1))
 2152               	.LVL3:
 2153 001e 00C0      	 rjmp .L2
 2154               	.L9:
 2155 0020 BA2F      	 mov r27,r26
 2156               	.LVL4:
 2157               	.L4:
 2158 0022 EA2F      	 mov r30,r26
 2159 0024 EB1B      	 sub r30,r27
 2160               	.LVL5:
  73:../dumbcraft/dumbcraft.c **** 	}
  74:../dumbcraft/dumbcraft.c **** 
  75:../dumbcraft/dumbcraft.c **** 	for( ; i < maxlen; i++ )
 2161               	 .loc 1 75 0 discriminator 1
 2162 0026 2A2F      	 mov r18,r26
 2163 0028 30E0      	 ldi r19,0
 2164 002a 2417      	 cp r18,r20
 2165 002c 3507      	 cpc r19,r21
 2166 002e 04F4      	 brge .L11
 2167               	.LVL6:
  76:../dumbcraft/dumbcraft.c **** 	{
  77:../dumbcraft/dumbcraft.c **** 		out[i] = in[j++];
 2168               	 .loc 1 77 0 discriminator 2
 2169 0030 EB01      	 movw r28,r22
 2170 0032 CE0F      	 add r28,r30
 2171 0034 D11D      	 adc r29,__zero_reg__
 2172 0036 E881      	 ld r30,Y
 2173 0038 EC01      	 movw r28,r24
 2174 003a C20F      	 add r28,r18
 2175 003c D31F      	 adc r29,r19
 2176 003e E883      	 st Y,r30
  75:../dumbcraft/dumbcraft.c **** 	for( ; i < maxlen; i++ )
 2177               	 .loc 1 75 0 discriminator 2
 2178 0040 AF5F      	 subi r26,lo8(-(1))
 2179               	.LVL7:
 2180 0042 00C0      	 rjmp .L4
 2181               	.LVL8:
 2182               	.L11:
 2183               	 
  78:../dumbcraft/dumbcraft.c **** 	}
  79:../dumbcraft/dumbcraft.c **** 
  80:../dumbcraft/dumbcraft.c **** 	if( i < maxlen )
  81:../dumbcraft/dumbcraft.c **** 		out[i] = 0;
  82:../dumbcraft/dumbcraft.c **** }
 2184               	 .loc 1 82 0
 2185 0044 DF91      	 pop r29
GAS LISTING  			page 116


 2186 0046 CF91      	 pop r28
 2187 0048 0895      	 ret
 2188               	 .cfi_endproc
 2189               	.LFE6:
 2191               	.global mstrcatp
 2193               	mstrcatp:
 2194               	.LFB7:
  83:../dumbcraft/dumbcraft.c **** 
  84:../dumbcraft/dumbcraft.c **** void mstrcatp( char * out, const char * in, int maxlen )
  85:../dumbcraft/dumbcraft.c **** {
 2195               	 .loc 1 85 0
 2196               	 .cfi_startproc
 2197               	.LVL9:
 2198 004a CF93      	 push r28
 2199               	.LCFI2:
 2200               	 .cfi_def_cfa_offset 3
 2201               	 .cfi_offset 28,-2
 2202 004c DF93      	 push r29
 2203               	.LCFI3:
 2204               	 .cfi_def_cfa_offset 4
 2205               	 .cfi_offset 29,-3
 2206               	 
 2207               	 
 2208               	 
 2209               	.L__stack_usage =2
 2210               	.LVL10:
  86:../dumbcraft/dumbcraft.c **** 	uint8_t i, j = 0;
  87:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < maxlen; i++ )
 2211               	 .loc 1 87 0
 2212 004e A0E0      	 ldi r26,0
 2213               	.LVL11:
 2214               	.L13:
 2215               	 .loc 1 87 0 is_stmt 0 discriminator 1
 2216 0050 2A2F      	 mov r18,r26
 2217 0052 30E0      	 ldi r19,0
 2218 0054 2417      	 cp r18,r20
 2219 0056 3507      	 cpc r19,r21
 2220 0058 04F4      	 brge .L20
  88:../dumbcraft/dumbcraft.c **** 	{
  89:../dumbcraft/dumbcraft.c **** 		if( out[i] == 0 ) break;
 2221               	 .loc 1 89 0 is_stmt 1
 2222 005a FC01      	 movw r30,r24
 2223 005c E20F      	 add r30,r18
 2224 005e F31F      	 adc r31,r19
 2225 0060 2081      	 ld r18,Z
 2226 0062 2223      	 tst r18
 2227 0064 01F0      	 breq .L20
  87:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < maxlen; i++ )
 2228               	 .loc 1 87 0
 2229 0066 AF5F      	 subi r26,lo8(-(1))
 2230               	.LVL12:
 2231 0068 00C0      	 rjmp .L13
 2232               	.L20:
 2233 006a BA2F      	 mov r27,r26
 2234               	.LVL13:
 2235               	.L15:
 2236 006c EA2F      	 mov r30,r26
GAS LISTING  			page 117


 2237 006e EB1B      	 sub r30,r27
 2238               	.LVL14:
  90:../dumbcraft/dumbcraft.c **** 	}
  91:../dumbcraft/dumbcraft.c **** 
  92:../dumbcraft/dumbcraft.c **** 	for( ;i < maxlen; i++ )
 2239               	 .loc 1 92 0 discriminator 1
 2240 0070 2A2F      	 mov r18,r26
 2241 0072 30E0      	 ldi r19,0
 2242 0074 2417      	 cp r18,r20
 2243 0076 3507      	 cpc r19,r21
 2244 0078 04F4      	 brge .L21
 2245               	.LVL15:
 2246               	.LBB36:
  93:../dumbcraft/dumbcraft.c **** 	{
  94:../dumbcraft/dumbcraft.c **** 		out[i] = pgm_read_byte(&in[j++]);
 2247               	 .loc 1 94 0 discriminator 2
 2248 007a EB01      	 movw r28,r22
 2249 007c CE0F      	 add r28,r30
 2250 007e D11D      	 adc r29,__zero_reg__
 2251               	.LVL16:
 2252 0080 FE01      	 movw r30,r28
 2253               	 
 2254               	 
 2255 0082 E491      	 lpm r30,Z
 2256               	 
 2257               	 
 2258               	.LVL17:
 2259               	 
 2260               	.LBE36:
 2261 0084 EC01      	 movw r28,r24
 2262               	.LVL18:
 2263 0086 C20F      	 add r28,r18
 2264 0088 D31F      	 adc r29,r19
 2265 008a E883      	 st Y,r30
  92:../dumbcraft/dumbcraft.c **** 	for( ;i < maxlen; i++ )
 2266               	 .loc 1 92 0 discriminator 2
 2267 008c AF5F      	 subi r26,lo8(-(1))
 2268               	.LVL19:
 2269 008e 00C0      	 rjmp .L15
 2270               	.LVL20:
 2271               	.L21:
 2272               	 
  95:../dumbcraft/dumbcraft.c **** 	}
  96:../dumbcraft/dumbcraft.c **** 
  97:../dumbcraft/dumbcraft.c **** 	if( i < maxlen )
  98:../dumbcraft/dumbcraft.c **** 		out[i] = 0;
  99:../dumbcraft/dumbcraft.c **** }
 2273               	 .loc 1 99 0
 2274 0090 DF91      	 pop r29
 2275 0092 CF91      	 pop r28
 2276 0094 0895      	 ret
 2277               	 .cfi_endproc
 2278               	.LFE7:
 2280               	.global dcrbyte
 2282               	dcrbyte:
 2283               	.LFB8:
 100:../dumbcraft/dumbcraft.c **** 
GAS LISTING  			page 118


 101:../dumbcraft/dumbcraft.c **** //////////////////////////////////////////READING UTILITIES////////////////////
 102:../dumbcraft/dumbcraft.c **** 
 103:../dumbcraft/dumbcraft.c **** uint16_t cmdremain = 0;
 104:../dumbcraft/dumbcraft.c **** 
 105:../dumbcraft/dumbcraft.c **** uint8_t dcrbyte()
 106:../dumbcraft/dumbcraft.c **** {
 2284               	 .loc 1 106 0
 2285               	 .cfi_startproc
 2286               	 
 2287               	 
 2288               	 
 2289               	.L__stack_usage =0
 107:../dumbcraft/dumbcraft.c **** 	if( cmdremain )
 2290               	 .loc 1 107 0
 2291 0096 8091 0000 	 lds r24,cmdremain
 2292 009a 9091 0000 	 lds r25,cmdremain+1
 2293 009e 0097      	 sbiw r24,0
 2294 00a0 01F0      	 breq .L23
 108:../dumbcraft/dumbcraft.c **** 	{
 109:../dumbcraft/dumbcraft.c **** 		cmdremain--;
 2295               	 .loc 1 109 0
 2296 00a2 0197      	 sbiw r24,1
 2297 00a4 9093 0000 	 sts cmdremain+1,r25
 2298 00a8 8093 0000 	 sts cmdremain,r24
 110:../dumbcraft/dumbcraft.c **** 		return Rbyte();
 2299               	 .loc 1 110 0
 2300 00ac 0C94 0000 	 jmp Rbyte
 2301               	.LVL21:
 2302               	.L23:
 111:../dumbcraft/dumbcraft.c **** 	}
 112:../dumbcraft/dumbcraft.c **** 	return 0;
 113:../dumbcraft/dumbcraft.c **** }
 2303               	 .loc 1 113 0
 2304 00b0 80E0      	 ldi r24,0
 2305 00b2 0895      	 ret
 2306               	 .cfi_endproc
 2307               	.LFE8:
 2309               	.global StartSend
 2311               	StartSend:
 2312               	.LFB9:
 114:../dumbcraft/dumbcraft.c **** 
 115:../dumbcraft/dumbcraft.c **** static uint8_t localsendbuffer[SENDBUFFERSIZE];
 116:../dumbcraft/dumbcraft.c **** static uint8_t sendsize;
 117:../dumbcraft/dumbcraft.c **** 
 118:../dumbcraft/dumbcraft.c **** void StartSend()
 119:../dumbcraft/dumbcraft.c **** {
 2313               	 .loc 1 119 0
 2314               	 .cfi_startproc
 2315               	 
 2316               	 
 2317               	 
 2318               	.L__stack_usage =0
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 2319               	 .loc 1 120 0
 2320 00b4 1092 0000 	 sts sendsize,__zero_reg__
 2321 00b8 0895      	 ret
 2322               	 .cfi_endproc
GAS LISTING  			page 119


 2323               	.LFE9:
 2325               	.global DoneSend
 2327               	DoneSend:
 2328               	.LFB10:
 121:../dumbcraft/dumbcraft.c **** }
 122:../dumbcraft/dumbcraft.c **** 
 123:../dumbcraft/dumbcraft.c **** void DoneSend()
 124:../dumbcraft/dumbcraft.c **** {
 2329               	 .loc 1 124 0
 2330               	 .cfi_startproc
 2331 00ba CF93      	 push r28
 2332               	.LCFI4:
 2333               	 .cfi_def_cfa_offset 3
 2334               	 .cfi_offset 28,-2
 2335               	 
 2336               	 
 2337               	 
 2338               	.L__stack_usage =1
 125:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 126:../dumbcraft/dumbcraft.c **** /*	sendchr('$');
 127:../dumbcraft/dumbcraft.c **** 	sendhex4(sendsize);
 128:../dumbcraft/dumbcraft.c **** 	sendchr('\n');
 129:../dumbcraft/dumbcraft.c **** */
 130:../dumbcraft/dumbcraft.c **** 	if( sendsize > 127 )
 2339               	 .loc 1 130 0
 2340 00bc 8091 0000 	 lds r24,sendsize
 2341 00c0 87FF      	 sbrs r24,7
 2342 00c2 00C0      	 rjmp .L26
 131:../dumbcraft/dumbcraft.c **** 	{
 132:../dumbcraft/dumbcraft.c **** 		extSbyte( 128 | (sendsize&127) );
 2343               	 .loc 1 132 0
 2344 00c4 0E94 0000 	 call extSbyte
 2345               	.LVL22:
 133:../dumbcraft/dumbcraft.c **** 		extSbyte( sendsize >> 7 );
 2346               	 .loc 1 133 0
 2347 00c8 8091 0000 	 lds r24,sendsize
 2348 00cc 881F      	 rol r24
 2349 00ce 8827      	 clr r24
 2350 00d0 881F      	 rol r24
 2351               	.L26:
 134:../dumbcraft/dumbcraft.c **** 	}
 135:../dumbcraft/dumbcraft.c **** 	else
 136:../dumbcraft/dumbcraft.c **** 	{
 137:../dumbcraft/dumbcraft.c **** 		extSbyte( sendsize );
 2352               	 .loc 1 137 0
 2353 00d2 0E94 0000 	 call extSbyte
 2354               	.LVL23:
 124:../dumbcraft/dumbcraft.c **** {
 2355               	 .loc 1 124 0
 2356 00d6 C0E0      	 ldi r28,0
 2357               	.L28:
 2358               	.LVL24:
 138:../dumbcraft/dumbcraft.c **** 	}
 139:../dumbcraft/dumbcraft.c **** 
 140:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < sendsize; i++ )
 2359               	 .loc 1 140 0 discriminator 1
 2360 00d8 8091 0000 	 lds r24,sendsize
GAS LISTING  			page 120


 2361 00dc C817      	 cp r28,r24
 2362 00de 00F4      	 brsh .L30
 141:../dumbcraft/dumbcraft.c **** 	{
 142:../dumbcraft/dumbcraft.c **** 		extSbyte( localsendbuffer[i] );
 2363               	 .loc 1 142 0 discriminator 2
 2364 00e0 EC2F      	 mov r30,r28
 2365 00e2 F0E0      	 ldi r31,0
 2366 00e4 E050      	 subi r30,lo8(-(localsendbuffer))
 2367 00e6 F040      	 sbci r31,hi8(-(localsendbuffer))
 2368 00e8 8081      	 ld r24,Z
 2369 00ea 0E94 0000 	 call extSbyte
 2370               	.LVL25:
 140:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < sendsize; i++ )
 2371               	 .loc 1 140 0 discriminator 2
 2372 00ee CF5F      	 subi r28,lo8(-(1))
 2373               	.LVL26:
 2374 00f0 00C0      	 rjmp .L28
 2375               	.L30:
 2376               	 
 143:../dumbcraft/dumbcraft.c **** 	}
 144:../dumbcraft/dumbcraft.c **** }
 2377               	 .loc 1 144 0
 2378 00f2 CF91      	 pop r28
 2379               	.LVL27:
 2380 00f4 0895      	 ret
 2381               	 .cfi_endproc
 2382               	.LFE10:
 2384               	.global SendRawPGMData
 2386               	SendRawPGMData:
 2387               	.LFB11:
 145:../dumbcraft/dumbcraft.c **** 
 146:../dumbcraft/dumbcraft.c **** void SendRawPGMData( const uint8_t * PROGMEM dat, uint16_t len )
 147:../dumbcraft/dumbcraft.c **** {
 2388               	 .loc 1 147 0
 2389               	 .cfi_startproc
 2390               	.LVL28:
 2391 00f6 0F93      	 push r16
 2392               	.LCFI5:
 2393               	 .cfi_def_cfa_offset 3
 2394               	 .cfi_offset 16,-2
 2395 00f8 1F93      	 push r17
 2396               	.LCFI6:
 2397               	 .cfi_def_cfa_offset 4
 2398               	 .cfi_offset 17,-3
 2399 00fa CF93      	 push r28
 2400               	.LCFI7:
 2401               	 .cfi_def_cfa_offset 5
 2402               	 .cfi_offset 28,-4
 2403 00fc DF93      	 push r29
 2404               	.LCFI8:
 2405               	 .cfi_def_cfa_offset 6
 2406               	 .cfi_offset 29,-5
 2407               	 
 2408               	 
 2409               	 
 2410               	.L__stack_usage =4
 2411 00fe 8B01      	 movw r16,r22
GAS LISTING  			page 121


 2412               	.LVL29:
 2413 0100 EC01      	 movw r28,r24
 2414 0102 080F      	 add r16,r24
 2415 0104 191F      	 adc r17,r25
 2416               	.LVL30:
 2417               	.L32:
 148:../dumbcraft/dumbcraft.c **** 	uint16_t i;
 149:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < len; i++ )
 2418               	 .loc 1 149 0 discriminator 1
 2419 0106 C017      	 cp r28,r16
 2420 0108 D107      	 cpc r29,r17
 2421 010a 01F0      	 breq .L34
 2422               	.LVL31:
 2423               	.LBB37:
 150:../dumbcraft/dumbcraft.c **** 	{
 151:../dumbcraft/dumbcraft.c **** 		extSbyte( pgm_read_byte(&dat[i]) );
 2424               	 .loc 1 151 0 discriminator 2
 2425 010c FE01      	 movw r30,r28
 2426               	 
 2427               	 
 2428 010e 8491      	 lpm r24,Z
 2429               	 
 2430               	 
 2431               	.LVL32:
 2432               	 
 2433               	.LBE37:
 2434 0110 0E94 0000 	 call extSbyte
 2435               	.LVL33:
 2436 0114 2196      	 adiw r28,1
 2437               	.LVL34:
 2438 0116 00C0      	 rjmp .L32
 2439               	.LVL35:
 2440               	.L34:
 2441               	 
 152:../dumbcraft/dumbcraft.c **** 	}
 153:../dumbcraft/dumbcraft.c **** }
 2442               	 .loc 1 153 0
 2443 0118 DF91      	 pop r29
 2444 011a CF91      	 pop r28
 2445               	.LVL36:
 2446 011c 1F91      	 pop r17
 2447 011e 0F91      	 pop r16
 2448 0120 0895      	 ret
 2449               	 .cfi_endproc
 2450               	.LFE11:
 2452               	.global Sbyte
 2454               	Sbyte:
 2455               	.LFB12:
 154:../dumbcraft/dumbcraft.c **** 
 155:../dumbcraft/dumbcraft.c **** 
 156:../dumbcraft/dumbcraft.c **** void Sbyte( uint8_t b )
 157:../dumbcraft/dumbcraft.c **** {
 2456               	 .loc 1 157 0
 2457               	 .cfi_startproc
 2458               	.LVL37:
 2459               	 
 2460               	 
GAS LISTING  			page 122


 2461               	 
 2462               	.L__stack_usage =0
 158:../dumbcraft/dumbcraft.c **** 	if( sendsize < SENDBUFFERSIZE )
 2463               	 .loc 1 158 0
 2464 0122 E091 0000 	 lds r30,sendsize
 2465 0126 E035      	 cpi r30,lo8(80)
 2466 0128 00F4      	 brsh .L35
 159:../dumbcraft/dumbcraft.c **** 		localsendbuffer[sendsize++] = b;
 2467               	 .loc 1 159 0
 2468 012a 91E0      	 ldi r25,lo8(1)
 2469 012c 9E0F      	 add r25,r30
 2470 012e 9093 0000 	 sts sendsize,r25
 2471 0132 F0E0      	 ldi r31,0
 2472 0134 E050      	 subi r30,lo8(-(localsendbuffer))
 2473 0136 F040      	 sbci r31,hi8(-(localsendbuffer))
 2474 0138 8083      	 st Z,r24
 2475               	.L35:
 2476 013a 0895      	 ret
 2477               	 .cfi_endproc
 2478               	.LFE12:
 2480               	.global Rbuffer
 2482               	Rbuffer:
 2483               	.LFB13:
 160:../dumbcraft/dumbcraft.c **** }
 161:../dumbcraft/dumbcraft.c **** 
 162:../dumbcraft/dumbcraft.c **** //Read in a buffer from the current connection of specified size.
 163:../dumbcraft/dumbcraft.c **** //Can only be done in a read callback.
 164:../dumbcraft/dumbcraft.c **** void Rbuffer( uint8_t * buffer, uint8_t size )
 165:../dumbcraft/dumbcraft.c **** {
 2484               	 .loc 1 165 0
 2485               	 .cfi_startproc
 2486               	.LVL38:
 2487 013c EF92      	 push r14
 2488               	.LCFI9:
 2489               	 .cfi_def_cfa_offset 3
 2490               	 .cfi_offset 14,-2
 2491 013e FF92      	 push r15
 2492               	.LCFI10:
 2493               	 .cfi_def_cfa_offset 4
 2494               	 .cfi_offset 15,-3
 2495 0140 1F93      	 push r17
 2496               	.LCFI11:
 2497               	 .cfi_def_cfa_offset 5
 2498               	 .cfi_offset 17,-4
 2499 0142 CF93      	 push r28
 2500               	.LCFI12:
 2501               	 .cfi_def_cfa_offset 6
 2502               	 .cfi_offset 28,-5
 2503 0144 DF93      	 push r29
 2504               	.LCFI13:
 2505               	 .cfi_def_cfa_offset 7
 2506               	 .cfi_offset 29,-6
 2507 0146 1F92      	 push __zero_reg__
 2508               	.LCFI14:
 2509               	 .cfi_def_cfa_offset 8
 2510 0148 CDB7      	 in r28,__SP_L__
 2511 014a DEB7      	 in r29,__SP_H__
GAS LISTING  			page 123


 2512               	.LCFI15:
 2513               	 .cfi_def_cfa_register 28
 2514               	 
 2515               	 
 2516               	 
 2517               	.L__stack_usage =6
 2518               	.LVL39:
 2519 014c 182F      	 mov r17,r24
 166:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 167:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < size; i++ )
 2520               	 .loc 1 167 0
 2521 014e 7C01      	 movw r14,r24
 2522               	.LVL40:
 2523               	.L38:
 2524 0150 8E2D      	 mov r24,r14
 2525 0152 811B      	 sub r24,r17
 2526               	 .loc 1 167 0 is_stmt 0 discriminator 1
 2527 0154 8617      	 cp r24,r22
 2528 0156 00F4      	 brsh .L40
 168:../dumbcraft/dumbcraft.c **** 	{
 169:../dumbcraft/dumbcraft.c **** 		buffer[i] = dcrbyte();
 2529               	 .loc 1 169 0 is_stmt 1 discriminator 2
 2530 0158 6983      	 std Y+1,r22
 2531 015a 0E94 0000 	 call dcrbyte
 2532               	.LVL41:
 2533 015e F701      	 movw r30,r14
 2534 0160 8193      	 st Z+,r24
 2535 0162 7F01      	 movw r14,r30
 2536               	.LVL42:
 2537 0164 6981      	 ldd r22,Y+1
 2538 0166 00C0      	 rjmp .L38
 2539               	.L40:
 2540               	 
 170:../dumbcraft/dumbcraft.c **** 	}
 171:../dumbcraft/dumbcraft.c **** }
 2541               	 .loc 1 171 0
 2542 0168 0F90      	 pop __tmp_reg__
 2543 016a DF91      	 pop r29
 2544 016c CF91      	 pop r28
 2545 016e 1F91      	 pop r17
 2546 0170 FF90      	 pop r15
 2547 0172 EF90      	 pop r14
 2548               	.LVL43:
 2549 0174 0895      	 ret
 2550               	 .cfi_endproc
 2551               	.LFE13:
 2553               	.global Rdump
 2555               	Rdump:
 2556               	.LFB14:
 172:../dumbcraft/dumbcraft.c **** 
 173:../dumbcraft/dumbcraft.c **** void Rdump( uint16_t length )
 174:../dumbcraft/dumbcraft.c **** {
 2557               	 .loc 1 174 0
 2558               	 .cfi_startproc
 2559               	.LVL44:
 2560 0176 CF93      	 push r28
 2561               	.LCFI16:
GAS LISTING  			page 124


 2562               	 .cfi_def_cfa_offset 3
 2563               	 .cfi_offset 28,-2
 2564 0178 DF93      	 push r29
 2565               	.LCFI17:
 2566               	 .cfi_def_cfa_offset 4
 2567               	 .cfi_offset 29,-3
 2568               	 
 2569               	 
 2570               	 
 2571               	.L__stack_usage =2
 2572 017a EC01      	 movw r28,r24
 2573               	.LVL45:
 2574               	.L42:
 175:../dumbcraft/dumbcraft.c **** 	while( length-- ) dcrbyte();
 2575               	 .loc 1 175 0 discriminator 1
 2576 017c 2097      	 sbiw r28,0
 2577 017e 01F0      	 breq .L44
 2578               	 .loc 1 175 0 is_stmt 0 discriminator 2
 2579 0180 0E94 0000 	 call dcrbyte
 2580               	.LVL46:
 2581 0184 2197      	 sbiw r28,1
 2582               	.LVL47:
 2583 0186 00C0      	 rjmp .L42
 2584               	.LVL48:
 2585               	.L44:
 2586               	 
 176:../dumbcraft/dumbcraft.c **** }
 2587               	 .loc 1 176 0 is_stmt 1
 2588 0188 DF91      	 pop r29
 2589 018a CF91      	 pop r28
 2590               	.LVL49:
 2591 018c 0895      	 ret
 2592               	 .cfi_endproc
 2593               	.LFE14:
 2595               	.global Rint
 2597               	Rint:
 2598               	.LFB15:
 177:../dumbcraft/dumbcraft.c **** 
 178:../dumbcraft/dumbcraft.c **** //Reading utilities for various types.
 179:../dumbcraft/dumbcraft.c **** uint32_t Rint()
 180:../dumbcraft/dumbcraft.c **** {
 2599               	 .loc 1 180 0
 2600               	 .cfi_startproc
 2601 018e 1F93      	 push r17
 2602               	.LCFI18:
 2603               	 .cfi_def_cfa_offset 3
 2604               	 .cfi_offset 17,-2
 2605 0190 CF93      	 push r28
 2606               	.LCFI19:
 2607               	 .cfi_def_cfa_offset 4
 2608               	 .cfi_offset 28,-3
 2609 0192 DF93      	 push r29
 2610               	.LCFI20:
 2611               	 .cfi_def_cfa_offset 5
 2612               	 .cfi_offset 29,-4
 2613               	 
 2614               	 
GAS LISTING  			page 125


 2615               	 
 2616               	.L__stack_usage =3
 2617               	.LVL50:
 181:../dumbcraft/dumbcraft.c **** 	uint32_t ret = 0;
 182:../dumbcraft/dumbcraft.c **** 	ret |= ((uint32_t)dcrbyte())<<24;
 2618               	 .loc 1 182 0
 2619 0194 0E94 0000 	 call dcrbyte
 2620               	.LVL51:
 2621 0198 D82F      	 mov r29,r24
 2622               	.LVL52:
 183:../dumbcraft/dumbcraft.c **** 	ret |= ((uint32_t)dcrbyte())<<16;
 2623               	 .loc 1 183 0
 2624 019a 0E94 0000 	 call dcrbyte
 2625               	.LVL53:
 2626 019e 182F      	 mov r17,r24
 2627               	.LVL54:
 184:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte()<<8;
 2628               	 .loc 1 184 0
 2629 01a0 0E94 0000 	 call dcrbyte
 2630               	.LVL55:
 2631 01a4 C82F      	 mov r28,r24
 2632               	.LVL56:
 185:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte();
 2633               	 .loc 1 185 0
 2634 01a6 0E94 0000 	 call dcrbyte
 2635               	.LVL57:
 183:../dumbcraft/dumbcraft.c **** 	ret |= ((uint32_t)dcrbyte())<<16;
 2636               	 .loc 1 183 0
 2637 01aa 412F      	 mov r20,r17
 2638 01ac 50E0      	 ldi r21,0
 2639 01ae 60E0      	 ldi r22,0
 2640 01b0 70E0      	 ldi r23,0
 2641 01b2 BA01      	 movw r22,r20
 2642 01b4 5527      	 clr r21
 2643 01b6 4427      	 clr r20
 2644 01b8 7D2B      	 or r23,r29
 184:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte()<<8;
 2645               	 .loc 1 184 0
 2646 01ba 482B      	 or r20,r24
 2647               	.LVL58:
 2648 01bc 8C2F      	 mov r24,r28
 2649 01be 90E0      	 ldi r25,0
 2650 01c0 982F      	 mov r25,r24
 2651 01c2 8827      	 clr r24
 2652 01c4 AA27      	 clr r26
 2653 01c6 97FD      	 sbrc r25,7
 2654 01c8 A095      	 com r26
 2655 01ca BA2F      	 mov r27,r26
 2656               	 .loc 1 185 0
 2657 01cc 482B      	 or r20,r24
 2658 01ce 592B      	 or r21,r25
 2659 01d0 6A2B      	 or r22,r26
 2660 01d2 7B2B      	 or r23,r27
 2661               	.LVL59:
 186:../dumbcraft/dumbcraft.c **** 	return ret;
 187:../dumbcraft/dumbcraft.c **** }
 2662               	 .loc 1 187 0
GAS LISTING  			page 126


 2663 01d4 CB01      	 movw r24,r22
 2664 01d6 BA01      	 movw r22,r20
 2665               	 
 2666 01d8 DF91      	 pop r29
 2667 01da CF91      	 pop r28
 2668 01dc 1F91      	 pop r17
 2669 01de 0895      	 ret
 2670               	 .cfi_endproc
 2671               	.LFE15:
 2673               	.global Rshort
 2675               	Rshort:
 2676               	.LFB16:
 188:../dumbcraft/dumbcraft.c **** 
 189:../dumbcraft/dumbcraft.c **** uint16_t Rshort()
 190:../dumbcraft/dumbcraft.c **** {
 2677               	 .loc 1 190 0
 2678               	 .cfi_startproc
 2679 01e0 CF93      	 push r28
 2680               	.LCFI21:
 2681               	 .cfi_def_cfa_offset 3
 2682               	 .cfi_offset 28,-2
 2683               	 
 2684               	 
 2685               	 
 2686               	.L__stack_usage =1
 2687               	.LVL60:
 191:../dumbcraft/dumbcraft.c **** 	uint16_t ret = 0;
 192:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte()<<8;
 2688               	 .loc 1 192 0
 2689 01e2 0E94 0000 	 call dcrbyte
 2690               	.LVL61:
 2691 01e6 C82F      	 mov r28,r24
 2692               	.LVL62:
 193:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte();
 2693               	 .loc 1 193 0
 2694 01e8 0E94 0000 	 call dcrbyte
 2695               	.LVL63:
 192:../dumbcraft/dumbcraft.c **** 	ret |= dcrbyte()<<8;
 2696               	 .loc 1 192 0
 2697 01ec 2C2F      	 mov r18,r28
 2698 01ee 30E0      	 ldi r19,0
 2699 01f0 322F      	 mov r19,r18
 2700 01f2 2227      	 clr r18
 194:../dumbcraft/dumbcraft.c **** 	return ret;
 195:../dumbcraft/dumbcraft.c **** }
 2701               	 .loc 1 195 0
 2702 01f4 A901      	 movw r20,r18
 2703 01f6 482B      	 or r20,r24
 2704 01f8 CA01      	 movw r24,r20
 2705               	.LVL64:
 2706               	 
 2707 01fa CF91      	 pop r28
 2708 01fc 0895      	 ret
 2709               	 .cfi_endproc
 2710               	.LFE16:
 2712               	.global Rposition
 2714               	Rposition:
GAS LISTING  			page 127


 2715               	.LFB17:
 196:../dumbcraft/dumbcraft.c **** 
 197:../dumbcraft/dumbcraft.c **** void Rposition( uint8_t * x, uint8_t * y, uint8_t * z )
 198:../dumbcraft/dumbcraft.c **** {
 2716               	 .loc 1 198 0
 2717               	 .cfi_startproc
 2718               	.LVL65:
 2719 01fe EF92      	 push r14
 2720               	.LCFI22:
 2721               	 .cfi_def_cfa_offset 3
 2722               	 .cfi_offset 14,-2
 2723 0200 FF92      	 push r15
 2724               	.LCFI23:
 2725               	 .cfi_def_cfa_offset 4
 2726               	 .cfi_offset 15,-3
 2727 0202 0F93      	 push r16
 2728               	.LCFI24:
 2729               	 .cfi_def_cfa_offset 5
 2730               	 .cfi_offset 16,-4
 2731 0204 1F93      	 push r17
 2732               	.LCFI25:
 2733               	 .cfi_def_cfa_offset 6
 2734               	 .cfi_offset 17,-5
 2735 0206 CF93      	 push r28
 2736               	.LCFI26:
 2737               	 .cfi_def_cfa_offset 7
 2738               	 .cfi_offset 28,-6
 2739 0208 DF93      	 push r29
 2740               	.LCFI27:
 2741               	 .cfi_def_cfa_offset 8
 2742               	 .cfi_offset 29,-7
 2743               	 
 2744               	 
 2745               	 
 2746               	.L__stack_usage =6
 2747 020a EC01      	 movw r28,r24
 2748 020c 8B01      	 movw r16,r22
 2749 020e 7A01      	 movw r14,r20
 199:../dumbcraft/dumbcraft.c **** 	dcrbyte();
 2750               	 .loc 1 199 0
 2751 0210 0E94 0000 	 call dcrbyte
 2752               	.LVL66:
 200:../dumbcraft/dumbcraft.c **** 	dcrbyte();
 2753               	 .loc 1 200 0
 2754 0214 0E94 0000 	 call dcrbyte
 2755               	.LVL67:
 201:../dumbcraft/dumbcraft.c **** 	*x = dcrbyte()<<2;
 2756               	 .loc 1 201 0
 2757 0218 0E94 0000 	 call dcrbyte
 2758               	.LVL68:
 2759 021c 880F      	 lsl r24
 2760 021e 880F      	 lsl r24
 2761 0220 8883      	 st Y,r24
 202:../dumbcraft/dumbcraft.c **** 	uint8_t nr = dcrbyte();
 2762               	 .loc 1 202 0
 2763 0222 0E94 0000 	 call dcrbyte
 2764               	.LVL69:
GAS LISTING  			page 128


 203:../dumbcraft/dumbcraft.c **** 	*x |= nr>>6;
 2765               	 .loc 1 203 0
 2766 0226 282F      	 mov r18,r24
 2767 0228 2295      	 swap r18
 2768 022a 2695      	 lsr r18
 2769 022c 2695      	 lsr r18
 2770 022e 2370      	 andi r18,lo8(3)
 2771 0230 9881      	 ld r25,Y
 2772 0232 922B      	 or r25,r18
 2773 0234 9883      	 st Y,r25
 204:../dumbcraft/dumbcraft.c **** 	*y = nr<<6;
 2774               	 .loc 1 204 0
 2775 0236 C82F      	 mov r28,r24
 2776               	.LVL70:
 2777 0238 C295      	 swap r28
 2778 023a CC0F      	 lsl r28
 2779 023c CC0F      	 lsl r28
 2780 023e C07C      	 andi r28,lo8(-64)
 2781 0240 F801      	 movw r30,r16
 2782 0242 C083      	 st Z,r28
 205:../dumbcraft/dumbcraft.c **** 	*y |= dcrbyte()>>2;
 2783               	 .loc 1 205 0
 2784 0244 0E94 0000 	 call dcrbyte
 2785               	.LVL71:
 2786 0248 8695      	 lsr r24
 2787 024a 8695      	 lsr r24
 2788 024c 8C2B      	 or r24,r28
 2789 024e F801      	 movw r30,r16
 2790 0250 8083      	 st Z,r24
 206:../dumbcraft/dumbcraft.c **** 	dcrbyte();
 2791               	 .loc 1 206 0
 2792 0252 0E94 0000 	 call dcrbyte
 2793               	.LVL72:
 207:../dumbcraft/dumbcraft.c **** 	dcrbyte();
 2794               	 .loc 1 207 0
 2795 0256 0E94 0000 	 call dcrbyte
 2796               	.LVL73:
 208:../dumbcraft/dumbcraft.c **** 	*z = dcrbyte();
 2797               	 .loc 1 208 0
 2798 025a 0E94 0000 	 call dcrbyte
 2799               	.LVL74:
 2800 025e F701      	 movw r30,r14
 2801 0260 8083      	 st Z,r24
 2802               	 
 209:../dumbcraft/dumbcraft.c **** }
 2803               	 .loc 1 209 0
 2804 0262 DF91      	 pop r29
 2805 0264 CF91      	 pop r28
 2806 0266 1F91      	 pop r17
 2807 0268 0F91      	 pop r16
 2808               	.LVL75:
 2809 026a FF90      	 pop r15
 2810 026c EF90      	 pop r14
 2811               	.LVL76:
 2812 026e 0895      	 ret
 2813               	 .cfi_endproc
 2814               	.LFE17:
GAS LISTING  			page 129


 2816               	.global Rvarint
 2818               	Rvarint:
 2819               	.LFB18:
 210:../dumbcraft/dumbcraft.c **** 
 211:../dumbcraft/dumbcraft.c **** uint16_t Rvarint()
 212:../dumbcraft/dumbcraft.c **** {
 2820               	 .loc 1 212 0
 2821               	 .cfi_startproc
 2822 0270 CF93      	 push r28
 2823               	.LCFI28:
 2824               	 .cfi_def_cfa_offset 3
 2825               	 .cfi_offset 28,-2
 2826               	 
 2827               	 
 2828               	 
 2829               	.L__stack_usage =1
 213:../dumbcraft/dumbcraft.c **** 	uint16_t ret = dcrbyte();
 2830               	 .loc 1 213 0
 2831 0272 0E94 0000 	 call dcrbyte
 2832               	.LVL77:
 2833 0276 C82F      	 mov r28,r24
 2834               	.LVL78:
 214:../dumbcraft/dumbcraft.c **** 	if( ret & 0x80 )
 2835               	 .loc 1 214 0
 2836 0278 87FD      	 sbrc r24,7
 2837 027a 00C0      	 rjmp .L49
 213:../dumbcraft/dumbcraft.c **** 	uint16_t ret = dcrbyte();
 2838               	 .loc 1 213 0
 2839 027c 90E0      	 ldi r25,0
 2840 027e 00C0      	 rjmp .L50
 2841               	.L49:
 215:../dumbcraft/dumbcraft.c **** 	{
 216:../dumbcraft/dumbcraft.c **** 		ret = (ret&0x7f)|(dcrbyte()<<7);
 2842               	 .loc 1 216 0
 2843 0280 0E94 0000 	 call dcrbyte
 2844               	.LVL79:
 2845 0284 90E0      	 ldi r25,0
 2846 0286 9695      	 lsr r25
 2847 0288 982F      	 mov r25,r24
 2848 028a 8827      	 clr r24
 2849 028c 9795      	 ror r25
 2850 028e 8795      	 ror r24
 2851 0290 CF77      	 andi r28,lo8(127)
 2852               	.LVL80:
 2853 0292 8C2B      	 or r24,r28
 2854               	.LVL81:
 2855               	.L50:
 2856               	 
 217:../dumbcraft/dumbcraft.c **** 	}
 218:../dumbcraft/dumbcraft.c **** 
 219:../dumbcraft/dumbcraft.c **** 	return ret;
 220:../dumbcraft/dumbcraft.c **** }
 2857               	 .loc 1 220 0
 2858 0294 CF91      	 pop r28
 2859 0296 0895      	 ret
 2860               	 .cfi_endproc
 2861               	.LFE18:
GAS LISTING  			page 130


 2863               	.global Rslot
 2865               	Rslot:
 2866               	.LFB19:
 221:../dumbcraft/dumbcraft.c **** 
 222:../dumbcraft/dumbcraft.c **** uint16_t Rslot()
 223:../dumbcraft/dumbcraft.c **** {
 2867               	 .loc 1 223 0
 2868               	 .cfi_startproc
 2869 0298 CF93      	 push r28
 2870               	.LCFI29:
 2871               	 .cfi_def_cfa_offset 3
 2872               	 .cfi_offset 28,-2
 2873 029a DF93      	 push r29
 2874               	.LCFI30:
 2875               	 .cfi_def_cfa_offset 4
 2876               	 .cfi_offset 29,-3
 2877               	 
 2878               	 
 2879               	 
 2880               	.L__stack_usage =2
 224:../dumbcraft/dumbcraft.c **** /*	uint16_t ret = */Rshort();
 2881               	 .loc 1 224 0
 2882 029c 0E94 0000 	 call Rshort
 2883               	.LVL82:
 225:../dumbcraft/dumbcraft.c **** /*	uint8_t  count = */dcrbyte();
 2884               	 .loc 1 225 0
 2885 02a0 0E94 0000 	 call dcrbyte
 2886               	.LVL83:
 226:../dumbcraft/dumbcraft.c **** /*	uint16_t damage = */Rshort();
 2887               	 .loc 1 226 0
 2888 02a4 0E94 0000 	 call Rshort
 2889               	.LVL84:
 227:../dumbcraft/dumbcraft.c **** 	uint16_t nbt = Rshort();
 2890               	 .loc 1 227 0
 2891 02a8 0E94 0000 	 call Rshort
 2892               	.LVL85:
 2893 02ac EC01      	 movw r28,r24
 2894               	.LVL86:
 228:../dumbcraft/dumbcraft.c **** 	if( nbt != 0xffff )
 2895               	 .loc 1 228 0
 2896 02ae CF3F      	 cpi r28,-1
 2897 02b0 8FEF      	 ldi r24,-1
 2898 02b2 D807      	 cpc r29,r24
 2899               	.LVL87:
 2900 02b4 01F0      	 breq .L52
 229:../dumbcraft/dumbcraft.c **** 	{
 230:../dumbcraft/dumbcraft.c **** 		Rdump( nbt );
 2901               	 .loc 1 230 0
 2902 02b6 CE01      	 movw r24,r28
 2903 02b8 0E94 0000 	 call Rdump
 2904               	.LVL88:
 2905               	.L52:
 231:../dumbcraft/dumbcraft.c **** 	}
 232:../dumbcraft/dumbcraft.c **** 	return nbt;
 233:../dumbcraft/dumbcraft.c **** }
 2906               	 .loc 1 233 0
 2907 02bc CE01      	 movw r24,r28
GAS LISTING  			page 131


 2908               	 
 2909 02be DF91      	 pop r29
 2910 02c0 CF91      	 pop r28
 2911               	.LVL89:
 2912 02c2 0895      	 ret
 2913               	 .cfi_endproc
 2914               	.LFE19:
 2916               	.global Rstring
 2918               	Rstring:
 2919               	.LFB20:
 234:../dumbcraft/dumbcraft.c **** 
 235:../dumbcraft/dumbcraft.c **** void Rstring( char * data, int16_t maxlen )
 236:../dumbcraft/dumbcraft.c **** {
 2920               	 .loc 1 236 0
 2921               	 .cfi_startproc
 2922               	.LVL90:
 2923 02c4 AF92      	 push r10
 2924               	.LCFI31:
 2925               	 .cfi_def_cfa_offset 3
 2926               	 .cfi_offset 10,-2
 2927 02c6 BF92      	 push r11
 2928               	.LCFI32:
 2929               	 .cfi_def_cfa_offset 4
 2930               	 .cfi_offset 11,-3
 2931 02c8 CF92      	 push r12
 2932               	.LCFI33:
 2933               	 .cfi_def_cfa_offset 5
 2934               	 .cfi_offset 12,-4
 2935 02ca DF92      	 push r13
 2936               	.LCFI34:
 2937               	 .cfi_def_cfa_offset 6
 2938               	 .cfi_offset 13,-5
 2939 02cc EF92      	 push r14
 2940               	.LCFI35:
 2941               	 .cfi_def_cfa_offset 7
 2942               	 .cfi_offset 14,-6
 2943 02ce FF92      	 push r15
 2944               	.LCFI36:
 2945               	 .cfi_def_cfa_offset 8
 2946               	 .cfi_offset 15,-7
 2947 02d0 0F93      	 push r16
 2948               	.LCFI37:
 2949               	 .cfi_def_cfa_offset 9
 2950               	 .cfi_offset 16,-8
 2951 02d2 1F93      	 push r17
 2952               	.LCFI38:
 2953               	 .cfi_def_cfa_offset 10
 2954               	 .cfi_offset 17,-9
 2955 02d4 CF93      	 push r28
 2956               	.LCFI39:
 2957               	 .cfi_def_cfa_offset 11
 2958               	 .cfi_offset 28,-10
 2959 02d6 DF93      	 push r29
 2960               	.LCFI40:
 2961               	 .cfi_def_cfa_offset 12
 2962               	 .cfi_offset 29,-11
 2963               	 
GAS LISTING  			page 132


 2964               	 
 2965               	 
 2966               	.L__stack_usage =10
 2967 02d8 7C01      	 movw r14,r24
 2968 02da 6B01      	 movw r12,r22
 237:../dumbcraft/dumbcraft.c **** 	uint16_t toread = Rvarint();
 2969               	 .loc 1 237 0
 2970 02dc 0E94 0000 	 call Rvarint
 2971               	.LVL91:
 2972 02e0 8C01      	 movw r16,r24
 2973               	.LVL92:
 238:../dumbcraft/dumbcraft.c **** 	uint16_t len = 0;
 2974               	 .loc 1 238 0
 2975 02e2 C0E0      	 ldi r28,0
 2976 02e4 D0E0      	 ldi r29,0
 2977               	.LVL93:
 2978               	.L57:
 239:../dumbcraft/dumbcraft.c **** 	//if( toread > maxlen ) toread = maxlen;
 240:../dumbcraft/dumbcraft.c **** 	while( toread-- )
 2979               	 .loc 1 240 0 discriminator 1
 2980 02e6 0115      	 cp r16,__zero_reg__
 2981 02e8 1105      	 cpc r17,__zero_reg__
 2982 02ea 01F0      	 breq .L61
 241:../dumbcraft/dumbcraft.c **** 	{
 242:../dumbcraft/dumbcraft.c **** 		if( len < maxlen )
 2983               	 .loc 1 242 0
 2984 02ec CC15      	 cp r28,r12
 2985 02ee DD05      	 cpc r29,r13
 2986 02f0 00F4      	 brsh .L58
 243:../dumbcraft/dumbcraft.c **** 			data[len++] = dcrbyte();
 2987               	 .loc 1 243 0
 2988 02f2 5E01      	 movw r10,r28
 2989 02f4 8FEF      	 ldi r24,-1
 2990 02f6 A81A      	 sub r10,r24
 2991 02f8 B80A      	 sbc r11,r24
 2992               	.LVL94:
 2993 02fa CE0D      	 add r28,r14
 2994 02fc DF1D      	 adc r29,r15
 2995 02fe 0E94 0000 	 call dcrbyte
 2996               	.LVL95:
 2997 0302 8883      	 st Y,r24
 2998 0304 E501      	 movw r28,r10
 2999 0306 00C0      	 rjmp .L59
 3000               	.LVL96:
 3001               	.L58:
 244:../dumbcraft/dumbcraft.c **** 		else
 245:../dumbcraft/dumbcraft.c **** 			dcrbyte();
 3002               	 .loc 1 245 0
 3003 0308 0E94 0000 	 call dcrbyte
 3004               	.LVL97:
 3005               	.L59:
 3006 030c 0150      	 subi r16,1
 3007 030e 1109      	 sbc r17,__zero_reg__
 3008               	.LVL98:
 3009 0310 00C0      	 rjmp .L57
 3010               	.LVL99:
 3011               	.L61:
GAS LISTING  			page 133


 3012               	 
 246:../dumbcraft/dumbcraft.c **** 	}
 247:../dumbcraft/dumbcraft.c **** }
 3013               	 .loc 1 247 0
 3014 0312 DF91      	 pop r29
 3015 0314 CF91      	 pop r28
 3016               	.LVL100:
 3017 0316 1F91      	 pop r17
 3018 0318 0F91      	 pop r16
 3019               	.LVL101:
 3020 031a FF90      	 pop r15
 3021 031c EF90      	 pop r14
 3022               	.LVL102:
 3023 031e DF90      	 pop r13
 3024 0320 CF90      	 pop r12
 3025               	.LVL103:
 3026 0322 BF90      	 pop r11
 3027 0324 AF90      	 pop r10
 3028 0326 0895      	 ret
 3029               	 .cfi_endproc
 3030               	.LFE20:
 3032               	.global Rdouble
 3034               	Rdouble:
 3035               	.LFB21:
 248:../dumbcraft/dumbcraft.c **** 
 249:../dumbcraft/dumbcraft.c **** //Read a double and immediately convert it into a fixed-point int16.
 250:../dumbcraft/dumbcraft.c **** int16_t Rdouble()
 251:../dumbcraft/dumbcraft.c **** {
 3036               	 .loc 1 251 0
 3037               	 .cfi_startproc
 3038 0328 CF93      	 push r28
 3039               	.LCFI41:
 3040               	 .cfi_def_cfa_offset 3
 3041               	 .cfi_offset 28,-2
 3042 032a DF93      	 push r29
 3043               	.LCFI42:
 3044               	 .cfi_def_cfa_offset 4
 3045               	 .cfi_offset 29,-3
 3046 032c CDB7      	 in r28,__SP_L__
 3047 032e DEB7      	 in r29,__SP_H__
 3048               	.LCFI43:
 3049               	 .cfi_def_cfa_register 28
 3050 0330 2897      	 sbiw r28,8
 3051               	.LCFI44:
 3052               	 .cfi_def_cfa_offset 12
 3053 0332 0FB6      	 in __tmp_reg__,__SREG__
 3054 0334 F894      	 cli
 3055 0336 DEBF      	 out __SP_H__,r29
 3056 0338 0FBE      	 out __SREG__,__tmp_reg__
 3057 033a CDBF      	 out __SP_L__,r28
 3058               	 
 3059               	 
 3060               	 
 3061               	.L__stack_usage =10
 252:../dumbcraft/dumbcraft.c **** 	uint8_t doublebuffer[8];
 253:../dumbcraft/dumbcraft.c **** 	int16_t ir;
 254:../dumbcraft/dumbcraft.c **** 	Rbuffer( doublebuffer, 8 );
GAS LISTING  			page 134


 3062               	 .loc 1 254 0
 3063 033c 68E0      	 ldi r22,lo8(8)
 3064 033e CE01      	 movw r24,r28
 3065 0340 0196      	 adiw r24,1
 3066 0342 0E94 0000 	 call Rbuffer
 3067               	.LVL104:
 3068               	.LBB40:
 3069               	.LBB41:
 3070               	 .file 2 "../libs/754lib.h"
   1:../libs/754lib.h **** //Copyright 2012 <>< Charles Lohr, under the MIT-x11 or NewBSD license.  You choose.
   2:../libs/754lib.h **** 
   3:../libs/754lib.h **** #ifndef _754LIB_H
   4:../libs/754lib.h **** #define _754LIB_H
   5:../libs/754lib.h **** 
   6:../libs/754lib.h **** #include <stdint.h>
   7:../libs/754lib.h **** 
   8:../libs/754lib.h **** 
   9:../libs/754lib.h **** #ifdef __AVR__
  10:../libs/754lib.h **** 
  11:../libs/754lib.h **** #else
  12:../libs/754lib.h **** 
  13:../libs/754lib.h **** //For IEEE754-1985 doubles and floats; static library.
  14:../libs/754lib.h **** // for i386, this must be set.
  15:../libs/754lib.h **** //#define ENDIAN_SWITCH
  16:../libs/754lib.h **** 
  17:../libs/754lib.h **** #endif
  18:../libs/754lib.h **** 
  19:../libs/754lib.h **** #ifdef ENDIAN_SWITCH
  20:../libs/754lib.h **** #define ENDI8(x) (7-x)
  21:../libs/754lib.h **** #define ENDI4(x) (3-x)
  22:../libs/754lib.h **** #else
  23:../libs/754lib.h **** #define ENDI8(x) x
  24:../libs/754lib.h **** #define ENDI4(x) x
  25:../libs/754lib.h **** #endif
  26:../libs/754lib.h **** 
  27:../libs/754lib.h **** 
  28:../libs/754lib.h **** static int16_t DoubleToW( double * d, int8_t shift )
  29:../libs/754lib.h **** {
  30:../libs/754lib.h **** 	uint8_t * u = (uint8_t*)d;
  31:../libs/754lib.h **** 	uint16_t ret;
  32:../libs/754lib.h **** 	int16_t exponent;
  33:../libs/754lib.h **** 
  34:../libs/754lib.h **** 	exponent = (((u[ENDI8(0)]<<8) | u[ENDI8(1)])&0x7ff0) >> 4;
 3071               	 .loc 2 34 0
 3072 0346 E981      	 ldd r30,Y+1
 3073 0348 6A81      	 ldd r22,Y+2
 3074 034a 70E0      	 ldi r23,0
 3075 034c AB01      	 movw r20,r22
 3076 034e 5E2B      	 or r21,r30
 3077 0350 407F      	 andi r20,240
 3078 0352 5F77      	 andi r21,127
 3079 0354 84E0      	 ldi r24,4
 3080               	 1:
 3081 0356 5595      	 asr r21
 3082 0358 4795      	 ror r20
 3083 035a 8A95      	 dec r24
 3084 035c 01F4      	 brne 1b
GAS LISTING  			page 135


 3085               	.LVL105:
  35:../libs/754lib.h **** 	ret = (u[ENDI8(1)] << 11) | (u[ENDI8(2)] << 3) | (u[ENDI8(3)] >> 5) | 0x8000;
 3086               	 .loc 2 35 0
 3087 035e 8B81      	 ldd r24,Y+3
 3088 0360 FC81      	 ldd r31,Y+4
 3089               	.LVL106:
  36:../libs/754lib.h **** 
  37:../libs/754lib.h **** 	exponent += shift;
  38:../libs/754lib.h **** 	exponent = 0x40e - exponent;
 3090               	 .loc 2 38 0
 3091 0362 29E0      	 ldi r18,lo8(9)
 3092 0364 34E0      	 ldi r19,lo8(4)
 3093 0366 241B      	 sub r18,r20
 3094 0368 350B      	 sbc r19,r21
 3095               	.LVL107:
  39:../libs/754lib.h **** 
  40:../libs/754lib.h **** 	if( exponent < 0 )
 3096               	 .loc 2 40 0
 3097 036a 37FD      	 sbrc r19,7
 3098 036c 00C0      	 rjmp .L66
  41:../libs/754lib.h **** 		ret = 0x7fff;
  42:../libs/754lib.h **** 	else if( exponent > 15 )
 3099               	 .loc 2 42 0
 3100 036e 2031      	 cpi r18,16
 3101 0370 3105      	 cpc r19,__zero_reg__
 3102 0372 04F4      	 brge .L67
  35:../libs/754lib.h **** 	ret = (u[ENDI8(1)] << 11) | (u[ENDI8(2)] << 3) | (u[ENDI8(3)] >> 5) | 0x8000;
 3103               	 .loc 2 35 0
 3104 0374 90E0      	 ldi r25,0
 3105 0376 A3E0      	 ldi r26,3
 3106               	 1:
 3107 0378 880F      	 lsl r24
 3108 037a 991F      	 rol r25
 3109 037c AA95      	 dec r26
 3110 037e 01F4      	 brne 1b
 3111               	.LVL108:
 3112 0380 762F      	 mov r23,r22
 3113 0382 6627      	 clr r22
 3114 0384 770F      	 lsl r23
 3115 0386 770F      	 lsl r23
 3116 0388 770F      	 lsl r23
 3117               	.LVL109:
 3118 038a 862B      	 or r24,r22
 3119 038c 972B      	 or r25,r23
 3120 038e 3F2F      	 mov r19,r31
 3121 0390 3295      	 swap r19
 3122 0392 3695      	 lsr r19
 3123 0394 3770      	 andi r19,lo8(7)
 3124 0396 832B      	 or r24,r19
 3125 0398 9068      	 ori r25,128
  43:../libs/754lib.h **** 		ret = 0;
  44:../libs/754lib.h **** 	else
  45:../libs/754lib.h **** 		ret >>= exponent;
 3126               	 .loc 2 45 0
 3127 039a 00C0      	 rjmp 2f
 3128               	 1:
 3129 039c 9695      	 lsr r25
GAS LISTING  			page 136


 3130 039e 8795      	 ror r24
 3131               	 2:
 3132 03a0 2A95      	 dec r18
 3133 03a2 02F4      	 brpl 1b
 3134               	.LVL110:
 3135 03a4 00C0      	 rjmp .L63
 3136               	.LVL111:
 3137               	.L66:
  41:../libs/754lib.h **** 		ret = 0x7fff;
 3138               	 .loc 2 41 0
 3139 03a6 8FEF      	 ldi r24,lo8(-1)
 3140 03a8 9FE7      	 ldi r25,lo8(127)
 3141               	.LVL112:
 3142 03aa 00C0      	 rjmp .L63
 3143               	.LVL113:
 3144               	.L67:
  43:../libs/754lib.h **** 		ret = 0;
 3145               	 .loc 2 43 0
 3146 03ac 80E0      	 ldi r24,0
 3147 03ae 90E0      	 ldi r25,0
 3148               	.LVL114:
 3149               	.L63:
  46:../libs/754lib.h **** 
  47:../libs/754lib.h **** 	if( u[ENDI8(0)] & 0x80 )
 3150               	 .loc 2 47 0
 3151 03b0 E7FF      	 sbrs r30,7
 3152 03b2 00C0      	 rjmp .L65
  48:../libs/754lib.h **** 		return -ret;
 3153               	 .loc 2 48 0
 3154 03b4 9195      	 neg r25
 3155 03b6 8195      	 neg r24
 3156 03b8 9109      	 sbc r25,__zero_reg__
 3157               	.LVL115:
 3158               	.L65:
 3159               	 
 3160               	.LBE41:
 3161               	.LBE40:
 255:../dumbcraft/dumbcraft.c **** 	ir = DoubleToW( (double*)doublebuffer, FIXEDPOINT );
 256:../dumbcraft/dumbcraft.c **** 	return ir;
 257:../dumbcraft/dumbcraft.c **** }
 3162               	 .loc 1 257 0
 3163 03ba 2896      	 adiw r28,8
 3164 03bc 0FB6      	 in __tmp_reg__,__SREG__
 3165 03be F894      	 cli
 3166 03c0 DEBF      	 out __SP_H__,r29
 3167 03c2 0FBE      	 out __SREG__,__tmp_reg__
 3168 03c4 CDBF      	 out __SP_L__,r28
 3169 03c6 DF91      	 pop r29
 3170 03c8 CF91      	 pop r28
 3171 03ca 0895      	 ret
 3172               	 .cfi_endproc
 3173               	.LFE21:
 3175               	.global Rfloat
 3177               	Rfloat:
 3178               	.LFB22:
 258:../dumbcraft/dumbcraft.c **** 
 259:../dumbcraft/dumbcraft.c **** //Read a float and immediately convert it into a fixed-point int16.
GAS LISTING  			page 137


 260:../dumbcraft/dumbcraft.c **** int16_t Rfloat()
 261:../dumbcraft/dumbcraft.c **** {
 3179               	 .loc 1 261 0
 3180               	 .cfi_startproc
 3181 03cc CF93      	 push r28
 3182               	.LCFI45:
 3183               	 .cfi_def_cfa_offset 3
 3184               	 .cfi_offset 28,-2
 3185 03ce DF93      	 push r29
 3186               	.LCFI46:
 3187               	 .cfi_def_cfa_offset 4
 3188               	 .cfi_offset 29,-3
 3189 03d0 00D0      	 rcall .
 3190 03d2 00D0      	 rcall .
 3191               	.LCFI47:
 3192               	 .cfi_def_cfa_offset 8
 3193 03d4 CDB7      	 in r28,__SP_L__
 3194 03d6 DEB7      	 in r29,__SP_H__
 3195               	.LCFI48:
 3196               	 .cfi_def_cfa_register 28
 3197               	 
 3198               	 
 3199               	 
 3200               	.L__stack_usage =6
 262:../dumbcraft/dumbcraft.c **** 	uint8_t floatbuffer[4];
 263:../dumbcraft/dumbcraft.c **** 	Rbuffer( floatbuffer, 4 );
 3201               	 .loc 1 263 0
 3202 03d8 64E0      	 ldi r22,lo8(4)
 3203 03da CE01      	 movw r24,r28
 3204 03dc 0196      	 adiw r24,1
 3205 03de 0E94 0000 	 call Rbuffer
 3206               	.LVL116:
 3207               	.LBB44:
 3208               	.LBB45:
  49:../libs/754lib.h **** 	return ret;
  50:../libs/754lib.h **** }
  51:../libs/754lib.h **** 
  52:../libs/754lib.h **** 
  53:../libs/754lib.h **** //As of yet is unwritten.
  54:../libs/754lib.h **** static void WToDouble( int16_t in, int8_t shift, double * d )
  55:../libs/754lib.h **** {
  56:../libs/754lib.h **** 	uint8_t i;
  57:../libs/754lib.h **** 	uint16_t exp = 0x80e - shift;
  58:../libs/754lib.h **** 	uint16_t flipin;
  59:../libs/754lib.h **** 
  60:../libs/754lib.h **** 	uint8_t * u = (uint8_t*)d;
  61:../libs/754lib.h **** 
  62:../libs/754lib.h **** 	if( in < 0 )
  63:../libs/754lib.h **** 	{
  64:../libs/754lib.h **** 		u[ENDI8(0)] = 0x80;
  65:../libs/754lib.h **** 		in = -in;
  66:../libs/754lib.h **** 	}
  67:../libs/754lib.h **** 	else
  68:../libs/754lib.h **** 	{
  69:../libs/754lib.h **** 		u[ENDI8(0)] = 0x00;
  70:../libs/754lib.h **** 	}
  71:../libs/754lib.h **** 
GAS LISTING  			page 138


  72:../libs/754lib.h **** 	flipin = in;
  73:../libs/754lib.h **** 	for( i = 0; i < 16; i++ )
  74:../libs/754lib.h **** 	{
  75:../libs/754lib.h **** 		if( flipin & 0x8000 ) break;
  76:../libs/754lib.h **** 		exp--;
  77:../libs/754lib.h **** 		flipin<<=1;
  78:../libs/754lib.h **** 	}
  79:../libs/754lib.h **** 	if( i == 16 ) exp = 0;
  80:../libs/754lib.h **** 	flipin<<=1;
  81:../libs/754lib.h **** 
  82:../libs/754lib.h **** 	//in is now normalized.
  83:../libs/754lib.h **** 	u[ENDI8(0)] |= (exp>>5);
  84:../libs/754lib.h **** 	u[ENDI8(1)] = (exp<<4) | (flipin>>12);
  85:../libs/754lib.h **** 	u[ENDI8(2)] = (flipin>>4);
  86:../libs/754lib.h **** 	u[ENDI8(3)] = (flipin<<4);
  87:../libs/754lib.h **** 	u[ENDI8(4)] = 0;
  88:../libs/754lib.h **** 	u[ENDI8(5)] = 0;
  89:../libs/754lib.h **** 	u[ENDI8(6)] = 0;
  90:../libs/754lib.h **** 	u[ENDI8(7)] = 0;
  91:../libs/754lib.h **** 
  92:../libs/754lib.h **** }
  93:../libs/754lib.h **** 
  94:../libs/754lib.h **** 
  95:../libs/754lib.h **** //Float stuffs
  96:../libs/754lib.h **** 
  97:../libs/754lib.h **** static uint16_t FloatToW( float * d, int8_t shift )
  98:../libs/754lib.h **** {
  99:../libs/754lib.h **** 	uint16_t ret;
 100:../libs/754lib.h **** 	int16_t exponent;
 101:../libs/754lib.h **** 
 102:../libs/754lib.h **** 	uint8_t * u = (uint8_t*)d;
 103:../libs/754lib.h **** 
 104:../libs/754lib.h **** 	exponent = ((u[ENDI4(0)]&0x7f)<<1) | (u[ENDI4(1)]>>7);
 3209               	 .loc 2 104 0
 3210 03e2 6981      	 ldd r22,Y+1
 3211 03e4 7A81      	 ldd r23,Y+2
 3212 03e6 262F      	 mov r18,r22
 3213 03e8 30E0      	 ldi r19,0
 3214 03ea 220F      	 lsl r18
 3215 03ec 331F      	 rol r19
 3216 03ee 3327      	 clr r19
 3217 03f0 872F      	 mov r24,r23
 3218 03f2 881F      	 rol r24
 3219 03f4 8827      	 clr r24
 3220 03f6 881F      	 rol r24
 3221 03f8 282B      	 or r18,r24
 3222               	.LVL117:
 105:../libs/754lib.h **** 
 106:../libs/754lib.h **** 	ret = (u[ENDI4(1)] << 8) | (u[ENDI4(2)]) | 0x8000;
 3223               	 .loc 2 106 0
 3224 03fa 8B81      	 ldd r24,Y+3
 3225               	.LVL118:
 107:../libs/754lib.h **** 
 108:../libs/754lib.h **** 	exponent += shift;
 109:../libs/754lib.h **** 	exponent = 0x8e - exponent;
 3226               	 .loc 2 109 0
 3227 03fc 49E8      	 ldi r20,lo8(-119)
GAS LISTING  			page 139


 3228 03fe 50E0      	 ldi r21,0
 3229 0400 421B      	 sub r20,r18
 3230 0402 530B      	 sbc r21,r19
 3231               	.LVL119:
 110:../libs/754lib.h **** 	if( exponent < 0 )
 3232               	 .loc 2 110 0
 3233 0404 57FD      	 sbrc r21,7
 3234 0406 00C0      	 rjmp .L71
 111:../libs/754lib.h **** 		ret = 0x7fff;
 112:../libs/754lib.h **** 	else if( exponent > 15 )
 3235               	 .loc 2 112 0
 3236 0408 4031      	 cpi r20,16
 3237 040a 5105      	 cpc r21,__zero_reg__
 3238 040c 04F4      	 brge .L72
 106:../libs/754lib.h **** 	ret = (u[ENDI4(1)] << 8) | (u[ENDI4(2)]) | 0x8000;
 3239               	 .loc 2 106 0
 3240 040e 90E0      	 ldi r25,0
 3241 0410 972B      	 or r25,r23
 3242 0412 9068      	 ori r25,128
 3243               	.LVL120:
 113:../libs/754lib.h **** 		ret = 0;
 114:../libs/754lib.h **** 	else
 115:../libs/754lib.h **** 		ret >>= exponent;
 3244               	 .loc 2 115 0
 3245 0414 00C0      	 rjmp 2f
 3246               	 1:
 3247 0416 9695      	 lsr r25
 3248 0418 8795      	 ror r24
 3249               	 2:
 3250 041a 4A95      	 dec r20
 3251 041c 02F4      	 brpl 1b
 3252               	.LVL121:
 3253 041e 00C0      	 rjmp .L69
 3254               	.LVL122:
 3255               	.L71:
 111:../libs/754lib.h **** 		ret = 0x7fff;
 3256               	 .loc 2 111 0
 3257 0420 8FEF      	 ldi r24,lo8(-1)
 3258 0422 9FE7      	 ldi r25,lo8(127)
 3259               	.LVL123:
 3260 0424 00C0      	 rjmp .L69
 3261               	.LVL124:
 3262               	.L72:
 113:../libs/754lib.h **** 		ret = 0;
 3263               	 .loc 2 113 0
 3264 0426 80E0      	 ldi r24,0
 3265 0428 90E0      	 ldi r25,0
 3266               	.LVL125:
 3267               	.L69:
 116:../libs/754lib.h **** 
 117:../libs/754lib.h **** 	if( u[ENDI4(0)] & 0x80 )
 3268               	 .loc 2 117 0
 3269 042a 67FF      	 sbrs r22,7
 3270 042c 00C0      	 rjmp .L70
 118:../libs/754lib.h **** 		return -ret;
 3271               	 .loc 2 118 0
 3272 042e 9195      	 neg r25
GAS LISTING  			page 140


 3273 0430 8195      	 neg r24
 3274 0432 9109      	 sbc r25,__zero_reg__
 3275               	.LVL126:
 3276               	.L70:
 3277               	 
 3278               	.LBE45:
 3279               	.LBE44:
 264:../dumbcraft/dumbcraft.c **** 	return FloatToW( (float*)floatbuffer, FIXEDPOINT );
 265:../dumbcraft/dumbcraft.c **** }
 3280               	 .loc 1 265 0
 3281 0434 0F90      	 pop __tmp_reg__
 3282 0436 0F90      	 pop __tmp_reg__
 3283 0438 0F90      	 pop __tmp_reg__
 3284 043a 0F90      	 pop __tmp_reg__
 3285 043c DF91      	 pop r29
 3286 043e CF91      	 pop r28
 3287               	.LVL127:
 3288 0440 0895      	 ret
 3289               	 .cfi_endproc
 3290               	.LFE22:
 3292               	.global Svarint
 3294               	Svarint:
 3295               	.LFB23:
 266:../dumbcraft/dumbcraft.c **** 
 267:../dumbcraft/dumbcraft.c **** 
 268:../dumbcraft/dumbcraft.c **** //////////////////////////////////////////SENDING UTILITIES////////////////////
 269:../dumbcraft/dumbcraft.c **** 
 270:../dumbcraft/dumbcraft.c **** //send- utility functions
 271:../dumbcraft/dumbcraft.c **** 
 272:../dumbcraft/dumbcraft.c **** void Svarint( uint16_t v )
 273:../dumbcraft/dumbcraft.c **** {
 3296               	 .loc 1 273 0
 3297               	 .cfi_startproc
 3298               	.LVL128:
 3299 0442 CF93      	 push r28
 3300               	.LCFI49:
 3301               	 .cfi_def_cfa_offset 3
 3302               	 .cfi_offset 28,-2
 3303 0444 DF93      	 push r29
 3304               	.LCFI50:
 3305               	 .cfi_def_cfa_offset 4
 3306               	 .cfi_offset 29,-3
 3307               	 
 3308               	 
 3309               	 
 3310               	.L__stack_usage =2
 3311 0446 EC01      	 movw r28,r24
 274:../dumbcraft/dumbcraft.c **** 	if( v > 127 )
 3312               	 .loc 1 274 0
 3313 0448 C038      	 cpi r28,-128
 3314 044a D105      	 cpc r29,__zero_reg__
 3315 044c 00F0      	 brlo .L75
 3316               	.LVL129:
 3317               	.LBB48:
 3318               	.LBB49:
 275:../dumbcraft/dumbcraft.c **** 	{
 276:../dumbcraft/dumbcraft.c **** 		Sbyte( 128 | (v&127) );
GAS LISTING  			page 141


 3319               	 .loc 1 276 0
 3320 044e 8068      	 ori r24,lo8(-128)
 3321               	.LVL130:
 3322 0450 0E94 0000 	 call Sbyte
 3323               	.LVL131:
 277:../dumbcraft/dumbcraft.c **** 		Sbyte( v >> 7 );
 3324               	 .loc 1 277 0
 3325 0454 CE01      	 movw r24,r28
 3326 0456 880F      	 lsl r24
 3327 0458 892F      	 mov r24,r25
 3328 045a 881F      	 rol r24
 3329 045c 990B      	 sbc r25,r25
 3330 045e 9195      	 neg r25
 3331               	.LVL132:
 3332               	.L75:
 3333               	 
 3334               	.LBE49:
 3335               	.LBE48:
 278:../dumbcraft/dumbcraft.c **** 	}
 279:../dumbcraft/dumbcraft.c **** 	else
 280:../dumbcraft/dumbcraft.c **** 		Sbyte( v );
 281:../dumbcraft/dumbcraft.c **** }
 3336               	 .loc 1 281 0
 3337 0460 DF91      	 pop r29
 3338 0462 CF91      	 pop r28
 3339               	.LVL133:
 280:../dumbcraft/dumbcraft.c **** 		Sbyte( v );
 3340               	 .loc 1 280 0
 3341 0464 0C94 0000 	 jmp Sbyte
 3342               	.LVL134:
 3343               	 .cfi_endproc
 3344               	.LFE23:
 3346               	.global Sint
 3348               	Sint:
 3349               	.LFB24:
 282:../dumbcraft/dumbcraft.c **** 
 283:../dumbcraft/dumbcraft.c **** void Sint( uint32_t o )
 284:../dumbcraft/dumbcraft.c **** {
 3350               	 .loc 1 284 0
 3351               	 .cfi_startproc
 3352               	.LVL135:
 3353 0468 1F93      	 push r17
 3354               	.LCFI51:
 3355               	 .cfi_def_cfa_offset 3
 3356               	 .cfi_offset 17,-2
 3357 046a CF93      	 push r28
 3358               	.LCFI52:
 3359               	 .cfi_def_cfa_offset 4
 3360               	 .cfi_offset 28,-3
 3361 046c DF93      	 push r29
 3362               	.LCFI53:
 3363               	 .cfi_def_cfa_offset 5
 3364               	 .cfi_offset 29,-4
 3365 046e 00D0      	 rcall .
 3366               	.LCFI54:
 3367               	 .cfi_def_cfa_offset 7
 3368 0470 CDB7      	 in r28,__SP_L__
GAS LISTING  			page 142


 3369 0472 DEB7      	 in r29,__SP_H__
 3370               	.LCFI55:
 3371               	 .cfi_def_cfa_register 28
 3372               	 
 3373               	 
 3374               	 
 3375               	.L__stack_usage =5
 3376 0474 182F      	 mov r17,r24
 3377 0476 892F      	 mov r24,r25
 285:../dumbcraft/dumbcraft.c **** 	Sbyte( o >> 24 );
 3378               	 .loc 1 285 0
 3379 0478 6A83      	 std Y+2,r22
 3380 047a 7983      	 std Y+1,r23
 3381 047c 0E94 0000 	 call Sbyte
 3382               	.LVL136:
 286:../dumbcraft/dumbcraft.c **** 	Sbyte( o >> 16 );
 3383               	 .loc 1 286 0
 3384 0480 812F      	 mov r24,r17
 3385 0482 0E94 0000 	 call Sbyte
 3386               	.LVL137:
 287:../dumbcraft/dumbcraft.c **** 	Sbyte( o >>  8 );
 3387               	 .loc 1 287 0
 3388 0486 7981      	 ldd r23,Y+1
 3389 0488 872F      	 mov r24,r23
 3390 048a 0E94 0000 	 call Sbyte
 3391               	.LVL138:
 288:../dumbcraft/dumbcraft.c **** 	Sbyte( o );
 3392               	 .loc 1 288 0
 3393 048e 6A81      	 ldd r22,Y+2
 3394 0490 862F      	 mov r24,r22
 3395               	 
 289:../dumbcraft/dumbcraft.c **** }
 3396               	 .loc 1 289 0
 3397 0492 0F90      	 pop __tmp_reg__
 3398 0494 0F90      	 pop __tmp_reg__
 3399 0496 DF91      	 pop r29
 3400 0498 CF91      	 pop r28
 3401 049a 1F91      	 pop r17
 288:../dumbcraft/dumbcraft.c **** 	Sbyte( o );
 3402               	 .loc 1 288 0
 3403 049c 0C94 0000 	 jmp Sbyte
 3404               	.LVL139:
 3405               	 .cfi_endproc
 3406               	.LFE24:
 3408               	.global Sshort
 3410               	Sshort:
 3411               	.LFB25:
 290:../dumbcraft/dumbcraft.c **** 
 291:../dumbcraft/dumbcraft.c **** void Sshort( uint16_t o )
 292:../dumbcraft/dumbcraft.c **** {
 3412               	 .loc 1 292 0
 3413               	 .cfi_startproc
 3414               	.LVL140:
 3415 04a0 CF93      	 push r28
 3416               	.LCFI56:
 3417               	 .cfi_def_cfa_offset 3
 3418               	 .cfi_offset 28,-2
GAS LISTING  			page 143


 3419               	 
 3420               	 
 3421               	 
 3422               	.L__stack_usage =1
 3423 04a2 C82F      	 mov r28,r24
 293:../dumbcraft/dumbcraft.c **** 	Sbyte( o >> 8 );
 3424               	 .loc 1 293 0
 3425 04a4 892F      	 mov r24,r25
 3426               	.LVL141:
 3427 04a6 0E94 0000 	 call Sbyte
 3428               	.LVL142:
 294:../dumbcraft/dumbcraft.c **** 	Sbyte( o );
 3429               	 .loc 1 294 0
 3430 04aa 8C2F      	 mov r24,r28
 3431               	 
 295:../dumbcraft/dumbcraft.c **** }
 3432               	 .loc 1 295 0
 3433 04ac CF91      	 pop r28
 294:../dumbcraft/dumbcraft.c **** 	Sbyte( o );
 3434               	 .loc 1 294 0
 3435 04ae 0C94 0000 	 jmp Sbyte
 3436               	.LVL143:
 3437               	 .cfi_endproc
 3438               	.LFE25:
 3440               	.global Sstring
 3442               	Sstring:
 3443               	.LFB26:
 296:../dumbcraft/dumbcraft.c **** 
 297:../dumbcraft/dumbcraft.c **** //Send a string, -1 for length automatically sends a null-terminated string.
 298:../dumbcraft/dumbcraft.c **** void Sstring( const char * str, uint8_t len )
 299:../dumbcraft/dumbcraft.c **** {
 3444               	 .loc 1 299 0
 3445               	 .cfi_startproc
 3446               	.LVL144:
 3447 04b2 EF92      	 push r14
 3448               	.LCFI57:
 3449               	 .cfi_def_cfa_offset 3
 3450               	 .cfi_offset 14,-2
 3451 04b4 FF92      	 push r15
 3452               	.LCFI58:
 3453               	 .cfi_def_cfa_offset 4
 3454               	 .cfi_offset 15,-3
 3455 04b6 0F93      	 push r16
 3456               	.LCFI59:
 3457               	 .cfi_def_cfa_offset 5
 3458               	 .cfi_offset 16,-4
 3459 04b8 1F93      	 push r17
 3460               	.LCFI60:
 3461               	 .cfi_def_cfa_offset 6
 3462               	 .cfi_offset 17,-5
 3463 04ba CF93      	 push r28
 3464               	.LCFI61:
 3465               	 .cfi_def_cfa_offset 7
 3466               	 .cfi_offset 28,-6
 3467 04bc DF93      	 push r29
 3468               	.LCFI62:
 3469               	 .cfi_def_cfa_offset 8
GAS LISTING  			page 144


 3470               	 .cfi_offset 29,-7
 3471               	 
 3472               	 
 3473               	 
 3474               	.L__stack_usage =6
 3475 04be 8C01      	 movw r16,r24
 3476 04c0 F62E      	 mov r15,r22
 300:../dumbcraft/dumbcraft.c **** 	if( len == 255 ) len = strlen( (const char*)str );
 3477               	 .loc 1 300 0
 3478 04c2 8FEF      	 ldi r24,lo8(-1)
 3479               	.LVL145:
 3480 04c4 6813      	 cpse r22,r24
 3481 04c6 00C0      	 rjmp .L79
 3482               	 .loc 1 300 0 is_stmt 0 discriminator 1
 3483 04c8 F801      	 movw r30,r16
 3484               	 0:
 3485 04ca 0190      	 ld __tmp_reg__,Z+
 3486 04cc 0020      	 tst __tmp_reg__
 3487 04ce 01F4      	 brne 0b
 3488 04d0 3197      	 sbiw r30,1
 3489 04d2 FE2E      	 mov r15,r30
 3490 04d4 F01A      	 sub r15,r16
 3491               	.LVL146:
 3492               	.L79:
 301:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 302:../dumbcraft/dumbcraft.c **** 	Svarint( len );
 3493               	 .loc 1 302 0 is_stmt 1
 3494 04d6 8F2D      	 mov r24,r15
 3495 04d8 90E0      	 ldi r25,0
 3496 04da 0E94 0000 	 call Svarint
 3497               	.LVL147:
 3498 04de E02E      	 mov r14,r16
 303:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < len; i++ )
 3499               	 .loc 1 303 0
 3500 04e0 C02F      	 mov r28,r16
 3501 04e2 D12F      	 mov r29,r17
 3502               	.LVL148:
 3503               	.L80:
 3504 04e4 8C2F      	 mov r24,r28
 3505 04e6 8E19      	 sub r24,r14
 3506               	 .loc 1 303 0 is_stmt 0 discriminator 1
 3507 04e8 8F15      	 cp r24,r15
 3508 04ea 00F4      	 brsh .L82
 304:../dumbcraft/dumbcraft.c **** 	{	
 305:../dumbcraft/dumbcraft.c **** 		Sbyte( str[i] );
 3509               	 .loc 1 305 0 is_stmt 1 discriminator 2
 3510 04ec 8991      	 ld r24,Y+
 3511               	.LVL149:
 3512 04ee 0E94 0000 	 call Sbyte
 3513               	.LVL150:
 3514 04f2 00C0      	 rjmp .L80
 3515               	.L82:
 3516               	 
 306:../dumbcraft/dumbcraft.c **** 	}
 307:../dumbcraft/dumbcraft.c **** }
 3517               	 .loc 1 307 0
 3518 04f4 DF91      	 pop r29
GAS LISTING  			page 145


 3519 04f6 CF91      	 pop r28
 3520               	.LVL151:
 3521 04f8 1F91      	 pop r17
 3522 04fa 0F91      	 pop r16
 3523               	.LVL152:
 3524 04fc FF90      	 pop r15
 3525               	.LVL153:
 3526 04fe EF90      	 pop r14
 3527 0500 0895      	 ret
 3528               	 .cfi_endproc
 3529               	.LFE26:
 3531               	.global Sbuffer
 3533               	Sbuffer:
 3534               	.LFB27:
 308:../dumbcraft/dumbcraft.c **** 
 309:../dumbcraft/dumbcraft.c **** //Send a buffer (NOTE: this cannot be used with a string as the byte-sizes are two-wide)
 310:../dumbcraft/dumbcraft.c **** void Sbuffer( const uint8_t * buf, uint8_t len )
 311:../dumbcraft/dumbcraft.c **** {
 3535               	 .loc 1 311 0
 3536               	 .cfi_startproc
 3537               	.LVL154:
 3538 0502 EF92      	 push r14
 3539               	.LCFI63:
 3540               	 .cfi_def_cfa_offset 3
 3541               	 .cfi_offset 14,-2
 3542 0504 FF92      	 push r15
 3543               	.LCFI64:
 3544               	 .cfi_def_cfa_offset 4
 3545               	 .cfi_offset 15,-3
 3546 0506 1F93      	 push r17
 3547               	.LCFI65:
 3548               	 .cfi_def_cfa_offset 5
 3549               	 .cfi_offset 17,-4
 3550 0508 CF93      	 push r28
 3551               	.LCFI66:
 3552               	 .cfi_def_cfa_offset 6
 3553               	 .cfi_offset 28,-5
 3554 050a DF93      	 push r29
 3555               	.LCFI67:
 3556               	 .cfi_def_cfa_offset 7
 3557               	 .cfi_offset 29,-6
 3558 050c 1F92      	 push __zero_reg__
 3559               	.LCFI68:
 3560               	 .cfi_def_cfa_offset 8
 3561 050e CDB7      	 in r28,__SP_L__
 3562 0510 DEB7      	 in r29,__SP_H__
 3563               	.LCFI69:
 3564               	 .cfi_def_cfa_register 28
 3565               	 
 3566               	 
 3567               	 
 3568               	.L__stack_usage =6
 3569               	.LVL155:
 3570 0512 182F      	 mov r17,r24
 312:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 313:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < len; i++ )
 3571               	 .loc 1 313 0
GAS LISTING  			page 146


 3572 0514 7C01      	 movw r14,r24
 3573               	.LVL156:
 3574               	.L84:
 3575 0516 8E2D      	 mov r24,r14
 3576 0518 811B      	 sub r24,r17
 3577               	 .loc 1 313 0 is_stmt 0 discriminator 1
 3578 051a 8617      	 cp r24,r22
 3579 051c 00F4      	 brsh .L86
 314:../dumbcraft/dumbcraft.c **** 	{	
 315:../dumbcraft/dumbcraft.c **** 		Sbyte( buf[i] );
 3580               	 .loc 1 315 0 is_stmt 1 discriminator 2
 3581 051e F701      	 movw r30,r14
 3582 0520 8191      	 ld r24,Z+
 3583 0522 7F01      	 movw r14,r30
 3584               	.LVL157:
 3585 0524 6983      	 std Y+1,r22
 3586 0526 0E94 0000 	 call Sbyte
 3587               	.LVL158:
 3588 052a 6981      	 ldd r22,Y+1
 3589 052c 00C0      	 rjmp .L84
 3590               	.L86:
 3591               	 
 316:../dumbcraft/dumbcraft.c **** 	}
 317:../dumbcraft/dumbcraft.c **** }
 3592               	 .loc 1 317 0
 3593 052e 0F90      	 pop __tmp_reg__
 3594 0530 DF91      	 pop r29
 3595 0532 CF91      	 pop r28
 3596 0534 1F91      	 pop r17
 3597 0536 FF90      	 pop r15
 3598 0538 EF90      	 pop r14
 3599               	.LVL159:
 3600 053a 0895      	 ret
 3601               	 .cfi_endproc
 3602               	.LFE27:
 3604               	.global SbufferWide
 3606               	SbufferWide:
 3607               	.LFB28:
 318:../dumbcraft/dumbcraft.c **** 
 319:../dumbcraft/dumbcraft.c **** void SbufferWide( const uint8_t * buf, uint8_t len )
 320:../dumbcraft/dumbcraft.c **** {
 3608               	 .loc 1 320 0
 3609               	 .cfi_startproc
 3610               	.LVL160:
 3611 053c EF92      	 push r14
 3612               	.LCFI70:
 3613               	 .cfi_def_cfa_offset 3
 3614               	 .cfi_offset 14,-2
 3615 053e FF92      	 push r15
 3616               	.LCFI71:
 3617               	 .cfi_def_cfa_offset 4
 3618               	 .cfi_offset 15,-3
 3619 0540 1F93      	 push r17
 3620               	.LCFI72:
 3621               	 .cfi_def_cfa_offset 5
 3622               	 .cfi_offset 17,-4
 3623 0542 CF93      	 push r28
GAS LISTING  			page 147


 3624               	.LCFI73:
 3625               	 .cfi_def_cfa_offset 6
 3626               	 .cfi_offset 28,-5
 3627 0544 DF93      	 push r29
 3628               	.LCFI74:
 3629               	 .cfi_def_cfa_offset 7
 3630               	 .cfi_offset 29,-6
 3631 0546 1F92      	 push __zero_reg__
 3632               	.LCFI75:
 3633               	 .cfi_def_cfa_offset 8
 3634 0548 CDB7      	 in r28,__SP_L__
 3635 054a DEB7      	 in r29,__SP_H__
 3636               	.LCFI76:
 3637               	 .cfi_def_cfa_register 28
 3638               	 
 3639               	 
 3640               	 
 3641               	.L__stack_usage =6
 3642               	.LVL161:
 3643 054c 182F      	 mov r17,r24
 321:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 322:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < len; i++ )
 3644               	 .loc 1 322 0
 3645 054e 7C01      	 movw r14,r24
 3646               	.LVL162:
 3647               	.L88:
 3648 0550 8E2D      	 mov r24,r14
 3649 0552 811B      	 sub r24,r17
 3650               	 .loc 1 322 0 is_stmt 0 discriminator 1
 3651 0554 8617      	 cp r24,r22
 3652 0556 00F4      	 brsh .L90
 323:../dumbcraft/dumbcraft.c **** 	{	
 324:../dumbcraft/dumbcraft.c **** 		Sshort( buf[i] );
 3653               	 .loc 1 324 0 is_stmt 1 discriminator 2
 3654 0558 F701      	 movw r30,r14
 3655 055a 8191      	 ld r24,Z+
 3656 055c 7F01      	 movw r14,r30
 3657               	.LVL163:
 3658 055e 90E0      	 ldi r25,0
 3659 0560 6983      	 std Y+1,r22
 3660 0562 0E94 0000 	 call Sshort
 3661               	.LVL164:
 3662 0566 6981      	 ldd r22,Y+1
 3663 0568 00C0      	 rjmp .L88
 3664               	.L90:
 3665               	 
 325:../dumbcraft/dumbcraft.c **** 	}
 326:../dumbcraft/dumbcraft.c **** }
 3666               	 .loc 1 326 0
 3667 056a 0F90      	 pop __tmp_reg__
 3668 056c DF91      	 pop r29
 3669 056e CF91      	 pop r28
 3670 0570 1F91      	 pop r17
 3671 0572 FF90      	 pop r15
 3672 0574 EF90      	 pop r14
 3673               	.LVL165:
 3674 0576 0895      	 ret
GAS LISTING  			page 148


 3675               	 .cfi_endproc
 3676               	.LFE28:
 3678               	.global SbufferPGM
 3680               	SbufferPGM:
 3681               	.LFB29:
 327:../dumbcraft/dumbcraft.c **** 
 328:../dumbcraft/dumbcraft.c **** //Send a buffer from program memory.
 329:../dumbcraft/dumbcraft.c **** void SbufferPGM( const uint8_t * buf, uint8_t len )
 330:../dumbcraft/dumbcraft.c **** {
 3682               	 .loc 1 330 0
 3683               	 .cfi_startproc
 3684               	.LVL166:
 3685 0578 EF92      	 push r14
 3686               	.LCFI77:
 3687               	 .cfi_def_cfa_offset 3
 3688               	 .cfi_offset 14,-2
 3689 057a FF92      	 push r15
 3690               	.LCFI78:
 3691               	 .cfi_def_cfa_offset 4
 3692               	 .cfi_offset 15,-3
 3693 057c 1F93      	 push r17
 3694               	.LCFI79:
 3695               	 .cfi_def_cfa_offset 5
 3696               	 .cfi_offset 17,-4
 3697 057e CF93      	 push r28
 3698               	.LCFI80:
 3699               	 .cfi_def_cfa_offset 6
 3700               	 .cfi_offset 28,-5
 3701 0580 DF93      	 push r29
 3702               	.LCFI81:
 3703               	 .cfi_def_cfa_offset 7
 3704               	 .cfi_offset 29,-6
 3705 0582 1F92      	 push __zero_reg__
 3706               	.LCFI82:
 3707               	 .cfi_def_cfa_offset 8
 3708 0584 CDB7      	 in r28,__SP_L__
 3709 0586 DEB7      	 in r29,__SP_H__
 3710               	.LCFI83:
 3711               	 .cfi_def_cfa_register 28
 3712               	 
 3713               	 
 3714               	 
 3715               	.L__stack_usage =6
 3716               	.LVL167:
 3717 0588 182F      	 mov r17,r24
 331:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 332:../dumbcraft/dumbcraft.c **** 	for( i = 0; i < len; i++ )
 3718               	 .loc 1 332 0
 3719 058a 7C01      	 movw r14,r24
 3720               	.LVL168:
 3721               	.L92:
 3722 058c 8E2D      	 mov r24,r14
 3723 058e 811B      	 sub r24,r17
 3724               	 .loc 1 332 0 is_stmt 0 discriminator 1
 3725 0590 8617      	 cp r24,r22
 3726 0592 00F4      	 brsh .L94
 3727               	.LVL169:
GAS LISTING  			page 149


 3728               	.LBB50:
 333:../dumbcraft/dumbcraft.c **** 	{	
 334:../dumbcraft/dumbcraft.c **** 		Sbyte( pgm_read_byte( &buf[i] ) );
 3729               	 .loc 1 334 0 is_stmt 1 discriminator 2
 3730 0594 F701      	 movw r30,r14
 3731               	 
 3732               	 
 3733 0596 8491      	 lpm r24,Z
 3734               	 
 3735               	 
 3736               	.LVL170:
 3737               	 
 3738               	.LBE50:
 3739 0598 6983      	 std Y+1,r22
 3740 059a 0E94 0000 	 call Sbyte
 3741               	.LVL171:
 3742 059e FFEF      	 ldi r31,-1
 3743 05a0 EF1A      	 sub r14,r31
 3744 05a2 FF0A      	 sbc r15,r31
 3745               	.LVL172:
 3746 05a4 6981      	 ldd r22,Y+1
 3747 05a6 00C0      	 rjmp .L92
 3748               	.LVL173:
 3749               	.L94:
 3750               	 
 335:../dumbcraft/dumbcraft.c **** 	}
 336:../dumbcraft/dumbcraft.c **** }
 3751               	 .loc 1 336 0
 3752 05a8 0F90      	 pop __tmp_reg__
 3753 05aa DF91      	 pop r29
 3754 05ac CF91      	 pop r28
 3755 05ae 1F91      	 pop r17
 3756 05b0 FF90      	 pop r15
 3757 05b2 EF90      	 pop r14
 3758               	.LVL174:
 3759 05b4 0895      	 ret
 3760               	 .cfi_endproc
 3761               	.LFE29:
 3763               	.global Sdouble
 3765               	Sdouble:
 3766               	.LFB30:
 337:../dumbcraft/dumbcraft.c **** 
 338:../dumbcraft/dumbcraft.c **** //Same IEEE754 utilities as reading, but, for sending
 339:../dumbcraft/dumbcraft.c **** void Sdouble( int16_t i )
 340:../dumbcraft/dumbcraft.c **** {
 3767               	 .loc 1 340 0
 3768               	 .cfi_startproc
 3769               	.LVL175:
 3770 05b6 CF93      	 push r28
 3771               	.LCFI84:
 3772               	 .cfi_def_cfa_offset 3
 3773               	 .cfi_offset 28,-2
 3774 05b8 DF93      	 push r29
 3775               	.LCFI85:
 3776               	 .cfi_def_cfa_offset 4
 3777               	 .cfi_offset 29,-3
 3778 05ba CDB7      	 in r28,__SP_L__
GAS LISTING  			page 150


 3779 05bc DEB7      	 in r29,__SP_H__
 3780               	.LCFI86:
 3781               	 .cfi_def_cfa_register 28
 3782 05be 2897      	 sbiw r28,8
 3783               	.LCFI87:
 3784               	 .cfi_def_cfa_offset 12
 3785 05c0 0FB6      	 in __tmp_reg__,__SREG__
 3786 05c2 F894      	 cli
 3787 05c4 DEBF      	 out __SP_H__,r29
 3788 05c6 0FBE      	 out __SREG__,__tmp_reg__
 3789 05c8 CDBF      	 out __SP_L__,r28
 3790               	 
 3791               	 
 3792               	 
 3793               	.L__stack_usage =10
 3794               	.LVL176:
 3795               	.LBB53:
 3796               	.LBB54:
  62:../libs/754lib.h **** 	if( in < 0 )
 3797               	 .loc 2 62 0
 3798 05ca 97FF      	 sbrs r25,7
 3799 05cc 00C0      	 rjmp .L96
  64:../libs/754lib.h **** 		u[ENDI8(0)] = 0x80;
 3800               	 .loc 2 64 0
 3801 05ce 20E8      	 ldi r18,lo8(-128)
 3802 05d0 2983      	 std Y+1,r18
 3803               	.LVL177:
  65:../libs/754lib.h **** 		in = -in;
 3804               	 .loc 2 65 0
 3805 05d2 9195      	 neg r25
 3806 05d4 8195      	 neg r24
 3807 05d6 9109      	 sbc r25,__zero_reg__
 3808               	.LVL178:
 3809 05d8 00C0      	 rjmp .L97
 3810               	.LVL179:
 3811               	.L96:
  69:../libs/754lib.h **** 		u[ENDI8(0)] = 0x00;
 3812               	 .loc 2 69 0
 3813 05da 1982      	 std Y+1,__zero_reg__
 3814               	.LVL180:
 3815               	.L97:
  57:../libs/754lib.h **** 	uint16_t exp = 0x80e - shift;
 3816               	 .loc 2 57 0
 3817 05dc 29E0      	 ldi r18,lo8(9)
 3818 05de 38E0      	 ldi r19,lo8(8)
 3819               	.LVL181:
 3820               	.L99:
  75:../libs/754lib.h **** 		if( flipin & 0x8000 ) break;
 3821               	 .loc 2 75 0
 3822 05e0 97FD      	 sbrc r25,7
 3823 05e2 00C0      	 rjmp .L98
  76:../libs/754lib.h **** 		exp--;
 3824               	 .loc 2 76 0
 3825 05e4 2150      	 subi r18,1
 3826 05e6 3109      	 sbc r19,__zero_reg__
 3827               	.LVL182:
  77:../libs/754lib.h **** 		flipin<<=1;
GAS LISTING  			page 151


 3828               	 .loc 2 77 0
 3829 05e8 880F      	 lsl r24
 3830 05ea 991F      	 rol r25
 3831               	.LVL183:
  73:../libs/754lib.h **** 	for( i = 0; i < 16; i++ )
 3832               	 .loc 2 73 0
 3833 05ec 293F      	 cpi r18,-7
 3834 05ee 47E0      	 ldi r20,7
 3835 05f0 3407      	 cpc r19,r20
 3836 05f2 01F4      	 brne .L99
  79:../libs/754lib.h **** 	if( i == 16 ) exp = 0;
 3837               	 .loc 2 79 0
 3838 05f4 20E0      	 ldi r18,0
 3839 05f6 30E0      	 ldi r19,0
 3840               	.LVL184:
 3841               	.L98:
  80:../libs/754lib.h **** 	flipin<<=1;
 3842               	 .loc 2 80 0
 3843 05f8 880F      	 lsl r24
 3844 05fa 991F      	 rol r25
 3845               	.LVL185:
  83:../libs/754lib.h **** 	u[ENDI8(0)] |= (exp>>5);
 3846               	 .loc 2 83 0
 3847 05fc A901      	 movw r20,r18
 3848 05fe 65E0      	 ldi r22,5
 3849               	 1:
 3850 0600 5695      	 lsr r21
 3851 0602 4795      	 ror r20
 3852 0604 6A95      	 dec r22
 3853 0606 01F4      	 brne 1b
 3854 0608 3981      	 ldd r19,Y+1
 3855 060a 342B      	 or r19,r20
 3856 060c 3983      	 std Y+1,r19
  84:../libs/754lib.h **** 	u[ENDI8(1)] = (exp<<4) | (flipin>>12);
 3857               	 .loc 2 84 0
 3858 060e 392F      	 mov r19,r25
 3859 0610 3295      	 swap r19
 3860 0612 3F70      	 andi r19,lo8(15)
 3861 0614 2295      	 swap r18
 3862               	.LVL186:
 3863 0616 207F      	 andi r18,lo8(-16)
 3864 0618 232B      	 or r18,r19
 3865 061a 2A83      	 std Y+2,r18
  85:../libs/754lib.h **** 	u[ENDI8(2)] = (flipin>>4);
 3866               	 .loc 2 85 0
 3867 061c 9C01      	 movw r18,r24
 3868 061e 74E0      	 ldi r23,4
 3869               	 1:
 3870 0620 3695      	 lsr r19
 3871 0622 2795      	 ror r18
 3872 0624 7A95      	 dec r23
 3873 0626 01F4      	 brne 1b
 3874 0628 2B83      	 std Y+3,r18
  86:../libs/754lib.h **** 	u[ENDI8(3)] = (flipin<<4);
 3875               	 .loc 2 86 0
 3876 062a 8295      	 swap r24
 3877               	.LVL187:
GAS LISTING  			page 152


 3878 062c 807F      	 andi r24,lo8(-16)
 3879 062e 8C83      	 std Y+4,r24
  87:../libs/754lib.h **** 	u[ENDI8(4)] = 0;
 3880               	 .loc 2 87 0
 3881 0630 1D82      	 std Y+5,__zero_reg__
  88:../libs/754lib.h **** 	u[ENDI8(5)] = 0;
 3882               	 .loc 2 88 0
 3883 0632 1E82      	 std Y+6,__zero_reg__
  89:../libs/754lib.h **** 	u[ENDI8(6)] = 0;
 3884               	 .loc 2 89 0
 3885 0634 1F82      	 std Y+7,__zero_reg__
  90:../libs/754lib.h **** 	u[ENDI8(7)] = 0;
 3886               	 .loc 2 90 0
 3887 0636 1886      	 std Y+8,__zero_reg__
 3888               	.LBE54:
 3889               	.LBE53:
 341:../dumbcraft/dumbcraft.c **** 	uint8_t data[8];
 342:../dumbcraft/dumbcraft.c **** 	WToDouble( i, FIXEDPOINT, (double*)data );
 343:../dumbcraft/dumbcraft.c **** 	Sbuffer( data, 8 );
 3890               	 .loc 1 343 0
 3891 0638 68E0      	 ldi r22,lo8(8)
 3892 063a CE01      	 movw r24,r28
 3893 063c 0196      	 adiw r24,1
 3894 063e 0E94 0000 	 call Sbuffer
 3895               	.LVL188:
 3896               	 
 344:../dumbcraft/dumbcraft.c **** }
 3897               	 .loc 1 344 0
 3898 0642 2896      	 adiw r28,8
 3899 0644 0FB6      	 in __tmp_reg__,__SREG__
 3900 0646 F894      	 cli
 3901 0648 DEBF      	 out __SP_H__,r29
 3902 064a 0FBE      	 out __SREG__,__tmp_reg__
 3903 064c CDBF      	 out __SP_L__,r28
 3904 064e DF91      	 pop r29
 3905 0650 CF91      	 pop r28
 3906 0652 0895      	 ret
 3907               	 .cfi_endproc
 3908               	.LFE30:
 3910               	.global Sfloat
 3912               	Sfloat:
 3913               	.LFB31:
 345:../dumbcraft/dumbcraft.c **** 
 346:../dumbcraft/dumbcraft.c **** void Sfloat( int16_t i )
 347:../dumbcraft/dumbcraft.c **** {
 3914               	 .loc 1 347 0
 3915               	 .cfi_startproc
 3916               	.LVL189:
 3917 0654 CF93      	 push r28
 3918               	.LCFI88:
 3919               	 .cfi_def_cfa_offset 3
 3920               	 .cfi_offset 28,-2
 3921 0656 DF93      	 push r29
 3922               	.LCFI89:
 3923               	 .cfi_def_cfa_offset 4
 3924               	 .cfi_offset 29,-3
 3925 0658 00D0      	 rcall .
GAS LISTING  			page 153


 3926 065a 00D0      	 rcall .
 3927               	.LCFI90:
 3928               	 .cfi_def_cfa_offset 8
 3929 065c CDB7      	 in r28,__SP_L__
 3930 065e DEB7      	 in r29,__SP_H__
 3931               	.LCFI91:
 3932               	 .cfi_def_cfa_register 28
 3933               	 
 3934               	 
 3935               	 
 3936               	.L__stack_usage =6
 3937               	.LVL190:
 3938               	.LBB57:
 3939               	.LBB58:
 119:../libs/754lib.h **** 	return ret;
 120:../libs/754lib.h **** }
 121:../libs/754lib.h **** 
 122:../libs/754lib.h **** 
 123:../libs/754lib.h **** 
 124:../libs/754lib.h **** //As of yet is unwritten.
 125:../libs/754lib.h **** static void WToFloat( int16_t in, int8_t shift, float * d )
 126:../libs/754lib.h **** {
 127:../libs/754lib.h **** 	uint8_t i;
 128:../libs/754lib.h **** 	uint16_t exp = 0x8e - shift;
 129:../libs/754lib.h **** 	uint16_t flipin;
 130:../libs/754lib.h **** 
 131:../libs/754lib.h **** 	uint8_t * u = (uint8_t*)d;
 132:../libs/754lib.h **** 
 133:../libs/754lib.h **** 
 134:../libs/754lib.h **** 	if( in < 0 )
 3940               	 .loc 2 134 0
 3941 0660 97FF      	 sbrs r25,7
 3942 0662 00C0      	 rjmp .L102
 135:../libs/754lib.h **** 	{
 136:../libs/754lib.h **** 		u[ENDI4(0)] = 0x80;
 3943               	 .loc 2 136 0
 3944 0664 20E8      	 ldi r18,lo8(-128)
 3945 0666 2983      	 std Y+1,r18
 3946               	.LVL191:
 137:../libs/754lib.h **** 		in = -in;
 3947               	 .loc 2 137 0
 3948 0668 9195      	 neg r25
 3949 066a 8195      	 neg r24
 3950 066c 9109      	 sbc r25,__zero_reg__
 3951               	.LVL192:
 3952 066e 00C0      	 rjmp .L103
 3953               	.LVL193:
 3954               	.L102:
 138:../libs/754lib.h **** 	}
 139:../libs/754lib.h **** 	else
 140:../libs/754lib.h **** 	{
 141:../libs/754lib.h **** 		u[ENDI4(0)] = 0x00;
 3955               	 .loc 2 141 0
 3956 0670 1982      	 std Y+1,__zero_reg__
 3957               	.LVL194:
 3958               	.L103:
 128:../libs/754lib.h **** 	uint16_t exp = 0x8e - shift;
GAS LISTING  			page 154


 3959               	 .loc 2 128 0
 3960 0672 29E8      	 ldi r18,lo8(-119)
 3961 0674 30E0      	 ldi r19,0
 3962               	.LVL195:
 3963               	.L105:
 142:../libs/754lib.h **** 	}
 143:../libs/754lib.h **** 
 144:../libs/754lib.h **** 	flipin = in;
 145:../libs/754lib.h **** 	for( i = 0; i < 16; i++ )
 146:../libs/754lib.h **** 	{
 147:../libs/754lib.h **** 		if( flipin & 0x8000 ) break;
 3964               	 .loc 2 147 0
 3965 0676 97FD      	 sbrc r25,7
 3966 0678 00C0      	 rjmp .L104
 148:../libs/754lib.h **** 		exp--;
 3967               	 .loc 2 148 0
 3968 067a 2150      	 subi r18,1
 3969 067c 3109      	 sbc r19,__zero_reg__
 3970               	.LVL196:
 149:../libs/754lib.h **** 		flipin<<=1;
 3971               	 .loc 2 149 0
 3972 067e 880F      	 lsl r24
 3973 0680 991F      	 rol r25
 3974               	.LVL197:
 145:../libs/754lib.h **** 	for( i = 0; i < 16; i++ )
 3975               	 .loc 2 145 0
 3976 0682 2937      	 cpi r18,121
 3977 0684 3105      	 cpc r19,__zero_reg__
 3978 0686 01F4      	 brne .L105
 150:../libs/754lib.h **** 	}
 151:../libs/754lib.h **** 	if( i == 16 ) exp = 0;
 3979               	 .loc 2 151 0
 3980 0688 20E0      	 ldi r18,0
 3981 068a 30E0      	 ldi r19,0
 3982               	.LVL198:
 3983               	.L104:
 152:../libs/754lib.h **** 	flipin<<=1;
 3984               	 .loc 2 152 0
 3985 068c 880F      	 lsl r24
 3986 068e 991F      	 rol r25
 3987               	.LVL199:
 153:../libs/754lib.h **** 
 154:../libs/754lib.h **** 	//in is now normalized.
 155:../libs/754lib.h **** 	u[ENDI4(0)] |= (exp>>1);
 3988               	 .loc 2 155 0
 3989 0690 A901      	 movw r20,r18
 3990 0692 5695      	 lsr r21
 3991 0694 4795      	 ror r20
 3992 0696 3981      	 ldd r19,Y+1
 3993 0698 342B      	 or r19,r20
 3994 069a 3983      	 std Y+1,r19
 156:../libs/754lib.h **** 	u[ENDI4(1)] = (exp<<7) | (flipin>>9);
 3995               	 .loc 2 156 0
 3996 069c 392F      	 mov r19,r25
 3997 069e 3695      	 lsr r19
 3998 06a0 2795      	 ror r18
 3999 06a2 2227      	 clr r18
GAS LISTING  			page 155


 4000 06a4 2795      	 ror r18
 4001               	.LVL200:
 4002 06a6 232B      	 or r18,r19
 4003 06a8 2A83      	 std Y+2,r18
 157:../libs/754lib.h **** 	u[ENDI4(2)] = (flipin>>1);
 4004               	 .loc 2 157 0
 4005 06aa 9695      	 lsr r25
 4006 06ac 8795      	 ror r24
 4007               	.LVL201:
 4008 06ae 8B83      	 std Y+3,r24
 158:../libs/754lib.h **** 	u[ENDI4(3)] = (flipin<<7);
 4009               	 .loc 2 158 0
 4010 06b0 1C82      	 std Y+4,__zero_reg__
 4011               	.LBE58:
 4012               	.LBE57:
 348:../dumbcraft/dumbcraft.c **** 	uint8_t data[4];
 349:../dumbcraft/dumbcraft.c **** 	WToFloat( i, FIXEDPOINT, (float*)data );
 350:../dumbcraft/dumbcraft.c **** 	Sbuffer( data, 4 );
 4013               	 .loc 1 350 0
 4014 06b2 64E0      	 ldi r22,lo8(4)
 4015 06b4 CE01      	 movw r24,r28
 4016 06b6 0196      	 adiw r24,1
 4017 06b8 0E94 0000 	 call Sbuffer
 4018               	.LVL202:
 4019               	 
 351:../dumbcraft/dumbcraft.c **** }
 4020               	 .loc 1 351 0
 4021 06bc 0F90      	 pop __tmp_reg__
 4022 06be 0F90      	 pop __tmp_reg__
 4023 06c0 0F90      	 pop __tmp_reg__
 4024 06c2 0F90      	 pop __tmp_reg__
 4025 06c4 DF91      	 pop r29
 4026 06c6 CF91      	 pop r28
 4027 06c8 0895      	 ret
 4028               	 .cfi_endproc
 4029               	.LFE31:
 4031               	.global SSpawnPlayer
 4033               	SSpawnPlayer:
 4034               	.LFB32:
 352:../dumbcraft/dumbcraft.c **** 
 353:../dumbcraft/dumbcraft.c **** //////////////////////////////////////////GAME UTILITIES///////////////////////
 354:../dumbcraft/dumbcraft.c **** 
 355:../dumbcraft/dumbcraft.c **** //Spawn player (used to notify other clients about the spawnage)
 356:../dumbcraft/dumbcraft.c **** void SSpawnPlayer( uint8_t pid )
 357:../dumbcraft/dumbcraft.c **** {
 4035               	 .loc 1 357 0
 4036               	 .cfi_startproc
 4037               	.LVL203:
 4038 06ca EF92      	 push r14
 4039               	.LCFI92:
 4040               	 .cfi_def_cfa_offset 3
 4041               	 .cfi_offset 14,-2
 4042 06cc FF92      	 push r15
 4043               	.LCFI93:
 4044               	 .cfi_def_cfa_offset 4
 4045               	 .cfi_offset 15,-3
 4046 06ce 0F93      	 push r16
GAS LISTING  			page 156


 4047               	.LCFI94:
 4048               	 .cfi_def_cfa_offset 5
 4049               	 .cfi_offset 16,-4
 4050 06d0 1F93      	 push r17
 4051               	.LCFI95:
 4052               	 .cfi_def_cfa_offset 6
 4053               	 .cfi_offset 17,-5
 4054 06d2 CF93      	 push r28
 4055               	.LCFI96:
 4056               	 .cfi_def_cfa_offset 7
 4057               	 .cfi_offset 28,-6
 4058 06d4 DF93      	 push r29
 4059               	.LCFI97:
 4060               	 .cfi_def_cfa_offset 8
 4061               	 .cfi_offset 29,-7
 4062 06d6 00D0      	 rcall .
 4063 06d8 00D0      	 rcall .
 4064 06da 1F92      	 push __zero_reg__
 4065               	.LCFI98:
 4066               	 .cfi_def_cfa_offset 13
 4067 06dc CDB7      	 in r28,__SP_L__
 4068 06de DEB7      	 in r29,__SP_H__
 4069               	.LCFI99:
 4070               	 .cfi_def_cfa_register 28
 4071               	 
 4072               	 
 4073               	 
 4074               	.L__stack_usage =11
 4075 06e0 282F      	 mov r18,r24
 358:../dumbcraft/dumbcraft.c **** //	printf( "!!! %d\n", pid ); //XXX TODO This does not seem to be called correctly.
 359:../dumbcraft/dumbcraft.c **** 	struct Player * p = &Players[pid];
 4076               	 .loc 1 359 0
 4077 06e2 E82E      	 mov r14,r24
 4078 06e4 F12C      	 mov r15,__zero_reg__
 4079 06e6 C701      	 movw r24,r14
 4080               	.LVL204:
 4081 06e8 66E3      	 ldi r22,lo8(54)
 4082 06ea 70E0      	 ldi r23,0
 4083 06ec 0E94 0000 	 call __mulhi3
 4084 06f0 8C01      	 movw r16,r24
 4085 06f2 0050      	 subi r16,lo8(-(Players))
 4086 06f4 1040      	 sbci r17,hi8(-(Players))
 4087               	.LVL205:
 360:../dumbcraft/dumbcraft.c **** 	char stmp[5];
 361:../dumbcraft/dumbcraft.c **** 	Uint8To16Str( stmp, pid + PLAYER_EID_BASE );
 4088               	 .loc 1 361 0
 4089 06f6 60E2      	 ldi r22,lo8(32)
 4090 06f8 620F      	 add r22,r18
 4091 06fa CE01      	 movw r24,r28
 4092 06fc 0196      	 adiw r24,1
 4093 06fe 0E94 0000 	 call Uint8To16Str
 4094               	.LVL206:
 4095               	.LBB59:
 4096               	.LBB60:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4097               	 .loc 1 120 0
 4098 0702 1092 0000 	 sts sendsize,__zero_reg__
GAS LISTING  			page 157


 4099               	.LBE60:
 4100               	.LBE59:
 362:../dumbcraft/dumbcraft.c **** 
 363:../dumbcraft/dumbcraft.c **** 	StartSend();
 364:../dumbcraft/dumbcraft.c **** 	Sbyte( 0x0c );  //new
 4101               	 .loc 1 364 0
 4102 0706 8CE0      	 ldi r24,lo8(12)
 4103 0708 0E94 0000 	 call Sbyte
 4104               	.LVL207:
 365:../dumbcraft/dumbcraft.c **** 	Svarint( pid + PLAYER_EID_BASE );
 4105               	 .loc 1 365 0
 4106 070c C701      	 movw r24,r14
 4107 070e 8096      	 adiw r24,32
 4108 0710 0E94 0000 	 call Svarint
 4109               	.LVL208:
 366:../dumbcraft/dumbcraft.c **** 	Sstring( stmp, -1 );
 4110               	 .loc 1 366 0
 4111 0714 6FEF      	 ldi r22,lo8(-1)
 4112 0716 CE01      	 movw r24,r28
 4113 0718 0196      	 adiw r24,1
 4114 071a 0E94 0000 	 call Sstring
 4115               	.LVL209:
 367:../dumbcraft/dumbcraft.c **** 	Sstring( (const char*)p->playername, -1 );
 4116               	 .loc 1 367 0
 4117 071e 6FEF      	 ldi r22,lo8(-1)
 4118 0720 C801      	 movw r24,r16
 4119 0722 8596      	 adiw r24,37
 4120 0724 0E94 0000 	 call Sstring
 4121               	.LVL210:
 368:../dumbcraft/dumbcraft.c **** 
 369:../dumbcraft/dumbcraft.c **** 	Sint( p->x );
 4122               	 .loc 1 369 0
 4123 0728 F801      	 movw r30,r16
 4124 072a 6281      	 ldd r22,Z+2
 4125 072c 7381      	 ldd r23,Z+3
 4126 072e 8827      	 clr r24
 4127 0730 77FD      	 sbrc r23,7
 4128 0732 8095      	 com r24
 4129 0734 982F      	 mov r25,r24
 4130 0736 0E94 0000 	 call Sint
 4131               	.LVL211:
 370:../dumbcraft/dumbcraft.c **** 	Sint( p->y );
 4132               	 .loc 1 370 0
 4133 073a F801      	 movw r30,r16
 4134 073c 6481      	 ldd r22,Z+4
 4135 073e 7581      	 ldd r23,Z+5
 4136 0740 8827      	 clr r24
 4137 0742 77FD      	 sbrc r23,7
 4138 0744 8095      	 com r24
 4139 0746 982F      	 mov r25,r24
 4140 0748 0E94 0000 	 call Sint
 4141               	.LVL212:
 371:../dumbcraft/dumbcraft.c **** 	Sint( p->z );
 4142               	 .loc 1 371 0
 4143 074c F801      	 movw r30,r16
 4144 074e 6085      	 ldd r22,Z+8
 4145 0750 7185      	 ldd r23,Z+9
GAS LISTING  			page 158


 4146 0752 8827      	 clr r24
 4147 0754 77FD      	 sbrc r23,7
 4148 0756 8095      	 com r24
 4149 0758 982F      	 mov r25,r24
 4150 075a 0E94 0000 	 call Sint
 4151               	.LVL213:
 372:../dumbcraft/dumbcraft.c **** 	Sbyte( p->nyaw );
 4152               	 .loc 1 372 0
 4153 075e F801      	 movw r30,r16
 4154 0760 828D      	 ldd r24,Z+26
 4155 0762 0E94 0000 	 call Sbyte
 4156               	.LVL214:
 373:../dumbcraft/dumbcraft.c **** 	Sbyte( p->npitch );
 4157               	 .loc 1 373 0
 4158 0766 F801      	 movw r30,r16
 4159 0768 838D      	 ldd r24,Z+27
 4160 076a 0E94 0000 	 call Sbyte
 4161               	.LVL215:
 374:../dumbcraft/dumbcraft.c **** 	Sshort( 0 ); //Current item
 4162               	 .loc 1 374 0
 4163 076e 80E0      	 ldi r24,0
 4164 0770 90E0      	 ldi r25,0
 4165 0772 0E94 0000 	 call Sshort
 4166               	.LVL216:
 375:../dumbcraft/dumbcraft.c **** 	SbufferPGM( default_spawn_metadata, sizeof( default_spawn_metadata ) );
 4167               	 .loc 1 375 0
 4168 0776 63E0      	 ldi r22,lo8(3)
 4169 0778 80E0      	 ldi r24,lo8(default_spawn_metadata)
 4170 077a 90E0      	 ldi r25,hi8(default_spawn_metadata)
 4171 077c 0E94 0000 	 call SbufferPGM
 4172               	.LVL217:
 376:../dumbcraft/dumbcraft.c **** 	DoneSend();
 4173               	 .loc 1 376 0
 4174 0780 0E94 0000 	 call DoneSend
 4175               	.LVL218:
 4176               	 
 377:../dumbcraft/dumbcraft.c **** }
 4177               	 .loc 1 377 0
 4178 0784 0F90      	 pop __tmp_reg__
 4179 0786 0F90      	 pop __tmp_reg__
 4180 0788 0F90      	 pop __tmp_reg__
 4181 078a 0F90      	 pop __tmp_reg__
 4182 078c 0F90      	 pop __tmp_reg__
 4183 078e DF91      	 pop r29
 4184 0790 CF91      	 pop r28
 4185 0792 1F91      	 pop r17
 4186 0794 0F91      	 pop r16
 4187               	.LVL219:
 4188 0796 FF90      	 pop r15
 4189 0798 EF90      	 pop r14
 4190               	.LVL220:
 4191 079a 0895      	 ret
 4192               	 .cfi_endproc
 4193               	.LFE32:
 4195               	 .section .rodata.str1.1,"aMS",@progbits,1
 4196               	.LC0:
 4197 0000 6765 6E65 	 .string "generic.movementSpeed"
GAS LISTING  			page 159


 4197      7269 632E 
 4197      6D6F 7665 
 4197      6D65 6E74 
 4197      5370 6565 
 4198               	 .text
 4199               	.global UpdatePlayerSpeed
 4201               	UpdatePlayerSpeed:
 4202               	.LFB33:
 378:../dumbcraft/dumbcraft.c **** 
 379:../dumbcraft/dumbcraft.c **** void UpdatePlayerSpeed( uint8_t speed )
 380:../dumbcraft/dumbcraft.c **** {
 4203               	 .loc 1 380 0
 4204               	 .cfi_startproc
 4205               	.LVL221:
 4206 079c CF93      	 push r28
 4207               	.LCFI100:
 4208               	 .cfi_def_cfa_offset 3
 4209               	 .cfi_offset 28,-2
 4210               	 
 4211               	 
 4212               	 
 4213               	.L__stack_usage =1
 4214 079e C82F      	 mov r28,r24
 4215               	.LBB67:
 4216               	.LBB68:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4217               	 .loc 1 120 0
 4218 07a0 1092 0000 	 sts sendsize,__zero_reg__
 4219               	.LBE68:
 4220               	.LBE67:
 381:../dumbcraft/dumbcraft.c **** 	StartSend();
 382:../dumbcraft/dumbcraft.c **** 	Sbyte(0x20); //NEW
 4221               	 .loc 1 382 0
 4222 07a4 80E2      	 ldi r24,lo8(32)
 4223               	.LVL222:
 4224 07a6 0E94 0000 	 call Sbyte
 4225               	.LVL223:
 383:../dumbcraft/dumbcraft.c **** 	Svarint( playerid );
 4226               	 .loc 1 383 0
 4227 07aa 8091 0000 	 lds r24,playerid
 4228 07ae 90E0      	 ldi r25,0
 4229 07b0 0E94 0000 	 call Svarint
 4230               	.LVL224:
 384:../dumbcraft/dumbcraft.c **** 	Sint( 1 );
 4231               	 .loc 1 384 0
 4232 07b4 61E0      	 ldi r22,lo8(1)
 4233 07b6 70E0      	 ldi r23,0
 4234 07b8 80E0      	 ldi r24,0
 4235 07ba 90E0      	 ldi r25,0
 4236 07bc 0E94 0000 	 call Sint
 4237               	.LVL225:
 385:../dumbcraft/dumbcraft.c **** 	Sstring( "generic.movementSpeed", -1 );	
 4238               	 .loc 1 385 0
 4239 07c0 6FEF      	 ldi r22,lo8(-1)
 4240 07c2 80E0      	 ldi r24,lo8(.LC0)
 4241 07c4 90E0      	 ldi r25,hi8(.LC0)
 4242 07c6 0E94 0000 	 call Sstring
GAS LISTING  			page 160


 4243               	.LVL226:
 386:../dumbcraft/dumbcraft.c **** 	//SstringPGM( PSTR("generic.movementSpeed") );
 387:../dumbcraft/dumbcraft.c **** 	Sdouble( speed );
 4244               	 .loc 1 387 0
 4245 07ca 8C2F      	 mov r24,r28
 4246 07cc 90E0      	 ldi r25,0
 4247 07ce 0E94 0000 	 call Sdouble
 4248               	.LVL227:
 4249               	.LBB69:
 4250               	.LBB70:
 280:../dumbcraft/dumbcraft.c **** 		Sbyte( v );
 4251               	 .loc 1 280 0
 4252 07d2 80E0      	 ldi r24,0
 4253 07d4 0E94 0000 	 call Sbyte
 4254               	.LVL228:
 4255               	 
 4256               	.LBE70:
 4257               	.LBE69:
 388:../dumbcraft/dumbcraft.c **** 	Svarint(0);
 389:../dumbcraft/dumbcraft.c **** 	DoneSend();
 390:../dumbcraft/dumbcraft.c **** }
 4258               	 .loc 1 390 0
 4259 07d8 CF91      	 pop r28
 4260               	.LVL229:
 389:../dumbcraft/dumbcraft.c **** 	DoneSend();
 4261               	 .loc 1 389 0
 4262 07da 0C94 0000 	 jmp DoneSend
 4263               	.LVL230:
 4264               	 .cfi_endproc
 4265               	.LFE33:
 4267               	.global InitDumbcraft
 4269               	InitDumbcraft:
 4270               	.LFB34:
 391:../dumbcraft/dumbcraft.c **** 
 392:../dumbcraft/dumbcraft.c **** 
 393:../dumbcraft/dumbcraft.c **** #ifdef INCLUDE_ANNOUNCE_UTILS
 394:../dumbcraft/dumbcraft.c **** #ifndef INCLUDE_UDP
 395:../dumbcraft/dumbcraft.c **** #error ERROR! You must include UDP if you want to have broadcast.
 396:../dumbcraft/dumbcraft.c **** #endif
 397:../dumbcraft/dumbcraft.c **** #include "iparpetc.h"
 398:../dumbcraft/dumbcraft.c **** void SendAnnounce( )
 399:../dumbcraft/dumbcraft.c **** {
 400:../dumbcraft/dumbcraft.c **** 	const char * sending;
 401:../dumbcraft/dumbcraft.c **** /*
 402:../dumbcraft/dumbcraft.c **** 	macfrom[0] = 0x01;
 403:../dumbcraft/dumbcraft.c **** 	macfrom[1] = 0x00;
 404:../dumbcraft/dumbcraft.c **** 	macfrom[2] = 0x5e;
 405:../dumbcraft/dumbcraft.c **** 	macfrom[3] = 0x00;
 406:../dumbcraft/dumbcraft.c **** 	macfrom[4] = 0x02;
 407:../dumbcraft/dumbcraft.c **** 	macfrom[5] = 0x3c;
 408:../dumbcraft/dumbcraft.c **** */
 409:../dumbcraft/dumbcraft.c **** 	SwitchToBroadcast();
 410:../dumbcraft/dumbcraft.c **** 
 411:../dumbcraft/dumbcraft.c **** 	enc424j600_stopop();
 412:../dumbcraft/dumbcraft.c **** 	enc424j600_startsend( 0 );
 413:../dumbcraft/dumbcraft.c **** 	send_etherlink_header( 0x0800 );
 414:../dumbcraft/dumbcraft.c **** //	send_ip_header( 0, "\xE0\x00\x02\x3c", 17 ); //UDP Packet to 224.0.2.60
GAS LISTING  			page 161


 415:../dumbcraft/dumbcraft.c **** 	send_ip_header( 0, "\xff\xff\xff\xff", 17 ); //UDP Packet to 255.255.255.255
 416:../dumbcraft/dumbcraft.c **** 
 417:../dumbcraft/dumbcraft.c **** 	enc424j600_push16( MINECRAFT_PORT+1 );
 418:../dumbcraft/dumbcraft.c **** 	enc424j600_push16( 4445 );
 419:../dumbcraft/dumbcraft.c **** 	enc424j600_push16( 0 ); //length for later
 420:../dumbcraft/dumbcraft.c **** 	enc424j600_push16( 0 ); //csum for later
 421:../dumbcraft/dumbcraft.c **** 
 422:../dumbcraft/dumbcraft.c **** #ifdef STATIC_MOTD_NAME
 423:../dumbcraft/dumbcraft.c **** 	enc424j600_pushpgmstr( PSTR( "[MOTD]"MOTD_NAME"[/MOTD][AD]"MINECRAFT_PORT_STRING"[/AD]" ) );
 424:../dumbcraft/dumbcraft.c **** #else
 425:../dumbcraft/dumbcraft.c **** 	enc424j600_pushpgmstr( PSTR( "[MOTD]" ) );
 426:../dumbcraft/dumbcraft.c **** 	enc424j600_pushstr( MOTD_NAME );
 427:../dumbcraft/dumbcraft.c **** 	enc424j600_pushpgmstr( PSTR( "[/MOTD][AD]"MINECRAFT_PORT_STRING"[/AD]" ) );
 428:../dumbcraft/dumbcraft.c **** #endif
 429:../dumbcraft/dumbcraft.c **** 
 430:../dumbcraft/dumbcraft.c **** 	util_finish_udp_packet();
 431:../dumbcraft/dumbcraft.c **** }
 432:../dumbcraft/dumbcraft.c **** #endif
 433:../dumbcraft/dumbcraft.c **** 
 434:../dumbcraft/dumbcraft.c **** void InitDumbcraft()
 435:../dumbcraft/dumbcraft.c **** {
 4271               	 .loc 1 435 0
 4272               	 .cfi_startproc
 4273               	 
 4274               	 
 4275               	 
 4276               	.L__stack_usage =0
 436:../dumbcraft/dumbcraft.c **** 	memset( &Players, 0, sizeof( Players ) );
 4277               	 .loc 1 436 0
 4278 07de 86E3      	 ldi r24,lo8(54)
 4279 07e0 E0E0      	 ldi r30,lo8(Players)
 4280 07e2 F0E0      	 ldi r31,hi8(Players)
 4281 07e4 DF01      	 movw r26,r30
 4282               	 0:
 4283 07e6 1D92      	 st X+,__zero_reg__
 4284 07e8 8A95      	 dec r24
 4285 07ea 01F4      	 brne 0b
 437:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 438:../dumbcraft/dumbcraft.c **** 	printf( "I: SOP: %lu\n", sizeof( struct Player ) );
 439:../dumbcraft/dumbcraft.c **** #endif
 440:../dumbcraft/dumbcraft.c **** 	InitDumbgame();
 4286               	 .loc 1 440 0
 4287 07ec 0C94 0000 	 jmp InitDumbgame
 4288               	.LVL231:
 4289               	 .cfi_endproc
 4290               	.LFE34:
 4292               	 .section .rodata.str1.1
 4293               	.LC1:
 4294 0016 6465 6661 	 .string "default"
 4294      756C 7400 
 4295               	 .text
 4296               	.global UpdateServer
 4298               	UpdateServer:
 4299               	.LFB35:
 441:../dumbcraft/dumbcraft.c **** }
 442:../dumbcraft/dumbcraft.c **** 
 443:../dumbcraft/dumbcraft.c **** void UpdateServer()
GAS LISTING  			page 162


 444:../dumbcraft/dumbcraft.c **** {
 4300               	 .loc 1 444 0
 4301               	 .cfi_startproc
 4302 07f0 2F92      	 push r2
 4303               	.LCFI101:
 4304               	 .cfi_def_cfa_offset 3
 4305               	 .cfi_offset 2,-2
 4306 07f2 3F92      	 push r3
 4307               	.LCFI102:
 4308               	 .cfi_def_cfa_offset 4
 4309               	 .cfi_offset 3,-3
 4310 07f4 4F92      	 push r4
 4311               	.LCFI103:
 4312               	 .cfi_def_cfa_offset 5
 4313               	 .cfi_offset 4,-4
 4314 07f6 5F92      	 push r5
 4315               	.LCFI104:
 4316               	 .cfi_def_cfa_offset 6
 4317               	 .cfi_offset 5,-5
 4318 07f8 6F92      	 push r6
 4319               	.LCFI105:
 4320               	 .cfi_def_cfa_offset 7
 4321               	 .cfi_offset 6,-6
 4322 07fa 7F92      	 push r7
 4323               	.LCFI106:
 4324               	 .cfi_def_cfa_offset 8
 4325               	 .cfi_offset 7,-7
 4326 07fc 8F92      	 push r8
 4327               	.LCFI107:
 4328               	 .cfi_def_cfa_offset 9
 4329               	 .cfi_offset 8,-8
 4330 07fe 9F92      	 push r9
 4331               	.LCFI108:
 4332               	 .cfi_def_cfa_offset 10
 4333               	 .cfi_offset 9,-9
 4334 0800 AF92      	 push r10
 4335               	.LCFI109:
 4336               	 .cfi_def_cfa_offset 11
 4337               	 .cfi_offset 10,-10
 4338 0802 BF92      	 push r11
 4339               	.LCFI110:
 4340               	 .cfi_def_cfa_offset 12
 4341               	 .cfi_offset 11,-11
 4342 0804 CF92      	 push r12
 4343               	.LCFI111:
 4344               	 .cfi_def_cfa_offset 13
 4345               	 .cfi_offset 12,-12
 4346 0806 DF92      	 push r13
 4347               	.LCFI112:
 4348               	 .cfi_def_cfa_offset 14
 4349               	 .cfi_offset 13,-13
 4350 0808 EF92      	 push r14
 4351               	.LCFI113:
 4352               	 .cfi_def_cfa_offset 15
 4353               	 .cfi_offset 14,-14
 4354 080a FF92      	 push r15
 4355               	.LCFI114:
GAS LISTING  			page 163


 4356               	 .cfi_def_cfa_offset 16
 4357               	 .cfi_offset 15,-15
 4358 080c 0F93      	 push r16
 4359               	.LCFI115:
 4360               	 .cfi_def_cfa_offset 17
 4361               	 .cfi_offset 16,-16
 4362 080e 1F93      	 push r17
 4363               	.LCFI116:
 4364               	 .cfi_def_cfa_offset 18
 4365               	 .cfi_offset 17,-17
 4366 0810 CF93      	 push r28
 4367               	.LCFI117:
 4368               	 .cfi_def_cfa_offset 19
 4369               	 .cfi_offset 28,-18
 4370 0812 DF93      	 push r29
 4371               	.LCFI118:
 4372               	 .cfi_def_cfa_offset 20
 4373               	 .cfi_offset 29,-19
 4374 0814 CDB7      	 in r28,__SP_L__
 4375 0816 DEB7      	 in r29,__SP_H__
 4376               	.LCFI119:
 4377               	 .cfi_def_cfa_register 28
 4378 0818 E297      	 sbiw r28,50
 4379               	.LCFI120:
 4380               	 .cfi_def_cfa_offset 70
 4381 081a 0FB6      	 in __tmp_reg__,__SREG__
 4382 081c F894      	 cli
 4383 081e DEBF      	 out __SP_H__,r29
 4384 0820 0FBE      	 out __SREG__,__tmp_reg__
 4385 0822 CDBF      	 out __SP_L__,r28
 4386               	 
 4387               	 
 4388               	 
 4389               	.L__stack_usage =68
 445:../dumbcraft/dumbcraft.c **** 	uint8_t i;
 446:../dumbcraft/dumbcraft.c **** 	uint8_t localplayercount = 0;
 447:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 448:../dumbcraft/dumbcraft.c **** 	{
 449:../dumbcraft/dumbcraft.c **** 		struct Player * p = &Players[playerid];
 450:../dumbcraft/dumbcraft.c **** 
 451:../dumbcraft/dumbcraft.c **** 		if( p->active ) localplayercount++;
 452:../dumbcraft/dumbcraft.c **** 
 453:../dumbcraft/dumbcraft.c **** 		if( !p->active || !CanSend( playerid ) ) continue;
 454:../dumbcraft/dumbcraft.c **** 
 455:../dumbcraft/dumbcraft.c **** 		p->update_number++;
 456:../dumbcraft/dumbcraft.c **** 		SendStart( playerid );
 457:../dumbcraft/dumbcraft.c **** 
 458:../dumbcraft/dumbcraft.c **** 		if( p->need_to_reply_to_ping )
 459:../dumbcraft/dumbcraft.c **** 		{
 460:../dumbcraft/dumbcraft.c **** 			StartSend();
 461:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x01 );
 462:../dumbcraft/dumbcraft.c **** 			Sbuffer( p->playername, 8 );
 463:../dumbcraft/dumbcraft.c **** 			DoneSend();
 464:../dumbcraft/dumbcraft.c **** 			p->need_to_reply_to_ping = 0;
 465:../dumbcraft/dumbcraft.c **** 		}
 466:../dumbcraft/dumbcraft.c **** 
 467:../dumbcraft/dumbcraft.c **** 		//XXX TODO Player list doesn't seem to be sending.
GAS LISTING  			page 164


 468:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_playerlist )
 469:../dumbcraft/dumbcraft.c **** 		{
 470:../dumbcraft/dumbcraft.c **** 			unsigned length = sizeof( pingjson1 ) + sizeof( pingjson2 ) + sizeof( pingjson3 ) + sizeof( ping
 471:../dumbcraft/dumbcraft.c **** 			char buffo[length];
 472:../dumbcraft/dumbcraft.c **** 			char maxplayers[12];
 473:../dumbcraft/dumbcraft.c **** 			char curplayers[12];
 474:../dumbcraft/dumbcraft.c **** 			buffo[0] = 0;
 475:../dumbcraft/dumbcraft.c **** 			Uint32To10Str( maxplayers, MAX_PLAYERS );
 476:../dumbcraft/dumbcraft.c **** 			Uint32To10Str( curplayers, dumbcraft_playercount );
 477:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson1, length );
 478:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, MOTD_NAME, length );
 479:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson2, length );
 480:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, maxplayers, length );
 481:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson3, length );
 482:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, curplayers, length );
 483:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson4, length );
 484:../dumbcraft/dumbcraft.c **** 			StartSend();
 485:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x00 );
 486:../dumbcraft/dumbcraft.c **** 			Sstring( buffo, -1 );
 487:../dumbcraft/dumbcraft.c **** 			DoneSend();
 488:../dumbcraft/dumbcraft.c **** 
 489:../dumbcraft/dumbcraft.c **** 			p->need_to_send_playerlist = 0;
 490:../dumbcraft/dumbcraft.c **** 		}
 491:../dumbcraft/dumbcraft.c **** 
 492:../dumbcraft/dumbcraft.c **** 		//If we didn't finish getting all the broadcast data last time
 493:../dumbcraft/dumbcraft.c **** 		//We must do that now.
 494:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on )
 495:../dumbcraft/dumbcraft.c **** 		{
 496:../dumbcraft/dumbcraft.c **** 			if( p->did_not_clean_out_broadcast_last_time )
 497:../dumbcraft/dumbcraft.c **** 				goto now_sending_broadcast;
 498:../dumbcraft/dumbcraft.c **** 			else
 499:../dumbcraft/dumbcraft.c **** 			{
 500:../dumbcraft/dumbcraft.c **** 				//From the game portion
 501:../dumbcraft/dumbcraft.c **** 				PlayerUpdate();
 502:../dumbcraft/dumbcraft.c **** 			}
 503:../dumbcraft/dumbcraft.c **** 		}
 504:../dumbcraft/dumbcraft.c **** 
 505:../dumbcraft/dumbcraft.c **** 		//BIG NOTE:
 506:../dumbcraft/dumbcraft.c **** 		//Everything in here is SELECTIVE! This means it gets sent to the specific client
 507:../dumbcraft/dumbcraft.c **** 		//ready to receive data!
 508:../dumbcraft/dumbcraft.c **** 		//
 509:../dumbcraft/dumbcraft.c **** 		//Login process:
 510:../dumbcraft/dumbcraft.c **** 		//
 511:../dumbcraft/dumbcraft.c **** 		//For checking in with the server:  (p->need_to_send_playerlist) and that's about it.
 512:../dumbcraft/dumbcraft.c **** 		//For players who are actually joining the server:
 513:../dumbcraft/dumbcraft.c **** 		//	p->need_to_login then
 514:../dumbcraft/dumbcraft.c **** 		//	p->need_to_spawn then
 515:../dumbcraft/dumbcraft.c **** 		//  p->next_chunk_to_load = 1..? for all chunks*16, one per packet (needs to update rows). Then 
 516:../dumbcraft/dumbcraft.c **** 		//	p->custom_preload_step then
 517:../dumbcraft/dumbcraft.c **** 		//   (Do your custom step)... Then, when YOU ARE DONE set
 518:../dumbcraft/dumbcraft.c **** 		//  p->need_to_send_lookupdate
 519:../dumbcraft/dumbcraft.c **** 		//   Now, it is listening to broadcast messages.
 520:../dumbcraft/dumbcraft.c **** 		//  Now, you're cooking!
 521:../dumbcraft/dumbcraft.c **** 
 522:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on )
 523:../dumbcraft/dumbcraft.c **** 		{
 524:../dumbcraft/dumbcraft.c **** 			//If we turn around too far, we MUST warp a reset, because if we get an angle too big,
GAS LISTING  			page 165


 525:../dumbcraft/dumbcraft.c **** 			//we overflow the angle in our 16-bit fixed point.
 526:../dumbcraft/dumbcraft.c **** 
 527:../dumbcraft/dumbcraft.c **** 			//It's too expensive to do the proper modulus on a floating point value.
 528:../dumbcraft/dumbcraft.c **** 			//Additionally, we need to say stance++, otherwise we will fall through the ground when we turn 
 529:../dumbcraft/dumbcraft.c **** 			if( p->yaw < -11520 ) { p->yaw += 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 530:../dumbcraft/dumbcraft.c **** 			if( p->yaw > 11520 )  { p->yaw -= 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 531:../dumbcraft/dumbcraft.c **** 		}
 532:../dumbcraft/dumbcraft.c **** 
 533:../dumbcraft/dumbcraft.c **** 		//I'm worried about things overflowing here, should we consider some mechanism to help prevent th
 534:../dumbcraft/dumbcraft.c **** 
 535:../dumbcraft/dumbcraft.c **** 		//I used to do things here, it's a useful place to stick things that need to happen every tick..
 536:../dumbcraft/dumbcraft.c **** 		//I don't really use it anymore
 537:../dumbcraft/dumbcraft.c **** 		if( p->tick_since_update )
 538:../dumbcraft/dumbcraft.c **** 		{
 539:../dumbcraft/dumbcraft.c **** 			p->tick_since_update = 0;
 540:../dumbcraft/dumbcraft.c **** 		}
 541:../dumbcraft/dumbcraft.c **** 
 542:../dumbcraft/dumbcraft.c **** 
 543:../dumbcraft/dumbcraft.c **** 		if( p->need_to_respawn )
 544:../dumbcraft/dumbcraft.c **** 		{
 545:../dumbcraft/dumbcraft.c **** 			p->x = (1<<FIXEDPOINT)/2;
 546:../dumbcraft/dumbcraft.c **** 			p->y = 100*(1<<FIXEDPOINT);
 547:../dumbcraft/dumbcraft.c **** 			p->stance = p->y + (1<<FIXEDPOINT);
 548:../dumbcraft/dumbcraft.c **** 			p->z = (1<<FIXEDPOINT)/2;
 549:../dumbcraft/dumbcraft.c **** 			p->need_to_send_lookupdate = 1;
 550:../dumbcraft/dumbcraft.c **** 			p->need_to_respawn = 0;
 551:../dumbcraft/dumbcraft.c **** 		}
 552:../dumbcraft/dumbcraft.c **** 
 553:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_lookupdate )
 554:../dumbcraft/dumbcraft.c **** 		{
 555:../dumbcraft/dumbcraft.c **** 			StartSend();
 556:../dumbcraft/dumbcraft.c **** 			Sbyte(0x08); //new
 557:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 558:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 559:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 560:../dumbcraft/dumbcraft.c **** 			Sfloat( p->yaw );
 561:../dumbcraft/dumbcraft.c **** 			Sfloat( p->pitch );
 562:../dumbcraft/dumbcraft.c **** 			Sbyte(0x07); //xyz relative
 563:../dumbcraft/dumbcraft.c **** 			DoneSend();
 564:../dumbcraft/dumbcraft.c **** 
 565:../dumbcraft/dumbcraft.c **** 			p->need_to_send_lookupdate = 0;
 566:../dumbcraft/dumbcraft.c **** 		}
 567:../dumbcraft/dumbcraft.c **** 
 568:../dumbcraft/dumbcraft.c **** 		//We're just logging in!
 569:../dumbcraft/dumbcraft.c **** 		if( p->need_to_spawn )
 570:../dumbcraft/dumbcraft.c **** 		{
 571:../dumbcraft/dumbcraft.c **** 			uint8_t i;
 572:../dumbcraft/dumbcraft.c **** 
 573:../dumbcraft/dumbcraft.c **** 			StartSend();
 574:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x01 );  //New
 575:../dumbcraft/dumbcraft.c **** 			Sint( (uint8_t)(playerid + PLAYER_LOGIN_EID_BASE) );
 576:../dumbcraft/dumbcraft.c **** 			Sbyte( GAMEMODE ); //creative
 577:../dumbcraft/dumbcraft.c **** 			Sbyte( WORLDTYPE ); //overworld
 578:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 ); //peaceful
 579:../dumbcraft/dumbcraft.c **** 			Sbyte( MAX_PLAYERS );
 580:../dumbcraft/dumbcraft.c **** 			Sstring( "default", 7 );
 581:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 ); //Reduce debug info?
GAS LISTING  			page 166


 582:../dumbcraft/dumbcraft.c **** 			DoneSend();
 583:../dumbcraft/dumbcraft.c **** 
 584:../dumbcraft/dumbcraft.c **** 			p->need_to_spawn = 0;
 585:../dumbcraft/dumbcraft.c **** 
 586:../dumbcraft/dumbcraft.c **** 			p->next_chunk_to_load = 1;
 587:../dumbcraft/dumbcraft.c **** 			p->has_logged_on = 1;
 588:../dumbcraft/dumbcraft.c **** 			p->just_spawned = 1;  //For next time round we send to everyone
 589:../dumbcraft/dumbcraft.c **** 
 590:../dumbcraft/dumbcraft.c **** 			//Show us the rest of the players
 591:../dumbcraft/dumbcraft.c **** 			for( i = 0; i < MAX_PLAYERS; i++ )
 592:../dumbcraft/dumbcraft.c **** 			{
 593:../dumbcraft/dumbcraft.c **** 				if( i != playerid && Players[i].active )
 594:../dumbcraft/dumbcraft.c **** 					SSpawnPlayer( i );
 595:../dumbcraft/dumbcraft.c **** 			}
 596:../dumbcraft/dumbcraft.c **** 
 597:../dumbcraft/dumbcraft.c **** 		}
 598:../dumbcraft/dumbcraft.c **** 		if( p->custom_preload_step )
 599:../dumbcraft/dumbcraft.c **** 		{
 600:../dumbcraft/dumbcraft.c **** 			DoCustomPreloadStep( );
 601:../dumbcraft/dumbcraft.c **** 
 602:../dumbcraft/dumbcraft.c **** 			//This is when we checkin to the updates. (after we've sent the map chunk updates)
 603:../dumbcraft/dumbcraft.c **** //			p->outcirctail = outcirchead;
 604:../dumbcraft/dumbcraft.c **** 		}
 605:../dumbcraft/dumbcraft.c **** 
 606:../dumbcraft/dumbcraft.c **** 		//Send the client a couple chunks to load on.
 607:../dumbcraft/dumbcraft.c **** 		//Right now we just send a bunch of copy-and-pasted chunks.
 608:../dumbcraft/dumbcraft.c **** 		if( p->next_chunk_to_load )
 609:../dumbcraft/dumbcraft.c **** 		{
 610:../dumbcraft/dumbcraft.c **** 			uint16_t ichk = p->next_chunk_to_load - 1;
 611:../dumbcraft/dumbcraft.c **** 			if( p->next_chunk_to_load > 16 )
 612:../dumbcraft/dumbcraft.c **** 			{
 613:../dumbcraft/dumbcraft.c **** 				p->next_chunk_to_load = 0;
 614:../dumbcraft/dumbcraft.c **** 				p->custom_preload_step = 1;
 615:../dumbcraft/dumbcraft.c **** 			}
 616:../dumbcraft/dumbcraft.c **** 			else
 617:../dumbcraft/dumbcraft.c **** 			{
 618:../dumbcraft/dumbcraft.c **** 				p->next_chunk_to_load++;
 619:../dumbcraft/dumbcraft.c **** 				if( (ichk & 0x0f) == 0 )
 620:../dumbcraft/dumbcraft.c **** 				{
 621:../dumbcraft/dumbcraft.c **** 					SendRawPGMData( compeddata, sizeof(compeddata) );
 622:../dumbcraft/dumbcraft.c **** 				}
 623:../dumbcraft/dumbcraft.c **** /*
 624:../dumbcraft/dumbcraft.c **** 				StartSend();
 625:../dumbcraft/dumbcraft.c **** 				Sbyte( 0x22 );
 626:../dumbcraft/dumbcraft.c **** 				Sint( 0 );
 627:../dumbcraft/dumbcraft.c **** 				Sint( 0 );
 628:../dumbcraft/dumbcraft.c **** 				Svarint( 16 );
 629:../dumbcraft/dumbcraft.c **** 				for( i = 0; i < 16; i++ )
 630:../dumbcraft/dumbcraft.c **** 				{
 631:../dumbcraft/dumbcraft.c **** 					Sshort( (i<<12) | ((ichk&0x0f)<<8) | 63 );
 632:../dumbcraft/dumbcraft.c **** 					Svarint( 2<<4 ); //Grass
 633:../dumbcraft/dumbcraft.c **** 				}
 634:../dumbcraft/dumbcraft.c **** 				DoneSend();
 635:../dumbcraft/dumbcraft.c **** */
 636:../dumbcraft/dumbcraft.c **** 			}
 637:../dumbcraft/dumbcraft.c **** 		}
 638:../dumbcraft/dumbcraft.c **** 
GAS LISTING  			page 167


 639:../dumbcraft/dumbcraft.c **** 		//This is triggered when players want to actually join.
 640:../dumbcraft/dumbcraft.c **** 		if( p->need_to_login )
 641:../dumbcraft/dumbcraft.c **** 		{
 642:../dumbcraft/dumbcraft.c **** 			char stmp[38];
 643:../dumbcraft/dumbcraft.c **** 			Uint8To16Str( stmp, playerid + PLAYER_LOGIN_EID_BASE );
 644:../dumbcraft/dumbcraft.c **** 			for( i = strlen( stmp ); i < 36; i++ )
 645:../dumbcraft/dumbcraft.c **** 				stmp[i] = '0';
 646:../dumbcraft/dumbcraft.c **** 			stmp[36] = 0;
 647:../dumbcraft/dumbcraft.c **** 			stmp[8] = '-';
 648:../dumbcraft/dumbcraft.c **** 			stmp[13] = '-';
 649:../dumbcraft/dumbcraft.c **** 			stmp[18] = '-';
 650:../dumbcraft/dumbcraft.c **** 			stmp[23] = '-';
 651:../dumbcraft/dumbcraft.c **** 			p->need_to_login = 0;
 652:../dumbcraft/dumbcraft.c **** 			StartSend();
 653:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x02 ); //Login success
 654:../dumbcraft/dumbcraft.c **** 			Sstring( stmp, -1 );  //UUID (Yuck) 00000000-0000-0000-0000-000000000000
 655:../dumbcraft/dumbcraft.c **** //			printf( "Logging in UUID: %s\n", stmp );
 656:../dumbcraft/dumbcraft.c **** 			Sstring( (const char*)p->playername, -1 );
 657:../dumbcraft/dumbcraft.c **** 
 658:../dumbcraft/dumbcraft.c **** 
 659:../dumbcraft/dumbcraft.c **** 			DoneSend();
 660:../dumbcraft/dumbcraft.c **** 
 661:../dumbcraft/dumbcraft.c **** 			//Do this, it is commented out for other reasons.
 662:../dumbcraft/dumbcraft.c **** 			p->need_to_spawn = 1;
 663:../dumbcraft/dumbcraft.c **** 
 664:../dumbcraft/dumbcraft.c **** 		}
 665:../dumbcraft/dumbcraft.c **** 
 666:../dumbcraft/dumbcraft.c **** 
 667:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_keepalive )
 668:../dumbcraft/dumbcraft.c **** 		{
 669:../dumbcraft/dumbcraft.c **** /*
 670:../dumbcraft/dumbcraft.c **** 			StartSend();
 671:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x00 );
 672:../dumbcraft/dumbcraft.c **** 			Sint( p->keepalive_id );
 673:../dumbcraft/dumbcraft.c **** 			DoneSend();
 674:../dumbcraft/dumbcraft.c **** */
 675:../dumbcraft/dumbcraft.c **** 			//TODO
 676:../dumbcraft/dumbcraft.c **** 			p->need_to_send_keepalive = 0;
 677:../dumbcraft/dumbcraft.c **** 		}
 678:../dumbcraft/dumbcraft.c **** 
 679:../dumbcraft/dumbcraft.c **** 
 680:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->doneupdatespeed )
 681:../dumbcraft/dumbcraft.c **** 		{
 682:../dumbcraft/dumbcraft.c **** 			UpdatePlayerSpeed( p->running?RUNSPEED:WALKSPEED );
 683:../dumbcraft/dumbcraft.c **** 			p->doneupdatespeed = 1;
 684:../dumbcraft/dumbcraft.c **** 		}
 685:../dumbcraft/dumbcraft.c **** 
 686:../dumbcraft/dumbcraft.c **** now_sending_broadcast:
 687:../dumbcraft/dumbcraft.c **** 		//Apply any broadcast messages ... if we just spawned, then there's nothing to send.
 688:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->just_spawned )
 689:../dumbcraft/dumbcraft.c **** 		{
 690:../dumbcraft/dumbcraft.c **** 			p->did_not_clean_out_broadcast_last_time = UnloadCircularBufferOnThisClient( &p->outcirctail );
 691:../dumbcraft/dumbcraft.c **** 		}
 692:../dumbcraft/dumbcraft.c **** 
 693:../dumbcraft/dumbcraft.c **** 		EndSend();
 694:../dumbcraft/dumbcraft.c **** 	}
 695:../dumbcraft/dumbcraft.c **** 	dumbcraft_playercount = localplayercount;
GAS LISTING  			page 168


 696:../dumbcraft/dumbcraft.c **** }
 4390               	 .loc 1 696 0
 4391 0824 8DB6      	 in r8,__SP_L__
 4392 0826 9EB6      	 in r9,__SP_H__
 4393               	.LVL232:
 447:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 4394               	 .loc 1 447 0
 4395 0828 1092 0000 	 sts playerid,__zero_reg__
 446:../dumbcraft/dumbcraft.c **** 	uint8_t localplayercount = 0;
 4396               	 .loc 1 446 0
 4397 082c 212C      	 mov r2,__zero_reg__
 4398               	.LBB71:
 4399               	.LBB72:
 643:../dumbcraft/dumbcraft.c **** 			Uint8To16Str( stmp, playerid + PLAYER_LOGIN_EID_BASE );
 4400               	 .loc 1 643 0
 4401 082e 9E01      	 movw r18,r28
 4402 0830 2F5F      	 subi r18,-1
 4403 0832 3F4F      	 sbci r19,-1
 4404 0834 6901      	 movw r12,r18
 647:../dumbcraft/dumbcraft.c **** 			stmp[8] = '-';
 4405               	 .loc 1 647 0
 4406 0836 5DE2      	 ldi r21,lo8(45)
 4407 0838 352E      	 mov r3,r21
 4408               	.LBE72:
 545:../dumbcraft/dumbcraft.c **** 			p->x = (1<<FIXEDPOINT)/2;
 4409               	 .loc 1 545 0
 4410 083a 60E1      	 ldi r22,lo8(16)
 4411 083c A62E      	 mov r10,r22
 4412 083e B12C      	 mov r11,__zero_reg__
 546:../dumbcraft/dumbcraft.c **** 			p->y = 100*(1<<FIXEDPOINT);
 4413               	 .loc 1 546 0
 4414 0840 70E8      	 ldi r23,lo8(-128)
 4415 0842 472E      	 mov r4,r23
 4416 0844 7CE0      	 ldi r23,lo8(12)
 4417 0846 572E      	 mov r5,r23
 4418               	.LVL233:
 4419               	.L111:
 4420               	.LBE71:
 447:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 4421               	 .loc 1 447 0 discriminator 1
 4422 0848 8091 0000 	 lds r24,playerid
 4423 084c 8111      	 cpse r24,__zero_reg__
 4424 084e 00C0      	 rjmp .L189
 4425               	.LVL234:
 4426               	.LBB87:
 451:../dumbcraft/dumbcraft.c **** 		if( p->active ) localplayercount++;
 4427               	 .loc 1 451 0
 4428 0850 8091 0000 	 lds r24,Players+28
 4429 0854 87FF      	 sbrs r24,7
 4430 0856 00C0      	 rjmp .L112
 451:../dumbcraft/dumbcraft.c **** 		if( p->active ) localplayercount++;
 4431               	 .loc 1 451 0 is_stmt 0 discriminator 1
 4432 0858 2394      	 inc r2
 4433               	.LVL235:
 453:../dumbcraft/dumbcraft.c **** 		if( !p->active || !CanSend( playerid ) ) continue;
 4434               	 .loc 1 453 0 is_stmt 1 discriminator 1
 4435 085a 80E0      	 ldi r24,0
GAS LISTING  			page 169


 4436 085c 0E94 0000 	 call CanSend
 4437               	.LVL236:
 4438 0860 8823      	 tst r24
 4439 0862 01F4      	 brne .+2
 4440 0864 00C0      	 rjmp .L112
 455:../dumbcraft/dumbcraft.c **** 		p->update_number++;
 4441               	 .loc 1 455 0
 4442 0866 8091 0000 	 lds r24,Players+34
 4443 086a 8F5F      	 subi r24,lo8(-(1))
 4444 086c 8093 0000 	 sts Players+34,r24
 456:../dumbcraft/dumbcraft.c **** 		SendStart( playerid );
 4445               	 .loc 1 456 0
 4446 0870 8091 0000 	 lds r24,playerid
 4447 0874 0E94 0000 	 call SendStart
 4448               	.LVL237:
 458:../dumbcraft/dumbcraft.c **** 		if( p->need_to_reply_to_ping )
 4449               	 .loc 1 458 0
 4450 0878 8091 0000 	 lds r24,Players+29
 4451 087c 86FF      	 sbrs r24,6
 4452 087e 00C0      	 rjmp .L113
 4453               	.LBB75:
 4454               	.LBB76:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4455               	 .loc 1 120 0
 4456 0880 1092 0000 	 sts sendsize,__zero_reg__
 4457               	.LBE76:
 4458               	.LBE75:
 461:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x01 );
 4459               	 .loc 1 461 0
 4460 0884 81E0      	 ldi r24,lo8(1)
 4461 0886 0E94 0000 	 call Sbyte
 4462               	.LVL238:
 462:../dumbcraft/dumbcraft.c **** 			Sbuffer( p->playername, 8 );
 4463               	 .loc 1 462 0
 4464 088a 68E0      	 ldi r22,lo8(8)
 4465 088c 80E0      	 ldi r24,lo8(Players+37)
 4466 088e 90E0      	 ldi r25,hi8(Players+37)
 4467 0890 0E94 0000 	 call Sbuffer
 4468               	.LVL239:
 463:../dumbcraft/dumbcraft.c **** 			DoneSend();
 4469               	 .loc 1 463 0
 4470 0894 0E94 0000 	 call DoneSend
 4471               	.LVL240:
 464:../dumbcraft/dumbcraft.c **** 			p->need_to_reply_to_ping = 0;
 4472               	 .loc 1 464 0
 4473 0898 8091 0000 	 lds r24,Players+29
 4474 089c 8F7B      	 andi r24,lo8(~(1<<6))
 4475 089e 8093 0000 	 sts Players+29,r24
 4476               	.L113:
 468:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_playerlist )
 4477               	 .loc 1 468 0
 4478 08a2 8091 0000 	 lds r24,Players+29
 4479 08a6 81FF      	 sbrs r24,1
 4480 08a8 00C0      	 rjmp .L114
 4481               	.LBB77:
 4482 08aa 6DB6      	 in r6,__SP_L__
 4483 08ac 7EB6      	 in r7,__SP_H__
GAS LISTING  			page 170


 470:../dumbcraft/dumbcraft.c **** 			unsigned length = sizeof( pingjson1 ) + sizeof( pingjson2 ) + sizeof( pingjson3 ) + sizeof( ping
 4484               	 .loc 1 470 0
 4485 08ae E0E0      	 ldi r30,lo8(my_server_name)
 4486 08b0 F0E0      	 ldi r31,hi8(my_server_name)
 4487               	 0:
 4488 08b2 0190      	 ld __tmp_reg__,Z+
 4489 08b4 0020      	 tst __tmp_reg__
 4490 08b6 01F4      	 brne 0b
 4491 08b8 8F01      	 movw r16,r30
 4492 08ba 0050      	 subi r16,lo8(my_server_name-114)
 4493 08bc 1040      	 sbci r17,hi8(my_server_name-114)
 4494               	.LVL241:
 471:../dumbcraft/dumbcraft.c **** 			char buffo[length];
 4495               	 .loc 1 471 0
 4496 08be 2DB7      	 in r18,__SP_L__
 4497 08c0 3EB7      	 in r19,__SP_H__
 4498 08c2 201B      	 sub r18,r16
 4499 08c4 310B      	 sbc r19,r17
 4500 08c6 0FB6      	 in __tmp_reg__,__SREG__
 4501 08c8 F894      	 cli
 4502 08ca 3EBF      	 out __SP_H__,r19
 4503 08cc 0FBE      	 out __SREG__,__tmp_reg__
 4504 08ce 2DBF      	 out __SP_L__,r18
 4505 08d0 8DB7      	 in r24,__SP_L__
 4506 08d2 9EB7      	 in r25,__SP_H__
 4507 08d4 0196      	 adiw r24,1
 4508 08d6 7C01      	 movw r14,r24
 4509               	.LVL242:
 474:../dumbcraft/dumbcraft.c **** 			buffo[0] = 0;
 4510               	 .loc 1 474 0
 4511 08d8 EDB7      	 in r30,__SP_L__
 4512 08da FEB7      	 in r31,__SP_H__
 4513 08dc 1182      	 std Z+1,__zero_reg__
 475:../dumbcraft/dumbcraft.c **** 			Uint32To10Str( maxplayers, MAX_PLAYERS );
 4514               	 .loc 1 475 0
 4515 08de 41E0      	 ldi r20,lo8(1)
 4516 08e0 50E0      	 ldi r21,0
 4517 08e2 60E0      	 ldi r22,0
 4518 08e4 70E0      	 ldi r23,0
 4519 08e6 CE01      	 movw r24,r28
 4520 08e8 8796      	 adiw r24,39
 4521 08ea 0E94 0000 	 call Uint32To10Str
 4522               	.LVL243:
 476:../dumbcraft/dumbcraft.c **** 			Uint32To10Str( curplayers, dumbcraft_playercount );
 4523               	 .loc 1 476 0
 4524 08ee 4091 0000 	 lds r20,dumbcraft_playercount
 4525 08f2 50E0      	 ldi r21,0
 4526 08f4 60E0      	 ldi r22,0
 4527 08f6 70E0      	 ldi r23,0
 4528 08f8 C601      	 movw r24,r12
 4529 08fa 0E94 0000 	 call Uint32To10Str
 4530               	.LVL244:
 477:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson1, length );
 4531               	 .loc 1 477 0
 4532 08fe A801      	 movw r20,r16
 4533 0900 60E0      	 ldi r22,lo8(pingjson1)
 4534 0902 70E0      	 ldi r23,hi8(pingjson1)
GAS LISTING  			page 171


 4535 0904 C701      	 movw r24,r14
 4536 0906 0E94 0000 	 call mstrcatp
 4537               	.LVL245:
 478:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, MOTD_NAME, length );
 4538               	 .loc 1 478 0
 4539 090a A801      	 movw r20,r16
 4540 090c 60E0      	 ldi r22,lo8(my_server_name)
 4541 090e 70E0      	 ldi r23,hi8(my_server_name)
 4542 0910 C701      	 movw r24,r14
 4543 0912 0E94 0000 	 call mstrcat
 4544               	.LVL246:
 479:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson2, length );
 4545               	 .loc 1 479 0
 4546 0916 A801      	 movw r20,r16
 4547 0918 60E0      	 ldi r22,lo8(pingjson2)
 4548 091a 70E0      	 ldi r23,hi8(pingjson2)
 4549 091c C701      	 movw r24,r14
 4550 091e 0E94 0000 	 call mstrcatp
 4551               	.LVL247:
 480:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, maxplayers, length );
 4552               	 .loc 1 480 0
 4553 0922 A801      	 movw r20,r16
 4554 0924 BE01      	 movw r22,r28
 4555 0926 695D      	 subi r22,-39
 4556 0928 7F4F      	 sbci r23,-1
 4557 092a C701      	 movw r24,r14
 4558 092c 0E94 0000 	 call mstrcat
 4559               	.LVL248:
 481:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson3, length );
 4560               	 .loc 1 481 0
 4561 0930 A801      	 movw r20,r16
 4562 0932 60E0      	 ldi r22,lo8(pingjson3)
 4563 0934 70E0      	 ldi r23,hi8(pingjson3)
 4564 0936 C701      	 movw r24,r14
 4565 0938 0E94 0000 	 call mstrcatp
 4566               	.LVL249:
 482:../dumbcraft/dumbcraft.c **** 			mstrcat( buffo, curplayers, length );
 4567               	 .loc 1 482 0
 4568 093c A801      	 movw r20,r16
 4569 093e B601      	 movw r22,r12
 4570 0940 C701      	 movw r24,r14
 4571 0942 0E94 0000 	 call mstrcat
 4572               	.LVL250:
 483:../dumbcraft/dumbcraft.c **** 			mstrcatp( buffo, pingjson4, length );
 4573               	 .loc 1 483 0
 4574 0946 A801      	 movw r20,r16
 4575 0948 60E0      	 ldi r22,lo8(pingjson4)
 4576 094a 70E0      	 ldi r23,hi8(pingjson4)
 4577 094c C701      	 movw r24,r14
 4578 094e 0E94 0000 	 call mstrcatp
 4579               	.LVL251:
 4580               	.LBB78:
 4581               	.LBB79:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4582               	 .loc 1 120 0
 4583 0952 1092 0000 	 sts sendsize,__zero_reg__
 4584               	.LBE79:
GAS LISTING  			page 172


 4585               	.LBE78:
 485:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x00 );
 4586               	 .loc 1 485 0
 4587 0956 80E0      	 ldi r24,0
 4588 0958 0E94 0000 	 call Sbyte
 4589               	.LVL252:
 486:../dumbcraft/dumbcraft.c **** 			Sstring( buffo, -1 );
 4590               	 .loc 1 486 0
 4591 095c 6FEF      	 ldi r22,lo8(-1)
 4592 095e C701      	 movw r24,r14
 4593 0960 0E94 0000 	 call Sstring
 4594               	.LVL253:
 487:../dumbcraft/dumbcraft.c **** 			DoneSend();
 4595               	 .loc 1 487 0
 4596 0964 0E94 0000 	 call DoneSend
 4597               	.LVL254:
 489:../dumbcraft/dumbcraft.c **** 			p->need_to_send_playerlist = 0;
 4598               	 .loc 1 489 0
 4599 0968 8091 0000 	 lds r24,Players+29
 4600 096c 8D7F      	 andi r24,lo8(~(1<<1))
 4601 096e 8093 0000 	 sts Players+29,r24
 4602 0972 0FB6      	 in __tmp_reg__,__SREG__
 4603 0974 F894      	 cli
 4604 0976 7EBE      	 out __SP_H__,r7
 4605 0978 0FBE      	 out __SREG__,__tmp_reg__
 4606 097a 6DBE      	 out __SP_L__,r6
 4607               	.LVL255:
 4608               	.L114:
 4609               	.LBE77:
 494:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on )
 4610               	 .loc 1 494 0
 4611 097c 8091 0000 	 lds r24,Players+29
 4612 0980 80FF      	 sbrs r24,0
 4613 0982 00C0      	 rjmp .L115
 496:../dumbcraft/dumbcraft.c **** 			if( p->did_not_clean_out_broadcast_last_time )
 4614               	 .loc 1 496 0
 4615 0984 8091 0000 	 lds r24,Players+28
 4616 0988 80FD      	 sbrc r24,0
 4617 098a 00C0      	 rjmp .L117
 501:../dumbcraft/dumbcraft.c **** 				PlayerUpdate();
 4618               	 .loc 1 501 0
 4619 098c 0E94 0000 	 call PlayerUpdate
 4620               	.LVL256:
 4621               	.L115:
 522:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on )
 4622               	 .loc 1 522 0
 4623 0990 2091 0000 	 lds r18,Players+29
 4624 0994 20FF      	 sbrs r18,0
 4625 0996 00C0      	 rjmp .L119
 529:../dumbcraft/dumbcraft.c **** 			if( p->yaw < -11520 ) { p->yaw += 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 4626               	 .loc 1 529 0
 4627 0998 8091 0000 	 lds r24,Players+10
 4628 099c 9091 0000 	 lds r25,Players+10+1
 4629 09a0 8115      	 cp r24,__zero_reg__
 4630 09a2 F3ED      	 ldi r31,-45
 4631 09a4 9F07      	 cpc r25,r31
 4632 09a6 04F4      	 brge .L120
GAS LISTING  			page 173


 529:../dumbcraft/dumbcraft.c **** 			if( p->yaw < -11520 ) { p->yaw += 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 4633               	 .loc 1 529 0 is_stmt 0 discriminator 1
 4634 09a8 935D      	 subi r25,-45
 4635 09aa 9093 0000 	 sts Players+10+1,r25
 4636 09ae 8093 0000 	 sts Players+10,r24
 4637 09b2 822F      	 mov r24,r18
 4638 09b4 8062      	 ori r24,lo8(1<<5)
 4639 09b6 8093 0000 	 sts Players+29,r24
 4640 09ba 8091 0000 	 lds r24,Players+6
 4641 09be 9091 0000 	 lds r25,Players+6+1
 4642 09c2 0196      	 adiw r24,1
 4643 09c4 9093 0000 	 sts Players+6+1,r25
 4644 09c8 8093 0000 	 sts Players+6,r24
 4645               	.L120:
 530:../dumbcraft/dumbcraft.c **** 			if( p->yaw > 11520 )  { p->yaw -= 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 4646               	 .loc 1 530 0 is_stmt 1
 4647 09cc 8091 0000 	 lds r24,Players+10
 4648 09d0 9091 0000 	 lds r25,Players+10+1
 4649 09d4 8130      	 cpi r24,1
 4650 09d6 2DE2      	 ldi r18,45
 4651 09d8 9207      	 cpc r25,r18
 4652 09da 04F0      	 brlt .L119
 530:../dumbcraft/dumbcraft.c **** 			if( p->yaw > 11520 )  { p->yaw -= 11520; p->need_to_send_lookupdate = 1; p->stance++; }
 4653               	 .loc 1 530 0 is_stmt 0 discriminator 1
 4654 09dc 9D52      	 subi r25,45
 4655 09de 9093 0000 	 sts Players+10+1,r25
 4656 09e2 8093 0000 	 sts Players+10,r24
 4657 09e6 8091 0000 	 lds r24,Players+29
 4658 09ea 8062      	 ori r24,lo8(1<<5)
 4659 09ec 8093 0000 	 sts Players+29,r24
 4660 09f0 8091 0000 	 lds r24,Players+6
 4661 09f4 9091 0000 	 lds r25,Players+6+1
 4662 09f8 0196      	 adiw r24,1
 4663 09fa 9093 0000 	 sts Players+6+1,r25
 4664 09fe 8093 0000 	 sts Players+6,r24
 4665               	.L119:
 537:../dumbcraft/dumbcraft.c **** 		if( p->tick_since_update )
 4666               	 .loc 1 537 0 is_stmt 1
 4667 0a02 8091 0000 	 lds r24,Players+35
 4668 0a06 80FF      	 sbrs r24,0
 4669 0a08 00C0      	 rjmp .L122
 539:../dumbcraft/dumbcraft.c **** 			p->tick_since_update = 0;
 4670               	 .loc 1 539 0
 4671 0a0a 8E7F      	 andi r24,lo8(~(1<<0))
 4672 0a0c 8093 0000 	 sts Players+35,r24
 4673               	.L122:
 543:../dumbcraft/dumbcraft.c **** 		if( p->need_to_respawn )
 4674               	 .loc 1 543 0
 4675 0a10 8091 0000 	 lds r24,Players+32
 4676 0a14 80FF      	 sbrs r24,0
 4677 0a16 00C0      	 rjmp .L123
 545:../dumbcraft/dumbcraft.c **** 			p->x = (1<<FIXEDPOINT)/2;
 4678               	 .loc 1 545 0
 4679 0a18 B092 0000 	 sts Players+2+1,r11
 4680 0a1c A092 0000 	 sts Players+2,r10
 546:../dumbcraft/dumbcraft.c **** 			p->y = 100*(1<<FIXEDPOINT);
 4681               	 .loc 1 546 0
GAS LISTING  			page 174


 4682 0a20 5092 0000 	 sts Players+4+1,r5
 4683 0a24 4092 0000 	 sts Players+4,r4
 547:../dumbcraft/dumbcraft.c **** 			p->stance = p->y + (1<<FIXEDPOINT);
 4684               	 .loc 1 547 0
 4685 0a28 E0EA      	 ldi r30,lo8(-96)
 4686 0a2a FCE0      	 ldi r31,lo8(12)
 4687 0a2c F093 0000 	 sts Players+6+1,r31
 4688 0a30 E093 0000 	 sts Players+6,r30
 548:../dumbcraft/dumbcraft.c **** 			p->z = (1<<FIXEDPOINT)/2;
 4689               	 .loc 1 548 0
 4690 0a34 B092 0000 	 sts Players+8+1,r11
 4691 0a38 A092 0000 	 sts Players+8,r10
 549:../dumbcraft/dumbcraft.c **** 			p->need_to_send_lookupdate = 1;
 4692               	 .loc 1 549 0
 4693 0a3c 9091 0000 	 lds r25,Players+29
 4694 0a40 9062      	 ori r25,lo8(1<<5)
 4695 0a42 9093 0000 	 sts Players+29,r25
 550:../dumbcraft/dumbcraft.c **** 			p->need_to_respawn = 0;
 4696               	 .loc 1 550 0
 4697 0a46 8E7F      	 andi r24,lo8(~(1<<0))
 4698 0a48 8093 0000 	 sts Players+32,r24
 4699               	.L123:
 553:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_lookupdate )
 4700               	 .loc 1 553 0
 4701 0a4c 8091 0000 	 lds r24,Players+29
 4702 0a50 85FF      	 sbrs r24,5
 4703 0a52 00C0      	 rjmp .L124
 4704               	.LBB80:
 4705               	.LBB81:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4706               	 .loc 1 120 0
 4707 0a54 1092 0000 	 sts sendsize,__zero_reg__
 4708               	.LBE81:
 4709               	.LBE80:
 556:../dumbcraft/dumbcraft.c **** 			Sbyte(0x08); //new
 4710               	 .loc 1 556 0
 4711 0a58 88E0      	 ldi r24,lo8(8)
 4712 0a5a 0E94 0000 	 call Sbyte
 4713               	.LVL257:
 557:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 4714               	 .loc 1 557 0
 4715 0a5e 80E0      	 ldi r24,0
 4716 0a60 90E0      	 ldi r25,0
 4717 0a62 0E94 0000 	 call Sdouble
 4718               	.LVL258:
 558:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 4719               	 .loc 1 558 0
 4720 0a66 80E0      	 ldi r24,0
 4721 0a68 90E0      	 ldi r25,0
 4722 0a6a 0E94 0000 	 call Sdouble
 4723               	.LVL259:
 559:../dumbcraft/dumbcraft.c **** 			Sdouble( 0 );
 4724               	 .loc 1 559 0
 4725 0a6e 80E0      	 ldi r24,0
 4726 0a70 90E0      	 ldi r25,0
 4727 0a72 0E94 0000 	 call Sdouble
 4728               	.LVL260:
GAS LISTING  			page 175


 560:../dumbcraft/dumbcraft.c **** 			Sfloat( p->yaw );
 4729               	 .loc 1 560 0
 4730 0a76 8091 0000 	 lds r24,Players+10
 4731 0a7a 9091 0000 	 lds r25,Players+10+1
 4732 0a7e 0E94 0000 	 call Sfloat
 4733               	.LVL261:
 561:../dumbcraft/dumbcraft.c **** 			Sfloat( p->pitch );
 4734               	 .loc 1 561 0
 4735 0a82 8091 0000 	 lds r24,Players+12
 4736 0a86 9091 0000 	 lds r25,Players+12+1
 4737 0a8a 0E94 0000 	 call Sfloat
 4738               	.LVL262:
 562:../dumbcraft/dumbcraft.c **** 			Sbyte(0x07); //xyz relative
 4739               	 .loc 1 562 0
 4740 0a8e 87E0      	 ldi r24,lo8(7)
 4741 0a90 0E94 0000 	 call Sbyte
 4742               	.LVL263:
 563:../dumbcraft/dumbcraft.c **** 			DoneSend();
 4743               	 .loc 1 563 0
 4744 0a94 0E94 0000 	 call DoneSend
 4745               	.LVL264:
 565:../dumbcraft/dumbcraft.c **** 			p->need_to_send_lookupdate = 0;
 4746               	 .loc 1 565 0
 4747 0a98 8091 0000 	 lds r24,Players+29
 4748 0a9c 8F7D      	 andi r24,lo8(~(1<<5))
 4749 0a9e 8093 0000 	 sts Players+29,r24
 4750               	.L124:
 569:../dumbcraft/dumbcraft.c **** 		if( p->need_to_spawn )
 4751               	 .loc 1 569 0
 4752 0aa2 8091 0000 	 lds r24,Players+29
 4753 0aa6 82FF      	 sbrs r24,2
 4754 0aa8 00C0      	 rjmp .L125
 4755               	.LBB82:
 4756               	.LBB83:
 4757               	.LBB84:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4758               	 .loc 1 120 0
 4759 0aaa 1092 0000 	 sts sendsize,__zero_reg__
 4760               	.LBE84:
 4761               	.LBE83:
 574:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x01 );  //New
 4762               	 .loc 1 574 0
 4763 0aae 81E0      	 ldi r24,lo8(1)
 4764 0ab0 0E94 0000 	 call Sbyte
 4765               	.LVL265:
 575:../dumbcraft/dumbcraft.c **** 			Sint( (uint8_t)(playerid + PLAYER_LOGIN_EID_BASE) );
 4766               	 .loc 1 575 0
 4767 0ab4 6091 0000 	 lds r22,playerid
 4768 0ab8 605C      	 subi r22,lo8(-(64))
 4769 0aba 70E0      	 ldi r23,0
 4770 0abc 80E0      	 ldi r24,0
 4771 0abe 90E0      	 ldi r25,0
 4772 0ac0 0E94 0000 	 call Sint
 4773               	.LVL266:
 576:../dumbcraft/dumbcraft.c **** 			Sbyte( GAMEMODE ); //creative
 4774               	 .loc 1 576 0
 4775 0ac4 80E0      	 ldi r24,0
GAS LISTING  			page 176


 4776 0ac6 0E94 0000 	 call Sbyte
 4777               	.LVL267:
 577:../dumbcraft/dumbcraft.c **** 			Sbyte( WORLDTYPE ); //overworld
 4778               	 .loc 1 577 0
 4779 0aca 80E0      	 ldi r24,0
 4780 0acc 0E94 0000 	 call Sbyte
 4781               	.LVL268:
 578:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 ); //peaceful
 4782               	 .loc 1 578 0
 4783 0ad0 80E0      	 ldi r24,0
 4784 0ad2 0E94 0000 	 call Sbyte
 4785               	.LVL269:
 579:../dumbcraft/dumbcraft.c **** 			Sbyte( MAX_PLAYERS );
 4786               	 .loc 1 579 0
 4787 0ad6 81E0      	 ldi r24,lo8(1)
 4788 0ad8 0E94 0000 	 call Sbyte
 4789               	.LVL270:
 580:../dumbcraft/dumbcraft.c **** 			Sstring( "default", 7 );
 4790               	 .loc 1 580 0
 4791 0adc 67E0      	 ldi r22,lo8(7)
 4792 0ade 80E0      	 ldi r24,lo8(.LC1)
 4793 0ae0 90E0      	 ldi r25,hi8(.LC1)
 4794 0ae2 0E94 0000 	 call Sstring
 4795               	.LVL271:
 581:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 ); //Reduce debug info?
 4796               	 .loc 1 581 0
 4797 0ae6 80E0      	 ldi r24,0
 4798 0ae8 0E94 0000 	 call Sbyte
 4799               	.LVL272:
 582:../dumbcraft/dumbcraft.c **** 			DoneSend();
 4800               	 .loc 1 582 0
 4801 0aec 0E94 0000 	 call DoneSend
 4802               	.LVL273:
 584:../dumbcraft/dumbcraft.c **** 			p->need_to_spawn = 0;
 4803               	 .loc 1 584 0
 4804 0af0 8091 0000 	 lds r24,Players+29
 586:../dumbcraft/dumbcraft.c **** 			p->next_chunk_to_load = 1;
 4805               	 .loc 1 586 0
 4806 0af4 F1E0      	 ldi r31,lo8(1)
 4807 0af6 F093 0000 	 sts Players+30,r31
 587:../dumbcraft/dumbcraft.c **** 			p->has_logged_on = 1;
 4808               	 .loc 1 587 0
 4809 0afa 8B7F      	 andi r24,lo8(-5)
 4810 0afc 8160      	 ori r24,lo8(1<<0)
 4811 0afe 8093 0000 	 sts Players+29,r24
 588:../dumbcraft/dumbcraft.c **** 			p->just_spawned = 1;  //For next time round we send to everyone
 4812               	 .loc 1 588 0
 4813 0b02 8091 0000 	 lds r24,Players+28
 4814 0b06 8860      	 ori r24,lo8(1<<3)
 4815 0b08 8093 0000 	 sts Players+28,r24
 4816               	.LVL274:
 593:../dumbcraft/dumbcraft.c **** 				if( i != playerid && Players[i].active )
 4817               	 .loc 1 593 0
 4818 0b0c 9091 0000 	 lds r25,playerid
 4819 0b10 9923      	 tst r25
 4820 0b12 01F0      	 breq .L125
 593:../dumbcraft/dumbcraft.c **** 				if( i != playerid && Players[i].active )
GAS LISTING  			page 177


 4821               	 .loc 1 593 0 is_stmt 0 discriminator 1
 4822 0b14 87FF      	 sbrs r24,7
 4823 0b16 00C0      	 rjmp .L125
 594:../dumbcraft/dumbcraft.c **** 					SSpawnPlayer( i );
 4824               	 .loc 1 594 0 is_stmt 1
 4825 0b18 80E0      	 ldi r24,0
 4826 0b1a 0E94 0000 	 call SSpawnPlayer
 4827               	.LVL275:
 4828               	.L125:
 4829               	.LBE82:
 598:../dumbcraft/dumbcraft.c **** 		if( p->custom_preload_step )
 4830               	 .loc 1 598 0
 4831 0b1e 8091 0000 	 lds r24,Players+31
 4832 0b22 8111      	 cpse r24,__zero_reg__
 600:../dumbcraft/dumbcraft.c **** 			DoCustomPreloadStep( );
 4833               	 .loc 1 600 0
 4834 0b24 0E94 0000 	 call DoCustomPreloadStep
 4835               	.LVL276:
 4836               	.L127:
 608:../dumbcraft/dumbcraft.c **** 		if( p->next_chunk_to_load )
 4837               	 .loc 1 608 0
 4838 0b28 8091 0000 	 lds r24,Players+30
 4839 0b2c 8823      	 tst r24
 4840 0b2e 01F0      	 breq .L129
 4841               	.LVL277:
 4842               	.LBB85:
 611:../dumbcraft/dumbcraft.c **** 			if( p->next_chunk_to_load > 16 )
 4843               	 .loc 1 611 0
 4844 0b30 8131      	 cpi r24,lo8(17)
 4845 0b32 00F0      	 brlo .L130
 613:../dumbcraft/dumbcraft.c **** 				p->next_chunk_to_load = 0;
 4846               	 .loc 1 613 0
 4847 0b34 1092 0000 	 sts Players+30,__zero_reg__
 614:../dumbcraft/dumbcraft.c **** 				p->custom_preload_step = 1;
 4848               	 .loc 1 614 0
 4849 0b38 21E0      	 ldi r18,lo8(1)
 4850 0b3a 2093 0000 	 sts Players+31,r18
 4851 0b3e 00C0      	 rjmp .L129
 4852               	.L130:
 618:../dumbcraft/dumbcraft.c **** 				p->next_chunk_to_load++;
 4853               	 .loc 1 618 0
 4854 0b40 91E0      	 ldi r25,lo8(1)
 4855 0b42 980F      	 add r25,r24
 4856 0b44 9093 0000 	 sts Players+30,r25
 619:../dumbcraft/dumbcraft.c **** 				if( (ichk & 0x0f) == 0 )
 4857               	 .loc 1 619 0
 4858 0b48 8130      	 cpi r24,lo8(1)
 4859 0b4a 01F4      	 brne .L129
 621:../dumbcraft/dumbcraft.c **** 					SendRawPGMData( compeddata, sizeof(compeddata) );
 4860               	 .loc 1 621 0
 4861 0b4c 6BE4      	 ldi r22,lo8(75)
 4862 0b4e 70E0      	 ldi r23,0
 4863 0b50 80E0      	 ldi r24,lo8(compeddata)
 4864 0b52 90E0      	 ldi r25,hi8(compeddata)
 4865               	.LVL278:
 4866 0b54 0E94 0000 	 call SendRawPGMData
 4867               	.LVL279:
GAS LISTING  			page 178


 4868               	.L129:
 4869               	.LBE85:
 640:../dumbcraft/dumbcraft.c **** 		if( p->need_to_login )
 4870               	 .loc 1 640 0
 4871 0b58 8091 0000 	 lds r24,Players+29
 4872 0b5c 83FF      	 sbrs r24,3
 4873 0b5e 00C0      	 rjmp .L132
 4874               	.LBB86:
 643:../dumbcraft/dumbcraft.c **** 			Uint8To16Str( stmp, playerid + PLAYER_LOGIN_EID_BASE );
 4875               	 .loc 1 643 0
 4876 0b60 6091 0000 	 lds r22,playerid
 4877 0b64 605C      	 subi r22,lo8(-(64))
 4878 0b66 C601      	 movw r24,r12
 4879 0b68 0E94 0000 	 call Uint8To16Str
 4880               	.LVL280:
 644:../dumbcraft/dumbcraft.c **** 			for( i = strlen( stmp ); i < 36; i++ )
 4881               	 .loc 1 644 0
 4882 0b6c F601      	 movw r30,r12
 4883               	 0:
 4884 0b6e 0190      	 ld __tmp_reg__,Z+
 4885 0b70 0020      	 tst __tmp_reg__
 4886 0b72 01F4      	 brne 0b
 4887 0b74 3197      	 sbiw r30,1
 4888 0b76 3E2F      	 mov r19,r30
 4889 0b78 3C19      	 sub r19,r12
 4890               	.LVL281:
 4891 0b7a 80E0      	 ldi r24,0
 4892 0b7c 90E0      	 ldi r25,0
 4893               	.L133:
 4894 0b7e 232F      	 mov r18,r19
 4895 0b80 280F      	 add r18,r24
 4896               	.LVL282:
 644:../dumbcraft/dumbcraft.c **** 			for( i = strlen( stmp ); i < 36; i++ )
 4897               	 .loc 1 644 0 is_stmt 0 discriminator 1
 4898 0b82 2432      	 cpi r18,lo8(36)
 4899 0b84 00F4      	 brsh .L190
 645:../dumbcraft/dumbcraft.c **** 				stmp[i] = '0';
 4900               	 .loc 1 645 0 is_stmt 1 discriminator 2
 4901 0b86 F601      	 movw r30,r12
 4902 0b88 E20F      	 add r30,r18
 4903 0b8a F11D      	 adc r31,__zero_reg__
 4904 0b8c 20E3      	 ldi r18,lo8(48)
 4905               	.LVL283:
 4906 0b8e 2083      	 st Z,r18
 4907               	.LVL284:
 4908 0b90 0196      	 adiw r24,1
 4909 0b92 00C0      	 rjmp .L133
 4910               	.LVL285:
 4911               	.L190:
 646:../dumbcraft/dumbcraft.c **** 			stmp[36] = 0;
 4912               	 .loc 1 646 0
 4913 0b94 1DA2      	 std Y+37,__zero_reg__
 647:../dumbcraft/dumbcraft.c **** 			stmp[8] = '-';
 4914               	 .loc 1 647 0
 4915 0b96 3986      	 std Y+9,r3
 648:../dumbcraft/dumbcraft.c **** 			stmp[13] = '-';
 4916               	 .loc 1 648 0
GAS LISTING  			page 179


 4917 0b98 3E86      	 std Y+14,r3
 649:../dumbcraft/dumbcraft.c **** 			stmp[18] = '-';
 4918               	 .loc 1 649 0
 4919 0b9a 3B8A      	 std Y+19,r3
 650:../dumbcraft/dumbcraft.c **** 			stmp[23] = '-';
 4920               	 .loc 1 650 0
 4921 0b9c 388E      	 std Y+24,r3
 651:../dumbcraft/dumbcraft.c **** 			p->need_to_login = 0;
 4922               	 .loc 1 651 0
 4923 0b9e 8091 0000 	 lds r24,Players+29
 4924 0ba2 877F      	 andi r24,lo8(~(1<<3))
 4925 0ba4 8093 0000 	 sts Players+29,r24
 4926               	.LBB73:
 4927               	.LBB74:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 4928               	 .loc 1 120 0
 4929 0ba8 1092 0000 	 sts sendsize,__zero_reg__
 4930               	.LBE74:
 4931               	.LBE73:
 653:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x02 ); //Login success
 4932               	 .loc 1 653 0
 4933 0bac 82E0      	 ldi r24,lo8(2)
 4934 0bae 0E94 0000 	 call Sbyte
 4935               	.LVL286:
 654:../dumbcraft/dumbcraft.c **** 			Sstring( stmp, -1 );  //UUID (Yuck) 00000000-0000-0000-0000-000000000000
 4936               	 .loc 1 654 0
 4937 0bb2 6FEF      	 ldi r22,lo8(-1)
 4938 0bb4 C601      	 movw r24,r12
 4939 0bb6 0E94 0000 	 call Sstring
 4940               	.LVL287:
 656:../dumbcraft/dumbcraft.c **** 			Sstring( (const char*)p->playername, -1 );
 4941               	 .loc 1 656 0
 4942 0bba 6FEF      	 ldi r22,lo8(-1)
 4943 0bbc 80E0      	 ldi r24,lo8(Players+37)
 4944 0bbe 90E0      	 ldi r25,hi8(Players+37)
 4945 0bc0 0E94 0000 	 call Sstring
 4946               	.LVL288:
 659:../dumbcraft/dumbcraft.c **** 			DoneSend();
 4947               	 .loc 1 659 0
 4948 0bc4 0E94 0000 	 call DoneSend
 4949               	.LVL289:
 662:../dumbcraft/dumbcraft.c **** 			p->need_to_spawn = 1;
 4950               	 .loc 1 662 0
 4951 0bc8 8091 0000 	 lds r24,Players+29
 4952 0bcc 8460      	 ori r24,lo8(1<<2)
 4953 0bce 8093 0000 	 sts Players+29,r24
 4954               	.L132:
 4955               	.LBE86:
 667:../dumbcraft/dumbcraft.c **** 		if( p->need_to_send_keepalive )
 4956               	 .loc 1 667 0
 4957 0bd2 8091 0000 	 lds r24,Players+29
 4958 0bd6 84FF      	 sbrs r24,4
 4959 0bd8 00C0      	 rjmp .L135
 676:../dumbcraft/dumbcraft.c **** 			p->need_to_send_keepalive = 0;
 4960               	 .loc 1 676 0
 4961 0bda 8F7E      	 andi r24,lo8(~(1<<4))
 4962 0bdc 8093 0000 	 sts Players+29,r24
GAS LISTING  			page 180


 4963               	.L135:
 680:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->doneupdatespeed )
 4964               	 .loc 1 680 0
 4965 0be0 8091 0000 	 lds r24,Players+29
 4966 0be4 80FF      	 sbrs r24,0
 4967 0be6 00C0      	 rjmp .L117
 680:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->doneupdatespeed )
 4968               	 .loc 1 680 0 is_stmt 0 discriminator 1
 4969 0be8 8091 0000 	 lds r24,Players+28
 4970 0bec 85FD      	 sbrc r24,5
 4971 0bee 00C0      	 rjmp .L117
 682:../dumbcraft/dumbcraft.c **** 			UpdatePlayerSpeed( p->running?RUNSPEED:WALKSPEED );
 4972               	 .loc 1 682 0 is_stmt 1
 4973 0bf0 84FF      	 sbrs r24,4
 4974 0bf2 00C0      	 rjmp .L140
 4975 0bf4 85E0      	 ldi r24,lo8(5)
 4976 0bf6 00C0      	 rjmp .L137
 4977               	.L140:
 4978 0bf8 83E0      	 ldi r24,lo8(3)
 4979               	.L137:
 682:../dumbcraft/dumbcraft.c **** 			UpdatePlayerSpeed( p->running?RUNSPEED:WALKSPEED );
 4980               	 .loc 1 682 0 is_stmt 0 discriminator 3
 4981 0bfa 0E94 0000 	 call UpdatePlayerSpeed
 4982               	.LVL290:
 683:../dumbcraft/dumbcraft.c **** 			p->doneupdatespeed = 1;
 4983               	 .loc 1 683 0 is_stmt 1 discriminator 3
 4984 0bfe 8091 0000 	 lds r24,Players+28
 4985 0c02 8062      	 ori r24,lo8(1<<5)
 4986 0c04 8093 0000 	 sts Players+28,r24
 4987               	.L117:
 688:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->just_spawned )
 4988               	 .loc 1 688 0
 4989 0c08 8091 0000 	 lds r24,Players+29
 4990 0c0c 80FF      	 sbrs r24,0
 4991 0c0e 00C0      	 rjmp .L138
 688:../dumbcraft/dumbcraft.c **** 		if( p->has_logged_on && !p->just_spawned )
 4992               	 .loc 1 688 0 is_stmt 0 discriminator 1
 4993 0c10 8091 0000 	 lds r24,Players+28
 4994 0c14 83FD      	 sbrc r24,3
 4995 0c16 00C0      	 rjmp .L138
 690:../dumbcraft/dumbcraft.c **** 			p->did_not_clean_out_broadcast_last_time = UnloadCircularBufferOnThisClient( &p->outcirctail );
 4996               	 .loc 1 690 0 is_stmt 1
 4997 0c18 80E0      	 ldi r24,lo8(Players)
 4998 0c1a 90E0      	 ldi r25,hi8(Players)
 4999 0c1c 0E94 0000 	 call UnloadCircularBufferOnThisClient
 5000               	.LVL291:
 5001 0c20 9091 0000 	 lds r25,Players+28
 5002 0c24 80FB      	 bst r24,0
 5003 0c26 90F9      	 bld r25,0
 5004 0c28 9093 0000 	 sts Players+28,r25
 5005               	.L138:
 693:../dumbcraft/dumbcraft.c **** 		EndSend();
 5006               	 .loc 1 693 0
 5007 0c2c 0E94 0000 	 call EndSend
 5008               	.LVL292:
 5009               	.L112:
 5010               	.LBE87:
GAS LISTING  			page 181


 447:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 5011               	 .loc 1 447 0
 5012 0c30 8091 0000 	 lds r24,playerid
 5013 0c34 8F5F      	 subi r24,lo8(-(1))
 5014 0c36 8093 0000 	 sts playerid,r24
 5015 0c3a 00C0      	 rjmp .L111
 5016               	.LVL293:
 5017               	.L189:
 695:../dumbcraft/dumbcraft.c **** 	dumbcraft_playercount = localplayercount;
 5018               	 .loc 1 695 0
 5019 0c3c 2092 0000 	 sts dumbcraft_playercount,r2
 5020               	 .loc 1 696 0
 5021 0c40 0FB6      	 in __tmp_reg__,__SREG__
 5022 0c42 F894      	 cli
 5023 0c44 9EBE      	 out __SP_H__,r9
 5024 0c46 0FBE      	 out __SREG__,__tmp_reg__
 5025 0c48 8DBE      	 out __SP_L__,r8
 5026               	 
 5027 0c4a E296      	 adiw r28,50
 5028 0c4c 0FB6      	 in __tmp_reg__,__SREG__
 5029 0c4e F894      	 cli
 5030 0c50 DEBF      	 out __SP_H__,r29
 5031 0c52 0FBE      	 out __SREG__,__tmp_reg__
 5032 0c54 CDBF      	 out __SP_L__,r28
 5033 0c56 DF91      	 pop r29
 5034 0c58 CF91      	 pop r28
 5035 0c5a 1F91      	 pop r17
 5036 0c5c 0F91      	 pop r16
 5037 0c5e FF90      	 pop r15
 5038 0c60 EF90      	 pop r14
 5039 0c62 DF90      	 pop r13
 5040 0c64 CF90      	 pop r12
 5041 0c66 BF90      	 pop r11
 5042 0c68 AF90      	 pop r10
 5043 0c6a 9F90      	 pop r9
 5044 0c6c 8F90      	 pop r8
 5045 0c6e 7F90      	 pop r7
 5046 0c70 6F90      	 pop r6
 5047 0c72 5F90      	 pop r5
 5048 0c74 4F90      	 pop r4
 5049 0c76 3F90      	 pop r3
 5050 0c78 2F90      	 pop r2
 5051               	.LVL294:
 5052 0c7a 0895      	 ret
 5053               	 .cfi_endproc
 5054               	.LFE35:
 5056               	.global TickServer
 5058               	TickServer:
 5059               	.LFB36:
 697:../dumbcraft/dumbcraft.c **** 
 698:../dumbcraft/dumbcraft.c **** 
 699:../dumbcraft/dumbcraft.c **** //This function should only be called ~10x/second
 700:../dumbcraft/dumbcraft.c **** void TickServer()
 701:../dumbcraft/dumbcraft.c **** {
 5060               	 .loc 1 701 0
 5061               	 .cfi_startproc
 5062 0c7c EF92      	 push r14
GAS LISTING  			page 182


 5063               	.LCFI121:
 5064               	 .cfi_def_cfa_offset 3
 5065               	 .cfi_offset 14,-2
 5066 0c7e FF92      	 push r15
 5067               	.LCFI122:
 5068               	 .cfi_def_cfa_offset 4
 5069               	 .cfi_offset 15,-3
 5070 0c80 0F93      	 push r16
 5071               	.LCFI123:
 5072               	 .cfi_def_cfa_offset 5
 5073               	 .cfi_offset 16,-4
 5074 0c82 1F93      	 push r17
 5075               	.LCFI124:
 5076               	 .cfi_def_cfa_offset 6
 5077               	 .cfi_offset 17,-5
 5078 0c84 CF93      	 push r28
 5079               	.LCFI125:
 5080               	 .cfi_def_cfa_offset 7
 5081               	 .cfi_offset 28,-6
 5082 0c86 DF93      	 push r29
 5083               	.LCFI126:
 5084               	 .cfi_def_cfa_offset 8
 5085               	 .cfi_offset 29,-7
 5086               	 
 5087               	 
 5088               	 
 5089               	.L__stack_usage =6
 702:../dumbcraft/dumbcraft.c **** 	dumbcraft_tick++;
 5090               	 .loc 1 702 0
 5091 0c88 8091 0000 	 lds r24,dumbcraft_tick
 5092 0c8c 9091 0000 	 lds r25,dumbcraft_tick+1
 5093 0c90 0196      	 adiw r24,1
 5094 0c92 9093 0000 	 sts dumbcraft_tick+1,r25
 5095 0c96 8093 0000 	 sts dumbcraft_tick,r24
 703:../dumbcraft/dumbcraft.c **** 
 704:../dumbcraft/dumbcraft.c **** #ifdef INCLUDE_ANNOUNCE_UTILS
 705:../dumbcraft/dumbcraft.c **** 	if( ( dumbcraft_tick & 0xf ) == 0 )
 706:../dumbcraft/dumbcraft.c **** 	{
 707:../dumbcraft/dumbcraft.c **** 		SendAnnounce( );
 708:../dumbcraft/dumbcraft.c **** 	}
 709:../dumbcraft/dumbcraft.c **** #endif
 710:../dumbcraft/dumbcraft.c **** 
 711:../dumbcraft/dumbcraft.c **** 	//Everything in here should be broadcast to all players.
 712:../dumbcraft/dumbcraft.c **** 	StartupBroadcast();
 5096               	 .loc 1 712 0
 5097 0c9a 0E94 0000 	 call StartupBroadcast
 5098               	.LVL295:
 713:../dumbcraft/dumbcraft.c **** 
 714:../dumbcraft/dumbcraft.c **** 	GameTick();
 5099               	 .loc 1 714 0
 5100 0c9e 0E94 0000 	 call GameTick
 5101               	.LVL296:
 715:../dumbcraft/dumbcraft.c **** 
 716:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 5102               	 .loc 1 716 0
 5103 0ca2 1092 0000 	 sts playerid,__zero_reg__
 5104               	.L192:
GAS LISTING  			page 183


 5105               	 .loc 1 716 0 is_stmt 0 discriminator 1
 5106 0ca6 8091 0000 	 lds r24,playerid
 5107 0caa 8111      	 cpse r24,__zero_reg__
 5108 0cac 00C0      	 rjmp .L210
 5109               	.LVL297:
 5110               	.LBB88:
 717:../dumbcraft/dumbcraft.c **** 	{
 718:../dumbcraft/dumbcraft.c **** 		struct Player * p = &Players[playerid];
 719:../dumbcraft/dumbcraft.c **** 		if( !p->active ) continue;
 5111               	 .loc 1 719 0 is_stmt 1
 5112 0cae 2091 0000 	 lds r18,Players+28
 5113 0cb2 27FF      	 sbrs r18,7
 5114 0cb4 00C0      	 rjmp .L193
 720:../dumbcraft/dumbcraft.c **** 
 721:../dumbcraft/dumbcraft.c **** 		//Send a keep-alive every so often
 722:../dumbcraft/dumbcraft.c **** 		if( ( dumbcraft_tick & 0x2f ) == 0 )
 5115               	 .loc 1 722 0
 5116 0cb6 8091 0000 	 lds r24,dumbcraft_tick
 5117 0cba 9091 0000 	 lds r25,dumbcraft_tick+1
 5118 0cbe 8F72      	 andi r24,47
 5119 0cc0 9927      	 clr r25
 5120 0cc2 892B      	 or r24,r25
 5121 0cc4 01F4      	 brne .L194
 723:../dumbcraft/dumbcraft.c **** 		{
 724:../dumbcraft/dumbcraft.c **** 			p->need_to_send_keepalive = 1;
 5122               	 .loc 1 724 0
 5123 0cc6 8091 0000 	 lds r24,Players+29
 5124 0cca 8061      	 ori r24,lo8(1<<4)
 5125 0ccc 8093 0000 	 sts Players+29,r24
 5126               	.L194:
 725:../dumbcraft/dumbcraft.c **** 		}
 726:../dumbcraft/dumbcraft.c **** 
 727:../dumbcraft/dumbcraft.c **** 		if( p->just_spawned )
 5127               	 .loc 1 727 0
 5128 0cd0 23FF      	 sbrs r18,3
 5129 0cd2 00C0      	 rjmp .L195
 728:../dumbcraft/dumbcraft.c **** 		{
 729:../dumbcraft/dumbcraft.c **** 
 730:../dumbcraft/dumbcraft.c **** 			p->just_spawned = 0;
 5130               	 .loc 1 730 0
 5131 0cd4 8091 0000 	 lds r24,Players+28
 5132 0cd8 877F      	 andi r24,lo8(~(1<<3))
 5133 0cda 8093 0000 	 sts Players+28,r24
 731:../dumbcraft/dumbcraft.c **** 			SSpawnPlayer( playerid );
 5134               	 .loc 1 731 0
 5135 0cde 80E0      	 ldi r24,0
 5136 0ce0 0E94 0000 	 call SSpawnPlayer
 5137               	.LVL298:
 732:../dumbcraft/dumbcraft.c **** 
 733:../dumbcraft/dumbcraft.c **** 			DoneBroadcast();
 5138               	 .loc 1 733 0
 5139 0ce4 0E94 0000 	 call DoneBroadcast
 5140               	.LVL299:
 734:../dumbcraft/dumbcraft.c **** 			p->outcirctail = GetCurrentCircHead(); //If we don't, we'll see ourselves.
 5141               	 .loc 1 734 0
 5142 0ce8 0E94 0000 	 call GetCurrentCircHead
 5143               	.LVL300:
GAS LISTING  			page 184


 5144 0cec 9093 0000 	 sts Players+1,r25
 5145 0cf0 8093 0000 	 sts Players,r24
 735:../dumbcraft/dumbcraft.c **** 			StartupBroadcast();
 5146               	 .loc 1 735 0
 5147 0cf4 0E94 0000 	 call StartupBroadcast
 5148               	.LVL301:
 5149               	.L195:
 736:../dumbcraft/dumbcraft.c **** 		}
 737:../dumbcraft/dumbcraft.c **** 
 738:../dumbcraft/dumbcraft.c **** 		if( p->x != p->ox || p->y != p->oy || p->stance != p->os || p->z != p->oz )
 5150               	 .loc 1 738 0
 5151 0cf8 E090 0000 	 lds r14,Players+2
 5152 0cfc F090 0000 	 lds r15,Players+2+1
 5153 0d00 4091 0000 	 lds r20,Players+14
 5154 0d04 5091 0000 	 lds r21,Players+14+1
 5155 0d08 0091 0000 	 lds r16,Players+4
 5156 0d0c 1091 0000 	 lds r17,Players+4+1
 5157 0d10 2091 0000 	 lds r18,Players+16
 5158 0d14 3091 0000 	 lds r19,Players+16+1
 5159 0d18 C091 0000 	 lds r28,Players+8
 5160 0d1c D091 0000 	 lds r29,Players+8+1
 5161 0d20 8091 0000 	 lds r24,Players+20
 5162 0d24 9091 0000 	 lds r25,Players+20+1
 5163 0d28 E416      	 cp r14,r20
 5164 0d2a F506      	 cpc r15,r21
 5165 0d2c 01F4      	 brne .L196
 5166               	 .loc 1 738 0 is_stmt 0 discriminator 1
 5167 0d2e 0217      	 cp r16,r18
 5168 0d30 1307      	 cpc r17,r19
 5169 0d32 01F4      	 brne .L196
 5170 0d34 E091 0000 	 lds r30,Players+6
 5171 0d38 F091 0000 	 lds r31,Players+6+1
 5172 0d3c 6091 0000 	 lds r22,Players+18
 5173 0d40 7091 0000 	 lds r23,Players+18+1
 5174 0d44 E617      	 cp r30,r22
 5175 0d46 F707      	 cpc r31,r23
 5176 0d48 01F4      	 brne .L196
 5177 0d4a C817      	 cp r28,r24
 5178 0d4c D907      	 cpc r29,r25
 5179 0d4e 01F4      	 brne .+2
 5180 0d50 00C0      	 rjmp .L197
 5181               	.L196:
 5182               	.LBB89:
 739:../dumbcraft/dumbcraft.c **** 		{
 740:../dumbcraft/dumbcraft.c **** 			int16_t diffx = p->x - p->ox;
 5183               	 .loc 1 740 0 is_stmt 1
 5184 0d52 E41A      	 sub r14,r20
 5185 0d54 F50A      	 sbc r15,r21
 5186               	.LVL302:
 741:../dumbcraft/dumbcraft.c **** 			int16_t diffy = p->y - p->oy;
 742:../dumbcraft/dumbcraft.c **** 			int16_t diffz = p->z - p->oz;
 743:../dumbcraft/dumbcraft.c **** 			if( diffx < -127 || diffx > 127 || diffy < -127 || diffy > 127 || diffz < -127 || diffz > 127 )
 5187               	 .loc 1 743 0
 5188 0d56 A701      	 movw r20,r14
 5189 0d58 4158      	 subi r20,-127
 5190 0d5a 5F4F      	 sbci r21,-1
 5191 0d5c 4F3F      	 cpi r20,-1
GAS LISTING  			page 185


 5192 0d5e 5105      	 cpc r21,__zero_reg__
 5193 0d60 00F4      	 brsh .L198
 5194               	.LVL303:
 741:../dumbcraft/dumbcraft.c **** 			int16_t diffy = p->y - p->oy;
 5195               	 .loc 1 741 0 discriminator 1
 5196 0d62 021B      	 sub r16,r18
 5197 0d64 130B      	 sbc r17,r19
 5198               	.LVL304:
 5199               	 .loc 1 743 0 discriminator 1
 5200 0d66 9801      	 movw r18,r16
 5201 0d68 2158      	 subi r18,-127
 5202 0d6a 3F4F      	 sbci r19,-1
 5203 0d6c 2F3F      	 cpi r18,-1
 5204 0d6e 3105      	 cpc r19,__zero_reg__
 5205 0d70 00F4      	 brsh .L198
 742:../dumbcraft/dumbcraft.c **** 			int16_t diffz = p->z - p->oz;
 5206               	 .loc 1 742 0 discriminator 1
 5207 0d72 C81B      	 sub r28,r24
 5208 0d74 D90B      	 sbc r29,r25
 5209               	.LVL305:
 5210               	 .loc 1 743 0 discriminator 1
 5211 0d76 CE01      	 movw r24,r28
 5212 0d78 8158      	 subi r24,-127
 5213 0d7a 9F4F      	 sbci r25,-1
 5214 0d7c 8F3F      	 cpi r24,-1
 5215 0d7e 9105      	 cpc r25,__zero_reg__
 5216 0d80 00F0      	 brlo .L199
 5217               	.LVL306:
 5218               	.L198:
 5219               	.LBB90:
 5220               	.LBB91:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 5221               	 .loc 1 120 0
 5222 0d82 1092 0000 	 sts sendsize,__zero_reg__
 5223               	.LBE91:
 5224               	.LBE90:
 744:../dumbcraft/dumbcraft.c **** 			{
 745:../dumbcraft/dumbcraft.c **** 				StartSend();
 746:../dumbcraft/dumbcraft.c **** 				Sbyte( 0x18 );  //New
 5225               	 .loc 1 746 0
 5226 0d86 88E1      	 ldi r24,lo8(24)
 5227 0d88 0E94 0000 	 call Sbyte
 5228               	.LVL307:
 747:../dumbcraft/dumbcraft.c **** 				Svarint( (uint8_t)(playerid + PLAYER_EID_BASE) );
 5229               	 .loc 1 747 0
 5230 0d8c 8091 0000 	 lds r24,playerid
 5231 0d90 805E      	 subi r24,lo8(-(32))
 5232 0d92 90E0      	 ldi r25,0
 5233 0d94 0E94 0000 	 call Svarint
 5234               	.LVL308:
 748:../dumbcraft/dumbcraft.c **** 				Sint( p->x );
 5235               	 .loc 1 748 0
 5236 0d98 6091 0000 	 lds r22,Players+2
 5237 0d9c 7091 0000 	 lds r23,Players+2+1
 5238 0da0 8827      	 clr r24
 5239 0da2 77FD      	 sbrc r23,7
 5240 0da4 8095      	 com r24
GAS LISTING  			page 186


 5241 0da6 982F      	 mov r25,r24
 5242 0da8 0E94 0000 	 call Sint
 5243               	.LVL309:
 749:../dumbcraft/dumbcraft.c **** 				Sint( p->y );
 5244               	 .loc 1 749 0
 5245 0dac 6091 0000 	 lds r22,Players+4
 5246 0db0 7091 0000 	 lds r23,Players+4+1
 5247 0db4 8827      	 clr r24
 5248 0db6 77FD      	 sbrc r23,7
 5249 0db8 8095      	 com r24
 5250 0dba 982F      	 mov r25,r24
 5251 0dbc 0E94 0000 	 call Sint
 5252               	.LVL310:
 750:../dumbcraft/dumbcraft.c **** 				Sint( p->z );
 5253               	 .loc 1 750 0
 5254 0dc0 6091 0000 	 lds r22,Players+8
 5255 0dc4 7091 0000 	 lds r23,Players+8+1
 5256 0dc8 8827      	 clr r24
 5257 0dca 77FD      	 sbrc r23,7
 5258 0dcc 8095      	 com r24
 5259 0dce 982F      	 mov r25,r24
 5260 0dd0 0E94 0000 	 call Sint
 5261               	.LVL311:
 751:../dumbcraft/dumbcraft.c **** 				Sbyte( p->nyaw );
 5262               	 .loc 1 751 0
 5263 0dd4 8091 0000 	 lds r24,Players+26
 5264 0dd8 0E94 0000 	 call Sbyte
 5265               	.LVL312:
 752:../dumbcraft/dumbcraft.c **** 				Sbyte( p->npitch );
 5266               	 .loc 1 752 0
 5267 0ddc 8091 0000 	 lds r24,Players+27
 5268 0de0 0E94 0000 	 call Sbyte
 5269               	.LVL313:
 753:../dumbcraft/dumbcraft.c **** 				Sbyte( ONGROUND );
 5270               	 .loc 1 753 0
 5271 0de4 81E0      	 ldi r24,lo8(1)
 5272 0de6 0E94 0000 	 call Sbyte
 5273               	.LVL314:
 754:../dumbcraft/dumbcraft.c **** 				DoneSend();
 5274               	 .loc 1 754 0
 5275 0dea 0E94 0000 	 call DoneSend
 5276               	.LVL315:
 5277 0dee 00C0      	 rjmp .L200
 5278               	.LVL316:
 5279               	.L199:
 5280               	.LBB92:
 5281               	.LBB93:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 5282               	 .loc 1 120 0
 5283 0df0 1092 0000 	 sts sendsize,__zero_reg__
 5284               	.LBE93:
 5285               	.LBE92:
 755:../dumbcraft/dumbcraft.c **** 			}
 756:../dumbcraft/dumbcraft.c **** 			else
 757:../dumbcraft/dumbcraft.c **** 			{
 758:../dumbcraft/dumbcraft.c **** 				StartSend();
 759:../dumbcraft/dumbcraft.c **** 				Sbyte( 0x17 ); //New
GAS LISTING  			page 187


 5286               	 .loc 1 759 0
 5287 0df4 87E1      	 ldi r24,lo8(23)
 5288 0df6 0E94 0000 	 call Sbyte
 5289               	.LVL317:
 760:../dumbcraft/dumbcraft.c **** 				Svarint( (uint8_t)(playerid + PLAYER_EID_BASE) );
 5290               	 .loc 1 760 0
 5291 0dfa 8091 0000 	 lds r24,playerid
 5292 0dfe 805E      	 subi r24,lo8(-(32))
 5293 0e00 90E0      	 ldi r25,0
 5294 0e02 0E94 0000 	 call Svarint
 5295               	.LVL318:
 761:../dumbcraft/dumbcraft.c **** 				Sbyte( diffx );
 5296               	 .loc 1 761 0
 5297 0e06 8E2D      	 mov r24,r14
 5298 0e08 0E94 0000 	 call Sbyte
 5299               	.LVL319:
 762:../dumbcraft/dumbcraft.c **** 				Sbyte( diffy );
 5300               	 .loc 1 762 0
 5301 0e0c 802F      	 mov r24,r16
 5302 0e0e 0E94 0000 	 call Sbyte
 5303               	.LVL320:
 763:../dumbcraft/dumbcraft.c **** 				Sbyte( diffz );
 5304               	 .loc 1 763 0
 5305 0e12 8C2F      	 mov r24,r28
 5306 0e14 0E94 0000 	 call Sbyte
 5307               	.LVL321:
 764:../dumbcraft/dumbcraft.c **** 				Sbyte( p->nyaw );
 5308               	 .loc 1 764 0
 5309 0e18 8091 0000 	 lds r24,Players+26
 5310 0e1c 0E94 0000 	 call Sbyte
 5311               	.LVL322:
 765:../dumbcraft/dumbcraft.c **** 				Sbyte( p->npitch );
 5312               	 .loc 1 765 0
 5313 0e20 8091 0000 	 lds r24,Players+27
 5314 0e24 0E94 0000 	 call Sbyte
 5315               	.LVL323:
 766:../dumbcraft/dumbcraft.c **** 				Sbyte( ONGROUND );
 5316               	 .loc 1 766 0
 5317 0e28 81E0      	 ldi r24,lo8(1)
 5318 0e2a 0E94 0000 	 call Sbyte
 5319               	.LVL324:
 767:../dumbcraft/dumbcraft.c **** 				DoneSend();
 5320               	 .loc 1 767 0
 5321 0e2e 0E94 0000 	 call DoneSend
 5322               	.LVL325:
 768:../dumbcraft/dumbcraft.c **** 				p->op = p->pitch; p->ow = p->yaw;
 5323               	 .loc 1 768 0
 5324 0e32 8091 0000 	 lds r24,Players+12
 5325 0e36 9091 0000 	 lds r25,Players+12+1
 5326 0e3a 9093 0000 	 sts Players+24+1,r25
 5327 0e3e 8093 0000 	 sts Players+24,r24
 5328 0e42 8091 0000 	 lds r24,Players+10
 5329 0e46 9091 0000 	 lds r25,Players+10+1
 5330 0e4a 9093 0000 	 sts Players+22+1,r25
 5331 0e4e 8093 0000 	 sts Players+22,r24
 5332               	.LVL326:
 5333               	.L200:
GAS LISTING  			page 188


 769:../dumbcraft/dumbcraft.c **** 			}
 770:../dumbcraft/dumbcraft.c **** 			p->ox = p->x;
 5334               	 .loc 1 770 0
 5335 0e52 8091 0000 	 lds r24,Players+2
 5336 0e56 9091 0000 	 lds r25,Players+2+1
 5337 0e5a 9093 0000 	 sts Players+14+1,r25
 5338 0e5e 8093 0000 	 sts Players+14,r24
 771:../dumbcraft/dumbcraft.c **** 			p->oy = p->y;
 5339               	 .loc 1 771 0
 5340 0e62 8091 0000 	 lds r24,Players+4
 5341 0e66 9091 0000 	 lds r25,Players+4+1
 5342 0e6a 9093 0000 	 sts Players+16+1,r25
 5343 0e6e 8093 0000 	 sts Players+16,r24
 772:../dumbcraft/dumbcraft.c **** 			p->oz = p->z;
 5344               	 .loc 1 772 0
 5345 0e72 8091 0000 	 lds r24,Players+8
 5346 0e76 9091 0000 	 lds r25,Players+8+1
 5347 0e7a 9093 0000 	 sts Players+20+1,r25
 5348 0e7e 8093 0000 	 sts Players+20,r24
 773:../dumbcraft/dumbcraft.c **** 			p->os = p->stance;
 5349               	 .loc 1 773 0
 5350 0e82 8091 0000 	 lds r24,Players+6
 5351 0e86 9091 0000 	 lds r25,Players+6+1
 5352 0e8a 9093 0000 	 sts Players+18+1,r25
 5353 0e8e 8093 0000 	 sts Players+18,r24
 5354               	.L197:
 5355               	.LBE89:
 774:../dumbcraft/dumbcraft.c **** 		}
 775:../dumbcraft/dumbcraft.c **** 
 776:../dumbcraft/dumbcraft.c **** 		if( p->pitch != p->op || p->yaw != p->ow )
 5356               	 .loc 1 776 0
 5357 0e92 2091 0000 	 lds r18,Players+12
 5358 0e96 3091 0000 	 lds r19,Players+12+1
 5359 0e9a 8091 0000 	 lds r24,Players+24
 5360 0e9e 9091 0000 	 lds r25,Players+24+1
 5361 0ea2 2817      	 cp r18,r24
 5362 0ea4 3907      	 cpc r19,r25
 5363 0ea6 01F4      	 brne .L201
 5364               	 .loc 1 776 0 is_stmt 0 discriminator 1
 5365 0ea8 2091 0000 	 lds r18,Players+10
 5366 0eac 3091 0000 	 lds r19,Players+10+1
 5367 0eb0 8091 0000 	 lds r24,Players+22
 5368 0eb4 9091 0000 	 lds r25,Players+22+1
 5369 0eb8 2817      	 cp r18,r24
 5370 0eba 3907      	 cpc r19,r25
 5371 0ebc 01F0      	 breq .L202
 5372               	.L201:
 5373               	.LBB94:
 5374               	.LBB95:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 5375               	 .loc 1 120 0 is_stmt 1
 5376 0ebe 1092 0000 	 sts sendsize,__zero_reg__
 5377               	.LBE95:
 5378               	.LBE94:
 777:../dumbcraft/dumbcraft.c **** 		{
 778:../dumbcraft/dumbcraft.c **** 			StartSend();
 779:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x16 ); //New
GAS LISTING  			page 189


 5379               	 .loc 1 779 0
 5380 0ec2 86E1      	 ldi r24,lo8(22)
 5381 0ec4 0E94 0000 	 call Sbyte
 5382               	.LVL327:
 780:../dumbcraft/dumbcraft.c **** 			Svarint( (uint8_t)(playerid + PLAYER_EID_BASE) );
 5383               	 .loc 1 780 0
 5384 0ec8 8091 0000 	 lds r24,playerid
 5385 0ecc 805E      	 subi r24,lo8(-(32))
 5386 0ece 90E0      	 ldi r25,0
 5387 0ed0 0E94 0000 	 call Svarint
 5388               	.LVL328:
 781:../dumbcraft/dumbcraft.c **** 			Sbyte( p->nyaw );
 5389               	 .loc 1 781 0
 5390 0ed4 8091 0000 	 lds r24,Players+26
 5391 0ed8 0E94 0000 	 call Sbyte
 5392               	.LVL329:
 782:../dumbcraft/dumbcraft.c **** 			Sbyte( p->npitch );
 5393               	 .loc 1 782 0
 5394 0edc 8091 0000 	 lds r24,Players+27
 5395 0ee0 0E94 0000 	 call Sbyte
 5396               	.LVL330:
 783:../dumbcraft/dumbcraft.c **** 			Sbyte( ONGROUND );
 5397               	 .loc 1 783 0
 5398 0ee4 81E0      	 ldi r24,lo8(1)
 5399 0ee6 0E94 0000 	 call Sbyte
 5400               	.LVL331:
 784:../dumbcraft/dumbcraft.c **** 			DoneSend();
 5401               	 .loc 1 784 0
 5402 0eea 0E94 0000 	 call DoneSend
 5403               	.LVL332:
 5404               	.LBB96:
 5405               	.LBB97:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
 5406               	 .loc 1 120 0
 5407 0eee 1092 0000 	 sts sendsize,__zero_reg__
 5408               	.LBE97:
 5409               	.LBE96:
 785:../dumbcraft/dumbcraft.c **** 
 786:../dumbcraft/dumbcraft.c **** 			StartSend();
 787:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x19 ); //New
 5410               	 .loc 1 787 0
 5411 0ef2 89E1      	 ldi r24,lo8(25)
 5412 0ef4 0E94 0000 	 call Sbyte
 5413               	.LVL333:
 788:../dumbcraft/dumbcraft.c **** 			Svarint( (uint8_t)(playerid + PLAYER_EID_BASE) );
 5414               	 .loc 1 788 0
 5415 0ef8 8091 0000 	 lds r24,playerid
 5416 0efc 805E      	 subi r24,lo8(-(32))
 5417 0efe 90E0      	 ldi r25,0
 5418 0f00 0E94 0000 	 call Svarint
 5419               	.LVL334:
 789:../dumbcraft/dumbcraft.c **** 			Sbyte( p->nyaw );
 5420               	 .loc 1 789 0
 5421 0f04 8091 0000 	 lds r24,Players+26
 5422 0f08 0E94 0000 	 call Sbyte
 5423               	.LVL335:
 790:../dumbcraft/dumbcraft.c **** 			DoneSend();
GAS LISTING  			page 190


 5424               	 .loc 1 790 0
 5425 0f0c 0E94 0000 	 call DoneSend
 5426               	.LVL336:
 791:../dumbcraft/dumbcraft.c **** 
 792:../dumbcraft/dumbcraft.c **** 			p->op = p->pitch; p->ow = p->yaw;
 5427               	 .loc 1 792 0
 5428 0f10 8091 0000 	 lds r24,Players+12
 5429 0f14 9091 0000 	 lds r25,Players+12+1
 5430 0f18 9093 0000 	 sts Players+24+1,r25
 5431 0f1c 8093 0000 	 sts Players+24,r24
 5432 0f20 8091 0000 	 lds r24,Players+10
 5433 0f24 9091 0000 	 lds r25,Players+10+1
 5434 0f28 9093 0000 	 sts Players+22+1,r25
 5435 0f2c 8093 0000 	 sts Players+22,r24
 5436               	.L202:
 793:../dumbcraft/dumbcraft.c **** 		}
 794:../dumbcraft/dumbcraft.c **** 
 795:../dumbcraft/dumbcraft.c **** 		p->tick_since_update = 1;
 5437               	 .loc 1 795 0
 5438 0f30 8091 0000 	 lds r24,Players+35
 5439 0f34 8160      	 ori r24,lo8(1<<0)
 5440 0f36 8093 0000 	 sts Players+35,r24
 796:../dumbcraft/dumbcraft.c **** 
 797:../dumbcraft/dumbcraft.c **** 		PlayerTickUpdate( );
 5441               	 .loc 1 797 0
 5442 0f3a 0E94 0000 	 call PlayerTickUpdate
 5443               	.LVL337:
 5444               	.L193:
 5445               	.LBE88:
 716:../dumbcraft/dumbcraft.c **** 	for( playerid = 0; playerid < MAX_PLAYERS; playerid++ )
 5446               	 .loc 1 716 0
 5447 0f3e 8091 0000 	 lds r24,playerid
 5448 0f42 8F5F      	 subi r24,lo8(-(1))
 5449 0f44 8093 0000 	 sts playerid,r24
 5450 0f48 00C0      	 rjmp .L192
 5451               	.LVL338:
 5452               	.L210:
 5453               	 
 798:../dumbcraft/dumbcraft.c **** 	}
 799:../dumbcraft/dumbcraft.c **** 
 800:../dumbcraft/dumbcraft.c **** 	DoneBroadcast();
 801:../dumbcraft/dumbcraft.c **** 
 802:../dumbcraft/dumbcraft.c **** }
 5454               	 .loc 1 802 0
 5455 0f4a DF91      	 pop r29
 5456 0f4c CF91      	 pop r28
 5457 0f4e 1F91      	 pop r17
 5458 0f50 0F91      	 pop r16
 5459 0f52 FF90      	 pop r15
 5460 0f54 EF90      	 pop r14
 800:../dumbcraft/dumbcraft.c **** 	DoneBroadcast();
 5461               	 .loc 1 800 0
 5462 0f56 0C94 0000 	 jmp DoneBroadcast
 5463               	.LVL339:
 5464               	 .cfi_endproc
 5465               	.LFE36:
 5467               	.global AddPlayer
GAS LISTING  			page 191


 5469               	AddPlayer:
 5470               	.LFB37:
 803:../dumbcraft/dumbcraft.c **** 
 804:../dumbcraft/dumbcraft.c **** void AddPlayer( uint8_t playerno )
 805:../dumbcraft/dumbcraft.c **** {
 5471               	 .loc 1 805 0
 5472               	 .cfi_startproc
 5473               	.LVL340:
 5474               	 
 5475               	 
 5476               	 
 5477               	.L__stack_usage =0
 806:../dumbcraft/dumbcraft.c **** //	printf( "Add: %d\n", playerno );
 807:../dumbcraft/dumbcraft.c **** 	memset( &Players[playerno], 0, sizeof( struct Player ) );
 5478               	 .loc 1 807 0
 5479 0f5a 282F      	 mov r18,r24
 5480 0f5c 30E0      	 ldi r19,0
 5481 0f5e C901      	 movw r24,r18
 5482               	.LVL341:
 5483 0f60 66E3      	 ldi r22,lo8(54)
 5484 0f62 70E0      	 ldi r23,0
 5485 0f64 0E94 0000 	 call __mulhi3
 5486 0f68 8050      	 subi r24,lo8(-(Players))
 5487 0f6a 9040      	 sbci r25,hi8(-(Players))
 5488 0f6c 46E3      	 ldi r20,lo8(54)
 5489 0f6e FC01      	 movw r30,r24
 5490               	 0:
 5491 0f70 1192      	 st Z+,__zero_reg__
 5492 0f72 4A95      	 dec r20
 5493 0f74 01F4      	 brne 0b
 808:../dumbcraft/dumbcraft.c **** 	Players[playerno].active = 1;
 5494               	 .loc 1 808 0
 5495 0f76 C901      	 movw r24,r18
 5496 0f78 66E3      	 ldi r22,lo8(54)
 5497 0f7a 70E0      	 ldi r23,0
 5498 0f7c 0E94 0000 	 call __mulhi3
 5499 0f80 FC01      	 movw r30,r24
 5500 0f82 E050      	 subi r30,lo8(-(Players+28))
 5501 0f84 F040      	 sbci r31,hi8(-(Players+28))
 5502 0f86 8081      	 ld r24,Z
 5503 0f88 8068      	 ori r24,lo8(1<<7)
 5504 0f8a 8083      	 st Z,r24
 5505 0f8c 0895      	 ret
 5506               	 .cfi_endproc
 5507               	.LFE37:
 5509               	.global RemovePlayer
 5511               	RemovePlayer:
 5512               	.LFB38:
 809:../dumbcraft/dumbcraft.c **** }
 810:../dumbcraft/dumbcraft.c **** 
 811:../dumbcraft/dumbcraft.c **** void RemovePlayer( uint8_t playerno )
 812:../dumbcraft/dumbcraft.c **** {
 5513               	 .loc 1 812 0
 5514               	 .cfi_startproc
 5515               	.LVL342:
 5516               	 
 5517               	 
GAS LISTING  			page 192


 5518               	 
 5519               	.L__stack_usage =0
 813:../dumbcraft/dumbcraft.c **** //	printf( "Remove: %d\n", playerid );
 814:../dumbcraft/dumbcraft.c **** 	Players[playerno].active = 0;
 5520               	 .loc 1 814 0
 5521 0f8e 90E0      	 ldi r25,0
 5522 0f90 66E3      	 ldi r22,lo8(54)
 5523 0f92 70E0      	 ldi r23,0
 5524 0f94 0E94 0000 	 call __mulhi3
 5525               	.LVL343:
 5526 0f98 FC01      	 movw r30,r24
 5527 0f9a E050      	 subi r30,lo8(-(Players+28))
 5528 0f9c F040      	 sbci r31,hi8(-(Players+28))
 5529 0f9e 8081      	 ld r24,Z
 5530 0fa0 8F77      	 andi r24,lo8(~(1<<7))
 5531 0fa2 8083      	 st Z,r24
 5532 0fa4 0895      	 ret
 5533               	 .cfi_endproc
 5534               	.LFE38:
 5536               	.global DumpRemain
 5538               	DumpRemain:
 5539               	.LFB39:
 815:../dumbcraft/dumbcraft.c **** 	//todo send 0xff command
 816:../dumbcraft/dumbcraft.c **** }
 817:../dumbcraft/dumbcraft.c **** 
 818:../dumbcraft/dumbcraft.c **** void DumpRemain()
 819:../dumbcraft/dumbcraft.c **** {
 5540               	 .loc 1 819 0
 5541               	 .cfi_startproc
 5542               	 
 5543               	 
 5544               	 
 5545               	.L__stack_usage =0
 820:../dumbcraft/dumbcraft.c **** 	if( !cmdremain ) return;
 5546               	 .loc 1 820 0
 5547 0fa6 8091 0000 	 lds r24,cmdremain
 5548 0faa 9091 0000 	 lds r25,cmdremain+1
 5549 0fae 892B      	 or r24,r25
 5550 0fb0 01F4      	 brne .L215
 5551 0fb2 0895      	 ret
 5552               	.L215:
 5553               	.LBB100:
 5554               	.LBB101:
 821:../dumbcraft/dumbcraft.c **** //	printf( "(+%d)", cmdremain );
 822:../dumbcraft/dumbcraft.c **** 	while( cmdremain-- )
 5555               	 .loc 1 822 0
 5556 0fb4 8091 0000 	 lds r24,cmdremain
 5557 0fb8 9091 0000 	 lds r25,cmdremain+1
 5558 0fbc 9C01      	 movw r18,r24
 5559 0fbe 2150      	 subi r18,1
 5560 0fc0 3109      	 sbc r19,__zero_reg__
 5561 0fc2 3093 0000 	 sts cmdremain+1,r19
 5562 0fc6 2093 0000 	 sts cmdremain,r18
 5563 0fca 892B      	 or r24,r25
 5564 0fcc 01F0      	 breq .L220
 823:../dumbcraft/dumbcraft.c **** 	{
 824:../dumbcraft/dumbcraft.c **** //		printf( "%02x ", Rbyte() );
GAS LISTING  			page 193


 825:../dumbcraft/dumbcraft.c **** 		Rbyte();
 5565               	 .loc 1 825 0
 5566 0fce 0E94 0000 	 call Rbyte
 5567               	.LVL344:
 5568 0fd2 00C0      	 rjmp .L215
 5569               	.L220:
 5570 0fd4 0895      	 ret
 5571               	.LBE101:
 5572               	.LBE100:
 5573               	 .cfi_endproc
 5574               	.LFE39:
 5576               	 .section .rodata.str1.1
 5577               	.LC2:
 5578 001e 7B22 7465 	 .string "{\"text\":\"<"
 5578      7874 223A 
 5578      223C 00
 5579               	 .text
 5580               	.global GotData
 5582               	GotData:
 5583               	.LFB40:
 826:../dumbcraft/dumbcraft.c **** 	}
 827:../dumbcraft/dumbcraft.c **** 
 828:../dumbcraft/dumbcraft.c **** 	return;
 829:../dumbcraft/dumbcraft.c **** }
 830:../dumbcraft/dumbcraft.c **** 
 831:../dumbcraft/dumbcraft.c **** //From user to dumbcraft (you call)
 832:../dumbcraft/dumbcraft.c **** void GotData( uint8_t playerno )
 833:../dumbcraft/dumbcraft.c **** {
 5584               	 .loc 1 833 0
 5585               	 .cfi_startproc
 5586               	.LVL345:
 5587 0fd6 2F92      	 push r2
 5588               	.LCFI127:
 5589               	 .cfi_def_cfa_offset 3
 5590               	 .cfi_offset 2,-2
 5591 0fd8 3F92      	 push r3
 5592               	.LCFI128:
 5593               	 .cfi_def_cfa_offset 4
 5594               	 .cfi_offset 3,-3
 5595 0fda 4F92      	 push r4
 5596               	.LCFI129:
 5597               	 .cfi_def_cfa_offset 5
 5598               	 .cfi_offset 4,-4
 5599 0fdc 5F92      	 push r5
 5600               	.LCFI130:
 5601               	 .cfi_def_cfa_offset 6
 5602               	 .cfi_offset 5,-5
 5603 0fde 6F92      	 push r6
 5604               	.LCFI131:
 5605               	 .cfi_def_cfa_offset 7
 5606               	 .cfi_offset 6,-6
 5607 0fe0 7F92      	 push r7
 5608               	.LCFI132:
 5609               	 .cfi_def_cfa_offset 8
 5610               	 .cfi_offset 7,-7
 5611 0fe2 8F92      	 push r8
 5612               	.LCFI133:
GAS LISTING  			page 194


 5613               	 .cfi_def_cfa_offset 9
 5614               	 .cfi_offset 8,-8
 5615 0fe4 9F92      	 push r9
 5616               	.LCFI134:
 5617               	 .cfi_def_cfa_offset 10
 5618               	 .cfi_offset 9,-9
 5619 0fe6 AF92      	 push r10
 5620               	.LCFI135:
 5621               	 .cfi_def_cfa_offset 11
 5622               	 .cfi_offset 10,-10
 5623 0fe8 BF92      	 push r11
 5624               	.LCFI136:
 5625               	 .cfi_def_cfa_offset 12
 5626               	 .cfi_offset 11,-11
 5627 0fea CF92      	 push r12
 5628               	.LCFI137:
 5629               	 .cfi_def_cfa_offset 13
 5630               	 .cfi_offset 12,-12
 5631 0fec DF92      	 push r13
 5632               	.LCFI138:
 5633               	 .cfi_def_cfa_offset 14
 5634               	 .cfi_offset 13,-13
 5635 0fee EF92      	 push r14
 5636               	.LCFI139:
 5637               	 .cfi_def_cfa_offset 15
 5638               	 .cfi_offset 14,-14
 5639 0ff0 FF92      	 push r15
 5640               	.LCFI140:
 5641               	 .cfi_def_cfa_offset 16
 5642               	 .cfi_offset 15,-15
 5643 0ff2 0F93      	 push r16
 5644               	.LCFI141:
 5645               	 .cfi_def_cfa_offset 17
 5646               	 .cfi_offset 16,-16
 5647 0ff4 1F93      	 push r17
 5648               	.LCFI142:
 5649               	 .cfi_def_cfa_offset 18
 5650               	 .cfi_offset 17,-17
 5651 0ff6 CF93      	 push r28
 5652               	.LCFI143:
 5653               	 .cfi_def_cfa_offset 19
 5654               	 .cfi_offset 28,-18
 5655 0ff8 DF93      	 push r29
 5656               	.LCFI144:
 5657               	 .cfi_def_cfa_offset 20
 5658               	 .cfi_offset 29,-19
 5659 0ffa 00D0      	 rcall .
 5660 0ffc 00D0      	 rcall .
 5661 0ffe 1F92      	 push __zero_reg__
 5662               	.LCFI145:
 5663               	 .cfi_def_cfa_offset 25
 5664 1000 CDB7      	 in r28,__SP_L__
 5665 1002 DEB7      	 in r29,__SP_H__
 5666               	.LCFI146:
 5667               	 .cfi_def_cfa_register 28
 5668               	 
 5669               	 
GAS LISTING  			page 195


 5670               	 
 5671               	.L__stack_usage =23
 834:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 835:../dumbcraft/dumbcraft.c **** 	static uint8_t lastcmd;
 836:../dumbcraft/dumbcraft.c **** #endif
 837:../dumbcraft/dumbcraft.c **** 	uint8_t i8;
 838:../dumbcraft/dumbcraft.c **** 	uint16_t i16;
 839:../dumbcraft/dumbcraft.c **** 	playerid = playerno;
 840:../dumbcraft/dumbcraft.c **** 	struct Player * p = &Players[playerid];
 841:../dumbcraft/dumbcraft.c **** 	uint8_t * chat = 0;
 842:../dumbcraft/dumbcraft.c **** 	uint8_t chatlen = 0;
 843:../dumbcraft/dumbcraft.c **** //	uint8_t skip_cmd = 0;
 844:../dumbcraft/dumbcraft.c **** 
 845:../dumbcraft/dumbcraft.c **** 	//This is where we read in a packet from a client.
 846:../dumbcraft/dumbcraft.c **** 	//You can send to the broadcast cicular buffer, but you
 847:../dumbcraft/dumbcraft.c **** 	// MAY NOT! send back to the sender unless you wait till the end
 848:../dumbcraft/dumbcraft.c **** 	//even then that is a prohibitively bad idea!
 849:../dumbcraft/dumbcraft.c **** 
 850:../dumbcraft/dumbcraft.c **** 	while( CanRead() )
 851:../dumbcraft/dumbcraft.c **** 	{
 852:../dumbcraft/dumbcraft.c **** 		cmdremain = 0xffff;
 853:../dumbcraft/dumbcraft.c **** 		cmdremain = Rvarint();
 854:../dumbcraft/dumbcraft.c **** //		if( cmdremain > 127 ) cmdremain-=2;
 855:../dumbcraft/dumbcraft.c **** //		else cmdremain--;
 856:../dumbcraft/dumbcraft.c **** 		uint8_t cmd = dcrbyte();
 857:../dumbcraft/dumbcraft.c **** /*
 858:../dumbcraft/dumbcraft.c **** sendchr(0);sendchr( '%' );
 859:../dumbcraft/dumbcraft.c **** sendhex4(cmd);
 860:../dumbcraft/dumbcraft.c **** sendchr('\n');
 861:../dumbcraft/dumbcraft.c **** */
 862:../dumbcraft/dumbcraft.c **** 		if( p->handshake_state == 0 )
 863:../dumbcraft/dumbcraft.c **** 		{
 864:../dumbcraft/dumbcraft.c **** 			if( cmd == 0 )
 865:../dumbcraft/dumbcraft.c **** 			{
 866:../dumbcraft/dumbcraft.c **** 				i16 = Rvarint();
 867:../dumbcraft/dumbcraft.c **** 				if( i16 != PROTO_VERSION )
 868:../dumbcraft/dumbcraft.c **** 				{
 869:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 870:../dumbcraft/dumbcraft.c **** 					printf("wrong version; got: %d; expected %d\n", i16, PROTO_VERSION );
 871:../dumbcraft/dumbcraft.c **** #endif
 872:../dumbcraft/dumbcraft.c **** 					ForcePlayerClose( playerid, 'v' );				
 873:../dumbcraft/dumbcraft.c **** 				}
 874:../dumbcraft/dumbcraft.c **** 				Rstring( 0, 0 ); //server
 875:../dumbcraft/dumbcraft.c **** 				Rshort(); //port
 876:../dumbcraft/dumbcraft.c **** 				p->handshake_state = Rvarint();
 877:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 878:../dumbcraft/dumbcraft.c **** 				printf("Client switched mode to: %d\n", p->handshake_state );
 879:../dumbcraft/dumbcraft.c **** #endif
 880:../dumbcraft/dumbcraft.c **** 			}
 881:../dumbcraft/dumbcraft.c **** 		}
 882:../dumbcraft/dumbcraft.c **** 		else if( p->handshake_state == 1 ) //Status
 883:../dumbcraft/dumbcraft.c **** 		{
 884:../dumbcraft/dumbcraft.c **** 			switch( cmd )
 885:../dumbcraft/dumbcraft.c **** 			{
 886:../dumbcraft/dumbcraft.c **** 				case 0x00: //Request
 887:../dumbcraft/dumbcraft.c **** 					p->need_to_send_playerlist = 1;					
 888:../dumbcraft/dumbcraft.c **** 					break;
GAS LISTING  			page 196


 889:../dumbcraft/dumbcraft.c **** 				case 0x01: //Ping
 890:../dumbcraft/dumbcraft.c **** 					Rbuffer( p->playername, 8 );
 891:../dumbcraft/dumbcraft.c **** 					p->need_to_reply_to_ping = 1;
 892:../dumbcraft/dumbcraft.c **** 					break;
 893:../dumbcraft/dumbcraft.c **** 				default:
 894:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 895:../dumbcraft/dumbcraft.c **** 					printf( "Unknown status request (%d)\n", cmd );
 896:../dumbcraft/dumbcraft.c **** #endif
 897:../dumbcraft/dumbcraft.c **** 					break;
 898:../dumbcraft/dumbcraft.c **** 			}
 899:../dumbcraft/dumbcraft.c **** 		}
 900:../dumbcraft/dumbcraft.c **** 		else if( p->handshake_state == 2 )
 901:../dumbcraft/dumbcraft.c **** 		{
 902:../dumbcraft/dumbcraft.c **** 			switch( cmd )
 903:../dumbcraft/dumbcraft.c **** 			{
 904:../dumbcraft/dumbcraft.c **** 			case 0x00:
 905:../dumbcraft/dumbcraft.c **** 				Rstring( (char*)p->playername, MAX_PLAYER_NAME-1 );
 906:../dumbcraft/dumbcraft.c **** 				p->playername[MAX_PLAYER_NAME-1] = 0;
 907:../dumbcraft/dumbcraft.c **** 				p->need_to_login = 1;
 908:../dumbcraft/dumbcraft.c **** 				p->handshake_state = 3;
 909:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 910:../dumbcraft/dumbcraft.c **** 				printf( "Player Login, switching handshake_state.\n" );
 911:../dumbcraft/dumbcraft.c **** #endif
 912:../dumbcraft/dumbcraft.c **** 
 913:../dumbcraft/dumbcraft.c **** 				break;
 914:../dumbcraft/dumbcraft.c **** 			default:
 915:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
 916:../dumbcraft/dumbcraft.c **** 				printf( "Confusing packet for mode 2.\n" );
 917:../dumbcraft/dumbcraft.c **** #endif
 918:../dumbcraft/dumbcraft.c **** 				break;
 919:../dumbcraft/dumbcraft.c **** 			}
 920:../dumbcraft/dumbcraft.c **** 		}
 921:../dumbcraft/dumbcraft.c **** 
 922:../dumbcraft/dumbcraft.c **** 
 923:../dumbcraft/dumbcraft.c **** 		switch( cmd )
 924:../dumbcraft/dumbcraft.c **** 		{
 925:../dumbcraft/dumbcraft.c **** 
 926:../dumbcraft/dumbcraft.c **** 		case 0x00:
 927:../dumbcraft/dumbcraft.c **** 			p->need_to_send_keepalive = 1;
 928:../dumbcraft/dumbcraft.c **** 			Rint();
 929:../dumbcraft/dumbcraft.c **** 			//keep alive?
 930:../dumbcraft/dumbcraft.c **** 			//p->keepalive_id = Rint();
 931:../dumbcraft/dumbcraft.c **** 			break;
 932:../dumbcraft/dumbcraft.c **** 
 933:../dumbcraft/dumbcraft.c **** 		case 0x01: //Handle chat
 934:../dumbcraft/dumbcraft.c **** 			i16 = Rvarint();
 935:../dumbcraft/dumbcraft.c **** 
 936:../dumbcraft/dumbcraft.c **** 			chatlen = ((i16)<MAX_CHATLEN)?i16:MAX_CHATLEN;
 937:../dumbcraft/dumbcraft.c **** 			chat = alloca( chatlen+1 );
 938:../dumbcraft/dumbcraft.c **** 			i8 = 0;
 939:../dumbcraft/dumbcraft.c **** 
 940:../dumbcraft/dumbcraft.c **** 			while( i16-- )
 941:../dumbcraft/dumbcraft.c **** 			{
 942:../dumbcraft/dumbcraft.c **** 				if( i8 < chatlen )
 943:../dumbcraft/dumbcraft.c **** 				{
 944:../dumbcraft/dumbcraft.c **** 					chat[i8++] = dcrbyte();
 945:../dumbcraft/dumbcraft.c **** 				}
GAS LISTING  			page 197


 946:../dumbcraft/dumbcraft.c **** 			}
 947:../dumbcraft/dumbcraft.c **** 			chatlen++;
 948:../dumbcraft/dumbcraft.c **** 			chat[i8] = 0;
 949:../dumbcraft/dumbcraft.c **** 			break;
 950:../dumbcraft/dumbcraft.c **** 
 951:../dumbcraft/dumbcraft.c **** 		case 0x02: //Use Entity
 952:../dumbcraft/dumbcraft.c **** 			Rint();	 //Target
 953:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Mouse
 954:../dumbcraft/dumbcraft.c **** 			break;
 955:../dumbcraft/dumbcraft.c **** 
 956:../dumbcraft/dumbcraft.c **** 		case 0x03: //On-ground, client sends this to an annyoing degree.
 957:../dumbcraft/dumbcraft.c **** 			p->onground = dcrbyte();
 958:../dumbcraft/dumbcraft.c **** 			break;
 959:../dumbcraft/dumbcraft.c **** 
 960:../dumbcraft/dumbcraft.c **** 		case 0x04: //Player position
 961:../dumbcraft/dumbcraft.c **** 			p->x = Rdouble();
 962:../dumbcraft/dumbcraft.c **** 			p->y = Rdouble();
 963:../dumbcraft/dumbcraft.c **** 			p->stance = Rdouble();
 964:../dumbcraft/dumbcraft.c **** 			p->z = Rdouble();
 965:../dumbcraft/dumbcraft.c **** 			p->onground = dcrbyte();
 966:../dumbcraft/dumbcraft.c **** 			break;
 967:../dumbcraft/dumbcraft.c **** 
 968:../dumbcraft/dumbcraft.c **** 		case 0x06: //Player Position and look
 969:../dumbcraft/dumbcraft.c **** 			p->x = Rdouble();
 970:../dumbcraft/dumbcraft.c **** 			p->y = Rdouble();
 971:../dumbcraft/dumbcraft.c **** 			p->stance = Rdouble();
 972:../dumbcraft/dumbcraft.c **** 			p->z = Rdouble();
 973:../dumbcraft/dumbcraft.c **** 		case 0x05: //Player look, only.
 974:../dumbcraft/dumbcraft.c **** 			p->yaw = Rfloat();
 975:../dumbcraft/dumbcraft.c **** 			p->pitch = Rfloat();
 976:../dumbcraft/dumbcraft.c **** 			p->nyaw = p->yaw/45;    //XXX TODO PROBABLY SLOW seems to add <256 bytes, though.  Is there a be
 977:../dumbcraft/dumbcraft.c **** 			p->npitch = p->pitch/45;//XXX TODO PROBABLY SLOW
 978:../dumbcraft/dumbcraft.c **** 			p->onground = dcrbyte();
 979:../dumbcraft/dumbcraft.c **** 			break;
 980:../dumbcraft/dumbcraft.c **** #ifdef NEED_PLAYER_BLOCK_ACTION
 981:../dumbcraft/dumbcraft.c **** 		case 0x07: //player digging.
 982:../dumbcraft/dumbcraft.c **** 		{
 983:../dumbcraft/dumbcraft.c **** 			uint8_t status = dcrbyte(); //action player is taking against block
 984:../dumbcraft/dumbcraft.c **** 			uint8_t x = Rint(); //block pos X
 985:../dumbcraft/dumbcraft.c **** 			uint8_t y = dcrbyte(); //block pos Y
 986:../dumbcraft/dumbcraft.c **** 			uint8_t z = Rint(); //block pos Z
 987:../dumbcraft/dumbcraft.c **** 			uint8_t face = dcrbyte(); //which face?
 988:../dumbcraft/dumbcraft.c **** 			
 989:../dumbcraft/dumbcraft.c **** 			PlayerBlockAction( status, x, y, z, face );
 990:../dumbcraft/dumbcraft.c **** 			break;
 991:../dumbcraft/dumbcraft.c **** 		}
 992:../dumbcraft/dumbcraft.c **** #endif
 993:../dumbcraft/dumbcraft.c **** #ifdef NEED_PLAYER_CLICK
 994:../dumbcraft/dumbcraft.c **** 		case 0x08:	//Block placement / right-click, used for levers.
 995:../dumbcraft/dumbcraft.c **** 		{
 996:../dumbcraft/dumbcraft.c **** 			uint8_t x, y, z;
 997:../dumbcraft/dumbcraft.c **** 			Rposition( &x, &y, &z );
 998:../dumbcraft/dumbcraft.c **** 			uint8_t dir = dcrbyte();
 999:../dumbcraft/dumbcraft.c **** 			/*uint8_t sl = */	Rslot();
1000:../dumbcraft/dumbcraft.c **** 			dcrbyte();
1001:../dumbcraft/dumbcraft.c **** 			dcrbyte();
1002:../dumbcraft/dumbcraft.c **** 			dcrbyte();
GAS LISTING  			page 198


1003:../dumbcraft/dumbcraft.c **** 			PlayerClick( x, y, z, dir );
1004:../dumbcraft/dumbcraft.c **** 			break;
1005:../dumbcraft/dumbcraft.c **** 			
1006:../dumbcraft/dumbcraft.c **** 		}
1007:../dumbcraft/dumbcraft.c **** #endif
1008:../dumbcraft/dumbcraft.c **** #ifdef NEED_SLOT_CHANGE
1009:../dumbcraft/dumbcraft.c **** 		case 0x09:  //Held item change
1010:../dumbcraft/dumbcraft.c **** 			PlayerChangeSlot( Rshort() );
1011:../dumbcraft/dumbcraft.c **** 			break;
1012:../dumbcraft/dumbcraft.c **** #endif
1013:../dumbcraft/dumbcraft.c **** 
1014:../dumbcraft/dumbcraft.c **** //XXX: BETWEEN HERE AND BELOW MAY NOT BE NEEDED FOR SMALL SYSTEMS
1015:../dumbcraft/dumbcraft.c **** /*
1016:../dumbcraft/dumbcraft.c **** 
1017:../dumbcraft/dumbcraft.c **** 		case 0x0a: //animation
1018:../dumbcraft/dumbcraft.c **** 			Rint(); //pid
1019:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //animation id
1020:../dumbcraft/dumbcraft.c **** 			break;
1021:../dumbcraft/dumbcraft.c **** 
1022:../dumbcraft/dumbcraft.c **** 		case 0x0b: //Entity action
1023:../dumbcraft/dumbcraft.c **** 			Rint(); //eid
1024:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //action id
1025:../dumbcraft/dumbcraft.c **** 			Rint(); //jump boost
1026:../dumbcraft/dumbcraft.c **** 			break;
1027:../dumbcraft/dumbcraft.c **** 
1028:../dumbcraft/dumbcraft.c **** 		case 0x0c: //Steer vehicle
1029:../dumbcraft/dumbcraft.c **** 			Rfloat(); //sideways
1030:../dumbcraft/dumbcraft.c **** 			Rfloat(); //forward
1031:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //jump
1032:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //unmount
1033:../dumbcraft/dumbcraft.c **** 			break;
1034:../dumbcraft/dumbcraft.c **** 
1035:../dumbcraft/dumbcraft.c **** 
1036:../dumbcraft/dumbcraft.c **** 		case 0x0d: //Close window
1037:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //window ID
1038:../dumbcraft/dumbcraft.c **** 			break;
1039:../dumbcraft/dumbcraft.c **** 
1040:../dumbcraft/dumbcraft.c **** 		case 0x0e: //click window
1041:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Window ID
1042:../dumbcraft/dumbcraft.c **** 			Rshort(); //Slot
1043:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //button
1044:../dumbcraft/dumbcraft.c **** 			Rshort(); //action #
1045:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //mode
1046:../dumbcraft/dumbcraft.c **** 			Rslot(); //clicked item
1047:../dumbcraft/dumbcraft.c **** 			break;
1048:../dumbcraft/dumbcraft.c **** 
1049:../dumbcraft/dumbcraft.c **** 		case 0x0f: //Confirm transaction
1050:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Window ID
1051:../dumbcraft/dumbcraft.c **** 			Rshort(); //action #
1052:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //confirmed?
1053:../dumbcraft/dumbcraft.c **** 			break;
1054:../dumbcraft/dumbcraft.c **** 
1055:../dumbcraft/dumbcraft.c **** 		case 0x10: //Creative Inventory Action
1056:../dumbcraft/dumbcraft.c **** 			Rshort();
1057:../dumbcraft/dumbcraft.c **** 			Rslot();
1058:../dumbcraft/dumbcraft.c **** 			break;
1059:../dumbcraft/dumbcraft.c **** 
GAS LISTING  			page 199


1060:../dumbcraft/dumbcraft.c **** 		case 0x11: //Enchant Item
1061:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Window
1062:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Enchantment
1063:../dumbcraft/dumbcraft.c **** 			break;
1064:../dumbcraft/dumbcraft.c **** 
1065:../dumbcraft/dumbcraft.c **** 		case 0x12: //Update Sign
1066:../dumbcraft/dumbcraft.c **** 			Rint();   //X
1067:../dumbcraft/dumbcraft.c **** 			Rshort(); //Y
1068:../dumbcraft/dumbcraft.c **** 			Rint();   //Z
1069:../dumbcraft/dumbcraft.c **** 			Rstring( 0, 0 ); //Line 1
1070:../dumbcraft/dumbcraft.c **** 			Rstring( 0, 0 ); //Line 2
1071:../dumbcraft/dumbcraft.c **** 			Rstring( 0, 0 ); //Line 3
1072:../dumbcraft/dumbcraft.c **** 			Rstring( 0, 0 ); //Line 4
1073:../dumbcraft/dumbcraft.c **** 			break;
1074:../dumbcraft/dumbcraft.c **** 
1075:../dumbcraft/dumbcraft.c **** 		case 0x13:	//Player abilities
1076:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //flags
1077:../dumbcraft/dumbcraft.c **** 			Rfloat(); //flying speed
1078:../dumbcraft/dumbcraft.c **** 			Rfloat(); //walking speed
1079:../dumbcraft/dumbcraft.c **** 			break;
1080:../dumbcraft/dumbcraft.c **** 
1081:../dumbcraft/dumbcraft.c **** 		case 0x14: //Tab-complete.
1082:../dumbcraft/dumbcraft.c **** 			Rstring( 0,0); //text so far
1083:../dumbcraft/dumbcraft.c **** 			break;
1084:../dumbcraft/dumbcraft.c **** 
1085:../dumbcraft/dumbcraft.c **** */
1086:../dumbcraft/dumbcraft.c **** //End the probably unneded portion
1087:../dumbcraft/dumbcraft.c **** 		case 0x15: //Client settings
1088:../dumbcraft/dumbcraft.c **** 			Rstring( 0,0); //Locale
1089:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //view distance
1090:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Chat flags
1091:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //unused
1092:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Difficulty
1093:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Show cape
1094:../dumbcraft/dumbcraft.c **** 			break;
1095:../dumbcraft/dumbcraft.c **** 
1096:../dumbcraft/dumbcraft.c **** 		case 0x16:  //Client Status
1097:../dumbcraft/dumbcraft.c **** 			switch( dcrbyte() )
1098:../dumbcraft/dumbcraft.c **** 			{
1099:../dumbcraft/dumbcraft.c **** 			case 0x00: //perform respawn.
1100:../dumbcraft/dumbcraft.c **** 				p->need_to_respawn = 1;
1101:../dumbcraft/dumbcraft.c **** 				break;
1102:../dumbcraft/dumbcraft.c **** 				
1103:../dumbcraft/dumbcraft.c **** 			default:
1104:../dumbcraft/dumbcraft.c **** 				break;
1105:../dumbcraft/dumbcraft.c **** 			}
1106:../dumbcraft/dumbcraft.c **** 			break;
1107:../dumbcraft/dumbcraft.c **** 
1108:../dumbcraft/dumbcraft.c **** 		case 0x17://plugin message
1109:../dumbcraft/dumbcraft.c **** 			Rstring( 0,0 );
1110:../dumbcraft/dumbcraft.c **** 			Rdump( Rshort() );
1111:../dumbcraft/dumbcraft.c **** 			break;
1112:../dumbcraft/dumbcraft.c **** 
1113:../dumbcraft/dumbcraft.c **** 		default:
1114:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
1115:../dumbcraft/dumbcraft.c **** 			printf( "UCMD: (LAST) %02x - NOW: %02x\n", lastcmd, cmd );
1116:../dumbcraft/dumbcraft.c **** 			printf( "UPKT:\n" );
GAS LISTING  			page 200


1117:../dumbcraft/dumbcraft.c **** 			DumpRemain();
1118:../dumbcraft/dumbcraft.c **** #endif
1119:../dumbcraft/dumbcraft.c **** 			break;
1120:../dumbcraft/dumbcraft.c **** 		}
1121:../dumbcraft/dumbcraft.c **** 
1122:../dumbcraft/dumbcraft.c **** #ifdef DEBUG_DUMBCRAFT
1123:../dumbcraft/dumbcraft.c **** 		lastcmd = cmd;
1124:../dumbcraft/dumbcraft.c **** #endif
1125:../dumbcraft/dumbcraft.c **** 		DumpRemain();
1126:../dumbcraft/dumbcraft.c **** 	}
1127:../dumbcraft/dumbcraft.c **** 
1128:../dumbcraft/dumbcraft.c **** 	if( chatlen )
1129:../dumbcraft/dumbcraft.c **** 	{
1130:../dumbcraft/dumbcraft.c **** 		uint8_t pll = strlen( (char*)p->playername );
1131:../dumbcraft/dumbcraft.c **** 
1132:../dumbcraft/dumbcraft.c **** 		if( ClientHandleChat( (char*)chat, chatlen ) )
1133:../dumbcraft/dumbcraft.c **** 		{
1134:../dumbcraft/dumbcraft.c **** 			StartupBroadcast();			
1135:../dumbcraft/dumbcraft.c **** 			StartSend();
1136:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x02 );
1137:../dumbcraft/dumbcraft.c **** 			Svarint( chatlen + pll + 2 + 10 + 2 );
1138:../dumbcraft/dumbcraft.c **** 			Sbuffer( (const uint8_t*)"{\"text\":\"<", 10 );
1139:../dumbcraft/dumbcraft.c **** 			Sbuffer( p->playername, pll );
1140:../dumbcraft/dumbcraft.c **** 			Sbyte( '>' ) ;
1141:../dumbcraft/dumbcraft.c **** 			Sbyte( ' ' ) ;
1142:../dumbcraft/dumbcraft.c **** 			Sbuffer( chat, chatlen );
1143:../dumbcraft/dumbcraft.c **** 			Sbyte( '"' );
1144:../dumbcraft/dumbcraft.c **** 			Sbyte( '}' );
1145:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 );
1146:../dumbcraft/dumbcraft.c **** 			DoneSend();
1147:../dumbcraft/dumbcraft.c **** 			DoneBroadcast();
1148:../dumbcraft/dumbcraft.c **** 		}
1149:../dumbcraft/dumbcraft.c **** 	}
1150:../dumbcraft/dumbcraft.c **** }
 5672               	 .loc 1 1150 0
 5673 1004 6DB6      	 in r6,__SP_L__
 5674 1006 7EB6      	 in r7,__SP_H__
 839:../dumbcraft/dumbcraft.c **** 	playerid = playerno;
 5675               	 .loc 1 839 0
 5676 1008 8093 0000 	 sts playerid,r24
 840:../dumbcraft/dumbcraft.c **** 	struct Player * p = &Players[playerid];
 5677               	 .loc 1 840 0
 5678 100c 90E0      	 ldi r25,0
 5679 100e 66E3      	 ldi r22,lo8(54)
 5680 1010 70E0      	 ldi r23,0
 5681 1012 0E94 0000 	 call __mulhi3
 5682               	.LVL346:
 5683 1016 8C01      	 movw r16,r24
 5684 1018 0050      	 subi r16,lo8(-(Players))
 5685 101a 1040      	 sbci r17,hi8(-(Players))
 5686               	.LVL347:
 842:../dumbcraft/dumbcraft.c **** 	uint8_t chatlen = 0;
 5687               	 .loc 1 842 0
 5688 101c 912C      	 mov r9,__zero_reg__
 841:../dumbcraft/dumbcraft.c **** 	uint8_t * chat = 0;
 5689               	 .loc 1 841 0
 5690 101e 212C      	 mov r2,__zero_reg__
GAS LISTING  			page 201


 5691 1020 312C      	 mov r3,__zero_reg__
 5692               	.LBB102:
 976:../dumbcraft/dumbcraft.c **** 			p->nyaw = p->yaw/45;    //XXX TODO PROBABLY SLOW seems to add <256 bytes, though.  Is there a be
 5693               	 .loc 1 976 0
 5694 1022 EDE2      	 ldi r30,lo8(45)
 5695 1024 CE2E      	 mov r12,r30
 5696 1026 D12C      	 mov r13,__zero_reg__
 905:../dumbcraft/dumbcraft.c **** 				Rstring( (char*)p->playername, MAX_PLAYER_NAME-1 );
 5697               	 .loc 1 905 0
 5698 1028 5801      	 movw r10,r16
 5699 102a 45E2      	 ldi r20,37
 5700 102c A40E      	 add r10,r20
 5701 102e B11C      	 adc r11,__zero_reg__
 5702               	.LVL348:
 5703               	.L222:
 5704               	.LBE102:
 850:../dumbcraft/dumbcraft.c **** 	while( CanRead() )
 5705               	 .loc 1 850 0 discriminator 1
 5706 1030 0E94 0000 	 call CanRead
 5707               	.LVL349:
 5708 1034 8823      	 tst r24
 5709 1036 01F4      	 brne .+2
 5710 1038 00C0      	 rjmp .L261
 5711               	.LBB104:
 852:../dumbcraft/dumbcraft.c **** 		cmdremain = 0xffff;
 5712               	 .loc 1 852 0
 5713 103a 6FEF      	 ldi r22,lo8(-1)
 5714 103c 7FEF      	 ldi r23,lo8(-1)
 5715 103e 7093 0000 	 sts cmdremain+1,r23
 5716 1042 6093 0000 	 sts cmdremain,r22
 853:../dumbcraft/dumbcraft.c **** 		cmdremain = Rvarint();
 5717               	 .loc 1 853 0
 5718 1046 0E94 0000 	 call Rvarint
 5719               	.LVL350:
 5720 104a 9093 0000 	 sts cmdremain+1,r25
 5721 104e 8093 0000 	 sts cmdremain,r24
 856:../dumbcraft/dumbcraft.c **** 		uint8_t cmd = dcrbyte();
 5722               	 .loc 1 856 0
 5723 1052 0E94 0000 	 call dcrbyte
 5724               	.LVL351:
 862:../dumbcraft/dumbcraft.c **** 		if( p->handshake_state == 0 )
 5725               	 .loc 1 862 0
 5726 1056 F801      	 movw r30,r16
 5727 1058 91A1      	 ldd r25,Z+33
 5728 105a 9111      	 cpse r25,__zero_reg__
 5729 105c 00C0      	 rjmp .L223
 864:../dumbcraft/dumbcraft.c **** 			if( cmd == 0 )
 5730               	 .loc 1 864 0
 5731 105e 8111      	 cpse r24,__zero_reg__
 5732 1060 00C0      	 rjmp .L224
 866:../dumbcraft/dumbcraft.c **** 				i16 = Rvarint();
 5733               	 .loc 1 866 0
 5734 1062 0E94 0000 	 call Rvarint
 5735               	.LVL352:
 867:../dumbcraft/dumbcraft.c **** 				if( i16 != PROTO_VERSION )
 5736               	 .loc 1 867 0
 5737 1066 8F97      	 sbiw r24,47
GAS LISTING  			page 202


 5738 1068 01F0      	 breq .L225
 872:../dumbcraft/dumbcraft.c **** 					ForcePlayerClose( playerid, 'v' );				
 5739               	 .loc 1 872 0
 5740 106a 66E7      	 ldi r22,lo8(118)
 5741 106c 8091 0000 	 lds r24,playerid
 5742               	.LVL353:
 5743 1070 0E94 0000 	 call ForcePlayerClose
 5744               	.LVL354:
 5745               	.L225:
 874:../dumbcraft/dumbcraft.c **** 				Rstring( 0, 0 ); //server
 5746               	 .loc 1 874 0
 5747 1074 60E0      	 ldi r22,0
 5748 1076 70E0      	 ldi r23,0
 5749 1078 80E0      	 ldi r24,0
 5750 107a 90E0      	 ldi r25,0
 5751 107c 0E94 0000 	 call Rstring
 5752               	.LVL355:
 875:../dumbcraft/dumbcraft.c **** 				Rshort(); //port
 5753               	 .loc 1 875 0
 5754 1080 0E94 0000 	 call Rshort
 5755               	.LVL356:
 876:../dumbcraft/dumbcraft.c **** 				p->handshake_state = Rvarint();
 5756               	 .loc 1 876 0
 5757 1084 0E94 0000 	 call Rvarint
 5758               	.LVL357:
 5759 1088 F801      	 movw r30,r16
 5760 108a 81A3      	 std Z+33,r24
 5761 108c 00C0      	 rjmp .L233
 5762               	.LVL358:
 5763               	.L223:
 882:../dumbcraft/dumbcraft.c **** 		else if( p->handshake_state == 1 ) //Status
 5764               	 .loc 1 882 0
 5765 108e 9130      	 cpi r25,lo8(1)
 5766 1090 01F4      	 brne .L227
 884:../dumbcraft/dumbcraft.c **** 			switch( cmd )
 5767               	 .loc 1 884 0
 5768 1092 8823      	 tst r24
 5769 1094 01F0      	 breq .L228
 5770 1096 8130      	 cpi r24,lo8(1)
 5771 1098 01F4      	 brne .L224
 890:../dumbcraft/dumbcraft.c **** 					Rbuffer( p->playername, 8 );
 5772               	 .loc 1 890 0
 5773 109a 68E0      	 ldi r22,lo8(8)
 5774 109c C501      	 movw r24,r10
 5775               	.LVL359:
 5776 109e 0E94 0000 	 call Rbuffer
 5777               	.LVL360:
 891:../dumbcraft/dumbcraft.c **** 					p->need_to_reply_to_ping = 1;
 5778               	 .loc 1 891 0
 5779 10a2 F801      	 movw r30,r16
 5780 10a4 858D      	 ldd r24,Z+29
 5781 10a6 8064      	 ori r24,lo8(1<<6)
 5782 10a8 858F      	 std Z+29,r24
 5783 10aa 00C0      	 rjmp .L230
 5784               	.LVL361:
 5785               	.L228:
 887:../dumbcraft/dumbcraft.c **** 					p->need_to_send_playerlist = 1;					
GAS LISTING  			page 203


 5786               	 .loc 1 887 0
 5787 10ac F801      	 movw r30,r16
 5788 10ae 858D      	 ldd r24,Z+29
 5789               	.LVL362:
 5790 10b0 8260      	 ori r24,lo8(1<<1)
 5791 10b2 858F      	 std Z+29,r24
 888:../dumbcraft/dumbcraft.c **** 					break;
 5792               	 .loc 1 888 0
 5793 10b4 00C0      	 rjmp .L233
 5794               	.LVL363:
 5795               	.L227:
 900:../dumbcraft/dumbcraft.c **** 		else if( p->handshake_state == 2 )
 5796               	 .loc 1 900 0
 5797 10b6 9230      	 cpi r25,lo8(2)
 5798 10b8 01F4      	 brne .L224
 902:../dumbcraft/dumbcraft.c **** 			switch( cmd )
 5799               	 .loc 1 902 0
 5800 10ba 8111      	 cpse r24,__zero_reg__
 5801 10bc 00C0      	 rjmp .L224
 905:../dumbcraft/dumbcraft.c **** 				Rstring( (char*)p->playername, MAX_PLAYER_NAME-1 );
 5802               	 .loc 1 905 0
 5803 10be 60E1      	 ldi r22,lo8(16)
 5804 10c0 70E0      	 ldi r23,0
 5805 10c2 C501      	 movw r24,r10
 5806               	.LVL364:
 5807 10c4 0E94 0000 	 call Rstring
 5808               	.LVL365:
 906:../dumbcraft/dumbcraft.c **** 				p->playername[MAX_PLAYER_NAME-1] = 0;
 5809               	 .loc 1 906 0
 5810 10c8 F801      	 movw r30,r16
 5811 10ca 15AA      	 std Z+53,__zero_reg__
 907:../dumbcraft/dumbcraft.c **** 				p->need_to_login = 1;
 5812               	 .loc 1 907 0
 5813 10cc 858D      	 ldd r24,Z+29
 5814 10ce 8860      	 ori r24,lo8(1<<3)
 5815 10d0 858F      	 std Z+29,r24
 908:../dumbcraft/dumbcraft.c **** 				p->handshake_state = 3;
 5816               	 .loc 1 908 0
 5817 10d2 43E0      	 ldi r20,lo8(3)
 5818 10d4 41A3      	 std Z+33,r20
 913:../dumbcraft/dumbcraft.c **** 				break;
 5819               	 .loc 1 913 0
 5820 10d6 00C0      	 rjmp .L233
 5821               	.LVL366:
 5822               	.L224:
 923:../dumbcraft/dumbcraft.c **** 		switch( cmd )
 5823               	 .loc 1 923 0
 5824 10d8 90E0      	 ldi r25,0
 5825 10da 8831      	 cpi r24,24
 5826 10dc 9105      	 cpc r25,__zero_reg__
 5827 10de 00F0      	 brlo .+2
 5828 10e0 00C0      	 rjmp .L232
 5829 10e2 FC01      	 movw r30,r24
 5830 10e4 E050      	 subi r30,lo8(-(gs(.L234)))
 5831 10e6 F040      	 sbci r31,hi8(-(gs(.L234)))
 5832 10e8 0C94 0000 	 jmp __tablejump2__
 5833               	.LVL367:
GAS LISTING  			page 204


 5834               	 .section .progmem.gcc_sw_table,"a",@progbits
 5835               	 .p2align 1
 5836               	.L234:
 5837 0000 0000      	 .word gs(.L233)
 5838 0002 0000      	 .word gs(.L230)
 5839 0004 0000      	 .word gs(.L235)
 5840 0006 0000      	 .word gs(.L260)
 5841 0008 0000      	 .word gs(.L237)
 5842 000a 0000      	 .word gs(.L238)
 5843 000c 0000      	 .word gs(.L239)
 5844 000e 0000      	 .word gs(.L232)
 5845 0010 0000      	 .word gs(.L240)
 5846 0012 0000      	 .word gs(.L232)
 5847 0014 0000      	 .word gs(.L232)
 5848 0016 0000      	 .word gs(.L232)
 5849 0018 0000      	 .word gs(.L232)
 5850 001a 0000      	 .word gs(.L232)
 5851 001c 0000      	 .word gs(.L232)
 5852 001e 0000      	 .word gs(.L232)
 5853 0020 0000      	 .word gs(.L232)
 5854 0022 0000      	 .word gs(.L232)
 5855 0024 0000      	 .word gs(.L232)
 5856 0026 0000      	 .word gs(.L232)
 5857 0028 0000      	 .word gs(.L232)
 5858 002a 0000      	 .word gs(.L241)
 5859 002c 0000      	 .word gs(.L242)
 5860 002e 0000      	 .word gs(.L243)
 5861               	 .text
 5862               	.L233:
 927:../dumbcraft/dumbcraft.c **** 			p->need_to_send_keepalive = 1;
 5863               	 .loc 1 927 0
 5864 10ec F801      	 movw r30,r16
 5865 10ee 858D      	 ldd r24,Z+29
 5866 10f0 8061      	 ori r24,lo8(1<<4)
 5867 10f2 858F      	 std Z+29,r24
 928:../dumbcraft/dumbcraft.c **** 			Rint();
 5868               	 .loc 1 928 0
 5869 10f4 0E94 0000 	 call Rint
 5870               	.LVL368:
 931:../dumbcraft/dumbcraft.c **** 			break;
 5871               	 .loc 1 931 0
 5872 10f8 00C0      	 rjmp .L232
 5873               	.L230:
 934:../dumbcraft/dumbcraft.c **** 			i16 = Rvarint();
 5874               	 .loc 1 934 0
 5875 10fa 0E94 0000 	 call Rvarint
 5876               	.LVL369:
 936:../dumbcraft/dumbcraft.c **** 			chatlen = ((i16)<MAX_CHATLEN)?i16:MAX_CHATLEN;
 5877               	 .loc 1 936 0
 5878 10fe AC01      	 movw r20,r24
 5879 1100 8536      	 cpi r24,101
 5880 1102 9105      	 cpc r25,__zero_reg__
 5881 1104 00F0      	 brlo .L244
 5882 1106 44E6      	 ldi r20,lo8(100)
 5883 1108 50E0      	 ldi r21,0
 5884               	.L244:
 5885 110a 242F      	 mov r18,r20
GAS LISTING  			page 205


 5886               	.LVL370:
 937:../dumbcraft/dumbcraft.c **** 			chat = alloca( chatlen+1 );
 5887               	 .loc 1 937 0
 5888 110c 4F5F      	 subi r20,-1
 5889 110e 5F4F      	 sbci r21,-1
 5890               	.LVL371:
 5891 1110 6DB7      	 in r22,__SP_L__
 5892 1112 7EB7      	 in r23,__SP_H__
 5893 1114 641B      	 sub r22,r20
 5894 1116 750B      	 sbc r23,r21
 5895 1118 0FB6      	 in __tmp_reg__,__SREG__
 5896 111a F894      	 cli
 5897 111c 7EBF      	 out __SP_H__,r23
 5898 111e 0FBE      	 out __SREG__,__tmp_reg__
 5899 1120 6DBF      	 out __SP_L__,r22
 5900 1122 EDB7      	 in r30,__SP_L__
 5901 1124 FEB7      	 in r31,__SP_H__
 5902 1126 3196      	 adiw r30,1
 5903 1128 7F01      	 movw r14,r30
 5904 112a 1F01      	 movw r2,r30
 5905               	.LVL372:
 940:../dumbcraft/dumbcraft.c **** 			while( i16-- )
 5906               	 .loc 1 940 0
 5907 112c 2C01      	 movw r4,r24
 938:../dumbcraft/dumbcraft.c **** 			i8 = 0;
 5908               	 .loc 1 938 0
 5909 112e 80E0      	 ldi r24,0
 5910               	.LVL373:
 5911               	.L245:
 940:../dumbcraft/dumbcraft.c **** 			while( i16-- )
 5912               	 .loc 1 940 0 discriminator 1
 5913 1130 4114      	 cp r4,__zero_reg__
 5914 1132 5104      	 cpc r5,__zero_reg__
 5915 1134 01F0      	 breq .L262
 942:../dumbcraft/dumbcraft.c **** 				if( i8 < chatlen )
 5916               	 .loc 1 942 0
 5917 1136 8217      	 cp r24,r18
 5918 1138 00F4      	 brsh .L246
 944:../dumbcraft/dumbcraft.c **** 					chat[i8++] = dcrbyte();
 5919               	 .loc 1 944 0
 5920 113a 91E0      	 ldi r25,lo8(1)
 5921 113c 980F      	 add r25,r24
 5922               	.LVL374:
 5923 113e 4701      	 movw r8,r14
 5924 1140 880E      	 add r8,r24
 5925 1142 911C      	 adc r9,__zero_reg__
 5926 1144 2D83      	 std Y+5,r18
 5927 1146 9C83      	 std Y+4,r25
 5928 1148 0E94 0000 	 call dcrbyte
 5929               	.LVL375:
 5930 114c F401      	 movw r30,r8
 5931 114e 8083      	 st Z,r24
 5932 1150 9C81      	 ldd r25,Y+4
 5933 1152 892F      	 mov r24,r25
 5934 1154 2D81      	 ldd r18,Y+5
 5935               	.L246:
 5936 1156 F1E0      	 ldi r31,1
GAS LISTING  			page 206


 5937 1158 4F1A      	 sub r4,r31
 5938 115a 5108      	 sbc r5,__zero_reg__
 5939               	.LVL376:
 5940 115c 00C0      	 rjmp .L245
 5941               	.LVL377:
 5942               	.L262:
 947:../dumbcraft/dumbcraft.c **** 			chatlen++;
 5943               	 .loc 1 947 0
 5944 115e 9924      	 clr r9
 5945 1160 9394      	 inc r9
 5946 1162 920E      	 add r9,r18
 5947               	.LVL378:
 948:../dumbcraft/dumbcraft.c **** 			chat[i8] = 0;
 5948               	 .loc 1 948 0
 5949 1164 F701      	 movw r30,r14
 5950 1166 E80F      	 add r30,r24
 5951 1168 F11D      	 adc r31,__zero_reg__
 5952 116a 1082      	 st Z,__zero_reg__
 949:../dumbcraft/dumbcraft.c **** 			break;
 5953               	 .loc 1 949 0
 5954 116c 00C0      	 rjmp .L232
 5955               	.LVL379:
 5956               	.L235:
 952:../dumbcraft/dumbcraft.c **** 			Rint();	 //Target
 5957               	 .loc 1 952 0
 5958 116e 0E94 0000 	 call Rint
 5959               	.LVL380:
 5960 1172 00C0      	 rjmp .L259
 5961               	.L237:
 961:../dumbcraft/dumbcraft.c **** 			p->x = Rdouble();
 5962               	 .loc 1 961 0
 5963 1174 0E94 0000 	 call Rdouble
 5964               	.LVL381:
 5965 1178 F801      	 movw r30,r16
 5966 117a 9383      	 std Z+3,r25
 5967 117c 8283      	 std Z+2,r24
 962:../dumbcraft/dumbcraft.c **** 			p->y = Rdouble();
 5968               	 .loc 1 962 0
 5969 117e 0E94 0000 	 call Rdouble
 5970               	.LVL382:
 5971 1182 F801      	 movw r30,r16
 5972 1184 9583      	 std Z+5,r25
 5973 1186 8483      	 std Z+4,r24
 963:../dumbcraft/dumbcraft.c **** 			p->stance = Rdouble();
 5974               	 .loc 1 963 0
 5975 1188 0E94 0000 	 call Rdouble
 5976               	.LVL383:
 5977 118c F801      	 movw r30,r16
 5978 118e 9783      	 std Z+7,r25
 5979 1190 8683      	 std Z+6,r24
 964:../dumbcraft/dumbcraft.c **** 			p->z = Rdouble();
 5980               	 .loc 1 964 0
 5981 1192 0E94 0000 	 call Rdouble
 5982               	.LVL384:
 5983 1196 F801      	 movw r30,r16
 5984 1198 9187      	 std Z+9,r25
 5985 119a 8087      	 std Z+8,r24
GAS LISTING  			page 207


 5986               	.L260:
 965:../dumbcraft/dumbcraft.c **** 			p->onground = dcrbyte();
 5987               	 .loc 1 965 0
 5988 119c 0E94 0000 	 call dcrbyte
 5989               	.LVL385:
 5990 11a0 F801      	 movw r30,r16
 5991 11a2 948D      	 ldd r25,Z+28
 5992 11a4 80FB      	 bst r24,0
 5993 11a6 96F9      	 bld r25,6
 5994 11a8 948F      	 std Z+28,r25
 966:../dumbcraft/dumbcraft.c **** 			break;
 5995               	 .loc 1 966 0
 5996 11aa 00C0      	 rjmp .L232
 5997               	.L239:
 969:../dumbcraft/dumbcraft.c **** 			p->x = Rdouble();
 5998               	 .loc 1 969 0
 5999 11ac 0E94 0000 	 call Rdouble
 6000               	.LVL386:
 6001 11b0 F801      	 movw r30,r16
 6002 11b2 9383      	 std Z+3,r25
 6003 11b4 8283      	 std Z+2,r24
 970:../dumbcraft/dumbcraft.c **** 			p->y = Rdouble();
 6004               	 .loc 1 970 0
 6005 11b6 0E94 0000 	 call Rdouble
 6006               	.LVL387:
 6007 11ba F801      	 movw r30,r16
 6008 11bc 9583      	 std Z+5,r25
 6009 11be 8483      	 std Z+4,r24
 971:../dumbcraft/dumbcraft.c **** 			p->stance = Rdouble();
 6010               	 .loc 1 971 0
 6011 11c0 0E94 0000 	 call Rdouble
 6012               	.LVL388:
 6013 11c4 F801      	 movw r30,r16
 6014 11c6 9783      	 std Z+7,r25
 6015 11c8 8683      	 std Z+6,r24
 972:../dumbcraft/dumbcraft.c **** 			p->z = Rdouble();
 6016               	 .loc 1 972 0
 6017 11ca 0E94 0000 	 call Rdouble
 6018               	.LVL389:
 6019 11ce F801      	 movw r30,r16
 6020 11d0 9187      	 std Z+9,r25
 6021 11d2 8087      	 std Z+8,r24
 6022               	.L238:
 974:../dumbcraft/dumbcraft.c **** 			p->yaw = Rfloat();
 6023               	 .loc 1 974 0
 6024 11d4 0E94 0000 	 call Rfloat
 6025               	.LVL390:
 6026 11d8 F801      	 movw r30,r16
 6027 11da 9387      	 std Z+11,r25
 6028 11dc 8287      	 std Z+10,r24
 975:../dumbcraft/dumbcraft.c **** 			p->pitch = Rfloat();
 6029               	 .loc 1 975 0
 6030 11de 0E94 0000 	 call Rfloat
 6031               	.LVL391:
 6032 11e2 9C01      	 movw r18,r24
 6033 11e4 F801      	 movw r30,r16
 6034 11e6 9587      	 std Z+13,r25
GAS LISTING  			page 208


 6035 11e8 8487      	 std Z+12,r24
 976:../dumbcraft/dumbcraft.c **** 			p->nyaw = p->yaw/45;    //XXX TODO PROBABLY SLOW seems to add <256 bytes, though.  Is there a be
 6036               	 .loc 1 976 0
 6037 11ea 8285      	 ldd r24,Z+10
 6038 11ec 9385      	 ldd r25,Z+11
 6039 11ee B601      	 movw r22,r12
 6040 11f0 0E94 0000 	 call __divmodhi4
 6041 11f4 628F      	 std Z+26,r22
 977:../dumbcraft/dumbcraft.c **** 			p->npitch = p->pitch/45;//XXX TODO PROBABLY SLOW
 6042               	 .loc 1 977 0
 6043 11f6 C901      	 movw r24,r18
 6044 11f8 B601      	 movw r22,r12
 6045 11fa 0E94 0000 	 call __divmodhi4
 6046 11fe 638F      	 std Z+27,r22
 6047 1200 00C0      	 rjmp .L260
 6048               	.L240:
 6049               	.LBB103:
 997:../dumbcraft/dumbcraft.c **** 			Rposition( &x, &y, &z );
 6050               	 .loc 1 997 0
 6051 1202 AE01      	 movw r20,r28
 6052 1204 4F5F      	 subi r20,-1
 6053 1206 5F4F      	 sbci r21,-1
 6054 1208 BE01      	 movw r22,r28
 6055 120a 6E5F      	 subi r22,-2
 6056 120c 7F4F      	 sbci r23,-1
 6057 120e CE01      	 movw r24,r28
 6058 1210 0396      	 adiw r24,3
 6059 1212 0E94 0000 	 call Rposition
 6060               	.LVL392:
 998:../dumbcraft/dumbcraft.c **** 			uint8_t dir = dcrbyte();
 6061               	 .loc 1 998 0
 6062 1216 0E94 0000 	 call dcrbyte
 6063               	.LVL393:
 999:../dumbcraft/dumbcraft.c **** 			/*uint8_t sl = */	Rslot();
 6064               	 .loc 1 999 0
 6065 121a 8D83      	 std Y+5,r24
 6066 121c 0E94 0000 	 call Rslot
 6067               	.LVL394:
1000:../dumbcraft/dumbcraft.c **** 			dcrbyte();
 6068               	 .loc 1 1000 0
 6069 1220 0E94 0000 	 call dcrbyte
 6070               	.LVL395:
1001:../dumbcraft/dumbcraft.c **** 			dcrbyte();
 6071               	 .loc 1 1001 0
 6072 1224 0E94 0000 	 call dcrbyte
 6073               	.LVL396:
1002:../dumbcraft/dumbcraft.c **** 			dcrbyte();
 6074               	 .loc 1 1002 0
 6075 1228 0E94 0000 	 call dcrbyte
 6076               	.LVL397:
1003:../dumbcraft/dumbcraft.c **** 			PlayerClick( x, y, z, dir );
 6077               	 .loc 1 1003 0
 6078 122c 2D81      	 ldd r18,Y+5
 6079 122e 4981      	 ldd r20,Y+1
 6080 1230 6A81      	 ldd r22,Y+2
 6081 1232 8B81      	 ldd r24,Y+3
 6082 1234 0E94 0000 	 call PlayerClick
GAS LISTING  			page 209


 6083               	.LVL398:
 6084 1238 00C0      	 rjmp .L232
 6085               	.L241:
 6086               	.LBE103:
1088:../dumbcraft/dumbcraft.c **** 			Rstring( 0,0); //Locale
 6087               	 .loc 1 1088 0
 6088 123a 60E0      	 ldi r22,0
 6089 123c 70E0      	 ldi r23,0
 6090 123e 80E0      	 ldi r24,0
 6091 1240 90E0      	 ldi r25,0
 6092 1242 0E94 0000 	 call Rstring
 6093               	.LVL399:
1089:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //view distance
 6094               	 .loc 1 1089 0
 6095 1246 0E94 0000 	 call dcrbyte
 6096               	.LVL400:
1090:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Chat flags
 6097               	 .loc 1 1090 0
 6098 124a 0E94 0000 	 call dcrbyte
 6099               	.LVL401:
1091:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //unused
 6100               	 .loc 1 1091 0
 6101 124e 0E94 0000 	 call dcrbyte
 6102               	.LVL402:
1092:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Difficulty
 6103               	 .loc 1 1092 0
 6104 1252 0E94 0000 	 call dcrbyte
 6105               	.LVL403:
 6106               	.L259:
1093:../dumbcraft/dumbcraft.c **** 			dcrbyte(); //Show cape
 6107               	 .loc 1 1093 0
 6108 1256 0E94 0000 	 call dcrbyte
 6109               	.LVL404:
1094:../dumbcraft/dumbcraft.c **** 			break;
 6110               	 .loc 1 1094 0
 6111 125a 00C0      	 rjmp .L232
 6112               	.L242:
1097:../dumbcraft/dumbcraft.c **** 			switch( dcrbyte() )
 6113               	 .loc 1 1097 0
 6114 125c 0E94 0000 	 call dcrbyte
 6115               	.LVL405:
 6116 1260 8111      	 cpse r24,__zero_reg__
 6117 1262 00C0      	 rjmp .L232
1100:../dumbcraft/dumbcraft.c **** 				p->need_to_respawn = 1;
 6118               	 .loc 1 1100 0
 6119 1264 F801      	 movw r30,r16
 6120 1266 80A1      	 ldd r24,Z+32
 6121 1268 8160      	 ori r24,lo8(1<<0)
 6122 126a 80A3      	 std Z+32,r24
1101:../dumbcraft/dumbcraft.c **** 				break;
 6123               	 .loc 1 1101 0
 6124 126c 00C0      	 rjmp .L232
 6125               	.L243:
1109:../dumbcraft/dumbcraft.c **** 			Rstring( 0,0 );
 6126               	 .loc 1 1109 0
 6127 126e 60E0      	 ldi r22,0
 6128 1270 70E0      	 ldi r23,0
GAS LISTING  			page 210


 6129 1272 80E0      	 ldi r24,0
 6130 1274 90E0      	 ldi r25,0
 6131 1276 0E94 0000 	 call Rstring
 6132               	.LVL406:
1110:../dumbcraft/dumbcraft.c **** 			Rdump( Rshort() );
 6133               	 .loc 1 1110 0
 6134 127a 0E94 0000 	 call Rshort
 6135               	.LVL407:
 6136 127e 0E94 0000 	 call Rdump
 6137               	.LVL408:
 6138               	.L232:
1125:../dumbcraft/dumbcraft.c **** 		DumpRemain();
 6139               	 .loc 1 1125 0
 6140 1282 0E94 0000 	 call DumpRemain
 6141               	.LVL409:
 6142 1286 00C0      	 rjmp .L222
 6143               	.L261:
 6144               	.LBE104:
1128:../dumbcraft/dumbcraft.c **** 	if( chatlen )
 6145               	 .loc 1 1128 0
 6146 1288 9920      	 tst r9
 6147 128a 01F4      	 brne .+2
 6148 128c 00C0      	 rjmp .L221
 6149               	.LBB105:
1130:../dumbcraft/dumbcraft.c **** 		uint8_t pll = strlen( (char*)p->playername );
 6150               	 .loc 1 1130 0
 6151 128e 7801      	 movw r14,r16
 6152 1290 F5E2      	 ldi r31,37
 6153 1292 EF0E      	 add r14,r31
 6154 1294 F11C      	 adc r15,__zero_reg__
 6155 1296 F701      	 movw r30,r14
 6156               	 0:
 6157 1298 0190      	 ld __tmp_reg__,Z+
 6158 129a 0020      	 tst __tmp_reg__
 6159 129c 01F4      	 brne 0b
 6160 129e 8F01      	 movw r16,r30
 6161               	.LVL410:
 6162 12a0 0150      	 subi r16,1
 6163 12a2 1109      	 sbc r17,__zero_reg__
 6164 12a4 0E19      	 sub r16,r14
 6165 12a6 1F09      	 sbc r17,r15
 6166               	.LVL411:
1132:../dumbcraft/dumbcraft.c **** 		if( ClientHandleChat( (char*)chat, chatlen ) )
 6167               	 .loc 1 1132 0
 6168 12a8 692D      	 mov r22,r9
 6169 12aa C101      	 movw r24,r2
 6170 12ac 0E94 0000 	 call ClientHandleChat
 6171               	.LVL412:
 6172 12b0 8823      	 tst r24
 6173 12b2 01F0      	 breq .L221
1134:../dumbcraft/dumbcraft.c **** 			StartupBroadcast();			
 6174               	 .loc 1 1134 0
 6175 12b4 0E94 0000 	 call StartupBroadcast
 6176               	.LVL413:
 6177               	.LBB106:
 6178               	.LBB107:
 120:../dumbcraft/dumbcraft.c **** 	sendsize = 0;
GAS LISTING  			page 211


 6179               	 .loc 1 120 0
 6180 12b8 1092 0000 	 sts sendsize,__zero_reg__
 6181               	.LBE107:
 6182               	.LBE106:
1136:../dumbcraft/dumbcraft.c **** 			Sbyte( 0x02 );
 6183               	 .loc 1 1136 0
 6184 12bc 82E0      	 ldi r24,lo8(2)
 6185 12be 0E94 0000 	 call Sbyte
 6186               	.LVL414:
 6187 12c2 C801      	 movw r24,r16
 6188 12c4 9927      	 clr r25
1137:../dumbcraft/dumbcraft.c **** 			Svarint( chatlen + pll + 2 + 10 + 2 );
 6189               	 .loc 1 1137 0
 6190 12c6 890D      	 add r24,r9
 6191 12c8 911D      	 adc r25,__zero_reg__
 6192 12ca 0E96      	 adiw r24,14
 6193 12cc 0E94 0000 	 call Svarint
 6194               	.LVL415:
1138:../dumbcraft/dumbcraft.c **** 			Sbuffer( (const uint8_t*)"{\"text\":\"<", 10 );
 6195               	 .loc 1 1138 0
 6196 12d0 6AE0      	 ldi r22,lo8(10)
 6197 12d2 80E0      	 ldi r24,lo8(.LC2)
 6198 12d4 90E0      	 ldi r25,hi8(.LC2)
 6199 12d6 0E94 0000 	 call Sbuffer
 6200               	.LVL416:
1139:../dumbcraft/dumbcraft.c **** 			Sbuffer( p->playername, pll );
 6201               	 .loc 1 1139 0
 6202 12da 602F      	 mov r22,r16
 6203 12dc C701      	 movw r24,r14
 6204 12de 0E94 0000 	 call Sbuffer
 6205               	.LVL417:
1140:../dumbcraft/dumbcraft.c **** 			Sbyte( '>' ) ;
 6206               	 .loc 1 1140 0
 6207 12e2 8EE3      	 ldi r24,lo8(62)
 6208 12e4 0E94 0000 	 call Sbyte
 6209               	.LVL418:
1141:../dumbcraft/dumbcraft.c **** 			Sbyte( ' ' ) ;
 6210               	 .loc 1 1141 0
 6211 12e8 80E2      	 ldi r24,lo8(32)
 6212 12ea 0E94 0000 	 call Sbyte
 6213               	.LVL419:
1142:../dumbcraft/dumbcraft.c **** 			Sbuffer( chat, chatlen );
 6214               	 .loc 1 1142 0
 6215 12ee 692D      	 mov r22,r9
 6216 12f0 C101      	 movw r24,r2
 6217 12f2 0E94 0000 	 call Sbuffer
 6218               	.LVL420:
1143:../dumbcraft/dumbcraft.c **** 			Sbyte( '"' );
 6219               	 .loc 1 1143 0
 6220 12f6 82E2      	 ldi r24,lo8(34)
 6221 12f8 0E94 0000 	 call Sbyte
 6222               	.LVL421:
1144:../dumbcraft/dumbcraft.c **** 			Sbyte( '}' );
 6223               	 .loc 1 1144 0
 6224 12fc 8DE7      	 ldi r24,lo8(125)
 6225 12fe 0E94 0000 	 call Sbyte
 6226               	.LVL422:
GAS LISTING  			page 212


1145:../dumbcraft/dumbcraft.c **** 			Sbyte( 0 );
 6227               	 .loc 1 1145 0
 6228 1302 80E0      	 ldi r24,0
 6229 1304 0E94 0000 	 call Sbyte
 6230               	.LVL423:
1146:../dumbcraft/dumbcraft.c **** 			DoneSend();
 6231               	 .loc 1 1146 0
 6232 1308 0E94 0000 	 call DoneSend
 6233               	.LVL424:
1147:../dumbcraft/dumbcraft.c **** 			DoneBroadcast();
 6234               	 .loc 1 1147 0
 6235 130c 0E94 0000 	 call DoneBroadcast
 6236               	.LVL425:
 6237               	.L221:
 6238               	.LBE105:
 6239               	 .loc 1 1150 0
 6240 1310 0FB6      	 in __tmp_reg__,__SREG__
 6241 1312 F894      	 cli
 6242 1314 7EBE      	 out __SP_H__,r7
 6243 1316 0FBE      	 out __SREG__,__tmp_reg__
 6244 1318 6DBE      	 out __SP_L__,r6
 6245               	 
 6246 131a 0F90      	 pop __tmp_reg__
 6247 131c 0F90      	 pop __tmp_reg__
 6248 131e 0F90      	 pop __tmp_reg__
 6249 1320 0F90      	 pop __tmp_reg__
 6250 1322 0F90      	 pop __tmp_reg__
 6251 1324 DF91      	 pop r29
 6252 1326 CF91      	 pop r28
 6253 1328 1F91      	 pop r17
 6254 132a 0F91      	 pop r16
 6255 132c FF90      	 pop r15
 6256 132e EF90      	 pop r14
 6257 1330 DF90      	 pop r13
 6258 1332 CF90      	 pop r12
 6259 1334 BF90      	 pop r11
 6260 1336 AF90      	 pop r10
 6261               	.LVL426:
 6262 1338 9F90      	 pop r9
 6263               	.LVL427:
 6264 133a 8F90      	 pop r8
 6265 133c 7F90      	 pop r7
 6266 133e 6F90      	 pop r6
 6267 1340 5F90      	 pop r5
 6268 1342 4F90      	 pop r4
 6269 1344 3F90      	 pop r3
 6270               	.LVL428:
 6271 1346 2F90      	 pop r2
 6272               	.LVL429:
 6273 1348 0895      	 ret
 6274               	 .cfi_endproc
 6275               	.LFE40:
 6277               	 .local sendsize
 6278               	 .comm sendsize,1,1
 6279               	 .local localsendbuffer
 6280               	 .comm localsendbuffer,80,1
 6281               	.global cmdremain
GAS LISTING  			page 213


 6282               	 .section .bss
 6285               	cmdremain:
 6286 0000 0000      	 .zero 2
 6287               	 .comm dumbcraft_playercount,1,1
 6288               	.global pingjson4
 6289               	 .section .progmem.data,"a",@progbits
 6292               	pingjson4:
 6293 0000 7D2C 2276 	 .string "},\"version\":{\"name\":\"1.8\",\"protocol\":47}}"
 6293      6572 7369 
 6293      6F6E 223A 
 6293      7B22 6E61 
 6293      6D65 223A 
 6294               	.global pingjson3
 6297               	pingjson3:
 6298 002a 2C22 6F6E 	 .string ",\"online\":"
 6298      6C69 6E65 
 6298      223A 00
 6299               	.global pingjson2
 6302               	pingjson2:
 6303 0035 222C 2022 	 .string "\", \"players\":{\"max\":"
 6303      706C 6179 
 6303      6572 7322 
 6303      3A7B 226D 
 6303      6178 223A 
 6304               	.global pingjson1
 6307               	pingjson1:
 6308 004a 7B22 6465 	 .string "{\"description\":\""
 6308      7363 7269 
 6308      7074 696F 
 6308      6E22 3A22 
 6308      00
 6309               	.global default_spawn_metadata
 6312               	default_spawn_metadata:
 6313 005b 00        	 .byte 0
 6314 005c 00        	 .byte 0
 6315 005d 7F        	 .byte 127
 6316               	.global compeddata
 6319               	compeddata:
 6320 005e 02        	 .byte 2
 6321 005f 46        	 .byte 70
 6322 0060 00        	 .byte 0
 6323 0061 39        	 .byte 57
 6324 0062 8E        	 .byte -114
 6325 0063 64        	 .byte 100
 6326 0064 78        	 .byte 120
 6327 0065 DA        	 .byte -38
 6328 0066 ED        	 .byte -19
 6329 0067 D1        	 .byte -47
 6330 0068 31        	 .byte 49
 6331 0069 01        	 .byte 1
 6332 006a 00        	 .byte 0
 6333 006b 20        	 .byte 32
 6334 006c 0C        	 .byte 12
 6335 006d C0        	 .byte -64
 6336 006e B0        	 .byte -80
 6337 006f ED        	 .byte -19
 6338 0070 43        	 .byte 67
GAS LISTING  			page 214


 6339 0071 06        	 .byte 6
 6340 0072 78        	 .byte 120
 6341 0073 43        	 .byte 67
 6342 0074 08        	 .byte 8
 6343 0075 D2        	 .byte -46
 6344 0076 F7        	 .byte -9
 6345 0077 60        	 .byte 96
 6346 0078 02        	 .byte 2
 6347 0079 96        	 .byte -106
 6348 007a 46        	 .byte 70
 6349 007b 42        	 .byte 66
 6350 007c 57        	 .byte 87
 6351 007d DC        	 .byte -36
 6352 007e 32        	 .byte 50
 6353 007f C6        	 .byte -58
 6354 0080 D9        	 .byte -39
 6355 0081 33        	 .byte 51
 6356 0082 00        	 .byte 0
 6357 0083 00        	 .byte 0
 6358 0084 00        	 .byte 0
 6359 0085 00        	 .byte 0
 6360 0086 00        	 .byte 0
 6361 0087 00        	 .byte 0
 6362 0088 00        	 .byte 0
 6363 0089 80        	 .byte -128
 6364 008a D7        	 .byte -41
 6365 008b 49        	 .byte 73
 6366 008c 92        	 .byte -110
 6367 008d 24        	 .byte 36
 6368 008e 49        	 .byte 73
 6369 008f 92        	 .byte -110
 6370 0090 A4        	 .byte -92
 6371 0091 FF        	 .byte -1
 6372 0092 CB        	 .byte -53
 6373 0093 E6        	 .byte -26
 6374 0094 75        	 .byte 117
 6375 0095 FF        	 .byte -1
 6376 0096 5F        	 .byte 95
 6377 0097 71        	 .byte 113
 6378 0098 61        	 .byte 97
 6379 0099 02        	 .byte 2
 6380 009a 2D        	 .byte 45
 6381 009b 0D        	 .byte 13
 6382 009c 06        	 .byte 6
 6383 009d 78        	 .byte 120
 6384 009e DA        	 .byte -38
 6385 009f 73        	 .byte 115
 6386 00a0 FB        	 .byte -5
 6387 00a1 0F        	 .byte 15
 6388 00a2 04        	 .byte 4
 6389 00a3 FC        	 .byte -4
 6390 00a4 00        	 .byte 0
 6391 00a5 0F        	 .byte 15
 6392 00a6 AB        	 .byte -85
 6393 00a7 04        	 .byte 4
 6394 00a8 52        	 .byte 82
 6395               	.global dumbcraft_tick
GAS LISTING  			page 215


 6396               	 .section .bss
 6399               	dumbcraft_tick:
 6400 0002 0000      	 .zero 2
 6401               	 .comm playerid,1,1
 6402               	 .comm Players,54,1
 6403               	 .text
 6404               	.Letext0:
 6405               	 .file 3 "/usr/lib/avr/include/stdint.h"
 6406               	 .file 4 "../dumbcraft/dumbcraft.h"
 6407               	 .file 5 "./dumbconfig.h"
 6408               	 .file 6 "../libs/util10.h"
GAS LISTING  			page 216


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dumbcraft.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:2114   .text:0000000000000000 mstrcat
    {standard input}:2193   .text:000000000000004a mstrcatp
    {standard input}:2282   .text:0000000000000096 dcrbyte
    {standard input}:6285   .bss:0000000000000000 cmdremain
    {standard input}:2311   .text:00000000000000b4 StartSend
                             .bss:0000000000000004 sendsize
    {standard input}:2327   .text:00000000000000ba DoneSend
    {standard input}:6278   .bss:0000000000000005 localsendbuffer
    {standard input}:2386   .text:00000000000000f6 SendRawPGMData
    {standard input}:2454   .text:0000000000000122 Sbyte
    {standard input}:2482   .text:000000000000013c Rbuffer
    {standard input}:2555   .text:0000000000000176 Rdump
    {standard input}:2597   .text:000000000000018e Rint
    {standard input}:2675   .text:00000000000001e0 Rshort
    {standard input}:2714   .text:00000000000001fe Rposition
    {standard input}:2818   .text:0000000000000270 Rvarint
    {standard input}:2865   .text:0000000000000298 Rslot
    {standard input}:2918   .text:00000000000002c4 Rstring
    {standard input}:3034   .text:0000000000000328 Rdouble
    {standard input}:3177   .text:00000000000003cc Rfloat
    {standard input}:3294   .text:0000000000000442 Svarint
    {standard input}:3348   .text:0000000000000468 Sint
    {standard input}:3410   .text:00000000000004a0 Sshort
    {standard input}:3442   .text:00000000000004b2 Sstring
    {standard input}:3533   .text:0000000000000502 Sbuffer
    {standard input}:3606   .text:000000000000053c SbufferWide
    {standard input}:3680   .text:0000000000000578 SbufferPGM
    {standard input}:3765   .text:00000000000005b6 Sdouble
    {standard input}:3912   .text:0000000000000654 Sfloat
    {standard input}:4033   .text:00000000000006ca SSpawnPlayer
                            *COM*:0000000000000036 Players
    {standard input}:6312   .progmem.data:000000000000005b default_spawn_metadata
    {standard input}:4201   .text:000000000000079c UpdatePlayerSpeed
                            *COM*:0000000000000001 playerid
    {standard input}:4269   .text:00000000000007de InitDumbcraft
    {standard input}:4298   .text:00000000000007f0 UpdateServer
                            *COM*:0000000000000001 dumbcraft_playercount
    {standard input}:6307   .progmem.data:000000000000004a pingjson1
    {standard input}:6302   .progmem.data:0000000000000035 pingjson2
    {standard input}:6297   .progmem.data:000000000000002a pingjson3
    {standard input}:6292   .progmem.data:0000000000000000 pingjson4
    {standard input}:6319   .progmem.data:000000000000005e compeddata
    {standard input}:5058   .text:0000000000000c7c TickServer
    {standard input}:6399   .bss:0000000000000002 dumbcraft_tick
    {standard input}:5469   .text:0000000000000f5a AddPlayer
    {standard input}:5511   .text:0000000000000f8e RemovePlayer
    {standard input}:5538   .text:0000000000000fa6 DumpRemain
    {standard input}:5582   .text:0000000000000fd6 GotData
                            *COM*:0000000000000001 __gnu_lto_v1

GAS LISTING  			page 217


UNDEFINED SYMBOLS
Rbyte
extSbyte
__mulhi3
Uint8To16Str
InitDumbgame
CanSend
SendStart
my_server_name
Uint32To10Str
PlayerUpdate
DoCustomPreloadStep
UnloadCircularBufferOnThisClient
EndSend
StartupBroadcast
GameTick
DoneBroadcast
GetCurrentCircHead
PlayerTickUpdate
CanRead
ForcePlayerClose
__tablejump2__
__divmodhi4
PlayerClick
ClientHandleChat
__do_copy_data
__do_clear_bss
GAS LISTING  			page 1


   1               	 .file "dumbutils.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.7ba86d2cebe2b82f,"",@progbits
  10 0000 789C 8D51 	 .string "x\234\215Q;\016\202@\020}\263\013\202F\243\205\211V\222\340\0014\261\263\362\0246\326v\224\204\230\030#\307\240\361"
  10      3B0E 8240 
  10      107D B30B 
  10      8246 A385 
  10      8956 92E0 
  11 0026 5ED1 4667 	 .ascii "^\321Fg\035X@\327\317\206d\336\f\357\315\316\276QPp\235+\227"
  11      1D58 40D7 
  11      CF86 64DE 
  11      0CEF CDCE 
  11      BE51 5070 
  12 003d 071C 4344 	 .ascii "\007\034CD \265\243\204p'8 \037\322\200\227ITe\324&\nDf\311\013"
  12      20B5 A384 
  12      7027 3820 
  12      1FD2 8097 
  12      4954 65D4 
  13 0057 C3A6 2A3B 	 .ascii "\303\246*;\331z\314\302\222\311H\035q\313\213|\224\020\315@\227"
  13      D97A CCC2 
  13      92C9 481D 
  13      71CB 8B7C 
  13      9410 CD40 
  14 006c BCD8 2424 	 .ascii "\274\330$$S\n\273+\255%Q\250oQv\326sk\276\027\244\277\"\227\342"
  14      530A BB2B 
  14      AD25 51A8 
  14      6F51 76D6 
  14      736B BE17 
  15 0085 89EC C75C 	 .ascii "\211\354\307\\\312\336\3366\254H\222\2169\323\303\037\235lu\312"
  15      CADE DE36 
  15      AC48 928E 
  15      39D3 C31F 
  15      9D6C 75CA 
  16 0099 652F B006 	 .ascii "e/\260\006~\026i\223{\374\350\255\233\346GM\377\374\031\372\342"
  16      7E16 6993 
  16      7BFC E8AD 
  16      9BE6 474D 
  16      FFFC 19FA 
  17 00ae 5FA7 E11F 	 .ascii "_\247\341\037\304m\263\262z\235\377\252tK\245K\017JK\332\363"
  17      C46D B3B2 
  17      7A9D FFAA 
  17      744B A54B 
  17      0F4A 4BDA 
  18 00c3 AFF8 5F67 	 .ascii "\257\370_g\342;)\246\033\301\320\202%\302g<\230]VsY\024D\370"
  18      E23B 29A6 
  18      1BC1 D082 
  18      25C2 673C 
  18      985D 5673 
  19 00db 75CF DC74 	 .ascii "u\317\334t\353\035\343t\177H\343u\314\374\007G\021Do"
  19      EB1D E374 
  19      7F48 E375 
GAS LISTING  			page 2


  19      CCFC 0747 
  19      1144 6F
  20               	 .text
  21               	 .section .gnu.lto_.inline.7ba86d2cebe2b82f,"",@progbits
  22 0000 789C 9591 	 .ascii "x\234\225\221=\016\3020\f\205\237S\267T\245\250B\fe\353\2148"
  22      3D0E C230 
  22      0C85 9F53 
  22      B754 A5A8 
  22      420C 65EB 
  23 0016 0277 E8D9 	 .ascii "\002w\350\331r\204\036\211\215\r\006\2048\003\033v\233\264\364"
  23      7284 1E89 
  23      8D0D 0684 
  23      3803 1B76 
  23      9BB4 F4
  24 0029 0705 3238 	 .ascii "\007\00528\266\223<\177\216\r\f\226\326\305\245S\240|\201dI\240"
  24      B693 3C7F 
  24      8E0D 0C96 
  24      D6C5 A553 
  24      A07C 8164 
  25 003f B9A4 A9DA 	 .ascii "\271\244\251\332#\3124\261\026gnm\035\334\272\367\204\362\251"
  25      23CA 34B1 
  25      1667 6E6D 
  25      1DDC BAF7 
  25      84F2 A9
  26 0052 8FCC B9F8 	 .ascii "\217\314\271\370.\034\345\022\333\332\326\255\003\314e\364@3"
  26      2E1C E512 
  26      DBDA D6AD 
  26      03CC 65F4 
  26      4033 
  27 0064 383C 8818 	 .ascii "8<\210\030-\252\232H\r\377C\376\213\375\275\273\276\320\230\026"
  27      2DAA 9A48 
  27      0DFF 43FE 
  27      8BFD BDBB 
  27      BED0 9816 
  28 0078 BB3B 1C26 	 .ascii "\273;\034&\215Y\303\230\341\252\214\375\rd\006\371\330\213rS"
  28      8D59 C398 
  28      E1AA 8CFD 
  28      0D64 06F9 
  28      D88B 7253 
  29 008c B19A 14F2 	 .ascii "\261\232\024\362\3379\246p\241*\356B\214\362\252\301\024\325"
  29      DF39 A670 
  29      A12A EE42 
  29      8CF2 AAC1 
  29      14D5 
  30 009e 4DC7 4D6B 	 .ascii "M\307Mk\032\362F|\035\342\2105\311\266G\221\022\246^+)\204\270"
  30      1AF2 467C 
  30      1DE2 8835 
  30      C9B6 4791 
  30      12A6 5E2B 
  31 00b5 BBE8 35FD 	 .ascii "\273\3505\375\344m\275Bq\"3\214\225=\2044\304}W\237\377\276\\"
  31      E46D BD42 
  31      7122 338C 
  31      953D 8434 
  31      C47D 579F 
  32 00cc 176F 75EC 	 .ascii "\027ou\35487"
  32      3837 
  33               	 .text
GAS LISTING  			page 3


  34               	 .section .gnu.lto_.pureconst.7ba86d2cebe2b82f,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`b\020d\200"
  35      6062 1064 
  35      8000 
  36 000a 0E06 0946 	 .string "\016\006\tF\t&\tf\t\026\tV\t6\tv\t"
  36      0926 0966 
  36      0916 0956 
  36      0936 0976 
  36      0900 
  37 001c 0966 00   	 .string "\tf"
  38 001f FA        	 .ascii "\372"
  39               	 .text
  40               	 .section .gnu.lto_UpdateSlot.7ba86d2cebe2b82f,"",@progbits
  41 0000 789C 8D91 	 .ascii "x\234\215\221\275J\003A\020\307\347\277\267wg\b\021A,\242\242"
  41      BD4A 0341 
  41      10C7 E7BF 
  41      B777 6708 
  41      1141 2CA2 
  42 0015 96DA 5C1A 	 .ascii "\226\332\\\032\261\367)\"h\243\t\007\036+\210&\225E.^\n\313\224"
  42      B1F7 2922 
  42      68A3 0907 
  42      1E2B 8826 
  42      9545 2E5E 
  43 002c 5A08 DA1A 	 .ascii "Z\b\332\032\210\257\220\027\320\350\033\354\023hos\316\356\221"
  43      88AF 9017 
  43      D0E8 1BEC 
  43      1368 6F73 
  43      CEEE 91
  44 003f 1C18 BDB8 	 .ascii "\034\030\275\270\2603\303\356o\276\005\t\372y\252|\367\371y\215"
  44      B033 C3EE 
  44      6FBE 0509 
  44      FA79 AA7C 
  44      F7F9 798D 
  45 0053 351C 82E8 	 .ascii "5\034\202\350\277\022u\027\004`\f\002u\004:G\260\354\263\030"
  45      BF12 7517 
  45      0460 0C02 
  45      7504 3A47 
  45      B0EC B318 
  46 0067 E934 1D0E 	 .ascii "\3514\035\016\337V\226%\316A\036\013\370\244@%\266D\231\205S"
  46      DF56 9625 
  46      CE41 1E0B 
  46      F8A4 4025 
  46      B644 9985 
  47 007c 6121 9975 	 .ascii "a!\231u\251\027\307\375-\242\320\372\326Y\232\200\007\020F;c"
  47      A917 C7FD 
  47      2DA2 D0FA 
  47      D659 9A80 
  47      0710 463B 
  48 0091 4AF4 ED5E 	 .ascii "J\364\355^\023\217p\371\367\212\276\342\233xI\001!\262T\2129"
  48      138F 70F9 
  48      F78A BEE2 
  48      9B78 4901 
  48      21B2 548A 
  49 00a6 1A53 4FDF 	 .ascii "\032SO\337-\316@N\210\254\217C(\310\032\263\256e\037V\377F#H"
  49      2DCE 404E 
  49      88AC 8F43 
  49      28C8 1AB3 
GAS LISTING  			page 4


  49      AE65 1F56 
  50 00be 8BBD D0F5 	 .ascii "\213\275\320\365G\3629BFF\360#x\306Y\316\270z!\217#s\365\025"
  50      47F2 3942 
  50      4646 F023 
  50      78C6 59CE 
  50      B87A 218F 
  51 00d6 7769 33AC 	 .ascii "wi3\254\027a\245\t\246\357\013\212\216P\236\026\274Q\204U\246"
  51      1761 A509 
  51      A6EF 0B8A 
  51      8E50 9E16 
  51      BC51 8455 
  52 00eb D8E6 9C11 	 .ascii "\330\346\234\021P>\202\3559h\212\234\335\3717\233\350\247\335"
  52      503E 82ED 
  52      3968 8A9C 
  52      DDF9 379B 
  52      E8A7 DD
  53 00fe DF76 25F3 	 .ascii "\337v%\363]\275SW\017\304\004\312N\235\227\311\3136!\253APk\266"
  53      5DBD 5357 
  53      0FC4 04CA 
  53      4E9D 97C9 
  53      CB36 21AB 
  54 0116 CF4E 1A17 	 .ascii "\317N\032\027\307a\313Z\355\326\251\272\f\032\364\r\215'\205"
  54      C761 CB5A 
  54      EDD6 A9BA 
  54      0C1A F40D 
  54      8D27 85
  55 0129 C1        	 .ascii "\301"
  56               	 .text
  57               	 .section .gnu.lto_GPChat.7ba86d2cebe2b82f,"",@progbits
  58 0000 789C 8591 	 .ascii "x\234\205\221?K\003A\020\305\337\354y\227?j\324R\020\221#ulD"
  58      3F4B 0341 
  58      10C5 DFEC 
  58      7997 3F6A 
  58      D452 1091 
  59 0018 4441 FC16 	 .ascii "DA\374\026\n\332\304\304Ce\025\321\013*A\262z\021\322\b\301*"
  59      0ADA C4C4 
  59      4365 15D1 
  59      0B2A 41B2 
  59      7A11 D208 
  60 002e 8D90 20D6 	 .ascii "\215\220 \326\261\265\020-\025Q\361\033\\c\245\235\235M\234\275"
  60      B1B5 102D 
  60      1551 F11B 
  60      5C63 A59D 
  60      9D4D 9CBD 
  61 0042 4B0C 244A 	 .ascii "K\f$J\006nwo\366\267o\337\314\n\bt\306(\177\207\234N\361L\006"
  61      066E 776F 
  61      F6B7 6FDF 
  61      CC0A 0874 
  61      C628 7F87 
  62 005b 4894 5F80 	 .ascii "H\224_\200\343\250 \322\013\020\n\202\n+\244Q\262QS\352\334\177"
  62      E3A8 20D2 
  62      0B10 0A82 
  62      0A2B A451 
  62      B251 53EA 
  63 0071 7F3A 33D5 	 .ascii "\177:3\325\265*\251F\243 \2115\307\b\016a\231$\321p0\211\216"
  63      B52A A946 
  63      A320 8935 
GAS LISTING  			page 5


  63      C708 0E61 
  63      9924 D170 
  64 0088 7BEA E2DE 	 .ascii "{\352\342\336o"
  64      6F
  65 008d 343E AFCA 	 .string "4>\257\312\311\204\240\035\202\201,\325X\316\202$#\306C\037C&\212J\225'\302\035hE\216E\036\265\221%\022z6^Q\364\353\323Y\272$\023\233d\344\361\315>\206%\231\016\005<'\205$\013x\204\b\251P\217Y\340\025^u&\314\002\277G#\016\205v%E5S\364o\022]P\314\321\002\034\272\274\270`\266\037x\206W\362>\036\251e\307\342[\364>x\217\205\372\272T\006\234\240R\355\322\2224\250\241\323\352\\\027\226p\202\3770SQj_\322\3208\222\027\252\262 \271\303M>p\242\2337\242\235\234|x_m'\261f\275\346\377\332\334(\346\202\323\272\346\333^5\333a\315\314V\347{\240G-\324\363\357\246\376\352\267\325\356\367\033\216\375\007\321\202\302X\344\267\344\307\326\2572\232JMfs[\253\231\335\264\343\006\253\234\273!\367R\031D2\353iW\256m\307\363\266\273v\340\332\2636~"
  65      C984 A01D 
  65      8281 2CD5 
  65      58CE 8224 
  65      23C6 431F 
  66 018e 6687 9C40 	 .ascii "f\207\234@"
  67               	 .text
  68               	 .section .gnu.lto_SpawnEntity.7ba86d2cebe2b82f,"",@progbits
  69 0000 789C 9593 	 .string "x\234\225\223\317K\002A\024\307\337\233\335MK\334\024\275H\027\317\035,$\372W\f\352R\312\202\313HQ\nA\007\327\326\240\243\247\316\366\017\324\037\320\245? \223\272\365\3430\307 \360\032\naovr\215\224f{\260;\337a>\337\231\367\336\3162`\360;r\364\254\232"
  69      CF4B 0241 
  69      14C7 DF9B 
  69      DD4D 4BDC 
  69      14BD 4817 
  70 0058 2B34 A201 	 .string "+4\242\001\310:\367"
  70      C83A F700 
  71 0060 AD38 4394 	 .ascii "\2558C\224\002\020\232\f\233;\030\260\327\354V\214\307W\027g"
  71      0210 9A0C 
  71      9B3B 18B0 
  71      D7EC 568C 
  71      C757 1767 
  72 0074 8FB1 BC89 	 .ascii "\217\261\274\211\007\b\026p\204\004)"
  72      0708 1670 
  72      8404 29
  73 007f 4CD2 8BD9 	 .string "L\322\213\331r\232\"e\244\245\312\2202\263RQX\320\366\274N\036\300\t\246%z\313\003\266\220\311\321\350\203/\3566+x\211\026\255\236\300\310;\367R\034\321Au4'\016\372\320\026={\0062\034Tum#W\007\322r\017N\007\376MQ\301.Z.\232r\003s\306\275\340P\3312\b\342\030\223\220/\372\033\363R1\177\246\342\213\247(\371>\353\362]V\371J\366\2458\303\306\235`.\26339.*\356\365\217=]LL\353\377\b\353\267]Lj\353\267\203\372\003\347\220M\234i\027SZgz\352\374\f\235Y\0273Zg\366\273\347m\361\246\353\024\204\235\352V\243\243ndT\274\257\317\353\377B\310.IV}\203.\217\216\326\"\243b\360\217\036\354GG\2175hs\202\372b\250\273\371\017\320\022#6\201T\224\350\326\323_,w\314\025\nk\225Fm\257|\270\353\324\003\325\250W\371Q\241\f_"
  73      729A 2265 
  73      A4A5 CA90 
  73      32B3 5251 
  73      58D0 F6BC 
  74 0180 3EEF 13   	 .ascii ">\357\023"
  75               	 .text
  76               	 .section .gnu.lto_EntityUpdatePos.7ba86d2cebe2b82f,"",@progbits
  77 0000 789C 8D91 	 .string "x\234\215\221\315J\303@\024\205\357\231\374446\bnZ\334\b\356\343F|\225\n\272\321\226\200a\004\321v\345\242\251\211\340\242j\037A\021\027.\254\257 \270\326\342\033\f\270\367\001\2620\336Il\003V\210\027f\346\314\314\371\356\374\\A\202~G\213\333&/\257\362\b\203 \306oDCG"
  77      CD4A C340 
  77      1485 EF99 
  77      FC34 3436 
  77      086E 5ADC 
  78 005e 5A10 6820 	 .string "Z\020h 0\330E\356}\022\317*\313&\351y\332\\1q\004\262H\202j\254\340hUg%\\\255\032\254\fO+\016\213\222(\032\257\021\005\371\264\315\275\316\275\r\241GcJ\261\372\332\352\342\026\026\357\236R\032]D\313\022\bP\234*\331GSJT\346-\230\214"
  78      30D8 45EE 
  78      7D12 CF2A 
  78      CB26 E979 
  78      DA5C 3171 
  79 00b4 C593 7620 	 .ascii "\305\223v a6\331\313\333\257t\366\031\337\215\354\302\035\302"
  79      6136 D9CB 
  79      DBAF 74F6 
  79      19DF 8DEC 
  79      C21D C2
  80 00c7 0A61 EA0C 	 .ascii "\na\352\f\346\002n\007\374d\035l\222\250\375\240\367K3\322\t"
  80      E602 6E07 
  80      FC64 1D6C 
  80      92A8 FDA0 
  80      F74B 33D2 
  81 00dc F562 05E9 	 .ascii "\365b\005\351\224\344\303\234tC\324+I\267$\037\347\244\027\242"
  81      94E4 C39C 
GAS LISTING  			page 6


  81      7443 D42B 
  81      49B7 241F 
  81      E7A4 17A2 
  82 00f0 5149 7AB2 	 .ascii "QIz\262\270X\242F\037\250\370\025*~\205\3157\227\306\177\275"
  82      B858 A246 
  82      1FA8 F815 
  82      2A7E 85CD 
  82      3797 C67F 
  83 0105 B1BA 7AB1 	 .ascii "\261\272z\261\377\252\211Y\326\344\235\206\352z}f*\242\315E\343"
  83      FFAA 8959 
  83      D6E4 9D86 
  83      EA7A 7D66 
  83      2AA2 CD45 
  84 011a A2EA 942D 	 .ascii "\242\352\224-\337\337\350\366\017\367;\307{A/W\375\336\201<\361"
  84      DFDF E8F6 
  84      0FF7 3BC7 
  84      7B41 2F57 
  84      FDDE 813C 
  85 012f 3BF4 0D10 	 .ascii ";\364\r\020\216\203\342"
  85      8E83 E2
  86               	 .text
  87               	 .section .gnu.lto_InternalSendPosition.7ba86d2cebe2b82f,"",@progbits
  88 0000 789C 9592 	 .ascii "x\234\225\222?K\303P\024\305\357}I\354\377\322v(\026A\004G\245"
  88      3F4B C350 
  88      14C5 EF7D 
  88      49EC FFD2 
  88      7628 1641 
  89 0017 7E9C 0ABA 	 .ascii "~\234\n\272hK\301\020A\264\235\034\232\232\016.\205~\204\372"
  89      684B C110 
  89      41B4 9D1C 
  89      9A9A 0E2E 
  89      857E 84FA 
  90 002b 01AC AB1D 	 .ascii "\001\254\253\035\3743I\027-\356\n\005'\021\352\340\346R\317}"
  90      FC33 4917 
  90      2DEE 0A05 
  90      2711 EAE0 
  90      E652 CF7D 
  91 003f 3151 0A6A 	 .ascii "1Q\nj\r\344\276\367\356\371\345\274\223\274(R4}\025p?\242\275"
  91      0DE4 BEF7 
  91      EEF9 E5BC 
  91      93BC 2852 
  91      347D 1570 
  92 0056 8091 0D62 	 .ascii "\200\221\rb\325\271#jF\025\263L\210\251\241\270\261\311\232="
  92      D5B9 236A 
  92      4615 B34C 
  92      88A9 A1B8 
  92      B1C9 9A3D 
  93 006a 53D7 A3C9 	 .ascii "S\327\243\311\244\367p\323\0350\317\233\274\307d\221\303\024"
  93      A4F7 70D3 
  93      1D30 CF9B 
  93      BCC7 6491 
  93      C314 
  94 007c 41E1 A894 	 .ascii "A\341\250\224\030\212\212C\340\204\bIY\246\244\244e\231\021$"
  94      188A 8A43 
  94      E084 0849 
  94      59A6 A4A4 
  94      6599 1124 
GAS LISTING  			page 7


  95 0090 2B25 27CB 	 .ascii "+%'\313<8\tdQ\313u;KDU\275M\tU\366^\207\210\321\030Rkt\376\304"
  95      3C38 0964 
  95      51CB 753B 
  95      4B44 55BD 
  95      4D09 55F6 
  96 00ae 153E 610B 	 .ascii "\025>a\013\362!\275\273\307n\306a\243\312~\254\rv\330$8B\006"
  96      F221 BDBB 
  96      C76E C661 
  96      A3CA 7EAC 
  96      0D76 D824 
  97 00c5 DCED 1BB3 	 .ascii "\334\355\033\263\261\267\344\365\274\347\224\017\333l\331l\212"
  97      B1B7 E4F5 
  97      BCE7 940F 
  97      DB6C D96C 
  97      8A
  98 00d6 AC33 0DC9 	 .ascii "\2543\r\311\374\331\004\354\247\301\321\330{m\257\006\016\021"
  98      FCD9 04EC 
  98      A7C1 D1D8 
  98      7B6D AF06 
  98      0E11 
  99 00e8 5BBC 617B 	 .ascii "[\274a{j\004\255(\272\332t\2164\377\342-\006R\f\252\037\"\244"
  99      6A04 AD28 
  99      BADA 748E 
  99      34FF E22D 
  99      0652 0CAA 
 100 00ff 1336 C7BF 	 .ascii "\0236\307\277\323\343PIB\324p?l\245\264Er\nLC\3703~\372+\376"
 100      D3E3 5049 
 100      42D4 703F 
 100      6CA5 B445 
 100      720A 4C43 
 101 0119 5B7B 2578 	 .ascii "[{%x4\203\335\247\342g\321\r\277\211\346\303\3709\250\177n\224"
 101      3483 DDA7 
 101      E267 D10D 
 101      BF89 E6C3 
 101      F839 A87F 
 102 012f 0B0F E562 	 .ascii "\013\017\345b\306C\021\366\362\037\354\325/\254\315y\315\335"
 102      C643 11F6 
 102      F21F ECD5 
 102      2FAC CD79 
 102      CDDD 
 103 0141 5373 3458 	 .ascii "Ss4X\0168\377*\201\301\337%\357U(\026\327*\365\335\355\362\376"
 103      0E38 FF2A 
 103      81C1 DF25 
 103      EF55 2816 
 103      D72A F5DD 
 104 0158 56B5 A667 	 .ascii "V\265\246g\365\332\216sP,\323\007M\214\242\263"
 104      F5DA 8E73 
 104      502C D307 
 104      4D8C A2B3 
 105               	 .text
 106               	 .section .gnu.lto_SignTextUp.7ba86d2cebe2b82f,"",@progbits
 107 0000 789C AD92 	 .string "x\234\255\222\275J\003A\024\205\357\231\335Y\327l\241m@E\260_\013\013[\337\"\2026\232\260\3402\202hRYdB\242X\246\2224B\304^_AH\221F\263\330\371\223b oa\263\336\231\370\003\256Zya\317\035f\2769w\346\356\b\022\364=\312\374\225xz\2213<\202\350\216\210Z\241"
 107      BD4A 0341 
 107      1485 EF99 
 107      DD59 D76C 
 107      A16D 4045 
 108 0060 EC80 404D 	 .string "\354\200@M\201\3466\034{#nM\236_\237\017\373c`\316\307\001H\262 `\021!\213\027\261\370LJ\352h\335]&J\334\316\n\253\265\333\204\260\331\313\250m\356&A\r\227\220\274|L\257\372L\317+0>\255\244l\316\250c\356'(P\"\301\364\036[P\360\326\030\366-|jF\203\250"
GAS LISTING  			page 8


 108      81E6 361C 
 108      7B23 6E4D 
 108      9E5F 9F0F 
 108      FB63 60CE 
 109 00bf CB84 6F65 	 .ascii "\313\204oe#\205\237B\246\b\024\002\213\237\230\354\252x\202\231"
 109      2385 9F42 
 109      A608 1402 
 109      8B9F 98EC 
 109      AA78 8299 
 110 00d3 C49D DFE2 	 .ascii "\304\235\337\342\241\263\317\301\376\241\333\320\177\364~\347"
 110      A1B3 CFC1 
 110      FEA1 DBD0 
 110      7FF4 7EE7 
 111 00e3 ED4C 4FEB 	 .ascii "\355LO\353u\205\331%Z\270\320\275\r\205\022\275\363\316\211>"
 111      7585 D925 
 111      5AB8 D0BD 
 111      0D85 12BD 
 111      F3CE 893E 
 112 00f7 8DCC D3DF 	 .ascii "\215\314\323\337\225\243B\345\347\377\251\3346/\203\037\273."
 112      95A3 42E5 
 112      E7FF A9DC 
 112      362F 831F 
 112      BB2E 
 113 0109 BFBA FE40 	 .ascii "\277\272\376@-3^\371\200\246Q\341\005\376o\266\353\3458^\255"
 113      2D33 5EF9 
 113      80A6 51E1 
 113      05FE 6FB6 
 113      EBE5 385E 
 114 011e 35F6 77AB 	 .ascii "5\366w\253\207;I\335\215\032\365=u\024W\371\251\274\001y\227"
 114      873B 49DD 
 114      8D1A F53D 
 114      7514 57F9 
 114      A9BC 0179 
 115 0133 842F      	 .ascii "\204/"
 116               	 .text
 117               	 .section .gnu.lto_SignUp.7ba86d2cebe2b82f,"",@progbits
 118 0000 789C 8551 	 .string "x\234\205Q=HBQ\024>\3375{Z\364\263\032\raC-\331\017\355m\355M\006\005R>\204\344\t\222\nQ\204\3270pt\224\032B$\b\022\n$\220h\220\232+\332\242\351mA-\315-\257s\357S\341\275\202\016\274s\356\373\356\371\276\363s\005\t\362[\204\2772\3033\034\021 \210\352\023Q)$"
 118      3D48 4251 
 118      143E DF35 
 118      7B5A F4B3 
 118      1A0D 6143 
 119 0063 7520 5051 	 .string "u PQ\240\270\t\225*\242T\227\235\252}\374\336\206\274\226\025\3518E\013\2549\tJ\2016`\001\263:\210\240\267\210K\354\334\256\326d\271\3438+\232\025\375\217u%:\266\343\334\265\312o\023#\002Y\220\301\016!v\"\314.\300)A*KY\2352QG\224L4\330\223Re\213\263W#\254C\250\030x\246c\373\354\3010q\016U\347\200\276y\202q\013\201\024t\276F\330\326,\f\364\364tj\032\302RQ\t\\\374- \272\002\373\026\006O\351\244$\025nx\004\335\326\364\234!\235\356S\177\244\243v\373\343\025.<GME\035c\025\227\252x\341\376f\324\237\261@.\353k\324\303Ix9\360p\366H\315Q\223\315\233\354\2579\206Rz\245\252%#\215P\032\341\356"
 119      A0B8 0995 
 119      2AA2 5497 
 119      9DAA 7DFC 
 119      DE86 BC96 
 120 013c 09FF 46BA 	 .string "\t\377F\272\370a\177\260.naX\265t\377)\\\300%-SKV\2708\221\357\262\341\273|\241\222}9\335\353\313\2658?\016\277\236\332X$\026\2337\013\231\355\344\356V*\257O\205\374\216\225\213%)\230\313g\262\213\332/\375"
 120      F861 7FB0 
 120      2E6E 6158 
 120      B574 FF29 
 120      5CC0 252D 
 121 0187 1894 A4E7 	 .ascii "\030\224\244\347"
 122               	 .text
 123               	 .section .gnu.lto_SblockInternal.7ba86d2cebe2b82f,"",@progbits
 124 0000 789C 6591 	 .ascii "x\234e\221=K\003A\020\206\347\335\313\345b> \226\201\024\242"
 124      3D4B 0341 
 124      1086 E7DD 
GAS LISTING  			page 9


 124      CBE5 623E 
 124      2096 8114 
 125 0015 2856 F107 	 .ascii "(V\361\007\370C\"h\223\017\017</*\232T\026\331\230(\026\202\301"
 125      F843 2268 
 125      930F 0F3C 
 125      2F2A 9A54 
 125      16D9 9828 
 126 002c DAC2 9852 	 .ascii "\332\302\230R\304\332B\020\202\205E\024;\313C[\215\255\2440\316"
 126      C4DA 4210 
 126      8285 4514 
 126      3BCB 435B 
 126      8DAD A430 
 127 0041 DC25 0AC9 	 .ascii "\334%\n\311\300\315\356\316<3\363\356\236\"E\343\226\342/\315"
 127      C0CD EECE 
 127      3C33 F3EE 
 127      9E22 45E3 
 127      96E2 2FCD 
 128 0055 E105 5E61 	 .ascii "\341\005^a\020T\363\211\250\026Q\200l\bTU\250\256AP\314RK\353"
 128      1054 F389 
 128      A816 5180 
 128      6C08 5455 
 128      A8AE 4150 
 129 006d 33EF A1FF 	 .ascii "3\357\241\377\212C\355\351\246\376\031T\341\202\273\246A6h\225"
 129      8A43 EDE9 
 129      A6FE 1954 
 129      E182 BBA6 
 129      4136 6895 
 130 0081 0F48 FA8B 	 .ascii "\017H\372\213\032\233t\243\356\275\301\340\374\256\361\2668\r"
 130      1A9B 74A3 
 130      EEBD C1E0 
 130      FCAE F1B6 
 130      380D 
 131 0093 EC48 8D0B 	 .ascii "\354H\215\013\303\020\027\342#L\331\205\305YTD\213G\3058\254"
 131      C310 17E2 
 131      234C D985 
 131      C559 5444 
 131      8B47 C538 
 132 00a8 E2EC 8C04 	 .ascii "\342\354\214\004\273\020\3670\251\241us&H\223\fd\313\262\027"
 132      BB10 F730 
 132      A9A1 7573 
 132      2648 930C 
 132      64CB B217 
 133 00bc A52B 50B2 	 .ascii "\245+P\262\032]:\350\325\257N\227\213hsS\007\312\001\023]\252"
 133      1A5D 3AE8 
 133      D5AF 4E97 
 133      8B68 7353 
 133      07CA 0113 
 134 00d2 5F1B A390 	 .ascii "_\033\243\220\301Q\321hHS\237\277T\243\234\351\310(\306o\377"
 134      C151 D168 
 134      4853 9FBF 
 134      54A3 9CE9 
 134      C828 C66F 
 135 00e7 F0B0 5F61 	 .ascii "\360\260_a\016\321\255Q\330\342\f\321#\rK\003U\034&z\246\372"
 135      0ED1 AD51 
 135      D8E2 0CD1 
 135      230D 4B03 
 135      551C 267A 
GAS LISTING  			page 10


 136 00fd C5C7 B09C 	 .ascii "\305\307\260\234h\237\372\372X']\204l\370\212\371\222\246@\r"
 136      689F FAFA 
 136      5827 5D84 
 136      6CF8 8AF9 
 136      92A6 400D 
 137 0111 EFF3 1D13 	 .ascii "\357\363\035\023T\330F\360t\242\320\232c8\"\360\221\327\353\304"
 137      54D8 46F0 
 137      74A2 D09A 
 137      6338 22F0 
 137      91D7 EBC4 
 138 0125 26E0 299B 	 .ascii "&\340)\233\177\231\230\203\230\203\270\203\204\213h\320\373\253"
 138      7F99 9883 
 138      9883 B883 
 138      848B 68D0 
 138      FBAB 
 139 0137 1D9E C063 	 .ascii "\035\236\300c\266\377\216\202[.\342\276R\357\2733\t\262T\363"
 139      B6FF 8E82 
 139      5B2E E2BE 
 139      52EF BB33 
 139      09B2 54F3 
 140 014b 5FEA 0BD5 	 .ascii "_\352\013\325\274\223\371\021\024X\226\357\302\317-RS\231\314"
 140      BC93 F911 
 140      1458 96EF 
 140      C2CF 2D52 
 140      5399 CC
 141 015e 52B1 52CA 	 .ascii "R\261R\312\027vsv\331\337U\312\033\356^\246@\321r\336\335.l\226"
 141      1776 7376 
 141      D9DF 55CA 
 141      1BEE 5EA6 
 141      40D1 72DE 
 142 0176 D6CB B95F 	 .ascii "\326\313\271_\rF\207\316"
 142      0D46 87CE 
 143               	 .text
 144               	 .section .gnu.lto_.symbol_nodes.7ba86d2cebe2b82f,"",@progbits
 145 0000 789C 4D91 	 .ascii "x\234M\221MN\3040\f\205\035'i\322v:\177\027\340L\234\310\243"
 145      4D4E C430 
 145      0C85 1D27 
 145      69D2 763A 
 145      7F17 E04C 
 146 0017 A904 0824 	 .ascii "\251\004\b$4'`\323\233\320=g`\324-g@\244\366\023i7\237^\033?"
 146      3427 60D3 
 146      9BD0 3D67 
 146      60D4 2D67 
 146      40A4 F613 
 147 0031 7D4E 9998 	 .ascii "}N\231\230\036=\331\303$D\267/\"\221\217\027\307N\334&\261\360"
 147      1E3D D9C3 
 147      2444 B72F 
 147      2291 8F17 
 147      C74E DC26 
 148 0047 2679 F19B 	 .ascii "&y\361\233\024%lR#q\223\2024\233\224$\325\344z\311\226.\027\347"
 148      1425 6C52 
 148      2371 9382 
 148      349B 9424 
 148      D5E4 7AC9 
 149 005f 5A69 6BE8 	 .ascii "Zik\350\244\253!K_\303^v5\f2\324\260\223}\r\0079\324p\226c\r"
 149      A4AB 214B 
 149      5FC3 5E76 
GAS LISTING  			page 11


 149      350C 32D4 
 149      B093 7D0D 
 150 007a 2739 D570 	 .ascii "'9\325p\224\363\177\360\324\323\370\375[\330\322\004\316\312"
 150      94F3 7FF0 
 150      D4D3 F8FD 
 150      5BD8 D204 
 150      CECA 
 151 008c 8EC6 BB71 	 .ascii "\216\306\273q\272\343=\270\200\343\323\317\203\316\201\2632\323"
 151      BAE3 3DB8 
 151      80E3 D3CF 
 151      83CE 81B3 
 151      32D3 
 152 009e B2D2 EDAD 	 .ascii "\262\322\355\255\327\365\326\347\312\234r\260>\267\263\276B\355"
 152      D7F5 D6E7 
 152      CA9C 72B0 
 152      3EB7 B3BE 
 152      42ED 
 153 00b0 71E8 71E8 	 .ascii "q\350q\350q\350a\3701\374\370`=\234\315\257|\327>\206\037\017"
 153      71E8 61F8 
 153      31FC F860 
 153      3D9C CDAF 
 153      7CD7 3E86 
 154 00c6 E6C7 F02B 	 .ascii "\346\307\360+\347gp|FV\026\037p|5N\312\216fp\001\3077|\007gp"
 154      E767 707C 
 154      4656 161F 
 154      707C 354E 
 154      CA8E 6670 
 155 00e1 5116 8FF7 	 .ascii "Q\026\217\367B\017O\017O\017\317B\365[3\250{z\354Y\250{\372l"
 155      420F 4F0F 
 155      4F0F CF42 
 155      F55B 33A8 
 155      7B7A EC59 
 156 00f9 7EA1 B59E 	 .ascii "~\241\265\236\200\236\200{\0138\027\340\035\340\035\340]\250"
 156      809E 807B 
 156      0B38 17E0 
 156      1DE0 1DE0 
 156      5DA8 
 157 010b DE11 1E11 	 .ascii "\336\021\036\021\3631\320\247\362h=\205zo\205\023\250\367\026"
 157      F331 D0A7 
 157      F268 3D85 
 157      7A6F 8513 
 157      A8F7 16
 158 011e B3F9 3567 	 .ascii "\263\3715g\233oN6\337D\272\256\357So\347\022\376\177\nt]}\322"
 158      9B6F 4E36 
 158      DF44 BAAE 
 158      EF53 6FE7 
 158      12FE 7F0A 
 159 0136 60FB A4AC 	 .ascii "`\373\244\254\373\320\037\250\007\377\023"
 159      FBD0 1FA8 
 159      07FF 13
 160               	 .text
 161               	 .section .gnu.lto_.refs.7ba86d2cebe2b82f,"",@progbits
 162 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
 162      6062 6064 
 162      8002 00
 163 000b 00        	 .string ""
 164 000c 4600      	 .string "F"
GAS LISTING  			page 12


 165 000e 06        	 .ascii "\006"
 166               	 .text
 167               	 .section .gnu.lto_.decls.7ba86d2cebe2b82f,"",@progbits
 168 0000 789C AD59 	 .string "x\234\255Ym\214\024E\032\256\352\371b`]\300\343N\214\211\340\005=\202\311.\354y\306\204\210$j\214\211gH\206M4&\342\354t\357\356\234C\317\336L\017\037\376\331b\357\016\277\r\340r\200\032nQ\276t#\313\036\"\212\260\354\345\370\360.Y\025\217\303,\212\016\347\235\212\036\334*Gf\215\302\370Vw\365twM\325l7\330\311\263S\335]O\275o=\357S5\323\275\nR\320\2240Be8\356\273\006\241\270\002@\b\315\003\214\003l\002l\001l\005\364\002\240+\332\001\350\003lC\326\361\023@?\340 `\bP\004\234\001\224"
 168      6D8C 1445 
 168      1AAE EAF9 
 168      6260 5DC0 
 168      E34E 8C89 
 169 00ac 318C D055 	 .string "1\214\320U\200_"
 169      805F 00
 170 00b3 6601 1A00 	 .string "f\001\032"
 171 00b7 4D80 9B00 	 .string "M\200\233"
 172 00bb 7301 B702 	 .string "s\001\267\002\356\001$"
 172      EE01 2400 
 173 00c3 F701 1EC4 	 .string "\367\001\036\304\250\352\350g\271D"
 173      A8EA E867 
 173      B944 00
 174 00ce 0FC1 FD99 	 .string "\017\301\375\231\200$\266r\273\021>["
 174      8024 B672 
 174      BB11 3E5B 
 174      00
 175 00db 8D8C 1761 	 .string "\215\214\027a\375\233\\\361hlz\375M\300[\200\003\200\375\200\277pqh\376W\262y\326\003\352\330xt\350\024\374\231\207k\307W\261\243\325\257X>16\356\255\330\311i.\233?\315\213v\373;\227\007\325p\002\343\212\342i\200_\273\342\366\"'\326\220k\356\367\260\030s\231\016t.\377\004|"
 175      FD9B 5CF1 
 175      686C 7AFD 
 175      4DC0 5B80 
 175      0380 FD80 
 176 013a 1806 7C08 	 .string "\030\006|\b8\311\305.2\255\307\212mk]\024\304\243\036\371\034p\032\360%\340+.\006\365F\224\351J\373\266r1\350\241\260~t\334\020|\236\003\374\037p\236\033\253\304\264\022\345\332\0068\013\355v\370\\\210\035\337\"\026\277\344\312\235\306J\270\274RFV\202\030\240\3209q\276\244\276\246\376Hc\307+\017C;\003\270\037\360"
 176      38C9 C52E 
 176      32AD C78A 
 176      6D6B 5D14 
 176      C4A3 1EF9 
 177 01a3 B6D6 C76D 	 .string "\266\326\307ml\216\213\341|\224q\303\214\377 \363|\211]\233\002\355\211\200I\200\311\\<\272\206\256@^o\206\307\230\267{]D\331\030\356\371\316u\315\367\347\3609\0030\r0\035p\035\027?\216\036#\244\213\220\325\244n}=\235\236\212\353\343\340\024\332\250\213\233\245\274\036m&dU\361\320\305\021\205\220\260\2127\3418\224\021\006\232\205^&p\007\310\023P\365\241b\034\257:W\361f<\013Yq\314\333\254Q\306\264\334O\320TzV\220)\353\353'#\030\227\220\036"
 177      6C8E 8BE1 
 177      7C94 71C3 
 177      8CFF 20F3 
 177      7C89 5D9B 
 178 0239 FEAD 9924 	 .string "\376\255\231$1\223\234Z#G\232\n\\\332f\3467[\260\341Xilcy=\300\372\2222;p\247}\251\263\022e\201\035e<co\305\223\035\341\b\313\326\354\301\030\223l\206\302\030\257\270\342\325\305\235\206\255\216\214\267\005WdeU\262\202\211\031V\225\006Gcp\251\327T"
 178      3193 9C5A 
 178      2347 9A0A 
 178      5CDA 66E6 
 178      375B B0E1 
 179 0292 B62A 5B6E 	 .ascii "\266*[nk\300\bW\217\210\267\036\221\270\323(\227C\342\202\220"
 179      6BC0 0857 
 179      8F88 B71E 
 179      91B8 D328 
 179      9743 E282 
 180 02a7 15B4 2096 	 .ascii "\025\264 \226J\242B\320q\373\002K\264S\"\221}\310x;\034\211\246"
 180      4AA2 42D0 
 180      71FB 024B 
 180      B453 2291 
 180      7DC8 783B 
 181 02be A18D A4A7 	 .ascii "\241\215\244\247X\274\260\341F\362;r\021\212\3713\264\226%<\037"
 181      58BC B0E1 
 181      46F2 3B72 
 181      118A F933 
 181      B496 253C 
 182 02d3 F29D F753 	 .ascii "\362\235\367Si\272\177\206\256\364\bY\303Z\006\367\234\3607\335"
GAS LISTING  			page 13


 182      69BA 7F86 
 182      AEF4 0859 
 182      C35A 06F7 
 182      9CF0 37DD 
 183 02e7 E7BD E2FB 	 .ascii "\347\275\342\373*n\016U\322W\350v\340\256\305\f\364"
 183      2A6E 0E55 
 183      D257 E876 
 183      E0AE C50C 
 183      F4
 184 02f8 1221 6BC8 	 .string "\022!k\310yjXl\257\250\024\355\323\217\247\t\023e\0033\342\356\325n\342o\374\023\277\366\020\263\376\211\375\207\225\251\266\261\n\034\315S\026\246\b\243\r\257\2444+\3322\037\321\020\272\001m\241U{z\260k*2\313\206\030\313c\3357\260\342\276`\025\177\360D7\314n\005\254\347N\337\305?\344-\276\307\362\225m\247G\2727\252x;\276>\350\236Re\343#\216\2159\337t\n}S\352\266\252Hy\nZ\211i\247\203\322z\260\321\205\302\036\344\205\375\233P\330\356\265\201\205}\207_U\275\265V\025\277\212$\347\234:Ob\241<\3372y,\267\2563;\r\371\262\353.\317\362x\236g\326ZXk\3351{\002\304\334\340ZY/\006\340\035u\3616\373\341I,0\304[\340\230\320\002\243\301-p\252\246\005.\255\344[\305%_\355\221\377u\263S\321\227\214\377p1U|\002\346\356\227\371\235\207\371Q"
 184      796A 586C 
 184      AFA8 14ED 
 184      D38F A709 
 184      1365 0333 
 185 03f9 E6AE 4AE9 	 .ascii "\346\256J\351T\374\261\037\236\244tE\276t\237U\227\25682x\342"
 185      54FC B11F 
 185      9EA4 7445 
 185      BE74 9F55 
 185      97AE 3832 
 186 040f B0B2 9E8C 	 .ascii "\260\262\236\214\224\313\023}W\356\354\245|%r\225\332/\256\324"
 186      94CB 137D 
 186      57EE ECA5 
 186      7C25 7295 
 186      DA2F AED4 
 187 0423 06D7 12B3 	 .ascii "\006\327\022\263\365>\343k\211\035\3600?\n\300<\357a~\354\207"
 187      F53E E36B 
 187      891D F030 
 187      3F0A C03C 
 187      EF61 7EEC 
 188 0438 2951 FC0C 	 .ascii ")Q\374\f\257\3707B\305\273\217\004U|\364\262~\204\260-\236?\347"
 188      AFF8 3742 
 188      C5BB 8F04 
 188      557C F4B2 
 188      7E84 B02D 
 189 044f 2AF2 BEB8 	 .ascii "*\362\276\270\"\356_!vEJ\276t}^P\021\177\314\243\202\212\370"
 189      22EE 5F21 
 189      7645 4ABE 
 189      747D 5E50 
 189      117F CCA3 
 190 0466 63AE 36D7 	 .ascii "c\2566\327\216\365\315w\322\234P\251\3667\237\375K\304\305\373"
 190      8EF5 CD77 
 190      D29C 50A9 
 190      F637 9FFD 
 190      4BC4 C5FB 
 191 047a D40F 4FE2 	 .ascii "\324\017O\342\200\022\357\200\213\302\355\362\265\300k\3561\345"
 191      8012 EF80 
 191      8BC2 EDF2 
 191      B5C0 6BEE 
 191      31E5 
 192 048c C774 8078 	 .ascii "\307t\200xM\236\026;\340\244\300\001\217*~\252\361\254\300\001"
 192      4D9E 163B 
 192      E0A4 C001 
 192      8F2A 7EAA 
 192      F1AC C001 
 193 04a0 FE98 6F0A 	 .ascii "\376\230o\n\034\340\207\331EJk\335\277~F\314)\271\2305<\360'"
 193      1CE0 87D9 
 193      454A 6BDD 
GAS LISTING  			page 14


 193      BF7E 46CC 
 193      29B9 9835 
 194 04b7 D7AF D173 	 .ascii "\327\257\321s</\300.@Y\036\017<\243\210<\360^\340]`\375ey\300"
 194      3C2F C02E 
 194      4059 1E0F 
 194      3CA3 883C 
 194      F05E E05D 
 195 04d0 DFBE 5C12 	 .ascii "\337\276\\\022{\340\202\300\003\353|Ur\227\300\003\376\230\303"
 195      7BE0 82C0 
 195      03EB 7C55 
 195      7297 C003 
 195      FE98 C3
 196 04e3 020F F863 	 .ascii "\002\017\370c\226=?\324V*\3307s\217\313\003\217\373\341I<\260"
 196      963D 3FD4 
 196      562A D837 
 196      738F CB03 
 196      8FFB E149 
 197 04f9 8EF7 C0C6 	 .ascii "\216\367\300\306j\017\024W\025\367\255\371\f\377\201\234\"\203"
 197      6A0F 1457 
 197      15F7 ADF9 
 197      0CFF 819C 
 197      2283 
 198 050b E5F2 6DC8 	 .ascii "\345\362m\310\267\017\2663\037T\212\266]\361\026\315\016\372"
 198      B70F B633 
 198      1F54 8AB6 
 198      5DF1 16CD 
 198      0EFA 
 199 051d B228 E8E0 	 .ascii "\262(\350\340sG\272\346\007t^\257\310y\234s\372%I\274*Lbo\360"
 199      7347 BAE6 
 199      0774 5EAF 
 199      C879 9C73 
 199      FA25 49BC 
 200 0536 24FA F824 	 .ascii "$\372\370$z\253\223\330#I\242_\230\304\037+IX\242*h@\302\337"
 200      7AAB 93D8 
 200      2349 A25F 
 200      98C4 1F2B 
 200      4958 A22A 
 201 054e 25E4 0F04 	 .ascii "%\344\017\004\237\304ne\214'\312\2561\236(_4\237(\307xY&{\224"
 201      9FC4 6E65 
 201      8C27 CAAE 
 201      319E 285F 
 201      349F 28C7 
 202 0567 DCA3 541E 	 .ascii "\334\243T\036%\307\330\007\336\226\b\261W(\304\013.!\373L!\337"
 202      25C7 D807 
 202      DE96 08B1 
 202      5728 C40B 
 202      2E21 FB4C 
 203 057d 93F0 F709 	 .ascii "\223\360\367\t\370;\213_\037?\374\r>JV=EF\313\345#\230\220\r"
 203      F83B 8B5F 
 203      1F3F FC0D 
 203      3E4A 563D 
 203      4546 CBE5 
 204 0595 13DC 8AFA 	 .ascii "\023\334\212\372~\301U\374d\335\361s\270\213\314W\361\001\305"
 204      7EC1 55FC 
 204      64DD F173 
 204      B88B CC57 
 204      F101 C5
GAS LISTING  			page 15


 205 05a8 7CD4 0A5D 	 .ascii "|\324\n]\356k\256\352*\230\312)h[\b;\243\f\360\336\244_,\234"
 205      EE6B AEEA 
 205      2A98 CA29 
 205      685B 083B 
 205      A30C F0DE 
 206 05c0 A47D 9E5C 	 .ascii "\244}\236\\\330(\257\233\243\260\223\001{Hv\376W'\204\350`\233"
 206      D828 AF9B 
 206      A3B0 9301 
 206      7B48 76FE 
 206      5727 84E8 
 207 05d6 C8FE 3567 	 .ascii "\310\3765g\223\3017\221!o\306L\342\342\n2\303%\361t\233\025v"
 207      93C1 3791 
 207      216F C64C 
 207      E2E2 0A32 
 207      C325 F174 
 208 05ed 243E 5466 	 .ascii "$>Tfoz\3375\025~\273J\341\030\247p\314\253p,\3564\350;\220\211"
 208      6F7A DF35 
 208      157E BB4A 
 208      E118 A770 
 208      CCAB 702C 
 209 0607 55DE 3B1A 	 .ascii "U\336;\032\022{\347}\341\036\272\177\315\377.a\372\307D\005\033"
 209      127B E77D 
 209      E11E BA7F 
 209      CDFF 2E61 
 209      FAC7 4405 
 210 061c 634D 1C97 	 .ascii "cM\034\227\344\365\2010\257\3577vG\006w\222b\271<\315\177Z\303"
 210      E4F5 8130 
 210      AFEF 3776 
 210      4706 7792 
 210      62B9 3CCD 
 211 0633 35B6 07CF 	 .ascii "5\266\007\317k\325\252\245\375\241\357\245=\"\231\306I\361F\335"
 211      6BD5 AAA5 
 211      FDA1 EFA5 
 211      3D22 99C6 
 211      49F1 46DD 
 212 0647 4D7E 6F3D 	 .ascii "M~o=\331[\331)\350\202\204\377\211\227\317\345N\367WY\356E'w"
 212      D95B D929 
 212      E882 84FF 
 212      8997 CFE5 
 212      4EF7 5759 
 213 065f 8ED5 5B83 	 .ascii "\216\325[\203uJ\312\352\253\301\372\227\2245P\203\365\251\224"
 213      754A CAEA 
 213      ABC1 FA97 
 213      9435 5083 
 213      F5A9 94
 214 0672 B5BB 06EB 	 .ascii "\265\273\006\353\337R\326P\r\326\177\024\357\233}\3237\322o\004"
 214      DF52 D650 
 214      0DD6 7F14 
 214      EF9B 7DD3 
 214      37D2 6F04 
 215 0686 F3C1 5E71 	 .ascii "\363\301^q\336/\3226\367~\221^\352\254J\201>\305\313R\370\\\232"
 215      DE2F D236 
 215      F77E 915E 
 215      EAAC 4A81 
 215      3EC5 CB52 
 216 069d F8B1 1A89 	 .ascii "\370\261\032\211\177\341\260\334\377\240\301\036\343\316\264"
 216      7FE1 B0DC 
GAS LISTING  			page 16


 216      FFA0 C11E 
 216      E3CE B4
 217 06ac 5911 C63A 	 .ascii "Y\021\306:\255\004\375\177\300\227\256\351\272\377\037\020\026"
 217      AD04 FD7F 
 217      C097 AEE9 
 217      BAFF 1F10 
 217      16
 218 06bd A73C 5C23 	 .ascii "\247<\\#\345\257\244\023\245i\311X\377\225\262Fk\210z\306a\241"
 218      E5AF A413 
 218      A569 C958 
 218      FF95 B246 
 218      6B88 7AC6 
 219 06d3 6B1B 0BF9 	 .ascii "k\033\013\371\\c&\335\322\230\\\222kL\353\251LA\325\032\363\206"
 219      5C63 26DD 
 219      D298 5C92 
 219      6B4C EBA9 
 219      4C41 D51A 
 220 06e9 9AD6 8D86 	 .ascii "\232\326\215\206v\024+\300\347-\213\214\350]\3676O\277\035\205"
 220      7614 2BC0 
 220      E72D 8B8C 
 220      E85D F736 
 220      4FBF 1D85 
 221 06fd 53ED C9DC 	 .ascii "S\355\311\3348zm\316\315\213\214\253\033\032\032\325\302\342"
 221      387A 6DCE 
 221      CD8B 8CAB 
 221      1B1A 1AD5 
 221      C2E2 
 222 070f 9654 2ED9 	 .ascii "\226T.\331j\230\255\202\221\316\344\033Rh|s\207\2324\264D&kD"
 222      6A98 AD82 
 222      91CE E41B 
 222      5268 7C73 
 222      879A 34B4 
 223 0727 97A6 7535 	 .ascii "\227\246u5\2734\234\207v$\225-\350\206\222V\243jrq\262M\213\336"
 223      BB34 9C87 
 223      7624 952D 
 223      E886 9256 
 223      A36A 7271 
 224 073f B5E0 F6F6 	 .ascii "\265\340\366\366\244\0216\264e\306\204DGr\251~\247n\244\215\345"
 224      A411 36B4 
 224      65C6 8444 
 224      4772 A97E 
 224      A76E A48D 
 225 0754 212D AD86 	 .ascii "!-\255\206\215\345\035\032^\206\227\343G&ZW\2551\027d\363Q\315"
 225      8DE5 1D1A 
 225      5E86 97E3 
 225      4726 5A57 
 225      AD31 1764 
 226 076b 3C9F 72B7 	 .ascii "<\237r\267nh9=\231Ih\272\n\227\323F:\253\217O\244\333\364\205"
 226      6E68 393D 
 226      9949 68BA 
 226      0A97 D346 
 226      3AAB 8F4F 
 227 0783 305E 7347 	 .ascii "0^sG$\223\326\2659\346\337\246(\275\334\334\241\344\215\320\222"
 227      2493 D6B5 
 227      39E6 DFA6 
 227      28BD DCDC 
 227      A1E4 8DD0 
GAS LISTING  			page 17


 228 0798 64A6 3ED1 	 .ascii "d\246>\321\222\311\246\036\266\371J\213\021^\254\031\311\352"
 228      92C9 A61E 
 228      B6F9 4A8B 
 228      115E AC19 
 228      C9EA 
 229 07aa F998 2D90 	 .ascii "\371\230-\220a\334\035Y]\243a\"\211\226\345\206\026M\344\333"
 229      61DC 1D59 
 229      5DA3 6122 
 229      8996 E586 
 229      164D E4DB 
 230 07be B339 239E 	 .ascii "\2639#\2360\2229\203^\216%Z\n\255\255Z.\226"
 230      3092 3983 
 230      5E8E 255A 
 230      0AAD AD5A 
 230      2E96 
 231 07d0 5892 CC81 	 .string "X\222\314\201:2U\341^\033\f7\263r\273-\2252\273\334\324pKC\223[~Uk\205\216\321|\372\021m\221\021\323\263\272^\310d\2420BF\323\341\324h\317\201\246\031-\331\032\356(\3444\263$\277lZd\204\023\320\210%\254H\223a>\020$\337H\3132g6\214W\327L\313\2710;\347\346\204\221\253\234\314\206\223\037"
 231      3A32 55E1 
 231      5E1B 0C37 
 231      B372 BB2D 
 231      9532 BBDC 
 232 083a F9CB DE76 	 .ascii "\371\313\336v"
 233               	 .text
 234               	 .section .gnu.lto_.symtab.7ba86d2cebe2b82f,"",@progbits
 235 0000 5570 6461 	 .string "UpdateSlot"
 235      7465 536C 
 235      6F74 00
 236 000b 00        	 .string ""
 237 000c 00        	 .string ""
 238 000d 00        	 .string ""
 239 000e 00        	 .string ""
 240 000f 00        	 .string ""
 241 0010 00        	 .string ""
 242 0011 00        	 .string ""
 243 0012 00        	 .string ""
 244 0013 00        	 .string ""
 245 0014 00        	 .string ""
 246 0015 00        	 .string ""
 247 0016 B100      	 .string "\261"
 248 0018 00        	 .string ""
 249 0019 00        	 .string ""
 250 001a 4750 4368 	 .string "GPChat"
 250      6174 00
 251 0021 00        	 .string ""
 252 0022 00        	 .string ""
 253 0023 00        	 .string ""
 254 0024 00        	 .string ""
 255 0025 00        	 .string ""
 256 0026 00        	 .string ""
 257 0027 00        	 .string ""
 258 0028 00        	 .string ""
 259 0029 00        	 .string ""
 260 002a 00        	 .string ""
 261 002b 00        	 .string ""
 262 002c C400      	 .string "\304"
 263 002e 00        	 .string ""
 264 002f 00        	 .string ""
 265 0030 5370 6177 	 .string "SpawnEntity"
GAS LISTING  			page 18


 265      6E45 6E74 
 265      6974 7900 
 266 003c 00        	 .string ""
 267 003d 00        	 .string ""
 268 003e 00        	 .string ""
 269 003f 00        	 .string ""
 270 0040 00        	 .string ""
 271 0041 00        	 .string ""
 272 0042 00        	 .string ""
 273 0043 00        	 .string ""
 274 0044 00        	 .string ""
 275 0045 00        	 .string ""
 276 0046 00        	 .string ""
 277 0047 CD00      	 .string "\315"
 278 0049 00        	 .string ""
 279 004a 00        	 .string ""
 280 004b 456E 7469 	 .string "EntityUpdatePos"
 280      7479 5570 
 280      6461 7465 
 280      506F 7300 
 281 005b 00        	 .string ""
 282 005c 00        	 .string ""
 283 005d 00        	 .string ""
 284 005e 00        	 .string ""
 285 005f 00        	 .string ""
 286 0060 00        	 .string ""
 287 0061 00        	 .string ""
 288 0062 00        	 .string ""
 289 0063 00        	 .string ""
 290 0064 00        	 .string ""
 291 0065 00        	 .string ""
 292 0066 E000      	 .string "\340"
 293 0068 00        	 .string ""
 294 0069 00        	 .string ""
 295 006a 496E 7465 	 .string "InternalSendPosition"
 295      726E 616C 
 295      5365 6E64 
 295      506F 7369 
 295      7469 6F6E 
 296 007f 00        	 .string ""
 297 0080 00        	 .string ""
 298 0081 00        	 .string ""
 299 0082 00        	 .string ""
 300 0083 00        	 .string ""
 301 0084 00        	 .string ""
 302 0085 00        	 .string ""
 303 0086 00        	 .string ""
 304 0087 00        	 .string ""
 305 0088 00        	 .string ""
 306 0089 00        	 .string ""
 307 008a ED00      	 .string "\355"
 308 008c 00        	 .string ""
 309 008d 00        	 .string ""
 310 008e 5369 676E 	 .string "SignTextUp"
 310      5465 7874 
 310      5570 00
 311 0099 00        	 .string ""
GAS LISTING  			page 19


 312 009a 00        	 .string ""
 313 009b 00        	 .string ""
 314 009c 00        	 .string ""
 315 009d 00        	 .string ""
 316 009e 00        	 .string ""
 317 009f 00        	 .string ""
 318 00a0 00        	 .string ""
 319 00a1 00        	 .string ""
 320 00a2 00        	 .string ""
 321 00a3 00        	 .string ""
 322 00a4 F700      	 .string "\367"
 323 00a6 00        	 .string ""
 324 00a7 00        	 .string ""
 325 00a8 5369 676E 	 .string "SignUp"
 325      5570 00
 326 00af 00        	 .string ""
 327 00b0 00        	 .string ""
 328 00b1 00        	 .string ""
 329 00b2 00        	 .string ""
 330 00b3 00        	 .string ""
 331 00b4 00        	 .string ""
 332 00b5 00        	 .string ""
 333 00b6 00        	 .string ""
 334 00b7 00        	 .string ""
 335 00b8 00        	 .string ""
 336 00b9 00        	 .string ""
 337 00ba 0701 00   	 .string "\007\001"
 338 00bd 00        	 .string ""
 339 00be 5362 6C6F 	 .string "SblockInternal"
 339      636B 496E 
 339      7465 726E 
 339      616C 00
 340 00cd 00        	 .string ""
 341 00ce 00        	 .string ""
 342 00cf 00        	 .string ""
 343 00d0 00        	 .string ""
 344 00d1 00        	 .string ""
 345 00d2 00        	 .string ""
 346 00d3 00        	 .string ""
 347 00d4 00        	 .string ""
 348 00d5 00        	 .string ""
 349 00d6 00        	 .string ""
 350 00d7 00        	 .string ""
 351 00d8 1701 00   	 .string "\027\001"
 352 00db 00        	 .string ""
 353 00dc 446F 6E65 	 .string "DoneSend"
 353      5365 6E64 
 353      00
 354 00e5 00        	 .string ""
 355 00e6 0200      	 .string "\002"
 356 00e8 00        	 .string ""
 357 00e9 00        	 .string ""
 358 00ea 00        	 .string ""
 359 00eb 00        	 .string ""
 360 00ec 00        	 .string ""
 361 00ed 00        	 .string ""
 362 00ee 00        	 .string ""
GAS LISTING  			page 20


 363 00ef 00        	 .string ""
 364 00f0 2701 00   	 .string "'\001"
 365 00f3 00        	 .string ""
 366 00f4 5362 7974 	 .string "Sbyte"
 366      6500 
 367 00fa 00        	 .string ""
 368 00fb 0200      	 .string "\002"
 369 00fd 00        	 .string ""
 370 00fe 00        	 .string ""
 371 00ff 00        	 .string ""
 372 0100 00        	 .string ""
 373 0101 00        	 .string ""
 374 0102 00        	 .string ""
 375 0103 00        	 .string ""
 376 0104 00        	 .string ""
 377 0105 2A01 00   	 .string "*\001"
 378 0108 00        	 .string ""
 379 0109 5373 686F 	 .string "Sshort"
 379      7274 00
 380 0110 00        	 .string ""
 381 0111 0200      	 .string "\002"
 382 0113 00        	 .string ""
 383 0114 00        	 .string ""
 384 0115 00        	 .string ""
 385 0116 00        	 .string ""
 386 0117 00        	 .string ""
 387 0118 00        	 .string ""
 388 0119 00        	 .string ""
 389 011a 00        	 .string ""
 390 011b 2E01 00   	 .string ".\001"
 391 011e 00        	 .string ""
 392 011f 5374 6172 	 .string "StartSend"
 392      7453 656E 
 392      6400 
 393 0129 00        	 .string ""
 394 012a 0200      	 .string "\002"
 395 012c 00        	 .string ""
 396 012d 00        	 .string ""
 397 012e 00        	 .string ""
 398 012f 00        	 .string ""
 399 0130 00        	 .string ""
 400 0131 00        	 .string ""
 401 0132 00        	 .string ""
 402 0133 00        	 .string ""
 403 0134 3201 00   	 .string "2\001"
 404 0137 00        	 .string ""
 405 0138 5362 7566 	 .string "Sbuffer"
 405      6665 7200 
 406 0140 00        	 .string ""
 407 0141 0200      	 .string "\002"
 408 0143 00        	 .string ""
 409 0144 00        	 .string ""
 410 0145 00        	 .string ""
 411 0146 00        	 .string ""
 412 0147 00        	 .string ""
 413 0148 00        	 .string ""
 414 0149 00        	 .string ""
GAS LISTING  			page 21


 415 014a 00        	 .string ""
 416 014b 3401 00   	 .string "4\001"
 417 014e 00        	 .string ""
 418 014f 5376 6172 	 .string "Svarint"
 418      696E 7400 
 419 0157 00        	 .string ""
 420 0158 0200      	 .string "\002"
 421 015a 00        	 .string ""
 422 015b 00        	 .string ""
 423 015c 00        	 .string ""
 424 015d 00        	 .string ""
 425 015e 00        	 .string ""
 426 015f 00        	 .string ""
 427 0160 00        	 .string ""
 428 0161 00        	 .string ""
 429 0162 3B01 00   	 .string ";\001"
 430 0165 00        	 .string ""
 431 0166 5369 6E74 	 .string "Sint"
 431      00
 432 016b 00        	 .string ""
 433 016c 0200      	 .string "\002"
 434 016e 00        	 .string ""
 435 016f 00        	 .string ""
 436 0170 00        	 .string ""
 437 0171 00        	 .string ""
 438 0172 00        	 .string ""
 439 0173 00        	 .string ""
 440 0174 00        	 .string ""
 441 0175 00        	 .string ""
 442 0176 4C01 00   	 .string "L\001"
 443 0179 00        	 .string ""
 444 017a 5373 7472 	 .string "Sstring"
 444      696E 6700 
 445 0182 00        	 .string ""
 446 0183 0200      	 .string "\002"
 447 0185 00        	 .string ""
 448 0186 00        	 .string ""
 449 0187 00        	 .string ""
 450 0188 00        	 .string ""
 451 0189 00        	 .string ""
 452 018a 00        	 .string ""
 453 018b 00        	 .string ""
 454 018c 00        	 .string ""
 455 018d 5301 00   	 .string "S\001"
 456 0190 00        	 .string ""
 457 0191 5569 6E74 	 .string "Uint8To16Str"
 457      3854 6F31 
 457      3653 7472 
 457      00
 458 019e 00        	 .string ""
 459 019f 0200      	 .string "\002"
 460 01a1 00        	 .string ""
 461 01a2 00        	 .string ""
 462 01a3 00        	 .string ""
 463 01a4 00        	 .string ""
 464 01a5 00        	 .string ""
 465 01a6 00        	 .string ""
GAS LISTING  			page 22


 466 01a7 00        	 .string ""
 467 01a8 00        	 .string ""
 468 01a9 5801 00   	 .string "X\001"
 469 01ac 00        	 .string ""
 470 01ad 5569 6E74 	 .string "Uint8To10Str"
 470      3854 6F31 
 470      3053 7472 
 470      00
 471 01ba 00        	 .string ""
 472 01bb 0200      	 .string "\002"
 473 01bd 00        	 .string ""
 474 01be 00        	 .string ""
 475 01bf 00        	 .string ""
 476 01c0 00        	 .string ""
 477 01c1 00        	 .string ""
 478 01c2 00        	 .string ""
 479 01c3 00        	 .string ""
 480 01c4 00        	 .string ""
 481 01c5 5E01 00   	 .string "^\001"
 482 01c8 00        	 .string ""
 483               	 .text
 484               	 .section .gnu.lto_.opts,"",@progbits
 485 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 485      6375 3D61 
 485      746D 6567 
 485      6133 3275 
 485      3227 2027 
 486               	 .text
 487               	 .cfi_sections .debug_frame
 488               	.global UpdateSlot
 490               	UpdateSlot:
 491               	.LFB0:
 492               	 .file 1 "../dumbcraft/dumbutils.c"
   1:../dumbcraft/dumbutils.c **** #include "dumbutils.h"
   2:../dumbcraft/dumbutils.c **** #include "dumbcraft.h"
   3:../dumbcraft/dumbutils.c **** #include <util10.h>
   4:../dumbcraft/dumbutils.c **** #include <string.h>
   5:../dumbcraft/dumbutils.c **** 
   6:../dumbcraft/dumbutils.c **** void UpdateSlot( uint8_t window, uint8_t slot, uint8_t count, uint16_t id, uint8_t damage )
   7:../dumbcraft/dumbutils.c **** {
 493               	 .loc 1 7 0
 494               	 .cfi_startproc
 495               	.LVL0:
 496 0000 EF92      	 push r14
 497               	.LCFI0:
 498               	 .cfi_def_cfa_offset 3
 499               	 .cfi_offset 14,-2
 500 0002 FF92      	 push r15
 501               	.LCFI1:
 502               	 .cfi_def_cfa_offset 4
 503               	 .cfi_offset 15,-3
 504 0004 0F93      	 push r16
 505               	.LCFI2:
 506               	 .cfi_def_cfa_offset 5
 507               	 .cfi_offset 16,-4
 508 0006 1F93      	 push r17
 509               	.LCFI3:
GAS LISTING  			page 23


 510               	 .cfi_def_cfa_offset 6
 511               	 .cfi_offset 17,-5
 512 0008 CF93      	 push r28
 513               	.LCFI4:
 514               	 .cfi_def_cfa_offset 7
 515               	 .cfi_offset 28,-6
 516 000a DF93      	 push r29
 517               	.LCFI5:
 518               	 .cfi_def_cfa_offset 8
 519               	 .cfi_offset 29,-7
 520 000c 00D0      	 rcall .
 521               	.LCFI6:
 522               	 .cfi_def_cfa_offset 10
 523 000e CDB7      	 in r28,__SP_L__
 524 0010 DEB7      	 in r29,__SP_H__
 525               	.LCFI7:
 526               	 .cfi_def_cfa_register 28
 527               	 
 528               	 
 529               	 
 530               	.L__stack_usage =8
 531 0012 182F      	 mov r17,r24
 532 0014 7901      	 movw r14,r18
   8:../dumbcraft/dumbutils.c **** 	StartSend();
 533               	 .loc 1 8 0
 534 0016 4A83      	 std Y+2,r20
 535 0018 6983      	 std Y+1,r22
 536 001a 0E94 0000 	 call StartSend
 537               	.LVL1:
   9:../dumbcraft/dumbutils.c **** 	Sbyte( 0x2F );
 538               	 .loc 1 9 0
 539 001e 8FE2      	 ldi r24,lo8(47)
 540 0020 0E94 0000 	 call Sbyte
 541               	.LVL2:
  10:../dumbcraft/dumbutils.c **** 	Sbyte( window ); 
 542               	 .loc 1 10 0
 543 0024 812F      	 mov r24,r17
 544 0026 0E94 0000 	 call Sbyte
 545               	.LVL3:
  11:../dumbcraft/dumbutils.c **** 	Sshort( slot );
 546               	 .loc 1 11 0
 547 002a 6981      	 ldd r22,Y+1
 548 002c 862F      	 mov r24,r22
 549 002e 90E0      	 ldi r25,0
 550 0030 0E94 0000 	 call Sshort
 551               	.LVL4:
  12:../dumbcraft/dumbutils.c **** 	Sshort( id );
 552               	 .loc 1 12 0
 553 0034 C701      	 movw r24,r14
 554 0036 0E94 0000 	 call Sshort
 555               	.LVL5:
  13:../dumbcraft/dumbutils.c **** 	Sbyte( count );
 556               	 .loc 1 13 0
 557 003a 4A81      	 ldd r20,Y+2
 558 003c 842F      	 mov r24,r20
 559 003e 0E94 0000 	 call Sbyte
 560               	.LVL6:
GAS LISTING  			page 24


  14:../dumbcraft/dumbutils.c **** 	Sbyte( damage );
 561               	 .loc 1 14 0
 562 0042 802F      	 mov r24,r16
 563 0044 0E94 0000 	 call Sbyte
 564               	.LVL7:
  15:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //??????
 565               	 .loc 1 15 0
 566 0048 80E0      	 ldi r24,0
 567 004a 0E94 0000 	 call Sbyte
 568               	.LVL8:
  16:../dumbcraft/dumbutils.c **** 	Sbyte( 0xff );
 569               	 .loc 1 16 0
 570 004e 8FEF      	 ldi r24,lo8(-1)
 571 0050 0E94 0000 	 call Sbyte
 572               	.LVL9:
  17:../dumbcraft/dumbutils.c **** 	Sbyte( 0xff ); 
 573               	 .loc 1 17 0
 574 0054 8FEF      	 ldi r24,lo8(-1)
 575 0056 0E94 0000 	 call Sbyte
 576               	.LVL10:
 577               	 
  18:../dumbcraft/dumbutils.c **** 	DoneSend();
  19:../dumbcraft/dumbutils.c **** }
 578               	 .loc 1 19 0
 579 005a 0F90      	 pop __tmp_reg__
 580 005c 0F90      	 pop __tmp_reg__
 581 005e DF91      	 pop r29
 582 0060 CF91      	 pop r28
 583 0062 1F91      	 pop r17
 584               	.LVL11:
 585 0064 0F91      	 pop r16
 586               	.LVL12:
 587 0066 FF90      	 pop r15
 588 0068 EF90      	 pop r14
 589               	.LVL13:
  18:../dumbcraft/dumbutils.c **** 	DoneSend();
 590               	 .loc 1 18 0
 591 006a 0C94 0000 	 jmp DoneSend
 592               	.LVL14:
 593               	 .cfi_endproc
 594               	.LFE0:
 596               	 .section .rodata.str1.1,"aMS",@progbits,1
 597               	.LC0:
 598 0000 7B22 7465 	 .string "{\"text\":\""
 598      7874 223A 
 598      2200 
 599               	 .text
 600               	.global GPChat
 602               	GPChat:
 603               	.LFB1:
  20:../dumbcraft/dumbutils.c **** 
  21:../dumbcraft/dumbutils.c **** void GPChat( const char * text )
  22:../dumbcraft/dumbutils.c **** {
 604               	 .loc 1 22 0
 605               	 .cfi_startproc
 606               	.LVL15:
 607 006e 0F93      	 push r16
GAS LISTING  			page 25


 608               	.LCFI8:
 609               	 .cfi_def_cfa_offset 3
 610               	 .cfi_offset 16,-2
 611 0070 1F93      	 push r17
 612               	.LCFI9:
 613               	 .cfi_def_cfa_offset 4
 614               	 .cfi_offset 17,-3
 615 0072 CF93      	 push r28
 616               	.LCFI10:
 617               	 .cfi_def_cfa_offset 5
 618               	 .cfi_offset 28,-4
 619 0074 DF93      	 push r29
 620               	.LCFI11:
 621               	 .cfi_def_cfa_offset 6
 622               	 .cfi_offset 29,-5
 623               	 
 624               	 
 625               	 
 626               	.L__stack_usage =4
 627 0076 8C01      	 movw r16,r24
  23:../dumbcraft/dumbutils.c **** 	uint16_t chatlen = strlen( text );
 628               	 .loc 1 23 0
 629 0078 EC01      	 movw r28,r24
 630               	 0:
 631 007a 0990      	 ld __tmp_reg__,Y+
 632 007c 0020      	 tst __tmp_reg__
 633 007e 01F4      	 brne 0b
 634 0080 2197      	 sbiw r28,1
 635 0082 C81B      	 sub r28,r24
 636 0084 D90B      	 sbc r29,r25
 637               	.LVL16:
  24:../dumbcraft/dumbutils.c **** 	StartSend();
 638               	 .loc 1 24 0
 639 0086 0E94 0000 	 call StartSend
 640               	.LVL17:
  25:../dumbcraft/dumbutils.c **** 	Sbyte( 0x02 );
 641               	 .loc 1 25 0
 642 008a 82E0      	 ldi r24,lo8(2)
 643 008c 0E94 0000 	 call Sbyte
 644               	.LVL18:
  26:../dumbcraft/dumbutils.c **** 	Svarint( chatlen + 11 );
 645               	 .loc 1 26 0
 646 0090 CE01      	 movw r24,r28
 647 0092 0B96      	 adiw r24,11
 648 0094 0E94 0000 	 call Svarint
 649               	.LVL19:
  27:../dumbcraft/dumbutils.c **** 	Sbuffer( (const uint8_t*)"{\"text\":\"", 9 );
 650               	 .loc 1 27 0
 651 0098 69E0      	 ldi r22,lo8(9)
 652 009a 80E0      	 ldi r24,lo8(.LC0)
 653 009c 90E0      	 ldi r25,hi8(.LC0)
 654 009e 0E94 0000 	 call Sbuffer
 655               	.LVL20:
  28:../dumbcraft/dumbutils.c **** 	Sbuffer( (const uint8_t*)text, chatlen );
 656               	 .loc 1 28 0
 657 00a2 6C2F      	 mov r22,r28
 658 00a4 C801      	 movw r24,r16
GAS LISTING  			page 26


 659 00a6 0E94 0000 	 call Sbuffer
 660               	.LVL21:
  29:../dumbcraft/dumbutils.c **** 	Sbyte( '"' );
 661               	 .loc 1 29 0
 662 00aa 82E2      	 ldi r24,lo8(34)
 663 00ac 0E94 0000 	 call Sbyte
 664               	.LVL22:
  30:../dumbcraft/dumbutils.c **** 	Sbyte( '}' );
 665               	 .loc 1 30 0
 666 00b0 8DE7      	 ldi r24,lo8(125)
 667 00b2 0E94 0000 	 call Sbyte
 668               	.LVL23:
 669               	 
  31:../dumbcraft/dumbutils.c **** 	DoneSend();
  32:../dumbcraft/dumbutils.c **** }
 670               	 .loc 1 32 0
 671 00b6 DF91      	 pop r29
 672 00b8 CF91      	 pop r28
 673               	.LVL24:
 674 00ba 1F91      	 pop r17
 675 00bc 0F91      	 pop r16
 676               	.LVL25:
  31:../dumbcraft/dumbutils.c **** 	DoneSend();
 677               	 .loc 1 31 0
 678 00be 0C94 0000 	 jmp DoneSend
 679               	.LVL26:
 680               	 .cfi_endproc
 681               	.LFE1:
 683               	.global SpawnEntity
 685               	SpawnEntity:
 686               	.LFB2:
  33:../dumbcraft/dumbutils.c **** 
  34:../dumbcraft/dumbutils.c **** void SpawnEntity( uint16_t eid, uint8_t type, uint16_t x, uint16_t y, uint16_t z )
  35:../dumbcraft/dumbutils.c **** {
 687               	 .loc 1 35 0
 688               	 .cfi_startproc
 689               	.LVL27:
 690 00c2 BF92      	 push r11
 691               	.LCFI12:
 692               	 .cfi_def_cfa_offset 3
 693               	 .cfi_offset 11,-2
 694 00c4 CF92      	 push r12
 695               	.LCFI13:
 696               	 .cfi_def_cfa_offset 4
 697               	 .cfi_offset 12,-3
 698 00c6 DF92      	 push r13
 699               	.LCFI14:
 700               	 .cfi_def_cfa_offset 5
 701               	 .cfi_offset 13,-4
 702 00c8 EF92      	 push r14
 703               	.LCFI15:
 704               	 .cfi_def_cfa_offset 6
 705               	 .cfi_offset 14,-5
 706 00ca FF92      	 push r15
 707               	.LCFI16:
 708               	 .cfi_def_cfa_offset 7
 709               	 .cfi_offset 15,-6
GAS LISTING  			page 27


 710 00cc 0F93      	 push r16
 711               	.LCFI17:
 712               	 .cfi_def_cfa_offset 8
 713               	 .cfi_offset 16,-7
 714 00ce 1F93      	 push r17
 715               	.LCFI18:
 716               	 .cfi_def_cfa_offset 9
 717               	 .cfi_offset 17,-8
 718 00d0 CF93      	 push r28
 719               	.LCFI19:
 720               	 .cfi_def_cfa_offset 10
 721               	 .cfi_offset 28,-9
 722 00d2 DF93      	 push r29
 723               	.LCFI20:
 724               	 .cfi_def_cfa_offset 11
 725               	 .cfi_offset 29,-10
 726               	 
 727               	 
 728               	 
 729               	.L__stack_usage =9
 730 00d4 EC01      	 movw r28,r24
 731 00d6 B62E      	 mov r11,r22
 732 00d8 6A01      	 movw r12,r20
 733 00da 7901      	 movw r14,r18
  36:../dumbcraft/dumbutils.c **** 	StartSend();
 734               	 .loc 1 36 0
 735 00dc 0E94 0000 	 call StartSend
 736               	.LVL28:
  37:../dumbcraft/dumbutils.c **** 	Sbyte( 0x14 );
 737               	 .loc 1 37 0
 738 00e0 84E1      	 ldi r24,lo8(20)
 739 00e2 0E94 0000 	 call Sbyte
 740               	.LVL29:
  38:../dumbcraft/dumbutils.c **** 	Sint( eid );
 741               	 .loc 1 38 0
 742 00e6 BE01      	 movw r22,r28
 743 00e8 80E0      	 ldi r24,0
 744 00ea 90E0      	 ldi r25,0
 745 00ec 0E94 0000 	 call Sint
 746               	.LVL30:
  39:../dumbcraft/dumbutils.c **** 	DoneSend();
 747               	 .loc 1 39 0
 748 00f0 0E94 0000 	 call DoneSend
 749               	.LVL31:
  40:../dumbcraft/dumbutils.c **** 
  41:../dumbcraft/dumbutils.c **** 	StartSend();
 750               	 .loc 1 41 0
 751 00f4 0E94 0000 	 call StartSend
 752               	.LVL32:
  42:../dumbcraft/dumbutils.c **** 	Sbyte( 0x0F  );
 753               	 .loc 1 42 0
 754 00f8 8FE0      	 ldi r24,lo8(15)
 755 00fa 0E94 0000 	 call Sbyte
 756               	.LVL33:
  43:../dumbcraft/dumbutils.c **** 	Svarint( eid );
 757               	 .loc 1 43 0
 758 00fe CE01      	 movw r24,r28
GAS LISTING  			page 28


 759 0100 0E94 0000 	 call Svarint
 760               	.LVL34:
  44:../dumbcraft/dumbutils.c **** 	Sbyte( type );
 761               	 .loc 1 44 0
 762 0104 8B2D      	 mov r24,r11
 763 0106 0E94 0000 	 call Sbyte
 764               	.LVL35:
  45:../dumbcraft/dumbutils.c **** 	Sint( x );
 765               	 .loc 1 45 0
 766 010a B601      	 movw r22,r12
 767 010c 80E0      	 ldi r24,0
 768 010e 90E0      	 ldi r25,0
 769 0110 0E94 0000 	 call Sint
 770               	.LVL36:
  46:../dumbcraft/dumbutils.c **** 	Sint( y );
 771               	 .loc 1 46 0
 772 0114 B701      	 movw r22,r14
 773 0116 80E0      	 ldi r24,0
 774 0118 90E0      	 ldi r25,0
 775 011a 0E94 0000 	 call Sint
 776               	.LVL37:
  47:../dumbcraft/dumbutils.c **** 	Sint( z );
 777               	 .loc 1 47 0
 778 011e B801      	 movw r22,r16
 779 0120 80E0      	 ldi r24,0
 780 0122 90E0      	 ldi r25,0
 781 0124 0E94 0000 	 call Sint
 782               	.LVL38:
  48:../dumbcraft/dumbutils.c **** 	Sbyte( 0 );
 783               	 .loc 1 48 0
 784 0128 80E0      	 ldi r24,0
 785 012a 0E94 0000 	 call Sbyte
 786               	.LVL39:
  49:../dumbcraft/dumbutils.c **** 	Sbyte( 0 );
 787               	 .loc 1 49 0
 788 012e 80E0      	 ldi r24,0
 789 0130 0E94 0000 	 call Sbyte
 790               	.LVL40:
  50:../dumbcraft/dumbutils.c **** 	Sbyte( 0 );
 791               	 .loc 1 50 0
 792 0134 80E0      	 ldi r24,0
 793 0136 0E94 0000 	 call Sbyte
 794               	.LVL41:
  51:../dumbcraft/dumbutils.c **** 	Sshort( 0 );
 795               	 .loc 1 51 0
 796 013a 80E0      	 ldi r24,0
 797 013c 90E0      	 ldi r25,0
 798 013e 0E94 0000 	 call Sshort
 799               	.LVL42:
  52:../dumbcraft/dumbutils.c **** 	Sshort( 0 );
 800               	 .loc 1 52 0
 801 0142 80E0      	 ldi r24,0
 802 0144 90E0      	 ldi r25,0
 803 0146 0E94 0000 	 call Sshort
 804               	.LVL43:
  53:../dumbcraft/dumbutils.c **** 	Sshort( 0 );
 805               	 .loc 1 53 0
GAS LISTING  			page 29


 806 014a 80E0      	 ldi r24,0
 807 014c 90E0      	 ldi r25,0
 808 014e 0E94 0000 	 call Sshort
 809               	.LVL44:
  54:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //Byte, Index 0
 810               	 .loc 1 54 0
 811 0152 80E0      	 ldi r24,0
 812 0154 0E94 0000 	 call Sbyte
 813               	.LVL45:
  55:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //no parameters.
 814               	 .loc 1 55 0
 815 0158 80E0      	 ldi r24,0
 816 015a 0E94 0000 	 call Sbyte
 817               	.LVL46:
  56:../dumbcraft/dumbutils.c **** 	Sbyte( 127 );
 818               	 .loc 1 56 0
 819 015e 8FE7      	 ldi r24,lo8(127)
 820 0160 0E94 0000 	 call Sbyte
 821               	.LVL47:
 822               	 
  57:../dumbcraft/dumbutils.c **** 	DoneSend();
  58:../dumbcraft/dumbutils.c **** }
 823               	 .loc 1 58 0
 824 0164 DF91      	 pop r29
 825 0166 CF91      	 pop r28
 826               	.LVL48:
 827 0168 1F91      	 pop r17
 828 016a 0F91      	 pop r16
 829               	.LVL49:
 830 016c FF90      	 pop r15
 831 016e EF90      	 pop r14
 832               	.LVL50:
 833 0170 DF90      	 pop r13
 834 0172 CF90      	 pop r12
 835               	.LVL51:
 836 0174 BF90      	 pop r11
 837               	.LVL52:
  57:../dumbcraft/dumbutils.c **** 	DoneSend();
 838               	 .loc 1 57 0
 839 0176 0C94 0000 	 jmp DoneSend
 840               	.LVL53:
 841               	 .cfi_endproc
 842               	.LFE2:
 844               	.global EntityUpdatePos
 846               	EntityUpdatePos:
 847               	.LFB3:
  59:../dumbcraft/dumbutils.c **** 
  60:../dumbcraft/dumbutils.c **** void EntityUpdatePos( uint16_t entity, uint16_t x, uint16_t y, uint16_t z )
  61:../dumbcraft/dumbutils.c **** {
 848               	 .loc 1 61 0
 849               	 .cfi_startproc
 850               	.LVL54:
 851 017a CF92      	 push r12
 852               	.LCFI21:
 853               	 .cfi_def_cfa_offset 3
 854               	 .cfi_offset 12,-2
 855 017c DF92      	 push r13
GAS LISTING  			page 30


 856               	.LCFI22:
 857               	 .cfi_def_cfa_offset 4
 858               	 .cfi_offset 13,-3
 859 017e EF92      	 push r14
 860               	.LCFI23:
 861               	 .cfi_def_cfa_offset 5
 862               	 .cfi_offset 14,-4
 863 0180 FF92      	 push r15
 864               	.LCFI24:
 865               	 .cfi_def_cfa_offset 6
 866               	 .cfi_offset 15,-5
 867 0182 0F93      	 push r16
 868               	.LCFI25:
 869               	 .cfi_def_cfa_offset 7
 870               	 .cfi_offset 16,-6
 871 0184 1F93      	 push r17
 872               	.LCFI26:
 873               	 .cfi_def_cfa_offset 8
 874               	 .cfi_offset 17,-7
 875 0186 CF93      	 push r28
 876               	.LCFI27:
 877               	 .cfi_def_cfa_offset 9
 878               	 .cfi_offset 28,-8
 879 0188 DF93      	 push r29
 880               	.LCFI28:
 881               	 .cfi_def_cfa_offset 10
 882               	 .cfi_offset 29,-9
 883               	 
 884               	 
 885               	 
 886               	.L__stack_usage =8
 887 018a 6C01      	 movw r12,r24
 888 018c 7B01      	 movw r14,r22
 889 018e 8A01      	 movw r16,r20
 890 0190 E901      	 movw r28,r18
  62:../dumbcraft/dumbutils.c **** 	StartSend();
 891               	 .loc 1 62 0
 892 0192 0E94 0000 	 call StartSend
 893               	.LVL55:
  63:../dumbcraft/dumbutils.c **** 	Sbyte( 0x18 );
 894               	 .loc 1 63 0
 895 0196 88E1      	 ldi r24,lo8(24)
 896 0198 0E94 0000 	 call Sbyte
 897               	.LVL56:
  64:../dumbcraft/dumbutils.c **** 	Sint( entity );
 898               	 .loc 1 64 0
 899 019c B601      	 movw r22,r12
 900 019e 80E0      	 ldi r24,0
 901 01a0 90E0      	 ldi r25,0
 902 01a2 0E94 0000 	 call Sint
 903               	.LVL57:
  65:../dumbcraft/dumbutils.c **** 	Sint( x );
 904               	 .loc 1 65 0
 905 01a6 B701      	 movw r22,r14
 906 01a8 80E0      	 ldi r24,0
 907 01aa 90E0      	 ldi r25,0
 908 01ac 0E94 0000 	 call Sint
GAS LISTING  			page 31


 909               	.LVL58:
  66:../dumbcraft/dumbutils.c **** 	Sint( y );
 910               	 .loc 1 66 0
 911 01b0 B801      	 movw r22,r16
 912 01b2 80E0      	 ldi r24,0
 913 01b4 90E0      	 ldi r25,0
 914 01b6 0E94 0000 	 call Sint
 915               	.LVL59:
  67:../dumbcraft/dumbutils.c **** 	Sint( z );
 916               	 .loc 1 67 0
 917 01ba BE01      	 movw r22,r28
 918 01bc 80E0      	 ldi r24,0
 919 01be 90E0      	 ldi r25,0
 920 01c0 0E94 0000 	 call Sint
 921               	.LVL60:
  68:../dumbcraft/dumbutils.c **** 	Sbyte( 0 );
 922               	 .loc 1 68 0
 923 01c4 80E0      	 ldi r24,0
 924 01c6 0E94 0000 	 call Sbyte
 925               	.LVL61:
  69:../dumbcraft/dumbutils.c **** 	Sbyte( 0 );
 926               	 .loc 1 69 0
 927 01ca 80E0      	 ldi r24,0
 928 01cc 0E94 0000 	 call Sbyte
 929               	.LVL62:
 930               	 
  70:../dumbcraft/dumbutils.c **** 	DoneSend();
  71:../dumbcraft/dumbutils.c **** }
 931               	 .loc 1 71 0
 932 01d0 DF91      	 pop r29
 933 01d2 CF91      	 pop r28
 934               	.LVL63:
 935 01d4 1F91      	 pop r17
 936 01d6 0F91      	 pop r16
 937               	.LVL64:
 938 01d8 FF90      	 pop r15
 939 01da EF90      	 pop r14
 940               	.LVL65:
 941 01dc DF90      	 pop r13
 942 01de CF90      	 pop r12
 943               	.LVL66:
  70:../dumbcraft/dumbutils.c **** 	DoneSend();
 944               	 .loc 1 70 0
 945 01e0 0C94 0000 	 jmp DoneSend
 946               	.LVL67:
 947               	 .cfi_endproc
 948               	.LFE3:
 950               	.global InternalSendPosition
 952               	InternalSendPosition:
 953               	.LFB5:
  72:../dumbcraft/dumbutils.c **** 
  73:../dumbcraft/dumbutils.c **** //Update a sign at a specific location with a string and a numerical value.
  74:../dumbcraft/dumbutils.c **** void SignUp( uint8_t x, uint8_t y, uint8_t z, const char* st, uint8_t val )
  75:../dumbcraft/dumbutils.c **** {
  76:../dumbcraft/dumbutils.c **** 	char stmp1[5];
  77:../dumbcraft/dumbutils.c **** 	char stmp2[5];
  78:../dumbcraft/dumbutils.c **** 
GAS LISTING  			page 32


  79:../dumbcraft/dumbutils.c **** 	Uint8To10Str( stmp1, val );
  80:../dumbcraft/dumbutils.c **** 	Uint8To16Str( stmp2+2, val );
  81:../dumbcraft/dumbutils.c **** 	stmp2[0] = '0'; stmp2[1] = 'x';
  82:../dumbcraft/dumbutils.c **** 	SignTextUp( x, y, z, stmp1, stmp2 );
  83:../dumbcraft/dumbutils.c **** }
  84:../dumbcraft/dumbutils.c **** 
  85:../dumbcraft/dumbutils.c **** void InternalSendPosition (uint8_t x, uint8_t y, uint8_t z )
  86:../dumbcraft/dumbutils.c **** {
 954               	 .loc 1 86 0
 955               	 .cfi_startproc
 956               	.LVL68:
 957 01e4 0F93      	 push r16
 958               	.LCFI29:
 959               	 .cfi_def_cfa_offset 3
 960               	 .cfi_offset 16,-2
 961 01e6 1F93      	 push r17
 962               	.LCFI30:
 963               	 .cfi_def_cfa_offset 4
 964               	 .cfi_offset 17,-3
 965 01e8 CF93      	 push r28
 966               	.LCFI31:
 967               	 .cfi_def_cfa_offset 5
 968               	 .cfi_offset 28,-4
 969 01ea DF93      	 push r29
 970               	.LCFI32:
 971               	 .cfi_def_cfa_offset 6
 972               	 .cfi_offset 29,-5
 973 01ec 1F92      	 push __zero_reg__
 974               	.LCFI33:
 975               	 .cfi_def_cfa_offset 7
 976 01ee CDB7      	 in r28,__SP_L__
 977 01f0 DEB7      	 in r29,__SP_H__
 978               	.LCFI34:
 979               	 .cfi_def_cfa_register 28
 980               	 
 981               	 
 982               	 
 983               	.L__stack_usage =5
 984 01f2 182F      	 mov r17,r24
 985 01f4 062F      	 mov r16,r22
  87:../dumbcraft/dumbutils.c **** 	//uint32_t slp = ((uint32_t)x & 0x3FFFFFF) << 38 | ((uint32_t)y & 0xFFF) << 26 | ((uint32_t)z & 0x
  88:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //bits 56...
 986               	 .loc 1 88 0
 987 01f6 80E0      	 ldi r24,0
 988               	.LVL69:
 989 01f8 4983      	 std Y+1,r20
 990 01fa 0E94 0000 	 call Sbyte
 991               	.LVL70:
  89:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //bits 48... (Would be x>>10...) but we're limited in size.
 992               	 .loc 1 89 0
 993 01fe 80E0      	 ldi r24,0
 994 0200 0E94 0000 	 call Sbyte
 995               	.LVL71:
  90:../dumbcraft/dumbutils.c **** 	Sbyte( (x>>2) ); //bits 40...
 996               	 .loc 1 90 0
 997 0204 812F      	 mov r24,r17
 998 0206 8695      	 lsr r24
GAS LISTING  			page 33


 999 0208 8695      	 lsr r24
 1000 020a 0E94 0000 	 call Sbyte
 1001               	.LVL72:
  91:../dumbcraft/dumbutils.c **** 	Sbyte( ((x & 0x03)<<6) | ((y>>6)&0x3f) ); //bits 32...  XXX Not sure if Y is right.
 1002               	 .loc 1 91 0
 1003 020e 1295      	 swap r17
 1004               	.LVL73:
 1005 0210 110F      	 lsl r17
 1006 0212 110F      	 lsl r17
 1007 0214 107C      	 andi r17,lo8(-64)
 1008 0216 802F      	 mov r24,r16
 1009 0218 8295      	 swap r24
 1010 021a 8695      	 lsr r24
 1011 021c 8695      	 lsr r24
 1012 021e 8370      	 andi r24,lo8(3)
 1013 0220 812B      	 or r24,r17
 1014 0222 0E94 0000 	 call Sbyte
 1015               	.LVL74:
  92:../dumbcraft/dumbutils.c **** 	Sbyte( (y & 0x3f)<<2 ); //bits 24...
 1016               	 .loc 1 92 0
 1017 0226 802F      	 mov r24,r16
 1018 0228 880F      	 lsl r24
 1019 022a 880F      	 lsl r24
 1020 022c 0E94 0000 	 call Sbyte
 1021               	.LVL75:
  93:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //bits 16...
 1022               	 .loc 1 93 0
 1023 0230 80E0      	 ldi r24,0
 1024 0232 0E94 0000 	 call Sbyte
 1025               	.LVL76:
  94:../dumbcraft/dumbutils.c **** 	Sbyte( 0x00 ); //bits 8 ...
 1026               	 .loc 1 94 0
 1027 0236 80E0      	 ldi r24,0
 1028 0238 0E94 0000 	 call Sbyte
 1029               	.LVL77:
  95:../dumbcraft/dumbutils.c **** 	Sbyte( z ); //bits 0 ...
 1030               	 .loc 1 95 0
 1031 023c 4981      	 ldd r20,Y+1
 1032 023e 842F      	 mov r24,r20
 1033               	 
  96:../dumbcraft/dumbutils.c **** }
 1034               	 .loc 1 96 0
 1035 0240 0F90      	 pop __tmp_reg__
 1036 0242 DF91      	 pop r29
 1037 0244 CF91      	 pop r28
 1038 0246 1F91      	 pop r17
 1039 0248 0F91      	 pop r16
 1040               	.LVL78:
  95:../dumbcraft/dumbutils.c **** 	Sbyte( z ); //bits 0 ...
 1041               	 .loc 1 95 0
 1042 024a 0C94 0000 	 jmp Sbyte
 1043               	.LVL79:
 1044               	 .cfi_endproc
 1045               	.LFE5:
 1047               	 .section .rodata.str1.1
 1048               	.LC1:
 1049 000a 00        	 .string ""
GAS LISTING  			page 34


 1050               	 .text
 1051               	.global SignTextUp
 1053               	SignTextUp:
 1054               	.LFB6:
  97:../dumbcraft/dumbutils.c **** 
  98:../dumbcraft/dumbutils.c **** void SignTextUp( uint8_t x, uint8_t y, uint8_t z, const char * line1, const char * line2 )
  99:../dumbcraft/dumbutils.c **** {
 1055               	 .loc 1 99 0
 1056               	 .cfi_startproc
 1057               	.LVL80:
 1058 024e CF92      	 push r12
 1059               	.LCFI35:
 1060               	 .cfi_def_cfa_offset 3
 1061               	 .cfi_offset 12,-2
 1062 0250 DF92      	 push r13
 1063               	.LCFI36:
 1064               	 .cfi_def_cfa_offset 4
 1065               	 .cfi_offset 13,-3
 1066 0252 FF92      	 push r15
 1067               	.LCFI37:
 1068               	 .cfi_def_cfa_offset 5
 1069               	 .cfi_offset 15,-4
 1070 0254 0F93      	 push r16
 1071               	.LCFI38:
 1072               	 .cfi_def_cfa_offset 6
 1073               	 .cfi_offset 16,-5
 1074 0256 1F93      	 push r17
 1075               	.LCFI39:
 1076               	 .cfi_def_cfa_offset 7
 1077               	 .cfi_offset 17,-6
 1078 0258 CF93      	 push r28
 1079               	.LCFI40:
 1080               	 .cfi_def_cfa_offset 8
 1081               	 .cfi_offset 28,-7
 1082 025a DF93      	 push r29
 1083               	.LCFI41:
 1084               	 .cfi_def_cfa_offset 9
 1085               	 .cfi_offset 29,-8
 1086 025c 00D0      	 rcall .
 1087               	.LCFI42:
 1088               	 .cfi_def_cfa_offset 11
 1089 025e CDB7      	 in r28,__SP_L__
 1090 0260 DEB7      	 in r29,__SP_H__
 1091               	.LCFI43:
 1092               	 .cfi_def_cfa_register 28
 1093               	 
 1094               	 
 1095               	 
 1096               	.L__stack_usage =9
 1097 0262 F82E      	 mov r15,r24
 1098 0264 6901      	 movw r12,r18
 100:../dumbcraft/dumbutils.c **** 	StartSend();
 1099               	 .loc 1 100 0
 1100 0266 4A83      	 std Y+2,r20
 1101 0268 6983      	 std Y+1,r22
 1102 026a 0E94 0000 	 call StartSend
 1103               	.LVL81:
GAS LISTING  			page 35


 101:../dumbcraft/dumbutils.c **** 	Sbyte( 0x33 ); //sign update
 1104               	 .loc 1 101 0
 1105 026e 83E3      	 ldi r24,lo8(51)
 1106 0270 0E94 0000 	 call Sbyte
 1107               	.LVL82:
 102:../dumbcraft/dumbutils.c **** 	InternalSendPosition( x, y, z );
 1108               	 .loc 1 102 0
 1109 0274 4A81      	 ldd r20,Y+2
 1110 0276 6981      	 ldd r22,Y+1
 1111 0278 8F2D      	 mov r24,r15
 1112 027a 0E94 0000 	 call InternalSendPosition
 1113               	.LVL83:
 103:../dumbcraft/dumbutils.c **** 	Sstring( line1, -1 );
 1114               	 .loc 1 103 0
 1115 027e 6FEF      	 ldi r22,lo8(-1)
 1116 0280 C601      	 movw r24,r12
 1117 0282 0E94 0000 	 call Sstring
 1118               	.LVL84:
 104:../dumbcraft/dumbutils.c **** 	Sstring( "", 0 );
 1119               	 .loc 1 104 0
 1120 0286 60E0      	 ldi r22,0
 1121 0288 80E0      	 ldi r24,lo8(.LC1)
 1122 028a 90E0      	 ldi r25,hi8(.LC1)
 1123 028c 0E94 0000 	 call Sstring
 1124               	.LVL85:
 105:../dumbcraft/dumbutils.c **** 	Sstring( line2, -1 );
 1125               	 .loc 1 105 0
 1126 0290 6FEF      	 ldi r22,lo8(-1)
 1127 0292 C801      	 movw r24,r16
 1128 0294 0E94 0000 	 call Sstring
 1129               	.LVL86:
 106:../dumbcraft/dumbutils.c **** 	Sstring( "", 0 );
 1130               	 .loc 1 106 0
 1131 0298 60E0      	 ldi r22,0
 1132 029a 80E0      	 ldi r24,lo8(.LC1)
 1133 029c 90E0      	 ldi r25,hi8(.LC1)
 1134 029e 0E94 0000 	 call Sstring
 1135               	.LVL87:
 1136               	 
 107:../dumbcraft/dumbutils.c **** 	DoneSend();
 108:../dumbcraft/dumbutils.c **** }
 1137               	 .loc 1 108 0
 1138 02a2 0F90      	 pop __tmp_reg__
 1139 02a4 0F90      	 pop __tmp_reg__
 1140 02a6 DF91      	 pop r29
 1141 02a8 CF91      	 pop r28
 1142 02aa 1F91      	 pop r17
 1143 02ac 0F91      	 pop r16
 1144               	.LVL88:
 1145 02ae FF90      	 pop r15
 1146               	.LVL89:
 1147 02b0 DF90      	 pop r13
 1148 02b2 CF90      	 pop r12
 1149               	.LVL90:
 107:../dumbcraft/dumbutils.c **** 	DoneSend();
 1150               	 .loc 1 107 0
 1151 02b4 0C94 0000 	 jmp DoneSend
GAS LISTING  			page 36


 1152               	.LVL91:
 1153               	 .cfi_endproc
 1154               	.LFE6:
 1156               	.global SignUp
 1158               	SignUp:
 1159               	.LFB4:
  75:../dumbcraft/dumbutils.c **** {
 1160               	 .loc 1 75 0
 1161               	 .cfi_startproc
 1162               	.LVL92:
 1163 02b8 EF92      	 push r14
 1164               	.LCFI44:
 1165               	 .cfi_def_cfa_offset 3
 1166               	 .cfi_offset 14,-2
 1167 02ba FF92      	 push r15
 1168               	.LCFI45:
 1169               	 .cfi_def_cfa_offset 4
 1170               	 .cfi_offset 15,-3
 1171 02bc 0F93      	 push r16
 1172               	.LCFI46:
 1173               	 .cfi_def_cfa_offset 5
 1174               	 .cfi_offset 16,-4
 1175 02be 1F93      	 push r17
 1176               	.LCFI47:
 1177               	 .cfi_def_cfa_offset 6
 1178               	 .cfi_offset 17,-5
 1179 02c0 CF93      	 push r28
 1180               	.LCFI48:
 1181               	 .cfi_def_cfa_offset 7
 1182               	 .cfi_offset 28,-6
 1183 02c2 DF93      	 push r29
 1184               	.LCFI49:
 1185               	 .cfi_def_cfa_offset 8
 1186               	 .cfi_offset 29,-7
 1187 02c4 CDB7      	 in r28,__SP_L__
 1188 02c6 DEB7      	 in r29,__SP_H__
 1189               	.LCFI50:
 1190               	 .cfi_def_cfa_register 28
 1191 02c8 2B97      	 sbiw r28,11
 1192               	.LCFI51:
 1193               	 .cfi_def_cfa_offset 19
 1194 02ca 0FB6      	 in __tmp_reg__,__SREG__
 1195 02cc F894      	 cli
 1196 02ce DEBF      	 out __SP_H__,r29
 1197 02d0 0FBE      	 out __SREG__,__tmp_reg__
 1198 02d2 CDBF      	 out __SP_L__,r28
 1199               	 
 1200               	 
 1201               	 
 1202               	.L__stack_usage =17
 1203 02d4 F82E      	 mov r15,r24
 1204 02d6 E62E      	 mov r14,r22
  79:../dumbcraft/dumbutils.c **** 	Uint8To10Str( stmp1, val );
 1205               	 .loc 1 79 0
 1206 02d8 602F      	 mov r22,r16
 1207               	.LVL93:
 1208 02da CE01      	 movw r24,r28
GAS LISTING  			page 37


 1209               	.LVL94:
 1210 02dc 0696      	 adiw r24,6
 1211 02de 4B87      	 std Y+11,r20
 1212 02e0 0E94 0000 	 call Uint8To10Str
 1213               	.LVL95:
  80:../dumbcraft/dumbutils.c **** 	Uint8To16Str( stmp2+2, val );
 1214               	 .loc 1 80 0
 1215 02e4 602F      	 mov r22,r16
 1216 02e6 CE01      	 movw r24,r28
 1217 02e8 0396      	 adiw r24,3
 1218 02ea 0E94 0000 	 call Uint8To16Str
 1219               	.LVL96:
  81:../dumbcraft/dumbutils.c **** 	stmp2[0] = '0'; stmp2[1] = 'x';
 1220               	 .loc 1 81 0
 1221 02ee 80E3      	 ldi r24,lo8(48)
 1222 02f0 8983      	 std Y+1,r24
 1223 02f2 88E7      	 ldi r24,lo8(120)
 1224 02f4 8A83      	 std Y+2,r24
  82:../dumbcraft/dumbutils.c **** 	SignTextUp( x, y, z, stmp1, stmp2 );
 1225               	 .loc 1 82 0
 1226 02f6 8E01      	 movw r16,r28
 1227               	.LVL97:
 1228 02f8 0F5F      	 subi r16,-1
 1229 02fa 1F4F      	 sbci r17,-1
 1230 02fc 9E01      	 movw r18,r28
 1231 02fe 2A5F      	 subi r18,-6
 1232 0300 3F4F      	 sbci r19,-1
 1233 0302 4B85      	 ldd r20,Y+11
 1234 0304 6E2D      	 mov r22,r14
 1235 0306 8F2D      	 mov r24,r15
 1236 0308 0E94 0000 	 call SignTextUp
 1237               	.LVL98:
 1238               	 
  83:../dumbcraft/dumbutils.c **** }
 1239               	 .loc 1 83 0
 1240 030c 2B96      	 adiw r28,11
 1241 030e 0FB6      	 in __tmp_reg__,__SREG__
 1242 0310 F894      	 cli
 1243 0312 DEBF      	 out __SP_H__,r29
 1244 0314 0FBE      	 out __SREG__,__tmp_reg__
 1245 0316 CDBF      	 out __SP_L__,r28
 1246 0318 DF91      	 pop r29
 1247 031a CF91      	 pop r28
 1248 031c 1F91      	 pop r17
 1249 031e 0F91      	 pop r16
 1250 0320 FF90      	 pop r15
 1251               	.LVL99:
 1252 0322 EF90      	 pop r14
 1253               	.LVL100:
 1254 0324 0895      	 ret
 1255               	 .cfi_endproc
 1256               	.LFE4:
 1258               	.global SblockInternal
 1260               	SblockInternal:
 1261               	.LFB7:
 109:../dumbcraft/dumbutils.c **** 
 110:../dumbcraft/dumbutils.c **** 
GAS LISTING  			page 38


 111:../dumbcraft/dumbutils.c **** //Update a block at a given x, y, z (good for 0..255 in each dimension)
 112:../dumbcraft/dumbutils.c **** void SblockInternal( uint8_t x, uint8_t y, uint8_t z, uint8_t bt, uint8_t meta )
 113:../dumbcraft/dumbutils.c **** {
 1262               	 .loc 1 113 0
 1263               	 .cfi_startproc
 1264               	.LVL101:
 1265 0326 0F93      	 push r16
 1266               	.LCFI52:
 1267               	 .cfi_def_cfa_offset 3
 1268               	 .cfi_offset 16,-2
 1269 0328 1F93      	 push r17
 1270               	.LCFI53:
 1271               	 .cfi_def_cfa_offset 4
 1272               	 .cfi_offset 17,-3
 1273 032a CF93      	 push r28
 1274               	.LCFI54:
 1275               	 .cfi_def_cfa_offset 5
 1276               	 .cfi_offset 28,-4
 1277 032c DF93      	 push r29
 1278               	.LCFI55:
 1279               	 .cfi_def_cfa_offset 6
 1280               	 .cfi_offset 29,-5
 1281 032e 00D0      	 rcall .
 1282 0330 1F92      	 push __zero_reg__
 1283               	.LCFI56:
 1284               	 .cfi_def_cfa_offset 9
 1285 0332 CDB7      	 in r28,__SP_L__
 1286 0334 DEB7      	 in r29,__SP_H__
 1287               	.LCFI57:
 1288               	 .cfi_def_cfa_register 28
 1289               	 
 1290               	 
 1291               	 
 1292               	.L__stack_usage =7
 1293 0336 182F      	 mov r17,r24
 1294               	.LVL102:
 114:../dumbcraft/dumbutils.c **** 	uint16_t tblockmeta = (bt<<4) | meta;
 115:../dumbcraft/dumbutils.c **** 
 116:../dumbcraft/dumbutils.c **** 	StartSend();
 1295               	 .loc 1 116 0
 1296 0338 2B83      	 std Y+3,r18
 1297 033a 4A83      	 std Y+2,r20
 1298 033c 6983      	 std Y+1,r22
 1299 033e 0E94 0000 	 call StartSend
 1300               	.LVL103:
 117:../dumbcraft/dumbutils.c **** 	Sbyte(0x23);  //NEW
 1301               	 .loc 1 117 0
 1302 0342 83E2      	 ldi r24,lo8(35)
 1303 0344 0E94 0000 	 call Sbyte
 1304               	.LVL104:
 118:../dumbcraft/dumbutils.c **** 	InternalSendPosition( x, y, z );
 1305               	 .loc 1 118 0
 1306 0348 4A81      	 ldd r20,Y+2
 1307 034a 6981      	 ldd r22,Y+1
 1308 034c 812F      	 mov r24,r17
 1309 034e 0E94 0000 	 call InternalSendPosition
 1310               	.LVL105:
GAS LISTING  			page 39


 114:../dumbcraft/dumbutils.c **** 	uint16_t tblockmeta = (bt<<4) | meta;
 1311               	 .loc 1 114 0
 1312 0352 2B81      	 ldd r18,Y+3
 1313 0354 822F      	 mov r24,r18
 1314 0356 90E0      	 ldi r25,0
 1315 0358 24E0      	 ldi r18,4
 1316               	 1:
 1317 035a 880F      	 lsl r24
 1318 035c 991F      	 rol r25
 1319 035e 2A95      	 dec r18
 1320 0360 01F4      	 brne 1b
 119:../dumbcraft/dumbutils.c **** 	Svarint( tblockmeta ); //block type
 1321               	 .loc 1 119 0
 1322 0362 802B      	 or r24,r16
 1323 0364 0E94 0000 	 call Svarint
 1324               	.LVL106:
 1325               	 
 120:../dumbcraft/dumbutils.c **** 	DoneSend();
 121:../dumbcraft/dumbutils.c **** 
 122:../dumbcraft/dumbutils.c **** /*
 123:../dumbcraft/dumbutils.c **** 	StartSend();
 124:../dumbcraft/dumbutils.c **** 	Sbyte(0x22);
 125:../dumbcraft/dumbutils.c **** 	Sint(0);
 126:../dumbcraft/dumbutils.c **** 	Sint(0);
 127:../dumbcraft/dumbutils.c **** 	Svarint(1);
 128:../dumbcraft/dumbutils.c **** 	Sshort( y | (z<<8) | (x<<12) );
 129:../dumbcraft/dumbutils.c **** 	Svarint( tblockmeta ); //block type
 130:../dumbcraft/dumbutils.c **** 	DoneSend();
 131:../dumbcraft/dumbutils.c **** */
 132:../dumbcraft/dumbutils.c **** }
 1326               	 .loc 1 132 0
 1327 0368 0F90      	 pop __tmp_reg__
 1328 036a 0F90      	 pop __tmp_reg__
 1329 036c 0F90      	 pop __tmp_reg__
 1330 036e DF91      	 pop r29
 1331 0370 CF91      	 pop r28
 1332 0372 1F91      	 pop r17
 1333               	.LVL107:
 1334 0374 0F91      	 pop r16
 1335               	.LVL108:
 120:../dumbcraft/dumbutils.c **** 	DoneSend();
 1336               	 .loc 1 120 0
 1337 0376 0C94 0000 	 jmp DoneSend
 1338               	.LVL109:
 1339               	 .cfi_endproc
 1340               	.LFE7:
 1342               	.Letext0:
 1343               	 .file 2 "/usr/lib/avr/include/stdint.h"
 1344               	 .file 3 "../dumbcraft/dumbcraft.h"
 1345               	 .file 4 "../libs/util10.h"
GAS LISTING  			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 dumbutils.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:490    .text:0000000000000000 UpdateSlot
    {standard input}:602    .text:000000000000006e GPChat
    {standard input}:685    .text:00000000000000c2 SpawnEntity
    {standard input}:846    .text:000000000000017a EntityUpdatePos
    {standard input}:952    .text:00000000000001e4 InternalSendPosition
    {standard input}:1053   .text:000000000000024e SignTextUp
    {standard input}:1158   .text:00000000000002b8 SignUp
    {standard input}:1260   .text:0000000000000326 SblockInternal
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
StartSend
Sbyte
Sshort
DoneSend
Svarint
Sbuffer
Sint
Sstring
Uint8To10Str
Uint8To16Str
__do_copy_data
GAS LISTING  			page 1


   1               	 .file "avr_print.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.inline.2169e8cb64eaebaa,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\020\242"
  10      6062 C006 
  10      10A2 00
  11 000b 00        	 .string ""
  12 000c BA00      	 .string "\272"
  13 000e 07        	 .ascii "\007"
  14               	 .text
  15               	 .section .gnu.lto_.pureconst.2169e8cb64eaebaa,"",@progbits
  16 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  16      6062 6064 
  16      8002 00
  17 000b 00        	 .string ""
  18 000c 4600      	 .string "F"
  19 000e 06        	 .ascii "\006"
  20               	 .text
  21               	 .section .gnu.lto_.symbol_nodes.2169e8cb64eaebaa,"",@progbits
  22 0000 789C 6362 	 .string "x\234cb`\002B\030"
  22      6002 4218 
  22      00
  23 0009 00        	 .string ""
  24 000a 00        	 .string ""
  25 000b 5600      	 .string "V"
  26 000d 07        	 .ascii "\007"
  27               	 .text
  28               	 .section .gnu.lto_.refs.2169e8cb64eaebaa,"",@progbits
  29 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
  29      6062 6064 
  29      8002 00
  30 000b 00        	 .string ""
  31 000c 4600      	 .string "F"
  32 000e 06        	 .ascii "\006"
  33               	 .text
  34               	 .section .gnu.lto_.decls.2169e8cb64eaebaa,"",@progbits
  35 0000 789C 6362 	 .string "x\234cb`bPa``\370\017\004@\212\201\021\212\355\030\b"
  35      6062 5061 
  35      6060 F80F 
  35      0440 8A81 
  35      118A ED18 
  36 0016 00        	 .string ""
  37 0017 CE1B 0465 	 .ascii "\316\033\004e"
  38               	 .text
  39               	 .section .gnu.lto_.symtab.2169e8cb64eaebaa,"",@progbits
  40               	 .text
  41               	 .section .gnu.lto_.opts,"",@progbits
  42 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
  42      6375 3D61 
  42      746D 6567 
  42      6133 3275 
GAS LISTING  			page 2


  42      3227 2027 
  43               	 .text
  44               	 .cfi_sections .debug_frame
  45               	.Letext0:
GAS LISTING  			page 3


DEFINED SYMBOLS
                            *ABS*:0000000000000000 avr_print.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
GAS LISTING  			page 1


   1               	 .file "util10.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.84cf0f2190f1a352,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\270\2404\013\0033#3\02333#\003"
  10      6062 C006 
  10      B8A0 340B 
  10      0333 2333 
  10      1333 3323 
  11 0016 01FC 00   	 .string "\001\374"
  12 0019 23        	 .ascii "#"
  13               	 .text
  14               	 .section .gnu.lto_.inline.84cf0f2190f1a352,"",@progbits
  15 0000 789C 6362 	 .string "x\234cb`b\300\006R\2404\013\003\203\344\027fF\006&\235K\217l\030\330\026\310\203\22532\210u0\202"
  15      6062 C006 
  15      52A0 340B 
  15      0383 E417 
  15      6646 0626 
  16 0025 90CD A474 	 .string "\220\315\244tc\262"
  16      63B2 00
  17 002c 03D7 013B 	 .string "\003\327\001;&\220b\240q\002\274P\031f\346\035\342\f\2347\314\230\030D\032jAr\f\314\f\374\275@)&\211\017\177\005\340\2061"
  17      2690 62A0 
  17      7102 BC50 
  17      1966 E61D 
  17      E20C 9C37 
  18 0058 00        	 .string ""
  19 0059 00        	 .string ""
  20 005a 0E0E 59   	 .ascii "\016\016Y"
  21               	 .text
  22               	 .section .gnu.lto_.pureconst.84cf0f2190f1a352,"",@progbits
  23 0000 789C 6362 	 .string "x\234cb`b\340d\200"
  23      6062 E064 
  23      8000 
  24 000a 1606 2946 	 .string "\026\006)F)&)fS"
  24      2926 2966 
  24      5300 
  25 0014 02F1 00   	 .string "\002\361"
  26 0017 9B        	 .ascii "\233"
  27               	 .text
  28               	 .section .gnu.lto_Uint32To10Str.84cf0f2190f1a352,"",@progbits
  29 0000 789C 8555 	 .string "x\234\205U;OTQ\020\2369\347\276v\357\356\262\274\002\013\262\022\032c\003\230\370j\374\001\376\002H\264PA\0236[\220\210\215\rwY\n\214\220\020ca\324\002\262!v\022l0b\301\212\006H\324h\242\305\032ch\b&\200\215\215\005\311:s\316\271\373@\324\233p\0363\3377\337\314\334\271\213"
  29      3B4F 5451 
  29      109E 39E7 
  29      BE76 EFEE 
  29      B2BC 020B 
  30 0061 0187 9F79 	 .string "\001\207\237y\372\273\340"
  30      FABB E000 
  31 0069 1CA7 1D13 	 .string "\034\247\035\023\200b\366=@\316\023\030\321\007\211q>\024\275\270\220\323\353"
  31      8062 F63D 
  31      40CE 1318 
  31      D107 8971 
  31      3E14 BDB8 
GAS LISTING  			page 2


  32 0081 41D4 9E74 	 .ascii "A\324\236t!\210\331\302\235:A7\207\327\230cn\236\272\271\350"
  32      2188 D9C2 
  32      9D3A 4137 
  32      87D7 9863 
  32      6E9E BAB9 
  33 0096 69B2 A7A3 	 .ascii "i\262\247\243\024\275\210\260\362\212\034\235a\262\245\203bT"
  33      14BD 88B0 
  33      F28A 1C9D 
  33      61B2 A583 
  33      6254 
  34 00a8 F89F FAC8 	 .ascii "\370\237\372\310\032{\231&\253\2171M\213!\362\001\020\306\205"
  34      1A7B 9926 
  34      AB8F 314D 
  34      8B21 F201 
  34      10C6 85
  35 00bb 8CDB 8EEB 	 .ascii "\214\333\216\353E\254\250\037\303\361\313\310)\313\036\230\017"
  35      45AC A81F 
  35      C3F1 CBC8 
  35      29CB 1E98 
  35      0F
  36 00cc 827B 5BDB 	 .ascii "\202{[\333\373\347\203\374j\360\253\\v\263H\245\265 \334@\270"
  36      FBE7 83FC 
  36      6AF0 AB5C 
  36      76B3 48A5 
  36      B520 DC40 
  37 00e1 8459 C46E 	 .ascii "\204Y\304n\265\t\253\276V\315[]\372\336]\345I\001\035U\236\247"
  37      B509 ABBE 
  37      56CD 5B5D 
  37      FADE 5DE5 
  37      4901 1D55 
  38 00f7 7978 24EF 	 .ascii "yx$\357\331l\020`n.8(\227\245\"v\375\217\270(V\267\312\345\275"
  38      D96C 1060 
  38      6E2E 3828 
  38      97A5 2276 
  38      FD8F B828 
  39 0110 897D EC46 	 .ascii "\211}\354F\030\345\034i\2210\214\363\330\003\026\355\005\332"
  39      18E5 1C69 
  39      9130 8CF3 
  39      D803 16ED 
  39      05DA 
  40 0122 6DB3 3B66 	 .ascii "m\263;fwi_\240\335G\002\307\315%\301\314\006sI\032d#\220d\023"
  40      7769 5FA0 
  40      DD47 02C7 
  40      CD25 C1CC 
  40      0673 491A 
  41 013b C1B0 994E 	 .ascii "\301\260\231NV\013-v+-N\233\221hgV\312\240;\030\335\311\300."
  41      560B 2D76 
  41      2B2D 4E9B 
  41      9168 6756 
  41      CAA0 3B18 
  42 0153 3EA5 F944 	 .ascii ">\245\371D9\3320\031\004\263\335\232\240\221Z\005\2708z\006h"
  42      39DA 3019 
  42      04B3 DD9A 
  42      A091 5A05 
  42      B838 7A06 
  43 0168 FD02 3088 	 .ascii "\375\0020\210\2026\271\t\023[\313r\030\237\240mD\270p\b\356\357"
  43      8236 B909 
GAS LISTING  			page 3


  43      135B CB72 
  43      189F A06D 
  43      44B8 7008 
  44 017e 7E95 0466 	 .ascii "~\225\004f\367\203\323\241\273`\334\354a\327\\*\364,\324z\370"
  44      F783 D3A1 
  44      BB60 DCEC 
  44      61D7 5C2A 
  44      F42C D47A 
  45 0193 19A4 23CD 	 .ascii "\031\244#\315\227|\007\371\251|\271_\3432\030\317\240\253p\250"
  45      977C 07F9 
  45      A97C B95F 
  45      E332 18CF 
  45      A0AB 70A8 
  46 01a7 2288 5A3E 	 .ascii "\"\210Z>y\001\b\177'_(aHHd\0203\034\266\002\246\026\2209T\211"
  46      7901 087F 
  46      275F 2861 
  46      4848 6410 
  46      331C B602 
  47 01c1 038D 1652 	 .ascii "\003\215\026R.\036T\302\270*92(()m\300\344Nq\345J\030S\007\324"
  47      2E1E 54C2 
  47      B82A 3932 
  47      2828 296D 
  47      C0E4 4E71 
  48 01db 4F09 E8D6 	 .ascii "O\t\350\326n\321\222\220\323\333N\t\334\f6\3605.\017\326\220"
  48      6ED1 9290 
  48      D3DB 4E09 
  48      DC0C 36F0 
  48      352E 0FD6 
  49 01f0 15A8 A1AE 	 .ascii "\025\250\241\256\244\b{\305\317-a\004\233kpkGc\020\035x%\025"
  49      A408 7BC5 
  49      CF2D 6104 
  49      9B6B 706B 
  49      4763 101D 
  50 0207 2E77 2684 	 .ascii ".w&\204\271G\300\\(\330\272+K\225\"\223&\342\341\256\024T9I\356"
  50      B947 C05C 
  50      28D8 BA2B 
  50      4B95 2293 
  50      26E2 E1AE 
  51 0220 CAC4 8F7C 	 .ascii "\312\304\217|:\2047\022\\u\352\256\fM\315\031l\"\207\262N\345"
  51      3A84 3712 
  51      5C75 EAAE 
  51      0C4D CD19 
  51      6C22 87B2 
  52 0236 6F87 E616 	 .ascii "o\207\346\026\223\203\335\017:H\205\320JNe\272\250-\217\340a"
  52      9383 DD0F 
  52      3A48 85D0 
  52      4A4E 65BA 
  52      A82D 8FE0 
  53 024b 2E08 8206 	 .ascii ".\b\202\006\2326\212\306\034\375\261\0212\314\334\343F\204\235"
  53      9A36 8AC6 
  53      1CFD B111 
  53      32CC DCE3 
  53      4684 9D
  54 025e D6A9 594A 	 .ascii "\326\251YJp&\277\262Y\251\245\215\232\253F(Z_\313\274\"\264\351"
  54      7026 BFB2 
  54      59A9 A58D 
  54      9AAB 4628 
GAS LISTING  			page 4


  54      5A5F CBBC 
  55 0275 915A 8CFD 	 .ascii "\221Z\214\375epJ`Qq\016\365?\351\276}\343\260l\004\276Ue\027"
  55      6570 4A60 
  55      5171 0EF5 
  55      3FE9 BE7D 
  55      E3B0 6C04 
  56 028d 0E4D 604D 	 .ascii "\016M`M.v\325\240\265d\335\030\b5\006{\305\345ca\246:\315\352"
  56      2E76 D5A0 
  56      B564 DD18 
  56      0835 067B 
  56      C5E5 6361 
  57 02a5 5302 9141 	 .ascii "S\002\221A_\2206zX\002Y\363!\210\203\263\224\273\267\267@\003"
  57      5F90 367A 
  57      5802 59F3 
  57      2188 83B3 
  57      94BB B7B7 
  58 02bb 621B 7D31 	 .ascii "b\033}1\275F\255\262<5$\026\367\206C\264\223R\204\330\r\006\025"
  58      BD46 ADB2 
  58      3C35 2416 
  58      F786 43B4 
  58      9352 84D8 
  59 02d2 51EE 287F 	 .ascii "Q\356(\177j\033\360z\247\3703\371\257\031\362\341\234\236\215"
  59      6A1B F07A 
  59      A7F8 33F9 
  59      AF19 F2E1 
  59      9C9E 8D
  60 02e5 1795 7EA6 	 .ascii "\027\225~\246\3769\033)3\033O+\370\216?\207\243S\rG\207\202>"
  60      FE39 1B29 
  60      331B 4F2B 
  60      F88E 3F87 
  60      A353 0D47 
  61 02fc FF90 A87B 	 .ascii "\377\220\250{\341\003\352\205wV_8\237\234\376JF1\363#Q\323h\307"
  61      E103 EA85 
  61      7756 5F38 
  61      9F9C FE4A 
  61      4631 F323 
  62 0314 68EE 9E0C 	 .ascii "h\356\236\f\005\272\214\261F3\2554\273\214\246S\247\351+\315"
  62      05BA 8CB1 
  62      4633 AD34 
  62      BB8C A653 
  62      A7E9 2BCD 
  63 0328 F421 4D3E 	 .ascii "\364!M>|\204\334\326\212)1|)\004\265\243\364RR\376\343u\237\177"
  63      7C84 DCD6 
  63      8A29 317C 
  63      2904 B5A3 
  63      F452 52FE 
  64 0340 BE90 52E2 	 .ascii "\276\220R\342\177|\215\275\275}\331\221k7\373n\215\215dO\365"
  64      7F7C 8DBD 
  64      BD7D D991 
  64      6B37 FB6E 
  64      8D8D 644F 
  65 0355 F70E 813D 	 .ascii "\367\016\201=\232\275:t]\214f\305\320\330o\375\236d+"
  65      9ABD 3A74 
  65      5D8C 66C5 
  65      D0D8 6FFD 
  65      9E64 2B
  66               	 .text
GAS LISTING  			page 5


  67               	 .section .gnu.lto_Uint8To10Str.84cf0f2190f1a352,"",@progbits
  68 0000 789C 8594 	 .string "x\234\205\224\317k\023A\024\307\337\233\331\331\235\335MIZ\223\006=\211'/\266\025\374'\374\013Z\320\223-B\227\240\202\355\271\2336\205\n\025J\217\332K\361P\213\007\005A{\0205 \330\370\243\240\007\241=\005\205\202P<z*\304\367ff7\246\351\217\205\314\f\357\373\335y\337\367\t\211"
  68      CF6B 1341 
  68      14C7 DF9B 
  68      D9D9 9DDD 
  68      4D49 5A93 
  69 005e 0147 9F45 	 .string "\001G\237E\372\\V"
  69      FA5C 5600 
  70 0066 E769 C702 	 .string "\347i\307\002\240X\331\001\250k\201\236=H{hjO\310\345\217"
  70      A058 D901 
  70      A86B 819E 
  70      3D48 7B68 
  70      6A4F C8E5 
  71 007c 69A4 1A01 	 .string "i\244\032\001\244\005\205\2015\370\366\320\324\201\360\255A\033\203\306\310\032B{h\352H\204\326\020\033C\214\310u@\230\023\322S~\240\303(\306\271\233\310\261\360\022\254\247\351j{q\365\241\227\276H\227\322Ng\256\206\224\277\214p\033\341\006\326\020\265\331\004\366\016\364\\\274ow:\207\033+W. \334\343Wh\221\274x0\205\353t\261r\273\357\366"
  71      A405 8581 
  71      35F8 F6D0 
  71      D481 F0AD 
  71      411B 83C6 
  72 00eb 49D4 EC08 	 .string "I\324\354\b]%\202\032\312\230\026o\2004,\262Vr\332 kC\254\225\271\\q\345a.W\271L\031\0244\322t\345\242U\200\003\3233N+\r>\201\2026\331\202\371\366\366\265)|\202Y\034\036&\237b\002%\020,\371\025\026\226\0266~JkLP'\210\306\270\306\336\026\b+P\020\322"
  72      5D25 821A 
  72      CA98 166F 
  72      8034 2CB2 
  72      5672 DA20 
  73 014a 8C7D 5F64 	 .ascii "\214}_d\3560A\317\270{\314\266\035\251Y+\017\350\213\340DtC&"
  73      EE30 41CF 
  73      B87B CCB6 
  73      1DA9 592B 
  73      0FE8 8BE0 
  74 0162 7AFC 0217 	 .ascii "z\374\002\027\314\325\364\3766|\330\257\027\263\233m\210\311"
  74      CCD5 F4FE 
  74      367C D8AF 
  74      17B3 9B6D 
  74      88C9 
  75 0174 3CEF 2E60 	 .ascii "<\357.`\202\201\240E\313\355`\027<7\215Xn\371\324I\256m\016s"
  75      8281 A045 
  75      CBED 6017 
  75      3C37 8D58 
  75      6EF9 D449 
  76 018c 27C5 A39B 	 .ascii "'\305\243\233\220\317>avW\344R\3121\340\t\346\377\344\323\306"
  76      90CF 3E61 
  76      7657 E452 
  76      CA31 E009 
  76      E6FF E4D3 
  77 01a1 249A D275 	 .ascii "$\232\322u[y\f\217\352i\232\306D9\301\001~G\231\356\3444q\333"
  77      5B79 0C8F 
  77      EA69 9AC6 
  77      4439 C101 
  77      7E47 99EE 
  78 01b9 9FC7 4E21 	 .ascii "\237\307N!\352w\211\276\334\313{\024\023\024\306\370\267\237"
  78      EA77 89BE 
  78      DCCB 7B14 
  78      1314 C6F8 
  78      B79F 
  79 01cb 68D1 117D 	 .ascii "h\321\021}\233\023-%\250N&Z\312Z\005\307\020U=D\305Q\2426D\370"
  79      9B13 2D25 
  79      A84E 265A 
  79      CA5A 05C7 
GAS LISTING  			page 6


  79      1055 3D44 
  80 01e5 1F51 4198 	 .ascii "\037QA\230\025\021-\372[DT\271i\324\233\007D\264\344\177\371"
  80      1511 2DFA 
  80      5B44 54B9 
  80      69D4 9B07 
  80      44B4 E47F 
  81 01fa 7D8E 3BE9 	 .ascii "}\216;\351\234\350\353.\321A\227\262\237\350\020\211g\020EKt"
  81      9CE8 EB2E 
  81      D141 97B2 
  81      9FE8 1089 
  81      6710 454B 
  82 020f C812 DD39 	 .ascii "\310\022\3359\215h\330%\372\356{\336\243\234\2404\306N?\321\262"
  82      8D68 D825 
  82      FAEE 7BDE 
  82      A39C A034 
  82      C64E 3FD1 
  83 0224 23FA 2A27 	 .ascii "#\372*'ZI\320?\231h%k\025\035C\324\357!*\231h\343\240KT\366\244"
  83      5A49 D03F 
  83      9968 256B 
  83      151D 43D4 
  83      EF21 2A99 
  84 023f 65A2 9230 	 .ascii "e\242\2220k\"Z\016\237\022Q\337\351\372\200\211V\302\303MC4\316"
  84      6B22 5A0E 
  84      9F12 51DF 
  84      E9FA 8089 
  84      56C2 C34D 
  85 0256 89FE EA12 	 .ascii "\211\376\352\022\035v)\373\211VI<\203\250\260D\253\306\266\265"
  85      1D76 29FB 
  85      8956 493C 
  85      83A8 B044 
  85      ABC6 B6B5 
  86 026a F5A3 70A2 	 .ascii "\365\243p\242S\262\223O\374/\002\337\240\336\336s@\262g\234~"
  86      53B2 934F 
  86      FC2F 02DF 
  86      A0DE DE73 
  86      40B2 679C 
  87 027f 8B8D 806F 	 .ascii "\213\215\200o\034\034\031\031\255M\337\272?:;3]\273:62\tj\362"
  87      1C1C 1919 
  87      AD4D DFBA 
  87      3F3A 3B33 
  87      5DBB 3A36 
  88 0297 EEEC 9D99 	 .ascii "\356\354\235\231\177\273\007$4"
  88      7FBB 0724 
  88      34
  89               	 .text
  90               	 .section .gnu.lto_Uint8To16Str.84cf0f2190f1a352,"",@progbits
  91 0000 789C 8D54 	 .string "x\234\215T\315kSA\020\237\331\217\267/\246i\"z\224R\212P\004I\352A\375\033\374\013ZP\0204\326&<\261`\305c6}-\344\340\241\365\250\036,R\252\210\037G\301*\021<\350\241bk\017Z<\344$\210\340YPy\316~\205&\241\264\013ogg\347\367\233\371\315\356\362\0300\350\037\027\351\333\340"
  91      CD6B 5341 
  91      109F D98F 
  91      B72F A669 
  91      227A 9452 
  92 0064 27C9 620E 	 .string "'\311b\016\220-}\004h\306\214\361\3268\350C\302\314C\034\245\333\026a!Y\264>Bq\265]\241x\204\261\333Va\021#\232\005 4\030\0272R16.\240)(\306`E\353\245\316\342\316m\261\370B\267t\2265\022$eG\021\246\021\316c\202\030[\303\260W\252#\266\267\226\037il>\320\177\263\214[\342\261\003\021\357\264_\377\030\325i[\377\3162\225 gp\374\200\2747\313zWA\"\236\330\217\370\234\265;Y\366\355\311\247\323G\020\252\270\202c$\263\212\017\311r\234E\020\344\254\222#\311\256\221\215 A\241<26N\316;y\202c\301\354\f\373\004E\343\224\274CC\302\002\235\312\250K\350\322\201\221Gc\222fs\013S\310\214\345\033\220>K\377la\025\037\243\204:\212:r#_\n\002\177"
  92      902D 7D04 
  92      68C6 8CF1 
  92      D638 E843 
  92      C2CC 431C 
  93 0148 E6F6 5D26 	 .ascii "\346\366]&\212\322\303\200\364U\372\217\005\274\364x^\354\305"
GAS LISTING  			page 7


  93      8AD2 C380 
  93      F455 FA8F 
  93      05BC F478 
  93      5EEC C5
  94 015b AF59 BC04 	 .ascii "\257Y\274\004x\017\357\276\277\335\274\322\315o\300Qn\327\301"
  94      780F EFBE 
  94      BFDD BCD2 
  94      CD6F C051 
  94      6ED7 C1
  95 016e 4C21 87D6 	 .ascii "L!\207\326\270\021\322\342\001\025y\240\2304O\021\346\177u#\212"
  95      B811 D2E2 
  95      0115 79A0 
  95      9834 4F11 
  95      E67F 7523 
  96 0183 8281 2706 	 .ascii "\202\201'\006xq\340M\364\363r\024\f<\351;\237?\347\242\367\340"
  96      7871 E04D 
  96      F4F3 7214 
  96      0C3C E93B 
  96      9F3F E7A2 
  97 0199 6E53 6B9D 	 .ascii "nSk\235\247\227S\307\274\341+\213\254#z\375\237\273\372e\237"
  97      A797 53C7 
  97      BCE1 2B8B 
  97      AC23 7AFD 
  97      9FBB FA65 
  98 01ae FEAF 8024 	 .ascii "\376\257\200$\212/\024\250\204\260\331#X\037\261\252\322\325"
  98      8A2F 14A8 
  98      84B0 D923 
  98      581F B1AA 
  98      D2D5 
  99 01c0 6EF5 8227 	 .ascii "n\365\202'\016\3663L\301\240K\301v\245\267\237b\340\r\364S\242"
  99      0EF6 334C 
  99      C1A0 4BC1 
  99      76A5 B79F 
  99      62E0 0DF4 
 100 01d6 60E0 C5FB 	 .ascii "`\340\305\373\367\203\256\037f\263\274\374\2623\264'\322\376"
 100      F783 AE1F 
 100      66B3 BCFC 
 100      B233 B427 
 100      D2FE 
 101 01e8 0ECC CA26 	 .ascii "\016\314\312&\337\204f\347\247\277\324\3200#\325\321\375\247"
 101      DF84 66E7 
 101      A7BF D4D0 
 101      3023 D5D1 
 101      FDA7 
 102 01fa 7447 2565 	 .ascii "tG%e_\024\232\372\206w\270\\\256$\265K7*7\347j\311\251\211\362"
 102      5F14 9AFA 
 102      8677 B85C 
 102      AE24 B54B 
 102      372A 37E7 
 103 0213 6550 B5E9 	 .ascii "eP\265\351\271k\263\3453\336\236\0253\265\2533<\271~\353?\213"
 103      B96B B3E5 
 103      33DE 9E15 
 103      33B5 AB33 
 103      3CB9 7EEB 
 104 0229 EDE5 B1   	 .ascii "\355\345\261"
 105               	 .text
 106               	 .section .gnu.lto_StrTo16Uint.84cf0f2190f1a352,"",@progbits
GAS LISTING  			page 8


 107 0000 789C 8D54 	 .string "x\234\215T\315kSA\020\237\331\257\367\222\246M\n\036<\024\251\005\321SZQ\304\233\370W\030\320\2034\215\320\307;H\255\007Oyi\322R\264`\021\005?\221RJ\361\340\327U<<\365R\305\326x\314- \bB\265\210J+\b\317\331\335\267ij\005]\310N\3667\363\233\371\315\316&\f\030\374\271*\3649\""
 107      CD6B 5341 
 107      109F D9AF 
 107      F792 A64D 
 107      0A1E 3C14 
 108 0066 F693 C50C 	 .string "\366\223\305\f \233_\003\250\371\f}\373\20531{\020\242\254\324{N\240\262\260d\336KN\260Z{\003\204+\033~\322g\334"
 108      209B 5F03 
 108      A8F9 0C7D 
 108      FB85 3331 
 108      7B10 A2AC 
 109 0090 59E3 CD79 	 .ascii "Y\343\315y\210\032\006\204*\343B*\337\303\352\031\324e\305\020"
 109      881A 0684 
 109      2AE3 422A 
 109      DFC3 EA19 
 109      D465 C510 
 110 00a4 2C44 D1B5 	 .ascii ",D\321\265\366\322\375\353b\372I4\033%I5D\322\267\007\341\034"
 110      F6D2 FDEB 
 110      62FA 4934 
 110      1B25 4935 
 110      44D2 B707 
 111 00ba C269 0C11 	 .ascii "\302i\f\021}c\030\356\024l\211\361\327\317\207\242z\034m%\211"
 111      7D63 18EE 
 111      146C 89F1 
 111      D7CF 87A2 
 111      7A1C 6D25 
 112 00cf 1722 67B0 	 .ascii "\027\"g\260w\233W\260<\366W\336\267O\203\333<\301`\340\277\352"
 112      779B 57B0 
 112      3CF6 57DE 
 112      B74F 83DB 
 112      3CC1 60E0 
 113 00e5 CDC7 3FEE 	 .ascii "\315\307?\356\261\233Q#N\222\023!J\006\203\377\242=fq;I~=l\276"
 113      B19B 5123 
 113      4E92 1321 
 113      4A06 83FF 
 113      A23D 6671 
 114 00ff C57E 84F3 	 .ascii "\305~\204\363\272\2651\\\304!\340d\227\310\n$P\246\240\322\021"
 114      BAB5 315C 
 114      C421 E064 
 114      97C8 0A24 
 114      50A6 A0D2 
 115 0114 3E1D 96E9 	 .ascii ">\035\226\351\220!\273@6\013t#=\264\251\234\336z\365\326\227"
 115      9021 BB40 
 115      360B 7423 
 115      3DB4 A99C 
 115      DE7A F5D6 
 116 0129 12F2 6996 	 .ascii "\022\362i\226\202&\322\222\320 \225\203\326i]6\031h\235\264N"
 116      8226 D292 
 116      D020 9583 
 116      D669 5D36 
 116      1968 9DB4 
 117 013e D17E 4B42 	 .ascii "\321~KB\t\031\031\376\032\246\332[\307\306\360\001:\005\272\007"
 117      0919 19FE 
 117      1AA6 DA5B 
 117      C7C6 F001 
 117      3A05 BA07 
 118 0152 AE03 B5EB 	 .ascii "\256\003\265\353\347Q\347ZJ]\302\365U\242(\0321_\205\251/\365"
 118      E751 E75A 
GAS LISTING  			page 9


 118      4A5D C2F5 
 118      55A2 281A 
 118      315F 85A9 
 119 0168 CD57 CC06 	 .ascii "\315W\314\006\006\230\t\350\"`\025\352\263\334AYB5\027\232Z\301"
 119      0698 09E8 
 119      2260 15EA 
 119      B3DC 4159 
 119      4235 179A 
 120 017e 0A34 3ED6 	 .ascii "\n4>\326z:>\343\310t]X\211j,\0370\312\222\221]\345u\006J~\271"
 120      7A3A 3EE3 
 120      C874 5D58 
 120      896A 2C1F 
 120      30CA 9291 
 121 0199 BE38 B7CF 	 .ascii "\2768\267\317\345\350\t\220\031\331Y\343$=\217\320\371r\273\345"
 121      E5E8 0990 
 121      19D9 59E3 
 121      243D 8FD0 
 121      F972 BBE5 
 122 01ad F41A 46CE 	 .ascii "\364\032F\316\242\365Q\007\367\221\307di&\334\264\317\272\257"
 122      A2F5 5107 
 122      F791 C764 
 122      6926 DCB4 
 122      CFBA AF
 123 01c0 85FC 4E9E 	 .ascii "\205\374N\236\324\362\250\213\365\0277fz\035\233k\252\007;\372"
 123      D4F2 A88B 
 123      F517 3766 
 123      7A1D 9B6B 
 123      AA07 3BFA 
 124 01d4 50B0 B942 	 .ascii "P\260\271Bc\206\026\024\002T\362\371U*\253\004\035%\t\226H)\305"
 124      6386 1614 
 124      0254 F2F9 
 124      552A AB04 
 124      1D25 0996 
 125 01eb DCD3 B32D 	 .ascii "\334\323\263-\310\023]b\332\236\370\236\327\\\037\350\007\203"
 125      C813 5D62 
 125      DA9E F89E 
 125      D75C 1FE8 
 125      0783 
 126 01fd 7409 A4DE 	 .ascii "t\t\244\336\266\037\350\2618\300Jb\016\240\331\007\210\246\243"
 126      B61F E8B1 
 126      38C0 4A62 
 126      0EA0 D907 
 126      88A6 A3
 127 0210 2BF5 8D0F 	 .ascii "+\365\215\017\235a(B;\217\262\323\221\211V\346\252\236MO\270"
 127      9D61 2842 
 127      3B8F B2D3 
 127      9189 56E6 
 127      AA9E 4D4F 
 128 0225 58FF 0EDC 	 .ascii "X\377\016\334\256EQ\244\337uJ\363\323V\250H<\340nc\331\224\366"
 128      AE45 51A4 
 128      DF75 4AF3 
 128      D356 A848 
 128      3CE0 6E63 
 129 023c CD20 D76B 	 .ascii "\315 \327k\371\016]\023\272\346\330\002j\260\240h\023\f[\300"
 129      F90E 5D13 
 129      BAE6 D802 
 129      6AB0 A068 
GAS LISTING  			page 10


 129      130C 5BC0 
 130 0250 0294 0AD3 	 .ascii "\002\224\n\323\307\305\3466T\013x\200y\013\321\243bw\337)\335"
 130      C7C5 E636 
 130      540B 7880 
 130      790B D1A3 
 130      6277 DF29 
 131 0265 B7A7 5FE5 	 .ascii "\267\247_\345{\372c\001\333\237}\262H\250>\364\027\213\303\341"
 131      7BFA 6301 
 131      DB9F 7DB2 
 131      48A8 3EF4 
 131      178B C3E1 
 132 0279 F8E8 85E1 	 .ascii "\370\350\205\341\213\223\343\341\341\221b\031x\271x\234OT&\371"
 132      8B93 E3E1 
 132      E191 6219 
 132      78B9 789C 
 132      4F54 26F9 
 133 028d A5CA 2496 	 .ascii "\245\312$\226\177\003z\304\366*"
 133      7F03 7AC4 
 133      F62A 
 134               	 .text
 135               	 .section .gnu.lto_.symbol_nodes.84cf0f2190f1a352,"",@progbits
 136 0000 789C 6362 	 .string "x\234cb`b\260b\200\002&\206z\006\206\t\347\030\030\352\353\347u021\3263\"\361\230\352\231\220x\314\365\314\b\036\003"
 136      6062 B062 
 136      8002 2686 
 136      7A06 8609 
 136      E718 18EA 
 137 002a D691 105B 	 .ascii "\326\221\020["
 138               	 .text
 139               	 .section .gnu.lto_.refs.84cf0f2190f1a352,"",@progbits
 140 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
 140      6062 6064 
 140      8002 00
 141 000b 00        	 .string ""
 142 000c 4600      	 .string "F"
 143 000e 06        	 .ascii "\006"
 144               	 .text
 145               	 .section .gnu.lto_.decls.84cf0f2190f1a352,"",@progbits
 146 0000 789C 9554 	 .string "x\234\225TML\023A\024~o\373\003\225\n\222 \341$\034\320(\207\0264!\234\210\211\007=yQ<\310\001+kB\223\006B\273\345\340A\246\365b4F0%!1\bh\233H\242FS\t\306\277\254\232\312AS\317\036Lz\324\033\306\203\036\214\353\233\335\231\266;]\fL\362egg\336\373\366\275\371\276Y\r4\270\200"
 146      4D4C 1341 
 146      147E 6FFB 
 146      0395 0A92 
 146      20E1 241C 
 147 0069 160D 3D08 	 .string "\026\r=\b\260\f"
 147      B00C 00
 148 0070 01C2 30D4 	 .ascii "\001\3020\324\206\237\260J(\022LB\t\032\007\337o&\254\021Z\t"
 148      869F B04A 
 148      2812 4C42 
 148      091A 07DF 
 148      6F26 AC11 
 149 0086 61C2 0621 	 .ascii "a\302\006!O(\023\n\004\024\261(\3425\302\023\302c\205\213\177"
 149      4F28 130A 
 149      0414 B128 
 149      E235 C213 
 149      C263 858B 
 150 009b 2728 F225 	 .ascii "'(\362%\227\344\310\327q\024\005\307k\302K\205\303\024\365\024"
 150      97E4 C8D7 
 150      7114 05C7 
GAS LISTING  			page 11


 150      6BC2 4B85 
 150      C314 F514 
 151 00af 947A CAA2 	 .ascii "\224z\312\242"
 152 00b3 1F54 B84C 	 .string "\037T\270L\301\365\236\360N\341\342\375\356\021\271\222kS\360q\376\200\302'9K\342\371I\341\353\206\273l\245R)|\321\026\331\226e\265u\302\002\343#\303\216O\3538\274\037FQ\307\326\020\325\317'\341\22088\035\357a\247=\363\331\245B\013\\g,\313V2\254c\221\302\257\331$\363,\334\005\236\f\007!O\373s\214\321R\001C\304\321\201\3409\234}>FE,\263\304\300Y\2714[\375\312>\371\025Md\347\261ER\211R\355\352\262\254\222a\275\213\255\325\304\036\231\350\227\345\315U~\376\276\025a\314\257\343\232]\342\020B\037\2549u\317\267{\325\253cS\250\341]\307\207\330'\352\267\267\305\204\267\320&\302F|\325\034\rNa5\207\217^\270\317\330\355J\341\307\021\346s\372\321\340\034\017Y\305n\317\266E\323N\036[_\242SF\331\303y%\321\325\266\023D\343\020\024\270~7\315l\027\330."
 152      C1F5 9EF0 
 152      4EE1 E2FD 
 152      EE11 B992 
 152      6B53 F071 
 153 01b4 91E5 EAED 	 .string "\221\345\352\355\021j\215V2\377\344\350{\031\022iv\307^z\346\366\222S\277[-\356\245:\265\032\315Dj}\023jm\330\235\306\334\247\250#*\322\240[\032\f\325&\226\254\314\245K\334S\227\322\347\245"
 153      116A 8D56 
 153      32FF E4E8 
 153      7B19 1269 
 153      76C7 5E7A 
 154 01f6 EB97 C2CC 	 .ascii "\353\227\302\314\360\230\342\216\204y:\357\b\343\224{YItu\350"
 154      F098 E28E 
 154      8479 3AEF 
 154      08E3 947B 
 154      5949 7475 
 155 020b 046D 274C 	 .ascii "\004m'LQ\025\346\205\2470\317\027\2440\316\211kp\305\253!\366"
 155      5115 E685 
 155      A730 CF17 
 155      A430 CE89 
 155      6B70 C5AB 
 156 0221 2BE7 D4C5 	 .ascii "+\347\324\305k\325\361\025q\351h\356\272#\035\337\250\231\273"
 156      6BD5 F115 
 156      71E9 68EE 
 156      BA23 1DDF 
 156      A899 BB
 157 0234 68C9 545B 	 .ascii "h\311T[z\353\331\322\327\357\207\331U\366\327\2622\314\304z\273"
 157      7AEB D9D2 
 157      D7EF 87D9 
 157      55F6 D7B2 
 157      32CC C47A 
 158 0249 09D7 38BF 	 .ascii "\t\3278\277#\357\237\203t\315\226p\315\246-\303\rTm\023Pl\023"
 158      23EF 9F83 
 158      74CD 9670 
 158      CDA6 2DC3 
 158      0D54 6D13 
 159 0260 70DB 2610 	 .ascii "p\333&\020\252M,\313\347\355P\236\367\301\313\344\212\303r\350"
 159      AA4D 2CCB 
 159      E7ED 509E 
 159      F7C1 CBE4 
 159      8AC3 72E8 
 160 0274 6DB1 3BCB 	 .ascii "m\261;\313U\213IEJ\377WD\234k\226\255\347\036\330\232l\332\247"
 160      558B 4945 
 160      4AFF 5744 
 160      9C6B 96AD 
 160      E71E D89A 
 161 028b BD7D 9EA8 	 .ascii "\275}\236\250\362\243\373\234\345\355\313l\177\373xV\271\356"
 161      F2A3 FB9C 
 161      E5ED CB6C 
 161      7FFB 7856 
 161      B9EE 
 162 029d 175D AE5E 	 .ascii "\027]\256^\244\262\274I\355\221H4\021\277\230\212\246\215xb\240"
 162      A4B2 BC49 
 162      ED91 4834 
 162      11BF 988A 
GAS LISTING  			page 12


 162      A68D 7862 
 163 02b2 3F32 0EFE 	 .ascii "?2\016\376\361\211X\362@4\235J\362\215hl&\031\215O\216'\322\372"
 163      F189 58F2 
 163      4034 9D4A 
 163      F28D 686C 
 163      2619 8D4F 
 164 02ca A568 CAD0 	 .ascii "\245h\312\320\343\223Fd\002\232\323\364<vt\314\b\236<=\322s\002"
 164      E393 4664 
 164      029A D3F4 
 164      3C76 74CC 
 164      089E 3C3D 
 165 02e1 F68E D8EF 	 .ascii "\366\216\330\357g\247\006\372\317\030I_\312\230\n\306'\365\230"
 165      67A7 06FA 
 165      CF18 495F 
 165      CA98 0AC6 
 165      27F5 98
 166 02f4 116B E281 	 .ascii "\021k\342\201CcF\230\007\f\325\366\223\276\231X\242\2728H\213"
 166      4363 4698 
 166      070C D5F6 
 166      93BE 9958 
 166      A2BA 3848 
 167 0309 36E5 C0E0 	 .ascii "6\345\300\340\230\321B/|\215o\376\003f\255\205s"
 167      98D1 422F 
 167      7C8D 6FFE 
 167      0366 AD85 
 167      73
 168               	 .text
 169               	 .section .gnu.lto_.symtab.84cf0f2190f1a352,"",@progbits
 170 0000 5569 6E74 	 .string "Uint32To10Str"
 170      3332 546F 
 170      3130 5374 
 170      7200 
 171 000e 00        	 .string ""
 172 000f 00        	 .string ""
 173 0010 00        	 .string ""
 174 0011 00        	 .string ""
 175 0012 00        	 .string ""
 176 0013 00        	 .string ""
 177 0014 00        	 .string ""
 178 0015 00        	 .string ""
 179 0016 00        	 .string ""
 180 0017 00        	 .string ""
 181 0018 00        	 .string ""
 182 0019 A100      	 .string "\241"
 183 001b 00        	 .string ""
 184 001c 00        	 .string ""
 185 001d 5569 6E74 	 .string "Uint8To10Str"
 185      3854 6F31 
 185      3053 7472 
 185      00
 186 002a 00        	 .string ""
 187 002b 00        	 .string ""
 188 002c 00        	 .string ""
 189 002d 00        	 .string ""
 190 002e 00        	 .string ""
 191 002f 00        	 .string ""
 192 0030 00        	 .string ""
GAS LISTING  			page 13


 193 0031 00        	 .string ""
 194 0032 00        	 .string ""
 195 0033 00        	 .string ""
 196 0034 00        	 .string ""
 197 0035 B300      	 .string "\263"
 198 0037 00        	 .string ""
 199 0038 00        	 .string ""
 200 0039 5569 6E74 	 .string "Uint8To16Str"
 200      3854 6F31 
 200      3653 7472 
 200      00
 201 0046 00        	 .string ""
 202 0047 00        	 .string ""
 203 0048 00        	 .string ""
 204 0049 00        	 .string ""
 205 004a 00        	 .string ""
 206 004b 00        	 .string ""
 207 004c 00        	 .string ""
 208 004d 00        	 .string ""
 209 004e 00        	 .string ""
 210 004f 00        	 .string ""
 211 0050 00        	 .string ""
 212 0051 C000      	 .string "\300"
 213 0053 00        	 .string ""
 214 0054 00        	 .string ""
 215 0055 5374 7254 	 .string "StrTo16Uint"
 215      6F31 3655 
 215      696E 7400 
 216 0061 00        	 .string ""
 217 0062 00        	 .string ""
 218 0063 00        	 .string ""
 219 0064 00        	 .string ""
 220 0065 00        	 .string ""
 221 0066 00        	 .string ""
 222 0067 00        	 .string ""
 223 0068 00        	 .string ""
 224 0069 00        	 .string ""
 225 006a 00        	 .string ""
 226 006b 00        	 .string ""
 227 006c C500      	 .string "\305"
 228 006e 00        	 .string ""
 229 006f 00        	 .string ""
 230               	 .text
 231               	 .section .gnu.lto_.opts,"",@progbits
 232 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 232      6375 3D61 
 232      746D 6567 
 232      6133 3275 
 232      3227 2027 
 233               	 .text
 234               	 .cfi_sections .debug_frame
 235               	.global Uint32To10Str
 237               	Uint32To10Str:
 238               	.LFB0:
 239               	 .file 1 "../libs/util10.c"
   1:../libs/util10.c **** #include "util10.h"
   2:../libs/util10.c **** #include <string.h>
GAS LISTING  			page 14


   3:../libs/util10.c **** #include <stdlib.h>
   4:../libs/util10.c **** 
   5:../libs/util10.c **** void Uint32To10Str( char * sto, uint32_t indata )
   6:../libs/util10.c **** {
 240               	 .loc 1 6 0
 241               	 .cfi_startproc
 242               	.LVL0:
 243 0000 7F92      	 push r7
 244               	.LCFI0:
 245               	 .cfi_def_cfa_offset 3
 246               	 .cfi_offset 7,-2
 247 0002 8F92      	 push r8
 248               	.LCFI1:
 249               	 .cfi_def_cfa_offset 4
 250               	 .cfi_offset 8,-3
 251 0004 9F92      	 push r9
 252               	.LCFI2:
 253               	 .cfi_def_cfa_offset 5
 254               	 .cfi_offset 9,-4
 255 0006 AF92      	 push r10
 256               	.LCFI3:
 257               	 .cfi_def_cfa_offset 6
 258               	 .cfi_offset 10,-5
 259 0008 BF92      	 push r11
 260               	.LCFI4:
 261               	 .cfi_def_cfa_offset 7
 262               	 .cfi_offset 11,-6
 263 000a CF92      	 push r12
 264               	.LCFI5:
 265               	 .cfi_def_cfa_offset 8
 266               	 .cfi_offset 12,-7
 267 000c DF92      	 push r13
 268               	.LCFI6:
 269               	 .cfi_def_cfa_offset 9
 270               	 .cfi_offset 13,-8
 271 000e EF92      	 push r14
 272               	.LCFI7:
 273               	 .cfi_def_cfa_offset 10
 274               	 .cfi_offset 14,-9
 275 0010 FF92      	 push r15
 276               	.LCFI8:
 277               	 .cfi_def_cfa_offset 11
 278               	 .cfi_offset 15,-10
 279 0012 0F93      	 push r16
 280               	.LCFI9:
 281               	 .cfi_def_cfa_offset 12
 282               	 .cfi_offset 16,-11
 283 0014 1F93      	 push r17
 284               	.LCFI10:
 285               	 .cfi_def_cfa_offset 13
 286               	 .cfi_offset 17,-12
 287 0016 CF93      	 push r28
 288               	.LCFI11:
 289               	 .cfi_def_cfa_offset 14
 290               	 .cfi_offset 28,-13
 291 0018 DF93      	 push r29
 292               	.LCFI12:
GAS LISTING  			page 15


 293               	 .cfi_def_cfa_offset 15
 294               	 .cfi_offset 29,-14
 295               	 
 296               	 
 297               	 
 298               	.L__stack_usage =13
 299 001a EC01      	 movw r28,r24
 300 001c 6A01      	 movw r12,r20
 301 001e 7B01      	 movw r14,r22
 302               	.LVL1:
   7:../libs/util10.c **** 	uint32_t place = 1000000000;
   8:../libs/util10.c **** 	uint8_t pl = 0;
   9:../libs/util10.c **** 	uint8_t ct = 0;
  10:../libs/util10.c **** 
  11:../libs/util10.c **** 	while( place )
  12:../libs/util10.c **** 	{
  13:../libs/util10.c **** 		while( indata >= place )
  14:../libs/util10.c **** 		{
  15:../libs/util10.c **** 			ct++;
  16:../libs/util10.c **** 			indata -= place;
  17:../libs/util10.c **** 		}
  18:../libs/util10.c **** 		if( pl || ct )
  19:../libs/util10.c **** 		{
  20:../libs/util10.c **** 			sto[pl++] = ct + '0';
 303               	 .loc 1 20 0
 304 0020 0AE0      	 ldi r16,lo8(10)
 305 0022 10E0      	 ldi r17,0
   8:../libs/util10.c **** 	uint8_t pl = 0;
 306               	 .loc 1 8 0
 307 0024 712C      	 mov r7,__zero_reg__
   7:../libs/util10.c **** 	uint32_t place = 1000000000;
 308               	 .loc 1 7 0
 309 0026 20E0      	 ldi r18,0
 310 0028 3AEC      	 ldi r19,lo8(-54)
 311 002a 4AE9      	 ldi r20,lo8(-102)
 312 002c 5BE3      	 ldi r21,lo8(59)
  21:../libs/util10.c **** 		}
  22:../libs/util10.c **** 		place /= 10;
 313               	 .loc 1 22 0
 314 002e 8AE0      	 ldi r24,lo8(10)
 315 0030 882E      	 mov r8,r24
 316 0032 912C      	 mov r9,__zero_reg__
 317 0034 A12C      	 mov r10,__zero_reg__
 318 0036 B12C      	 mov r11,__zero_reg__
 319               	.LVL2:
 320               	.L2:
   6:../libs/util10.c **** {
 321               	 .loc 1 6 0 discriminator 1
 322 0038 80E0      	 ldi r24,0
 323               	.LVL3:
 324               	.L7:
  13:../libs/util10.c **** 		while( indata >= place )
 325               	 .loc 1 13 0 discriminator 1
 326 003a C216      	 cp r12,r18
 327 003c D306      	 cpc r13,r19
 328 003e E406      	 cpc r14,r20
 329 0040 F506      	 cpc r15,r21
GAS LISTING  			page 16


 330 0042 00F0      	 brlo .L13
  15:../libs/util10.c **** 			ct++;
 331               	 .loc 1 15 0
 332 0044 8F5F      	 subi r24,lo8(-(1))
 333               	.LVL4:
  16:../libs/util10.c **** 			indata -= place;
 334               	 .loc 1 16 0
 335 0046 C21A      	 sub r12,r18
 336 0048 D30A      	 sbc r13,r19
 337 004a E40A      	 sbc r14,r20
 338 004c F50A      	 sbc r15,r21
 339               	.LVL5:
 340 004e 00C0      	 rjmp .L7
 341               	.L13:
  18:../libs/util10.c **** 		if( pl || ct )
 342               	 .loc 1 18 0
 343 0050 7110      	 cpse r7,__zero_reg__
 344 0052 00C0      	 rjmp .L4
  18:../libs/util10.c **** 		if( pl || ct )
 345               	 .loc 1 18 0 is_stmt 0 discriminator 1
 346 0054 8823      	 tst r24
 347 0056 01F0      	 breq .L5
 348               	.L4:
 349               	.LVL6:
  20:../libs/util10.c **** 			sto[pl++] = ct + '0';
 350               	 .loc 1 20 0 is_stmt 1
 351 0058 FE01      	 movw r30,r28
 352 005a E70D      	 add r30,r7
 353 005c F11D      	 adc r31,__zero_reg__
 354 005e 805D      	 subi r24,lo8(-(48))
 355               	.LVL7:
 356 0060 8083      	 st Z,r24
 357 0062 7394      	 inc r7
 358               	.LVL8:
 359               	.L5:
 360               	 .loc 1 22 0
 361 0064 CA01      	 movw r24,r20
 362 0066 B901      	 movw r22,r18
 363 0068 A501      	 movw r20,r10
 364 006a 9401      	 movw r18,r8
 365               	.LVL9:
 366 006c 0E94 0000 	 call __udivmodsi4
 367               	.LVL10:
 368 0070 0150      	 subi r16,1
 369 0072 1109      	 sbc r17,__zero_reg__
  11:../libs/util10.c **** 	while( place )
 370               	 .loc 1 11 0
 371 0074 0115      	 cp r16,__zero_reg__
 372 0076 1105      	 cpc r17,__zero_reg__
 373 0078 01F4      	 brne .L2
  23:../libs/util10.c **** 		ct = 0;
  24:../libs/util10.c **** 	}
  25:../libs/util10.c **** 	if( pl == 0 ) sto[pl++] = '0';
 374               	 .loc 1 25 0
 375 007a 7110      	 cpse r7,__zero_reg__
 376 007c 00C0      	 rjmp .L8
 377               	.LVL11:
GAS LISTING  			page 17


 378               	 .loc 1 25 0 is_stmt 0 discriminator 1
 379 007e 80E3      	 ldi r24,lo8(48)
 380 0080 8883      	 st Y,r24
 381 0082 7724      	 clr r7
 382 0084 7394      	 inc r7
 383               	.LVL12:
 384               	.L8:
  26:../libs/util10.c **** 	sto[pl] = 0;
 385               	 .loc 1 26 0 is_stmt 1
 386 0086 C70D      	 add r28,r7
 387 0088 D11D      	 adc r29,__zero_reg__
 388               	.LVL13:
 389 008a 1882      	 st Y,__zero_reg__
 390               	 
  27:../libs/util10.c **** }
 391               	 .loc 1 27 0
 392 008c DF91      	 pop r29
 393 008e CF91      	 pop r28
 394 0090 1F91      	 pop r17
 395 0092 0F91      	 pop r16
 396 0094 FF90      	 pop r15
 397 0096 EF90      	 pop r14
 398 0098 DF90      	 pop r13
 399 009a CF90      	 pop r12
 400               	.LVL14:
 401 009c BF90      	 pop r11
 402 009e AF90      	 pop r10
 403 00a0 9F90      	 pop r9
 404 00a2 8F90      	 pop r8
 405 00a4 7F90      	 pop r7
 406               	.LVL15:
 407 00a6 0895      	 ret
 408               	 .cfi_endproc
 409               	.LFE0:
 411               	.global Uint8To10Str
 413               	Uint8To10Str:
 414               	.LFB1:
  28:../libs/util10.c **** 
  29:../libs/util10.c **** //TODO: Consider de-loopifying this some.
  30:../libs/util10.c **** void Uint8To10Str( char * str, uint8_t val )
  31:../libs/util10.c **** {
 415               	 .loc 1 31 0
 416               	 .cfi_startproc
 417               	.LVL16:
 418               	 
 419               	 
 420               	 
 421               	.L__stack_usage =0
 422 00a8 FC01      	 movw r30,r24
 423               	.LVL17:
  32:../libs/util10.c **** 	uint8_t count = 0;
  33:../libs/util10.c **** 	while( val >= 100 ) { val -= 100; count++; }
 424               	 .loc 1 33 0
 425 00aa 6436      	 cpi r22,lo8(100)
 426 00ac 00F0      	 brlo .L18
 427 00ae 8CE9      	 ldi r24,lo8(-100)
 428               	.LVL18:
GAS LISTING  			page 18


 429 00b0 860F      	 add r24,r22
 430               	.LVL19:
 431 00b2 8436      	 cpi r24,lo8(100)
 432 00b4 00F0      	 brlo .L19
 433 00b6 685C      	 subi r22,lo8(-(56))
 434               	.LVL20:
 435 00b8 82E0      	 ldi r24,lo8(2)
 436 00ba 00C0      	 rjmp .L15
 437               	.LVL21:
 438               	.L18:
  32:../libs/util10.c **** 	uint8_t count = 0;
 439               	 .loc 1 32 0
 440 00bc 80E0      	 ldi r24,0
 441               	.LVL22:
 442 00be 00C0      	 rjmp .L15
 443               	.LVL23:
 444               	.L19:
 445               	 .loc 1 33 0
 446 00c0 682F      	 mov r22,r24
 447 00c2 81E0      	 ldi r24,lo8(1)
 448               	.LVL24:
 449               	.L15:
  34:../libs/util10.c **** 	str[0] = '0' + count;
 450               	 .loc 1 34 0
 451 00c4 805D      	 subi r24,lo8(-(48))
 452 00c6 8083      	 st Z,r24
 453               	.LVL25:
  35:../libs/util10.c **** 	count = 0;
 454               	 .loc 1 35 0
 455 00c8 80E0      	 ldi r24,0
 456               	.LVL26:
 457               	.L16:
  36:../libs/util10.c **** 	while( val >= 10 ) { val -= 10; count++; }
 458               	 .loc 1 36 0 discriminator 1
 459 00ca 6A30      	 cpi r22,lo8(10)
 460 00cc 00F0      	 brlo .L20
 461               	 .loc 1 36 0 is_stmt 0 discriminator 2
 462 00ce 6A50      	 subi r22,lo8(-(-10))
 463               	.LVL27:
 464 00d0 8F5F      	 subi r24,lo8(-(1))
 465               	.LVL28:
 466 00d2 00C0      	 rjmp .L16
 467               	.L20:
  37:../libs/util10.c **** 	str[1] = '0' + count;
 468               	 .loc 1 37 0 is_stmt 1
 469 00d4 805D      	 subi r24,lo8(-(48))
 470               	.LVL29:
 471 00d6 8183      	 std Z+1,r24
 472               	.LVL30:
  38:../libs/util10.c **** 	count = 0;
  39:../libs/util10.c **** 	while( val >= 1 ) { val -= 1; count++; }
  40:../libs/util10.c **** 	str[2] = '0' + count;
 473               	 .loc 1 40 0
 474 00d8 605D      	 subi r22,lo8(-(48))
 475               	.LVL31:
 476 00da 6283      	 std Z+2,r22
  41:../libs/util10.c **** 	str[3] = 0;
GAS LISTING  			page 19


 477               	 .loc 1 41 0
 478 00dc 1382      	 std Z+3,__zero_reg__
 479 00de 0895      	 ret
 480               	 .cfi_endproc
 481               	.LFE1:
 483               	.global Uint8To16Str
 485               	Uint8To16Str:
 486               	.LFB2:
  42:../libs/util10.c **** }
  43:../libs/util10.c **** 
  44:../libs/util10.c **** void Uint8To16Str( char * str, uint8_t val )
  45:../libs/util10.c **** {
 487               	 .loc 1 45 0
 488               	 .cfi_startproc
 489               	.LVL32:
 490               	 
 491               	 
 492               	 
 493               	.L__stack_usage =0
 494 00e0 FC01      	 movw r30,r24
  46:../libs/util10.c **** 	uint8_t high = val>>4;
 495               	 .loc 1 46 0
 496 00e2 862F      	 mov r24,r22
 497               	.LVL33:
 498 00e4 8295      	 swap r24
 499 00e6 8F70      	 andi r24,lo8(15)
 500               	.LVL34:
  47:../libs/util10.c **** 	uint8_t low  = val & 0x0f;
 501               	 .loc 1 47 0
 502 00e8 6F70      	 andi r22,lo8(15)
 503               	.LVL35:
  48:../libs/util10.c **** 	str[0] = (high>9)?('a'-10+high):(high+'0');
 504               	 .loc 1 48 0
 505 00ea 8A30      	 cpi r24,lo8(10)
 506 00ec 00F0      	 brlo .L22
 507               	 .loc 1 48 0 is_stmt 0 discriminator 1
 508 00ee 895A      	 subi r24,lo8(-(87))
 509               	.LVL36:
 510 00f0 00C0      	 rjmp .L23
 511               	.LVL37:
 512               	.L22:
 513               	 .loc 1 48 0 discriminator 2
 514 00f2 805D      	 subi r24,lo8(-(48))
 515               	.LVL38:
 516               	.L23:
 517               	 .loc 1 48 0 discriminator 3
 518 00f4 8083      	 st Z,r24
  49:../libs/util10.c **** 	str[1] = (low>9)?('a'-10+low):(low+'0');
 519               	 .loc 1 49 0 is_stmt 1 discriminator 3
 520 00f6 6A30      	 cpi r22,lo8(10)
 521 00f8 00F0      	 brlo .L24
 522               	 .loc 1 49 0 is_stmt 0 discriminator 1
 523 00fa 695A      	 subi r22,lo8(-(87))
 524               	.LVL39:
 525 00fc 00C0      	 rjmp .L25
 526               	.LVL40:
 527               	.L24:
GAS LISTING  			page 20


 528               	 .loc 1 49 0 discriminator 2
 529 00fe 605D      	 subi r22,lo8(-(48))
 530               	.LVL41:
 531               	.L25:
 532               	 .loc 1 49 0 discriminator 3
 533 0100 6183      	 std Z+1,r22
  50:../libs/util10.c **** 	str[2] = 0;
 534               	 .loc 1 50 0 is_stmt 1 discriminator 3
 535 0102 1282      	 std Z+2,__zero_reg__
 536 0104 0895      	 ret
 537               	 .cfi_endproc
 538               	.LFE2:
 540               	.global StrTo16Uint
 542               	StrTo16Uint:
 543               	.LFB3:
  51:../libs/util10.c **** }
  52:../libs/util10.c **** 
  53:../libs/util10.c **** 
  54:../libs/util10.c **** uint16_t StrTo16Uint( char * str )
  55:../libs/util10.c **** {
 544               	 .loc 1 55 0
 545               	 .cfi_startproc
 546               	.LVL42:
 547               	 
 548               	 
 549               	 
 550               	.L__stack_usage =0
 551 0106 FC01      	 movw r30,r24
 552               	.LVL43:
  56:../libs/util10.c **** 	uint16_t ret = 0;
  57:../libs/util10.c **** 	uint8_t yet = 0;
 553               	 .loc 1 57 0
 554 0108 30E0      	 ldi r19,0
  56:../libs/util10.c **** 	uint16_t ret = 0;
 555               	 .loc 1 56 0
 556 010a 80E0      	 ldi r24,0
 557 010c 90E0      	 ldi r25,0
 558               	.LVL44:
 559               	.L27:
  58:../libs/util10.c **** 	char c;
  59:../libs/util10.c **** 	while( (c = (*(str++))) )
 560               	 .loc 1 59 0 discriminator 1
 561 010e 2191      	 ld r18,Z+
 562               	.LVL45:
 563 0110 2223      	 tst r18
 564 0112 01F0      	 breq .L35
  60:../libs/util10.c **** 	{
  61:../libs/util10.c **** 		if( c >= '0' && c <= '9' )
 565               	 .loc 1 61 0
 566 0114 40ED      	 ldi r20,lo8(-48)
 567 0116 420F      	 add r20,r18
 568 0118 4A30      	 cpi r20,lo8(10)
 569 011a 00F4      	 brsh .L28
 570               	.LVL46:
  62:../libs/util10.c **** 		{
  63:../libs/util10.c **** 			yet = 1;
  64:../libs/util10.c **** 			ret = ret * 10 + (c - '0');
GAS LISTING  			page 21


 571               	 .loc 1 64 0
 572 011c 6AE0      	 ldi r22,lo8(10)
 573 011e 70E0      	 ldi r23,0
 574 0120 0E94 0000 	 call __mulhi3
 575               	.LVL47:
 576 0124 C097      	 sbiw r24,48
 577 0126 820F      	 add r24,r18
 578 0128 911D      	 adc r25,__zero_reg__
 579 012a 27FD      	 sbrc r18,7
 580 012c 9A95      	 dec r25
 581               	.LVL48:
  63:../libs/util10.c **** 			yet = 1;
 582               	 .loc 1 63 0
 583 012e 31E0      	 ldi r19,lo8(1)
 584 0130 00C0      	 rjmp .L27
 585               	.LVL49:
 586               	.L28:
  65:../libs/util10.c **** 		}
  66:../libs/util10.c **** 		else if( yet )
 587               	 .loc 1 66 0
 588 0132 3323      	 tst r19
 589 0134 01F0      	 breq .L27
 590               	.L35:
  67:../libs/util10.c **** 		{
  68:../libs/util10.c **** 			//Chars in the middle of the number.
  69:../libs/util10.c **** 			return ret;
  70:../libs/util10.c **** 		}
  71:../libs/util10.c **** 	}
  72:../libs/util10.c **** 	return ret;
  73:../libs/util10.c **** }
 591               	 .loc 1 73 0
 592 0136 0895      	 ret
 593               	 .cfi_endproc
 594               	.LFE3:
 596               	.Letext0:
 597               	 .file 2 "/usr/lib/avr/include/stdint.h"
GAS LISTING  			page 22


DEFINED SYMBOLS
                            *ABS*:0000000000000000 util10.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:237    .text:0000000000000000 Uint32To10Str
    {standard input}:413    .text:00000000000000a8 Uint8To10Str
    {standard input}:485    .text:00000000000000e0 Uint8To16Str
    {standard input}:542    .text:0000000000000106 StrTo16Uint
                            *COM*:0000000000000001 __gnu_lto_v1

UNDEFINED SYMBOLS
__udivmodsi4
__mulhi3
GAS LISTING  			page 1


   1               	 .file "ws2812.c"
   2               	__SP_H__ =0x3e
   3               	__SP_L__ =0x3d
   4               	__SREG__ =0x3f
   5               	__tmp_reg__ =0
   6               	__zero_reg__ =1
   7               	 .text
   8               	.Ltext0:
   9               	 .section .gnu.lto_.jmpfuncs.94d9018ef16c706c,"",@progbits
  10 0000 789C 6362 	 .string "x\234cb`b\300\006\330\2404\023\0033#?\003"
  10      6062 C006 
  10      D8A0 3413 
  10      0333 233F 
  10      0300 
  11 0012 0147 00   	 .string "\001G"
  12 0015 20        	 .ascii " "
  13               	 .text
  14               	 .section .gnu.lto_.inline.94d9018ef16c706c,"",@progbits
  15 0000 789C 6362 	 .string "x\234cb`b\300\006\354\2404P\366\023\303R]F "
  15      6062 C006 
  15      ECA0 3450 
  15      F613 C352 
  15      5D46 2000 
  16 0014 F1EE 312E 	 .string "\361\3561.[{\230\225\201m\201<\023\003\013P\200\221\341=C\033P\226\031,{\203q\331\345\375H\262\f"
  16      5B7B 9895 
  16      816D 813C 
  16      1303 0B50 
  16      8091 E13D 
  17 0038 8236 0B60 	 .ascii "\2026\013`"
  18               	 .text
  19               	 .section .gnu.lto_.pureconst.94d9018ef16c706c,"",@progbits
  20 0000 789C 6362 	 .string "x\234cb`b`e\200"
  20      6062 6065 
  20      8000 
  21 000a 2606 2B46 	 .string "&\006+F+"
  21      2B00 
  22 0010 0186 00   	 .string "\001\206"
  23 0013 81        	 .ascii "\201"
  24               	 .text
  25               	 .section .gnu.lto_SendBufferWS.94d9018ef16c706c,"",@progbits
  26 0000 789C CD58 	 .string "x\234\315XKh\035U\030\376\37733\367\221\373~\345&$\266&Y$M\323\320\244!\ry\277hHH\3346\240\033i\021zM\265PT\260\213N\222\253t\341\"\270Q\024\321P\212\256tmu\021\213h\013\246\320e\026B6\342\306\275P\n\327\377?\347\314$\231\271\311\235\201\200\235\305\177\036\377\367\237s\376\327\227\207"
  26      4B68 1D55 
  26      18FE FF33 
  26      33F7 91FB 
  26      7EE5 2624 
  27 0068 01DE 2F83 	 .string "\001\336/\203"
  27      00
  28 006d 6D39 8056 	 .ascii "m9\200V\232c\013\240\330z\n\260\036\023\330\254&\006\306\324"
  28      9A63 0BA0 
  28      D87A 0AB0 
  28      1E13 D8AC 
  28      2606 C6D4 
  29 0081 C414 D6BD 	 .ascii "\304\024\326\275n\260\233\",\223\026F\325v\304\231D\025p&&\314"
  29      6EB0 9B22 
  29      2C93 1646 
  29      D576 C499 
  29      4415 7026 
GAS LISTING  			page 2


  30 0097 4F7E 0702 	 .ascii "O~\007\002\306\253Q\002\3061\255\364M\"!\355\223\322>\201)\265"
  30      C6AB 5102 
  30      C631 ADF4 
  30      4D22 21ED 
  30      93D2 3E81 
  31 00ad 9D74 2629 	 .ascii "\235t&)\005\234I\213&e\237\221\366\031,*}V\344\244}^\332\347"
  31      059C 498B 
  31      2665 9F91 
  31      F619 2C2A 
  31      7D56 E4A4 
  32 00c5 B0A0 B6F3 	 .ascii "\260\240\266\363\316\244\240\2003E\221U\366%i_R\216\374\022k"
  32      CEA4 A080 
  32      3345 9155 
  32      F625 695F 
  32      528E FC12 
  33 00da 1686 DA   	 .ascii "\026\206\332"
  34 00dd 2FCB FD32 	 .string "/\313\3752\"\357\003\302]a\230V$\032\2137%\222\251t&\233\313\027\212\245\3462\336}\0039@F'l\333\366\326\376\203=\361\271]\335\251\325\246\326\220\342\230Dx\013\341u\\C\314\312Axb+\315>\335\331\375\370\300\314\020\220>0\213)3\254gf?\333\262m\\\377\306~Q\253\031\322\260\320\310\360\007\261\263_\253\375\261\361\336k\b\267\370\205\327q\033;\301\240\361>\215\246\036-=&\220@)\022\230\206543,rZ\227\247\361\001\215\005\336,\262(\261(ku\013/ZY\264\261hgq\206\305Y\026\035\032\325\311\213.\026\335\372\270\036^\234c\321\313\242O\003/\360\242\237\305E\026\003,.\261\030b1\254Q\227y1\302bT\357\214\351q\234\335\235\320wL2b\212\3054\213Y\215\231\343\305<\213+,\026X,\262Xb\261\254Q+:f\364YP\245\244\277\252\326J\253."
  34      22EF 03C2 
  34      5D61 9856 
  34      241A 8B37 
  34      2592 A974 
  35 01de 4E03 7D57 	 .ascii "N\003}WI\356\001\254\242\240\301x\002\033\373\237\031\327\361"
  35      49EE 01AC 
  35      A2A0 C178 
  35      021B FB9F 
  35      19D7 F1
  36 01f1 5BB4 F419 	 .ascii "[\264\364\031\234\"77\253h@5j\354\302\243\207\037\375\335\242"
  36      9C22 3737 
  36      AB68 4035 
  36      6AEC C2A3 
  36      871F FDDD 
  37 0206 6015 4C7F 	 .ascii "`\025L\177\t_\254W\tg18\322+m\"\332d\0276\1774\034d\206\300\254"
  37      095F AC57 
  37      0967 3138 
  37      D22B 6D22 
  37      DA64 1736 
  38 0221 3463 52F3 	 .ascii "4cR\363hQ)\216\267'\023\200' \234\027\335\327/2l~\224\253\240"
  38      6851 298E 
  38      B727 1380 
  38      2720 9C17 
  38      DDD7 2F32 
  39 023a C0CD C3DC 	 .ascii "\300\315\303\334\032F+\210\272\246\224B^\263\361\320r\036\220"
  39      1A46 2B88 
  39      BAA6 9442 
  39      5EB3 F1D0 
  39      721E 90
  40 024d A7AB D85C 	 .ascii "\247\253\330\\\343\242\372\221\207n\340\330\020\316\361\327\004"
  40      E3A2 FA91 
  40      876E E0D8 
  40      10CE F1D7 
  40      04
  41 025e 6A36 7278 	 .ascii "j6rx\363'\327\211B\205\355\t\361\030\252\377\240\273+\375:\\"
  41      F327 D789 
  41      4285 ED09 
  41      F118 AAFF 
  41      A0BB 2BFD 
  42 0274 C8AB B4FF 	 .ascii "\310\253\264\377[\227\f\226{\177\361\250\253\347\217\017U\211"
GAS LISTING  			page 3


  42      5B97 0C96 
  42      7B7F F1A8 
  42      ABE7 8F0F 
  42      5589 
  43 0286 C00D 4375 	 .ascii "\300\rCu\376H\250J\362\210\357\335#\312\364P\231>\004_\020I\013"
  43      FE48 A84A 
  43      F288 EFDD 
  43      23CA F450 
  43      993E 045F 
  44 029d F014 6C74 	 .ascii "\360\024lt\343\004\245\377m\343H\210Z\032\204\350 \021\255\004"
  44      E304 A5FF 
  44      6DE3 4888 
  44      5A1A 84E8 
  44      2011 AD04 
  45 02b1 66A5 F52F 	 .ascii "f\245\365/\006\216Q\253\223\233\210/7m\201s\323N\340\220\271"
  45      068E 51AB 
  45      939B 882F 
  45      376D 8173 
  45      D34E E090 
  46 02c6 696F E4F6 	 .ascii "io\344\366\231\300n\237%pX\267\317zJ\243\343\304\322\3508\235"
  46      99C0 6E9F 
  46      2570 58B7 
  46      CF7A 4AA3 
  46      E3C4 D2E8 
  47 02dc B4AA 4047 	 .ascii "\264\252@Ge\0071\311\214\321\311\021\256<K*b@?\270\220\030\207"
  47      6507 31C9 
  47      8CD1 C911 
  47      AE3C 4B2A 
  47      6240 3FB8 
  48 02f3 A2E8 DC6C 	 .ascii "\242\350\334lx\272\312\360t\025QT\005\307\242\350p\200!O\212"
  48      78BA CAF0 
  48      7415 5154 
  48      05C7 A2E8 
  48      7080 214F 
  49 0308 BBA4 74C3 	 .ascii "\273\244t\3031\354\f\314I]\004\016\311I]\3018I\334\201\017\211"
  49      31EC 0CCC 
  49      495D 040E 
  49      C949 5DC1 
  49      3849 DC81 
  50 031e 63F8 24DB 	 .ascii "c\370$\333\316\036\260NL\022\252\033*?\213\221\351\211,\326\355"
  50      CE1E B04E 
  50      4C12 AA1B 
  50      2A3F 8B91 
  50      E989 2CD6 
  51 0333 6131 4DD0 	 .ascii "a1M\320>\026\353vr\320\344g\261\236\n\232\022q$\336=uX,\341\353"
  51      3E16 EB76 
  51      72D0 E467 
  51      B19E 0A9A 
  51      1271 24DE 
  52 034d 9473 813B 	 .ascii "\224s\201;\245\227\300!;\245\327S\252}\364\320\343K\265\357%"
  52      A597 C021 
  52      3BA5 D753 
  52      AA7D F4D0 
  52      E34B B5EF 
  53 0362 65B1 0B81 	 .ascii "e\261\013\201\333\271\237\300a\333\271\337\311M\322\227\233\213"
  53      DBB9 9FC0 
  53      61DB B9DF 
GAS LISTING  			page 4


  53      C94D D297 
  53      9B8B 
  54 0374 8173 3340 	 .ascii "\201s3@\340\220\271\031h\344\366\245\300n\017\0218\254\333C\236"
  54      E090 B919 
  54      68E4 F6A5 
  54      C06E 0F11 
  54      38AC DB43 
  55 0389 D218 3EB1 	 .ascii "\322\030>\2614\206O\223\305R.\213\345\350\344$W^B*\322uX\314"
  55      3486 4F93 
  55      C552 2E8B 
  55      E5E8 E424 
  55      575E 422A 
  56 03a1 F474 95E9 	 .ascii "\364t\225\351c1j\275\\\312e\261\270<)\343\262\330M\307\360r`"
  56      6331 6ABD 
  56      5CCA 65B1 
  56      B83C 29E3 
  56      B2D8 4DC7 
  57 03b8 161B 2170 	 .ascii "\026\033!pH\026\0339\201\305\210n\236\273g\217\337\201\347\266"
  57      4816 1B39 
  57      81C5 886E 
  57      9EBB 678F 
  57      DF81 E7B6 
  58 03cc 64B0 3A5C 	 .ascii "d\260:\\f\270^\035\34612\362p\326\204\207\263\204\307\310\341"
  58      66B8 5E1D 
  58      E631 32F2 
  58      70D6 8487 
  58      B384 C7C8 
  59 03e1 AC09 27E2 	 .ascii "\254\t'\342Y?gMV\320\222\210#\321\235\254\303Y9__L\005\356\213"
  59      593F 674D 
  59      56D0 9288 
  59      23D1 9DAC 
  59      C359 395F 
  60 03fa 6902 87EC 	 .ascii "i\002\207\354\213iOa\316V\024\254~a\316\276\244\2345\027\270"
  60      8B69 4F61 
  60      CE56 14AC 
  60      7E61 CEBE 
  60      A49C 3517 
  61 040f 79E7 091C 	 .ascii "y\347\t\034\266y\347\235\334\344}\271\271\02287\013\004\016\231"
  61      B679 E79D 
  61      DCE4 7DB9 
  61      B912 3837 
  61      0B04 0E99 
  62 0423 9B85 466E 	 .ascii "\233\205Fn/\006v{\211\300a\335^\362\224\306\362\211\245\261|"
  62      2F06 767B 
  62      89C0 61DD 
  62      5EF2 94C6 
  62      F289 A5B1 
  63 0438 9A9C 5570 	 .ascii "\232\234Up9k\224N\316s\345\345\244\242X\207\263,OWY>\316\242"
  63      396B 944E 
  63      CE73 E5E5 
  63      A4A2 5887 
  63      B32C 4F57 
  64 0450 D61B 2DB8 	 .ascii "\326\033-\270\234\225\221'\225\024gm\336\333\374\372\025\307"
  64      9C95 9127 
  64      9514 676D 
  64      DEDB FCFA 
  64      15C7 
GAS LISTING  			page 5


  65 0462 72A5 A27E 	 .ascii "r\245\242~}\361z\270-\357Yq^\327\f\177F\r\347\rJ'\030\317\033"
  65      7DF1 7AB8 
  65      2DEF 5971 
  65      5ED7 0C7F 
  65      460D E70D 
  66 047b 9241 905F 	 .ascii "\222A\220_\364\353_\353n\242D\205h\330}\016V0!H\214\227~\276"
  66      F4EB 5FEB 
  66      6EA2 4485 
  66      68D8 7D0E 
  66      5630 2148 
  67 0493 B607 42FF 	 .ascii "\266\007B\377\235*^\f\322\035\245\357\242|E\231\177_|\006\353"
  67      9D2A 5E0C 
  67      D21D A5EF 
  67      A27C 4599 
  67      7F5F 7C06 
  68 04a8 FB5F 8983 	 .ascii "\373_\211\203\360\360w\225\016\337\223\377D\212\177p{pd`\260"
  68      F0F0 7795 
  68      0EDF 93FF 
  68      448A 7F70 
  68      7B70 6460 
  69 04bd FF1A E00D 	 .ascii "\377\032\340\r\363\346\233\267\337\306\367\315w\336\275\005\377"
  69      F3E6 9BB7 
  69      DFC6 F7CD 
  69      77DE BD05 
  69      FF
  70 04ce 012C F450 	 .ascii "\001,\364P6"
  70      36
  71               	 .text
  72               	 .section .gnu.lto_SetManyWS.94d9018ef16c706c,"",@progbits
  73 0000 789C CD58 	 .ascii "x\234\315X\317k\034u\024\177\357;3;\373cvgw'\273kBB\222\3324"
  73      CF6B 1C75 
  73      147F EF3B 
  73      333B FB63 
  73      7667 7727 
  74 001b 244B 4393 	 .ascii "$KC\2234$iH\303\322\320\220\370\0074\240\0271\b\256Q\013\005"
  74      3424 6948 
  74      C3D2 D090 
  74      F807 34A0 
  74      1731 08AE 
  75 0032 3D76 E3AE 	 .ascii "=v\343\256P\244\207\342I\364b\b\021A\260G\211\"\304\"j\017-\366"
  75      50A4 87E2 
  75      49F4 6208 
  75      1141 B047 
  75      8922 C422 
  76 004a E021 0721 	 .ascii "\340!\007!\027\301\203w\275\305\367\276\337\231\331\356\314&"
  76      17C1 8377 
  76      BDC5 F7BE 
  76      DF99 D9EE 
  76      CC26 
  77 005c 3B03 013B 	 .ascii ";\003\001;\2077\337\357{\237\367\235\367\276\357\275\317\222"
  77      8737 DFEF 
  77      7B9F F79D 
  77      F7BE EFBD 
  77      CF92 
  78 006e 0810 107C 	 .ascii "\b\020\020|l\0048\260\001\372i\215/\001\212\007O\001v\222\002"
  78      6C04 38B0 
  78      01FA 698D 
GAS LISTING  			page 6


  78      2F01 8A07 
  78      4F01 7692 
  79 0083 CB6A A161 	 .ascii "\313j\241aR-ta\334\033\207F:\301\3222\320T\352\204\2670\025\260"
  79      522D 7461 
  79      DC1B 8746 
  79      3AC1 D232 
  79      D054 EA84 
  80 009b 9614 FAFD 	 .ascii "\226\024\372\375_\200\200\251\226I\300\024\346\224=-2\322\337"
  80      5F80 80A9 
  80      9649 C014 
  80      E694 3D2D 
  80      32D2 DF
  81 00ae 92FE 19CC 	 .ascii "\222\376\031\314*\265\345-\262\nX\313\211\264\362\267\245\277"
  81      2AB5 E52D 
  81      B20A 58CB 
  81      89B4 F2B7 
  81      A5BF 
  82 00c0 8D7D CA9E 	 .ascii "\215}\312\236\027\005\351_\224\376\005t\224\272\350-\034\005"
  82      1705 E95F 
  82      94FE 0574 
  82      94BA E82D 
  82      1C05 
  83 00d2 ACF5 89BC 	 .ascii "\254\365\211\274\362"
  83      F2
  84 00d7 2F49 FF92 	 .string "/I\377\222J\344\307dYhJ_\221\372\n\"\353\001\341\256\320t#a&S\351\214\225\315\331\371B\321\351+\225+x\3675\344\013\022\027`\267\321xp\274\377q\265\321<l\374{rbn#]\244\205\360&\302\253\270\215\230\227/\021\270\\\351\367\311\341\357\177\215\264\3754\001\271\266_R\371a\247\337Cqx|rr\177\377\267\301W\020\266p\027/\320\327\266p\217\336\232\373\326\335w\006o#X\260\215z\226\205\355\252\363\244\306\002k\212,\034\026%\327V\346M\205E?\213\001\026\203,\206X\f\273\250\021\336\214\262\270Hg\2111^]b1\316b\302EM\362\246\312\3422\213)\026WXL\263\230uQWy3\307b\336\325,\320\231\332\"k\256\261Xb\261\354\332\256\363f\205E\315\325\334\340\315*\213\233,\326X\254\273\266\r\367\202\3501\240Ee\032Q{e\365*\360\305hG\005\234^\025"
  84      4AE4 C764 
  84      5968 4A5F 
  84      91FA 0A22 
  84      EB01 E1AE 
  85 01d8 B6D3 738B 	 .string "\266\323s\213\344\021\300&\nzi\217\341\303\343\257g\266p\037\r\367\253\354\353\273l\242\006-S{\002\217\276\373\350\333~\005\253\243\3659|\266\323\"\234\301\340\304\244\364I\270.O\240y\240y\310,\201\331\250'\245\345\321\2722\234\356O."
  85      E411 C026 
  85      0A7A 698F 
  85      E1C3 E3AF 
  85      67B6 701F 
  86 0226 8F41 7811 	 .ascii "\217Ax\021\355\271\021i\r\016\3529\303\227d\250S\223\272a\352"
  86      EDB9 1169 
  86      0D0E EA39 
  86      C397 64A8 
  86      5393 BA61 
  87 023b 4073 4071 	 .ascii "@s@q6\277\367\277]\250\243\220\210_\241\3657\372Z\031\316\363"
  87      36BF F7BF 
  87      5DA8 A390 
  87      885F A1F5 
  87      37FA 5A19 
  88 0251 D7B2 49FA 	 .ascii "\327\262I\372\237_\2269\032\036\252\330\031a\365\364\f\035\002"
  88      9F5F 9639 
  88      1A1E AAD8 
  88      1961 F5F4 
  88      0C1D 02
  89 0264 F7CC B0DA 	 .ascii "\367\314\260\332\221\241#\217\370\306?\242D\201\312[\017\244"
  89      91A1 238F 
  89      F8C6 3FA2 
  89      4481 CA5B 
  89      0FA4 
  90 0276 B827 532C 	 .ascii "\270'S,\001<\205\206\033??\377\237\242\343\212\312=\256\250]"
  90      013C 8586 
  90      1B3F 3FFF 
GAS LISTING  			page 7


  90      9FA2 E38A 
  90      CA3D AEA8 
  91 028b 880A 81D9 	 .ascii "\210\n\201\331h\374\203\221\357\250\342\325&\021\252M\177\344"
  91      68FC 8391 
  91      EFA8 E2D5 
  91      2611 AA4D 
  91      7FE4 
  92 029d DA0C 1038 	 .ascii "\332\f\0208fm\006z\245=\0309\355!\002\307M{(\320\032\303g\266"
  92      666D 067A 
  92      A53D 1839 
  92      ED21 02C7 
  92      4D7B 28D0 
  93 02b5 C6F0 F994 	 .ascii "\306\360\371\224U]\264)'\210\271\241F''\270\363\fiH\002\375\246"
  93      555D B429 
  93      2788 B9A1 
  93      4627 27B8 
  93      F30C 6948 
  94 02cc 2011 05DD 	 .ascii " \021\005\335\242\367e\021\230*\021\230\252#\240\321\253\231"
  94      A2F7 6511 
  94      982A 1198 
  94      AA23 A0D1 
  94      AB99 
  95 02de E88D AE26 	 .ascii "\350\215\256&OJ\371\\r\340{\216D\346\222Q\002\307\344\222\321"
  95      4F4A F95C 
  95      72E0 7B8E 
  95      44E6 9251 
  95      02C7 E492 
  96 02f3 385C 72D1 	 .ascii "8\\r\321\273\211t\230K\306\352\250IDG\326c]\270$\023\352\327"
  96      BB89 7498 
  96      4BC6 EAA8 
  96      4944 47D6 
  96      635D B824 
  97 030a 4B91 FB75 	 .ascii "K\221\373u\234\3001\373u<\3200\023\024\350\351\r3"
  97      9CC0 31FB 
  97      753C D030 
  97      1314 E8E9 
  97      0D33 
  98 031c F182 72C9 	 .string "\361\202r\311d\344\241\252\0228\356PU\275\332X\241\332\\\216\\\233)\002\307\254\315T\257\264\257DN{\232\300q\323\236\016\264\306\354\231\2551{\236\\\222\365\271\304\246\223-\356\274\2144\344\272p\211\026\230*-\304%4zv\326\347\222\224<\311\366\271\344\007\337\363jd.\231#pL.\231\213\303%\013\336M\344\303\\\262XG]\":\262^\354\302%\205P\277^\213\334\257K\004\216\331\257K\201\206Y\246@Oo\230\345\027\224K\256G\036\252\025\002\307\035\252\025\2576\305PmnD\256\315*\201c\326f\265W\3327#\247\275F\340\270i\257\005Zc\375\314\326X?O.q|.\231\247\223\213\334y\005i\350\353\302%z`\252\364\020\227\320\350\315;>\227\330\362\244\222\342\222\346\275\346\303g~\212\033u\304n)\356\312\017mx\341\225\341\017S\363\202P6\344 ~\372s\307\257\r\3261\323\216"
  98      64E4 A1AA 
  98      1238 EE50 
  98      55BD DA58 
  98      A1DA 5C8E 
  99 041d DDBF B0C4 	 .ascii "\335\277\260\304\247\304k\033\245\257L>\246\3024\367\fv\216\017"
  99      A7C4 6B1B 
  99      A5AF 4C3E 
  99      A6C2 34F7 
  99      0C76 8E0F 
 100 0431 44FB 0EF8 	 .ascii "D\373\016\370\271E\307\035\311\177q\244>\2703\2630=3\365\006"
 100      B945 C71D 
 100      C97F 71A4 
 100      3EB8 33B3 
 100      303D 33F5 
 101 0446 E05B FA3B 	 .ascii "\340[\372;\257\337y\033\337\327\337}\3576\374\007\315w\017\372"
 101      AFDF 791B 
 101      DFD7 DF7D 
 101      EF36 FC07 
 101      CD77 0FFA 
GAS LISTING  			page 8


 102               	 .text
 103               	 .section .gnu.lto_.symbol_nodes.94d9018ef16c706c,"",@progbits
 104 0000 789C 6362 	 .string "x\234cb`b\220c\200\002&\206z\006\206\t\347\030\030\352\353\347u021\3263\"x\f"
 104      6062 9063 
 104      8002 2686 
 104      7A06 8609 
 104      E718 18EA 
 105 0020 7780 082D 	 .ascii "w\200\b-"
 106               	 .text
 107               	 .section .gnu.lto_.refs.94d9018ef16c706c,"",@progbits
 108 0000 789C 6362 	 .string "x\234cb`b`d\200\002"
 108      6062 6064 
 108      8002 00
 109 000b 00        	 .string ""
 110 000c 4600      	 .string "F"
 111 000e 06        	 .ascii "\006"
 112               	 .text
 113               	 .section .gnu.lto_.decls.94d9018ef16c706c,"",@progbits
 114 0000 789C 8D53 	 .string "x\234\215SMk\023Q\024\275w\022[\207\306\352B\213+\353\302*\266\220\301\256\212\213*\272\350\312nb\351BP\233\274T\003e\212\311L\305\2257qS\n\342T\024\342FZM\212\037(\351B\245\210f\004\177\200K7B6\005\227\205n\272\033\357\274yI\234$m\362\3400\357\315\334s\316\313=\271\032h\360\013"
 114      4D6B 1351 
 114      14BD 7712 
 114      5B87 C6EA 
 114      428B 2BEB 
 115 0066 3C5E 6351 	 .string "<^cQ\200\024\357#\214Ih.\215\261\316\250@\373\362\337\353\f\246\302 #\306(3\220Qe\270\214\022\343\222\252G\305\361=\3363>0~\264h\372>\375]4\353Z\025U\367\215\261\305\370\302\370\332\2427\f/i\255V\333\376\255\025i\307\363\216\016\301s\362W\236.\337\0238y\002n\240\300A\035\016\313ML\227\302"
 115      8014 EF23 
 115      8C49 682E 
 115      8DB1 CEA8 
 115      40FB F2DF 
 116 00cf 025F E190 	 .string "\002_\341\220\334Ed\013`"
 116      DC45 640B 
 116      6000 
 117 00d9 5688 0AB4 	 .ascii "V\210\n\264\226\247\343E._\366\017\264J\261\"_\262\223\304\b"
 117      96A7 E345 
 117      2E5F F60F 
 117      B44A B122 
 117      5FB2 93C4 
 118 00ee 9488 9CDA 	 .ascii "\224\210\234\332\326\337'q\242\250\3002\352,4\2060\no\331\336"
 118      D6DF 2771 
 118      A2A8 C032 
 118      EA2C 3486 
 118      300A 6FD9 
 119 0103 21DA 3CD2 	 .ascii "!\332<\322\241\245\002Qo;\013|\203\243\020\370\310\317j\343a"
 119      A1A5 0251 
 119      6F3B 0B7C 
 119      83A3 10F8 
 119      C8CF 6AE3 
 120 0118 C3FB 58DD 	 .ascii "\303\373X\335[S\264\022\016\3245\324/\020\030\325\203\347L\244"
 120      5B53 B412 
 120      0ED4 35D4 
 120      2F10 18D5 
 120      83E7 4CA4 
 121 012c A1AF C145 	 .ascii "\241\257\301El"
 121      6C
 122 0131 E8FB EB0C 	 .string "\350\373\353\f\274&zZ\333\336;O\221@E\203)\277d\035\207;\232)+\311s\350\023w\027QZi0}0/\270\316Y(\373y<v\013'A\006\002\212\024\352\302;\324\332Su\277?c\267<y\336\303\236c\335\f\307\032\004\023:\264~\354\332\301\353\235:H\273N\320\211 \370\233~M\245\331\212\320\275\224\217\"\276X\375\237x\273wb5DL\366Jt\350O34\201\037\271\323!b\357\251UZS\373\034NM\216\315\243\003\307F\340\006\216t\377\327\207\246Q`\225_\3577\bns\020\316\301\006\337\331\335\375Y\210bhB\352\367\273\237\033\237\2700\036O\301)\303\316e\215\205L\322\230[\312\032\0313\265`\213\264\221\263D\306\264\342w\241\337\346\347\304-\253ojz\346\364U\210%\322\246\270b\317\317\247\263\263\211\276\244\334\034J-\332\246\245'\322\326\2659\363\301l\002\263x\007\223\377"
 122      BC26 7A5A 
 122      DBDE 3B4F 
 122      9140 4583 
GAS LISTING  			page 9


 122      29BF 641D 
 123 0232 2886 E8AE 	 .ascii "(\206\350\256"
 124               	 .text
 125               	 .section .gnu.lto_.symtab.94d9018ef16c706c,"",@progbits
 126 0000 5365 6E64 	 .string "SendBufferWS"
 126      4275 6666 
 126      6572 5753 
 126      00
 127 000d 00        	 .string ""
 128 000e 00        	 .string ""
 129 000f 00        	 .string ""
 130 0010 00        	 .string ""
 131 0011 00        	 .string ""
 132 0012 00        	 .string ""
 133 0013 00        	 .string ""
 134 0014 00        	 .string ""
 135 0015 00        	 .string ""
 136 0016 00        	 .string ""
 137 0017 00        	 .string ""
 138 0018 A100      	 .string "\241"
 139 001a 00        	 .string ""
 140 001b 00        	 .string ""
 141 001c 5365 744D 	 .string "SetManyWS"
 141      616E 7957 
 141      5300 
 142 0026 00        	 .string ""
 143 0027 00        	 .string ""
 144 0028 00        	 .string ""
 145 0029 00        	 .string ""
 146 002a 00        	 .string ""
 147 002b 00        	 .string ""
 148 002c 00        	 .string ""
 149 002d 00        	 .string ""
 150 002e 00        	 .string ""
 151 002f 00        	 .string ""
 152 0030 00        	 .string ""
 153 0031 B000      	 .string "\260"
 154 0033 00        	 .string ""
 155 0034 00        	 .string ""
 156               	 .text
 157               	 .section .gnu.lto_.opts,"",@progbits
 158 0000 272D 6D6D 	 .string "'-mmcu=atmega32u2' '-mrelax' '-gdwarf-2' '-g2' '-Os' '-flto' '-fwhole-program'"
 158      6375 3D61 
 158      746D 6567 
 158      6133 3275 
 158      3227 2027 
 159               	 .text
 160               	 .cfi_sections .debug_frame
 161               	.global SendBufferWS
 163               	SendBufferWS:
 164               	.LFB0:
 165               	 .file 1 "ws2812.c"
   1:ws2812.c      **** #include "ws2812.h"
   2:ws2812.c      **** 
   3:ws2812.c      **** void SendBufferWS( uint8_t * buffer, int count )
   4:ws2812.c      **** {
 166               	 .loc 1 4 0
GAS LISTING  			page 10


 167               	 .cfi_startproc
 168               	.LVL0:
 169               	 
 170               	 
 171               	 
 172               	.L__stack_usage =0
 173 0000 FC01      	 movw r30,r24
   5:ws2812.c      **** 	int i;
   6:ws2812.c      **** 	uint8_t mask, v;
   7:ws2812.c      **** 	for( i = 0; i < count; i++ )
 174               	 .loc 1 7 0
 175 0002 80E0      	 ldi r24,0
 176 0004 90E0      	 ldi r25,0
 177               	.LVL1:
 178               	.L2:
 179               	 .loc 1 7 0 is_stmt 0 discriminator 1
 180 0006 8617      	 cp r24,r22
 181 0008 9707      	 cpc r25,r23
 182 000a 04F0      	 brlt .+2
 183 000c 00C0      	 rjmp .L17
   8:ws2812.c      **** 	{
   9:ws2812.c      **** 		SEND_WS( (*buffer++) );
 184               	 .loc 1 9 0 is_stmt 1
 185 000e 539A      	 sbi 0xa,3
 186               	.LVL2:
 187 0010 4081      	 ld r20,Z
 188               	.LVL3:
 189 0012 20E8      	 ldi r18,lo8(-128)
 190               	.LVL4:
 191               	.L6:
 192               	 .loc 1 9 0 is_stmt 0 discriminator 2
 193 0014 522F      	 mov r21,r18
 194 0016 5423      	 and r21,r20
 195 0018 322F      	 mov r19,r18
 196 001a 3695      	 lsr r19
 197 001c 5B9A      	 sbi 0xb,3
 198 001e 5523      	 tst r21
 199 0020 01F0      	 breq .L3
 200               	 .loc 1 9 0 discriminator 1
 201 0022 232F      	 mov r18,r19
 202               	.LVL5:
 203               	 
 204               	 
 205 0024 0000      	 nop
 206               	 
 207               	 
 208 0026 0000      	 nop
 209               	 
 210               	 
 211 0028 0000      	 nop
 212               	 
 213               	 
 214 002a 0000      	 nop
 215               	 
 216               	 
 217 002c 0000      	 nop
 218               	 
GAS LISTING  			page 11


 219               	 
 220 002e 0000      	 nop
 221               	 
 222               	 
 223 0030 0000      	 nop
 224               	 
 225               	 
 226 0032 0000      	 nop
 227               	 
 228               	 
 229 0034 5B98      	 cbi 0xb,3
 230 0036 00C0      	 rjmp .L4
 231               	.L3:
 232               	 .loc 1 9 0 discriminator 2
 233               	 
 234               	 
 235 0038 0000      	 nop
 236               	 
 237               	 
 238 003a 5B98      	 cbi 0xb,3
 239 003c 232F      	 mov r18,r19
 240               	.LVL6:
 241               	 
 242               	 
 243 003e 0000      	 nop
 244               	 
 245               	 
 246 0040 0000      	 nop
 247               	 
 248               	 
 249 0042 0000      	 nop
 250               	 
 251               	 
 252 0044 0000      	 nop
 253               	 
 254               	 
 255               	.L4:
 256               	 .loc 1 9 0 discriminator 1
 257 0046 3111      	 cpse r19,__zero_reg__
 258 0048 00C0      	 rjmp .L6
  10:ws2812.c      **** 		SEND_WS( (*buffer++) );
 259               	 .loc 1 10 0 is_stmt 1
 260 004a 539A      	 sbi 0xa,3
 261               	.LVL7:
 262 004c 4181      	 ldd r20,Z+1
 263               	.LVL8:
 264 004e 20E8      	 ldi r18,lo8(-128)
 265               	.LVL9:
 266               	.L10:
 267               	 .loc 1 10 0 is_stmt 0 discriminator 2
 268 0050 522F      	 mov r21,r18
 269 0052 5423      	 and r21,r20
 270 0054 322F      	 mov r19,r18
 271 0056 3695      	 lsr r19
 272 0058 5B9A      	 sbi 0xb,3
 273 005a 5523      	 tst r21
 274 005c 01F0      	 breq .L7
GAS LISTING  			page 12


 275               	 .loc 1 10 0 discriminator 1
 276 005e 232F      	 mov r18,r19
 277               	.LVL10:
 278               	 
 279               	 
 280 0060 0000      	 nop
 281               	 
 282               	 
 283 0062 0000      	 nop
 284               	 
 285               	 
 286 0064 0000      	 nop
 287               	 
 288               	 
 289 0066 0000      	 nop
 290               	 
 291               	 
 292 0068 0000      	 nop
 293               	 
 294               	 
 295 006a 0000      	 nop
 296               	 
 297               	 
 298 006c 0000      	 nop
 299               	 
 300               	 
 301 006e 0000      	 nop
 302               	 
 303               	 
 304 0070 5B98      	 cbi 0xb,3
 305 0072 00C0      	 rjmp .L8
 306               	.L7:
 307               	 .loc 1 10 0 discriminator 2
 308               	 
 309               	 
 310 0074 0000      	 nop
 311               	 
 312               	 
 313 0076 5B98      	 cbi 0xb,3
 314 0078 232F      	 mov r18,r19
 315               	.LVL11:
 316               	 
 317               	 
 318 007a 0000      	 nop
 319               	 
 320               	 
 321 007c 0000      	 nop
 322               	 
 323               	 
 324 007e 0000      	 nop
 325               	 
 326               	 
 327 0080 0000      	 nop
 328               	 
 329               	 
 330               	.L8:
 331               	 .loc 1 10 0 discriminator 1
GAS LISTING  			page 13


 332 0082 3111      	 cpse r19,__zero_reg__
 333 0084 00C0      	 rjmp .L10
  11:ws2812.c      **** 		SEND_WS( (*buffer++) );
 334               	 .loc 1 11 0 is_stmt 1
 335 0086 539A      	 sbi 0xa,3
 336               	.LVL12:
 337 0088 4281      	 ldd r20,Z+2
 338               	.LVL13:
 339 008a 20E8      	 ldi r18,lo8(-128)
 340               	.LVL14:
 341               	.L14:
 342               	 .loc 1 11 0 is_stmt 0 discriminator 2
 343 008c 522F      	 mov r21,r18
 344 008e 5423      	 and r21,r20
 345 0090 322F      	 mov r19,r18
 346 0092 3695      	 lsr r19
 347 0094 5B9A      	 sbi 0xb,3
 348 0096 5523      	 tst r21
 349 0098 01F0      	 breq .L11
 350               	 .loc 1 11 0 discriminator 1
 351 009a 232F      	 mov r18,r19
 352               	.LVL15:
 353               	 
 354               	 
 355 009c 0000      	 nop
 356               	 
 357               	 
 358 009e 0000      	 nop
 359               	 
 360               	 
 361 00a0 0000      	 nop
 362               	 
 363               	 
 364 00a2 0000      	 nop
 365               	 
 366               	 
 367 00a4 0000      	 nop
 368               	 
 369               	 
 370 00a6 0000      	 nop
 371               	 
 372               	 
 373 00a8 0000      	 nop
 374               	 
 375               	 
 376 00aa 0000      	 nop
 377               	 
 378               	 
 379 00ac 5B98      	 cbi 0xb,3
 380 00ae 00C0      	 rjmp .L12
 381               	.L11:
 382               	 .loc 1 11 0 discriminator 2
 383               	 
 384               	 
 385 00b0 0000      	 nop
 386               	 
 387               	 
GAS LISTING  			page 14


 388 00b2 5B98      	 cbi 0xb,3
 389 00b4 232F      	 mov r18,r19
 390               	.LVL16:
 391               	 
 392               	 
 393 00b6 0000      	 nop
 394               	 
 395               	 
 396 00b8 0000      	 nop
 397               	 
 398               	 
 399 00ba 0000      	 nop
 400               	 
 401               	 
 402 00bc 0000      	 nop
 403               	 
 404               	 
 405               	.L12:
 406               	 .loc 1 11 0 discriminator 1
 407 00be 3111      	 cpse r19,__zero_reg__
 408 00c0 00C0      	 rjmp .L14
   7:ws2812.c      **** 	for( i = 0; i < count; i++ )
 409               	 .loc 1 7 0 is_stmt 1
 410 00c2 0196      	 adiw r24,1
 411               	.LVL17:
 412 00c4 3396      	 adiw r30,3
 413               	.LVL18:
 414 00c6 00C0      	 rjmp .L2
 415               	.LVL19:
 416               	.L17:
 417               	 
  12:ws2812.c      **** 	}
  13:ws2812.c      **** }
 418               	 .loc 1 13 0
 419 00c8 0895      	 ret
 420               	 .cfi_endproc
 421               	.LFE0:
 423               	.global SetManyWS
 425               	SetManyWS:
 426               	.LFB1:
  14:ws2812.c      **** 
  15:ws2812.c      **** void SetManyWS( uint8_t r, uint8_t g, uint8_t b, int count )
  16:ws2812.c      **** {
 427               	 .loc 1 16 0
 428               	 .cfi_startproc
 429               	.LVL20:
 430               	 
 431               	 
 432               	 
 433               	.L__stack_usage =0
  17:ws2812.c      **** 	int i;
  18:ws2812.c      **** 	uint8_t mask, v;
  19:ws2812.c      **** 	for( i = 0; i < count; i++ )
 434               	 .loc 1 19 0
 435 00ca E0E0      	 ldi r30,0
 436 00cc F0E0      	 ldi r31,0
 437               	.LVL21:
GAS LISTING  			page 15


 438               	.L19:
 439               	 .loc 1 19 0 is_stmt 0 discriminator 1
 440 00ce E217      	 cp r30,r18
 441 00d0 F307      	 cpc r31,r19
 442 00d2 04F0      	 brlt .+2
 443 00d4 00C0      	 rjmp .L33
  20:ws2812.c      **** 	{
  21:ws2812.c      **** 		SEND_WS( g );
 444               	 .loc 1 21 0 is_stmt 1
 445 00d6 539A      	 sbi 0xa,3
 446               	.LVL22:
 447 00d8 90E8      	 ldi r25,lo8(-128)
 448               	.LVL23:
 449               	.L23:
 450               	 .loc 1 21 0 is_stmt 0 discriminator 2
 451 00da 792F      	 mov r23,r25
 452 00dc 7623      	 and r23,r22
 453 00de 592F      	 mov r21,r25
 454 00e0 5695      	 lsr r21
 455 00e2 5B9A      	 sbi 0xb,3
 456 00e4 7723      	 tst r23
 457 00e6 01F0      	 breq .L20
 458               	 .loc 1 21 0 discriminator 1
 459 00e8 952F      	 mov r25,r21
 460               	.LVL24:
 461               	 
 462               	 
 463 00ea 0000      	 nop
 464               	 
 465               	 
 466 00ec 0000      	 nop
 467               	 
 468               	 
 469 00ee 0000      	 nop
 470               	 
 471               	 
 472 00f0 0000      	 nop
 473               	 
 474               	 
 475 00f2 0000      	 nop
 476               	 
 477               	 
 478 00f4 0000      	 nop
 479               	 
 480               	 
 481 00f6 0000      	 nop
 482               	 
 483               	 
 484 00f8 0000      	 nop
 485               	 
 486               	 
 487 00fa 5B98      	 cbi 0xb,3
 488 00fc 00C0      	 rjmp .L21
 489               	.LVL25:
 490               	.L20:
 491               	 .loc 1 21 0 discriminator 2
 492               	 
GAS LISTING  			page 16


 493               	 
 494 00fe 0000      	 nop
 495               	 
 496               	 
 497 0100 5B98      	 cbi 0xb,3
 498 0102 952F      	 mov r25,r21
 499               	.LVL26:
 500               	 
 501               	 
 502 0104 0000      	 nop
 503               	 
 504               	 
 505 0106 0000      	 nop
 506               	 
 507               	 
 508 0108 0000      	 nop
 509               	 
 510               	 
 511 010a 0000      	 nop
 512               	 
 513               	.LVL27:
 514               	 
 515               	.L21:
 516               	 .loc 1 21 0 discriminator 1
 517 010c 5111      	 cpse r21,__zero_reg__
 518 010e 00C0      	 rjmp .L23
  22:ws2812.c      **** 		SEND_WS( r );
 519               	 .loc 1 22 0 is_stmt 1
 520 0110 539A      	 sbi 0xa,3
 521               	.LVL28:
 522 0112 90E8      	 ldi r25,lo8(-128)
 523               	.LVL29:
 524               	.L27:
 525               	 .loc 1 22 0 is_stmt 0 discriminator 2
 526 0114 792F      	 mov r23,r25
 527 0116 7823      	 and r23,r24
 528 0118 592F      	 mov r21,r25
 529 011a 5695      	 lsr r21
 530 011c 5B9A      	 sbi 0xb,3
 531 011e 7723      	 tst r23
 532 0120 01F0      	 breq .L24
 533               	 .loc 1 22 0 discriminator 1
 534 0122 952F      	 mov r25,r21
 535               	.LVL30:
 536               	 
 537               	 
 538 0124 0000      	 nop
 539               	 
 540               	 
 541 0126 0000      	 nop
 542               	 
 543               	 
 544 0128 0000      	 nop
 545               	 
 546               	 
 547 012a 0000      	 nop
 548               	 
GAS LISTING  			page 17


 549               	 
 550 012c 0000      	 nop
 551               	 
 552               	 
 553 012e 0000      	 nop
 554               	 
 555               	 
 556 0130 0000      	 nop
 557               	 
 558               	 
 559 0132 0000      	 nop
 560               	 
 561               	 
 562 0134 5B98      	 cbi 0xb,3
 563 0136 00C0      	 rjmp .L25
 564               	.LVL31:
 565               	.L24:
 566               	 .loc 1 22 0 discriminator 2
 567               	 
 568               	 
 569 0138 0000      	 nop
 570               	 
 571               	 
 572 013a 5B98      	 cbi 0xb,3
 573 013c 952F      	 mov r25,r21
 574               	.LVL32:
 575               	 
 576               	 
 577 013e 0000      	 nop
 578               	 
 579               	 
 580 0140 0000      	 nop
 581               	 
 582               	 
 583 0142 0000      	 nop
 584               	 
 585               	 
 586 0144 0000      	 nop
 587               	 
 588               	.LVL33:
 589               	 
 590               	.L25:
 591               	 .loc 1 22 0 discriminator 1
 592 0146 5111      	 cpse r21,__zero_reg__
 593 0148 00C0      	 rjmp .L27
  23:ws2812.c      **** 		SEND_WS( b );
 594               	 .loc 1 23 0 is_stmt 1
 595 014a 539A      	 sbi 0xa,3
 596               	.LVL34:
 597 014c 90E8      	 ldi r25,lo8(-128)
 598               	.LVL35:
 599               	.L31:
 600               	 .loc 1 23 0 is_stmt 0 discriminator 2
 601 014e 792F      	 mov r23,r25
 602 0150 7423      	 and r23,r20
 603 0152 592F      	 mov r21,r25
 604 0154 5695      	 lsr r21
GAS LISTING  			page 18


 605 0156 5B9A      	 sbi 0xb,3
 606 0158 7723      	 tst r23
 607 015a 01F0      	 breq .L28
 608               	 .loc 1 23 0 discriminator 1
 609 015c 952F      	 mov r25,r21
 610               	.LVL36:
 611               	 
 612               	 
 613 015e 0000      	 nop
 614               	 
 615               	 
 616 0160 0000      	 nop
 617               	 
 618               	 
 619 0162 0000      	 nop
 620               	 
 621               	 
 622 0164 0000      	 nop
 623               	 
 624               	 
 625 0166 0000      	 nop
 626               	 
 627               	 
 628 0168 0000      	 nop
 629               	 
 630               	 
 631 016a 0000      	 nop
 632               	 
 633               	 
 634 016c 0000      	 nop
 635               	 
 636               	 
 637 016e 5B98      	 cbi 0xb,3
 638 0170 00C0      	 rjmp .L29
 639               	.LVL37:
 640               	.L28:
 641               	 .loc 1 23 0 discriminator 2
 642               	 
 643               	 
 644 0172 0000      	 nop
 645               	 
 646               	 
 647 0174 5B98      	 cbi 0xb,3
 648 0176 952F      	 mov r25,r21
 649               	.LVL38:
 650               	 
 651               	 
 652 0178 0000      	 nop
 653               	 
 654               	 
 655 017a 0000      	 nop
 656               	 
 657               	 
 658 017c 0000      	 nop
 659               	 
 660               	 
 661 017e 0000      	 nop
GAS LISTING  			page 19


 662               	 
 663               	.LVL39:
 664               	 
 665               	.L29:
 666               	 .loc 1 23 0 discriminator 1
 667 0180 5111      	 cpse r21,__zero_reg__
 668 0182 00C0      	 rjmp .L31
  19:ws2812.c      **** 	for( i = 0; i < count; i++ )
 669               	 .loc 1 19 0 is_stmt 1
 670 0184 3196      	 adiw r30,1
 671               	.LVL40:
 672 0186 00C0      	 rjmp .L19
 673               	.LVL41:
 674               	.L33:
 675               	 
  24:ws2812.c      **** 	}
  25:ws2812.c      **** }
 676               	 .loc 1 25 0
 677 0188 0895      	 ret
 678               	 .cfi_endproc
 679               	.LFE1:
 681               	.Letext0:
 682               	 .file 2 "/usr/lib/avr/include/stdint.h"
GAS LISTING  			page 20


DEFINED SYMBOLS
                            *ABS*:0000000000000000 ws2812.c
    {standard input}:2      *ABS*:000000000000003e __SP_H__
    {standard input}:3      *ABS*:000000000000003d __SP_L__
    {standard input}:4      *ABS*:000000000000003f __SREG__
    {standard input}:5      *ABS*:0000000000000000 __tmp_reg__
    {standard input}:6      *ABS*:0000000000000001 __zero_reg__
    {standard input}:163    .text:0000000000000000 SendBufferWS
    {standard input}:425    .text:00000000000000ca SetManyWS
                            *COM*:0000000000000001 __gnu_lto_v1

NO UNDEFINED SYMBOLS
